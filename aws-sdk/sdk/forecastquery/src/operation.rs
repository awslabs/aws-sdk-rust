// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// Operation shape for `QueryForecast`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`query_forecast`](crate::client::Client::query_forecast).
///
/// See [`crate::client::fluent_builders::QueryForecast`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct QueryForecast {
    _private: (),
}
impl QueryForecast {
    /// Creates a new builder-style object to manufacture [`QueryForecastInput`](crate::input::QueryForecastInput)
    pub fn builder() -> crate::input::query_forecast_input::Builder {
        crate::input::query_forecast_input::Builder::default()
    }
    /// Creates a new `QueryForecast` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for QueryForecast {
    type Output =
        std::result::Result<crate::output::QueryForecastOutput, crate::error::QueryForecastError>;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_query_forecast_error(response)
        } else {
            crate::operation_deser::parse_query_forecast_response(response)
        }
    }
}
