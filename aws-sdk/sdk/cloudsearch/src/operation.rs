// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// Operation shape for `BuildSuggesters`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`build_suggesters`](crate::client::Client::build_suggesters).
///
/// See [`crate::client::fluent_builders::BuildSuggesters`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct BuildSuggesters {
    _private: (),
}
impl BuildSuggesters {
    /// Creates a new builder-style object to manufacture [`BuildSuggestersInput`](crate::input::BuildSuggestersInput)
    pub fn builder() -> crate::input::build_suggesters_input::Builder {
        crate::input::build_suggesters_input::Builder::default()
    }
    /// Creates a new `BuildSuggesters` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for BuildSuggesters {
    type Output = std::result::Result<
        crate::output::BuildSuggestersOutput,
        crate::error::BuildSuggestersError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_build_suggesters_error(response)
        } else {
            crate::operation_deser::parse_build_suggesters_response(response)
        }
    }
}

/// Operation shape for `CreateDomain`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`create_domain`](crate::client::Client::create_domain).
///
/// See [`crate::client::fluent_builders::CreateDomain`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct CreateDomain {
    _private: (),
}
impl CreateDomain {
    /// Creates a new builder-style object to manufacture [`CreateDomainInput`](crate::input::CreateDomainInput)
    pub fn builder() -> crate::input::create_domain_input::Builder {
        crate::input::create_domain_input::Builder::default()
    }
    /// Creates a new `CreateDomain` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for CreateDomain {
    type Output =
        std::result::Result<crate::output::CreateDomainOutput, crate::error::CreateDomainError>;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_create_domain_error(response)
        } else {
            crate::operation_deser::parse_create_domain_response(response)
        }
    }
}

/// Operation shape for `DefineAnalysisScheme`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`define_analysis_scheme`](crate::client::Client::define_analysis_scheme).
///
/// See [`crate::client::fluent_builders::DefineAnalysisScheme`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DefineAnalysisScheme {
    _private: (),
}
impl DefineAnalysisScheme {
    /// Creates a new builder-style object to manufacture [`DefineAnalysisSchemeInput`](crate::input::DefineAnalysisSchemeInput)
    pub fn builder() -> crate::input::define_analysis_scheme_input::Builder {
        crate::input::define_analysis_scheme_input::Builder::default()
    }
    /// Creates a new `DefineAnalysisScheme` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DefineAnalysisScheme {
    type Output = std::result::Result<
        crate::output::DefineAnalysisSchemeOutput,
        crate::error::DefineAnalysisSchemeError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_define_analysis_scheme_error(response)
        } else {
            crate::operation_deser::parse_define_analysis_scheme_response(response)
        }
    }
}

/// Operation shape for `DefineExpression`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`define_expression`](crate::client::Client::define_expression).
///
/// See [`crate::client::fluent_builders::DefineExpression`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DefineExpression {
    _private: (),
}
impl DefineExpression {
    /// Creates a new builder-style object to manufacture [`DefineExpressionInput`](crate::input::DefineExpressionInput)
    pub fn builder() -> crate::input::define_expression_input::Builder {
        crate::input::define_expression_input::Builder::default()
    }
    /// Creates a new `DefineExpression` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DefineExpression {
    type Output = std::result::Result<
        crate::output::DefineExpressionOutput,
        crate::error::DefineExpressionError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_define_expression_error(response)
        } else {
            crate::operation_deser::parse_define_expression_response(response)
        }
    }
}

/// Operation shape for `DefineIndexField`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`define_index_field`](crate::client::Client::define_index_field).
///
/// See [`crate::client::fluent_builders::DefineIndexField`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DefineIndexField {
    _private: (),
}
impl DefineIndexField {
    /// Creates a new builder-style object to manufacture [`DefineIndexFieldInput`](crate::input::DefineIndexFieldInput)
    pub fn builder() -> crate::input::define_index_field_input::Builder {
        crate::input::define_index_field_input::Builder::default()
    }
    /// Creates a new `DefineIndexField` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DefineIndexField {
    type Output = std::result::Result<
        crate::output::DefineIndexFieldOutput,
        crate::error::DefineIndexFieldError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_define_index_field_error(response)
        } else {
            crate::operation_deser::parse_define_index_field_response(response)
        }
    }
}

/// Operation shape for `DefineSuggester`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`define_suggester`](crate::client::Client::define_suggester).
///
/// See [`crate::client::fluent_builders::DefineSuggester`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DefineSuggester {
    _private: (),
}
impl DefineSuggester {
    /// Creates a new builder-style object to manufacture [`DefineSuggesterInput`](crate::input::DefineSuggesterInput)
    pub fn builder() -> crate::input::define_suggester_input::Builder {
        crate::input::define_suggester_input::Builder::default()
    }
    /// Creates a new `DefineSuggester` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DefineSuggester {
    type Output = std::result::Result<
        crate::output::DefineSuggesterOutput,
        crate::error::DefineSuggesterError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_define_suggester_error(response)
        } else {
            crate::operation_deser::parse_define_suggester_response(response)
        }
    }
}

/// Operation shape for `DeleteAnalysisScheme`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`delete_analysis_scheme`](crate::client::Client::delete_analysis_scheme).
///
/// See [`crate::client::fluent_builders::DeleteAnalysisScheme`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DeleteAnalysisScheme {
    _private: (),
}
impl DeleteAnalysisScheme {
    /// Creates a new builder-style object to manufacture [`DeleteAnalysisSchemeInput`](crate::input::DeleteAnalysisSchemeInput)
    pub fn builder() -> crate::input::delete_analysis_scheme_input::Builder {
        crate::input::delete_analysis_scheme_input::Builder::default()
    }
    /// Creates a new `DeleteAnalysisScheme` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DeleteAnalysisScheme {
    type Output = std::result::Result<
        crate::output::DeleteAnalysisSchemeOutput,
        crate::error::DeleteAnalysisSchemeError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_delete_analysis_scheme_error(response)
        } else {
            crate::operation_deser::parse_delete_analysis_scheme_response(response)
        }
    }
}

/// Operation shape for `DeleteDomain`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`delete_domain`](crate::client::Client::delete_domain).
///
/// See [`crate::client::fluent_builders::DeleteDomain`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DeleteDomain {
    _private: (),
}
impl DeleteDomain {
    /// Creates a new builder-style object to manufacture [`DeleteDomainInput`](crate::input::DeleteDomainInput)
    pub fn builder() -> crate::input::delete_domain_input::Builder {
        crate::input::delete_domain_input::Builder::default()
    }
    /// Creates a new `DeleteDomain` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DeleteDomain {
    type Output =
        std::result::Result<crate::output::DeleteDomainOutput, crate::error::DeleteDomainError>;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_delete_domain_error(response)
        } else {
            crate::operation_deser::parse_delete_domain_response(response)
        }
    }
}

/// Operation shape for `DeleteExpression`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`delete_expression`](crate::client::Client::delete_expression).
///
/// See [`crate::client::fluent_builders::DeleteExpression`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DeleteExpression {
    _private: (),
}
impl DeleteExpression {
    /// Creates a new builder-style object to manufacture [`DeleteExpressionInput`](crate::input::DeleteExpressionInput)
    pub fn builder() -> crate::input::delete_expression_input::Builder {
        crate::input::delete_expression_input::Builder::default()
    }
    /// Creates a new `DeleteExpression` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DeleteExpression {
    type Output = std::result::Result<
        crate::output::DeleteExpressionOutput,
        crate::error::DeleteExpressionError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_delete_expression_error(response)
        } else {
            crate::operation_deser::parse_delete_expression_response(response)
        }
    }
}

/// Operation shape for `DeleteIndexField`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`delete_index_field`](crate::client::Client::delete_index_field).
///
/// See [`crate::client::fluent_builders::DeleteIndexField`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DeleteIndexField {
    _private: (),
}
impl DeleteIndexField {
    /// Creates a new builder-style object to manufacture [`DeleteIndexFieldInput`](crate::input::DeleteIndexFieldInput)
    pub fn builder() -> crate::input::delete_index_field_input::Builder {
        crate::input::delete_index_field_input::Builder::default()
    }
    /// Creates a new `DeleteIndexField` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DeleteIndexField {
    type Output = std::result::Result<
        crate::output::DeleteIndexFieldOutput,
        crate::error::DeleteIndexFieldError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_delete_index_field_error(response)
        } else {
            crate::operation_deser::parse_delete_index_field_response(response)
        }
    }
}

/// Operation shape for `DeleteSuggester`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`delete_suggester`](crate::client::Client::delete_suggester).
///
/// See [`crate::client::fluent_builders::DeleteSuggester`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DeleteSuggester {
    _private: (),
}
impl DeleteSuggester {
    /// Creates a new builder-style object to manufacture [`DeleteSuggesterInput`](crate::input::DeleteSuggesterInput)
    pub fn builder() -> crate::input::delete_suggester_input::Builder {
        crate::input::delete_suggester_input::Builder::default()
    }
    /// Creates a new `DeleteSuggester` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DeleteSuggester {
    type Output = std::result::Result<
        crate::output::DeleteSuggesterOutput,
        crate::error::DeleteSuggesterError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_delete_suggester_error(response)
        } else {
            crate::operation_deser::parse_delete_suggester_response(response)
        }
    }
}

/// Operation shape for `DescribeAnalysisSchemes`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_analysis_schemes`](crate::client::Client::describe_analysis_schemes).
///
/// See [`crate::client::fluent_builders::DescribeAnalysisSchemes`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeAnalysisSchemes {
    _private: (),
}
impl DescribeAnalysisSchemes {
    /// Creates a new builder-style object to manufacture [`DescribeAnalysisSchemesInput`](crate::input::DescribeAnalysisSchemesInput)
    pub fn builder() -> crate::input::describe_analysis_schemes_input::Builder {
        crate::input::describe_analysis_schemes_input::Builder::default()
    }
    /// Creates a new `DescribeAnalysisSchemes` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeAnalysisSchemes {
    type Output = std::result::Result<
        crate::output::DescribeAnalysisSchemesOutput,
        crate::error::DescribeAnalysisSchemesError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_analysis_schemes_error(response)
        } else {
            crate::operation_deser::parse_describe_analysis_schemes_response(response)
        }
    }
}

/// Operation shape for `DescribeAvailabilityOptions`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_availability_options`](crate::client::Client::describe_availability_options).
///
/// See [`crate::client::fluent_builders::DescribeAvailabilityOptions`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeAvailabilityOptions {
    _private: (),
}
impl DescribeAvailabilityOptions {
    /// Creates a new builder-style object to manufacture [`DescribeAvailabilityOptionsInput`](crate::input::DescribeAvailabilityOptionsInput)
    pub fn builder() -> crate::input::describe_availability_options_input::Builder {
        crate::input::describe_availability_options_input::Builder::default()
    }
    /// Creates a new `DescribeAvailabilityOptions` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeAvailabilityOptions {
    type Output = std::result::Result<
        crate::output::DescribeAvailabilityOptionsOutput,
        crate::error::DescribeAvailabilityOptionsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_availability_options_error(response)
        } else {
            crate::operation_deser::parse_describe_availability_options_response(response)
        }
    }
}

/// Operation shape for `DescribeDomainEndpointOptions`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_domain_endpoint_options`](crate::client::Client::describe_domain_endpoint_options).
///
/// See [`crate::client::fluent_builders::DescribeDomainEndpointOptions`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeDomainEndpointOptions {
    _private: (),
}
impl DescribeDomainEndpointOptions {
    /// Creates a new builder-style object to manufacture [`DescribeDomainEndpointOptionsInput`](crate::input::DescribeDomainEndpointOptionsInput)
    pub fn builder() -> crate::input::describe_domain_endpoint_options_input::Builder {
        crate::input::describe_domain_endpoint_options_input::Builder::default()
    }
    /// Creates a new `DescribeDomainEndpointOptions` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeDomainEndpointOptions {
    type Output = std::result::Result<
        crate::output::DescribeDomainEndpointOptionsOutput,
        crate::error::DescribeDomainEndpointOptionsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_domain_endpoint_options_error(response)
        } else {
            crate::operation_deser::parse_describe_domain_endpoint_options_response(response)
        }
    }
}

/// Operation shape for `DescribeDomains`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_domains`](crate::client::Client::describe_domains).
///
/// See [`crate::client::fluent_builders::DescribeDomains`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeDomains {
    _private: (),
}
impl DescribeDomains {
    /// Creates a new builder-style object to manufacture [`DescribeDomainsInput`](crate::input::DescribeDomainsInput)
    pub fn builder() -> crate::input::describe_domains_input::Builder {
        crate::input::describe_domains_input::Builder::default()
    }
    /// Creates a new `DescribeDomains` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeDomains {
    type Output = std::result::Result<
        crate::output::DescribeDomainsOutput,
        crate::error::DescribeDomainsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_domains_error(response)
        } else {
            crate::operation_deser::parse_describe_domains_response(response)
        }
    }
}

/// Operation shape for `DescribeExpressions`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_expressions`](crate::client::Client::describe_expressions).
///
/// See [`crate::client::fluent_builders::DescribeExpressions`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeExpressions {
    _private: (),
}
impl DescribeExpressions {
    /// Creates a new builder-style object to manufacture [`DescribeExpressionsInput`](crate::input::DescribeExpressionsInput)
    pub fn builder() -> crate::input::describe_expressions_input::Builder {
        crate::input::describe_expressions_input::Builder::default()
    }
    /// Creates a new `DescribeExpressions` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeExpressions {
    type Output = std::result::Result<
        crate::output::DescribeExpressionsOutput,
        crate::error::DescribeExpressionsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_expressions_error(response)
        } else {
            crate::operation_deser::parse_describe_expressions_response(response)
        }
    }
}

/// Operation shape for `DescribeIndexFields`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_index_fields`](crate::client::Client::describe_index_fields).
///
/// See [`crate::client::fluent_builders::DescribeIndexFields`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeIndexFields {
    _private: (),
}
impl DescribeIndexFields {
    /// Creates a new builder-style object to manufacture [`DescribeIndexFieldsInput`](crate::input::DescribeIndexFieldsInput)
    pub fn builder() -> crate::input::describe_index_fields_input::Builder {
        crate::input::describe_index_fields_input::Builder::default()
    }
    /// Creates a new `DescribeIndexFields` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeIndexFields {
    type Output = std::result::Result<
        crate::output::DescribeIndexFieldsOutput,
        crate::error::DescribeIndexFieldsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_index_fields_error(response)
        } else {
            crate::operation_deser::parse_describe_index_fields_response(response)
        }
    }
}

/// Operation shape for `DescribeScalingParameters`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_scaling_parameters`](crate::client::Client::describe_scaling_parameters).
///
/// See [`crate::client::fluent_builders::DescribeScalingParameters`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeScalingParameters {
    _private: (),
}
impl DescribeScalingParameters {
    /// Creates a new builder-style object to manufacture [`DescribeScalingParametersInput`](crate::input::DescribeScalingParametersInput)
    pub fn builder() -> crate::input::describe_scaling_parameters_input::Builder {
        crate::input::describe_scaling_parameters_input::Builder::default()
    }
    /// Creates a new `DescribeScalingParameters` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeScalingParameters {
    type Output = std::result::Result<
        crate::output::DescribeScalingParametersOutput,
        crate::error::DescribeScalingParametersError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_scaling_parameters_error(response)
        } else {
            crate::operation_deser::parse_describe_scaling_parameters_response(response)
        }
    }
}

/// Operation shape for `DescribeServiceAccessPolicies`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_service_access_policies`](crate::client::Client::describe_service_access_policies).
///
/// See [`crate::client::fluent_builders::DescribeServiceAccessPolicies`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeServiceAccessPolicies {
    _private: (),
}
impl DescribeServiceAccessPolicies {
    /// Creates a new builder-style object to manufacture [`DescribeServiceAccessPoliciesInput`](crate::input::DescribeServiceAccessPoliciesInput)
    pub fn builder() -> crate::input::describe_service_access_policies_input::Builder {
        crate::input::describe_service_access_policies_input::Builder::default()
    }
    /// Creates a new `DescribeServiceAccessPolicies` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeServiceAccessPolicies {
    type Output = std::result::Result<
        crate::output::DescribeServiceAccessPoliciesOutput,
        crate::error::DescribeServiceAccessPoliciesError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_service_access_policies_error(response)
        } else {
            crate::operation_deser::parse_describe_service_access_policies_response(response)
        }
    }
}

/// Operation shape for `DescribeSuggesters`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_suggesters`](crate::client::Client::describe_suggesters).
///
/// See [`crate::client::fluent_builders::DescribeSuggesters`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeSuggesters {
    _private: (),
}
impl DescribeSuggesters {
    /// Creates a new builder-style object to manufacture [`DescribeSuggestersInput`](crate::input::DescribeSuggestersInput)
    pub fn builder() -> crate::input::describe_suggesters_input::Builder {
        crate::input::describe_suggesters_input::Builder::default()
    }
    /// Creates a new `DescribeSuggesters` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeSuggesters {
    type Output = std::result::Result<
        crate::output::DescribeSuggestersOutput,
        crate::error::DescribeSuggestersError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_suggesters_error(response)
        } else {
            crate::operation_deser::parse_describe_suggesters_response(response)
        }
    }
}

/// Operation shape for `IndexDocuments`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`index_documents`](crate::client::Client::index_documents).
///
/// See [`crate::client::fluent_builders::IndexDocuments`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct IndexDocuments {
    _private: (),
}
impl IndexDocuments {
    /// Creates a new builder-style object to manufacture [`IndexDocumentsInput`](crate::input::IndexDocumentsInput)
    pub fn builder() -> crate::input::index_documents_input::Builder {
        crate::input::index_documents_input::Builder::default()
    }
    /// Creates a new `IndexDocuments` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for IndexDocuments {
    type Output =
        std::result::Result<crate::output::IndexDocumentsOutput, crate::error::IndexDocumentsError>;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_index_documents_error(response)
        } else {
            crate::operation_deser::parse_index_documents_response(response)
        }
    }
}

/// Operation shape for `ListDomainNames`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`list_domain_names`](crate::client::Client::list_domain_names).
///
/// See [`crate::client::fluent_builders::ListDomainNames`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct ListDomainNames {
    _private: (),
}
impl ListDomainNames {
    /// Creates a new builder-style object to manufacture [`ListDomainNamesInput`](crate::input::ListDomainNamesInput)
    pub fn builder() -> crate::input::list_domain_names_input::Builder {
        crate::input::list_domain_names_input::Builder::default()
    }
    /// Creates a new `ListDomainNames` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for ListDomainNames {
    type Output = std::result::Result<
        crate::output::ListDomainNamesOutput,
        crate::error::ListDomainNamesError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_list_domain_names_error(response)
        } else {
            crate::operation_deser::parse_list_domain_names_response(response)
        }
    }
}

/// Operation shape for `UpdateAvailabilityOptions`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`update_availability_options`](crate::client::Client::update_availability_options).
///
/// See [`crate::client::fluent_builders::UpdateAvailabilityOptions`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct UpdateAvailabilityOptions {
    _private: (),
}
impl UpdateAvailabilityOptions {
    /// Creates a new builder-style object to manufacture [`UpdateAvailabilityOptionsInput`](crate::input::UpdateAvailabilityOptionsInput)
    pub fn builder() -> crate::input::update_availability_options_input::Builder {
        crate::input::update_availability_options_input::Builder::default()
    }
    /// Creates a new `UpdateAvailabilityOptions` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for UpdateAvailabilityOptions {
    type Output = std::result::Result<
        crate::output::UpdateAvailabilityOptionsOutput,
        crate::error::UpdateAvailabilityOptionsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_update_availability_options_error(response)
        } else {
            crate::operation_deser::parse_update_availability_options_response(response)
        }
    }
}

/// Operation shape for `UpdateDomainEndpointOptions`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`update_domain_endpoint_options`](crate::client::Client::update_domain_endpoint_options).
///
/// See [`crate::client::fluent_builders::UpdateDomainEndpointOptions`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct UpdateDomainEndpointOptions {
    _private: (),
}
impl UpdateDomainEndpointOptions {
    /// Creates a new builder-style object to manufacture [`UpdateDomainEndpointOptionsInput`](crate::input::UpdateDomainEndpointOptionsInput)
    pub fn builder() -> crate::input::update_domain_endpoint_options_input::Builder {
        crate::input::update_domain_endpoint_options_input::Builder::default()
    }
    /// Creates a new `UpdateDomainEndpointOptions` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for UpdateDomainEndpointOptions {
    type Output = std::result::Result<
        crate::output::UpdateDomainEndpointOptionsOutput,
        crate::error::UpdateDomainEndpointOptionsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_update_domain_endpoint_options_error(response)
        } else {
            crate::operation_deser::parse_update_domain_endpoint_options_response(response)
        }
    }
}

/// Operation shape for `UpdateScalingParameters`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`update_scaling_parameters`](crate::client::Client::update_scaling_parameters).
///
/// See [`crate::client::fluent_builders::UpdateScalingParameters`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct UpdateScalingParameters {
    _private: (),
}
impl UpdateScalingParameters {
    /// Creates a new builder-style object to manufacture [`UpdateScalingParametersInput`](crate::input::UpdateScalingParametersInput)
    pub fn builder() -> crate::input::update_scaling_parameters_input::Builder {
        crate::input::update_scaling_parameters_input::Builder::default()
    }
    /// Creates a new `UpdateScalingParameters` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for UpdateScalingParameters {
    type Output = std::result::Result<
        crate::output::UpdateScalingParametersOutput,
        crate::error::UpdateScalingParametersError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_update_scaling_parameters_error(response)
        } else {
            crate::operation_deser::parse_update_scaling_parameters_response(response)
        }
    }
}

/// Operation shape for `UpdateServiceAccessPolicies`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`update_service_access_policies`](crate::client::Client::update_service_access_policies).
///
/// See [`crate::client::fluent_builders::UpdateServiceAccessPolicies`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct UpdateServiceAccessPolicies {
    _private: (),
}
impl UpdateServiceAccessPolicies {
    /// Creates a new builder-style object to manufacture [`UpdateServiceAccessPoliciesInput`](crate::input::UpdateServiceAccessPoliciesInput)
    pub fn builder() -> crate::input::update_service_access_policies_input::Builder {
        crate::input::update_service_access_policies_input::Builder::default()
    }
    /// Creates a new `UpdateServiceAccessPolicies` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for UpdateServiceAccessPolicies {
    type Output = std::result::Result<
        crate::output::UpdateServiceAccessPoliciesOutput,
        crate::error::UpdateServiceAccessPoliciesError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_update_service_access_policies_error(response)
        } else {
            crate::operation_deser::parse_update_service_access_policies_response(response)
        }
    }
}
