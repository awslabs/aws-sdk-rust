on:
  push:
    branches:
      # A bot pushes changes from smithy-rs to `next`, so run CI when that happens
      - next
  pull_request:
    branches:
      - main
      - next

name: CI

env:
  BATCH_COUNT: 6

jobs:
  generate-test-sdk-matrix:
    runs-on: ubuntu-latest
    name: Generate Test Matrix (SDK)
    steps:
      - uses: actions/checkout@v2
      - name: Generate the matrix
        id: generate-matrix
        # Run the `crate-range.py` script to calculate a test matrix for the `test` job.
        # This script outputs JSON that GitHub Actions can consume as a matrix definition.
        # Rust versions to test against are arguments to this script.
        run: echo "::set-output name=matrix::$(./tools/ci/crate-range.py generate-matrix -b ${BATCH_COUNT} -f sdk 1.54.0 1.56.1)"
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}

  test-sdk:
    needs: generate-test-sdk-matrix
    runs-on: ubuntu-latest
    name: Compile & Test SDK
    env:
      CARGO_INCREMENTAL: "0"
    strategy:
      # Use the matrix generated by the previous job
      matrix: ${{ fromJson(needs.generate-test-sdk-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          default: true
      # Pinned to the commit hash of v1.3.0
      - uses: Swatinem/rust-cache@842ef286fff290e445b90b4002cc9807c3669641
        with:
          sharedKey: test
      - name: Cargo Test
        run: ./tools/ci/crate-range.py run ${{ matrix.crate_range }} -f sdk -- cargo test --all-features
      - name: Cargo Doc
        run: ./tools/ci/crate-range.py run ${{ matrix.crate_range }} -f sdk -- cargo doc --all-features --no-deps

  # Psuedo-job that depends on the test job so that we don't have to enter
  # the myriad of test range combinations into GitHub's protected branch rules
  require-test-sdk:
    needs: test-sdk
    # Run this job even if its dependency jobs fail
    if: always()
    runs-on: ubuntu-latest
    name: Test Matrix Success (SDK)
    steps:
      - name: Verify jobs succeeded
        uses: re-actors/alls-green@3a2de129f0713010a71314c74e33c0e3ef90e696
        with:
          jobs: ${{ toJSON(needs) }}

  generate-test-examples-matrix:
    runs-on: ubuntu-latest
    name: Generate Test Matrix (examples)
    steps:
      - uses: actions/checkout@v2
      - name: Generate the matrix
        id: generate-matrix
        # Run the `crate-range.py` script to calculate a test matrix for the `test` job.
        # This script outputs JSON that GitHub Actions can consume as a matrix definition.
        # Rust versions to test against are arguments to this script.
        run: echo "::set-output name=matrix::$(./tools/ci/crate-range.py generate-matrix -b ${BATCH_COUNT} -f examples 1.54.0 1.56.1)"
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}

  test-examples:
    needs: generate-test-examples-matrix
    runs-on: ubuntu-latest
    name: Compile & Test Examples
    env:
      CARGO_INCREMENTAL: "0"
    strategy:
      # Use the matrix generated by the previous job
      matrix: ${{ fromJson(needs.generate-test-examples-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          default: true
      # Pinned to the commit hash of v1.3.0
      - uses: Swatinem/rust-cache@842ef286fff290e445b90b4002cc9807c3669641
        with:
          sharedKey: test
      - name: Cargo Test
        run: ./tools/ci/crate-range.py run ${{ matrix.crate_range }} -f examples -- cargo test --all-features
      - name: Cargo Doc
        run: ./tools/ci/crate-range.py run ${{ matrix.crate_range }} -f examples -- cargo doc --all-features --no-deps

  # Psuedo-job that depends on the test job so that we don't have to enter
  # the myriad of test range combinations into GitHub's protected branch rules
  require-test-examples:
    needs: test-examples
    # Run this job even if its dependency jobs fail
    if: always()
    runs-on: ubuntu-latest
    name: Test Matrix Success (examples)
    steps:
      - name: Verify jobs succeeded
        uses: re-actors/alls-green@3a2de129f0713010a71314c74e33c0e3ef90e696
        with:
          jobs: ${{ toJSON(needs) }}

  check-manifests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: awslabs/smithy-rs
          path: smithy-rs
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.56.1
          default: true
      # Pinned to the commit hash of v1.3.0
      - uses: Swatinem/rust-cache@842ef286fff290e445b90b4002cc9807c3669641
        with:
          sharedKey: check-manifests
      - name: check manifests
        working-directory: smithy-rs/tools/publisher
        run: cargo run fix-manifests --check --location ../../../sdk
