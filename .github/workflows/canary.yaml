name: Canary
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  pull_request:

jobs:
  generate-canary-matrix:
    runs-on: ubuntu-latest
    name: Generate Canary Matrix
    steps:
      - uses: actions/checkout@v2
      - name: Generate the matrix
        id: generate-matrix
        # Run the `canary-matrix.py` script to calculate a test matrix for the `canary` job.
        # This script outputs JSON that GitHub Actions can consume as a matrix definition.
        # Rust versions to test against are arguments to this script.
        run: echo "::set-output name=matrix::$(./tools/ci/canary-matrix.py --sdk-versions 3 1.54.0 1.56.1)"
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}

  canary:
    needs: generate-canary-matrix
    name: Canary
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-west-2
      CARGO_INCREMENTAL: "0"
      SDK_VERSION: ${{ matrix.sdk_version }}
      LAMBDA_CODE_S3_BUCKET_NAME: ${{ secrets.CANARY_LAMBDA_CODE_S3_BUCKET }}
      LAMBDA_TEST_S3_BUCKET_NAME: ${{ secrets.CANARY_LAMBDA_TEST_S3_BUCKET }}
      LAMBDA_EXECUTION_ROLE_ARN: ${{ secrets.CANARY_LAMBDA_EXECUTION_ROLE_ARN }}
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    strategy:
      # Use the matrix generated by the previous job
      matrix: ${{ fromJson(needs.generate-canary-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: awslabs/smithy-rs
          path: smithy-rs
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          target: x86_64-unknown-linux-musl
          default: true
      - uses: aws-actions/configure-aws-credentials@v1
        name: Acquire credentials for running the canary
        with:
          role-to-assume: ${{ secrets.CANARY_GITHUB_ACTIONS_ROLE_ARN }}
          role-session-name: GitHubActions
          aws-region: us-west-2
      - name: Run the canary
        run: ./tools/ci/run-canary.sh
