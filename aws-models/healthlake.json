{
    "smithy": "2.0",
    "metadata": {
        "suppressions": [
            {
                "id": "HttpMethodSemantics",
                "namespace": "*"
            },
            {
                "id": "HttpResponseCodeSemantics",
                "namespace": "*"
            },
            {
                "id": "PaginatedTrait",
                "namespace": "*"
            },
            {
                "id": "HttpHeaderTrait",
                "namespace": "*"
            },
            {
                "id": "HttpUriConflict",
                "namespace": "*"
            },
            {
                "id": "Service",
                "namespace": "*"
            }
        ]
    },
    "shapes": {
        "com.amazonaws.healthlake#AccessDeniedException": {
            "type": "structure",
            "members": {
                "Message": {
                    "target": "com.amazonaws.healthlake#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>Access is denied. Your account is not authorized to perform this operation.</p>",
                "smithy.api#error": "client",
                "smithy.api#httpError": 403
            }
        },
        "com.amazonaws.healthlake#AmazonResourceName": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 1011
                },
                "smithy.api#pattern": "^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-z0-9-]+:\\d{12}:datastore\\/fhir\\/.{32}$"
            }
        },
        "com.amazonaws.healthlake#AuthorizationStrategy": {
            "type": "enum",
            "members": {
                "SMARTV1": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "SMART_ON_FHIR_V1"
                    }
                },
                "SMART_ON_FHIR": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "SMART_ON_FHIR"
                    }
                },
                "AWS_AUTH": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "AWS_AUTH"
                    }
                }
            }
        },
        "com.amazonaws.healthlake#Boolean": {
            "type": "boolean",
            "traits": {
                "smithy.api#default": false
            }
        },
        "com.amazonaws.healthlake#BoundedLengthString": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 5000
                },
                "smithy.api#pattern": "^[\\P{M}\\p{M}]{1,5000}$"
            }
        },
        "com.amazonaws.healthlake#ClientTokenString": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 64
                },
                "smithy.api#pattern": "^[a-zA-Z0-9-]+$"
            }
        },
        "com.amazonaws.healthlake#CmkType": {
            "type": "enum",
            "members": {
                "CM_CMK": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CUSTOMER_MANAGED_KMS_KEY"
                    }
                },
                "AO_CMK": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "AWS_OWNED_KMS_KEY"
                    }
                }
            }
        },
        "com.amazonaws.healthlake#ConfigurationMetadata": {
            "type": "string"
        },
        "com.amazonaws.healthlake#ConflictException": {
            "type": "structure",
            "members": {
                "Message": {
                    "target": "com.amazonaws.healthlake#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The data store is in a transition state and the user requested action cannot be\n         performed.</p>",
                "smithy.api#error": "client",
                "smithy.api#httpError": 409
            }
        },
        "com.amazonaws.healthlake#CreateFHIRDatastore": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#CreateFHIRDatastoreRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#CreateFHIRDatastoreResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Create a FHIR-enabled data store.</p>"
            }
        },
        "com.amazonaws.healthlake#CreateFHIRDatastoreRequest": {
            "type": "structure",
            "members": {
                "DatastoreName": {
                    "target": "com.amazonaws.healthlake#DatastoreName",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store name (user-generated).</p>"
                    }
                },
                "DatastoreTypeVersion": {
                    "target": "com.amazonaws.healthlake#FHIRVersion",
                    "traits": {
                        "smithy.api#documentation": "<p>The FHIR release version supported by the data store. Current support is for version\n            <code>R4</code>.</p>",
                        "smithy.api#required": {}
                    }
                },
                "SseConfiguration": {
                    "target": "com.amazonaws.healthlake#SseConfiguration",
                    "traits": {
                        "smithy.api#documentation": "<p>The server-side encryption key configuration for a customer-provided encryption key\n         specified for creating a data store. </p>"
                    }
                },
                "PreloadDataConfig": {
                    "target": "com.amazonaws.healthlake#PreloadDataConfig",
                    "traits": {
                        "smithy.api#documentation": "<p>An optional parameter to preload (import) open source Synthea FHIR data upon creation of\n         the data store.</p>"
                    }
                },
                "ClientToken": {
                    "target": "com.amazonaws.healthlake#ClientTokenString",
                    "traits": {
                        "smithy.api#documentation": "<p>An optional user-provided token to ensure API idempotency.</p>",
                        "smithy.api#idempotencyToken": {}
                    }
                },
                "Tags": {
                    "target": "com.amazonaws.healthlake#TagList",
                    "traits": {
                        "smithy.api#documentation": "<p>The resource tags applied to a data store when it is created.</p>"
                    }
                },
                "IdentityProviderConfiguration": {
                    "target": "com.amazonaws.healthlake#IdentityProviderConfiguration",
                    "traits": {
                        "smithy.api#documentation": "<p>The identity provider configuration to use for the data store.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#CreateFHIRDatastoreResponse": {
            "type": "structure",
            "members": {
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreArn": {
                    "target": "com.amazonaws.healthlake#DatastoreArn",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the data store.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreStatus": {
                    "target": "com.amazonaws.healthlake#DatastoreStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store status.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreEndpoint": {
                    "target": "com.amazonaws.healthlake#BoundedLengthString",
                    "traits": {
                        "smithy.api#documentation": "<p>The AWS endpoint created for the data store.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#DatastoreArn": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?$"
            }
        },
        "com.amazonaws.healthlake#DatastoreFilter": {
            "type": "structure",
            "members": {
                "DatastoreName": {
                    "target": "com.amazonaws.healthlake#DatastoreName",
                    "traits": {
                        "smithy.api#documentation": "<p>Filter data store results by name.</p>"
                    }
                },
                "DatastoreStatus": {
                    "target": "com.amazonaws.healthlake#DatastoreStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>Filter data store results by status.</p>"
                    }
                },
                "CreatedBefore": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>Filter to set cutoff dates for records. All data stores created before the specified\n         date are included in the results. </p>"
                    }
                },
                "CreatedAfter": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>Filter to set cutoff dates for records. All data stores created after the specified date\n         are included in the results.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The filters applied to a data store query.</p>"
            }
        },
        "com.amazonaws.healthlake#DatastoreId": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 32
                },
                "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
            }
        },
        "com.amazonaws.healthlake#DatastoreName": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 256
                },
                "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
            }
        },
        "com.amazonaws.healthlake#DatastoreProperties": {
            "type": "structure",
            "members": {
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreArn": {
                    "target": "com.amazonaws.healthlake#DatastoreArn",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) used in the creation of the data store.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreName": {
                    "target": "com.amazonaws.healthlake#DatastoreName",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store name.</p>"
                    }
                },
                "DatastoreStatus": {
                    "target": "com.amazonaws.healthlake#DatastoreStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store status.</p>",
                        "smithy.api#required": {}
                    }
                },
                "CreatedAt": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>The time the data store was created. </p>"
                    }
                },
                "DatastoreTypeVersion": {
                    "target": "com.amazonaws.healthlake#FHIRVersion",
                    "traits": {
                        "smithy.api#documentation": "<p>The FHIR release version supported by the data store. Current support is for version\n            <code>R4</code>.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreEndpoint": {
                    "target": "com.amazonaws.healthlake#String",
                    "traits": {
                        "smithy.api#documentation": "<p>The AWS endpoint for the data store.</p>",
                        "smithy.api#required": {}
                    }
                },
                "SseConfiguration": {
                    "target": "com.amazonaws.healthlake#SseConfiguration",
                    "traits": {
                        "smithy.api#documentation": "<p> The server-side encryption key configuration for a customer provided encryption\n         key.</p>"
                    }
                },
                "PreloadDataConfig": {
                    "target": "com.amazonaws.healthlake#PreloadDataConfig",
                    "traits": {
                        "smithy.api#documentation": "<p>The preloaded Synthea data configuration for the data store.</p>"
                    }
                },
                "IdentityProviderConfiguration": {
                    "target": "com.amazonaws.healthlake#IdentityProviderConfiguration",
                    "traits": {
                        "smithy.api#documentation": "<p>The identity provider selected during data store creation.</p>"
                    }
                },
                "ErrorCause": {
                    "target": "com.amazonaws.healthlake#ErrorCause",
                    "traits": {
                        "smithy.api#documentation": "<p>The error cause for the current data store operation.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The data store properties.</p>"
            }
        },
        "com.amazonaws.healthlake#DatastorePropertiesList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.healthlake#DatastoreProperties"
            }
        },
        "com.amazonaws.healthlake#DatastoreStatus": {
            "type": "enum",
            "members": {
                "CREATING": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CREATING"
                    }
                },
                "ACTIVE": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "ACTIVE"
                    }
                },
                "DELETING": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "DELETING"
                    }
                },
                "DELETED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "DELETED"
                    }
                },
                "CREATE_FAILED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CREATE_FAILED"
                    }
                }
            }
        },
        "com.amazonaws.healthlake#DeleteFHIRDatastore": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#DeleteFHIRDatastoreRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#DeleteFHIRDatastoreResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.healthlake#ConflictException"
                },
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Delete a FHIR-enabled data store.</p>"
            }
        },
        "com.amazonaws.healthlake#DeleteFHIRDatastoreRequest": {
            "type": "structure",
            "members": {
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p> The AWS-generated identifier for the data store to be deleted.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#DeleteFHIRDatastoreResponse": {
            "type": "structure",
            "members": {
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The AWS-generated ID for the deleted data store.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreArn": {
                    "target": "com.amazonaws.healthlake#DatastoreArn",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that grants access permission to AWS HealthLake.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreStatus": {
                    "target": "com.amazonaws.healthlake#DatastoreStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store status.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreEndpoint": {
                    "target": "com.amazonaws.healthlake#BoundedLengthString",
                    "traits": {
                        "smithy.api#documentation": "<p>The AWS endpoint of the data store to be deleted.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#DescribeFHIRDatastore": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#DescribeFHIRDatastoreRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#DescribeFHIRDatastoreResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Get properties for a FHIR-enabled data store.</p>",
                "smithy.waiters#waitable": {
                    "FHIRDatastoreActive": {
                        "acceptors": [
                            {
                                "state": "success",
                                "matcher": {
                                    "output": {
                                        "path": "DatastoreProperties.DatastoreStatus",
                                        "expected": "ACTIVE",
                                        "comparator": "stringEquals"
                                    }
                                }
                            },
                            {
                                "state": "failure",
                                "matcher": {
                                    "output": {
                                        "path": "DatastoreProperties.DatastoreStatus",
                                        "expected": "CREATE_FAILED",
                                        "comparator": "stringEquals"
                                    }
                                }
                            },
                            {
                                "state": "failure",
                                "matcher": {
                                    "output": {
                                        "path": "DatastoreProperties.DatastoreStatus",
                                        "expected": "DELETED",
                                        "comparator": "stringEquals"
                                    }
                                }
                            }
                        ],
                        "minDelay": 60
                    },
                    "FHIRDatastoreDeleted": {
                        "acceptors": [
                            {
                                "state": "success",
                                "matcher": {
                                    "output": {
                                        "path": "DatastoreProperties.DatastoreStatus",
                                        "expected": "DELETED",
                                        "comparator": "stringEquals"
                                    }
                                }
                            }
                        ],
                        "minDelay": 120
                    }
                }
            }
        },
        "com.amazonaws.healthlake#DescribeFHIRDatastoreRequest": {
            "type": "structure",
            "members": {
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#DescribeFHIRDatastoreResponse": {
            "type": "structure",
            "members": {
                "DatastoreProperties": {
                    "target": "com.amazonaws.healthlake#DatastoreProperties",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store properties.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#DescribeFHIRExportJob": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#DescribeFHIRExportJobRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#DescribeFHIRExportJobResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Get FHIR export job properties.</p>",
                "smithy.waiters#waitable": {
                    "FHIRExportJobCompleted": {
                        "acceptors": [
                            {
                                "state": "success",
                                "matcher": {
                                    "output": {
                                        "path": "ExportJobProperties.JobStatus",
                                        "expected": "COMPLETED",
                                        "comparator": "stringEquals"
                                    }
                                }
                            },
                            {
                                "state": "success",
                                "matcher": {
                                    "output": {
                                        "path": "ExportJobProperties.JobStatus",
                                        "expected": "COMPLETED_WITH_ERRORS",
                                        "comparator": "stringEquals"
                                    }
                                }
                            },
                            {
                                "state": "failure",
                                "matcher": {
                                    "output": {
                                        "path": "ExportJobProperties.JobStatus",
                                        "expected": "CANCEL_COMPLETED",
                                        "comparator": "stringEquals"
                                    }
                                }
                            },
                            {
                                "state": "failure",
                                "matcher": {
                                    "output": {
                                        "path": "ExportJobProperties.JobStatus",
                                        "expected": "FAILED",
                                        "comparator": "stringEquals"
                                    }
                                }
                            },
                            {
                                "state": "failure",
                                "matcher": {
                                    "output": {
                                        "path": "ExportJobProperties.JobStatus",
                                        "expected": "CANCEL_FAILED",
                                        "comparator": "stringEquals"
                                    }
                                }
                            }
                        ],
                        "minDelay": 120
                    }
                }
            }
        },
        "com.amazonaws.healthlake#DescribeFHIRExportJobRequest": {
            "type": "structure",
            "members": {
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier from which FHIR data is being exported from.</p>",
                        "smithy.api#required": {}
                    }
                },
                "JobId": {
                    "target": "com.amazonaws.healthlake#JobId",
                    "traits": {
                        "smithy.api#documentation": "<p>The export job identifier.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#DescribeFHIRExportJobResponse": {
            "type": "structure",
            "members": {
                "ExportJobProperties": {
                    "target": "com.amazonaws.healthlake#ExportJobProperties",
                    "traits": {
                        "smithy.api#documentation": "<p>The export job properties.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#DescribeFHIRImportJob": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#DescribeFHIRImportJobRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#DescribeFHIRImportJobResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Get the import job properties to learn more about the job or job progress.</p>",
                "smithy.waiters#waitable": {
                    "FHIRImportJobCompleted": {
                        "acceptors": [
                            {
                                "state": "success",
                                "matcher": {
                                    "output": {
                                        "path": "ImportJobProperties.JobStatus",
                                        "expected": "COMPLETED",
                                        "comparator": "stringEquals"
                                    }
                                }
                            },
                            {
                                "state": "success",
                                "matcher": {
                                    "output": {
                                        "path": "ImportJobProperties.JobStatus",
                                        "expected": "COMPLETED_WITH_ERRORS",
                                        "comparator": "stringEquals"
                                    }
                                }
                            },
                            {
                                "state": "failure",
                                "matcher": {
                                    "output": {
                                        "path": "ImportJobProperties.JobStatus",
                                        "expected": "FAILED",
                                        "comparator": "stringEquals"
                                    }
                                }
                            }
                        ],
                        "minDelay": 120
                    }
                }
            }
        },
        "com.amazonaws.healthlake#DescribeFHIRImportJobRequest": {
            "type": "structure",
            "members": {
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier.</p>",
                        "smithy.api#required": {}
                    }
                },
                "JobId": {
                    "target": "com.amazonaws.healthlake#JobId",
                    "traits": {
                        "smithy.api#documentation": "<p>The import job identifier.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#DescribeFHIRImportJobResponse": {
            "type": "structure",
            "members": {
                "ImportJobProperties": {
                    "target": "com.amazonaws.healthlake#ImportJobProperties",
                    "traits": {
                        "smithy.api#documentation": "<p>The import job properties.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#EncryptionKeyID": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 400
                },
                "smithy.api#pattern": "^(arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\\d:)?(\\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))$"
            }
        },
        "com.amazonaws.healthlake#ErrorCategory": {
            "type": "enum",
            "members": {
                "RETRYABLE_ERROR": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "RETRYABLE_ERROR"
                    }
                },
                "NON_RETRYABLE_ERROR": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "NON_RETRYABLE_ERROR"
                    }
                }
            }
        },
        "com.amazonaws.healthlake#ErrorCause": {
            "type": "structure",
            "members": {
                "ErrorMessage": {
                    "target": "com.amazonaws.healthlake#ErrorMessage",
                    "traits": {
                        "smithy.api#documentation": "<p>The error message text for <code>ErrorCause</code>.</p>"
                    }
                },
                "ErrorCategory": {
                    "target": "com.amazonaws.healthlake#ErrorCategory",
                    "traits": {
                        "smithy.api#documentation": "<p>The error category for <code>ErrorCause</code>.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The error information for <code>CreateFHIRDatastore</code> and\n            <code>DeleteFHIRDatastore</code> actions.</p>"
            }
        },
        "com.amazonaws.healthlake#ErrorMessage": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 4096
                }
            }
        },
        "com.amazonaws.healthlake#ExportJobProperties": {
            "type": "structure",
            "members": {
                "JobId": {
                    "target": "com.amazonaws.healthlake#JobId",
                    "traits": {
                        "smithy.api#documentation": "<p>The export job identifier.</p>",
                        "smithy.api#required": {}
                    }
                },
                "JobName": {
                    "target": "com.amazonaws.healthlake#JobName",
                    "traits": {
                        "smithy.api#documentation": "<p>The export job name.</p>"
                    }
                },
                "JobStatus": {
                    "target": "com.amazonaws.healthlake#JobStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>The export job status.</p>",
                        "smithy.api#required": {}
                    }
                },
                "SubmitTime": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>The time the export job was initiated.</p>",
                        "smithy.api#required": {}
                    }
                },
                "EndTime": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>The time the export job completed.</p>"
                    }
                },
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier from which files are being exported.</p>",
                        "smithy.api#required": {}
                    }
                },
                "OutputDataConfig": {
                    "target": "com.amazonaws.healthlake#OutputDataConfig",
                    "traits": {
                        "smithy.api#documentation": "<p>The output data configuration supplied when the export job was created.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DataAccessRoleArn": {
                    "target": "com.amazonaws.healthlake#IamRoleArn",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) used during the initiation of the export job.</p>"
                    }
                },
                "Message": {
                    "target": "com.amazonaws.healthlake#Message",
                    "traits": {
                        "smithy.api#documentation": "<p>An explanation of any errors that might have occurred during the export job.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The properties of a FHIR export job.</p>"
            }
        },
        "com.amazonaws.healthlake#ExportJobPropertiesList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.healthlake#ExportJobProperties"
            }
        },
        "com.amazonaws.healthlake#FHIRVersion": {
            "type": "enum",
            "members": {
                "R4": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "R4"
                    }
                }
            }
        },
        "com.amazonaws.healthlake#GenericDouble": {
            "type": "double"
        },
        "com.amazonaws.healthlake#GenericLong": {
            "type": "long"
        },
        "com.amazonaws.healthlake#HealthLake": {
            "type": "service",
            "version": "2017-07-01",
            "operations": [
                {
                    "target": "com.amazonaws.healthlake#CreateFHIRDatastore"
                },
                {
                    "target": "com.amazonaws.healthlake#DeleteFHIRDatastore"
                },
                {
                    "target": "com.amazonaws.healthlake#DescribeFHIRDatastore"
                },
                {
                    "target": "com.amazonaws.healthlake#DescribeFHIRExportJob"
                },
                {
                    "target": "com.amazonaws.healthlake#DescribeFHIRImportJob"
                },
                {
                    "target": "com.amazonaws.healthlake#ListFHIRDatastores"
                },
                {
                    "target": "com.amazonaws.healthlake#ListFHIRExportJobs"
                },
                {
                    "target": "com.amazonaws.healthlake#ListFHIRImportJobs"
                },
                {
                    "target": "com.amazonaws.healthlake#ListTagsForResource"
                },
                {
                    "target": "com.amazonaws.healthlake#StartFHIRExportJob"
                },
                {
                    "target": "com.amazonaws.healthlake#StartFHIRImportJob"
                },
                {
                    "target": "com.amazonaws.healthlake#TagResource"
                },
                {
                    "target": "com.amazonaws.healthlake#UntagResource"
                }
            ],
            "traits": {
                "aws.api#service": {
                    "sdkId": "HealthLake",
                    "arnNamespace": "healthlake",
                    "cloudFormationName": "HealthLake",
                    "cloudTrailEventSource": "healthlake.amazonaws.com",
                    "endpointPrefix": "healthlake"
                },
                "aws.auth#sigv4": {
                    "name": "healthlake"
                },
                "aws.protocols#awsJson1_0": {},
                "smithy.api#documentation": "<p>This is the <i>AWS HealthLake API Reference</i>. For an introduction to\n         the service, see <a href=\"https://docs.aws.amazon.com/healthlake/latest/devguide/what-is.html\">What is AWS HealthLake?</a> in the <i>AWS HealthLake Developer\n            Guide</i>.</p>",
                "smithy.api#title": "Amazon HealthLake",
                "smithy.rules#endpointRuleSet": {
                    "version": "1.0",
                    "parameters": {
                        "Region": {
                            "builtIn": "AWS::Region",
                            "required": false,
                            "documentation": "The AWS region used to dispatch the request.",
                            "type": "string"
                        },
                        "UseDualStack": {
                            "builtIn": "AWS::UseDualStack",
                            "required": true,
                            "default": false,
                            "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                            "type": "boolean"
                        },
                        "UseFIPS": {
                            "builtIn": "AWS::UseFIPS",
                            "required": true,
                            "default": false,
                            "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                            "type": "boolean"
                        },
                        "Endpoint": {
                            "builtIn": "SDK::Endpoint",
                            "required": false,
                            "documentation": "Override the endpoint used to send this request",
                            "type": "string"
                        }
                    },
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://healthlake-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                "properties": {},
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://healthlake-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                "properties": {},
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://healthlake.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                "properties": {},
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "endpoint": {
                                                "url": "https://healthlake.{Region}.{PartitionResult#dnsSuffix}",
                                                "properties": {},
                                                "headers": {}
                                            },
                                            "type": "endpoint"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ]
                },
                "smithy.rules#endpointTests": {
                    "testCases": [
                        {
                            "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.us-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.us-east-2.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-2",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.us-west-2.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-west-2",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake-fips.us-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake-fips.us-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.us-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake-fips.cn-north-1.api.amazonwebservices.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake-fips.cn-north-1.amazonaws.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.cn-north-1.api.amazonwebservices.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.cn-north-1.amazonaws.com.cn"
                                }
                            },
                            "params": {
                                "Region": "cn-north-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake-fips.us-gov-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": true,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake-fips.us-gov-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.us-gov-east-1.api.aws"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true
                            }
                        },
                        {
                            "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.us-gov-east-1.amazonaws.com"
                                }
                            },
                            "params": {
                                "Region": "us-gov-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake-fips.us-iso-east-1.c2s.ic.gov"
                                }
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.us-iso-east-1.c2s.ic.gov"
                                }
                            },
                            "params": {
                                "Region": "us-iso-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake-fips.us-isob-east-1.sc2s.sgov.gov"
                                }
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://healthlake.us-isob-east-1.sc2s.sgov.gov"
                                }
                            },
                            "params": {
                                "Region": "us-isob-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false
                            }
                        },
                        {
                            "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://example.com"
                                }
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": false,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
                            "expect": {
                                "endpoint": {
                                    "url": "https://example.com"
                                }
                            },
                            "params": {
                                "UseFIPS": false,
                                "UseDualStack": false,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "For custom endpoint with fips enabled and dualstack disabled",
                            "expect": {
                                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": true,
                                "UseDualStack": false,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "For custom endpoint with fips disabled and dualstack enabled",
                            "expect": {
                                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
                            },
                            "params": {
                                "Region": "us-east-1",
                                "UseFIPS": false,
                                "UseDualStack": true,
                                "Endpoint": "https://example.com"
                            }
                        },
                        {
                            "documentation": "Missing region",
                            "expect": {
                                "error": "Invalid Configuration: Missing Region"
                            }
                        }
                    ],
                    "version": "1.0"
                }
            }
        },
        "com.amazonaws.healthlake#IamRoleArn": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 20,
                    "max": 2048
                },
                "smithy.api#pattern": "^arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+$"
            }
        },
        "com.amazonaws.healthlake#IdentityProviderConfiguration": {
            "type": "structure",
            "members": {
                "AuthorizationStrategy": {
                    "target": "com.amazonaws.healthlake#AuthorizationStrategy",
                    "traits": {
                        "smithy.api#documentation": "<p>The authorization strategy selected when the HealthLake data store is created.</p>\n         <note>\n            <p>HealthLake provides support for both SMART on FHIR V1 and V2 as described below.</p>\n            <ul>\n               <li>\n                  <p>\n                     <code>SMART_ON_FHIR_V1</code> – Support for only SMART on FHIR V1, which\n                  includes <code>read</code> (read/search) and <code>write</code>\n                  (create/update/delete) permissions.</p>\n               </li>\n               <li>\n                  <p>\n                     <code>SMART_ON_FHIR</code> – Support for both SMART on FHIR V1 and V2,\n                  which includes <code>create</code>, <code>read</code>, <code>update</code>,\n                     <code>delete</code>, and <code>search</code> permissions.</p>\n               </li>\n               <li>\n                  <p>\n                     <code>AWS_AUTH</code> – The default HealthLake authorization\n                  strategy; not affiliated with SMART on FHIR.</p>\n               </li>\n            </ul>\n         </note>",
                        "smithy.api#required": {}
                    }
                },
                "FineGrainedAuthorizationEnabled": {
                    "target": "com.amazonaws.healthlake#Boolean",
                    "traits": {
                        "smithy.api#default": false,
                        "smithy.api#documentation": "<p>The parameter to enable SMART on FHIR fine-grained authorization for the data\n         store.</p>"
                    }
                },
                "Metadata": {
                    "target": "com.amazonaws.healthlake#ConfigurationMetadata",
                    "traits": {
                        "smithy.api#documentation": "<p>The JSON metadata elements to use in your identity provider configuration. Required\n         elements are listed based on the launch specification of the SMART application. For more\n         information on all possible elements, see <a href=\"https://build.fhir.org/ig/HL7/smart-app-launch/conformance.html#metadata\">Metadata</a> in SMART's App Launch specification.</p>\n         <p>\n            <code>authorization_endpoint</code>: The URL to the OAuth2 authorization\n         endpoint.</p>\n         <p>\n            <code>grant_types_supported</code>: An array of grant types that are supported at the\n         token endpoint. You must provide at least one grant type option. Valid options are\n            <code>authorization_code</code> and <code>client_credentials</code>.</p>\n         <p>\n            <code>token_endpoint</code>: The URL to the OAuth2 token endpoint.</p>\n         <p>\n            <code>capabilities</code>: An array of strings of the SMART capabilities that the\n         authorization server supports.</p>\n         <p>\n            <code>code_challenge_methods_supported</code>: An array of strings of supported PKCE\n         code challenge methods. You must include the <code>S256</code> method in the array of PKCE\n         code challenge methods.</p>"
                    }
                },
                "IdpLambdaArn": {
                    "target": "com.amazonaws.healthlake#LambdaArn",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Lambda function to use to decode the access token created by the\n         authorization server.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The identity provider configuration selected when the data store was created.</p>"
            }
        },
        "com.amazonaws.healthlake#ImportJobProperties": {
            "type": "structure",
            "members": {
                "JobId": {
                    "target": "com.amazonaws.healthlake#JobId",
                    "traits": {
                        "smithy.api#documentation": "<p>The import job identifier.</p>",
                        "smithy.api#required": {}
                    }
                },
                "JobName": {
                    "target": "com.amazonaws.healthlake#JobName",
                    "traits": {
                        "smithy.api#documentation": "<p>The import job name.</p>"
                    }
                },
                "JobStatus": {
                    "target": "com.amazonaws.healthlake#JobStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>The import job status.</p>",
                        "smithy.api#required": {}
                    }
                },
                "SubmitTime": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>The time the import job was submitted for processing.</p>",
                        "smithy.api#required": {}
                    }
                },
                "EndTime": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>The time the import job was completed.</p>"
                    }
                },
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier. </p>",
                        "smithy.api#required": {}
                    }
                },
                "InputDataConfig": {
                    "target": "com.amazonaws.healthlake#InputDataConfig",
                    "traits": {
                        "smithy.api#documentation": "<p>The input data configuration supplied when the import job was created.</p>",
                        "smithy.api#required": {}
                    }
                },
                "JobOutputDataConfig": {
                    "target": "com.amazonaws.healthlake#OutputDataConfig"
                },
                "JobProgressReport": {
                    "target": "com.amazonaws.healthlake#JobProgressReport",
                    "traits": {
                        "smithy.api#documentation": "<p>Displays the progress of the import job, including total resources scanned, total\n         resources imported, and total size of data imported.</p>"
                    }
                },
                "DataAccessRoleArn": {
                    "target": "com.amazonaws.healthlake#IamRoleArn",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that grants AWS HealthLake access to the input data.</p>"
                    }
                },
                "Message": {
                    "target": "com.amazonaws.healthlake#Message",
                    "traits": {
                        "smithy.api#documentation": "<p>An explanation of any errors that might have occurred during the FHIR import job.</p>"
                    }
                },
                "ValidationLevel": {
                    "target": "com.amazonaws.healthlake#ValidationLevel",
                    "traits": {
                        "smithy.api#documentation": "<p>The validation level of the import job.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The import job properties.</p>"
            }
        },
        "com.amazonaws.healthlake#ImportJobPropertiesList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.healthlake#ImportJobProperties"
            }
        },
        "com.amazonaws.healthlake#InputDataConfig": {
            "type": "union",
            "members": {
                "S3Uri": {
                    "target": "com.amazonaws.healthlake#S3Uri",
                    "traits": {
                        "smithy.api#documentation": "<p>The <code>S3Uri</code> is the user-specified S3 location of the FHIR data to be\n         imported into AWS HealthLake.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p> The import job input properties.</p>"
            }
        },
        "com.amazonaws.healthlake#InternalServerException": {
            "type": "structure",
            "members": {
                "Message": {
                    "target": "com.amazonaws.healthlake#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>An unknown internal error occurred in the service.</p>",
                "smithy.api#error": "server",
                "smithy.api#httpError": 500
            }
        },
        "com.amazonaws.healthlake#JobId": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 32
                },
                "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
            }
        },
        "com.amazonaws.healthlake#JobName": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 64
                },
                "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
            }
        },
        "com.amazonaws.healthlake#JobProgressReport": {
            "type": "structure",
            "members": {
                "TotalNumberOfScannedFiles": {
                    "target": "com.amazonaws.healthlake#GenericLong",
                    "traits": {
                        "smithy.api#documentation": "<p>The number of files scanned from the S3 input bucket.</p>"
                    }
                },
                "TotalSizeOfScannedFilesInMB": {
                    "target": "com.amazonaws.healthlake#GenericDouble",
                    "traits": {
                        "smithy.api#documentation": "<p>The size (in MB) of files scanned from the S3 input bucket.</p>"
                    }
                },
                "TotalNumberOfImportedFiles": {
                    "target": "com.amazonaws.healthlake#GenericLong",
                    "traits": {
                        "smithy.api#documentation": "<p>The number of files imported.</p>"
                    }
                },
                "TotalNumberOfResourcesScanned": {
                    "target": "com.amazonaws.healthlake#GenericLong",
                    "traits": {
                        "smithy.api#documentation": "<p>The number of resources scanned from the S3 input bucket.</p>"
                    }
                },
                "TotalNumberOfResourcesImported": {
                    "target": "com.amazonaws.healthlake#GenericLong",
                    "traits": {
                        "smithy.api#documentation": "<p>The number of resources imported.</p>"
                    }
                },
                "TotalNumberOfResourcesWithCustomerError": {
                    "target": "com.amazonaws.healthlake#GenericLong",
                    "traits": {
                        "smithy.api#documentation": "<p>The number of resources that failed due to customer error.</p>"
                    }
                },
                "TotalNumberOfFilesReadWithCustomerError": {
                    "target": "com.amazonaws.healthlake#GenericLong",
                    "traits": {
                        "smithy.api#documentation": "<p>The number of files that failed to be read from the S3 input bucket due to customer\n         error.</p>"
                    }
                },
                "Throughput": {
                    "target": "com.amazonaws.healthlake#GenericDouble",
                    "traits": {
                        "smithy.api#documentation": "<p>The transaction rate the import job is processed at.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The progress report for the import job.</p>"
            }
        },
        "com.amazonaws.healthlake#JobStatus": {
            "type": "enum",
            "members": {
                "SUBMITTED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "SUBMITTED"
                    }
                },
                "QUEUED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "QUEUED"
                    }
                },
                "IN_PROGRESS": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "IN_PROGRESS"
                    }
                },
                "COMPLETED_WITH_ERRORS": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "COMPLETED_WITH_ERRORS"
                    }
                },
                "COMPLETED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "COMPLETED"
                    }
                },
                "FAILED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "FAILED"
                    }
                },
                "CANCEL_SUBMITTED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CANCEL_SUBMITTED"
                    }
                },
                "CANCEL_IN_PROGRESS": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CANCEL_IN_PROGRESS"
                    }
                },
                "CANCEL_COMPLETED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CANCEL_COMPLETED"
                    }
                },
                "CANCEL_FAILED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CANCEL_FAILED"
                    }
                }
            }
        },
        "com.amazonaws.healthlake#KmsEncryptionConfig": {
            "type": "structure",
            "members": {
                "CmkType": {
                    "target": "com.amazonaws.healthlake#CmkType",
                    "traits": {
                        "smithy.api#documentation": "<p>The type of customer-managed-key (CMK) used for encryption.</p>",
                        "smithy.api#required": {}
                    }
                },
                "KmsKeyId": {
                    "target": "com.amazonaws.healthlake#EncryptionKeyID",
                    "traits": {
                        "smithy.api#documentation": "<p>The Key Management Service (KMS) encryption key id/alias used to encrypt the data store contents at\n         rest.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The customer-managed-key (CMK) used when creating a data store. If a customer-owned key\n         is not specified, an AWS-owned key is used for encryption. </p>"
            }
        },
        "com.amazonaws.healthlake#LambdaArn": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 49,
                    "max": 256
                },
                "smithy.api#pattern": "^arn:aws:lambda:[a-z]{2}-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9\\-_\\.]+(:(\\$LATEST|[a-zA-Z0-9\\-_]+))?$"
            }
        },
        "com.amazonaws.healthlake#ListFHIRDatastores": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#ListFHIRDatastoresRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#ListFHIRDatastoresResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>List all FHIR-enabled data stores in a user’s account, regardless of data store\n         status.</p>",
                "smithy.api#paginated": {
                    "inputToken": "NextToken",
                    "outputToken": "NextToken",
                    "pageSize": "MaxResults"
                }
            }
        },
        "com.amazonaws.healthlake#ListFHIRDatastoresRequest": {
            "type": "structure",
            "members": {
                "Filter": {
                    "target": "com.amazonaws.healthlake#DatastoreFilter",
                    "traits": {
                        "smithy.api#documentation": "<p>List all filters associated with a FHIR data store request.</p>"
                    }
                },
                "NextToken": {
                    "target": "com.amazonaws.healthlake#NextToken",
                    "traits": {
                        "smithy.api#documentation": "<p>The token used to retrieve the next page of data stores when results are\n         paginated.</p>"
                    }
                },
                "MaxResults": {
                    "target": "com.amazonaws.healthlake#MaxResultsInteger",
                    "traits": {
                        "smithy.api#documentation": "<p>The maximum number of data stores returned on a page.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#ListFHIRDatastoresResponse": {
            "type": "structure",
            "members": {
                "DatastorePropertiesList": {
                    "target": "com.amazonaws.healthlake#DatastorePropertiesList",
                    "traits": {
                        "smithy.api#documentation": "<p>The properties associated with all listed data stores.</p>",
                        "smithy.api#required": {}
                    }
                },
                "NextToken": {
                    "target": "com.amazonaws.healthlake#NextToken",
                    "traits": {
                        "smithy.api#documentation": "<p>The pagination token used to retrieve the next page of results.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#ListFHIRExportJobs": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#ListFHIRExportJobsRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#ListFHIRExportJobsResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Lists all FHIR export jobs associated with an account and their statuses.</p>",
                "smithy.api#paginated": {
                    "inputToken": "NextToken",
                    "outputToken": "NextToken",
                    "pageSize": "MaxResults"
                }
            }
        },
        "com.amazonaws.healthlake#ListFHIRExportJobsRequest": {
            "type": "structure",
            "members": {
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to the export job with the specified data store ID. </p>",
                        "smithy.api#required": {}
                    }
                },
                "NextToken": {
                    "target": "com.amazonaws.healthlake#NextToken",
                    "traits": {
                        "smithy.api#documentation": "<p>A pagination token used to identify the next page of results to return.</p>"
                    }
                },
                "MaxResults": {
                    "target": "com.amazonaws.healthlake#MaxResultsInteger",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the number of results returned for a ListFHIRExportJobs to a maximum quantity\n         specified by the user.</p>"
                    }
                },
                "JobName": {
                    "target": "com.amazonaws.healthlake#JobName",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to the export job with the specified job name. </p>"
                    }
                },
                "JobStatus": {
                    "target": "com.amazonaws.healthlake#JobStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to export jobs with the specified job status. </p>"
                    }
                },
                "SubmittedBefore": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to FHIR export jobs submitted before a user- specified date.</p>"
                    }
                },
                "SubmittedAfter": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to FHIR export jobs submitted after a user-specified date.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#ListFHIRExportJobsResponse": {
            "type": "structure",
            "members": {
                "ExportJobPropertiesList": {
                    "target": "com.amazonaws.healthlake#ExportJobPropertiesList",
                    "traits": {
                        "smithy.api#documentation": "<p>The properties of listed FHIR export jobs.</p>",
                        "smithy.api#required": {}
                    }
                },
                "NextToken": {
                    "target": "com.amazonaws.healthlake#NextToken",
                    "traits": {
                        "smithy.api#documentation": "<p>The pagination token used to identify the next page of results to return.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#ListFHIRImportJobs": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#ListFHIRImportJobsRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#ListFHIRImportJobsResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>List all FHIR import jobs associated with an account and their statuses.</p>",
                "smithy.api#paginated": {
                    "inputToken": "NextToken",
                    "outputToken": "NextToken",
                    "pageSize": "MaxResults"
                }
            }
        },
        "com.amazonaws.healthlake#ListFHIRImportJobsRequest": {
            "type": "structure",
            "members": {
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to the import job with the specified data store ID. </p>",
                        "smithy.api#required": {}
                    }
                },
                "NextToken": {
                    "target": "com.amazonaws.healthlake#NextToken",
                    "traits": {
                        "smithy.api#documentation": "<p>The pagination token used to identify the next page of results to return.</p>"
                    }
                },
                "MaxResults": {
                    "target": "com.amazonaws.healthlake#MaxResultsInteger",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the number of results returned for <code>ListFHIRImportJobs</code> to a maximum\n         quantity specified by the user.</p>"
                    }
                },
                "JobName": {
                    "target": "com.amazonaws.healthlake#JobName",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to the import job with the specified job name. </p>"
                    }
                },
                "JobStatus": {
                    "target": "com.amazonaws.healthlake#JobStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to the import job with the specified job status. </p>"
                    }
                },
                "SubmittedBefore": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to FHIR import jobs submitted before a user- specified date. </p>"
                    }
                },
                "SubmittedAfter": {
                    "target": "com.amazonaws.healthlake#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "<p>Limits the response to FHIR import jobs submitted after a user-specified date.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#ListFHIRImportJobsResponse": {
            "type": "structure",
            "members": {
                "ImportJobPropertiesList": {
                    "target": "com.amazonaws.healthlake#ImportJobPropertiesList",
                    "traits": {
                        "smithy.api#documentation": "<p>The properties for listed import jobs.</p>",
                        "smithy.api#required": {}
                    }
                },
                "NextToken": {
                    "target": "com.amazonaws.healthlake#NextToken",
                    "traits": {
                        "smithy.api#documentation": "<p>The pagination token used to identify the next page of results to return.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#ListTagsForResource": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#ListTagsForResourceRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#ListTagsForResourceResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Returns a list of all existing tags associated with a data store.</p>"
            }
        },
        "com.amazonaws.healthlake#ListTagsForResourceRequest": {
            "type": "structure",
            "members": {
                "ResourceARN": {
                    "target": "com.amazonaws.healthlake#AmazonResourceName",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the data store to which tags are being added.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#ListTagsForResourceResponse": {
            "type": "structure",
            "members": {
                "Tags": {
                    "target": "com.amazonaws.healthlake#TagList",
                    "traits": {
                        "smithy.api#documentation": "<p>Returns a list of tags associated with a data store. </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#MaxResultsInteger": {
            "type": "integer",
            "traits": {
                "smithy.api#range": {
                    "min": 1,
                    "max": 500
                }
            }
        },
        "com.amazonaws.healthlake#Message": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 2048
                },
                "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
            }
        },
        "com.amazonaws.healthlake#NextToken": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 8192
                },
                "smithy.api#pattern": "^\\p{ASCII}{0,8192}$"
            }
        },
        "com.amazonaws.healthlake#OutputDataConfig": {
            "type": "union",
            "members": {
                "S3Configuration": {
                    "target": "com.amazonaws.healthlake#S3Configuration",
                    "traits": {
                        "smithy.api#documentation": "<p>The output data configuration supplied when the export job was created. </p>"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The output data configuration supplied when the export job was created.</p>"
            }
        },
        "com.amazonaws.healthlake#PreloadDataConfig": {
            "type": "structure",
            "members": {
                "PreloadDataType": {
                    "target": "com.amazonaws.healthlake#PreloadDataType",
                    "traits": {
                        "smithy.api#documentation": "<p>The type of preloaded data. Only Synthea preloaded data is supported.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The input properties for the preloaded (Synthea) data store.</p>"
            }
        },
        "com.amazonaws.healthlake#PreloadDataType": {
            "type": "enum",
            "members": {
                "SYNTHEA": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "SYNTHEA"
                    }
                }
            }
        },
        "com.amazonaws.healthlake#ResourceNotFoundException": {
            "type": "structure",
            "members": {
                "Message": {
                    "target": "com.amazonaws.healthlake#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The requested data store was not found.</p>",
                "smithy.api#error": "client",
                "smithy.api#httpError": 404
            }
        },
        "com.amazonaws.healthlake#S3Configuration": {
            "type": "structure",
            "members": {
                "S3Uri": {
                    "target": "com.amazonaws.healthlake#S3Uri",
                    "traits": {
                        "smithy.api#documentation": "<p>The <code>S3Uri</code> is the user-specified S3 location of the FHIR data to be\n         imported into AWS HealthLake.</p>",
                        "smithy.api#required": {}
                    }
                },
                "KmsKeyId": {
                    "target": "com.amazonaws.healthlake#EncryptionKeyID",
                    "traits": {
                        "smithy.api#documentation": "<p>The Key Management Service (KMS) key ID used to access the S3 bucket. </p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The configuration of the S3 bucket for either an import or export job. This includes\n         assigning access permissions.</p>"
            }
        },
        "com.amazonaws.healthlake#S3Uri": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 1024
                },
                "smithy.api#pattern": "^s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?$"
            }
        },
        "com.amazonaws.healthlake#SseConfiguration": {
            "type": "structure",
            "members": {
                "KmsEncryptionConfig": {
                    "target": "com.amazonaws.healthlake#KmsEncryptionConfig",
                    "traits": {
                        "smithy.api#documentation": "<p>The Key Management Service (KMS) encryption configuration used to provide details for data\n         encryption.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The server-side encryption key configuration for a customer-provided encryption\n         key.</p>"
            }
        },
        "com.amazonaws.healthlake#StartFHIRExportJob": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#StartFHIRExportJobRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#StartFHIRExportJobResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Start a FHIR export job.</p>"
            }
        },
        "com.amazonaws.healthlake#StartFHIRExportJobRequest": {
            "type": "structure",
            "members": {
                "JobName": {
                    "target": "com.amazonaws.healthlake#JobName",
                    "traits": {
                        "smithy.api#documentation": "<p>The export job name.</p>"
                    }
                },
                "OutputDataConfig": {
                    "target": "com.amazonaws.healthlake#OutputDataConfig",
                    "traits": {
                        "smithy.api#documentation": "<p>The output data configuration supplied when the export job was started.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier from which files are being exported.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DataAccessRoleArn": {
                    "target": "com.amazonaws.healthlake#IamRoleArn",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) used during initiation of the export job.</p>",
                        "smithy.api#required": {}
                    }
                },
                "ClientToken": {
                    "target": "com.amazonaws.healthlake#ClientTokenString",
                    "traits": {
                        "smithy.api#documentation": "<p>An optional user provided token used for ensuring API idempotency.</p>",
                        "smithy.api#idempotencyToken": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#StartFHIRExportJobResponse": {
            "type": "structure",
            "members": {
                "JobId": {
                    "target": "com.amazonaws.healthlake#JobId",
                    "traits": {
                        "smithy.api#documentation": "<p>The export job identifier.</p>",
                        "smithy.api#required": {}
                    }
                },
                "JobStatus": {
                    "target": "com.amazonaws.healthlake#JobStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>The export job status.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier from which files are being exported.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#StartFHIRImportJob": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#StartFHIRImportJobRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#StartFHIRImportJobResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.healthlake#InternalServerException"
                },
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ThrottlingException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Start importing bulk FHIR data into an ACTIVE data store. The import job imports FHIR\n         data found in the <code>InputDataConfig</code> object and stores processing results in the\n            <code>JobOutputDataConfig</code> object.</p>"
            }
        },
        "com.amazonaws.healthlake#StartFHIRImportJobRequest": {
            "type": "structure",
            "members": {
                "JobName": {
                    "target": "com.amazonaws.healthlake#JobName",
                    "traits": {
                        "smithy.api#documentation": "<p>The import job name.</p>"
                    }
                },
                "InputDataConfig": {
                    "target": "com.amazonaws.healthlake#InputDataConfig",
                    "traits": {
                        "smithy.api#documentation": "<p>The input properties for the import job request.</p>",
                        "smithy.api#required": {}
                    }
                },
                "JobOutputDataConfig": {
                    "target": "com.amazonaws.healthlake#OutputDataConfig",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DataAccessRoleArn": {
                    "target": "com.amazonaws.healthlake#IamRoleArn",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that grants access permission to AWS HealthLake.</p>",
                        "smithy.api#required": {}
                    }
                },
                "ClientToken": {
                    "target": "com.amazonaws.healthlake#ClientTokenString",
                    "traits": {
                        "smithy.api#documentation": "<p>The optional user-provided token used for ensuring API idempotency.</p>",
                        "smithy.api#idempotencyToken": {}
                    }
                },
                "ValidationLevel": {
                    "target": "com.amazonaws.healthlake#ValidationLevel",
                    "traits": {
                        "smithy.api#documentation": "<p>The validation level of the import job.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#StartFHIRImportJobResponse": {
            "type": "structure",
            "members": {
                "JobId": {
                    "target": "com.amazonaws.healthlake#JobId",
                    "traits": {
                        "smithy.api#documentation": "<p>The import job identifier.</p>",
                        "smithy.api#required": {}
                    }
                },
                "JobStatus": {
                    "target": "com.amazonaws.healthlake#JobStatus",
                    "traits": {
                        "smithy.api#documentation": "<p>The import job status.</p>",
                        "smithy.api#required": {}
                    }
                },
                "DatastoreId": {
                    "target": "com.amazonaws.healthlake#DatastoreId",
                    "traits": {
                        "smithy.api#documentation": "<p>The data store identifier.</p>"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#String": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 10000
                },
                "smithy.api#pattern": "^[\\P{M}\\p{M}]{0,10000}$"
            }
        },
        "com.amazonaws.healthlake#Tag": {
            "type": "structure",
            "members": {
                "Key": {
                    "target": "com.amazonaws.healthlake#TagKey",
                    "traits": {
                        "smithy.api#documentation": "<p>The key portion of a tag. Tag keys are case sensitive. </p>",
                        "smithy.api#required": {}
                    }
                },
                "Value": {
                    "target": "com.amazonaws.healthlake#TagValue",
                    "traits": {
                        "smithy.api#documentation": "<p> The value portion of a tag. Tag values are case-sensitive.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>A label consisting of a user-defined key and value. The form for tags is {\"Key\",\n         \"Value\"}</p>"
            }
        },
        "com.amazonaws.healthlake#TagKey": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 128
                },
                "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
            }
        },
        "com.amazonaws.healthlake#TagKeyList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.healthlake#TagKey"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 200
                }
            }
        },
        "com.amazonaws.healthlake#TagList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.healthlake#Tag"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 200
                }
            }
        },
        "com.amazonaws.healthlake#TagResource": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#TagResourceRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#TagResourceResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Add a user-specifed key and value tag to a data store.</p>"
            }
        },
        "com.amazonaws.healthlake#TagResourceRequest": {
            "type": "structure",
            "members": {
                "ResourceARN": {
                    "target": "com.amazonaws.healthlake#AmazonResourceName",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that grants access to the data store tags are being added to.</p>",
                        "smithy.api#required": {}
                    }
                },
                "Tags": {
                    "target": "com.amazonaws.healthlake#TagList",
                    "traits": {
                        "smithy.api#documentation": "<p>The user-specified key and value pair tags being added to a data store.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#TagResourceResponse": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#TagValue": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 256
                },
                "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
            }
        },
        "com.amazonaws.healthlake#ThrottlingException": {
            "type": "structure",
            "members": {
                "Message": {
                    "target": "com.amazonaws.healthlake#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The user has exceeded their maximum number of allowed calls to the given API. </p>",
                "smithy.api#error": "client",
                "smithy.api#httpError": 429
            }
        },
        "com.amazonaws.healthlake#Timestamp": {
            "type": "timestamp"
        },
        "com.amazonaws.healthlake#UntagResource": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.healthlake#UntagResourceRequest"
            },
            "output": {
                "target": "com.amazonaws.healthlake#UntagResourceResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.healthlake#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.healthlake#ValidationException"
                }
            ],
            "traits": {
                "smithy.api#documentation": "<p>Remove a user-specifed key and value tag from a data store.</p>"
            }
        },
        "com.amazonaws.healthlake#UntagResourceRequest": {
            "type": "structure",
            "members": {
                "ResourceARN": {
                    "target": "com.amazonaws.healthlake#AmazonResourceName",
                    "traits": {
                        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the data store from which tags are being removed.</p>",
                        "smithy.api#required": {}
                    }
                },
                "TagKeys": {
                    "target": "com.amazonaws.healthlake#TagKeyList",
                    "traits": {
                        "smithy.api#documentation": "<p>The keys for the tags to be removed from the data store.</p>",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.healthlake#UntagResourceResponse": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.healthlake#ValidationException": {
            "type": "structure",
            "members": {
                "Message": {
                    "target": "com.amazonaws.healthlake#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "<p>The user input parameter was invalid.</p>",
                "smithy.api#error": "client",
                "smithy.api#httpError": 400
            }
        },
        "com.amazonaws.healthlake#ValidationLevel": {
            "type": "enum",
            "members": {
                "STRICT": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "strict"
                    }
                },
                "STRUCTURE_ONLY": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "structure-only"
                    }
                },
                "MINIMAL": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "minimal"
                    }
                }
            }
        }
    }
}
