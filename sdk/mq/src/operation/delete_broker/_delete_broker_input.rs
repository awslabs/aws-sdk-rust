// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteBrokerInput {
    /// <p>The unique ID that Amazon MQ generates for the broker.</p>
    pub broker_id: ::std::option::Option<::std::string::String>,
}
impl DeleteBrokerInput {
    /// <p>The unique ID that Amazon MQ generates for the broker.</p>
    pub fn broker_id(&self) -> ::std::option::Option<&str> {
        self.broker_id.as_deref()
    }
}
impl DeleteBrokerInput {
    /// Creates a new builder-style object to manufacture [`DeleteBrokerInput`](crate::operation::delete_broker::DeleteBrokerInput).
    pub fn builder() -> crate::operation::delete_broker::builders::DeleteBrokerInputBuilder {
        crate::operation::delete_broker::builders::DeleteBrokerInputBuilder::default()
    }
}

/// A builder for [`DeleteBrokerInput`](crate::operation::delete_broker::DeleteBrokerInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteBrokerInputBuilder {
    pub(crate) broker_id: ::std::option::Option<::std::string::String>,
}
impl DeleteBrokerInputBuilder {
    /// <p>The unique ID that Amazon MQ generates for the broker.</p>
    /// This field is required.
    pub fn broker_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.broker_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique ID that Amazon MQ generates for the broker.</p>
    pub fn set_broker_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.broker_id = input;
        self
    }
    /// <p>The unique ID that Amazon MQ generates for the broker.</p>
    pub fn get_broker_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.broker_id
    }
    /// Consumes the builder and constructs a [`DeleteBrokerInput`](crate::operation::delete_broker::DeleteBrokerInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_broker::DeleteBrokerInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_broker::DeleteBrokerInput { broker_id: self.broker_id })
    }
}
