// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeConfigurationRevisionInput {
    /// <p>The unique ID that Amazon MQ generates for the configuration.</p>
    pub configuration_id: ::std::option::Option<::std::string::String>,
    /// <p>The revision of the configuration.</p>
    pub configuration_revision: ::std::option::Option<::std::string::String>,
}
impl DescribeConfigurationRevisionInput {
    /// <p>The unique ID that Amazon MQ generates for the configuration.</p>
    pub fn configuration_id(&self) -> ::std::option::Option<&str> {
        self.configuration_id.as_deref()
    }
    /// <p>The revision of the configuration.</p>
    pub fn configuration_revision(&self) -> ::std::option::Option<&str> {
        self.configuration_revision.as_deref()
    }
}
impl DescribeConfigurationRevisionInput {
    /// Creates a new builder-style object to manufacture [`DescribeConfigurationRevisionInput`](crate::operation::describe_configuration_revision::DescribeConfigurationRevisionInput).
    pub fn builder() -> crate::operation::describe_configuration_revision::builders::DescribeConfigurationRevisionInputBuilder {
        crate::operation::describe_configuration_revision::builders::DescribeConfigurationRevisionInputBuilder::default()
    }
}

/// A builder for [`DescribeConfigurationRevisionInput`](crate::operation::describe_configuration_revision::DescribeConfigurationRevisionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeConfigurationRevisionInputBuilder {
    pub(crate) configuration_id: ::std::option::Option<::std::string::String>,
    pub(crate) configuration_revision: ::std::option::Option<::std::string::String>,
}
impl DescribeConfigurationRevisionInputBuilder {
    /// <p>The unique ID that Amazon MQ generates for the configuration.</p>
    /// This field is required.
    pub fn configuration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.configuration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique ID that Amazon MQ generates for the configuration.</p>
    pub fn set_configuration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.configuration_id = input;
        self
    }
    /// <p>The unique ID that Amazon MQ generates for the configuration.</p>
    pub fn get_configuration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.configuration_id
    }
    /// <p>The revision of the configuration.</p>
    /// This field is required.
    pub fn configuration_revision(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.configuration_revision = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The revision of the configuration.</p>
    pub fn set_configuration_revision(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.configuration_revision = input;
        self
    }
    /// <p>The revision of the configuration.</p>
    pub fn get_configuration_revision(&self) -> &::std::option::Option<::std::string::String> {
        &self.configuration_revision
    }
    /// Consumes the builder and constructs a [`DescribeConfigurationRevisionInput`](crate::operation::describe_configuration_revision::DescribeConfigurationRevisionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_configuration_revision::DescribeConfigurationRevisionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_configuration_revision::DescribeConfigurationRevisionInput {
            configuration_id: self.configuration_id,
            configuration_revision: self.configuration_revision,
        })
    }
}
