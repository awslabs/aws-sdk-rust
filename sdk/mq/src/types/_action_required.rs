// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The action required to resolve a broker issue when the broker is in a CRITICAL_ACTION_REQUIRED state.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActionRequired {
    /// <p>The code you can use to resolve your broker issue when the broker is in a CRITICAL_ACTION_REQUIRED state. You can find instructions by choosing the link for your code from the list of action required codes in <a href="https://docs.aws.amazon.com//latest/developer-guide/troubleshooting-action-required-codes.html">Amazon MQ action required codes</a>. Each code references a topic with detailed information, instructions, and recommendations for how to resolve the issue and prevent future occurrences.</p>
    #[doc(hidden)]
    pub action_required_code: std::option::Option<std::string::String>,
    /// <p>Information about the action required to resolve your broker issue when the broker is in a CRITICAL_ACTION_REQUIRED state.</p>
    #[doc(hidden)]
    pub action_required_info: std::option::Option<std::string::String>,
}
impl ActionRequired {
    /// <p>The code you can use to resolve your broker issue when the broker is in a CRITICAL_ACTION_REQUIRED state. You can find instructions by choosing the link for your code from the list of action required codes in <a href="https://docs.aws.amazon.com//latest/developer-guide/troubleshooting-action-required-codes.html">Amazon MQ action required codes</a>. Each code references a topic with detailed information, instructions, and recommendations for how to resolve the issue and prevent future occurrences.</p>
    pub fn action_required_code(&self) -> std::option::Option<&str> {
        self.action_required_code.as_deref()
    }
    /// <p>Information about the action required to resolve your broker issue when the broker is in a CRITICAL_ACTION_REQUIRED state.</p>
    pub fn action_required_info(&self) -> std::option::Option<&str> {
        self.action_required_info.as_deref()
    }
}
impl ActionRequired {
    /// Creates a new builder-style object to manufacture [`ActionRequired`](crate::types::ActionRequired).
    pub fn builder() -> crate::types::builders::ActionRequiredBuilder {
        crate::types::builders::ActionRequiredBuilder::default()
    }
}

/// A builder for [`ActionRequired`](crate::types::ActionRequired).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActionRequiredBuilder {
    pub(crate) action_required_code: std::option::Option<std::string::String>,
    pub(crate) action_required_info: std::option::Option<std::string::String>,
}
impl ActionRequiredBuilder {
    /// <p>The code you can use to resolve your broker issue when the broker is in a CRITICAL_ACTION_REQUIRED state. You can find instructions by choosing the link for your code from the list of action required codes in <a href="https://docs.aws.amazon.com//latest/developer-guide/troubleshooting-action-required-codes.html">Amazon MQ action required codes</a>. Each code references a topic with detailed information, instructions, and recommendations for how to resolve the issue and prevent future occurrences.</p>
    pub fn action_required_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.action_required_code = Some(input.into());
        self
    }
    /// <p>The code you can use to resolve your broker issue when the broker is in a CRITICAL_ACTION_REQUIRED state. You can find instructions by choosing the link for your code from the list of action required codes in <a href="https://docs.aws.amazon.com//latest/developer-guide/troubleshooting-action-required-codes.html">Amazon MQ action required codes</a>. Each code references a topic with detailed information, instructions, and recommendations for how to resolve the issue and prevent future occurrences.</p>
    pub fn set_action_required_code(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.action_required_code = input;
        self
    }
    /// <p>Information about the action required to resolve your broker issue when the broker is in a CRITICAL_ACTION_REQUIRED state.</p>
    pub fn action_required_info(mut self, input: impl Into<std::string::String>) -> Self {
        self.action_required_info = Some(input.into());
        self
    }
    /// <p>Information about the action required to resolve your broker issue when the broker is in a CRITICAL_ACTION_REQUIRED state.</p>
    pub fn set_action_required_info(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.action_required_info = input;
        self
    }
    /// Consumes the builder and constructs a [`ActionRequired`](crate::types::ActionRequired).
    pub fn build(self) -> crate::types::ActionRequired {
        crate::types::ActionRequired {
            action_required_code: self.action_required_code,
            action_required_info: self.action_required_info,
        }
    }
}
