// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Types of broker engines.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BrokerEngineType {
    /// <p>The broker's engine type.</p>
    #[doc(hidden)]
    pub engine_type: std::option::Option<crate::types::EngineType>,
    /// <p>The list of engine versions.</p>
    #[doc(hidden)]
    pub engine_versions: std::option::Option<std::vec::Vec<crate::types::EngineVersion>>,
}
impl BrokerEngineType {
    /// <p>The broker's engine type.</p>
    pub fn engine_type(&self) -> std::option::Option<&crate::types::EngineType> {
        self.engine_type.as_ref()
    }
    /// <p>The list of engine versions.</p>
    pub fn engine_versions(&self) -> std::option::Option<&[crate::types::EngineVersion]> {
        self.engine_versions.as_deref()
    }
}
impl BrokerEngineType {
    /// Creates a new builder-style object to manufacture [`BrokerEngineType`](crate::types::BrokerEngineType).
    pub fn builder() -> crate::types::builders::BrokerEngineTypeBuilder {
        crate::types::builders::BrokerEngineTypeBuilder::default()
    }
}

/// A builder for [`BrokerEngineType`](crate::types::BrokerEngineType).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BrokerEngineTypeBuilder {
    pub(crate) engine_type: std::option::Option<crate::types::EngineType>,
    pub(crate) engine_versions: std::option::Option<std::vec::Vec<crate::types::EngineVersion>>,
}
impl BrokerEngineTypeBuilder {
    /// <p>The broker's engine type.</p>
    pub fn engine_type(mut self, input: crate::types::EngineType) -> Self {
        self.engine_type = Some(input);
        self
    }
    /// <p>The broker's engine type.</p>
    pub fn set_engine_type(mut self, input: std::option::Option<crate::types::EngineType>) -> Self {
        self.engine_type = input;
        self
    }
    /// Appends an item to `engine_versions`.
    ///
    /// To override the contents of this collection use [`set_engine_versions`](Self::set_engine_versions).
    ///
    /// <p>The list of engine versions.</p>
    pub fn engine_versions(mut self, input: crate::types::EngineVersion) -> Self {
        let mut v = self.engine_versions.unwrap_or_default();
        v.push(input);
        self.engine_versions = Some(v);
        self
    }
    /// <p>The list of engine versions.</p>
    pub fn set_engine_versions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::EngineVersion>>,
    ) -> Self {
        self.engine_versions = input;
        self
    }
    /// Consumes the builder and constructs a [`BrokerEngineType`](crate::types::BrokerEngineType).
    pub fn build(self) -> crate::types::BrokerEngineType {
        crate::types::BrokerEngineType {
            engine_type: self.engine_type,
            engine_versions: self.engine_versions,
        }
    }
}
