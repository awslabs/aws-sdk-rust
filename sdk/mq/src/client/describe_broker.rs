// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeBroker`](crate::client::fluent_builders::DescribeBroker) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`broker_id(impl Into<String>)`](crate::client::fluent_builders::DescribeBroker::broker_id) / [`set_broker_id(Option<String>)`](crate::client::fluent_builders::DescribeBroker::set_broker_id): <p>The unique ID that Amazon MQ generates for the broker.</p>
    /// - On success, responds with [`DescribeBrokerOutput`](crate::output::DescribeBrokerOutput) with field(s):
    ///   - [`actions_required(Option<Vec<ActionRequired>>)`](crate::output::DescribeBrokerOutput::actions_required): <p>A list of actions required for a broker.</p>
    ///   - [`authentication_strategy(Option<AuthenticationStrategy>)`](crate::output::DescribeBrokerOutput::authentication_strategy): <p>The authentication strategy used to secure the broker. The default is SIMPLE.</p>
    ///   - [`auto_minor_version_upgrade(bool)`](crate::output::DescribeBrokerOutput::auto_minor_version_upgrade): <p>Enables automatic upgrades to new minor versions for brokers, as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window of the broker or after a manual broker reboot.</p>
    ///   - [`broker_arn(Option<String>)`](crate::output::DescribeBrokerOutput::broker_arn): <p>The broker's Amazon Resource Name (ARN).</p>
    ///   - [`broker_id(Option<String>)`](crate::output::DescribeBrokerOutput::broker_id): <p>The unique ID that Amazon MQ generates for the broker.</p>
    ///   - [`broker_instances(Option<Vec<BrokerInstance>>)`](crate::output::DescribeBrokerOutput::broker_instances): <p>A list of information about allocated brokers.</p>
    ///   - [`broker_name(Option<String>)`](crate::output::DescribeBrokerOutput::broker_name): <p>The broker's name. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain white spaces, brackets, wildcard characters, or special characters.</p>
    ///   - [`broker_state(Option<BrokerState>)`](crate::output::DescribeBrokerOutput::broker_state): <p>The broker's status.</p>
    ///   - [`configurations(Option<Configurations>)`](crate::output::DescribeBrokerOutput::configurations): <p>The list of all revisions for the specified configuration.</p>
    ///   - [`created(Option<DateTime>)`](crate::output::DescribeBrokerOutput::created): <p>The time when the broker was created.</p>
    ///   - [`deployment_mode(Option<DeploymentMode>)`](crate::output::DescribeBrokerOutput::deployment_mode): <p>The broker's deployment mode.</p>
    ///   - [`encryption_options(Option<EncryptionOptions>)`](crate::output::DescribeBrokerOutput::encryption_options): <p>Encryption options for the broker. Does not apply to RabbitMQ brokers.</p>
    ///   - [`engine_type(Option<EngineType>)`](crate::output::DescribeBrokerOutput::engine_type): <p>The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.</p>
    ///   - [`engine_version(Option<String>)`](crate::output::DescribeBrokerOutput::engine_version): <p>The broker engine's version. For a list of supported engine versions, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported engines</a>.</p>
    ///   - [`host_instance_type(Option<String>)`](crate::output::DescribeBrokerOutput::host_instance_type): <p>The broker's instance type.</p>
    ///   - [`ldap_server_metadata(Option<LdapServerMetadataOutput>)`](crate::output::DescribeBrokerOutput::ldap_server_metadata): <p>The metadata of the LDAP server used to authenticate and authorize connections to the broker.</p>
    ///   - [`logs(Option<LogsSummary>)`](crate::output::DescribeBrokerOutput::logs): <p>The list of information about logs currently enabled and pending to be deployed for the specified broker.</p>
    ///   - [`maintenance_window_start_time(Option<WeeklyStartTime>)`](crate::output::DescribeBrokerOutput::maintenance_window_start_time): <p>The parameters that determine the WeeklyStartTime.</p>
    ///   - [`pending_authentication_strategy(Option<AuthenticationStrategy>)`](crate::output::DescribeBrokerOutput::pending_authentication_strategy): <p>The authentication strategy that will be applied when the broker is rebooted. The default is SIMPLE.</p>
    ///   - [`pending_engine_version(Option<String>)`](crate::output::DescribeBrokerOutput::pending_engine_version): <p>The broker engine version to upgrade to. For a list of supported engine versions, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported engines</a>.</p>
    ///   - [`pending_host_instance_type(Option<String>)`](crate::output::DescribeBrokerOutput::pending_host_instance_type): <p>The broker's host instance type to upgrade to. For a list of supported instance types, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker.html#broker-instance-types">Broker instance types</a>.</p>
    ///   - [`pending_ldap_server_metadata(Option<LdapServerMetadataOutput>)`](crate::output::DescribeBrokerOutput::pending_ldap_server_metadata): <p>The metadata of the LDAP server that will be used to authenticate and authorize connections to the broker after it is rebooted.</p>
    ///   - [`pending_security_groups(Option<Vec<String>>)`](crate::output::DescribeBrokerOutput::pending_security_groups): <p>The list of pending security groups to authorize connections to brokers.</p>
    ///   - [`publicly_accessible(bool)`](crate::output::DescribeBrokerOutput::publicly_accessible): <p>Enables connections from applications outside of the VPC that hosts the broker's subnets.</p>
    ///   - [`security_groups(Option<Vec<String>>)`](crate::output::DescribeBrokerOutput::security_groups): <p>The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.</p>
    ///   - [`storage_type(Option<BrokerStorageType>)`](crate::output::DescribeBrokerOutput::storage_type): <p>The broker's storage type.</p>
    ///   - [`subnet_ids(Option<Vec<String>>)`](crate::output::DescribeBrokerOutput::subnet_ids): <p>The list of groups that define which subnets and IP ranges the broker can use from different Availability Zones.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::DescribeBrokerOutput::tags): <p>The list of all tags associated with this broker.</p>
    ///   - [`users(Option<Vec<UserSummary>>)`](crate::output::DescribeBrokerOutput::users): <p>The list of all broker usernames for the specified broker.</p>
    /// - On failure, responds with [`SdkError<DescribeBrokerError>`](crate::error::DescribeBrokerError)
    pub fn describe_broker(&self) -> crate::client::fluent_builders::DescribeBroker {
        crate::client::fluent_builders::DescribeBroker::new(self.handle.clone())
    }
}
