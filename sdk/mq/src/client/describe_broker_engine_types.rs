// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeBrokerEngineTypes`](crate::client::fluent_builders::DescribeBrokerEngineTypes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`engine_type(impl Into<String>)`](crate::client::fluent_builders::DescribeBrokerEngineTypes::engine_type) / [`set_engine_type(Option<String>)`](crate::client::fluent_builders::DescribeBrokerEngineTypes::set_engine_type): <p>Filter response by engine type.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeBrokerEngineTypes::max_results) / [`set_max_results(i32)`](crate::client::fluent_builders::DescribeBrokerEngineTypes::set_max_results): <p>The maximum number of brokers that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeBrokerEngineTypes::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeBrokerEngineTypes::set_next_token): <p>The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.</p>
    /// - On success, responds with [`DescribeBrokerEngineTypesOutput`](crate::output::DescribeBrokerEngineTypesOutput) with field(s):
    ///   - [`broker_engine_types(Option<Vec<BrokerEngineType>>)`](crate::output::DescribeBrokerEngineTypesOutput::broker_engine_types): <p>List of available engine types and versions.</p>
    ///   - [`max_results(i32)`](crate::output::DescribeBrokerEngineTypesOutput::max_results): <p>Required. The maximum number of engine types that can be returned per page (20 by default). This value must be an integer from 5 to 100.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeBrokerEngineTypesOutput::next_token): <p>The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.</p>
    /// - On failure, responds with [`SdkError<DescribeBrokerEngineTypesError>`](crate::error::DescribeBrokerEngineTypesError)
    pub fn describe_broker_engine_types(
        &self,
    ) -> crate::client::fluent_builders::DescribeBrokerEngineTypes {
        crate::client::fluent_builders::DescribeBrokerEngineTypes::new(self.handle.clone())
    }
}
