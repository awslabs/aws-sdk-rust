// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_broker_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_broker::UpdateBrokerInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.authentication_strategy {
        object.key("authenticationStrategy").string(var_1.as_str());
    }
    if input.auto_minor_version_upgrade {
        object
            .key("autoMinorVersionUpgrade")
            .boolean(input.auto_minor_version_upgrade);
    }
    if let Some(var_2) = &input.configuration {
        #[allow(unused_mut)]
        let mut object_3 = object.key("configuration").start_object();
        crate::protocol_serde::shape_configuration_id::ser_configuration_id(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.engine_version {
        object.key("engineVersion").string(var_4.as_str());
    }
    if let Some(var_5) = &input.host_instance_type {
        object.key("hostInstanceType").string(var_5.as_str());
    }
    if let Some(var_6) = &input.ldap_server_metadata {
        #[allow(unused_mut)]
        let mut object_7 = object.key("ldapServerMetadata").start_object();
        crate::protocol_serde::shape_ldap_server_metadata_input::ser_ldap_server_metadata_input(
            &mut object_7,
            var_6,
        )?;
        object_7.finish();
    }
    if let Some(var_8) = &input.logs {
        #[allow(unused_mut)]
        let mut object_9 = object.key("logs").start_object();
        crate::protocol_serde::shape_logs::ser_logs(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.maintenance_window_start_time {
        #[allow(unused_mut)]
        let mut object_11 = object.key("maintenanceWindowStartTime").start_object();
        crate::protocol_serde::shape_weekly_start_time::ser_weekly_start_time(
            &mut object_11,
            var_10,
        )?;
        object_11.finish();
    }
    if let Some(var_12) = &input.security_groups {
        let mut array_13 = object.key("securityGroups").start_array();
        for item_14 in var_12 {
            {
                array_13.value().string(item_14.as_str());
            }
        }
        array_13.finish();
    }
    Ok(())
}
