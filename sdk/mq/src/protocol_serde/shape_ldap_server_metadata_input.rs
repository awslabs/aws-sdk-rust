// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_ldap_server_metadata_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::LdapServerMetadataInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.hosts {
        let mut array_2 = object.key("hosts").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.role_base {
        object.key("roleBase").string(var_4.as_str());
    }
    if let Some(var_5) = &input.role_name {
        object.key("roleName").string(var_5.as_str());
    }
    if let Some(var_6) = &input.role_search_matching {
        object.key("roleSearchMatching").string(var_6.as_str());
    }
    if let Some(var_7) = &input.role_search_subtree {
        object.key("roleSearchSubtree").boolean(*var_7);
    }
    if let Some(var_8) = &input.service_account_password {
        object.key("serviceAccountPassword").string(var_8.as_str());
    }
    if let Some(var_9) = &input.service_account_username {
        object.key("serviceAccountUsername").string(var_9.as_str());
    }
    if let Some(var_10) = &input.user_base {
        object.key("userBase").string(var_10.as_str());
    }
    if let Some(var_11) = &input.user_role_name {
        object.key("userRoleName").string(var_11.as_str());
    }
    if let Some(var_12) = &input.user_search_matching {
        object.key("userSearchMatching").string(var_12.as_str());
    }
    if let Some(var_13) = &input.user_search_subtree {
        object.key("userSearchSubtree").boolean(*var_13);
    }
    Ok(())
}
