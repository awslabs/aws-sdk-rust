// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_environment;

pub(crate) mod shape_create_kx_changeset;

pub(crate) mod shape_create_kx_cluster;

pub(crate) mod shape_create_kx_database;

pub(crate) mod shape_create_kx_environment;

pub(crate) mod shape_create_kx_user;

pub(crate) mod shape_delete_environment;

pub(crate) mod shape_delete_kx_cluster;

pub(crate) mod shape_delete_kx_database;

pub(crate) mod shape_delete_kx_environment;

pub(crate) mod shape_delete_kx_user;

pub(crate) mod shape_get_environment;

pub(crate) mod shape_get_kx_changeset;

pub(crate) mod shape_get_kx_cluster;

pub(crate) mod shape_get_kx_connection_string;

pub(crate) mod shape_get_kx_database;

pub(crate) mod shape_get_kx_environment;

pub(crate) mod shape_get_kx_user;

pub(crate) mod shape_list_environments;

pub(crate) mod shape_list_kx_changesets;

pub(crate) mod shape_list_kx_cluster_nodes;

pub(crate) mod shape_list_kx_clusters;

pub(crate) mod shape_list_kx_databases;

pub(crate) mod shape_list_kx_environments;

pub(crate) mod shape_list_kx_users;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_environment;

pub(crate) mod shape_update_kx_cluster_code_configuration;

pub(crate) mod shape_update_kx_cluster_databases;

pub(crate) mod shape_update_kx_database;

pub(crate) mod shape_update_kx_environment;

pub(crate) mod shape_update_kx_environment_network;

pub(crate) mod shape_update_kx_user;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_environment_input;

pub(crate) mod shape_create_kx_changeset_input;

pub(crate) mod shape_create_kx_cluster_input;

pub(crate) mod shape_create_kx_database_input;

pub(crate) mod shape_create_kx_environment_input;

pub(crate) mod shape_create_kx_user_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_resource_already_exists_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_environment_input;

pub(crate) mod shape_update_kx_cluster_code_configuration_input;

pub(crate) mod shape_update_kx_cluster_databases_input;

pub(crate) mod shape_update_kx_database_input;

pub(crate) mod shape_update_kx_environment_input;

pub(crate) mod shape_update_kx_environment_network_input;

pub(crate) mod shape_update_kx_user_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_auto_scaling_configuration;

pub(crate) mod shape_availability_zone_ids;

pub(crate) mod shape_capacity_configuration;

pub(crate) mod shape_change_request;

pub(crate) mod shape_change_requests;

pub(crate) mod shape_code_configuration;

pub(crate) mod shape_custom_dns_configuration;

pub(crate) mod shape_custom_dns_server;

pub(crate) mod shape_environment;

pub(crate) mod shape_environment_list;

pub(crate) mod shape_error_info;

pub(crate) mod shape_federation_parameters;

pub(crate) mod shape_kx_cache_storage_configuration;

pub(crate) mod shape_kx_cache_storage_configurations;

pub(crate) mod shape_kx_changesets;

pub(crate) mod shape_kx_cluster_code_deployment_configuration;

pub(crate) mod shape_kx_clusters;

pub(crate) mod shape_kx_command_line_argument;

pub(crate) mod shape_kx_command_line_arguments;

pub(crate) mod shape_kx_database_configuration;

pub(crate) mod shape_kx_database_configurations;

pub(crate) mod shape_kx_databases;

pub(crate) mod shape_kx_deployment_configuration;

pub(crate) mod shape_kx_environment_list;

pub(crate) mod shape_kx_node_summaries;

pub(crate) mod shape_kx_savedown_storage_configuration;

pub(crate) mod shape_kx_user_list;

pub(crate) mod shape_superuser_parameters;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_transit_gateway_configuration;

pub(crate) mod shape_vpc_configuration;

pub(crate) mod shape_kx_changeset_list_entry;

pub(crate) mod shape_kx_cluster;

pub(crate) mod shape_kx_database_cache_configuration;

pub(crate) mod shape_kx_database_list_entry;

pub(crate) mod shape_kx_environment;

pub(crate) mod shape_kx_node;

pub(crate) mod shape_kx_user;

pub(crate) mod shape_network_acl_configuration;

pub(crate) mod shape_network_acl_entry;

pub(crate) mod shape_security_group_id_list;

pub(crate) mod shape_subnet_id_list;

pub(crate) mod shape_attribute_map;

pub(crate) mod shape_icmp_type_code;

pub(crate) mod shape_kx_database_cache_configurations;

pub(crate) mod shape_port_range;

pub(crate) mod shape_db_paths;
