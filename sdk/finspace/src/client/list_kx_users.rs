// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListKxUsers`](crate::operation::list_kx_users::builders::ListKxUsersFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_id(impl Into<String>)`](crate::operation::list_kx_users::builders::ListKxUsersFluentBuilder::environment_id) / [`set_environment_id(Option<String>)`](crate::operation::list_kx_users::builders::ListKxUsersFluentBuilder::set_environment_id):<br>required: **true**<br><p>A unique identifier for the kdb environment.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_kx_users::builders::ListKxUsersFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_kx_users::builders::ListKxUsersFluentBuilder::set_next_token):<br>required: **false**<br><p>A token that indicates where a results page should begin.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_kx_users::builders::ListKxUsersFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_kx_users::builders::ListKxUsersFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return in this request.</p><br>
    /// - On success, responds with [`ListKxUsersOutput`](crate::operation::list_kx_users::ListKxUsersOutput) with field(s):
    ///   - [`users(Option<Vec::<KxUser>>)`](crate::operation::list_kx_users::ListKxUsersOutput::users): <p>A list of users in a kdb environment.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_kx_users::ListKxUsersOutput::next_token): <p>A token that indicates where a results page should begin.</p>
    /// - On failure, responds with [`SdkError<ListKxUsersError>`](crate::operation::list_kx_users::ListKxUsersError)
    pub fn list_kx_users(&self) -> crate::operation::list_kx_users::builders::ListKxUsersFluentBuilder {
        crate::operation::list_kx_users::builders::ListKxUsersFluentBuilder::new(self.handle.clone())
    }
}
