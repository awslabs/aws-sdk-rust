// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_kx_cluster_code_configuration_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_kx_cluster_code_configuration::UpdateKxClusterCodeConfigurationInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("clientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.code {
        #[allow(unused_mut)]
        let mut object_3 = object.key("code").start_object();
        crate::protocol_serde::shape_code_configuration::ser_code_configuration(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.command_line_arguments {
        let mut array_5 = object.key("commandLineArguments").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_kx_command_line_argument::ser_kx_command_line_argument(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    if let Some(var_8) = &input.deployment_configuration {
        #[allow(unused_mut)]
        let mut object_9 = object.key("deploymentConfiguration").start_object();
        crate::protocol_serde::shape_kx_cluster_code_deployment_configuration::ser_kx_cluster_code_deployment_configuration(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.initialization_script {
        object.key("initializationScript").string(var_10.as_str());
    }
    Ok(())
}
