// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListEphemerides`](crate::client::fluent_builders::ListEphemerides) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEphemerides::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`satellite_id(impl Into<String>)`](crate::client::fluent_builders::ListEphemerides::satellite_id) / [`set_satellite_id(Option<String>)`](crate::client::fluent_builders::ListEphemerides::set_satellite_id): <p>The AWS Ground Station satellite ID to list ephemeris for.</p>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::ListEphemerides::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::ListEphemerides::set_start_time): <p>The start time to list in UTC. The operation will return an ephemeris if its expiration time is within the time range defined by the <code>startTime</code> and <code>endTime</code>.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::ListEphemerides::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::ListEphemerides::set_end_time): <p>The end time to list in UTC. The operation will return an ephemeris if its expiration time is within the time range defined by the <code>startTime</code> and <code>endTime</code>.</p>
    ///   - [`status_list(Vec<EphemerisStatus>)`](crate::client::fluent_builders::ListEphemerides::status_list) / [`set_status_list(Option<Vec<EphemerisStatus>>)`](crate::client::fluent_builders::ListEphemerides::set_status_list): <p>The list of ephemeris status to return.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListEphemerides::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListEphemerides::set_max_results): <p>Maximum number of ephemerides to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEphemerides::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEphemerides::set_next_token): <p>Pagination token.</p>
    /// - On success, responds with [`ListEphemeridesOutput`](crate::output::ListEphemeridesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListEphemeridesOutput::next_token): <p>Pagination token.</p>
    ///   - [`ephemerides(Option<Vec<EphemerisItem>>)`](crate::output::ListEphemeridesOutput::ephemerides): <p>List of ephemerides.</p>
    /// - On failure, responds with [`SdkError<ListEphemeridesError>`](crate::error::ListEphemeridesError)
    pub fn list_ephemerides(&self) -> crate::client::fluent_builders::ListEphemerides {
        crate::client::fluent_builders::ListEphemerides::new(self.handle.clone())
    }
}
