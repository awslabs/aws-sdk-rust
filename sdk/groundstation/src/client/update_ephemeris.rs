// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateEphemeris`](crate::client::fluent_builders::UpdateEphemeris) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ephemeris_id(impl Into<String>)`](crate::client::fluent_builders::UpdateEphemeris::ephemeris_id) / [`set_ephemeris_id(Option<String>)`](crate::client::fluent_builders::UpdateEphemeris::set_ephemeris_id): <p>The AWS Ground Station ephemeris ID.</p>
    ///   - [`enabled(bool)`](crate::client::fluent_builders::UpdateEphemeris::enabled) / [`set_enabled(Option<bool>)`](crate::client::fluent_builders::UpdateEphemeris::set_enabled): <p>Whether the ephemeris is enabled or not. Changing this value will not require the ephemeris to be re-validated.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateEphemeris::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateEphemeris::set_name): <p>A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.</p>
    ///   - [`priority(i32)`](crate::client::fluent_builders::UpdateEphemeris::priority) / [`set_priority(Option<i32>)`](crate::client::fluent_builders::UpdateEphemeris::set_priority): <p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p>  <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p>  <p>Priority must be 1 or greater</p>
    /// - On success, responds with [`UpdateEphemerisOutput`](crate::output::UpdateEphemerisOutput) with field(s):
    ///   - [`ephemeris_id(Option<String>)`](crate::output::UpdateEphemerisOutput::ephemeris_id): <p>The AWS Ground Station ephemeris ID.</p>
    /// - On failure, responds with [`SdkError<UpdateEphemerisError>`](crate::error::UpdateEphemerisError)
    pub fn update_ephemeris(&self) -> crate::client::fluent_builders::UpdateEphemeris {
        crate::client::fluent_builders::UpdateEphemeris::new(self.handle.clone())
    }
}
