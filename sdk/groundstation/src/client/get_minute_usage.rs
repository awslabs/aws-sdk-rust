// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMinuteUsage`](crate::client::fluent_builders::GetMinuteUsage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`month(i32)`](crate::client::fluent_builders::GetMinuteUsage::month) / [`set_month(Option<i32>)`](crate::client::fluent_builders::GetMinuteUsage::set_month): <p>The month being requested, with a value of 1-12.</p>
    ///   - [`year(i32)`](crate::client::fluent_builders::GetMinuteUsage::year) / [`set_year(Option<i32>)`](crate::client::fluent_builders::GetMinuteUsage::set_year): <p>The year being requested, in the format of YYYY.</p>
    /// - On success, responds with [`GetMinuteUsageOutput`](crate::output::GetMinuteUsageOutput) with field(s):
    ///   - [`is_reserved_minutes_customer(Option<bool>)`](crate::output::GetMinuteUsageOutput::is_reserved_minutes_customer): <p>Returns whether or not an account has signed up for the reserved minutes pricing plan, specific to the month being requested.</p>
    ///   - [`total_reserved_minute_allocation(Option<i32>)`](crate::output::GetMinuteUsageOutput::total_reserved_minute_allocation): <p>Total number of reserved minutes allocated, specific to the month being requested.</p>
    ///   - [`upcoming_minutes_scheduled(Option<i32>)`](crate::output::GetMinuteUsageOutput::upcoming_minutes_scheduled): <p>Upcoming minutes scheduled for an account, specific to the month being requested.</p>
    ///   - [`total_scheduled_minutes(Option<i32>)`](crate::output::GetMinuteUsageOutput::total_scheduled_minutes): <p>Total scheduled minutes for an account, specific to the month being requested.</p>
    ///   - [`estimated_minutes_remaining(Option<i32>)`](crate::output::GetMinuteUsageOutput::estimated_minutes_remaining): <p>Estimated number of minutes remaining for an account, specific to the month being requested.</p>
    /// - On failure, responds with [`SdkError<GetMinuteUsageError>`](crate::error::GetMinuteUsageError)
    pub fn get_minute_usage(&self) -> crate::client::fluent_builders::GetMinuteUsage {
        crate::client::fluent_builders::GetMinuteUsage::new(self.handle.clone())
    }
}
