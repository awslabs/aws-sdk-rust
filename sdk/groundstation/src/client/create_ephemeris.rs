// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEphemeris`](crate::client::fluent_builders::CreateEphemeris) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`satellite_id(impl Into<String>)`](crate::client::fluent_builders::CreateEphemeris::satellite_id) / [`set_satellite_id(Option<String>)`](crate::client::fluent_builders::CreateEphemeris::set_satellite_id): <p>AWS Ground Station satellite ID for this ephemeris.</p>
    ///   - [`enabled(bool)`](crate::client::fluent_builders::CreateEphemeris::enabled) / [`set_enabled(Option<bool>)`](crate::client::fluent_builders::CreateEphemeris::set_enabled): <p>Whether to set the ephemeris status to <code>ENABLED</code> after validation.</p>  <p>Setting this to false will set the ephemeris status to <code>DISABLED</code> after validation.</p>
    ///   - [`priority(i32)`](crate::client::fluent_builders::CreateEphemeris::priority) / [`set_priority(Option<i32>)`](crate::client::fluent_builders::CreateEphemeris::set_priority): <p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p>  <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p>  <p>Priority must be 1 or greater</p>
    ///   - [`expiration_time(DateTime)`](crate::client::fluent_builders::CreateEphemeris::expiration_time) / [`set_expiration_time(Option<DateTime>)`](crate::client::fluent_builders::CreateEphemeris::set_expiration_time): <p>An overall expiration time for the ephemeris in UTC, after which it will become <code>EXPIRED</code>.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateEphemeris::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateEphemeris::set_name): <p>A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.</p>
    ///   - [`kms_key_arn(impl Into<String>)`](crate::client::fluent_builders::CreateEphemeris::kms_key_arn) / [`set_kms_key_arn(Option<String>)`](crate::client::fluent_builders::CreateEphemeris::set_kms_key_arn): <p>The ARN of a KMS key used to encrypt the ephemeris in Ground Station.</p>
    ///   - [`ephemeris(EphemerisData)`](crate::client::fluent_builders::CreateEphemeris::ephemeris) / [`set_ephemeris(Option<EphemerisData>)`](crate::client::fluent_builders::CreateEphemeris::set_ephemeris): <p>Ephemeris data.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateEphemeris::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateEphemeris::set_tags): <p>Tags assigned to an ephemeris.</p>
    /// - On success, responds with [`CreateEphemerisOutput`](crate::output::CreateEphemerisOutput) with field(s):
    ///   - [`ephemeris_id(Option<String>)`](crate::output::CreateEphemerisOutput::ephemeris_id): <p>The AWS Ground Station ephemeris ID.</p>
    /// - On failure, responds with [`SdkError<CreateEphemerisError>`](crate::error::CreateEphemerisError)
    pub fn create_ephemeris(&self) -> crate::client::fluent_builders::CreateEphemeris {
        crate::client::fluent_builders::CreateEphemeris::new(self.handle.clone())
    }
}
