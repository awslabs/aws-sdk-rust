// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListDataflowEndpointGroupsOutput {
    /// <p>Next token returned in the response of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>A list of dataflow endpoint groups.</p>
    #[doc(hidden)]
    pub dataflow_endpoint_group_list:
        std::option::Option<std::vec::Vec<crate::types::DataflowEndpointListItem>>,
    _request_id: Option<String>,
}
impl ListDataflowEndpointGroupsOutput {
    /// <p>Next token returned in the response of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>A list of dataflow endpoint groups.</p>
    pub fn dataflow_endpoint_group_list(
        &self,
    ) -> std::option::Option<&[crate::types::DataflowEndpointListItem]> {
        self.dataflow_endpoint_group_list.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListDataflowEndpointGroupsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListDataflowEndpointGroupsOutput {
    /// Creates a new builder-style object to manufacture [`ListDataflowEndpointGroupsOutput`](crate::operation::list_dataflow_endpoint_groups::ListDataflowEndpointGroupsOutput).
    pub fn builder() -> crate::operation::list_dataflow_endpoint_groups::builders::ListDataflowEndpointGroupsOutputBuilder{
        crate::operation::list_dataflow_endpoint_groups::builders::ListDataflowEndpointGroupsOutputBuilder::default()
    }
}

/// A builder for [`ListDataflowEndpointGroupsOutput`](crate::operation::list_dataflow_endpoint_groups::ListDataflowEndpointGroupsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListDataflowEndpointGroupsOutputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) dataflow_endpoint_group_list:
        std::option::Option<std::vec::Vec<crate::types::DataflowEndpointListItem>>,
    _request_id: Option<String>,
}
impl ListDataflowEndpointGroupsOutputBuilder {
    /// <p>Next token returned in the response of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Next token returned in the response of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Appends an item to `dataflow_endpoint_group_list`.
    ///
    /// To override the contents of this collection use [`set_dataflow_endpoint_group_list`](Self::set_dataflow_endpoint_group_list).
    ///
    /// <p>A list of dataflow endpoint groups.</p>
    pub fn dataflow_endpoint_group_list(
        mut self,
        input: crate::types::DataflowEndpointListItem,
    ) -> Self {
        let mut v = self.dataflow_endpoint_group_list.unwrap_or_default();
        v.push(input);
        self.dataflow_endpoint_group_list = Some(v);
        self
    }
    /// <p>A list of dataflow endpoint groups.</p>
    pub fn set_dataflow_endpoint_group_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DataflowEndpointListItem>>,
    ) -> Self {
        self.dataflow_endpoint_group_list = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListDataflowEndpointGroupsOutput`](crate::operation::list_dataflow_endpoint_groups::ListDataflowEndpointGroupsOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_dataflow_endpoint_groups::ListDataflowEndpointGroupsOutput {
        crate::operation::list_dataflow_endpoint_groups::ListDataflowEndpointGroupsOutput {
            next_token: self.next_token,
            dataflow_endpoint_group_list: self.dataflow_endpoint_group_list,
            _request_id: self._request_id,
        }
    }
}
