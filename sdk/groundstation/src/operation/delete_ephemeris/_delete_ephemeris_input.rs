// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteEphemerisInput {
    /// <p>The AWS Ground Station ephemeris ID.</p>
    #[doc(hidden)]
    pub ephemeris_id: std::option::Option<std::string::String>,
}
impl DeleteEphemerisInput {
    /// <p>The AWS Ground Station ephemeris ID.</p>
    pub fn ephemeris_id(&self) -> std::option::Option<&str> {
        self.ephemeris_id.as_deref()
    }
}
impl DeleteEphemerisInput {
    /// Creates a new builder-style object to manufacture [`DeleteEphemerisInput`](crate::operation::delete_ephemeris::DeleteEphemerisInput).
    pub fn builder() -> crate::operation::delete_ephemeris::builders::DeleteEphemerisInputBuilder {
        crate::operation::delete_ephemeris::builders::DeleteEphemerisInputBuilder::default()
    }
}

/// A builder for [`DeleteEphemerisInput`](crate::operation::delete_ephemeris::DeleteEphemerisInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteEphemerisInputBuilder {
    pub(crate) ephemeris_id: std::option::Option<std::string::String>,
}
impl DeleteEphemerisInputBuilder {
    /// <p>The AWS Ground Station ephemeris ID.</p>
    pub fn ephemeris_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.ephemeris_id = Some(input.into());
        self
    }
    /// <p>The AWS Ground Station ephemeris ID.</p>
    pub fn set_ephemeris_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ephemeris_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteEphemerisInput`](crate::operation::delete_ephemeris::DeleteEphemerisInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_ephemeris::DeleteEphemerisInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_ephemeris::DeleteEphemerisInput {
            ephemeris_id: self.ephemeris_id,
        })
    }
}
