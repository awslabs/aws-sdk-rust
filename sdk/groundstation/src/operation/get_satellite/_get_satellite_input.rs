// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetSatelliteInput {
    /// <p>UUID of a satellite.</p>
    #[doc(hidden)]
    pub satellite_id: std::option::Option<std::string::String>,
}
impl GetSatelliteInput {
    /// <p>UUID of a satellite.</p>
    pub fn satellite_id(&self) -> std::option::Option<&str> {
        self.satellite_id.as_deref()
    }
}
impl GetSatelliteInput {
    /// Creates a new builder-style object to manufacture [`GetSatelliteInput`](crate::operation::get_satellite::GetSatelliteInput).
    pub fn builder() -> crate::operation::get_satellite::builders::GetSatelliteInputBuilder {
        crate::operation::get_satellite::builders::GetSatelliteInputBuilder::default()
    }
}

/// A builder for [`GetSatelliteInput`](crate::operation::get_satellite::GetSatelliteInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetSatelliteInputBuilder {
    pub(crate) satellite_id: std::option::Option<std::string::String>,
}
impl GetSatelliteInputBuilder {
    /// <p>UUID of a satellite.</p>
    pub fn satellite_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.satellite_id = Some(input.into());
        self
    }
    /// <p>UUID of a satellite.</p>
    pub fn set_satellite_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.satellite_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetSatelliteInput`](crate::operation::get_satellite::GetSatelliteInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_satellite::GetSatelliteInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_satellite::GetSatelliteInput {
            satellite_id: self.satellite_id,
        })
    }
}
