// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListConfigsOutput {
    /// <p>Next token returned in the response of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>List of <code>Config</code> items.</p>
    #[doc(hidden)]
    pub config_list: std::option::Option<std::vec::Vec<crate::types::ConfigListItem>>,
    _request_id: Option<String>,
}
impl ListConfigsOutput {
    /// <p>Next token returned in the response of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>List of <code>Config</code> items.</p>
    pub fn config_list(&self) -> std::option::Option<&[crate::types::ConfigListItem]> {
        self.config_list.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListConfigsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListConfigsOutput {
    /// Creates a new builder-style object to manufacture [`ListConfigsOutput`](crate::operation::list_configs::ListConfigsOutput).
    pub fn builder() -> crate::operation::list_configs::builders::ListConfigsOutputBuilder {
        crate::operation::list_configs::builders::ListConfigsOutputBuilder::default()
    }
}

/// A builder for [`ListConfigsOutput`](crate::operation::list_configs::ListConfigsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListConfigsOutputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) config_list: std::option::Option<std::vec::Vec<crate::types::ConfigListItem>>,
    _request_id: Option<String>,
}
impl ListConfigsOutputBuilder {
    /// <p>Next token returned in the response of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Next token returned in the response of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Appends an item to `config_list`.
    ///
    /// To override the contents of this collection use [`set_config_list`](Self::set_config_list).
    ///
    /// <p>List of <code>Config</code> items.</p>
    pub fn config_list(mut self, input: crate::types::ConfigListItem) -> Self {
        let mut v = self.config_list.unwrap_or_default();
        v.push(input);
        self.config_list = Some(v);
        self
    }
    /// <p>List of <code>Config</code> items.</p>
    pub fn set_config_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ConfigListItem>>,
    ) -> Self {
        self.config_list = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListConfigsOutput`](crate::operation::list_configs::ListConfigsOutput).
    pub fn build(self) -> crate::operation::list_configs::ListConfigsOutput {
        crate::operation::list_configs::ListConfigsOutput {
            next_token: self.next_token,
            config_list: self.config_list,
            _request_id: self._request_id,
        }
    }
}
