// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetMissionProfileInput {
    /// <p>UUID of a mission profile.</p>
    pub mission_profile_id: ::std::option::Option<::std::string::String>,
}
impl GetMissionProfileInput {
    /// <p>UUID of a mission profile.</p>
    pub fn mission_profile_id(&self) -> ::std::option::Option<&str> {
        self.mission_profile_id.as_deref()
    }
}
impl GetMissionProfileInput {
    /// Creates a new builder-style object to manufacture [`GetMissionProfileInput`](crate::operation::get_mission_profile::GetMissionProfileInput).
    pub fn builder() -> crate::operation::get_mission_profile::builders::GetMissionProfileInputBuilder {
        crate::operation::get_mission_profile::builders::GetMissionProfileInputBuilder::default()
    }
}

/// A builder for [`GetMissionProfileInput`](crate::operation::get_mission_profile::GetMissionProfileInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetMissionProfileInputBuilder {
    pub(crate) mission_profile_id: ::std::option::Option<::std::string::String>,
}
impl GetMissionProfileInputBuilder {
    /// <p>UUID of a mission profile.</p>
    /// This field is required.
    pub fn mission_profile_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.mission_profile_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>UUID of a mission profile.</p>
    pub fn set_mission_profile_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.mission_profile_id = input;
        self
    }
    /// <p>UUID of a mission profile.</p>
    pub fn get_mission_profile_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.mission_profile_id
    }
    /// Consumes the builder and constructs a [`GetMissionProfileInput`](crate::operation::get_mission_profile::GetMissionProfileInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_mission_profile::GetMissionProfileInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_mission_profile::GetMissionProfileInput {
            mission_profile_id: self.mission_profile_id,
        })
    }
}
