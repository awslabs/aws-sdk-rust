// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> ::std::result::Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_cancel_contact;

pub(crate) mod shape_create_config;

pub(crate) mod shape_create_dataflow_endpoint_group;

pub(crate) mod shape_create_ephemeris;

pub(crate) mod shape_create_mission_profile;

pub(crate) mod shape_delete_config;

pub(crate) mod shape_delete_dataflow_endpoint_group;

pub(crate) mod shape_delete_ephemeris;

pub(crate) mod shape_delete_mission_profile;

pub(crate) mod shape_describe_contact;

pub(crate) mod shape_describe_ephemeris;

pub(crate) mod shape_get_agent_configuration;

pub(crate) mod shape_get_config;

pub(crate) mod shape_get_dataflow_endpoint_group;

pub(crate) mod shape_get_minute_usage;

pub(crate) mod shape_get_mission_profile;

pub(crate) mod shape_get_satellite;

pub(crate) mod shape_list_configs;

pub(crate) mod shape_list_contacts;

pub(crate) mod shape_list_dataflow_endpoint_groups;

pub(crate) mod shape_list_ephemerides;

pub(crate) mod shape_list_ground_stations;

pub(crate) mod shape_list_mission_profiles;

pub(crate) mod shape_list_satellites;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_register_agent;

pub(crate) mod shape_reserve_contact;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_agent_status;

pub(crate) mod shape_update_config;

pub(crate) mod shape_update_ephemeris;

pub(crate) mod shape_update_mission_profile;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_create_config_input;

pub(crate) mod shape_create_dataflow_endpoint_group_input;

pub(crate) mod shape_create_ephemeris_input;

pub(crate) mod shape_create_mission_profile_input;

pub(crate) mod shape_dependency_exception;

pub(crate) mod shape_get_minute_usage_input;

pub(crate) mod shape_invalid_parameter_exception;

pub(crate) mod shape_list_contacts_input;

pub(crate) mod shape_list_ephemerides_input;

pub(crate) mod shape_register_agent_input;

pub(crate) mod shape_reserve_contact_input;

pub(crate) mod shape_resource_in_use_exception;

pub(crate) mod shape_resource_limit_exceeded_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_agent_status_input;

pub(crate) mod shape_update_config_input;

pub(crate) mod shape_update_ephemeris_input;

pub(crate) mod shape_update_mission_profile_input;

pub(crate) mod shape_agent_details;

pub(crate) mod shape_aggregate_status;

pub(crate) mod shape_component_status_data;

pub(crate) mod shape_config_list;

pub(crate) mod shape_config_type_data;

pub(crate) mod shape_contact_list;

pub(crate) mod shape_dataflow_edge_list;

pub(crate) mod shape_dataflow_endpoint_group_list;

pub(crate) mod shape_dataflow_list;

pub(crate) mod shape_discovery_data;

pub(crate) mod shape_elevation;

pub(crate) mod shape_endpoint_details;

pub(crate) mod shape_endpoint_details_list;

pub(crate) mod shape_ephemerides_list;

pub(crate) mod shape_ephemeris_data;

pub(crate) mod shape_ephemeris_error_reason_list;

pub(crate) mod shape_ephemeris_filter;

pub(crate) mod shape_ephemeris_meta_data;

pub(crate) mod shape_ephemeris_response_data;

pub(crate) mod shape_ephemeris_type_description;

pub(crate) mod shape_ground_station_id_list;

pub(crate) mod shape_ground_station_list;

pub(crate) mod shape_kms_key;

pub(crate) mod shape_mission_profile_list;

pub(crate) mod shape_satellite_list;

pub(crate) mod shape_tags_map;

pub(crate) mod shape_tracking_overrides;

pub(crate) mod shape_antenna_downlink_config;

pub(crate) mod shape_antenna_downlink_demod_decode_config;

pub(crate) mod shape_antenna_uplink_config;

pub(crate) mod shape_aws_ground_station_agent_endpoint;

pub(crate) mod shape_az_el_ephemeris;

pub(crate) mod shape_az_el_ephemeris_filter;

pub(crate) mod shape_component_version;

pub(crate) mod shape_config_list_item;

pub(crate) mod shape_contact_data;

pub(crate) mod shape_dataflow_detail;

pub(crate) mod shape_dataflow_edge;

pub(crate) mod shape_dataflow_endpoint;

pub(crate) mod shape_dataflow_endpoint_config;

pub(crate) mod shape_dataflow_endpoint_list_item;

pub(crate) mod shape_ephemeris_description;

pub(crate) mod shape_ephemeris_error_reason;

pub(crate) mod shape_ephemeris_item;

pub(crate) mod shape_ground_station_data;

pub(crate) mod shape_mission_profile_list_item;

pub(crate) mod shape_oem_ephemeris;

pub(crate) mod shape_program_track_settings;

pub(crate) mod shape_s3_recording_config;

pub(crate) mod shape_satellite_list_item;

pub(crate) mod shape_security_details;

pub(crate) mod shape_tle_ephemeris;

pub(crate) mod shape_tracking_config;

pub(crate) mod shape_uplink_echo_config;

pub(crate) mod shape_az_el_program_track_settings;

pub(crate) mod shape_az_el_segments_data;

pub(crate) mod shape_capability_health_reason_list;

pub(crate) mod shape_connection_details;

pub(crate) mod shape_decode_config;

pub(crate) mod shape_demodulation_config;

pub(crate) mod shape_destination;

pub(crate) mod shape_eirp;

pub(crate) mod shape_ranged_connection_details;

pub(crate) mod shape_s3_object;

pub(crate) mod shape_socket_address;

pub(crate) mod shape_source;

pub(crate) mod shape_spectrum_config;

pub(crate) mod shape_tle_data;

pub(crate) mod shape_uplink_spectrum_config;

pub(crate) mod shape_az_el_segments;

pub(crate) mod shape_config_details;

pub(crate) mod shape_frequency;

pub(crate) mod shape_frequency_bandwidth;

pub(crate) mod shape_ranged_socket_address;

pub(crate) mod shape_security_group_id_list;

pub(crate) mod shape_subnet_list;

pub(crate) mod shape_time_range;

pub(crate) mod shape_antenna_demod_decode_details;

pub(crate) mod shape_az_el_segment;

pub(crate) mod shape_integer_range;

pub(crate) mod shape_s3_recording_details;

pub(crate) mod shape_iso8601_time_range;

pub(crate) mod shape_time_az_el;
