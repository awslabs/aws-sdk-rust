// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Egress address of AgentEndpoint with an optional mtu.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConnectionDetails {
    /// <p>A socket address.</p>
    pub socket_address: ::std::option::Option<crate::types::SocketAddress>,
    /// <p>Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.</p>
    pub mtu: ::std::option::Option<i32>,
}
impl ConnectionDetails {
    /// <p>A socket address.</p>
    pub fn socket_address(&self) -> ::std::option::Option<&crate::types::SocketAddress> {
        self.socket_address.as_ref()
    }
    /// <p>Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.</p>
    pub fn mtu(&self) -> ::std::option::Option<i32> {
        self.mtu
    }
}
impl ConnectionDetails {
    /// Creates a new builder-style object to manufacture [`ConnectionDetails`](crate::types::ConnectionDetails).
    pub fn builder() -> crate::types::builders::ConnectionDetailsBuilder {
        crate::types::builders::ConnectionDetailsBuilder::default()
    }
}

/// A builder for [`ConnectionDetails`](crate::types::ConnectionDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConnectionDetailsBuilder {
    pub(crate) socket_address: ::std::option::Option<crate::types::SocketAddress>,
    pub(crate) mtu: ::std::option::Option<i32>,
}
impl ConnectionDetailsBuilder {
    /// <p>A socket address.</p>
    /// This field is required.
    pub fn socket_address(mut self, input: crate::types::SocketAddress) -> Self {
        self.socket_address = ::std::option::Option::Some(input);
        self
    }
    /// <p>A socket address.</p>
    pub fn set_socket_address(mut self, input: ::std::option::Option<crate::types::SocketAddress>) -> Self {
        self.socket_address = input;
        self
    }
    /// <p>A socket address.</p>
    pub fn get_socket_address(&self) -> &::std::option::Option<crate::types::SocketAddress> {
        &self.socket_address
    }
    /// <p>Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.</p>
    pub fn mtu(mut self, input: i32) -> Self {
        self.mtu = ::std::option::Option::Some(input);
        self
    }
    /// <p>Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.</p>
    pub fn set_mtu(mut self, input: ::std::option::Option<i32>) -> Self {
        self.mtu = input;
        self
    }
    /// <p>Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.</p>
    pub fn get_mtu(&self) -> &::std::option::Option<i32> {
        &self.mtu
    }
    /// Consumes the builder and constructs a [`ConnectionDetails`](crate::types::ConnectionDetails).
    pub fn build(self) -> crate::types::ConnectionDetails {
        crate::types::ConnectionDetails {
            socket_address: self.socket_address,
            mtu: self.mtu,
        }
    }
}
