// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about an antenna demod decode <code>Config</code> used in a contact.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AntennaDemodDecodeDetails {
    /// <p>Name of an antenna demod decode output node used in a contact.</p>
    #[doc(hidden)]
    pub output_node: std::option::Option<std::string::String>,
}
impl AntennaDemodDecodeDetails {
    /// <p>Name of an antenna demod decode output node used in a contact.</p>
    pub fn output_node(&self) -> std::option::Option<&str> {
        self.output_node.as_deref()
    }
}
impl AntennaDemodDecodeDetails {
    /// Creates a new builder-style object to manufacture [`AntennaDemodDecodeDetails`](crate::types::AntennaDemodDecodeDetails).
    pub fn builder() -> crate::types::builders::AntennaDemodDecodeDetailsBuilder {
        crate::types::builders::AntennaDemodDecodeDetailsBuilder::default()
    }
}

/// A builder for [`AntennaDemodDecodeDetails`](crate::types::AntennaDemodDecodeDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AntennaDemodDecodeDetailsBuilder {
    pub(crate) output_node: std::option::Option<std::string::String>,
}
impl AntennaDemodDecodeDetailsBuilder {
    /// <p>Name of an antenna demod decode output node used in a contact.</p>
    pub fn output_node(mut self, input: impl Into<std::string::String>) -> Self {
        self.output_node = Some(input.into());
        self
    }
    /// <p>Name of an antenna demod decode output node used in a contact.</p>
    pub fn set_output_node(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.output_node = input;
        self
    }
    /// Consumes the builder and constructs a [`AntennaDemodDecodeDetails`](crate::types::AntennaDemodDecodeDetails).
    pub fn build(self) -> crate::types::AntennaDemodDecodeDetails {
        crate::types::AntennaDemodDecodeDetails {
            output_node: self.output_node,
        }
    }
}
