// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_slot_type_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_slot_type::UpdateSlotTypeInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.composite_slot_type_setting {
        #[allow(unused_mut)]
        let mut object_2 = object.key("compositeSlotTypeSetting").start_object();
        crate::protocol_serde::shape_composite_slot_type_setting::ser_composite_slot_type_setting(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.description {
        object.key("description").string(var_3.as_str());
    }
    if let Some(var_4) = &input.external_source_setting {
        #[allow(unused_mut)]
        let mut object_5 = object.key("externalSourceSetting").start_object();
        crate::protocol_serde::shape_external_source_setting::ser_external_source_setting(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.parent_slot_type_signature {
        object.key("parentSlotTypeSignature").string(var_6.as_str());
    }
    if let Some(var_7) = &input.slot_type_name {
        object.key("slotTypeName").string(var_7.as_str());
    }
    if let Some(var_8) = &input.slot_type_values {
        let mut array_9 = object.key("slotTypeValues").start_array();
        for item_10 in var_8 {
            {
                #[allow(unused_mut)]
                let mut object_11 = array_9.value().start_object();
                crate::protocol_serde::shape_slot_type_value::ser_slot_type_value(&mut object_11, item_10)?;
                object_11.finish();
            }
        }
        array_9.finish();
    }
    if let Some(var_12) = &input.value_selection_setting {
        #[allow(unused_mut)]
        let mut object_13 = object.key("valueSelectionSetting").start_object();
        crate::protocol_serde::shape_slot_value_selection_setting::ser_slot_value_selection_setting(&mut object_13, var_12)?;
        object_13.finish();
    }
    Ok(())
}
