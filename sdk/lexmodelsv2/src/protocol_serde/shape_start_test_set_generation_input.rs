// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_test_set_generation_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_test_set_generation::StartTestSetGenerationInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.description {
        object.key("description").string(var_1.as_str());
    }
    if let Some(var_2) = &input.generation_data_source {
        #[allow(unused_mut)]
        let mut object_3 = object.key("generationDataSource").start_object();
        crate::protocol_serde::shape_test_set_generation_data_source::ser_test_set_generation_data_source(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.role_arn {
        object.key("roleArn").string(var_4.as_str());
    }
    if let Some(var_5) = &input.storage_location {
        #[allow(unused_mut)]
        let mut object_6 = object.key("storageLocation").start_object();
        crate::protocol_serde::shape_test_set_storage_location::ser_test_set_storage_location(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.test_set_name {
        object.key("testSetName").string(var_7.as_str());
    }
    if let Some(var_8) = &input.test_set_tags {
        #[allow(unused_mut)]
        let mut object_9 = object.key("testSetTags").start_object();
        for (key_10, value_11) in var_8 {
            {
                object_9.key(key_10.as_str()).string(value_11.as_str());
            }
        }
        object_9.finish();
    }
    Ok(())
}
