// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_bot_alias_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_bot_alias::CreateBotAliasInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.bot_alias_locale_settings {
        #[allow(unused_mut)]
        let mut object_2 = object.key("botAliasLocaleSettings").start_object();
        for (key_3, value_4) in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_5 = object_2.key(key_3.as_str()).start_object();
                crate::protocol_serde::shape_bot_alias_locale_settings::ser_bot_alias_locale_settings(&mut object_5, value_4)?;
                object_5.finish();
            }
        }
        object_2.finish();
    }
    if let Some(var_6) = &input.bot_alias_name {
        object.key("botAliasName").string(var_6.as_str());
    }
    if let Some(var_7) = &input.bot_version {
        object.key("botVersion").string(var_7.as_str());
    }
    if let Some(var_8) = &input.conversation_log_settings {
        #[allow(unused_mut)]
        let mut object_9 = object.key("conversationLogSettings").start_object();
        crate::protocol_serde::shape_conversation_log_settings::ser_conversation_log_settings(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.description {
        object.key("description").string(var_10.as_str());
    }
    if let Some(var_11) = &input.sentiment_analysis_settings {
        #[allow(unused_mut)]
        let mut object_12 = object.key("sentimentAnalysisSettings").start_object();
        crate::protocol_serde::shape_sentiment_analysis_settings::ser_sentiment_analysis_settings(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.tags {
        #[allow(unused_mut)]
        let mut object_14 = object.key("tags").start_object();
        for (key_15, value_16) in var_13 {
            {
                object_14.key(key_15.as_str()).string(value_16.as_str());
            }
        }
        object_14.finish();
    }
    Ok(())
}
