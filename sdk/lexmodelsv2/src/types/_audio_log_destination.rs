// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The location of audio log files collected when conversation logging is enabled for a bot.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AudioLogDestination {
    /// <p>The Amazon S3 bucket where the audio log files are stored. The IAM role specified in the <code>roleArn</code> parameter of the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_CreateBot.html">CreateBot</a> operation must have permission to write to this bucket.</p>
    #[doc(hidden)]
    pub s3_bucket: std::option::Option<crate::types::S3BucketLogDestination>,
}
impl AudioLogDestination {
    /// <p>The Amazon S3 bucket where the audio log files are stored. The IAM role specified in the <code>roleArn</code> parameter of the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_CreateBot.html">CreateBot</a> operation must have permission to write to this bucket.</p>
    pub fn s3_bucket(&self) -> std::option::Option<&crate::types::S3BucketLogDestination> {
        self.s3_bucket.as_ref()
    }
}
impl AudioLogDestination {
    /// Creates a new builder-style object to manufacture [`AudioLogDestination`](crate::types::AudioLogDestination).
    pub fn builder() -> crate::types::builders::AudioLogDestinationBuilder {
        crate::types::builders::AudioLogDestinationBuilder::default()
    }
}

/// A builder for [`AudioLogDestination`](crate::types::AudioLogDestination).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AudioLogDestinationBuilder {
    pub(crate) s3_bucket: std::option::Option<crate::types::S3BucketLogDestination>,
}
impl AudioLogDestinationBuilder {
    /// <p>The Amazon S3 bucket where the audio log files are stored. The IAM role specified in the <code>roleArn</code> parameter of the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_CreateBot.html">CreateBot</a> operation must have permission to write to this bucket.</p>
    pub fn s3_bucket(mut self, input: crate::types::S3BucketLogDestination) -> Self {
        self.s3_bucket = Some(input);
        self
    }
    /// <p>The Amazon S3 bucket where the audio log files are stored. The IAM role specified in the <code>roleArn</code> parameter of the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_CreateBot.html">CreateBot</a> operation must have permission to write to this bucket.</p>
    pub fn set_s3_bucket(
        mut self,
        input: std::option::Option<crate::types::S3BucketLogDestination>,
    ) -> Self {
        self.s3_bucket = input;
        self
    }
    /// Consumes the builder and constructs a [`AudioLogDestination`](crate::types::AudioLogDestination).
    pub fn build(self) -> crate::types::AudioLogDestination {
        crate::types::AudioLogDestination {
            s3_bucket: self.s3_bucket,
        }
    }
}
