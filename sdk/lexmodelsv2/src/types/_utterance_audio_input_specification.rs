// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the audio for an utterance.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UtteranceAudioInputSpecification {
    /// <p>Amazon S3 file pointing to the audio.</p>
    pub audio_file_s3_location: ::std::string::String,
}
impl UtteranceAudioInputSpecification {
    /// <p>Amazon S3 file pointing to the audio.</p>
    pub fn audio_file_s3_location(&self) -> &str {
        use std::ops::Deref;
        self.audio_file_s3_location.deref()
    }
}
impl UtteranceAudioInputSpecification {
    /// Creates a new builder-style object to manufacture [`UtteranceAudioInputSpecification`](crate::types::UtteranceAudioInputSpecification).
    pub fn builder() -> crate::types::builders::UtteranceAudioInputSpecificationBuilder {
        crate::types::builders::UtteranceAudioInputSpecificationBuilder::default()
    }
}

/// A builder for [`UtteranceAudioInputSpecification`](crate::types::UtteranceAudioInputSpecification).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UtteranceAudioInputSpecificationBuilder {
    pub(crate) audio_file_s3_location: ::std::option::Option<::std::string::String>,
}
impl UtteranceAudioInputSpecificationBuilder {
    /// <p>Amazon S3 file pointing to the audio.</p>
    /// This field is required.
    pub fn audio_file_s3_location(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.audio_file_s3_location = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon S3 file pointing to the audio.</p>
    pub fn set_audio_file_s3_location(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.audio_file_s3_location = input;
        self
    }
    /// <p>Amazon S3 file pointing to the audio.</p>
    pub fn get_audio_file_s3_location(&self) -> &::std::option::Option<::std::string::String> {
        &self.audio_file_s3_location
    }
    /// Consumes the builder and constructs a [`UtteranceAudioInputSpecification`](crate::types::UtteranceAudioInputSpecification).
    /// This method will fail if any of the following fields are not set:
    /// - [`audio_file_s3_location`](crate::types::builders::UtteranceAudioInputSpecificationBuilder::audio_file_s3_location)
    pub fn build(self) -> ::std::result::Result<crate::types::UtteranceAudioInputSpecification, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UtteranceAudioInputSpecification {
            audio_file_s3_location: self.audio_file_s3_location.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "audio_file_s3_location",
                    "audio_file_s3_location was not specified but it is required when building UtteranceAudioInputSpecification",
                )
            })?,
        })
    }
}
