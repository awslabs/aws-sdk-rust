// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The unique entry identifier for the custom vocabulary items.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CustomVocabularyEntryId {
    /// <p>The unique item identifier for the custom vocabulary items.</p>
    #[doc(hidden)]
    pub item_id: std::option::Option<std::string::String>,
}
impl CustomVocabularyEntryId {
    /// <p>The unique item identifier for the custom vocabulary items.</p>
    pub fn item_id(&self) -> std::option::Option<&str> {
        self.item_id.as_deref()
    }
}
impl CustomVocabularyEntryId {
    /// Creates a new builder-style object to manufacture [`CustomVocabularyEntryId`](crate::types::CustomVocabularyEntryId).
    pub fn builder() -> crate::types::builders::CustomVocabularyEntryIdBuilder {
        crate::types::builders::CustomVocabularyEntryIdBuilder::default()
    }
}

/// A builder for [`CustomVocabularyEntryId`](crate::types::CustomVocabularyEntryId).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CustomVocabularyEntryIdBuilder {
    pub(crate) item_id: std::option::Option<std::string::String>,
}
impl CustomVocabularyEntryIdBuilder {
    /// <p>The unique item identifier for the custom vocabulary items.</p>
    pub fn item_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.item_id = Some(input.into());
        self
    }
    /// <p>The unique item identifier for the custom vocabulary items.</p>
    pub fn set_item_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.item_id = input;
        self
    }
    /// Consumes the builder and constructs a [`CustomVocabularyEntryId`](crate::types::CustomVocabularyEntryId).
    pub fn build(self) -> crate::types::CustomVocabularyEntryId {
        crate::types::CustomVocabularyEntryId {
            item_id: self.item_id,
        }
    }
}
