// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides parameters for setting the time window and duration for aggregating utterance data.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UtteranceAggregationDuration {
    /// <p>The desired time window for aggregating utterances. </p>
    #[doc(hidden)]
    pub relative_aggregation_duration:
        std::option::Option<crate::types::RelativeAggregationDuration>,
}
impl UtteranceAggregationDuration {
    /// <p>The desired time window for aggregating utterances. </p>
    pub fn relative_aggregation_duration(
        &self,
    ) -> std::option::Option<&crate::types::RelativeAggregationDuration> {
        self.relative_aggregation_duration.as_ref()
    }
}
impl UtteranceAggregationDuration {
    /// Creates a new builder-style object to manufacture [`UtteranceAggregationDuration`](crate::types::UtteranceAggregationDuration).
    pub fn builder() -> crate::types::builders::UtteranceAggregationDurationBuilder {
        crate::types::builders::UtteranceAggregationDurationBuilder::default()
    }
}

/// A builder for [`UtteranceAggregationDuration`](crate::types::UtteranceAggregationDuration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UtteranceAggregationDurationBuilder {
    pub(crate) relative_aggregation_duration:
        std::option::Option<crate::types::RelativeAggregationDuration>,
}
impl UtteranceAggregationDurationBuilder {
    /// <p>The desired time window for aggregating utterances. </p>
    pub fn relative_aggregation_duration(
        mut self,
        input: crate::types::RelativeAggregationDuration,
    ) -> Self {
        self.relative_aggregation_duration = Some(input);
        self
    }
    /// <p>The desired time window for aggregating utterances. </p>
    pub fn set_relative_aggregation_duration(
        mut self,
        input: std::option::Option<crate::types::RelativeAggregationDuration>,
    ) -> Self {
        self.relative_aggregation_duration = input;
        self
    }
    /// Consumes the builder and constructs a [`UtteranceAggregationDuration`](crate::types::UtteranceAggregationDuration).
    pub fn build(self) -> crate::types::UtteranceAggregationDuration {
        crate::types::UtteranceAggregationDuration {
            relative_aggregation_duration: self.relative_aggregation_duration,
        }
    }
}
