// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides summary information about an export in an export list. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExportSummary {
    /// <p>The unique identifier that Amazon Lex assigned to the export.</p>
    #[doc(hidden)]
    pub export_id: std::option::Option<std::string::String>,
    /// <p>Information about the bot or bot locale that was exported.</p>
    #[doc(hidden)]
    pub resource_specification: std::option::Option<crate::types::ExportResourceSpecification>,
    /// <p>The file format used in the export files.</p>
    #[doc(hidden)]
    pub file_format: std::option::Option<crate::types::ImportExportFileFormat>,
    /// <p>The status of the export. When the status is <code>Completed</code> the export is ready to download.</p>
    #[doc(hidden)]
    pub export_status: std::option::Option<crate::types::ExportStatus>,
    /// <p>The date and time that the export was created.</p>
    #[doc(hidden)]
    pub creation_date_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date and time that the export was last updated.</p>
    #[doc(hidden)]
    pub last_updated_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ExportSummary {
    /// <p>The unique identifier that Amazon Lex assigned to the export.</p>
    pub fn export_id(&self) -> std::option::Option<&str> {
        self.export_id.as_deref()
    }
    /// <p>Information about the bot or bot locale that was exported.</p>
    pub fn resource_specification(
        &self,
    ) -> std::option::Option<&crate::types::ExportResourceSpecification> {
        self.resource_specification.as_ref()
    }
    /// <p>The file format used in the export files.</p>
    pub fn file_format(&self) -> std::option::Option<&crate::types::ImportExportFileFormat> {
        self.file_format.as_ref()
    }
    /// <p>The status of the export. When the status is <code>Completed</code> the export is ready to download.</p>
    pub fn export_status(&self) -> std::option::Option<&crate::types::ExportStatus> {
        self.export_status.as_ref()
    }
    /// <p>The date and time that the export was created.</p>
    pub fn creation_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_date_time.as_ref()
    }
    /// <p>The date and time that the export was last updated.</p>
    pub fn last_updated_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_updated_date_time.as_ref()
    }
}
impl ExportSummary {
    /// Creates a new builder-style object to manufacture [`ExportSummary`](crate::types::ExportSummary).
    pub fn builder() -> crate::types::builders::ExportSummaryBuilder {
        crate::types::builders::ExportSummaryBuilder::default()
    }
}

/// A builder for [`ExportSummary`](crate::types::ExportSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExportSummaryBuilder {
    pub(crate) export_id: std::option::Option<std::string::String>,
    pub(crate) resource_specification:
        std::option::Option<crate::types::ExportResourceSpecification>,
    pub(crate) file_format: std::option::Option<crate::types::ImportExportFileFormat>,
    pub(crate) export_status: std::option::Option<crate::types::ExportStatus>,
    pub(crate) creation_date_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_updated_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ExportSummaryBuilder {
    /// <p>The unique identifier that Amazon Lex assigned to the export.</p>
    pub fn export_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.export_id = Some(input.into());
        self
    }
    /// <p>The unique identifier that Amazon Lex assigned to the export.</p>
    pub fn set_export_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.export_id = input;
        self
    }
    /// <p>Information about the bot or bot locale that was exported.</p>
    pub fn resource_specification(
        mut self,
        input: crate::types::ExportResourceSpecification,
    ) -> Self {
        self.resource_specification = Some(input);
        self
    }
    /// <p>Information about the bot or bot locale that was exported.</p>
    pub fn set_resource_specification(
        mut self,
        input: std::option::Option<crate::types::ExportResourceSpecification>,
    ) -> Self {
        self.resource_specification = input;
        self
    }
    /// <p>The file format used in the export files.</p>
    pub fn file_format(mut self, input: crate::types::ImportExportFileFormat) -> Self {
        self.file_format = Some(input);
        self
    }
    /// <p>The file format used in the export files.</p>
    pub fn set_file_format(
        mut self,
        input: std::option::Option<crate::types::ImportExportFileFormat>,
    ) -> Self {
        self.file_format = input;
        self
    }
    /// <p>The status of the export. When the status is <code>Completed</code> the export is ready to download.</p>
    pub fn export_status(mut self, input: crate::types::ExportStatus) -> Self {
        self.export_status = Some(input);
        self
    }
    /// <p>The status of the export. When the status is <code>Completed</code> the export is ready to download.</p>
    pub fn set_export_status(
        mut self,
        input: std::option::Option<crate::types::ExportStatus>,
    ) -> Self {
        self.export_status = input;
        self
    }
    /// <p>The date and time that the export was created.</p>
    pub fn creation_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_date_time = Some(input);
        self
    }
    /// <p>The date and time that the export was created.</p>
    pub fn set_creation_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_date_time = input;
        self
    }
    /// <p>The date and time that the export was last updated.</p>
    pub fn last_updated_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_updated_date_time = Some(input);
        self
    }
    /// <p>The date and time that the export was last updated.</p>
    pub fn set_last_updated_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_updated_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`ExportSummary`](crate::types::ExportSummary).
    pub fn build(self) -> crate::types::ExportSummary {
        crate::types::ExportSummary {
            export_id: self.export_id,
            resource_specification: self.resource_specification,
            file_format: self.file_format,
            export_status: self.export_status,
            creation_date_time: self.creation_date_time,
            last_updated_date_time: self.last_updated_date_time,
        }
    }
}
