// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the Amazon CloudWatch Logs destination log group for conversation text logs.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TextLogDestination {
    /// <p>Defines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.</p>
    pub cloud_watch: ::std::option::Option<crate::types::CloudWatchLogGroupLogDestination>,
}
impl TextLogDestination {
    /// <p>Defines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.</p>
    pub fn cloud_watch(&self) -> ::std::option::Option<&crate::types::CloudWatchLogGroupLogDestination> {
        self.cloud_watch.as_ref()
    }
}
impl TextLogDestination {
    /// Creates a new builder-style object to manufacture [`TextLogDestination`](crate::types::TextLogDestination).
    pub fn builder() -> crate::types::builders::TextLogDestinationBuilder {
        crate::types::builders::TextLogDestinationBuilder::default()
    }
}

/// A builder for [`TextLogDestination`](crate::types::TextLogDestination).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TextLogDestinationBuilder {
    pub(crate) cloud_watch: ::std::option::Option<crate::types::CloudWatchLogGroupLogDestination>,
}
impl TextLogDestinationBuilder {
    /// <p>Defines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.</p>
    /// This field is required.
    pub fn cloud_watch(mut self, input: crate::types::CloudWatchLogGroupLogDestination) -> Self {
        self.cloud_watch = ::std::option::Option::Some(input);
        self
    }
    /// <p>Defines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.</p>
    pub fn set_cloud_watch(mut self, input: ::std::option::Option<crate::types::CloudWatchLogGroupLogDestination>) -> Self {
        self.cloud_watch = input;
        self
    }
    /// <p>Defines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.</p>
    pub fn get_cloud_watch(&self) -> &::std::option::Option<crate::types::CloudWatchLogGroupLogDestination> {
        &self.cloud_watch
    }
    /// Consumes the builder and constructs a [`TextLogDestination`](crate::types::TextLogDestination).
    pub fn build(self) -> crate::types::TextLogDestination {
        crate::types::TextLogDestination {
            cloud_watch: self.cloud_watch,
        }
    }
}
