// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The object that contains the statistical summary of the recommended slot type associated with the bot recommendation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SlotTypeStatistics {
    /// <p>The number of recommended slot types associated with the bot recommendation.</p>
    #[doc(hidden)]
    pub discovered_slot_type_count: std::option::Option<i32>,
}
impl SlotTypeStatistics {
    /// <p>The number of recommended slot types associated with the bot recommendation.</p>
    pub fn discovered_slot_type_count(&self) -> std::option::Option<i32> {
        self.discovered_slot_type_count
    }
}
impl SlotTypeStatistics {
    /// Creates a new builder-style object to manufacture [`SlotTypeStatistics`](crate::types::SlotTypeStatistics).
    pub fn builder() -> crate::types::builders::SlotTypeStatisticsBuilder {
        crate::types::builders::SlotTypeStatisticsBuilder::default()
    }
}

/// A builder for [`SlotTypeStatistics`](crate::types::SlotTypeStatistics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SlotTypeStatisticsBuilder {
    pub(crate) discovered_slot_type_count: std::option::Option<i32>,
}
impl SlotTypeStatisticsBuilder {
    /// <p>The number of recommended slot types associated with the bot recommendation.</p>
    pub fn discovered_slot_type_count(mut self, input: i32) -> Self {
        self.discovered_slot_type_count = Some(input);
        self
    }
    /// <p>The number of recommended slot types associated with the bot recommendation.</p>
    pub fn set_discovered_slot_type_count(mut self, input: std::option::Option<i32>) -> Self {
        self.discovered_slot_type_count = input;
        self
    }
    /// Consumes the builder and constructs a [`SlotTypeStatistics`](crate::types::SlotTypeStatistics).
    pub fn build(self) -> crate::types::SlotTypeStatistics {
        crate::types::SlotTypeStatistics {
            discovered_slot_type_count: self.discovered_slot_type_count,
        }
    }
}
