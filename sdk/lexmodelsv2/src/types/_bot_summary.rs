// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information about a bot returned by the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_ListBots.html">ListBots</a> operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BotSummary {
    /// <p>The unique identifier assigned to the bot. Use this ID to get detailed information about the bot with the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_DescribeBot.html">DescribeBot</a> operation.</p>
    #[doc(hidden)]
    pub bot_id: std::option::Option<std::string::String>,
    /// <p>The name of the bot.</p>
    #[doc(hidden)]
    pub bot_name: std::option::Option<std::string::String>,
    /// <p>The description of the bot.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The current status of the bot. When the status is <code>Available</code> the bot is ready for use.</p>
    #[doc(hidden)]
    pub bot_status: std::option::Option<crate::types::BotStatus>,
    /// <p>The latest numerical version in use for the bot.</p>
    #[doc(hidden)]
    pub latest_bot_version: std::option::Option<std::string::String>,
    /// <p>The date and time that the bot was last updated.</p>
    #[doc(hidden)]
    pub last_updated_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl BotSummary {
    /// <p>The unique identifier assigned to the bot. Use this ID to get detailed information about the bot with the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_DescribeBot.html">DescribeBot</a> operation.</p>
    pub fn bot_id(&self) -> std::option::Option<&str> {
        self.bot_id.as_deref()
    }
    /// <p>The name of the bot.</p>
    pub fn bot_name(&self) -> std::option::Option<&str> {
        self.bot_name.as_deref()
    }
    /// <p>The description of the bot.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The current status of the bot. When the status is <code>Available</code> the bot is ready for use.</p>
    pub fn bot_status(&self) -> std::option::Option<&crate::types::BotStatus> {
        self.bot_status.as_ref()
    }
    /// <p>The latest numerical version in use for the bot.</p>
    pub fn latest_bot_version(&self) -> std::option::Option<&str> {
        self.latest_bot_version.as_deref()
    }
    /// <p>The date and time that the bot was last updated.</p>
    pub fn last_updated_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_updated_date_time.as_ref()
    }
}
impl BotSummary {
    /// Creates a new builder-style object to manufacture [`BotSummary`](crate::types::BotSummary).
    pub fn builder() -> crate::types::builders::BotSummaryBuilder {
        crate::types::builders::BotSummaryBuilder::default()
    }
}

/// A builder for [`BotSummary`](crate::types::BotSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BotSummaryBuilder {
    pub(crate) bot_id: std::option::Option<std::string::String>,
    pub(crate) bot_name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) bot_status: std::option::Option<crate::types::BotStatus>,
    pub(crate) latest_bot_version: std::option::Option<std::string::String>,
    pub(crate) last_updated_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl BotSummaryBuilder {
    /// <p>The unique identifier assigned to the bot. Use this ID to get detailed information about the bot with the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_DescribeBot.html">DescribeBot</a> operation.</p>
    pub fn bot_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.bot_id = Some(input.into());
        self
    }
    /// <p>The unique identifier assigned to the bot. Use this ID to get detailed information about the bot with the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_DescribeBot.html">DescribeBot</a> operation.</p>
    pub fn set_bot_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bot_id = input;
        self
    }
    /// <p>The name of the bot.</p>
    pub fn bot_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.bot_name = Some(input.into());
        self
    }
    /// <p>The name of the bot.</p>
    pub fn set_bot_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bot_name = input;
        self
    }
    /// <p>The description of the bot.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the bot.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The current status of the bot. When the status is <code>Available</code> the bot is ready for use.</p>
    pub fn bot_status(mut self, input: crate::types::BotStatus) -> Self {
        self.bot_status = Some(input);
        self
    }
    /// <p>The current status of the bot. When the status is <code>Available</code> the bot is ready for use.</p>
    pub fn set_bot_status(mut self, input: std::option::Option<crate::types::BotStatus>) -> Self {
        self.bot_status = input;
        self
    }
    /// <p>The latest numerical version in use for the bot.</p>
    pub fn latest_bot_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.latest_bot_version = Some(input.into());
        self
    }
    /// <p>The latest numerical version in use for the bot.</p>
    pub fn set_latest_bot_version(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.latest_bot_version = input;
        self
    }
    /// <p>The date and time that the bot was last updated.</p>
    pub fn last_updated_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_updated_date_time = Some(input);
        self
    }
    /// <p>The date and time that the bot was last updated.</p>
    pub fn set_last_updated_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_updated_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`BotSummary`](crate::types::BotSummary).
    pub fn build(self) -> crate::types::BotSummary {
        crate::types::BotSummary {
            bot_id: self.bot_id,
            bot_name: self.bot_name,
            description: self.description,
            bot_status: self.bot_status,
            latest_bot_version: self.latest_bot_version,
            last_updated_date_time: self.last_updated_date_time,
        }
    }
}
