// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides settings that enable advanced recognition settings for slot values.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AdvancedRecognitionSetting {
    /// <p>Enables using the slot values as a custom vocabulary for recognizing user utterances.</p>
    #[doc(hidden)]
    pub audio_recognition_strategy: std::option::Option<crate::types::AudioRecognitionStrategy>,
}
impl AdvancedRecognitionSetting {
    /// <p>Enables using the slot values as a custom vocabulary for recognizing user utterances.</p>
    pub fn audio_recognition_strategy(
        &self,
    ) -> std::option::Option<&crate::types::AudioRecognitionStrategy> {
        self.audio_recognition_strategy.as_ref()
    }
}
impl AdvancedRecognitionSetting {
    /// Creates a new builder-style object to manufacture [`AdvancedRecognitionSetting`](crate::types::AdvancedRecognitionSetting).
    pub fn builder() -> crate::types::builders::AdvancedRecognitionSettingBuilder {
        crate::types::builders::AdvancedRecognitionSettingBuilder::default()
    }
}

/// A builder for [`AdvancedRecognitionSetting`](crate::types::AdvancedRecognitionSetting).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AdvancedRecognitionSettingBuilder {
    pub(crate) audio_recognition_strategy:
        std::option::Option<crate::types::AudioRecognitionStrategy>,
}
impl AdvancedRecognitionSettingBuilder {
    /// <p>Enables using the slot values as a custom vocabulary for recognizing user utterances.</p>
    pub fn audio_recognition_strategy(
        mut self,
        input: crate::types::AudioRecognitionStrategy,
    ) -> Self {
        self.audio_recognition_strategy = Some(input);
        self
    }
    /// <p>Enables using the slot values as a custom vocabulary for recognizing user utterances.</p>
    pub fn set_audio_recognition_strategy(
        mut self,
        input: std::option::Option<crate::types::AudioRecognitionStrategy>,
    ) -> Self {
        self.audio_recognition_strategy = input;
        self
    }
    /// Consumes the builder and constructs a [`AdvancedRecognitionSetting`](crate::types::AdvancedRecognitionSetting).
    pub fn build(self) -> crate::types::AdvancedRecognitionSetting {
        crate::types::AdvancedRecognitionSetting {
            audio_recognition_strategy: self.audio_recognition_strategy,
        }
    }
}
