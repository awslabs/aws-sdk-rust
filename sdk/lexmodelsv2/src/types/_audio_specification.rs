// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the audio input specifications.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AudioSpecification {
    /// <p>Time for how long Amazon Lex waits before speech input is truncated and the speech is returned to application.</p>
    pub max_length_ms: i32,
    /// <p>Time for which a bot waits after the customer stops speaking to assume the utterance is finished.</p>
    pub end_timeout_ms: i32,
}
impl AudioSpecification {
    /// <p>Time for how long Amazon Lex waits before speech input is truncated and the speech is returned to application.</p>
    pub fn max_length_ms(&self) -> i32 {
        self.max_length_ms
    }
    /// <p>Time for which a bot waits after the customer stops speaking to assume the utterance is finished.</p>
    pub fn end_timeout_ms(&self) -> i32 {
        self.end_timeout_ms
    }
}
impl AudioSpecification {
    /// Creates a new builder-style object to manufacture [`AudioSpecification`](crate::types::AudioSpecification).
    pub fn builder() -> crate::types::builders::AudioSpecificationBuilder {
        crate::types::builders::AudioSpecificationBuilder::default()
    }
}

/// A builder for [`AudioSpecification`](crate::types::AudioSpecification).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AudioSpecificationBuilder {
    pub(crate) max_length_ms: ::std::option::Option<i32>,
    pub(crate) end_timeout_ms: ::std::option::Option<i32>,
}
impl AudioSpecificationBuilder {
    /// <p>Time for how long Amazon Lex waits before speech input is truncated and the speech is returned to application.</p>
    /// This field is required.
    pub fn max_length_ms(mut self, input: i32) -> Self {
        self.max_length_ms = ::std::option::Option::Some(input);
        self
    }
    /// <p>Time for how long Amazon Lex waits before speech input is truncated and the speech is returned to application.</p>
    pub fn set_max_length_ms(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_length_ms = input;
        self
    }
    /// <p>Time for how long Amazon Lex waits before speech input is truncated and the speech is returned to application.</p>
    pub fn get_max_length_ms(&self) -> &::std::option::Option<i32> {
        &self.max_length_ms
    }
    /// <p>Time for which a bot waits after the customer stops speaking to assume the utterance is finished.</p>
    /// This field is required.
    pub fn end_timeout_ms(mut self, input: i32) -> Self {
        self.end_timeout_ms = ::std::option::Option::Some(input);
        self
    }
    /// <p>Time for which a bot waits after the customer stops speaking to assume the utterance is finished.</p>
    pub fn set_end_timeout_ms(mut self, input: ::std::option::Option<i32>) -> Self {
        self.end_timeout_ms = input;
        self
    }
    /// <p>Time for which a bot waits after the customer stops speaking to assume the utterance is finished.</p>
    pub fn get_end_timeout_ms(&self) -> &::std::option::Option<i32> {
        &self.end_timeout_ms
    }
    /// Consumes the builder and constructs a [`AudioSpecification`](crate::types::AudioSpecification).
    /// This method will fail if any of the following fields are not set:
    /// - [`max_length_ms`](crate::types::builders::AudioSpecificationBuilder::max_length_ms)
    /// - [`end_timeout_ms`](crate::types::builders::AudioSpecificationBuilder::end_timeout_ms)
    pub fn build(self) -> ::std::result::Result<crate::types::AudioSpecification, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AudioSpecification {
            max_length_ms: self.max_length_ms.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "max_length_ms",
                    "max_length_ms was not specified but it is required when building AudioSpecification",
                )
            })?,
            end_timeout_ms: self.end_timeout_ms.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "end_timeout_ms",
                    "end_timeout_ms was not specified but it is required when building AudioSpecification",
                )
            })?,
        })
    }
}
