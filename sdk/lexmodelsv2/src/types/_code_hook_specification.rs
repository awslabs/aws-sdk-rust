// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about code hooks that Amazon Lex calls during a conversation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CodeHookSpecification {
    /// <p>Specifies a Lambda function that verifies requests to a bot or fulfills the user's request to a bot.</p>
    pub lambda_code_hook: ::std::option::Option<crate::types::LambdaCodeHook>,
}
impl CodeHookSpecification {
    /// <p>Specifies a Lambda function that verifies requests to a bot or fulfills the user's request to a bot.</p>
    pub fn lambda_code_hook(&self) -> ::std::option::Option<&crate::types::LambdaCodeHook> {
        self.lambda_code_hook.as_ref()
    }
}
impl CodeHookSpecification {
    /// Creates a new builder-style object to manufacture [`CodeHookSpecification`](crate::types::CodeHookSpecification).
    pub fn builder() -> crate::types::builders::CodeHookSpecificationBuilder {
        crate::types::builders::CodeHookSpecificationBuilder::default()
    }
}

/// A builder for [`CodeHookSpecification`](crate::types::CodeHookSpecification).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CodeHookSpecificationBuilder {
    pub(crate) lambda_code_hook: ::std::option::Option<crate::types::LambdaCodeHook>,
}
impl CodeHookSpecificationBuilder {
    /// <p>Specifies a Lambda function that verifies requests to a bot or fulfills the user's request to a bot.</p>
    /// This field is required.
    pub fn lambda_code_hook(mut self, input: crate::types::LambdaCodeHook) -> Self {
        self.lambda_code_hook = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies a Lambda function that verifies requests to a bot or fulfills the user's request to a bot.</p>
    pub fn set_lambda_code_hook(mut self, input: ::std::option::Option<crate::types::LambdaCodeHook>) -> Self {
        self.lambda_code_hook = input;
        self
    }
    /// <p>Specifies a Lambda function that verifies requests to a bot or fulfills the user's request to a bot.</p>
    pub fn get_lambda_code_hook(&self) -> &::std::option::Option<crate::types::LambdaCodeHook> {
        &self.lambda_code_hook
    }
    /// Consumes the builder and constructs a [`CodeHookSpecification`](crate::types::CodeHookSpecification).
    pub fn build(self) -> crate::types::CodeHookSpecification {
        crate::types::CodeHookSpecification {
            lambda_code_hook: self.lambda_code_hook,
        }
    }
}
