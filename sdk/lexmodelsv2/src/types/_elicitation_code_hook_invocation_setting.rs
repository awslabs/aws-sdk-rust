// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Settings that specify the dialog code hook that is called by Amazon Lex between eliciting slot values.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ElicitationCodeHookInvocationSetting {
    /// <p>Indicates whether a Lambda function should be invoked for the dialog.</p>
    #[doc(hidden)]
    pub enable_code_hook_invocation: std::option::Option<bool>,
    /// <p>A label that indicates the dialog step from which the dialog code hook is happening.</p>
    #[doc(hidden)]
    pub invocation_label: std::option::Option<std::string::String>,
}
impl ElicitationCodeHookInvocationSetting {
    /// <p>Indicates whether a Lambda function should be invoked for the dialog.</p>
    pub fn enable_code_hook_invocation(&self) -> std::option::Option<bool> {
        self.enable_code_hook_invocation
    }
    /// <p>A label that indicates the dialog step from which the dialog code hook is happening.</p>
    pub fn invocation_label(&self) -> std::option::Option<&str> {
        self.invocation_label.as_deref()
    }
}
impl ElicitationCodeHookInvocationSetting {
    /// Creates a new builder-style object to manufacture [`ElicitationCodeHookInvocationSetting`](crate::types::ElicitationCodeHookInvocationSetting).
    pub fn builder() -> crate::types::builders::ElicitationCodeHookInvocationSettingBuilder {
        crate::types::builders::ElicitationCodeHookInvocationSettingBuilder::default()
    }
}

/// A builder for [`ElicitationCodeHookInvocationSetting`](crate::types::ElicitationCodeHookInvocationSetting).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ElicitationCodeHookInvocationSettingBuilder {
    pub(crate) enable_code_hook_invocation: std::option::Option<bool>,
    pub(crate) invocation_label: std::option::Option<std::string::String>,
}
impl ElicitationCodeHookInvocationSettingBuilder {
    /// <p>Indicates whether a Lambda function should be invoked for the dialog.</p>
    pub fn enable_code_hook_invocation(mut self, input: bool) -> Self {
        self.enable_code_hook_invocation = Some(input);
        self
    }
    /// <p>Indicates whether a Lambda function should be invoked for the dialog.</p>
    pub fn set_enable_code_hook_invocation(mut self, input: std::option::Option<bool>) -> Self {
        self.enable_code_hook_invocation = input;
        self
    }
    /// <p>A label that indicates the dialog step from which the dialog code hook is happening.</p>
    pub fn invocation_label(mut self, input: impl Into<std::string::String>) -> Self {
        self.invocation_label = Some(input.into());
        self
    }
    /// <p>A label that indicates the dialog step from which the dialog code hook is happening.</p>
    pub fn set_invocation_label(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.invocation_label = input;
        self
    }
    /// Consumes the builder and constructs a [`ElicitationCodeHookInvocationSetting`](crate::types::ElicitationCodeHookInvocationSetting).
    pub fn build(self) -> crate::types::ElicitationCodeHookInvocationSetting {
        crate::types::ElicitationCodeHookInvocationSetting {
            enable_code_hook_invocation: self.enable_code_hook_invocation,
            invocation_label: self.invocation_label,
        }
    }
}
