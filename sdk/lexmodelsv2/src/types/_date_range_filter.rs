// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The object used for specifying the data range that the customer wants Amazon Lex to read through in the input transcripts.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DateRangeFilter {
    /// <p>A timestamp indicating the start date for the date range filter.</p>
    #[doc(hidden)]
    pub start_date_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A timestamp indicating the end date for the date range filter.</p>
    #[doc(hidden)]
    pub end_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl DateRangeFilter {
    /// <p>A timestamp indicating the start date for the date range filter.</p>
    pub fn start_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_date_time.as_ref()
    }
    /// <p>A timestamp indicating the end date for the date range filter.</p>
    pub fn end_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_date_time.as_ref()
    }
}
impl DateRangeFilter {
    /// Creates a new builder-style object to manufacture [`DateRangeFilter`](crate::types::DateRangeFilter).
    pub fn builder() -> crate::types::builders::DateRangeFilterBuilder {
        crate::types::builders::DateRangeFilterBuilder::default()
    }
}

/// A builder for [`DateRangeFilter`](crate::types::DateRangeFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DateRangeFilterBuilder {
    pub(crate) start_date_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl DateRangeFilterBuilder {
    /// <p>A timestamp indicating the start date for the date range filter.</p>
    pub fn start_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_date_time = Some(input);
        self
    }
    /// <p>A timestamp indicating the start date for the date range filter.</p>
    pub fn set_start_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_date_time = input;
        self
    }
    /// <p>A timestamp indicating the end date for the date range filter.</p>
    pub fn end_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_date_time = Some(input);
        self
    }
    /// <p>A timestamp indicating the end date for the date range filter.</p>
    pub fn set_end_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.end_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`DateRangeFilter`](crate::types::DateRangeFilter).
    pub fn build(self) -> crate::types::DateRangeFilter {
        crate::types::DateRangeFilter {
            start_date_time: self.start_date_time,
            end_date_time: self.end_date_time,
        }
    }
}
