// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies attributes for sorting a list of bot versions.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BotVersionSortBy {
    /// <p>The attribute to use to sort the list of versions.</p>
    #[doc(hidden)]
    pub attribute: std::option::Option<crate::types::BotVersionSortAttribute>,
    /// <p>The order to sort the list. You can specify ascending or descending order.</p>
    #[doc(hidden)]
    pub order: std::option::Option<crate::types::SortOrder>,
}
impl BotVersionSortBy {
    /// <p>The attribute to use to sort the list of versions.</p>
    pub fn attribute(&self) -> std::option::Option<&crate::types::BotVersionSortAttribute> {
        self.attribute.as_ref()
    }
    /// <p>The order to sort the list. You can specify ascending or descending order.</p>
    pub fn order(&self) -> std::option::Option<&crate::types::SortOrder> {
        self.order.as_ref()
    }
}
impl BotVersionSortBy {
    /// Creates a new builder-style object to manufacture [`BotVersionSortBy`](crate::types::BotVersionSortBy).
    pub fn builder() -> crate::types::builders::BotVersionSortByBuilder {
        crate::types::builders::BotVersionSortByBuilder::default()
    }
}

/// A builder for [`BotVersionSortBy`](crate::types::BotVersionSortBy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BotVersionSortByBuilder {
    pub(crate) attribute: std::option::Option<crate::types::BotVersionSortAttribute>,
    pub(crate) order: std::option::Option<crate::types::SortOrder>,
}
impl BotVersionSortByBuilder {
    /// <p>The attribute to use to sort the list of versions.</p>
    pub fn attribute(mut self, input: crate::types::BotVersionSortAttribute) -> Self {
        self.attribute = Some(input);
        self
    }
    /// <p>The attribute to use to sort the list of versions.</p>
    pub fn set_attribute(
        mut self,
        input: std::option::Option<crate::types::BotVersionSortAttribute>,
    ) -> Self {
        self.attribute = input;
        self
    }
    /// <p>The order to sort the list. You can specify ascending or descending order.</p>
    pub fn order(mut self, input: crate::types::SortOrder) -> Self {
        self.order = Some(input);
        self
    }
    /// <p>The order to sort the list. You can specify ascending or descending order.</p>
    pub fn set_order(mut self, input: std::option::Option<crate::types::SortOrder>) -> Self {
        self.order = input;
        self
    }
    /// Consumes the builder and constructs a [`BotVersionSortBy`](crate::types::BotVersionSortBy).
    pub fn build(self) -> crate::types::BotVersionSortBy {
        crate::types::BotVersionSortBy {
            attribute: self.attribute,
            order: self.order,
        }
    }
}
