// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Amazon CloudWatch Logs log group where the text and metadata logs are delivered. The log group must exist before you enable logging.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CloudWatchLogGroupLogDestination {
    /// <p>The Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.</p>
    #[doc(hidden)]
    pub cloud_watch_log_group_arn: std::option::Option<std::string::String>,
    /// <p>The prefix of the log stream name within the log group that you specified </p>
    #[doc(hidden)]
    pub log_prefix: std::option::Option<std::string::String>,
}
impl CloudWatchLogGroupLogDestination {
    /// <p>The Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.</p>
    pub fn cloud_watch_log_group_arn(&self) -> std::option::Option<&str> {
        self.cloud_watch_log_group_arn.as_deref()
    }
    /// <p>The prefix of the log stream name within the log group that you specified </p>
    pub fn log_prefix(&self) -> std::option::Option<&str> {
        self.log_prefix.as_deref()
    }
}
impl CloudWatchLogGroupLogDestination {
    /// Creates a new builder-style object to manufacture [`CloudWatchLogGroupLogDestination`](crate::types::CloudWatchLogGroupLogDestination).
    pub fn builder() -> crate::types::builders::CloudWatchLogGroupLogDestinationBuilder {
        crate::types::builders::CloudWatchLogGroupLogDestinationBuilder::default()
    }
}

/// A builder for [`CloudWatchLogGroupLogDestination`](crate::types::CloudWatchLogGroupLogDestination).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CloudWatchLogGroupLogDestinationBuilder {
    pub(crate) cloud_watch_log_group_arn: std::option::Option<std::string::String>,
    pub(crate) log_prefix: std::option::Option<std::string::String>,
}
impl CloudWatchLogGroupLogDestinationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.</p>
    pub fn cloud_watch_log_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.cloud_watch_log_group_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.</p>
    pub fn set_cloud_watch_log_group_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.cloud_watch_log_group_arn = input;
        self
    }
    /// <p>The prefix of the log stream name within the log group that you specified </p>
    pub fn log_prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_prefix = Some(input.into());
        self
    }
    /// <p>The prefix of the log stream name within the log group that you specified </p>
    pub fn set_log_prefix(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_prefix = input;
        self
    }
    /// Consumes the builder and constructs a [`CloudWatchLogGroupLogDestination`](crate::types::CloudWatchLogGroupLogDestination).
    pub fn build(self) -> crate::types::CloudWatchLogGroupLogDestination {
        crate::types::CloudWatchLogGroupLogDestination {
            cloud_watch_log_group_arn: self.cloud_watch_log_group_arn,
            log_prefix: self.log_prefix,
        }
    }
}
