// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Determines whether Amazon Lex obscures slot values in conversation logs. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ObfuscationSetting {
    /// <p>Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.</p>
    pub obfuscation_setting_type: crate::types::ObfuscationSettingType,
}
impl ObfuscationSetting {
    /// <p>Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.</p>
    pub fn obfuscation_setting_type(&self) -> &crate::types::ObfuscationSettingType {
        &self.obfuscation_setting_type
    }
}
impl ObfuscationSetting {
    /// Creates a new builder-style object to manufacture [`ObfuscationSetting`](crate::types::ObfuscationSetting).
    pub fn builder() -> crate::types::builders::ObfuscationSettingBuilder {
        crate::types::builders::ObfuscationSettingBuilder::default()
    }
}

/// A builder for [`ObfuscationSetting`](crate::types::ObfuscationSetting).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ObfuscationSettingBuilder {
    pub(crate) obfuscation_setting_type: ::std::option::Option<crate::types::ObfuscationSettingType>,
}
impl ObfuscationSettingBuilder {
    /// <p>Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.</p>
    /// This field is required.
    pub fn obfuscation_setting_type(mut self, input: crate::types::ObfuscationSettingType) -> Self {
        self.obfuscation_setting_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.</p>
    pub fn set_obfuscation_setting_type(mut self, input: ::std::option::Option<crate::types::ObfuscationSettingType>) -> Self {
        self.obfuscation_setting_type = input;
        self
    }
    /// <p>Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.</p>
    pub fn get_obfuscation_setting_type(&self) -> &::std::option::Option<crate::types::ObfuscationSettingType> {
        &self.obfuscation_setting_type
    }
    /// Consumes the builder and constructs a [`ObfuscationSetting`](crate::types::ObfuscationSetting).
    /// This method will fail if any of the following fields are not set:
    /// - [`obfuscation_setting_type`](crate::types::builders::ObfuscationSettingBuilder::obfuscation_setting_type)
    pub fn build(self) -> ::std::result::Result<crate::types::ObfuscationSetting, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ObfuscationSetting {
            obfuscation_setting_type: self.obfuscation_setting_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "obfuscation_setting_type",
                    "obfuscation_setting_type was not specified but it is required when building ObfuscationSetting",
                )
            })?,
        })
    }
}
