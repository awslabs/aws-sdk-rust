// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Determines whether Amazon Lex obscures slot values in conversation logs. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ObfuscationSetting {
    /// <p>Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.</p>
    #[doc(hidden)]
    pub obfuscation_setting_type: std::option::Option<crate::types::ObfuscationSettingType>,
}
impl ObfuscationSetting {
    /// <p>Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.</p>
    pub fn obfuscation_setting_type(
        &self,
    ) -> std::option::Option<&crate::types::ObfuscationSettingType> {
        self.obfuscation_setting_type.as_ref()
    }
}
impl ObfuscationSetting {
    /// Creates a new builder-style object to manufacture [`ObfuscationSetting`](crate::types::ObfuscationSetting).
    pub fn builder() -> crate::types::builders::ObfuscationSettingBuilder {
        crate::types::builders::ObfuscationSettingBuilder::default()
    }
}

/// A builder for [`ObfuscationSetting`](crate::types::ObfuscationSetting).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ObfuscationSettingBuilder {
    pub(crate) obfuscation_setting_type: std::option::Option<crate::types::ObfuscationSettingType>,
}
impl ObfuscationSettingBuilder {
    /// <p>Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.</p>
    pub fn obfuscation_setting_type(mut self, input: crate::types::ObfuscationSettingType) -> Self {
        self.obfuscation_setting_type = Some(input);
        self
    }
    /// <p>Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.</p>
    pub fn set_obfuscation_setting_type(
        mut self,
        input: std::option::Option<crate::types::ObfuscationSettingType>,
    ) -> Self {
        self.obfuscation_setting_type = input;
        self
    }
    /// Consumes the builder and constructs a [`ObfuscationSetting`](crate::types::ObfuscationSetting).
    pub fn build(self) -> crate::types::ObfuscationSetting {
        crate::types::ObfuscationSetting {
            obfuscation_setting_type: self.obfuscation_setting_type,
        }
    }
}
