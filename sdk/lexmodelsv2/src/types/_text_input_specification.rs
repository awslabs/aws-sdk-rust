// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the text input specifications.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TextInputSpecification {
    /// <p>Time for which a bot waits before re-prompting a customer for text input.</p>
    pub start_timeout_ms: i32,
}
impl TextInputSpecification {
    /// <p>Time for which a bot waits before re-prompting a customer for text input.</p>
    pub fn start_timeout_ms(&self) -> i32 {
        self.start_timeout_ms
    }
}
impl TextInputSpecification {
    /// Creates a new builder-style object to manufacture [`TextInputSpecification`](crate::types::TextInputSpecification).
    pub fn builder() -> crate::types::builders::TextInputSpecificationBuilder {
        crate::types::builders::TextInputSpecificationBuilder::default()
    }
}

/// A builder for [`TextInputSpecification`](crate::types::TextInputSpecification).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TextInputSpecificationBuilder {
    pub(crate) start_timeout_ms: ::std::option::Option<i32>,
}
impl TextInputSpecificationBuilder {
    /// <p>Time for which a bot waits before re-prompting a customer for text input.</p>
    /// This field is required.
    pub fn start_timeout_ms(mut self, input: i32) -> Self {
        self.start_timeout_ms = ::std::option::Option::Some(input);
        self
    }
    /// <p>Time for which a bot waits before re-prompting a customer for text input.</p>
    pub fn set_start_timeout_ms(mut self, input: ::std::option::Option<i32>) -> Self {
        self.start_timeout_ms = input;
        self
    }
    /// <p>Time for which a bot waits before re-prompting a customer for text input.</p>
    pub fn get_start_timeout_ms(&self) -> &::std::option::Option<i32> {
        &self.start_timeout_ms
    }
    /// Consumes the builder and constructs a [`TextInputSpecification`](crate::types::TextInputSpecification).
    /// This method will fail if any of the following fields are not set:
    /// - [`start_timeout_ms`](crate::types::builders::TextInputSpecificationBuilder::start_timeout_ms)
    pub fn build(self) -> ::std::result::Result<crate::types::TextInputSpecification, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TextInputSpecification {
            start_timeout_ms: self.start_timeout_ms.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "start_timeout_ms",
                    "start_timeout_ms was not specified but it is required when building TextInputSpecification",
                )
            })?,
        })
    }
}
