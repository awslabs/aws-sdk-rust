// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the text input specifications.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TextInputSpecification {
    /// <p>Time for which a bot waits before re-prompting a customer for text input.</p>
    #[doc(hidden)]
    pub start_timeout_ms: std::option::Option<i32>,
}
impl TextInputSpecification {
    /// <p>Time for which a bot waits before re-prompting a customer for text input.</p>
    pub fn start_timeout_ms(&self) -> std::option::Option<i32> {
        self.start_timeout_ms
    }
}
impl TextInputSpecification {
    /// Creates a new builder-style object to manufacture [`TextInputSpecification`](crate::types::TextInputSpecification).
    pub fn builder() -> crate::types::builders::TextInputSpecificationBuilder {
        crate::types::builders::TextInputSpecificationBuilder::default()
    }
}

/// A builder for [`TextInputSpecification`](crate::types::TextInputSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TextInputSpecificationBuilder {
    pub(crate) start_timeout_ms: std::option::Option<i32>,
}
impl TextInputSpecificationBuilder {
    /// <p>Time for which a bot waits before re-prompting a customer for text input.</p>
    pub fn start_timeout_ms(mut self, input: i32) -> Self {
        self.start_timeout_ms = Some(input);
        self
    }
    /// <p>Time for which a bot waits before re-prompting a customer for text input.</p>
    pub fn set_start_timeout_ms(mut self, input: std::option::Option<i32>) -> Self {
        self.start_timeout_ms = input;
        self
    }
    /// Consumes the builder and constructs a [`TextInputSpecification`](crate::types::TextInputSpecification).
    pub fn build(self) -> crate::types::TextInputSpecification {
        crate::types::TextInputSpecification {
            start_timeout_ms: self.start_timeout_ms,
        }
    }
}
