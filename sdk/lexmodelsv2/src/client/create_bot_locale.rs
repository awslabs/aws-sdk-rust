// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBotLocale`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bot_id(impl Into<String>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::bot_id) / [`set_bot_id(Option<String>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::set_bot_id): <p>The identifier of the bot to create the locale for.</p>
    ///   - [`bot_version(impl Into<String>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::bot_version) / [`set_bot_version(Option<String>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::set_bot_version): <p>The version of the bot to create the locale for. This can only be the draft version of the bot.</p>
    ///   - [`locale_id(impl Into<String>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::locale_id) / [`set_locale_id(Option<String>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::set_locale_id): <p>The identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::set_description): <p>A description of the bot locale. Use this to help identify the bot locale in lists.</p>
    ///   - [`nlu_intent_confidence_threshold(f64)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::nlu_intent_confidence_threshold) / [`set_nlu_intent_confidence_threshold(Option<f64>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::set_nlu_intent_confidence_threshold): <p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>  <p>For example, suppose a bot is configured with the confidence threshold of 0.80 and the <code>AMAZON.FallbackIntent</code>. Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the <code>RecognizeText</code> operation would be:</p>  <ul>   <li> <p>AMAZON.FallbackIntent</p> </li>   <li> <p>IntentA</p> </li>   <li> <p>IntentB</p> </li>   <li> <p>IntentC</p> </li>  </ul>
    ///   - [`voice_settings(VoiceSettings)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::voice_settings) / [`set_voice_settings(Option<VoiceSettings>)`](crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::set_voice_settings): <p>The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.</p>
    /// - On success, responds with [`CreateBotLocaleOutput`](crate::operation::create_bot_locale::CreateBotLocaleOutput) with field(s):
    ///   - [`bot_id(Option<String>)`](crate::operation::create_bot_locale::CreateBotLocaleOutput::bot_id): <p>The specified bot identifier.</p>
    ///   - [`bot_version(Option<String>)`](crate::operation::create_bot_locale::CreateBotLocaleOutput::bot_version): <p>The specified bot version.</p>
    ///   - [`locale_name(Option<String>)`](crate::operation::create_bot_locale::CreateBotLocaleOutput::locale_name): <p>The specified locale name.</p>
    ///   - [`locale_id(Option<String>)`](crate::operation::create_bot_locale::CreateBotLocaleOutput::locale_id): <p>The specified locale identifier.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_bot_locale::CreateBotLocaleOutput::description): <p>The specified description of the bot locale.</p>
    ///   - [`nlu_intent_confidence_threshold(Option<f64>)`](crate::operation::create_bot_locale::CreateBotLocaleOutput::nlu_intent_confidence_threshold): <p>The specified confidence threshold for inserting the <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> intents.</p>
    ///   - [`voice_settings(Option<VoiceSettings>)`](crate::operation::create_bot_locale::CreateBotLocaleOutput::voice_settings): <p>The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.</p>
    ///   - [`bot_locale_status(Option<BotLocaleStatus>)`](crate::operation::create_bot_locale::CreateBotLocaleOutput::bot_locale_status): <p>The status of the bot.</p>  <p>When the status is <code>Creating</code> the bot locale is being configured. When the status is <code>Building</code> Amazon Lex is building the bot for testing and use.</p>  <p>If the status of the bot is <code>ReadyExpressTesting</code>, you can test the bot using the exact utterances specified in the bots' intents. When the bot is ready for full testing or to run, the status is <code>Built</code>.</p>  <p>If there was a problem with building the bot, the status is <code>Failed</code>. If the bot was saved but not built, the status is <code>NotBuilt</code>.</p>
    ///   - [`creation_date_time(Option<DateTime>)`](crate::operation::create_bot_locale::CreateBotLocaleOutput::creation_date_time): <p>A timestamp specifying the date and time that the bot locale was created.</p>
    /// - On failure, responds with [`SdkError<CreateBotLocaleError>`](crate::operation::create_bot_locale::CreateBotLocaleError)
    pub fn create_bot_locale(
        &self,
    ) -> crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder {
        crate::operation::create_bot_locale::builders::CreateBotLocaleFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
