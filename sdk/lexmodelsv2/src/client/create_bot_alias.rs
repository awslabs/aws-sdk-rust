// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBotAlias`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bot_alias_name(impl Into<String>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::bot_alias_name) / [`set_bot_alias_name(Option<String>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::set_bot_alias_name): <p>The alias to create. The name must be unique for the bot.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::set_description): <p>A description of the alias. Use this description to help identify the alias.</p>
    ///   - [`bot_version(impl Into<String>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::bot_version) / [`set_bot_version(Option<String>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::set_bot_version): <p>The version of the bot that this alias points to. You can use the <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_UpdateBotAlias.html">UpdateBotAlias</a> operation to change the bot version associated with the alias.</p>
    ///   - [`bot_alias_locale_settings(HashMap<String, BotAliasLocaleSettings>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::bot_alias_locale_settings) / [`set_bot_alias_locale_settings(Option<HashMap<String, BotAliasLocaleSettings>>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::set_bot_alias_locale_settings): <p>Maps configuration information to a specific locale. You can use this parameter to specify a specific Lambda function to run different functions in different locales.</p>
    ///   - [`conversation_log_settings(ConversationLogSettings)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::conversation_log_settings) / [`set_conversation_log_settings(Option<ConversationLogSettings>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::set_conversation_log_settings): <p>Specifies whether Amazon Lex logs text and audio for a conversation with the bot. When you enable conversation logs, text logs store text input, transcripts of audio input, and associated metadata in Amazon CloudWatch Logs. Audio logs store audio input in Amazon S3.</p>
    ///   - [`sentiment_analysis_settings(SentimentAnalysisSettings)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::sentiment_analysis_settings) / [`set_sentiment_analysis_settings(Option<SentimentAnalysisSettings>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::set_sentiment_analysis_settings): <p>Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.</p>
    ///   - [`bot_id(impl Into<String>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::bot_id) / [`set_bot_id(Option<String>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::set_bot_id): <p>The unique identifier of the bot that the alias applies to.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::set_tags): <p>A list of tags to add to the bot alias. You can only add tags when you create an alias, you can't use the <code>UpdateBotAlias</code> operation to update the tags on a bot alias. To update tags, use the <code>TagResource</code> operation.</p>
    /// - On success, responds with [`CreateBotAliasOutput`](crate::operation::create_bot_alias::CreateBotAliasOutput) with field(s):
    ///   - [`bot_alias_id(Option<String>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::bot_alias_id): <p>The unique identifier of the bot alias.</p>
    ///   - [`bot_alias_name(Option<String>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::bot_alias_name): <p>The name specified for the bot alias.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::description): <p>The description specified for the bot alias.</p>
    ///   - [`bot_version(Option<String>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::bot_version): <p>The version of the bot associated with this alias.</p>
    ///   - [`bot_alias_locale_settings(Option<HashMap<String, BotAliasLocaleSettings>>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::bot_alias_locale_settings): <p>Configuration information for a specific locale.</p>
    ///   - [`conversation_log_settings(Option<ConversationLogSettings>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::conversation_log_settings): <p>The conversation log settings specified for the alias.</p>
    ///   - [`sentiment_analysis_settings(Option<SentimentAnalysisSettings>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::sentiment_analysis_settings): <p>Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.</p>
    ///   - [`bot_alias_status(Option<BotAliasStatus>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::bot_alias_status): <p>The current status of the alias. The alias is first put into the <code>Creating</code> state. When the alias is ready to be used, it is put into the <code>Available</code> state. You can use the <code>DescribeBotAlias</code> operation to get the current state of an alias.</p>
    ///   - [`bot_id(Option<String>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::bot_id): <p>The unique identifier of the bot that this alias applies to.</p>
    ///   - [`creation_date_time(Option<DateTime>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::creation_date_time): <p>A Unix timestamp indicating the date and time that the bot alias was created.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::operation::create_bot_alias::CreateBotAliasOutput::tags): <p>A list of tags associated with the bot alias.</p>
    /// - On failure, responds with [`SdkError<CreateBotAliasError>`](crate::operation::create_bot_alias::CreateBotAliasError)
    pub fn create_bot_alias(
        &self,
    ) -> crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder {
        crate::operation::create_bot_alias::builders::CreateBotAliasFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
