// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartImport`](crate::operation::start_import::builders::StartImportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`import_id(impl Into<String>)`](crate::operation::start_import::builders::StartImportFluentBuilder::import_id) / [`set_import_id(Option<String>)`](crate::operation::start_import::builders::StartImportFluentBuilder::set_import_id):<br>required: **true**<br><p>The unique identifier for the import. It is included in the response from the <a href="https://docs.aws.amazon.com/lexv2/latest/APIReference/API_CreateUploadUrl.html">CreateUploadUrl</a> operation.</p><br>
    ///   - [`resource_specification(ImportResourceSpecification)`](crate::operation::start_import::builders::StartImportFluentBuilder::resource_specification) / [`set_resource_specification(Option<ImportResourceSpecification>)`](crate::operation::start_import::builders::StartImportFluentBuilder::set_resource_specification):<br>required: **true**<br><p>Parameters for creating the bot, bot locale or custom vocabulary.</p><br>
    ///   - [`merge_strategy(MergeStrategy)`](crate::operation::start_import::builders::StartImportFluentBuilder::merge_strategy) / [`set_merge_strategy(Option<MergeStrategy>)`](crate::operation::start_import::builders::StartImportFluentBuilder::set_merge_strategy):<br>required: **true**<br><p>The strategy to use when there is a name conflict between the imported resource and an existing resource. When the merge strategy is <code>FailOnConflict</code> existing resources are not overwritten and the import fails.</p><br>
    ///   - [`file_password(impl Into<String>)`](crate::operation::start_import::builders::StartImportFluentBuilder::file_password) / [`set_file_password(Option<String>)`](crate::operation::start_import::builders::StartImportFluentBuilder::set_file_password):<br>required: **false**<br><p>The password used to encrypt the zip archive that contains the resource definition. You should always encrypt the zip archive to protect it during transit between your site and Amazon Lex.</p><br>
    /// - On success, responds with [`StartImportOutput`](crate::operation::start_import::StartImportOutput) with field(s):
    ///   - [`import_id(Option<String>)`](crate::operation::start_import::StartImportOutput::import_id): <p>A unique identifier for the import.</p>
    ///   - [`resource_specification(Option<ImportResourceSpecification>)`](crate::operation::start_import::StartImportOutput::resource_specification): <p>The parameters used when importing the resource.</p>
    ///   - [`merge_strategy(Option<MergeStrategy>)`](crate::operation::start_import::StartImportOutput::merge_strategy): <p>The strategy used when there was a name conflict between the imported resource and an existing resource. When the merge strategy is <code>FailOnConflict</code> existing resources are not overwritten and the import fails.</p>
    ///   - [`import_status(Option<ImportStatus>)`](crate::operation::start_import::StartImportOutput::import_status): <p>The current status of the import. When the status is <code>Complete</code> the bot, bot alias, or custom vocabulary is ready to use.</p>
    ///   - [`creation_date_time(Option<DateTime>)`](crate::operation::start_import::StartImportOutput::creation_date_time): <p>The date and time that the import request was created.</p>
    /// - On failure, responds with [`SdkError<StartImportError>`](crate::operation::start_import::StartImportError)
    pub fn start_import(&self) -> crate::operation::start_import::builders::StartImportFluentBuilder {
        crate::operation::start_import::builders::StartImportFluentBuilder::new(self.handle.clone())
    }
}
