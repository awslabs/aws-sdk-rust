// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteBotAlias`](crate::operation::delete_bot_alias::builders::DeleteBotAliasFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bot_alias_id(impl Into<String>)`](crate::operation::delete_bot_alias::builders::DeleteBotAliasFluentBuilder::bot_alias_id) / [`set_bot_alias_id(Option<String>)`](crate::operation::delete_bot_alias::builders::DeleteBotAliasFluentBuilder::set_bot_alias_id): <p>The unique identifier of the bot alias to delete.</p>
    ///   - [`bot_id(impl Into<String>)`](crate::operation::delete_bot_alias::builders::DeleteBotAliasFluentBuilder::bot_id) / [`set_bot_id(Option<String>)`](crate::operation::delete_bot_alias::builders::DeleteBotAliasFluentBuilder::set_bot_id): <p>The unique identifier of the bot associated with the alias to delete.</p>
    ///   - [`skip_resource_in_use_check(bool)`](crate::operation::delete_bot_alias::builders::DeleteBotAliasFluentBuilder::skip_resource_in_use_check) / [`set_skip_resource_in_use_check(bool)`](crate::operation::delete_bot_alias::builders::DeleteBotAliasFluentBuilder::set_skip_resource_in_use_check): <p>When this parameter is true, Amazon Lex doesn't check to see if any other resource is using the alias before it is deleted.</p>
    /// - On success, responds with [`DeleteBotAliasOutput`](crate::operation::delete_bot_alias::DeleteBotAliasOutput) with field(s):
    ///   - [`bot_alias_id(Option<String>)`](crate::operation::delete_bot_alias::DeleteBotAliasOutput::bot_alias_id): <p>The unique identifier of the bot alias to delete.</p>
    ///   - [`bot_id(Option<String>)`](crate::operation::delete_bot_alias::DeleteBotAliasOutput::bot_id): <p>The unique identifier of the bot that contains the alias to delete.</p>
    ///   - [`bot_alias_status(Option<BotAliasStatus>)`](crate::operation::delete_bot_alias::DeleteBotAliasOutput::bot_alias_status): <p>The current status of the alias. The status is <code>Deleting</code> while the alias is in the process of being deleted. Once the alias is deleted, it will no longer appear in the list of aliases returned by the <code>ListBotAliases</code> operation.</p>
    /// - On failure, responds with [`SdkError<DeleteBotAliasError>`](crate::operation::delete_bot_alias::DeleteBotAliasError)
    pub fn delete_bot_alias(
        &self,
    ) -> crate::operation::delete_bot_alias::builders::DeleteBotAliasFluentBuilder {
        crate::operation::delete_bot_alias::builders::DeleteBotAliasFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
