// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBot`](crate::operation::create_bot::builders::CreateBotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bot_name(impl Into<String>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::bot_name) / [`set_bot_name(Option<String>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::set_bot_name): <p>The name of the bot. The bot name must be unique in the account that creates the bot.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::set_description): <p>A description of the bot. It appears in lists to help you identify a particular bot.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::set_role_arn): <p>The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.</p>
    ///   - [`data_privacy(DataPrivacy)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::data_privacy) / [`set_data_privacy(Option<DataPrivacy>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::set_data_privacy): <p>Provides information on additional privacy protections Amazon Lex should use with the bot's data.</p>
    ///   - [`idle_session_ttl_in_seconds(i32)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::idle_session_ttl_in_seconds) / [`set_idle_session_ttl_in_seconds(Option<i32>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::set_idle_session_ttl_in_seconds): <p>The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot. </p>  <p>A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.</p>  <p>You can specify between 60 (1 minute) and 86,400 (24 hours) seconds.</p>
    ///   - [`bot_tags(HashMap<String, String>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::bot_tags) / [`set_bot_tags(Option<HashMap<String, String>>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::set_bot_tags): <p>A list of tags to add to the bot. You can only add tags when you create a bot. You can't use the <code>UpdateBot</code> operation to update tags. To update tags, use the <code>TagResource</code> operation.</p>
    ///   - [`test_bot_alias_tags(HashMap<String, String>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::test_bot_alias_tags) / [`set_test_bot_alias_tags(Option<HashMap<String, String>>)`](crate::operation::create_bot::builders::CreateBotFluentBuilder::set_test_bot_alias_tags): <p>A list of tags to add to the test alias for a bot. You can only add tags when you create a bot. You can't use the <code>UpdateAlias</code> operation to update tags. To update tags on the test alias, use the <code>TagResource</code> operation.</p>
    /// - On success, responds with [`CreateBotOutput`](crate::operation::create_bot::CreateBotOutput) with field(s):
    ///   - [`bot_id(Option<String>)`](crate::operation::create_bot::CreateBotOutput::bot_id): <p>A unique identifier for a particular bot. You use this to identify the bot when you call other Amazon Lex API operations.</p>
    ///   - [`bot_name(Option<String>)`](crate::operation::create_bot::CreateBotOutput::bot_name): <p>The name specified for the bot.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_bot::CreateBotOutput::description): <p>The description specified for the bot.</p>
    ///   - [`role_arn(Option<String>)`](crate::operation::create_bot::CreateBotOutput::role_arn): <p>The IAM role specified for the bot.</p>
    ///   - [`data_privacy(Option<DataPrivacy>)`](crate::operation::create_bot::CreateBotOutput::data_privacy): <p>The data privacy settings specified for the bot.</p>
    ///   - [`idle_session_ttl_in_seconds(Option<i32>)`](crate::operation::create_bot::CreateBotOutput::idle_session_ttl_in_seconds): <p>The session idle time specified for the bot.</p>
    ///   - [`bot_status(Option<BotStatus>)`](crate::operation::create_bot::CreateBotOutput::bot_status): <p>Shows the current status of the bot. The bot is first in the <code>Creating</code> status. Once the bot is read for use, it changes to the <code>Available</code> status. After the bot is created, you can use the <code>Draft</code> version of the bot.</p>
    ///   - [`creation_date_time(Option<DateTime>)`](crate::operation::create_bot::CreateBotOutput::creation_date_time): <p>A timestamp indicating the date and time that the bot was created.</p>
    ///   - [`bot_tags(Option<HashMap<String, String>>)`](crate::operation::create_bot::CreateBotOutput::bot_tags): <p>A list of tags associated with the bot.</p>
    ///   - [`test_bot_alias_tags(Option<HashMap<String, String>>)`](crate::operation::create_bot::CreateBotOutput::test_bot_alias_tags): <p>A list of tags associated with the test alias for the bot.</p>
    /// - On failure, responds with [`SdkError<CreateBotError>`](crate::operation::create_bot::CreateBotError)
    pub fn create_bot(&self) -> crate::operation::create_bot::builders::CreateBotFluentBuilder {
        crate::operation::create_bot::builders::CreateBotFluentBuilder::new(self.handle.clone())
    }
}
