// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteBotVersion`](crate::operation::delete_bot_version::builders::DeleteBotVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bot_id(impl Into<String>)`](crate::operation::delete_bot_version::builders::DeleteBotVersionFluentBuilder::bot_id) / [`set_bot_id(Option<String>)`](crate::operation::delete_bot_version::builders::DeleteBotVersionFluentBuilder::set_bot_id):<br>required: **true**<br><p>The identifier of the bot that contains the version.</p><br>
    ///   - [`bot_version(impl Into<String>)`](crate::operation::delete_bot_version::builders::DeleteBotVersionFluentBuilder::bot_version) / [`set_bot_version(Option<String>)`](crate::operation::delete_bot_version::builders::DeleteBotVersionFluentBuilder::set_bot_version):<br>required: **true**<br><p>The version of the bot to delete.</p><br>
    ///   - [`skip_resource_in_use_check(bool)`](crate::operation::delete_bot_version::builders::DeleteBotVersionFluentBuilder::skip_resource_in_use_check) / [`set_skip_resource_in_use_check(Option<bool>)`](crate::operation::delete_bot_version::builders::DeleteBotVersionFluentBuilder::set_skip_resource_in_use_check):<br>required: **false**<br><p>By default, Amazon Lex checks if any other resource, such as an alias or bot network, is using the bot version before it is deleted and throws a <code>ResourceInUseException</code> exception if the version is being used by another resource. Set this parameter to <code>true</code> to skip this check and remove the version even if it is being used by another resource.</p><br>
    /// - On success, responds with [`DeleteBotVersionOutput`](crate::operation::delete_bot_version::DeleteBotVersionOutput) with field(s):
    ///   - [`bot_id(Option<String>)`](crate::operation::delete_bot_version::DeleteBotVersionOutput::bot_id): <p>The identifier of the bot that is being deleted.</p>
    ///   - [`bot_version(Option<String>)`](crate::operation::delete_bot_version::DeleteBotVersionOutput::bot_version): <p>The version of the bot that is being deleted.</p>
    ///   - [`bot_status(Option<BotStatus>)`](crate::operation::delete_bot_version::DeleteBotVersionOutput::bot_status): <p>The current status of the bot. </p>
    /// - On failure, responds with [`SdkError<DeleteBotVersionError>`](crate::operation::delete_bot_version::DeleteBotVersionError)
    pub fn delete_bot_version(&self) -> crate::operation::delete_bot_version::builders::DeleteBotVersionFluentBuilder {
        crate::operation::delete_bot_version::builders::DeleteBotVersionFluentBuilder::new(self.handle.clone())
    }
}
