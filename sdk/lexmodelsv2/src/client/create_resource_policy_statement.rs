// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateResourcePolicyStatement`](crate::client::fluent_builders::CreateResourcePolicyStatement) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::set_resource_arn): <p>The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.</p>
    ///   - [`statement_id(impl Into<String>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::statement_id) / [`set_statement_id(Option<String>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::set_statement_id): <p>The name of the statement. The ID is the same as the <code>Sid</code> IAM property. The statement name must be unique within the policy. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_sid.html">IAM JSON policy elements: Sid</a>. </p>
    ///   - [`effect(Effect)`](crate::client::fluent_builders::CreateResourcePolicyStatement::effect) / [`set_effect(Option<Effect>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::set_effect): <p>Determines whether the statement allows or denies access to the resource.</p>
    ///   - [`principal(Vec<Principal>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::principal) / [`set_principal(Option<Vec<Principal>>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::set_principal): <p>An IAM principal, such as an IAM users, IAM roles, or AWS services that is allowed or denied access to a resource. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html">AWS JSON policy elements: Principal</a>.</p>
    ///   - [`action(Vec<String>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::action) / [`set_action(Option<Vec<String>>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::set_action): <p>The Amazon Lex action that this policy either allows or denies. The action must apply to the resource type of the specified ARN. For more information, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlexv2.html"> Actions, resources, and condition keys for Amazon Lex V2</a>.</p>
    ///   - [`condition(HashMap<String, HashMap<String, String>>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::condition) / [`set_condition(Option<HashMap<String, HashMap<String, String>>>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::set_condition): <p>Specifies a condition when the policy is in effect. If the principal of the policy is a service principal, you must provide two condition blocks, one with a SourceAccount global condition key and one with a SourceArn global condition key.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html">IAM JSON policy elements: Condition </a>.</p>
    ///   - [`expected_revision_id(impl Into<String>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::expected_revision_id) / [`set_expected_revision_id(Option<String>)`](crate::client::fluent_builders::CreateResourcePolicyStatement::set_expected_revision_id): <p>The identifier of the revision of the policy to edit. If this revision ID doesn't match the current revision ID, Amazon Lex throws an exception.</p>  <p>If you don't specify a revision, Amazon Lex overwrites the contents of the policy with the new values.</p>
    /// - On success, responds with [`CreateResourcePolicyStatementOutput`](crate::output::CreateResourcePolicyStatementOutput) with field(s):
    ///   - [`resource_arn(Option<String>)`](crate::output::CreateResourcePolicyStatementOutput::resource_arn): <p>The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.</p>
    ///   - [`revision_id(Option<String>)`](crate::output::CreateResourcePolicyStatementOutput::revision_id): <p>The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource.</p>
    /// - On failure, responds with [`SdkError<CreateResourcePolicyStatementError>`](crate::error::CreateResourcePolicyStatementError)
    pub fn create_resource_policy_statement(
        &self,
    ) -> crate::client::fluent_builders::CreateResourcePolicyStatement {
        crate::client::fluent_builders::CreateResourcePolicyStatement::new(self.handle.clone())
    }
}
