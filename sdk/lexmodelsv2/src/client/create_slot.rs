// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSlot`](crate::operation::create_slot::builders::CreateSlotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`slot_name(impl Into<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::slot_name) / [`set_slot_name(Option<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_slot_name):<br>required: **true**<br><p>The name of the slot. Slot names must be unique within the bot that contains the slot.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_description):<br>required: **false**<br><p>A description of the slot. Use this to help identify the slot in lists.</p><br>
    ///   - [`slot_type_id(impl Into<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::slot_type_id) / [`set_slot_type_id(Option<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_slot_type_id):<br>required: **false**<br><p>The unique identifier for the slot type associated with this slot. The slot type determines the values that can be entered into the slot.</p><br>
    ///   - [`value_elicitation_setting(SlotValueElicitationSetting)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::value_elicitation_setting) / [`set_value_elicitation_setting(Option<SlotValueElicitationSetting>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_value_elicitation_setting):<br>required: **true**<br><p>Specifies prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot. </p><br>
    ///   - [`obfuscation_setting(ObfuscationSetting)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::obfuscation_setting) / [`set_obfuscation_setting(Option<ObfuscationSetting>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_obfuscation_setting):<br>required: **false**<br><p>Determines how slot values are used in Amazon CloudWatch logs. If the value of the <code>obfuscationSetting</code> parameter is <code>DefaultObfuscation</code>, slot values are obfuscated in the log output. If the value is <code>None</code>, the actual value is present in the log output.</p>  <p>The default is to obfuscate values in the CloudWatch logs.</p><br>
    ///   - [`bot_id(impl Into<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::bot_id) / [`set_bot_id(Option<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_bot_id):<br>required: **true**<br><p>The identifier of the bot associated with the slot.</p><br>
    ///   - [`bot_version(impl Into<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::bot_version) / [`set_bot_version(Option<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_bot_version):<br>required: **true**<br><p>The version of the bot associated with the slot.</p><br>
    ///   - [`locale_id(impl Into<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::locale_id) / [`set_locale_id(Option<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_locale_id):<br>required: **true**<br><p>The identifier of the language and locale that the slot will be used in. The string must match one of the supported locales. All of the bots, intents, slot types used by the slot must have the same locale. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.</p><br>
    ///   - [`intent_id(impl Into<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::intent_id) / [`set_intent_id(Option<String>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_intent_id):<br>required: **true**<br><p>The identifier of the intent that contains the slot.</p><br>
    ///   - [`multiple_values_setting(MultipleValuesSetting)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::multiple_values_setting) / [`set_multiple_values_setting(Option<MultipleValuesSetting>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_multiple_values_setting):<br>required: **false**<br><p>Indicates whether the slot returns multiple values in one response. Multi-value slots are only available in the <code>en-US</code> locale. If you set this value to <code>true</code> in any other locale, Amazon Lex throws a <code>ValidationException</code>. </p>  <p>If the <code>multipleValuesSetting</code> is not set, the default value is <code>false</code>.</p><br>
    ///   - [`sub_slot_setting(SubSlotSetting)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::sub_slot_setting) / [`set_sub_slot_setting(Option<SubSlotSetting>)`](crate::operation::create_slot::builders::CreateSlotFluentBuilder::set_sub_slot_setting):<br>required: **false**<br><p>Specifications for the constituent sub slots and the expression for the composite slot.</p><br>
    /// - On success, responds with [`CreateSlotOutput`](crate::operation::create_slot::CreateSlotOutput) with field(s):
    ///   - [`slot_id(Option<String>)`](crate::operation::create_slot::CreateSlotOutput::slot_id): <p>The unique identifier associated with the slot. Use this to identify the slot when you update or delete it.</p>
    ///   - [`slot_name(Option<String>)`](crate::operation::create_slot::CreateSlotOutput::slot_name): <p>The name specified for the slot.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_slot::CreateSlotOutput::description): <p>The description associated with the slot.</p>
    ///   - [`slot_type_id(Option<String>)`](crate::operation::create_slot::CreateSlotOutput::slot_type_id): <p>The unique identifier of the slot type associated with this slot.</p>
    ///   - [`value_elicitation_setting(Option<SlotValueElicitationSetting>)`](crate::operation::create_slot::CreateSlotOutput::value_elicitation_setting): <p>The value elicitation settings specified for the slot.</p>
    ///   - [`obfuscation_setting(Option<ObfuscationSetting>)`](crate::operation::create_slot::CreateSlotOutput::obfuscation_setting): <p>Indicates whether the slot is configured to obfuscate values in Amazon CloudWatch logs.</p>
    ///   - [`bot_id(Option<String>)`](crate::operation::create_slot::CreateSlotOutput::bot_id): <p>The unique identifier of the bot associated with the slot.</p>
    ///   - [`bot_version(Option<String>)`](crate::operation::create_slot::CreateSlotOutput::bot_version): <p>The version of the bot associated with the slot.</p>
    ///   - [`locale_id(Option<String>)`](crate::operation::create_slot::CreateSlotOutput::locale_id): <p>The language and local specified for the slot.</p>
    ///   - [`intent_id(Option<String>)`](crate::operation::create_slot::CreateSlotOutput::intent_id): <p>The unique identifier of the intent associated with the slot.</p>
    ///   - [`creation_date_time(Option<DateTime>)`](crate::operation::create_slot::CreateSlotOutput::creation_date_time): <p>The timestamp of the date and time that the slot was created.</p>
    ///   - [`multiple_values_setting(Option<MultipleValuesSetting>)`](crate::operation::create_slot::CreateSlotOutput::multiple_values_setting): <p>Indicates whether the slot returns multiple values in one response.</p>
    ///   - [`sub_slot_setting(Option<SubSlotSetting>)`](crate::operation::create_slot::CreateSlotOutput::sub_slot_setting): <p>Specifications for the constituent sub slots and the expression for the composite slot.</p>
    /// - On failure, responds with [`SdkError<CreateSlotError>`](crate::operation::create_slot::CreateSlotError)
    pub fn create_slot(&self) -> crate::operation::create_slot::builders::CreateSlotFluentBuilder {
        crate::operation::create_slot::builders::CreateSlotFluentBuilder::new(self.handle.clone())
    }
}
