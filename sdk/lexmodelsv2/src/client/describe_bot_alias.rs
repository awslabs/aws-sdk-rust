// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeBotAlias`](crate::operation::describe_bot_alias::builders::DescribeBotAliasFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bot_alias_id(impl Into<String>)`](crate::operation::describe_bot_alias::builders::DescribeBotAliasFluentBuilder::bot_alias_id) / [`set_bot_alias_id(Option<String>)`](crate::operation::describe_bot_alias::builders::DescribeBotAliasFluentBuilder::set_bot_alias_id): <p>The identifier of the bot alias to describe.</p>
    ///   - [`bot_id(impl Into<String>)`](crate::operation::describe_bot_alias::builders::DescribeBotAliasFluentBuilder::bot_id) / [`set_bot_id(Option<String>)`](crate::operation::describe_bot_alias::builders::DescribeBotAliasFluentBuilder::set_bot_id): <p>The identifier of the bot associated with the bot alias to describe.</p>
    /// - On success, responds with [`DescribeBotAliasOutput`](crate::operation::describe_bot_alias::DescribeBotAliasOutput) with field(s):
    ///   - [`bot_alias_id(Option<String>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::bot_alias_id): <p>The identifier of the bot alias.</p>
    ///   - [`bot_alias_name(Option<String>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::bot_alias_name): <p>The name of the bot alias.</p>
    ///   - [`description(Option<String>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::description): <p>The description of the bot alias.</p>
    ///   - [`bot_version(Option<String>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::bot_version): <p>The version of the bot associated with the bot alias.</p>
    ///   - [`bot_alias_locale_settings(Option<HashMap<String, BotAliasLocaleSettings>>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::bot_alias_locale_settings): <p>The locale settings that are unique to the alias.</p>
    ///   - [`conversation_log_settings(Option<ConversationLogSettings>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::conversation_log_settings): <p>Specifics of how Amazon Lex logs text and audio conversations with the bot associated with the alias.</p>
    ///   - [`sentiment_analysis_settings(Option<SentimentAnalysisSettings>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::sentiment_analysis_settings): <p>Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.</p>
    ///   - [`bot_alias_history_events(Option<Vec<BotAliasHistoryEvent>>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::bot_alias_history_events): <p>A list of events that affect a bot alias. For example, an event is recorded when the version that the alias points to changes.</p>
    ///   - [`bot_alias_status(Option<BotAliasStatus>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::bot_alias_status): <p>The current status of the alias. When the alias is <code>Available</code>, the alias is ready for use with your bot.</p>
    ///   - [`bot_id(Option<String>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::bot_id): <p>The identifier of the bot associated with the bot alias.</p>
    ///   - [`creation_date_time(Option<DateTime>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::creation_date_time): <p>A timestamp of the date and time that the alias was created.</p>
    ///   - [`last_updated_date_time(Option<DateTime>)`](crate::operation::describe_bot_alias::DescribeBotAliasOutput::last_updated_date_time): <p>A timestamp of the date and time that the alias was last updated.</p>
    /// - On failure, responds with [`SdkError<DescribeBotAliasError>`](crate::operation::describe_bot_alias::DescribeBotAliasError)
    pub fn describe_bot_alias(
        &self,
    ) -> crate::operation::describe_bot_alias::builders::DescribeBotAliasFluentBuilder {
        crate::operation::describe_bot_alias::builders::DescribeBotAliasFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
