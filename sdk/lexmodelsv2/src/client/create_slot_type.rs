// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSlotType`](crate::client::fluent_builders::CreateSlotType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`slot_type_name(impl Into<String>)`](crate::client::fluent_builders::CreateSlotType::slot_type_name) / [`set_slot_type_name(Option<String>)`](crate::client::fluent_builders::CreateSlotType::set_slot_type_name): <p>The name for the slot. A slot type name must be unique within the account.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateSlotType::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateSlotType::set_description): <p>A description of the slot type. Use the description to help identify the slot type in lists.</p>
    ///   - [`slot_type_values(Vec<SlotTypeValue>)`](crate::client::fluent_builders::CreateSlotType::slot_type_values) / [`set_slot_type_values(Option<Vec<SlotTypeValue>>)`](crate::client::fluent_builders::CreateSlotType::set_slot_type_values): <p>A list of <code>SlotTypeValue</code> objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.</p>
    ///   - [`value_selection_setting(SlotValueSelectionSetting)`](crate::client::fluent_builders::CreateSlotType::value_selection_setting) / [`set_value_selection_setting(Option<SlotValueSelectionSetting>)`](crate::client::fluent_builders::CreateSlotType::set_value_selection_setting): <p>Determines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values:</p>  <ul>   <li> <p> <code>OriginalValue</code> - Returns the value entered by the user, if the user value is similar to the slot value.</p> </li>   <li> <p> <code>TopResolution</code> - If there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null.</p> </li>  </ul>  <p>If you don't specify the <code>valueSelectionSetting</code> parameter, the default is <code>OriginalValue</code>.</p>
    ///   - [`parent_slot_type_signature(impl Into<String>)`](crate::client::fluent_builders::CreateSlotType::parent_slot_type_signature) / [`set_parent_slot_type_signature(Option<String>)`](crate::client::fluent_builders::CreateSlotType::set_parent_slot_type_signature): <p>The built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type.</p>  <p>Only <code>AMAZON.AlphaNumeric</code> is supported.</p>
    ///   - [`bot_id(impl Into<String>)`](crate::client::fluent_builders::CreateSlotType::bot_id) / [`set_bot_id(Option<String>)`](crate::client::fluent_builders::CreateSlotType::set_bot_id): <p>The identifier of the bot associated with this slot type.</p>
    ///   - [`bot_version(impl Into<String>)`](crate::client::fluent_builders::CreateSlotType::bot_version) / [`set_bot_version(Option<String>)`](crate::client::fluent_builders::CreateSlotType::set_bot_version): <p>The identifier of the bot version associated with this slot type.</p>
    ///   - [`locale_id(impl Into<String>)`](crate::client::fluent_builders::CreateSlotType::locale_id) / [`set_locale_id(Option<String>)`](crate::client::fluent_builders::CreateSlotType::set_locale_id): <p>The identifier of the language and locale that the slot type will be used in. The string must match one of the supported locales. All of the bots, intents, and slots used by the slot type must have the same locale. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.</p>
    ///   - [`external_source_setting(ExternalSourceSetting)`](crate::client::fluent_builders::CreateSlotType::external_source_setting) / [`set_external_source_setting(Option<ExternalSourceSetting>)`](crate::client::fluent_builders::CreateSlotType::set_external_source_setting): <p>Sets the type of external information used to create the slot type.</p>
    ///   - [`composite_slot_type_setting(CompositeSlotTypeSetting)`](crate::client::fluent_builders::CreateSlotType::composite_slot_type_setting) / [`set_composite_slot_type_setting(Option<CompositeSlotTypeSetting>)`](crate::client::fluent_builders::CreateSlotType::set_composite_slot_type_setting): <p>Specifications for a composite slot type.</p>
    /// - On success, responds with [`CreateSlotTypeOutput`](crate::output::CreateSlotTypeOutput) with field(s):
    ///   - [`slot_type_id(Option<String>)`](crate::output::CreateSlotTypeOutput::slot_type_id): <p>The unique identifier assigned to the slot type. Use this to identify the slot type in the <code>UpdateSlotType</code> and <code>DeleteSlotType</code> operations.</p>
    ///   - [`slot_type_name(Option<String>)`](crate::output::CreateSlotTypeOutput::slot_type_name): <p>The name specified for the slot type.</p>
    ///   - [`description(Option<String>)`](crate::output::CreateSlotTypeOutput::description): <p>The description specified for the slot type.</p>
    ///   - [`slot_type_values(Option<Vec<SlotTypeValue>>)`](crate::output::CreateSlotTypeOutput::slot_type_values): <p>The list of values that the slot type can assume.</p>
    ///   - [`value_selection_setting(Option<SlotValueSelectionSetting>)`](crate::output::CreateSlotTypeOutput::value_selection_setting): <p>The strategy that Amazon Lex uses to select a value from the list of possible values.</p>
    ///   - [`parent_slot_type_signature(Option<String>)`](crate::output::CreateSlotTypeOutput::parent_slot_type_signature): <p>The signature of the base slot type specified for the slot type.</p>
    ///   - [`bot_id(Option<String>)`](crate::output::CreateSlotTypeOutput::bot_id): <p>The identifier for the bot associated with the slot type.</p>
    ///   - [`bot_version(Option<String>)`](crate::output::CreateSlotTypeOutput::bot_version): <p>The version of the bot associated with the slot type.</p>
    ///   - [`locale_id(Option<String>)`](crate::output::CreateSlotTypeOutput::locale_id): <p>The specified language and local specified for the slot type.</p>
    ///   - [`creation_date_time(Option<DateTime>)`](crate::output::CreateSlotTypeOutput::creation_date_time): <p>A timestamp of the date and time that the slot type was created.</p>
    ///   - [`external_source_setting(Option<ExternalSourceSetting>)`](crate::output::CreateSlotTypeOutput::external_source_setting): <p>The type of external information used to create the slot type.</p>
    ///   - [`composite_slot_type_setting(Option<CompositeSlotTypeSetting>)`](crate::output::CreateSlotTypeOutput::composite_slot_type_setting): <p>Specifications for a composite slot type.</p>
    /// - On failure, responds with [`SdkError<CreateSlotTypeError>`](crate::error::CreateSlotTypeError)
    pub fn create_slot_type(&self) -> crate::client::fluent_builders::CreateSlotType {
        crate::client::fluent_builders::CreateSlotType::new(self.handle.clone())
    }
}
