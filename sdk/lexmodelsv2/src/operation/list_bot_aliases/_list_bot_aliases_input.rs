// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListBotAliasesInput {
    /// <p>The identifier of the bot to list aliases for.</p>
    #[doc(hidden)]
    pub bot_id: std::option::Option<std::string::String>,
    /// <p>The maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>If the response from the <code>ListBotAliases</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token in the <code>nextToken</code> parameter to return the next page of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListBotAliasesInput {
    /// <p>The identifier of the bot to list aliases for.</p>
    pub fn bot_id(&self) -> std::option::Option<&str> {
        self.bot_id.as_deref()
    }
    /// <p>The maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>If the response from the <code>ListBotAliases</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token in the <code>nextToken</code> parameter to return the next page of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListBotAliasesInput {
    /// Creates a new builder-style object to manufacture [`ListBotAliasesInput`](crate::operation::list_bot_aliases::ListBotAliasesInput).
    pub fn builder() -> crate::operation::list_bot_aliases::builders::ListBotAliasesInputBuilder {
        crate::operation::list_bot_aliases::builders::ListBotAliasesInputBuilder::default()
    }
}

/// A builder for [`ListBotAliasesInput`](crate::operation::list_bot_aliases::ListBotAliasesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListBotAliasesInputBuilder {
    pub(crate) bot_id: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListBotAliasesInputBuilder {
    /// <p>The identifier of the bot to list aliases for.</p>
    pub fn bot_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.bot_id = Some(input.into());
        self
    }
    /// <p>The identifier of the bot to list aliases for.</p>
    pub fn set_bot_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bot_id = input;
        self
    }
    /// <p>The maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>If the response from the <code>ListBotAliases</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token in the <code>nextToken</code> parameter to return the next page of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>If the response from the <code>ListBotAliases</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token in the <code>nextToken</code> parameter to return the next page of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListBotAliasesInput`](crate::operation::list_bot_aliases::ListBotAliasesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_bot_aliases::ListBotAliasesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::list_bot_aliases::ListBotAliasesInput {
            bot_id: self.bot_id,
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
