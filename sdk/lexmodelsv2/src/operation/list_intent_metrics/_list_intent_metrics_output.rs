// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListIntentMetricsOutput {
    /// <p>The identifier for the bot for which you retrieved intent metrics.</p>
    pub bot_id: ::std::option::Option<::std::string::String>,
    /// <p>The results for the intent metrics.</p>
    pub results: ::std::option::Option<::std::vec::Vec<crate::types::AnalyticsIntentResult>>,
    /// <p>If the response from the ListIntentMetrics operation contains more results than specified in the maxResults parameter, a token is returned in the response.</p>
    /// <p>Use the returned token in the nextToken parameter of a ListIntentMetrics request to return the next page of results. For a complete set of results, call the ListIntentMetrics operation until the nextToken returned in the response is null.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListIntentMetricsOutput {
    /// <p>The identifier for the bot for which you retrieved intent metrics.</p>
    pub fn bot_id(&self) -> ::std::option::Option<&str> {
        self.bot_id.as_deref()
    }
    /// <p>The results for the intent metrics.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.results.is_none()`.
    pub fn results(&self) -> &[crate::types::AnalyticsIntentResult] {
        self.results.as_deref().unwrap_or_default()
    }
    /// <p>If the response from the ListIntentMetrics operation contains more results than specified in the maxResults parameter, a token is returned in the response.</p>
    /// <p>Use the returned token in the nextToken parameter of a ListIntentMetrics request to return the next page of results. For a complete set of results, call the ListIntentMetrics operation until the nextToken returned in the response is null.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for ListIntentMetricsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListIntentMetricsOutput {
    /// Creates a new builder-style object to manufacture [`ListIntentMetricsOutput`](crate::operation::list_intent_metrics::ListIntentMetricsOutput).
    pub fn builder() -> crate::operation::list_intent_metrics::builders::ListIntentMetricsOutputBuilder {
        crate::operation::list_intent_metrics::builders::ListIntentMetricsOutputBuilder::default()
    }
}

/// A builder for [`ListIntentMetricsOutput`](crate::operation::list_intent_metrics::ListIntentMetricsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListIntentMetricsOutputBuilder {
    pub(crate) bot_id: ::std::option::Option<::std::string::String>,
    pub(crate) results: ::std::option::Option<::std::vec::Vec<crate::types::AnalyticsIntentResult>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListIntentMetricsOutputBuilder {
    /// <p>The identifier for the bot for which you retrieved intent metrics.</p>
    pub fn bot_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bot_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the bot for which you retrieved intent metrics.</p>
    pub fn set_bot_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bot_id = input;
        self
    }
    /// <p>The identifier for the bot for which you retrieved intent metrics.</p>
    pub fn get_bot_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.bot_id
    }
    /// Appends an item to `results`.
    ///
    /// To override the contents of this collection use [`set_results`](Self::set_results).
    ///
    /// <p>The results for the intent metrics.</p>
    pub fn results(mut self, input: crate::types::AnalyticsIntentResult) -> Self {
        let mut v = self.results.unwrap_or_default();
        v.push(input);
        self.results = ::std::option::Option::Some(v);
        self
    }
    /// <p>The results for the intent metrics.</p>
    pub fn set_results(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AnalyticsIntentResult>>) -> Self {
        self.results = input;
        self
    }
    /// <p>The results for the intent metrics.</p>
    pub fn get_results(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AnalyticsIntentResult>> {
        &self.results
    }
    /// <p>If the response from the ListIntentMetrics operation contains more results than specified in the maxResults parameter, a token is returned in the response.</p>
    /// <p>Use the returned token in the nextToken parameter of a ListIntentMetrics request to return the next page of results. For a complete set of results, call the ListIntentMetrics operation until the nextToken returned in the response is null.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If the response from the ListIntentMetrics operation contains more results than specified in the maxResults parameter, a token is returned in the response.</p>
    /// <p>Use the returned token in the nextToken parameter of a ListIntentMetrics request to return the next page of results. For a complete set of results, call the ListIntentMetrics operation until the nextToken returned in the response is null.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>If the response from the ListIntentMetrics operation contains more results than specified in the maxResults parameter, a token is returned in the response.</p>
    /// <p>Use the returned token in the nextToken parameter of a ListIntentMetrics request to return the next page of results. For a complete set of results, call the ListIntentMetrics operation until the nextToken returned in the response is null.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListIntentMetricsOutput`](crate::operation::list_intent_metrics::ListIntentMetricsOutput).
    pub fn build(self) -> crate::operation::list_intent_metrics::ListIntentMetricsOutput {
        crate::operation::list_intent_metrics::ListIntentMetricsOutput {
            bot_id: self.bot_id,
            results: self.results,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
