// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListCustomVocabularyItemsInput {
    /// <p>The unique identifier of the bot to the list custom vocabulary request.</p>
    #[doc(hidden)]
    pub bot_id: std::option::Option<std::string::String>,
    /// <p>The bot version of the bot to the list custom vocabulary request.</p>
    #[doc(hidden)]
    pub bot_version: std::option::Option<std::string::String>,
    /// <p>The locale identifier of the bot to the list custom vocabulary request.</p>
    #[doc(hidden)]
    pub locale_id: std::option::Option<std::string::String>,
    /// <p>The maximum results to the list custom vocabulary request.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>The nextToken identifier to the list custom vocabulary request.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListCustomVocabularyItemsInput {
    /// <p>The unique identifier of the bot to the list custom vocabulary request.</p>
    pub fn bot_id(&self) -> std::option::Option<&str> {
        self.bot_id.as_deref()
    }
    /// <p>The bot version of the bot to the list custom vocabulary request.</p>
    pub fn bot_version(&self) -> std::option::Option<&str> {
        self.bot_version.as_deref()
    }
    /// <p>The locale identifier of the bot to the list custom vocabulary request.</p>
    pub fn locale_id(&self) -> std::option::Option<&str> {
        self.locale_id.as_deref()
    }
    /// <p>The maximum results to the list custom vocabulary request.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>The nextToken identifier to the list custom vocabulary request.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListCustomVocabularyItemsInput {
    /// Creates a new builder-style object to manufacture [`ListCustomVocabularyItemsInput`](crate::operation::list_custom_vocabulary_items::ListCustomVocabularyItemsInput).
    pub fn builder() -> crate::operation::list_custom_vocabulary_items::builders::ListCustomVocabularyItemsInputBuilder{
        crate::operation::list_custom_vocabulary_items::builders::ListCustomVocabularyItemsInputBuilder::default()
    }
}

/// A builder for [`ListCustomVocabularyItemsInput`](crate::operation::list_custom_vocabulary_items::ListCustomVocabularyItemsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListCustomVocabularyItemsInputBuilder {
    pub(crate) bot_id: std::option::Option<std::string::String>,
    pub(crate) bot_version: std::option::Option<std::string::String>,
    pub(crate) locale_id: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListCustomVocabularyItemsInputBuilder {
    /// <p>The unique identifier of the bot to the list custom vocabulary request.</p>
    pub fn bot_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.bot_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the bot to the list custom vocabulary request.</p>
    pub fn set_bot_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bot_id = input;
        self
    }
    /// <p>The bot version of the bot to the list custom vocabulary request.</p>
    pub fn bot_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.bot_version = Some(input.into());
        self
    }
    /// <p>The bot version of the bot to the list custom vocabulary request.</p>
    pub fn set_bot_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bot_version = input;
        self
    }
    /// <p>The locale identifier of the bot to the list custom vocabulary request.</p>
    pub fn locale_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.locale_id = Some(input.into());
        self
    }
    /// <p>The locale identifier of the bot to the list custom vocabulary request.</p>
    pub fn set_locale_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.locale_id = input;
        self
    }
    /// <p>The maximum results to the list custom vocabulary request.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum results to the list custom vocabulary request.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The nextToken identifier to the list custom vocabulary request.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The nextToken identifier to the list custom vocabulary request.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListCustomVocabularyItemsInput`](crate::operation::list_custom_vocabulary_items::ListCustomVocabularyItemsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_custom_vocabulary_items::ListCustomVocabularyItemsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_custom_vocabulary_items::ListCustomVocabularyItemsInput {
                bot_id: self.bot_id,
                bot_version: self.bot_version,
                locale_id: self.locale_id,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
