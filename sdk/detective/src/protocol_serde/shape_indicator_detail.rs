// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_indicator_detail<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::IndicatorDetail>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::IndicatorDetailBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "TTPsObservedDetail" => {
                            builder =
                                builder.set_ttps_observed_detail(crate::protocol_serde::shape_ttps_observed_detail::de_ttps_observed_detail(tokens)?);
                        }
                        "ImpossibleTravelDetail" => {
                            builder = builder.set_impossible_travel_detail(
                                crate::protocol_serde::shape_impossible_travel_detail::de_impossible_travel_detail(tokens)?,
                            );
                        }
                        "FlaggedIpAddressDetail" => {
                            builder = builder.set_flagged_ip_address_detail(
                                crate::protocol_serde::shape_flagged_ip_address_detail::de_flagged_ip_address_detail(tokens)?,
                            );
                        }
                        "NewGeolocationDetail" => {
                            builder = builder
                                .set_new_geolocation_detail(crate::protocol_serde::shape_new_geolocation_detail::de_new_geolocation_detail(tokens)?);
                        }
                        "NewAsoDetail" => {
                            builder = builder.set_new_aso_detail(crate::protocol_serde::shape_new_aso_detail::de_new_aso_detail(tokens)?);
                        }
                        "NewUserAgentDetail" => {
                            builder = builder
                                .set_new_user_agent_detail(crate::protocol_serde::shape_new_user_agent_detail::de_new_user_agent_detail(tokens)?);
                        }
                        "RelatedFindingDetail" => {
                            builder = builder
                                .set_related_finding_detail(crate::protocol_serde::shape_related_finding_detail::de_related_finding_detail(tokens)?);
                        }
                        "RelatedFindingGroupDetail" => {
                            builder = builder.set_related_finding_group_detail(
                                crate::protocol_serde::shape_related_finding_group_detail::de_related_finding_group_detail(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
