// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details on when data collection began for a source package.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TimestampForCollection {
    /// <p>The data and time when data collection began for a source package. The value is an ISO8601 formatted string. For example, <code>2021-08-18T16:35:56.284Z</code>.</p>
    #[doc(hidden)]
    pub timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl TimestampForCollection {
    /// <p>The data and time when data collection began for a source package. The value is an ISO8601 formatted string. For example, <code>2021-08-18T16:35:56.284Z</code>.</p>
    pub fn timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.timestamp.as_ref()
    }
}
impl TimestampForCollection {
    /// Creates a new builder-style object to manufacture [`TimestampForCollection`](crate::types::TimestampForCollection).
    pub fn builder() -> crate::types::builders::TimestampForCollectionBuilder {
        crate::types::builders::TimestampForCollectionBuilder::default()
    }
}

/// A builder for [`TimestampForCollection`](crate::types::TimestampForCollection).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TimestampForCollectionBuilder {
    pub(crate) timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl TimestampForCollectionBuilder {
    /// <p>The data and time when data collection began for a source package. The value is an ISO8601 formatted string. For example, <code>2021-08-18T16:35:56.284Z</code>.</p>
    pub fn timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.timestamp = Some(input);
        self
    }
    /// <p>The data and time when data collection began for a source package. The value is an ISO8601 formatted string. For example, <code>2021-08-18T16:35:56.284Z</code>.</p>
    pub fn set_timestamp(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.timestamp = input;
        self
    }
    /// Consumes the builder and constructs a [`TimestampForCollection`](crate::types::TimestampForCollection).
    pub fn build(self) -> crate::types::TimestampForCollection {
        crate::types::TimestampForCollection {
            timestamp: self.timestamp,
        }
    }
}
