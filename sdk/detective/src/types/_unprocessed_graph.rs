// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Behavior graphs that could not be processed in the request.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UnprocessedGraph {
    /// <p>The ARN of the organization behavior graph.</p>
    #[doc(hidden)]
    pub graph_arn: std::option::Option<std::string::String>,
    /// <p>The reason data source package information could not be processed for a behavior graph.</p>
    #[doc(hidden)]
    pub reason: std::option::Option<std::string::String>,
}
impl UnprocessedGraph {
    /// <p>The ARN of the organization behavior graph.</p>
    pub fn graph_arn(&self) -> std::option::Option<&str> {
        self.graph_arn.as_deref()
    }
    /// <p>The reason data source package information could not be processed for a behavior graph.</p>
    pub fn reason(&self) -> std::option::Option<&str> {
        self.reason.as_deref()
    }
}
impl UnprocessedGraph {
    /// Creates a new builder-style object to manufacture [`UnprocessedGraph`](crate::types::UnprocessedGraph).
    pub fn builder() -> crate::types::builders::UnprocessedGraphBuilder {
        crate::types::builders::UnprocessedGraphBuilder::default()
    }
}

/// A builder for [`UnprocessedGraph`](crate::types::UnprocessedGraph).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UnprocessedGraphBuilder {
    pub(crate) graph_arn: std::option::Option<std::string::String>,
    pub(crate) reason: std::option::Option<std::string::String>,
}
impl UnprocessedGraphBuilder {
    /// <p>The ARN of the organization behavior graph.</p>
    pub fn graph_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.graph_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the organization behavior graph.</p>
    pub fn set_graph_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.graph_arn = input;
        self
    }
    /// <p>The reason data source package information could not be processed for a behavior graph.</p>
    pub fn reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.reason = Some(input.into());
        self
    }
    /// <p>The reason data source package information could not be processed for a behavior graph.</p>
    pub fn set_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.reason = input;
        self
    }
    /// Consumes the builder and constructs a [`UnprocessedGraph`](crate::types::UnprocessedGraph).
    pub fn build(self) -> crate::types::UnprocessedGraph {
        crate::types::UnprocessedGraph {
            graph_arn: self.graph_arn,
            reason: self.reason,
        }
    }
}
