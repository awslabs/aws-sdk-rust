// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_accept_invitation_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AcceptInvitationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_1) = &input.graph_arn {
        object.key("GraphArn").string(var_1.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_graph_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateGraphInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_2) = &input.tags {
        let mut object_3 = object.key("Tags").start_object();
        for (key_4, value_5) in var_2 {
            {
                object_3.key(key_4).string(value_5.as_str());
            }
        }
        object_3.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_members_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateMembersInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_6) = &input.accounts {
        let mut array_7 = object.key("Accounts").start_array();
        for item_8 in var_6 {
            {
                let mut object_9 = array_7.value().start_object();
                crate::json_ser::serialize_structure_crate_model_account(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    if input.disable_email_notification {
        object
            .key("DisableEmailNotification")
            .boolean(input.disable_email_notification);
    }
    if let Some(var_10) = &input.graph_arn {
        object.key("GraphArn").string(var_10.as_str());
    }
    if let Some(var_11) = &input.message {
        object.key("Message").string(var_11.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_delete_graph_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteGraphInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_12) = &input.graph_arn {
        object.key("GraphArn").string(var_12.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_delete_members_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteMembersInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_13) = &input.account_ids {
        let mut array_14 = object.key("AccountIds").start_array();
        for item_15 in var_13 {
            {
                array_14.value().string(item_15.as_str());
            }
        }
        array_14.finish();
    }
    if let Some(var_16) = &input.graph_arn {
        object.key("GraphArn").string(var_16.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_describe_organization_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeOrganizationConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_17) = &input.graph_arn {
        object.key("GraphArn").string(var_17.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_disassociate_membership_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateMembershipInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_18) = &input.graph_arn {
        object.key("GraphArn").string(var_18.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_enable_organization_admin_account_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::EnableOrganizationAdminAccountInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_19) = &input.account_id {
        object.key("AccountId").string(var_19.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_members_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetMembersInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_20) = &input.account_ids {
        let mut array_21 = object.key("AccountIds").start_array();
        for item_22 in var_20 {
            {
                array_21.value().string(item_22.as_str());
            }
        }
        array_21.finish();
    }
    if let Some(var_23) = &input.graph_arn {
        object.key("GraphArn").string(var_23.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_graphs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListGraphsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_24) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_24).into()),
        );
    }
    if let Some(var_25) = &input.next_token {
        object.key("NextToken").string(var_25.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_invitations_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListInvitationsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_26) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_26).into()),
        );
    }
    if let Some(var_27) = &input.next_token {
        object.key("NextToken").string(var_27.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_members_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListMembersInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_28) = &input.graph_arn {
        object.key("GraphArn").string(var_28.as_str());
    }
    if let Some(var_29) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_29).into()),
        );
    }
    if let Some(var_30) = &input.next_token {
        object.key("NextToken").string(var_30.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_organization_admin_accounts_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListOrganizationAdminAccountsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_31) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_31).into()),
        );
    }
    if let Some(var_32) = &input.next_token {
        object.key("NextToken").string(var_32.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_reject_invitation_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RejectInvitationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_33) = &input.graph_arn {
        object.key("GraphArn").string(var_33.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_start_monitoring_member_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartMonitoringMemberInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_34) = &input.account_id {
        object.key("AccountId").string(var_34.as_str());
    }
    if let Some(var_35) = &input.graph_arn {
        object.key("GraphArn").string(var_35.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_36) = &input.tags {
        let mut object_37 = object.key("Tags").start_object();
        for (key_38, value_39) in var_36 {
            {
                object_37.key(key_38).string(value_39.as_str());
            }
        }
        object_37.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_organization_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateOrganizationConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if input.auto_enable {
        object.key("AutoEnable").boolean(input.auto_enable);
    }
    if let Some(var_40) = &input.graph_arn {
        object.key("GraphArn").string(var_40.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_account(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Account,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_41) = &input.account_id {
        object.key("AccountId").string(var_41.as_str());
    }
    if let Some(var_42) = &input.email_address {
        object.key("EmailAddress").string(var_42.as_str());
    }
    Ok(())
}
