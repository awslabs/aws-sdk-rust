// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateGraphOutput {
    /// <p>The ARN of the new behavior graph.</p>
    #[doc(hidden)]
    pub graph_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateGraphOutput {
    /// <p>The ARN of the new behavior graph.</p>
    pub fn graph_arn(&self) -> std::option::Option<&str> {
        self.graph_arn.as_deref()
    }
}
impl aws_http::request_id::RequestId for CreateGraphOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateGraphOutput {
    /// Creates a new builder-style object to manufacture [`CreateGraphOutput`](crate::operation::create_graph::CreateGraphOutput).
    pub fn builder() -> crate::operation::create_graph::builders::CreateGraphOutputBuilder {
        crate::operation::create_graph::builders::CreateGraphOutputBuilder::default()
    }
}

/// A builder for [`CreateGraphOutput`](crate::operation::create_graph::CreateGraphOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateGraphOutputBuilder {
    pub(crate) graph_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateGraphOutputBuilder {
    /// <p>The ARN of the new behavior graph.</p>
    pub fn graph_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.graph_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the new behavior graph.</p>
    pub fn set_graph_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.graph_arn = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateGraphOutput`](crate::operation::create_graph::CreateGraphOutput).
    pub fn build(self) -> crate::operation::create_graph::CreateGraphOutput {
        crate::operation::create_graph::CreateGraphOutput {
            graph_arn: self.graph_arn,
            _request_id: self._request_id,
        }
    }
}
