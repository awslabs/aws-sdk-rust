// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListMembersInput {
    /// <p>The ARN of the behavior graph for which to retrieve the list of member accounts.</p>
    pub graph_arn: ::std::option::Option<::std::string::String>,
    /// <p>For requests to retrieve the next page of member account results, the pagination token that was returned with the previous page of results. The initial request does not include a pagination token.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of member accounts to include in the response. The total must be less than the overall limit on the number of results to return, which is currently 200.</p>
    pub max_results: ::std::option::Option<i32>,
}
impl ListMembersInput {
    /// <p>The ARN of the behavior graph for which to retrieve the list of member accounts.</p>
    pub fn graph_arn(&self) -> ::std::option::Option<&str> {
        self.graph_arn.as_deref()
    }
    /// <p>For requests to retrieve the next page of member account results, the pagination token that was returned with the previous page of results. The initial request does not include a pagination token.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of member accounts to include in the response. The total must be less than the overall limit on the number of results to return, which is currently 200.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
}
impl ListMembersInput {
    /// Creates a new builder-style object to manufacture [`ListMembersInput`](crate::operation::list_members::ListMembersInput).
    pub fn builder() -> crate::operation::list_members::builders::ListMembersInputBuilder {
        crate::operation::list_members::builders::ListMembersInputBuilder::default()
    }
}

/// A builder for [`ListMembersInput`](crate::operation::list_members::ListMembersInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListMembersInputBuilder {
    pub(crate) graph_arn: ::std::option::Option<::std::string::String>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
}
impl ListMembersInputBuilder {
    /// <p>The ARN of the behavior graph for which to retrieve the list of member accounts.</p>
    /// This field is required.
    pub fn graph_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.graph_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the behavior graph for which to retrieve the list of member accounts.</p>
    pub fn set_graph_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.graph_arn = input;
        self
    }
    /// <p>The ARN of the behavior graph for which to retrieve the list of member accounts.</p>
    pub fn get_graph_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.graph_arn
    }
    /// <p>For requests to retrieve the next page of member account results, the pagination token that was returned with the previous page of results. The initial request does not include a pagination token.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>For requests to retrieve the next page of member account results, the pagination token that was returned with the previous page of results. The initial request does not include a pagination token.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>For requests to retrieve the next page of member account results, the pagination token that was returned with the previous page of results. The initial request does not include a pagination token.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of member accounts to include in the response. The total must be less than the overall limit on the number of results to return, which is currently 200.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of member accounts to include in the response. The total must be less than the overall limit on the number of results to return, which is currently 200.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of member accounts to include in the response. The total must be less than the overall limit on the number of results to return, which is currently 200.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Consumes the builder and constructs a [`ListMembersInput`](crate::operation::list_members::ListMembersInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::list_members::ListMembersInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::list_members::ListMembersInput {
            graph_arn: self.graph_arn,
            next_token: self.next_token,
            max_results: self.max_results,
        })
    }
}
