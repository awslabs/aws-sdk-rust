// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchGetMembershipDatasourcesOutput {
    /// <p>Details on the data source package history for an member of the behavior graph.</p>
    #[doc(hidden)]
    pub membership_datasources:
        std::option::Option<std::vec::Vec<crate::types::MembershipDatasources>>,
    /// <p>Graphs that data source package information could not be retrieved for.</p>
    #[doc(hidden)]
    pub unprocessed_graphs: std::option::Option<std::vec::Vec<crate::types::UnprocessedGraph>>,
    _request_id: Option<String>,
}
impl BatchGetMembershipDatasourcesOutput {
    /// <p>Details on the data source package history for an member of the behavior graph.</p>
    pub fn membership_datasources(
        &self,
    ) -> std::option::Option<&[crate::types::MembershipDatasources]> {
        self.membership_datasources.as_deref()
    }
    /// <p>Graphs that data source package information could not be retrieved for.</p>
    pub fn unprocessed_graphs(&self) -> std::option::Option<&[crate::types::UnprocessedGraph]> {
        self.unprocessed_graphs.as_deref()
    }
}
impl aws_http::request_id::RequestId for BatchGetMembershipDatasourcesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchGetMembershipDatasourcesOutput {
    /// Creates a new builder-style object to manufacture [`BatchGetMembershipDatasourcesOutput`](crate::operation::batch_get_membership_datasources::BatchGetMembershipDatasourcesOutput).
    pub fn builder() -> crate::operation::batch_get_membership_datasources::builders::BatchGetMembershipDatasourcesOutputBuilder{
        crate::operation::batch_get_membership_datasources::builders::BatchGetMembershipDatasourcesOutputBuilder::default()
    }
}

/// A builder for [`BatchGetMembershipDatasourcesOutput`](crate::operation::batch_get_membership_datasources::BatchGetMembershipDatasourcesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchGetMembershipDatasourcesOutputBuilder {
    pub(crate) membership_datasources:
        std::option::Option<std::vec::Vec<crate::types::MembershipDatasources>>,
    pub(crate) unprocessed_graphs:
        std::option::Option<std::vec::Vec<crate::types::UnprocessedGraph>>,
    _request_id: Option<String>,
}
impl BatchGetMembershipDatasourcesOutputBuilder {
    /// Appends an item to `membership_datasources`.
    ///
    /// To override the contents of this collection use [`set_membership_datasources`](Self::set_membership_datasources).
    ///
    /// <p>Details on the data source package history for an member of the behavior graph.</p>
    pub fn membership_datasources(mut self, input: crate::types::MembershipDatasources) -> Self {
        let mut v = self.membership_datasources.unwrap_or_default();
        v.push(input);
        self.membership_datasources = Some(v);
        self
    }
    /// <p>Details on the data source package history for an member of the behavior graph.</p>
    pub fn set_membership_datasources(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::MembershipDatasources>>,
    ) -> Self {
        self.membership_datasources = input;
        self
    }
    /// Appends an item to `unprocessed_graphs`.
    ///
    /// To override the contents of this collection use [`set_unprocessed_graphs`](Self::set_unprocessed_graphs).
    ///
    /// <p>Graphs that data source package information could not be retrieved for.</p>
    pub fn unprocessed_graphs(mut self, input: crate::types::UnprocessedGraph) -> Self {
        let mut v = self.unprocessed_graphs.unwrap_or_default();
        v.push(input);
        self.unprocessed_graphs = Some(v);
        self
    }
    /// <p>Graphs that data source package information could not be retrieved for.</p>
    pub fn set_unprocessed_graphs(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::UnprocessedGraph>>,
    ) -> Self {
        self.unprocessed_graphs = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetMembershipDatasourcesOutput`](crate::operation::batch_get_membership_datasources::BatchGetMembershipDatasourcesOutput).
    pub fn build(
        self,
    ) -> crate::operation::batch_get_membership_datasources::BatchGetMembershipDatasourcesOutput
    {
        crate::operation::batch_get_membership_datasources::BatchGetMembershipDatasourcesOutput {
            membership_datasources: self.membership_datasources,
            unprocessed_graphs: self.unprocessed_graphs,
            _request_id: self._request_id,
        }
    }
}
