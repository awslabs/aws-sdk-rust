// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMembers`](crate::operation::create_members::builders::CreateMembersFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`graph_arn(impl Into<String>)`](crate::operation::create_members::builders::CreateMembersFluentBuilder::graph_arn) / [`set_graph_arn(Option<String>)`](crate::operation::create_members::builders::CreateMembersFluentBuilder::set_graph_arn): <p>The ARN of the behavior graph.</p>
    ///   - [`message(impl Into<String>)`](crate::operation::create_members::builders::CreateMembersFluentBuilder::message) / [`set_message(Option<String>)`](crate::operation::create_members::builders::CreateMembersFluentBuilder::set_message): <p>Customized message text to include in the invitation email message to the invited member accounts.</p>
    ///   - [`disable_email_notification(bool)`](crate::operation::create_members::builders::CreateMembersFluentBuilder::disable_email_notification) / [`set_disable_email_notification(bool)`](crate::operation::create_members::builders::CreateMembersFluentBuilder::set_disable_email_notification): <p>if set to <code>true</code>, then the invited accounts do not receive email notifications. By default, this is set to <code>false</code>, and the invited accounts receive email notifications.</p>  <p>Organization accounts in the organization behavior graph do not receive email notifications.</p>
    ///   - [`accounts(Vec<Account>)`](crate::operation::create_members::builders::CreateMembersFluentBuilder::accounts) / [`set_accounts(Option<Vec<Account>>)`](crate::operation::create_members::builders::CreateMembersFluentBuilder::set_accounts): <p>The list of Amazon Web Services accounts to invite or to enable. You can invite or enable up to 50 accounts at a time. For each invited account, the account list contains the account identifier and the Amazon Web Services account root user email address. For organization accounts in the organization behavior graph, the email address is not required.</p>
    /// - On success, responds with [`CreateMembersOutput`](crate::operation::create_members::CreateMembersOutput) with field(s):
    ///   - [`members(Option<Vec<MemberDetail>>)`](crate::operation::create_members::CreateMembersOutput::members): <p>The set of member account invitation or enablement requests that Detective was able to process. This includes accounts that are being verified, that failed verification, and that passed verification and are being sent an invitation or are being enabled.</p>
    ///   - [`unprocessed_accounts(Option<Vec<UnprocessedAccount>>)`](crate::operation::create_members::CreateMembersOutput::unprocessed_accounts): <p>The list of accounts for which Detective was unable to process the invitation or enablement request. For each account, the list provides the reason why the request could not be processed. The list includes accounts that are already member accounts in the behavior graph.</p>
    /// - On failure, responds with [`SdkError<CreateMembersError>`](crate::operation::create_members::CreateMembersError)
    pub fn create_members(
        &self,
    ) -> crate::operation::create_members::builders::CreateMembersFluentBuilder {
        crate::operation::create_members::builders::CreateMembersFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
