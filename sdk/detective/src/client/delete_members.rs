// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteMembers`](crate::operation::delete_members::builders::DeleteMembersFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`graph_arn(impl Into<String>)`](crate::operation::delete_members::builders::DeleteMembersFluentBuilder::graph_arn) / [`set_graph_arn(Option<String>)`](crate::operation::delete_members::builders::DeleteMembersFluentBuilder::set_graph_arn): <p>The ARN of the behavior graph to remove members from.</p>
    ///   - [`account_ids(Vec<String>)`](crate::operation::delete_members::builders::DeleteMembersFluentBuilder::account_ids) / [`set_account_ids(Option<Vec<String>>)`](crate::operation::delete_members::builders::DeleteMembersFluentBuilder::set_account_ids): <p>The list of Amazon Web Services account identifiers for the member accounts to remove from the behavior graph. You can remove up to 50 member accounts at a time.</p>
    /// - On success, responds with [`DeleteMembersOutput`](crate::operation::delete_members::DeleteMembersOutput) with field(s):
    ///   - [`account_ids(Option<Vec<String>>)`](crate::operation::delete_members::DeleteMembersOutput::account_ids): <p>The list of Amazon Web Services account identifiers for the member accounts that Detective successfully removed from the behavior graph.</p>
    ///   - [`unprocessed_accounts(Option<Vec<UnprocessedAccount>>)`](crate::operation::delete_members::DeleteMembersOutput::unprocessed_accounts): <p>The list of member accounts that Detective was not able to remove from the behavior graph. For each member account, provides the reason that the deletion could not be processed.</p>
    /// - On failure, responds with [`SdkError<DeleteMembersError>`](crate::operation::delete_members::DeleteMembersError)
    pub fn delete_members(
        &self,
    ) -> crate::operation::delete_members::builders::DeleteMembersFluentBuilder {
        crate::operation::delete_members::builders::DeleteMembersFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
