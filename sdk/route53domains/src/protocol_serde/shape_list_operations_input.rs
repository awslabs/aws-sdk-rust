// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_operations_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::list_operations::ListOperationsInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.submitted_since {
        object
            .key("SubmittedSince")
            .date_time(var_1, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_2) = &input.marker {
        object.key("Marker").string(var_2.as_str());
    }
    if let Some(var_3) = &input.max_items {
        object.key("MaxItems").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.status {
        let mut array_5 = object.key("Status").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.r#type {
        let mut array_8 = object.key("Type").start_array();
        for item_9 in var_7 {
            {
                array_8.value().string(item_9.as_str());
            }
        }
        array_8.finish();
    }
    if let Some(var_10) = &input.sort_by {
        object.key("SortBy").string(var_10.as_str());
    }
    if let Some(var_11) = &input.sort_order {
        object.key("SortOrder").string(var_11.as_str());
    }
    Ok(())
}
