// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The CheckDomainTransferability response includes the following elements.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CheckDomainTransferabilityOutput {
    /// <p>A complex type that contains information about whether the specified domain can be transferred to Route 53.</p>
    #[doc(hidden)]
    pub transferability: std::option::Option<crate::types::DomainTransferability>,
    _request_id: Option<String>,
}
impl CheckDomainTransferabilityOutput {
    /// <p>A complex type that contains information about whether the specified domain can be transferred to Route 53.</p>
    pub fn transferability(&self) -> std::option::Option<&crate::types::DomainTransferability> {
        self.transferability.as_ref()
    }
}
impl aws_http::request_id::RequestId for CheckDomainTransferabilityOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CheckDomainTransferabilityOutput {
    /// Creates a new builder-style object to manufacture [`CheckDomainTransferabilityOutput`](crate::operation::check_domain_transferability::CheckDomainTransferabilityOutput).
    pub fn builder() -> crate::operation::check_domain_transferability::builders::CheckDomainTransferabilityOutputBuilder{
        crate::operation::check_domain_transferability::builders::CheckDomainTransferabilityOutputBuilder::default()
    }
}

/// A builder for [`CheckDomainTransferabilityOutput`](crate::operation::check_domain_transferability::CheckDomainTransferabilityOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CheckDomainTransferabilityOutputBuilder {
    pub(crate) transferability: std::option::Option<crate::types::DomainTransferability>,
    _request_id: Option<String>,
}
impl CheckDomainTransferabilityOutputBuilder {
    /// <p>A complex type that contains information about whether the specified domain can be transferred to Route 53.</p>
    pub fn transferability(mut self, input: crate::types::DomainTransferability) -> Self {
        self.transferability = Some(input);
        self
    }
    /// <p>A complex type that contains information about whether the specified domain can be transferred to Route 53.</p>
    pub fn set_transferability(
        mut self,
        input: std::option::Option<crate::types::DomainTransferability>,
    ) -> Self {
        self.transferability = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CheckDomainTransferabilityOutput`](crate::operation::check_domain_transferability::CheckDomainTransferabilityOutput).
    pub fn build(
        self,
    ) -> crate::operation::check_domain_transferability::CheckDomainTransferabilityOutput {
        crate::operation::check_domain_transferability::CheckDomainTransferabilityOutput {
            transferability: self.transferability,
            _request_id: self._request_id,
        }
    }
}
