// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateDelegationSignerToDomainInput {
    /// <p>The name of the domain.</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
    /// <p>The information about a key, including the algorithm, public key-value, and flags.</p>
    #[doc(hidden)]
    pub signing_attributes: std::option::Option<crate::types::DnssecSigningAttributes>,
}
impl AssociateDelegationSignerToDomainInput {
    /// <p>The name of the domain.</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
    /// <p>The information about a key, including the algorithm, public key-value, and flags.</p>
    pub fn signing_attributes(
        &self,
    ) -> std::option::Option<&crate::types::DnssecSigningAttributes> {
        self.signing_attributes.as_ref()
    }
}
impl AssociateDelegationSignerToDomainInput {
    /// Creates a new builder-style object to manufacture [`AssociateDelegationSignerToDomainInput`](crate::operation::associate_delegation_signer_to_domain::AssociateDelegationSignerToDomainInput).
    pub fn builder() -> crate::operation::associate_delegation_signer_to_domain::builders::AssociateDelegationSignerToDomainInputBuilder{
        crate::operation::associate_delegation_signer_to_domain::builders::AssociateDelegationSignerToDomainInputBuilder::default()
    }
}

/// A builder for [`AssociateDelegationSignerToDomainInput`](crate::operation::associate_delegation_signer_to_domain::AssociateDelegationSignerToDomainInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociateDelegationSignerToDomainInputBuilder {
    pub(crate) domain_name: std::option::Option<std::string::String>,
    pub(crate) signing_attributes: std::option::Option<crate::types::DnssecSigningAttributes>,
}
impl AssociateDelegationSignerToDomainInputBuilder {
    /// <p>The name of the domain.</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>The name of the domain.</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>The information about a key, including the algorithm, public key-value, and flags.</p>
    pub fn signing_attributes(mut self, input: crate::types::DnssecSigningAttributes) -> Self {
        self.signing_attributes = Some(input);
        self
    }
    /// <p>The information about a key, including the algorithm, public key-value, and flags.</p>
    pub fn set_signing_attributes(
        mut self,
        input: std::option::Option<crate::types::DnssecSigningAttributes>,
    ) -> Self {
        self.signing_attributes = input;
        self
    }
    /// Consumes the builder and constructs a [`AssociateDelegationSignerToDomainInput`](crate::operation::associate_delegation_signer_to_domain::AssociateDelegationSignerToDomainInput).
    pub fn build(self) -> Result<crate::operation::associate_delegation_signer_to_domain::AssociateDelegationSignerToDomainInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::associate_delegation_signer_to_domain::AssociateDelegationSignerToDomainInput {
                domain_name: self.domain_name
                ,
                signing_attributes: self.signing_attributes
                ,
            }
        )
    }
}
