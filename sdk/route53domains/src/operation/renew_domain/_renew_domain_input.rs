// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A <code>RenewDomain</code> request includes the number of years that you want to renew for and the current expiration year.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RenewDomainInput {
    /// <p>The name of the domain that you want to renew.</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
    /// <p>The number of years that you want to renew the domain for. The maximum number of years depends on the top-level domain. For the range of valid values for your domain, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
    /// <p>Default: 1</p>
    #[doc(hidden)]
    pub duration_in_years: std::option::Option<i32>,
    /// <p>The year when the registration for the domain is set to expire. This value must match the current expiration date for the domain.</p>
    #[doc(hidden)]
    pub current_expiry_year: i32,
}
impl RenewDomainInput {
    /// <p>The name of the domain that you want to renew.</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
    /// <p>The number of years that you want to renew the domain for. The maximum number of years depends on the top-level domain. For the range of valid values for your domain, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
    /// <p>Default: 1</p>
    pub fn duration_in_years(&self) -> std::option::Option<i32> {
        self.duration_in_years
    }
    /// <p>The year when the registration for the domain is set to expire. This value must match the current expiration date for the domain.</p>
    pub fn current_expiry_year(&self) -> i32 {
        self.current_expiry_year
    }
}
impl RenewDomainInput {
    /// Creates a new builder-style object to manufacture [`RenewDomainInput`](crate::operation::renew_domain::RenewDomainInput).
    pub fn builder() -> crate::operation::renew_domain::builders::RenewDomainInputBuilder {
        crate::operation::renew_domain::builders::RenewDomainInputBuilder::default()
    }
}

/// A builder for [`RenewDomainInput`](crate::operation::renew_domain::RenewDomainInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RenewDomainInputBuilder {
    pub(crate) domain_name: std::option::Option<std::string::String>,
    pub(crate) duration_in_years: std::option::Option<i32>,
    pub(crate) current_expiry_year: std::option::Option<i32>,
}
impl RenewDomainInputBuilder {
    /// <p>The name of the domain that you want to renew.</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>The name of the domain that you want to renew.</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>The number of years that you want to renew the domain for. The maximum number of years depends on the top-level domain. For the range of valid values for your domain, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
    /// <p>Default: 1</p>
    pub fn duration_in_years(mut self, input: i32) -> Self {
        self.duration_in_years = Some(input);
        self
    }
    /// <p>The number of years that you want to renew the domain for. The maximum number of years depends on the top-level domain. For the range of valid values for your domain, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
    /// <p>Default: 1</p>
    pub fn set_duration_in_years(mut self, input: std::option::Option<i32>) -> Self {
        self.duration_in_years = input;
        self
    }
    /// <p>The year when the registration for the domain is set to expire. This value must match the current expiration date for the domain.</p>
    pub fn current_expiry_year(mut self, input: i32) -> Self {
        self.current_expiry_year = Some(input);
        self
    }
    /// <p>The year when the registration for the domain is set to expire. This value must match the current expiration date for the domain.</p>
    pub fn set_current_expiry_year(mut self, input: std::option::Option<i32>) -> Self {
        self.current_expiry_year = input;
        self
    }
    /// Consumes the builder and constructs a [`RenewDomainInput`](crate::operation::renew_domain::RenewDomainInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::renew_domain::RenewDomainInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::renew_domain::RenewDomainInput {
            domain_name: self.domain_name,
            duration_in_years: self.duration_in_years,
            current_expiry_year: self.current_expiry_year.unwrap_or_default(),
        })
    }
}
