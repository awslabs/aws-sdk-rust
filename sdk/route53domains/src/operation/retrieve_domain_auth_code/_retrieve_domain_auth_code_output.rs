// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The RetrieveDomainAuthCode response includes the following element.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct RetrieveDomainAuthCodeOutput {
    /// <p>The authorization code for the domain.</p>
    #[doc(hidden)]
    pub auth_code: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl RetrieveDomainAuthCodeOutput {
    /// <p>The authorization code for the domain.</p>
    pub fn auth_code(&self) -> std::option::Option<&str> {
        self.auth_code.as_deref()
    }
}
impl std::fmt::Debug for RetrieveDomainAuthCodeOutput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("RetrieveDomainAuthCodeOutput");
        formatter.field("auth_code", &"*** Sensitive Data Redacted ***");
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
impl aws_http::request_id::RequestId for RetrieveDomainAuthCodeOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RetrieveDomainAuthCodeOutput {
    /// Creates a new builder-style object to manufacture [`RetrieveDomainAuthCodeOutput`](crate::operation::retrieve_domain_auth_code::RetrieveDomainAuthCodeOutput).
    pub fn builder(
    ) -> crate::operation::retrieve_domain_auth_code::builders::RetrieveDomainAuthCodeOutputBuilder
    {
        crate::operation::retrieve_domain_auth_code::builders::RetrieveDomainAuthCodeOutputBuilder::default()
    }
}

/// A builder for [`RetrieveDomainAuthCodeOutput`](crate::operation::retrieve_domain_auth_code::RetrieveDomainAuthCodeOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct RetrieveDomainAuthCodeOutputBuilder {
    pub(crate) auth_code: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl RetrieveDomainAuthCodeOutputBuilder {
    /// <p>The authorization code for the domain.</p>
    pub fn auth_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.auth_code = Some(input.into());
        self
    }
    /// <p>The authorization code for the domain.</p>
    pub fn set_auth_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.auth_code = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RetrieveDomainAuthCodeOutput`](crate::operation::retrieve_domain_auth_code::RetrieveDomainAuthCodeOutput).
    pub fn build(
        self,
    ) -> crate::operation::retrieve_domain_auth_code::RetrieveDomainAuthCodeOutput {
        crate::operation::retrieve_domain_auth_code::RetrieveDomainAuthCodeOutput {
            auth_code: self.auth_code,
            _request_id: self._request_id,
        }
    }
}
impl std::fmt::Debug for RetrieveDomainAuthCodeOutputBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("RetrieveDomainAuthCodeOutputBuilder");
        formatter.field("auth_code", &"*** Sensitive Data Redacted ***");
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
