// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListOperations`](crate::client::fluent_builders::ListOperations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListOperations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`submitted_since(DateTime)`](crate::client::fluent_builders::ListOperations::submitted_since) / [`set_submitted_since(Option<DateTime>)`](crate::client::fluent_builders::ListOperations::set_submitted_since): <p>An optional parameter that lets you get information about all the operations that you submitted after a specified date and time. Specify the date and time in Unix time format and Coordinated Universal time (UTC).</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::ListOperations::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::ListOperations::set_marker): <p>For an initial request for a list of operations, omit this element. If the number of operations that are not yet complete is greater than the value that you specified for <code>MaxItems</code>, you can use <code>Marker</code> to return additional operations. Get the value of <code>NextPageMarker</code> from the previous response, and submit another request that includes the value of <code>NextPageMarker</code> in the <code>Marker</code> element.</p>
    ///   - [`max_items(i32)`](crate::client::fluent_builders::ListOperations::max_items) / [`set_max_items(Option<i32>)`](crate::client::fluent_builders::ListOperations::set_max_items): <p>Number of domains to be returned.</p>  <p>Default: 20</p>
    ///   - [`status(Vec<OperationStatus>)`](crate::client::fluent_builders::ListOperations::status) / [`set_status(Option<Vec<OperationStatus>>)`](crate::client::fluent_builders::ListOperations::set_status): <p> The status of the operations. </p>
    ///   - [`r#type(Vec<OperationType>)`](crate::client::fluent_builders::ListOperations::type) / [`set_type(Option<Vec<OperationType>>)`](crate::client::fluent_builders::ListOperations::set_type): <p> An arrays of the domains operation types. </p>
    ///   - [`sort_by(ListOperationsSortAttributeName)`](crate::client::fluent_builders::ListOperations::sort_by) / [`set_sort_by(Option<ListOperationsSortAttributeName>)`](crate::client::fluent_builders::ListOperations::set_sort_by): <p> The sort type for returned values. </p>
    ///   - [`sort_order(SortOrder)`](crate::client::fluent_builders::ListOperations::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::client::fluent_builders::ListOperations::set_sort_order): <p> The sort order ofr returned values, either ascending or descending. </p>
    /// - On success, responds with [`ListOperationsOutput`](crate::output::ListOperationsOutput) with field(s):
    ///   - [`operations(Option<Vec<OperationSummary>>)`](crate::output::ListOperationsOutput::operations): <p>Lists summaries of the operations.</p>
    ///   - [`next_page_marker(Option<String>)`](crate::output::ListOperationsOutput::next_page_marker): <p>If there are more operations than you specified for <code>MaxItems</code> in the request, submit another request and include the value of <code>NextPageMarker</code> in the value of <code>Marker</code>.</p>
    /// - On failure, responds with [`SdkError<ListOperationsError>`](crate::error::ListOperationsError)
    pub fn list_operations(&self) -> crate::client::fluent_builders::ListOperations {
        crate::client::fluent_builders::ListOperations::new(self.handle.clone())
    }
}
