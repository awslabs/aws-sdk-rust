// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelDomainTransferToAnotherAwsAccount`](crate::client::fluent_builders::CancelDomainTransferToAnotherAwsAccount) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::client::fluent_builders::CancelDomainTransferToAnotherAwsAccount::domain_name) / [`set_domain_name(Option<String>)`](crate::client::fluent_builders::CancelDomainTransferToAnotherAwsAccount::set_domain_name): <p>The name of the domain for which you want to cancel the transfer to another Amazon Web Services account.</p>
    /// - On success, responds with [`CancelDomainTransferToAnotherAwsAccountOutput`](crate::output::CancelDomainTransferToAnotherAwsAccountOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::output::CancelDomainTransferToAnotherAwsAccountOutput::operation_id): <p>The identifier that <code>TransferDomainToAnotherAwsAccount</code> returned to track the progress of the request. Because the transfer request was canceled, the value is no longer valid, and you can't use <code>GetOperationDetail</code> to query the operation status.</p>
    /// - On failure, responds with [`SdkError<CancelDomainTransferToAnotherAwsAccountError>`](crate::error::CancelDomainTransferToAnotherAwsAccountError)
    pub fn cancel_domain_transfer_to_another_aws_account(
        &self,
    ) -> crate::client::fluent_builders::CancelDomainTransferToAnotherAwsAccount {
        crate::client::fluent_builders::CancelDomainTransferToAnotherAwsAccount::new(
            self.handle.clone(),
        )
    }
}
