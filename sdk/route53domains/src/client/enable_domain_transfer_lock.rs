// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`EnableDomainTransferLock`](crate::operation::enable_domain_transfer_lock::builders::EnableDomainTransferLockFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::operation::enable_domain_transfer_lock::builders::EnableDomainTransferLockFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::enable_domain_transfer_lock::builders::EnableDomainTransferLockFluentBuilder::set_domain_name):<br>required: **true**<br><p>The name of the domain that you want to set the transfer lock for.</p><br>
    /// - On success, responds with [`EnableDomainTransferLockOutput`](crate::operation::enable_domain_transfer_lock::EnableDomainTransferLockOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::operation::enable_domain_transfer_lock::EnableDomainTransferLockOutput::operation_id): <p>Identifier for tracking the progress of the request. To use this ID to query the operation status, use GetOperationDetail.</p>
    /// - On failure, responds with [`SdkError<EnableDomainTransferLockError>`](crate::operation::enable_domain_transfer_lock::EnableDomainTransferLockError)
    pub fn enable_domain_transfer_lock(&self) -> crate::operation::enable_domain_transfer_lock::builders::EnableDomainTransferLockFluentBuilder {
        crate::operation::enable_domain_transfer_lock::builders::EnableDomainTransferLockFluentBuilder::new(self.handle.clone())
    }
}
