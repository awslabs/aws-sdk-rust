// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AcceptDomainTransferFromAnotherAwsAccount`](crate::client::fluent_builders::AcceptDomainTransferFromAnotherAwsAccount) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::client::fluent_builders::AcceptDomainTransferFromAnotherAwsAccount::domain_name) / [`set_domain_name(Option<String>)`](crate::client::fluent_builders::AcceptDomainTransferFromAnotherAwsAccount::set_domain_name): <p>The name of the domain that was specified when another Amazon Web Services account submitted a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_TransferDomainToAnotherAwsAccount.html">TransferDomainToAnotherAwsAccount</a> request. </p>
    ///   - [`password(impl Into<String>)`](crate::client::fluent_builders::AcceptDomainTransferFromAnotherAwsAccount::password) / [`set_password(Option<String>)`](crate::client::fluent_builders::AcceptDomainTransferFromAnotherAwsAccount::set_password): <p>The password that was returned by the <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_TransferDomainToAnotherAwsAccount.html">TransferDomainToAnotherAwsAccount</a> request. </p>
    /// - On success, responds with [`AcceptDomainTransferFromAnotherAwsAccountOutput`](crate::output::AcceptDomainTransferFromAnotherAwsAccountOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::output::AcceptDomainTransferFromAnotherAwsAccountOutput::operation_id): <p>Identifier for tracking the progress of the request. To query the operation status, use <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html">GetOperationDetail</a>.</p>
    /// - On failure, responds with [`SdkError<AcceptDomainTransferFromAnotherAwsAccountError>`](crate::error::AcceptDomainTransferFromAnotherAwsAccountError)
    pub fn accept_domain_transfer_from_another_aws_account(
        &self,
    ) -> crate::client::fluent_builders::AcceptDomainTransferFromAnotherAwsAccount {
        crate::client::fluent_builders::AcceptDomainTransferFromAnotherAwsAccount::new(
            self.handle.clone(),
        )
    }
}
