// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RenewDomain`](crate::client::fluent_builders::RenewDomain) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::client::fluent_builders::RenewDomain::domain_name) / [`set_domain_name(Option<String>)`](crate::client::fluent_builders::RenewDomain::set_domain_name): <p>The name of the domain that you want to renew.</p>
    ///   - [`duration_in_years(i32)`](crate::client::fluent_builders::RenewDomain::duration_in_years) / [`set_duration_in_years(Option<i32>)`](crate::client::fluent_builders::RenewDomain::set_duration_in_years): <p>The number of years that you want to renew the domain for. The maximum number of years depends on the top-level domain. For the range of valid values for your domain, see <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html">Domains that You Can Register with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>  <p>Default: 1</p>
    ///   - [`current_expiry_year(i32)`](crate::client::fluent_builders::RenewDomain::current_expiry_year) / [`set_current_expiry_year(i32)`](crate::client::fluent_builders::RenewDomain::set_current_expiry_year): <p>The year when the registration for the domain is set to expire. This value must match the current expiration date for the domain.</p>
    /// - On success, responds with [`RenewDomainOutput`](crate::output::RenewDomainOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::output::RenewDomainOutput::operation_id): <p>Identifier for tracking the progress of the request. To query the operation status, use <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_GetOperationDetail.html">GetOperationDetail</a>.</p>
    /// - On failure, responds with [`SdkError<RenewDomainError>`](crate::error::RenewDomainError)
    pub fn renew_domain(&self) -> crate::client::fluent_builders::RenewDomain {
        crate::client::fluent_builders::RenewDomain::new(self.handle.clone())
    }
}
