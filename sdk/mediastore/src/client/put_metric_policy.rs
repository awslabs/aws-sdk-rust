// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutMetricPolicy`](crate::operation::put_metric_policy::builders::PutMetricPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`container_name(impl Into<String>)`](crate::operation::put_metric_policy::builders::PutMetricPolicyFluentBuilder::container_name) / [`set_container_name(Option<String>)`](crate::operation::put_metric_policy::builders::PutMetricPolicyFluentBuilder::set_container_name): <p>The name of the container that you want to add the metric policy to.</p>
    ///   - [`metric_policy(MetricPolicy)`](crate::operation::put_metric_policy::builders::PutMetricPolicyFluentBuilder::metric_policy) / [`set_metric_policy(Option<MetricPolicy>)`](crate::operation::put_metric_policy::builders::PutMetricPolicyFluentBuilder::set_metric_policy): <p>The metric policy that you want to associate with the container. In the policy, you must indicate whether you want MediaStore to send container-level metrics. You can also include up to five rules to define groups of objects that you want MediaStore to send object-level metrics for. If you include rules in the policy, construct each rule with both of the following:</p>  <ul>   <li> <p>An object group that defines which objects to include in the group. The definition can be a path or a file name, but it can't have more than 900 characters. Valid characters are: a-z, A-Z, 0-9, _ (underscore), = (equal), : (colon), . (period), - (hyphen), ~ (tilde), / (forward slash), and * (asterisk). Wildcards (*) are acceptable.</p> </li>   <li> <p>An object group name that allows you to refer to the object group. The name can't have more than 30 characters. Valid characters are: a-z, A-Z, 0-9, and _ (underscore).</p> </li>  </ul>
    /// - On success, responds with [`PutMetricPolicyOutput`](crate::operation::put_metric_policy::PutMetricPolicyOutput)
    /// - On failure, responds with [`SdkError<PutMetricPolicyError>`](crate::operation::put_metric_policy::PutMetricPolicyError)
    pub fn put_metric_policy(
        &self,
    ) -> crate::operation::put_metric_policy::builders::PutMetricPolicyFluentBuilder {
        crate::operation::put_metric_policy::builders::PutMetricPolicyFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
