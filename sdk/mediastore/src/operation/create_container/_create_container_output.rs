// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateContainerOutput {
    /// <p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:<region>
    /// :
    /// <account that owns this container>
    /// :container/
    /// <name of container>
    /// . For example: arn:aws:mediastore:us-west-2:111122223333:container/movies
    /// </name>
    /// </account>
    /// </region></p>
    /// <p>ContainerName: The container name as specified in the request.</p>
    /// <p>CreationTime: Unix time stamp.</p>
    /// <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p>
    /// <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <code>DescribeContainer</code> or <code>ListContainers</code>.</p>
    pub container: ::std::option::Option<crate::types::Container>,
    _request_id: Option<String>,
}
impl CreateContainerOutput {
    /// <p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:<region>
    /// :
    /// <account that owns this container>
    /// :container/
    /// <name of container>
    /// . For example: arn:aws:mediastore:us-west-2:111122223333:container/movies
    /// </name>
    /// </account>
    /// </region></p>
    /// <p>ContainerName: The container name as specified in the request.</p>
    /// <p>CreationTime: Unix time stamp.</p>
    /// <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p>
    /// <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <code>DescribeContainer</code> or <code>ListContainers</code>.</p>
    pub fn container(&self) -> ::std::option::Option<&crate::types::Container> {
        self.container.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for CreateContainerOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateContainerOutput {
    /// Creates a new builder-style object to manufacture [`CreateContainerOutput`](crate::operation::create_container::CreateContainerOutput).
    pub fn builder() -> crate::operation::create_container::builders::CreateContainerOutputBuilder {
        crate::operation::create_container::builders::CreateContainerOutputBuilder::default()
    }
}

/// A builder for [`CreateContainerOutput`](crate::operation::create_container::CreateContainerOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateContainerOutputBuilder {
    pub(crate) container: ::std::option::Option<crate::types::Container>,
    _request_id: Option<String>,
}
impl CreateContainerOutputBuilder {
    /// <p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:<region>
    /// :
    /// <account that owns this container>
    /// :container/
    /// <name of container>
    /// . For example: arn:aws:mediastore:us-west-2:111122223333:container/movies
    /// </name>
    /// </account>
    /// </region></p>
    /// <p>ContainerName: The container name as specified in the request.</p>
    /// <p>CreationTime: Unix time stamp.</p>
    /// <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p>
    /// <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <code>DescribeContainer</code> or <code>ListContainers</code>.</p>
    /// This field is required.
    pub fn container(mut self, input: crate::types::Container) -> Self {
        self.container = ::std::option::Option::Some(input);
        self
    }
    /// <p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:<region>
    /// :
    /// <account that owns this container>
    /// :container/
    /// <name of container>
    /// . For example: arn:aws:mediastore:us-west-2:111122223333:container/movies
    /// </name>
    /// </account>
    /// </region></p>
    /// <p>ContainerName: The container name as specified in the request.</p>
    /// <p>CreationTime: Unix time stamp.</p>
    /// <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p>
    /// <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <code>DescribeContainer</code> or <code>ListContainers</code>.</p>
    pub fn set_container(mut self, input: ::std::option::Option<crate::types::Container>) -> Self {
        self.container = input;
        self
    }
    /// <p>ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN has the following format: arn:aws:<region>
    /// :
    /// <account that owns this container>
    /// :container/
    /// <name of container>
    /// . For example: arn:aws:mediastore:us-west-2:111122223333:container/movies
    /// </name>
    /// </account>
    /// </region></p>
    /// <p>ContainerName: The container name as specified in the request.</p>
    /// <p>CreationTime: Unix time stamp.</p>
    /// <p>Status: The status of container creation or deletion. The status is one of the following: <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service is creating the container, the status is <code>CREATING</code>. When an endpoint is available, the status changes to <code>ACTIVE</code>.</p>
    /// <p>The return value does not include the container's endpoint. To make downstream requests, you must obtain this value by using <code>DescribeContainer</code> or <code>ListContainers</code>.</p>
    pub fn get_container(&self) -> &::std::option::Option<crate::types::Container> {
        &self.container
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateContainerOutput`](crate::operation::create_container::CreateContainerOutput).
    pub fn build(self) -> crate::operation::create_container::CreateContainerOutput {
        crate::operation::create_container::CreateContainerOutput {
            container: self.container,
            _request_id: self._request_id,
        }
    }
}
