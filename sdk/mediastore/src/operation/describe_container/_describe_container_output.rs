// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeContainerOutput {
    /// <p>The name of the queried container.</p>
    #[doc(hidden)]
    pub container: std::option::Option<crate::types::Container>,
    _request_id: Option<String>,
}
impl DescribeContainerOutput {
    /// <p>The name of the queried container.</p>
    pub fn container(&self) -> std::option::Option<&crate::types::Container> {
        self.container.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeContainerOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeContainerOutput {
    /// Creates a new builder-style object to manufacture [`DescribeContainerOutput`](crate::operation::describe_container::DescribeContainerOutput).
    pub fn builder(
    ) -> crate::operation::describe_container::builders::DescribeContainerOutputBuilder {
        crate::operation::describe_container::builders::DescribeContainerOutputBuilder::default()
    }
}

/// A builder for [`DescribeContainerOutput`](crate::operation::describe_container::DescribeContainerOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeContainerOutputBuilder {
    pub(crate) container: std::option::Option<crate::types::Container>,
    _request_id: Option<String>,
}
impl DescribeContainerOutputBuilder {
    /// <p>The name of the queried container.</p>
    pub fn container(mut self, input: crate::types::Container) -> Self {
        self.container = Some(input);
        self
    }
    /// <p>The name of the queried container.</p>
    pub fn set_container(mut self, input: std::option::Option<crate::types::Container>) -> Self {
        self.container = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeContainerOutput`](crate::operation::describe_container::DescribeContainerOutput).
    pub fn build(self) -> crate::operation::describe_container::DescribeContainerOutput {
        crate::operation::describe_container::DescribeContainerOutput {
            container: self.container,
            _request_id: self._request_id,
        }
    }
}
