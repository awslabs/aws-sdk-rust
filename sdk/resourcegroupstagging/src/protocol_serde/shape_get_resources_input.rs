// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_resources_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_resources::GetResourcesInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.pagination_token {
        object.key("PaginationToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.tag_filters {
        let mut array_3 = object.key("TagFilters").start_array();
        for item_4 in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::protocol_serde::shape_tag_filter::ser_tag_filter(&mut object_5, item_4)?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.resources_per_page {
        object.key("ResourcesPerPage").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    if let Some(var_7) = &input.tags_per_page {
        object.key("TagsPerPage").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.resource_type_filters {
        let mut array_9 = object.key("ResourceTypeFilters").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10.as_str());
            }
        }
        array_9.finish();
    }
    if let Some(var_11) = &input.include_compliance_details {
        object.key("IncludeComplianceDetails").boolean(*var_11);
    }
    if let Some(var_12) = &input.exclude_compliant_resources {
        object.key("ExcludeCompliantResources").boolean(*var_12);
    }
    if let Some(var_13) = &input.resource_arn_list {
        let mut array_14 = object.key("ResourceARNList").start_array();
        for item_15 in var_13 {
            {
                array_14.value().string(item_15.as_str());
            }
        }
        array_14.finish();
    }
    Ok(())
}
