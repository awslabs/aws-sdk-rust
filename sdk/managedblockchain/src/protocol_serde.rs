// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_accessor;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_member;

pub(crate) mod shape_create_network;

pub(crate) mod shape_create_node;

pub(crate) mod shape_create_proposal;

pub(crate) mod shape_delete_accessor;

pub(crate) mod shape_delete_member;

pub(crate) mod shape_delete_node;

pub(crate) mod shape_get_accessor;

pub(crate) mod shape_get_member;

pub(crate) mod shape_get_network;

pub(crate) mod shape_get_node;

pub(crate) mod shape_get_proposal;

pub(crate) mod shape_list_accessors;

pub(crate) mod shape_list_invitations;

pub(crate) mod shape_list_members;

pub(crate) mod shape_list_networks;

pub(crate) mod shape_list_nodes;

pub(crate) mod shape_list_proposal_votes;

pub(crate) mod shape_list_proposals;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_reject_invitation;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_member;

pub(crate) mod shape_update_node;

pub(crate) mod shape_vote_on_proposal;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_create_accessor_input;

pub(crate) mod shape_create_member_input;

pub(crate) mod shape_create_network_input;

pub(crate) mod shape_create_node_input;

pub(crate) mod shape_create_proposal_input;

pub(crate) mod shape_illegal_action_exception;

pub(crate) mod shape_internal_service_error_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_resource_already_exists_exception;

pub(crate) mod shape_resource_limit_exceeded_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_resource_not_ready_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_too_many_tags_exception;

pub(crate) mod shape_update_member_input;

pub(crate) mod shape_update_node_input;

pub(crate) mod shape_vote_on_proposal_input;

pub(crate) mod shape_accessor;

pub(crate) mod shape_accessor_summary_list;

pub(crate) mod shape_invitation_list;

pub(crate) mod shape_member;

pub(crate) mod shape_member_configuration;

pub(crate) mod shape_member_log_publishing_configuration;

pub(crate) mod shape_member_summary_list;

pub(crate) mod shape_network;

pub(crate) mod shape_network_framework_configuration;

pub(crate) mod shape_network_summary_list;

pub(crate) mod shape_node;

pub(crate) mod shape_node_configuration;

pub(crate) mod shape_node_log_publishing_configuration;

pub(crate) mod shape_node_summary_list;

pub(crate) mod shape_output_tag_map;

pub(crate) mod shape_proposal;

pub(crate) mod shape_proposal_actions;

pub(crate) mod shape_proposal_summary_list;

pub(crate) mod shape_proposal_vote_list;

pub(crate) mod shape_voting_policy;

pub(crate) mod shape_accessor_summary;

pub(crate) mod shape_approval_threshold_policy;

pub(crate) mod shape_invitation;

pub(crate) mod shape_invite_action;

pub(crate) mod shape_member_fabric_log_publishing_configuration;

pub(crate) mod shape_member_framework_attributes;

pub(crate) mod shape_member_framework_configuration;

pub(crate) mod shape_member_summary;

pub(crate) mod shape_network_fabric_configuration;

pub(crate) mod shape_network_framework_attributes;

pub(crate) mod shape_network_summary;

pub(crate) mod shape_node_fabric_log_publishing_configuration;

pub(crate) mod shape_node_framework_attributes;

pub(crate) mod shape_node_summary;

pub(crate) mod shape_proposal_summary;

pub(crate) mod shape_remove_action;

pub(crate) mod shape_vote_summary;

pub(crate) mod shape_invite_action_list;

pub(crate) mod shape_log_configurations;

pub(crate) mod shape_member_fabric_attributes;

pub(crate) mod shape_member_fabric_configuration;

pub(crate) mod shape_network_ethereum_attributes;

pub(crate) mod shape_network_fabric_attributes;

pub(crate) mod shape_node_ethereum_attributes;

pub(crate) mod shape_node_fabric_attributes;

pub(crate) mod shape_remove_action_list;

pub(crate) mod shape_log_configuration;
