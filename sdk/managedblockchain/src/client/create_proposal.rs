// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateProposal`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::set_client_request_token):<br>required: **true**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an Amazon Web Services SDK or the CLI.</p><br>
    ///   - [`network_id(impl Into<String>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::network_id) / [`set_network_id(Option<String>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::set_network_id):<br>required: **true**<br><p> The unique identifier of the network for which the proposal is made.</p><br>
    ///   - [`member_id(impl Into<String>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::member_id) / [`set_member_id(Option<String>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::set_member_id):<br>required: **true**<br><p>The unique identifier of the member that is creating the proposal. This identifier is especially useful for identifying the member making the proposal when multiple members exist in a single Amazon Web Services account.</p><br>
    ///   - [`actions(ProposalActions)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::actions) / [`set_actions(Option<ProposalActions>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::set_actions):<br>required: **true**<br><p>The type of actions proposed, such as inviting a member or removing a member. The types of <code>Actions</code> in a proposal are mutually exclusive. For example, a proposal with <code>Invitations</code> actions cannot also contain <code>Removals</code> actions.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::set_description):<br>required: **false**<br><p>A description for the proposal that is visible to voting members, for example, "Proposal to add Example Corp. as member."</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_proposal::builders::CreateProposalFluentBuilder::set_tags):<br>required: **false**<br><p>Tags to assign to the proposal.</p>  <p> Each tag consists of a key and an optional value. You can specify multiple key-value pairs in a single request with an overall maximum of 50 tags allowed per resource.</p>  <p>For more information about tags, see <a href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging Resources</a> in the <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or <a href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging Resources</a> in the <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.</p><br>
    /// - On success, responds with [`CreateProposalOutput`](crate::operation::create_proposal::CreateProposalOutput) with field(s):
    ///   - [`proposal_id(Option<String>)`](crate::operation::create_proposal::CreateProposalOutput::proposal_id): <p>The unique identifier of the proposal.</p>
    /// - On failure, responds with [`SdkError<CreateProposalError>`](crate::operation::create_proposal::CreateProposalError)
    pub fn create_proposal(&self) -> crate::operation::create_proposal::builders::CreateProposalFluentBuilder {
        crate::operation::create_proposal::builders::CreateProposalFluentBuilder::new(self.handle.clone())
    }
}
