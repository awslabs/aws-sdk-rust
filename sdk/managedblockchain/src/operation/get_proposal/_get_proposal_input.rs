// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetProposalInput {
    /// <p>The unique identifier of the network for which the proposal is made.</p>
    #[doc(hidden)]
    pub network_id: std::option::Option<std::string::String>,
    /// <p>The unique identifier of the proposal.</p>
    #[doc(hidden)]
    pub proposal_id: std::option::Option<std::string::String>,
}
impl GetProposalInput {
    /// <p>The unique identifier of the network for which the proposal is made.</p>
    pub fn network_id(&self) -> std::option::Option<&str> {
        self.network_id.as_deref()
    }
    /// <p>The unique identifier of the proposal.</p>
    pub fn proposal_id(&self) -> std::option::Option<&str> {
        self.proposal_id.as_deref()
    }
}
impl GetProposalInput {
    /// Creates a new builder-style object to manufacture [`GetProposalInput`](crate::operation::get_proposal::GetProposalInput).
    pub fn builder() -> crate::operation::get_proposal::builders::GetProposalInputBuilder {
        crate::operation::get_proposal::builders::GetProposalInputBuilder::default()
    }
}

/// A builder for [`GetProposalInput`](crate::operation::get_proposal::GetProposalInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetProposalInputBuilder {
    pub(crate) network_id: std::option::Option<std::string::String>,
    pub(crate) proposal_id: std::option::Option<std::string::String>,
}
impl GetProposalInputBuilder {
    /// <p>The unique identifier of the network for which the proposal is made.</p>
    pub fn network_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.network_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the network for which the proposal is made.</p>
    pub fn set_network_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.network_id = input;
        self
    }
    /// <p>The unique identifier of the proposal.</p>
    pub fn proposal_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.proposal_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the proposal.</p>
    pub fn set_proposal_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.proposal_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetProposalInput`](crate::operation::get_proposal::GetProposalInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_proposal::GetProposalInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_proposal::GetProposalInput {
            network_id: self.network_id,
            proposal_id: self.proposal_id,
        })
    }
}
