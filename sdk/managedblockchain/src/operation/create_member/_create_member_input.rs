// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateMemberInput {
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an Amazon Web Services SDK or the CLI.</p>
    pub client_request_token: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the invitation that is sent to the member to join the network.</p>
    pub invitation_id: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the network in which the member is created.</p>
    pub network_id: ::std::option::Option<::std::string::String>,
    /// <p>Member configuration parameters.</p>
    pub member_configuration: ::std::option::Option<crate::types::MemberConfiguration>,
}
impl CreateMemberInput {
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an Amazon Web Services SDK or the CLI.</p>
    pub fn client_request_token(&self) -> ::std::option::Option<&str> {
        self.client_request_token.as_deref()
    }
    /// <p>The unique identifier of the invitation that is sent to the member to join the network.</p>
    pub fn invitation_id(&self) -> ::std::option::Option<&str> {
        self.invitation_id.as_deref()
    }
    /// <p>The unique identifier of the network in which the member is created.</p>
    pub fn network_id(&self) -> ::std::option::Option<&str> {
        self.network_id.as_deref()
    }
    /// <p>Member configuration parameters.</p>
    pub fn member_configuration(&self) -> ::std::option::Option<&crate::types::MemberConfiguration> {
        self.member_configuration.as_ref()
    }
}
impl CreateMemberInput {
    /// Creates a new builder-style object to manufacture [`CreateMemberInput`](crate::operation::create_member::CreateMemberInput).
    pub fn builder() -> crate::operation::create_member::builders::CreateMemberInputBuilder {
        crate::operation::create_member::builders::CreateMemberInputBuilder::default()
    }
}

/// A builder for [`CreateMemberInput`](crate::operation::create_member::CreateMemberInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateMemberInputBuilder {
    pub(crate) client_request_token: ::std::option::Option<::std::string::String>,
    pub(crate) invitation_id: ::std::option::Option<::std::string::String>,
    pub(crate) network_id: ::std::option::Option<::std::string::String>,
    pub(crate) member_configuration: ::std::option::Option<crate::types::MemberConfiguration>,
}
impl CreateMemberInputBuilder {
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an Amazon Web Services SDK or the CLI.</p>
    /// This field is required.
    pub fn client_request_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_request_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an Amazon Web Services SDK or the CLI.</p>
    pub fn set_client_request_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_request_token = input;
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an Amazon Web Services SDK or the CLI.</p>
    pub fn get_client_request_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_request_token
    }
    /// <p>The unique identifier of the invitation that is sent to the member to join the network.</p>
    /// This field is required.
    pub fn invitation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.invitation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the invitation that is sent to the member to join the network.</p>
    pub fn set_invitation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.invitation_id = input;
        self
    }
    /// <p>The unique identifier of the invitation that is sent to the member to join the network.</p>
    pub fn get_invitation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.invitation_id
    }
    /// <p>The unique identifier of the network in which the member is created.</p>
    /// This field is required.
    pub fn network_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.network_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the network in which the member is created.</p>
    pub fn set_network_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.network_id = input;
        self
    }
    /// <p>The unique identifier of the network in which the member is created.</p>
    pub fn get_network_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.network_id
    }
    /// <p>Member configuration parameters.</p>
    /// This field is required.
    pub fn member_configuration(mut self, input: crate::types::MemberConfiguration) -> Self {
        self.member_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Member configuration parameters.</p>
    pub fn set_member_configuration(mut self, input: ::std::option::Option<crate::types::MemberConfiguration>) -> Self {
        self.member_configuration = input;
        self
    }
    /// <p>Member configuration parameters.</p>
    pub fn get_member_configuration(&self) -> &::std::option::Option<crate::types::MemberConfiguration> {
        &self.member_configuration
    }
    /// Consumes the builder and constructs a [`CreateMemberInput`](crate::operation::create_member::CreateMemberInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_member::CreateMemberInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::create_member::CreateMemberInput {
            client_request_token: self.client_request_token,
            invitation_id: self.invitation_id,
            network_id: self.network_id,
            member_configuration: self.member_configuration,
        })
    }
}
