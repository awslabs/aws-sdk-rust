// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Attributes relevant to a member for the blockchain framework that the Managed Blockchain network uses.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MemberFrameworkAttributes {
    /// <p>Attributes of Hyperledger Fabric relevant to a member on a Managed Blockchain network that uses Hyperledger Fabric.</p>
    #[doc(hidden)]
    pub fabric: std::option::Option<crate::types::MemberFabricAttributes>,
}
impl MemberFrameworkAttributes {
    /// <p>Attributes of Hyperledger Fabric relevant to a member on a Managed Blockchain network that uses Hyperledger Fabric.</p>
    pub fn fabric(&self) -> std::option::Option<&crate::types::MemberFabricAttributes> {
        self.fabric.as_ref()
    }
}
impl MemberFrameworkAttributes {
    /// Creates a new builder-style object to manufacture [`MemberFrameworkAttributes`](crate::types::MemberFrameworkAttributes).
    pub fn builder() -> crate::types::builders::MemberFrameworkAttributesBuilder {
        crate::types::builders::MemberFrameworkAttributesBuilder::default()
    }
}

/// A builder for [`MemberFrameworkAttributes`](crate::types::MemberFrameworkAttributes).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MemberFrameworkAttributesBuilder {
    pub(crate) fabric: std::option::Option<crate::types::MemberFabricAttributes>,
}
impl MemberFrameworkAttributesBuilder {
    /// <p>Attributes of Hyperledger Fabric relevant to a member on a Managed Blockchain network that uses Hyperledger Fabric.</p>
    pub fn fabric(mut self, input: crate::types::MemberFabricAttributes) -> Self {
        self.fabric = Some(input);
        self
    }
    /// <p>Attributes of Hyperledger Fabric relevant to a member on a Managed Blockchain network that uses Hyperledger Fabric.</p>
    pub fn set_fabric(
        mut self,
        input: std::option::Option<crate::types::MemberFabricAttributes>,
    ) -> Self {
        self.fabric = input;
        self
    }
    /// Consumes the builder and constructs a [`MemberFrameworkAttributes`](crate::types::MemberFrameworkAttributes).
    pub fn build(self) -> crate::types::MemberFrameworkAttributes {
        crate::types::MemberFrameworkAttributes {
            fabric: self.fabric,
        }
    }
}
