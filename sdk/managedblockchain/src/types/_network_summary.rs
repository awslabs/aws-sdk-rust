// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of network configuration properties.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NetworkSummary {
    /// <p>The unique identifier of the network.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The name of the network.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>An optional description of the network.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The blockchain framework that the network uses.</p>
    #[doc(hidden)]
    pub framework: std::option::Option<crate::types::Framework>,
    /// <p>The version of the blockchain framework that the network uses.</p>
    #[doc(hidden)]
    pub framework_version: std::option::Option<std::string::String>,
    /// <p>The current status of the network.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::NetworkStatus>,
    /// <p>The date and time that the network was created.</p>
    #[doc(hidden)]
    pub creation_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The Amazon Resource Name (ARN) of the network. For more information about ARNs and their format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
}
impl NetworkSummary {
    /// <p>The unique identifier of the network.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the network.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>An optional description of the network.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The blockchain framework that the network uses.</p>
    pub fn framework(&self) -> std::option::Option<&crate::types::Framework> {
        self.framework.as_ref()
    }
    /// <p>The version of the blockchain framework that the network uses.</p>
    pub fn framework_version(&self) -> std::option::Option<&str> {
        self.framework_version.as_deref()
    }
    /// <p>The current status of the network.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::NetworkStatus> {
        self.status.as_ref()
    }
    /// <p>The date and time that the network was created.</p>
    pub fn creation_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_date.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the network. For more information about ARNs and their format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
}
impl NetworkSummary {
    /// Creates a new builder-style object to manufacture [`NetworkSummary`](crate::types::NetworkSummary).
    pub fn builder() -> crate::types::builders::NetworkSummaryBuilder {
        crate::types::builders::NetworkSummaryBuilder::default()
    }
}

/// A builder for [`NetworkSummary`](crate::types::NetworkSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NetworkSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) framework: std::option::Option<crate::types::Framework>,
    pub(crate) framework_version: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::NetworkStatus>,
    pub(crate) creation_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) arn: std::option::Option<std::string::String>,
}
impl NetworkSummaryBuilder {
    /// <p>The unique identifier of the network.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the network.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The name of the network.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the network.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>An optional description of the network.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>An optional description of the network.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The blockchain framework that the network uses.</p>
    pub fn framework(mut self, input: crate::types::Framework) -> Self {
        self.framework = Some(input);
        self
    }
    /// <p>The blockchain framework that the network uses.</p>
    pub fn set_framework(mut self, input: std::option::Option<crate::types::Framework>) -> Self {
        self.framework = input;
        self
    }
    /// <p>The version of the blockchain framework that the network uses.</p>
    pub fn framework_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.framework_version = Some(input.into());
        self
    }
    /// <p>The version of the blockchain framework that the network uses.</p>
    pub fn set_framework_version(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.framework_version = input;
        self
    }
    /// <p>The current status of the network.</p>
    pub fn status(mut self, input: crate::types::NetworkStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The current status of the network.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::NetworkStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The date and time that the network was created.</p>
    pub fn creation_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_date = Some(input);
        self
    }
    /// <p>The date and time that the network was created.</p>
    pub fn set_creation_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the network. For more information about ARNs and their format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the network. For more information about ARNs and their format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// Consumes the builder and constructs a [`NetworkSummary`](crate::types::NetworkSummary).
    pub fn build(self) -> crate::types::NetworkSummary {
        crate::types::NetworkSummary {
            id: self.id,
            name: self.name,
            description: self.description,
            framework: self.framework,
            framework_version: self.framework_version,
            status: self.status,
            creation_date: self.creation_date,
            arn: self.arn,
        }
    }
}
