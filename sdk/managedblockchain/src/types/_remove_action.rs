// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An action to remove a member from a Managed Blockchain network as the result of a removal proposal that is <code>APPROVED</code>. The member and all associated resources are deleted from the network.</p>
/// <p>Applies only to Hyperledger Fabric.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RemoveAction {
    /// <p>The unique identifier of the member to remove.</p>
    #[doc(hidden)]
    pub member_id: std::option::Option<std::string::String>,
}
impl RemoveAction {
    /// <p>The unique identifier of the member to remove.</p>
    pub fn member_id(&self) -> std::option::Option<&str> {
        self.member_id.as_deref()
    }
}
impl RemoveAction {
    /// Creates a new builder-style object to manufacture [`RemoveAction`](crate::types::RemoveAction).
    pub fn builder() -> crate::types::builders::RemoveActionBuilder {
        crate::types::builders::RemoveActionBuilder::default()
    }
}

/// A builder for [`RemoveAction`](crate::types::RemoveAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RemoveActionBuilder {
    pub(crate) member_id: std::option::Option<std::string::String>,
}
impl RemoveActionBuilder {
    /// <p>The unique identifier of the member to remove.</p>
    pub fn member_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.member_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the member to remove.</p>
    pub fn set_member_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.member_id = input;
        self
    }
    /// Consumes the builder and constructs a [`RemoveAction`](crate::types::RemoveAction).
    pub fn build(self) -> crate::types::RemoveAction {
        crate::types::RemoveAction {
            member_id: self.member_id,
        }
    }
}
