// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An action to remove a member from a Managed Blockchain network as the result of a removal proposal that is <code>APPROVED</code>. The member and all associated resources are deleted from the network.</p>
/// <p>Applies only to Hyperledger Fabric.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RemoveAction {
    /// <p>The unique identifier of the member to remove.</p>
    pub member_id: ::std::string::String,
}
impl RemoveAction {
    /// <p>The unique identifier of the member to remove.</p>
    pub fn member_id(&self) -> &str {
        use std::ops::Deref;
        self.member_id.deref()
    }
}
impl RemoveAction {
    /// Creates a new builder-style object to manufacture [`RemoveAction`](crate::types::RemoveAction).
    pub fn builder() -> crate::types::builders::RemoveActionBuilder {
        crate::types::builders::RemoveActionBuilder::default()
    }
}

/// A builder for [`RemoveAction`](crate::types::RemoveAction).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RemoveActionBuilder {
    pub(crate) member_id: ::std::option::Option<::std::string::String>,
}
impl RemoveActionBuilder {
    /// <p>The unique identifier of the member to remove.</p>
    /// This field is required.
    pub fn member_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.member_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the member to remove.</p>
    pub fn set_member_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.member_id = input;
        self
    }
    /// <p>The unique identifier of the member to remove.</p>
    pub fn get_member_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.member_id
    }
    /// Consumes the builder and constructs a [`RemoveAction`](crate::types::RemoveAction).
    /// This method will fail if any of the following fields are not set:
    /// - [`member_id`](crate::types::builders::RemoveActionBuilder::member_id)
    pub fn build(self) -> ::std::result::Result<crate::types::RemoveAction, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RemoveAction {
            member_id: self.member_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "member_id",
                    "member_id was not specified but it is required when building RemoveAction",
                )
            })?,
        })
    }
}
