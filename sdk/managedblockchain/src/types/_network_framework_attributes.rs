// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Attributes relevant to the network for the blockchain framework that the network uses.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NetworkFrameworkAttributes {
    /// <p>Attributes of Hyperledger Fabric for a Managed Blockchain network that uses Hyperledger Fabric.</p>
    #[doc(hidden)]
    pub fabric: std::option::Option<crate::types::NetworkFabricAttributes>,
    /// <p>Attributes of an Ethereum network for Managed Blockchain resources participating in an Ethereum network. </p>
    #[doc(hidden)]
    pub ethereum: std::option::Option<crate::types::NetworkEthereumAttributes>,
}
impl NetworkFrameworkAttributes {
    /// <p>Attributes of Hyperledger Fabric for a Managed Blockchain network that uses Hyperledger Fabric.</p>
    pub fn fabric(&self) -> std::option::Option<&crate::types::NetworkFabricAttributes> {
        self.fabric.as_ref()
    }
    /// <p>Attributes of an Ethereum network for Managed Blockchain resources participating in an Ethereum network. </p>
    pub fn ethereum(&self) -> std::option::Option<&crate::types::NetworkEthereumAttributes> {
        self.ethereum.as_ref()
    }
}
impl NetworkFrameworkAttributes {
    /// Creates a new builder-style object to manufacture [`NetworkFrameworkAttributes`](crate::types::NetworkFrameworkAttributes).
    pub fn builder() -> crate::types::builders::NetworkFrameworkAttributesBuilder {
        crate::types::builders::NetworkFrameworkAttributesBuilder::default()
    }
}

/// A builder for [`NetworkFrameworkAttributes`](crate::types::NetworkFrameworkAttributes).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NetworkFrameworkAttributesBuilder {
    pub(crate) fabric: std::option::Option<crate::types::NetworkFabricAttributes>,
    pub(crate) ethereum: std::option::Option<crate::types::NetworkEthereumAttributes>,
}
impl NetworkFrameworkAttributesBuilder {
    /// <p>Attributes of Hyperledger Fabric for a Managed Blockchain network that uses Hyperledger Fabric.</p>
    pub fn fabric(mut self, input: crate::types::NetworkFabricAttributes) -> Self {
        self.fabric = Some(input);
        self
    }
    /// <p>Attributes of Hyperledger Fabric for a Managed Blockchain network that uses Hyperledger Fabric.</p>
    pub fn set_fabric(
        mut self,
        input: std::option::Option<crate::types::NetworkFabricAttributes>,
    ) -> Self {
        self.fabric = input;
        self
    }
    /// <p>Attributes of an Ethereum network for Managed Blockchain resources participating in an Ethereum network. </p>
    pub fn ethereum(mut self, input: crate::types::NetworkEthereumAttributes) -> Self {
        self.ethereum = Some(input);
        self
    }
    /// <p>Attributes of an Ethereum network for Managed Blockchain resources participating in an Ethereum network. </p>
    pub fn set_ethereum(
        mut self,
        input: std::option::Option<crate::types::NetworkEthereumAttributes>,
    ) -> Self {
        self.ethereum = input;
        self
    }
    /// Consumes the builder and constructs a [`NetworkFrameworkAttributes`](crate::types::NetworkFrameworkAttributes).
    pub fn build(self) -> crate::types::NetworkFrameworkAttributes {
        crate::types::NetworkFrameworkAttributes {
            fabric: self.fabric,
            ethereum: self.ethereum,
        }
    }
}
