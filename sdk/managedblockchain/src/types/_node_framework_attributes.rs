// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Attributes relevant to a node on a Managed Blockchain network for the blockchain framework that the network uses.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NodeFrameworkAttributes {
    /// <p>Attributes of Hyperledger Fabric for a peer node on a Managed Blockchain network that uses Hyperledger Fabric.</p>
    #[doc(hidden)]
    pub fabric: std::option::Option<crate::types::NodeFabricAttributes>,
    /// <p>Attributes of Ethereum for a node on a Managed Blockchain network that uses Ethereum. </p>
    #[doc(hidden)]
    pub ethereum: std::option::Option<crate::types::NodeEthereumAttributes>,
}
impl NodeFrameworkAttributes {
    /// <p>Attributes of Hyperledger Fabric for a peer node on a Managed Blockchain network that uses Hyperledger Fabric.</p>
    pub fn fabric(&self) -> std::option::Option<&crate::types::NodeFabricAttributes> {
        self.fabric.as_ref()
    }
    /// <p>Attributes of Ethereum for a node on a Managed Blockchain network that uses Ethereum. </p>
    pub fn ethereum(&self) -> std::option::Option<&crate::types::NodeEthereumAttributes> {
        self.ethereum.as_ref()
    }
}
impl NodeFrameworkAttributes {
    /// Creates a new builder-style object to manufacture [`NodeFrameworkAttributes`](crate::types::NodeFrameworkAttributes).
    pub fn builder() -> crate::types::builders::NodeFrameworkAttributesBuilder {
        crate::types::builders::NodeFrameworkAttributesBuilder::default()
    }
}

/// A builder for [`NodeFrameworkAttributes`](crate::types::NodeFrameworkAttributes).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NodeFrameworkAttributesBuilder {
    pub(crate) fabric: std::option::Option<crate::types::NodeFabricAttributes>,
    pub(crate) ethereum: std::option::Option<crate::types::NodeEthereumAttributes>,
}
impl NodeFrameworkAttributesBuilder {
    /// <p>Attributes of Hyperledger Fabric for a peer node on a Managed Blockchain network that uses Hyperledger Fabric.</p>
    pub fn fabric(mut self, input: crate::types::NodeFabricAttributes) -> Self {
        self.fabric = Some(input);
        self
    }
    /// <p>Attributes of Hyperledger Fabric for a peer node on a Managed Blockchain network that uses Hyperledger Fabric.</p>
    pub fn set_fabric(
        mut self,
        input: std::option::Option<crate::types::NodeFabricAttributes>,
    ) -> Self {
        self.fabric = input;
        self
    }
    /// <p>Attributes of Ethereum for a node on a Managed Blockchain network that uses Ethereum. </p>
    pub fn ethereum(mut self, input: crate::types::NodeEthereumAttributes) -> Self {
        self.ethereum = Some(input);
        self
    }
    /// <p>Attributes of Ethereum for a node on a Managed Blockchain network that uses Ethereum. </p>
    pub fn set_ethereum(
        mut self,
        input: std::option::Option<crate::types::NodeEthereumAttributes>,
    ) -> Self {
        self.ethereum = input;
        self
    }
    /// Consumes the builder and constructs a [`NodeFrameworkAttributes`](crate::types::NodeFrameworkAttributes).
    pub fn build(self) -> crate::types::NodeFrameworkAttributes {
        crate::types::NodeFrameworkAttributes {
            fabric: self.fabric,
            ethereum: self.ethereum,
        }
    }
}
