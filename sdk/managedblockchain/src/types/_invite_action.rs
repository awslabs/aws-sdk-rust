// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An action to invite a specific Amazon Web Services account to create a member and join the network. The <code>InviteAction</code> is carried out when a <code>Proposal</code> is <code>APPROVED</code>.</p>
/// <p>Applies only to Hyperledger Fabric.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InviteAction {
    /// <p>The Amazon Web Services account ID to invite.</p>
    #[doc(hidden)]
    pub principal: std::option::Option<std::string::String>,
}
impl InviteAction {
    /// <p>The Amazon Web Services account ID to invite.</p>
    pub fn principal(&self) -> std::option::Option<&str> {
        self.principal.as_deref()
    }
}
impl InviteAction {
    /// Creates a new builder-style object to manufacture [`InviteAction`](crate::types::InviteAction).
    pub fn builder() -> crate::types::builders::InviteActionBuilder {
        crate::types::builders::InviteActionBuilder::default()
    }
}

/// A builder for [`InviteAction`](crate::types::InviteAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InviteActionBuilder {
    pub(crate) principal: std::option::Option<std::string::String>,
}
impl InviteActionBuilder {
    /// <p>The Amazon Web Services account ID to invite.</p>
    pub fn principal(mut self, input: impl Into<std::string::String>) -> Self {
        self.principal = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID to invite.</p>
    pub fn set_principal(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.principal = input;
        self
    }
    /// Consumes the builder and constructs a [`InviteAction`](crate::types::InviteAction).
    pub fn build(self) -> crate::types::InviteAction {
        crate::types::InviteAction {
            principal: self.principal,
        }
    }
}
