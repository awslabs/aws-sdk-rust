// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration properties for logging events associated with a peer node on a Hyperledger Fabric network on Managed Blockchain.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NodeLogPublishingConfiguration {
    /// <p>Configuration properties for logging events associated with a node that is owned by a member of a Managed Blockchain network using the Hyperledger Fabric framework.</p>
    #[doc(hidden)]
    pub fabric: std::option::Option<crate::types::NodeFabricLogPublishingConfiguration>,
}
impl NodeLogPublishingConfiguration {
    /// <p>Configuration properties for logging events associated with a node that is owned by a member of a Managed Blockchain network using the Hyperledger Fabric framework.</p>
    pub fn fabric(
        &self,
    ) -> std::option::Option<&crate::types::NodeFabricLogPublishingConfiguration> {
        self.fabric.as_ref()
    }
}
impl NodeLogPublishingConfiguration {
    /// Creates a new builder-style object to manufacture [`NodeLogPublishingConfiguration`](crate::types::NodeLogPublishingConfiguration).
    pub fn builder() -> crate::types::builders::NodeLogPublishingConfigurationBuilder {
        crate::types::builders::NodeLogPublishingConfigurationBuilder::default()
    }
}

/// A builder for [`NodeLogPublishingConfiguration`](crate::types::NodeLogPublishingConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NodeLogPublishingConfigurationBuilder {
    pub(crate) fabric: std::option::Option<crate::types::NodeFabricLogPublishingConfiguration>,
}
impl NodeLogPublishingConfigurationBuilder {
    /// <p>Configuration properties for logging events associated with a node that is owned by a member of a Managed Blockchain network using the Hyperledger Fabric framework.</p>
    pub fn fabric(mut self, input: crate::types::NodeFabricLogPublishingConfiguration) -> Self {
        self.fabric = Some(input);
        self
    }
    /// <p>Configuration properties for logging events associated with a node that is owned by a member of a Managed Blockchain network using the Hyperledger Fabric framework.</p>
    pub fn set_fabric(
        mut self,
        input: std::option::Option<crate::types::NodeFabricLogPublishingConfiguration>,
    ) -> Self {
        self.fabric = input;
        self
    }
    /// Consumes the builder and constructs a [`NodeLogPublishingConfiguration`](crate::types::NodeLogPublishingConfiguration).
    pub fn build(self) -> crate::types::NodeLogPublishingConfiguration {
        crate::types::NodeLogPublishingConfiguration {
            fabric: self.fabric,
        }
    }
}
