// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMediaStreamPipeline`](crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sources(MediaStreamSource)`](crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder::sources) / [`set_sources(Option<Vec::<MediaStreamSource>>)`](crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder::set_sources):<br>required: **true**<br><p>The data sources for the media pipeline.</p><br>
    ///   - [`sinks(MediaStreamSink)`](crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder::sinks) / [`set_sinks(Option<Vec::<MediaStreamSink>>)`](crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder::set_sinks):<br>required: **true**<br><p>The data sink for the media pipeline.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder::set_client_request_token):<br>required: **false**<br><p>The token assigned to the client making the request.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder::set_tags):<br>required: **false**<br><p>The tags assigned to the media pipeline.</p><br>
    /// - On success, responds with [`CreateMediaStreamPipelineOutput`](crate::operation::create_media_stream_pipeline::CreateMediaStreamPipelineOutput) with field(s):
    ///   - [`media_stream_pipeline(Option<MediaStreamPipeline>)`](crate::operation::create_media_stream_pipeline::CreateMediaStreamPipelineOutput::media_stream_pipeline): <p>The requested media pipeline.</p>
    /// - On failure, responds with [`SdkError<CreateMediaStreamPipelineError>`](crate::operation::create_media_stream_pipeline::CreateMediaStreamPipelineError)
    pub fn create_media_stream_pipeline(&self) -> crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder {
        crate::operation::create_media_stream_pipeline::builders::CreateMediaStreamPipelineFluentBuilder::new(self.handle.clone())
    }
}
