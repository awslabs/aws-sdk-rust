// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMediaConcatenationPipeline`](crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sources(ConcatenationSource)`](crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder::sources) / [`set_sources(Option<Vec::<ConcatenationSource>>)`](crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder::set_sources):<br>required: **true**<br><p>An object that specifies the sources for the media concatenation pipeline.</p><br>
    ///   - [`sinks(ConcatenationSink)`](crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder::sinks) / [`set_sinks(Option<Vec::<ConcatenationSink>>)`](crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder::set_sinks):<br>required: **true**<br><p>An object that specifies the data sinks for the media concatenation pipeline.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder::set_client_request_token):<br>required: **false**<br><p>The unique identifier for the client request. The token makes the API request idempotent. Use a unique token for each media concatenation pipeline request.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder::set_tags):<br>required: **false**<br><p>The tags associated with the media concatenation pipeline.</p><br>
    /// - On success, responds with [`CreateMediaConcatenationPipelineOutput`](crate::operation::create_media_concatenation_pipeline::CreateMediaConcatenationPipelineOutput) with field(s):
    ///   - [`media_concatenation_pipeline(Option<MediaConcatenationPipeline>)`](crate::operation::create_media_concatenation_pipeline::CreateMediaConcatenationPipelineOutput::media_concatenation_pipeline): <p>A media concatenation pipeline object, the ID, source type, <code>MediaPipelineARN</code>, and sink of a media concatenation pipeline object.</p>
    /// - On failure, responds with [`SdkError<CreateMediaConcatenationPipelineError>`](crate::operation::create_media_concatenation_pipeline::CreateMediaConcatenationPipelineError)
    pub fn create_media_concatenation_pipeline(
        &self,
    ) -> crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder {
        crate::operation::create_media_concatenation_pipeline::builders::CreateMediaConcatenationPipelineFluentBuilder::new(self.handle.clone())
    }
}
