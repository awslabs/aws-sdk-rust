// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateMediaInsightsPipelineConfiguration`](crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identifier(impl Into<String>)`](crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder::set_identifier):<br>required: **true**<br><p>The unique identifier for the resource to be updated. Valid values include the name and ARN of the media insights pipeline configuration.</p><br>
    ///   - [`resource_access_role_arn(impl Into<String>)`](crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder::resource_access_role_arn) / [`set_resource_access_role_arn(Option<String>)`](crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder::set_resource_access_role_arn):<br>required: **true**<br><p>The ARN of the role used by the service to access Amazon Web Services resources.</p><br>
    ///   - [`real_time_alert_configuration(RealTimeAlertConfiguration)`](crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder::real_time_alert_configuration) / [`set_real_time_alert_configuration(Option<RealTimeAlertConfiguration>)`](crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder::set_real_time_alert_configuration):<br>required: **false**<br><p>The configuration settings for real-time alerts for the media insights pipeline.</p><br>
    ///   - [`elements(MediaInsightsPipelineConfigurationElement)`](crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder::elements) / [`set_elements(Option<Vec::<MediaInsightsPipelineConfigurationElement>>)`](crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder::set_elements):<br>required: **true**<br><p>The elements in the request, such as a processor for Amazon Transcribe or a sink for a Kinesis Data Stream..</p><br>
    /// - On success, responds with [`UpdateMediaInsightsPipelineConfigurationOutput`](crate::operation::update_media_insights_pipeline_configuration::UpdateMediaInsightsPipelineConfigurationOutput) with field(s):
    ///   - [`media_insights_pipeline_configuration(Option<MediaInsightsPipelineConfiguration>)`](crate::operation::update_media_insights_pipeline_configuration::UpdateMediaInsightsPipelineConfigurationOutput::media_insights_pipeline_configuration): <p>The updated configuration settings.</p>
    /// - On failure, responds with [`SdkError<UpdateMediaInsightsPipelineConfigurationError>`](crate::operation::update_media_insights_pipeline_configuration::UpdateMediaInsightsPipelineConfigurationError)
    pub fn update_media_insights_pipeline_configuration(
        &self,
    ) -> crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder {
        crate::operation::update_media_insights_pipeline_configuration::builders::UpdateMediaInsightsPipelineConfigurationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
