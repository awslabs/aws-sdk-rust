// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMediaPipelineKinesisVideoStreamPool`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stream_configuration(KinesisVideoStreamConfiguration)`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder::stream_configuration) / [`set_stream_configuration(Option<KinesisVideoStreamConfiguration>)`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder::set_stream_configuration):<br>required: **true**<br><p>The configuration settings for the video stream.</p><br>
    ///   - [`pool_name(impl Into<String>)`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder::pool_name) / [`set_pool_name(Option<String>)`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder::set_pool_name):<br>required: **true**<br><p>The name of the video stream pool.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder::set_client_request_token):<br>required: **false**<br><p>The token assigned to the client making the request.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder::set_tags):<br>required: **false**<br><p>The tags assigned to the video stream pool.</p><br>
    /// - On success, responds with [`CreateMediaPipelineKinesisVideoStreamPoolOutput`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::CreateMediaPipelineKinesisVideoStreamPoolOutput) with field(s):
    ///   - [`kinesis_video_stream_pool_configuration(Option<KinesisVideoStreamPoolConfiguration>)`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::CreateMediaPipelineKinesisVideoStreamPoolOutput::kinesis_video_stream_pool_configuration): <p>The configuration for the Kinesis video stream pool.</p>
    /// - On failure, responds with [`SdkError<CreateMediaPipelineKinesisVideoStreamPoolError>`](crate::operation::create_media_pipeline_kinesis_video_stream_pool::CreateMediaPipelineKinesisVideoStreamPoolError)
    pub fn create_media_pipeline_kinesis_video_stream_pool(
        &self,
    ) -> crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder {
        crate::operation::create_media_pipeline_kinesis_video_stream_pool::builders::CreateMediaPipelineKinesisVideoStreamPoolFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
