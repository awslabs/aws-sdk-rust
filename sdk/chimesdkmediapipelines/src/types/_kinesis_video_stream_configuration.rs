// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of an Kinesis video stream.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct KinesisVideoStreamConfiguration {
    /// <p>The Amazon Web Services Region of the video stream.</p>
    pub region: ::std::string::String,
    /// <p>The amount of time that data is retained.</p>
    pub data_retention_in_hours: ::std::option::Option<i32>,
}
impl KinesisVideoStreamConfiguration {
    /// <p>The Amazon Web Services Region of the video stream.</p>
    pub fn region(&self) -> &str {
        use std::ops::Deref;
        self.region.deref()
    }
    /// <p>The amount of time that data is retained.</p>
    pub fn data_retention_in_hours(&self) -> ::std::option::Option<i32> {
        self.data_retention_in_hours
    }
}
impl KinesisVideoStreamConfiguration {
    /// Creates a new builder-style object to manufacture [`KinesisVideoStreamConfiguration`](crate::types::KinesisVideoStreamConfiguration).
    pub fn builder() -> crate::types::builders::KinesisVideoStreamConfigurationBuilder {
        crate::types::builders::KinesisVideoStreamConfigurationBuilder::default()
    }
}

/// A builder for [`KinesisVideoStreamConfiguration`](crate::types::KinesisVideoStreamConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct KinesisVideoStreamConfigurationBuilder {
    pub(crate) region: ::std::option::Option<::std::string::String>,
    pub(crate) data_retention_in_hours: ::std::option::Option<i32>,
}
impl KinesisVideoStreamConfigurationBuilder {
    /// <p>The Amazon Web Services Region of the video stream.</p>
    /// This field is required.
    pub fn region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Region of the video stream.</p>
    pub fn set_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// <p>The Amazon Web Services Region of the video stream.</p>
    pub fn get_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.region
    }
    /// <p>The amount of time that data is retained.</p>
    pub fn data_retention_in_hours(mut self, input: i32) -> Self {
        self.data_retention_in_hours = ::std::option::Option::Some(input);
        self
    }
    /// <p>The amount of time that data is retained.</p>
    pub fn set_data_retention_in_hours(mut self, input: ::std::option::Option<i32>) -> Self {
        self.data_retention_in_hours = input;
        self
    }
    /// <p>The amount of time that data is retained.</p>
    pub fn get_data_retention_in_hours(&self) -> &::std::option::Option<i32> {
        &self.data_retention_in_hours
    }
    /// Consumes the builder and constructs a [`KinesisVideoStreamConfiguration`](crate::types::KinesisVideoStreamConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`region`](crate::types::builders::KinesisVideoStreamConfigurationBuilder::region)
    pub fn build(self) -> ::std::result::Result<crate::types::KinesisVideoStreamConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::KinesisVideoStreamConfiguration {
            region: self.region.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "region",
                    "region was not specified but it is required when building KinesisVideoStreamConfiguration",
                )
            })?,
            data_retention_in_hours: self.data_retention_in_hours,
        })
    }
}
