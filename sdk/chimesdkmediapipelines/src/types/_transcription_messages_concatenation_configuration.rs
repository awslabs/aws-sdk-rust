// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration object for concatenating transcription messages.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TranscriptionMessagesConcatenationConfiguration {
    /// <p>Enables or disables the configuration object.</p>
    pub state: crate::types::ArtifactsConcatenationState,
}
impl TranscriptionMessagesConcatenationConfiguration {
    /// <p>Enables or disables the configuration object.</p>
    pub fn state(&self) -> &crate::types::ArtifactsConcatenationState {
        &self.state
    }
}
impl TranscriptionMessagesConcatenationConfiguration {
    /// Creates a new builder-style object to manufacture [`TranscriptionMessagesConcatenationConfiguration`](crate::types::TranscriptionMessagesConcatenationConfiguration).
    pub fn builder() -> crate::types::builders::TranscriptionMessagesConcatenationConfigurationBuilder {
        crate::types::builders::TranscriptionMessagesConcatenationConfigurationBuilder::default()
    }
}

/// A builder for [`TranscriptionMessagesConcatenationConfiguration`](crate::types::TranscriptionMessagesConcatenationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TranscriptionMessagesConcatenationConfigurationBuilder {
    pub(crate) state: ::std::option::Option<crate::types::ArtifactsConcatenationState>,
}
impl TranscriptionMessagesConcatenationConfigurationBuilder {
    /// <p>Enables or disables the configuration object.</p>
    /// This field is required.
    pub fn state(mut self, input: crate::types::ArtifactsConcatenationState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>Enables or disables the configuration object.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::ArtifactsConcatenationState>) -> Self {
        self.state = input;
        self
    }
    /// <p>Enables or disables the configuration object.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::ArtifactsConcatenationState> {
        &self.state
    }
    /// Consumes the builder and constructs a [`TranscriptionMessagesConcatenationConfiguration`](crate::types::TranscriptionMessagesConcatenationConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`state`](crate::types::builders::TranscriptionMessagesConcatenationConfigurationBuilder::state)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::TranscriptionMessagesConcatenationConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TranscriptionMessagesConcatenationConfiguration {
            state: self.state.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "state",
                    "state was not specified but it is required when building TranscriptionMessagesConcatenationConfiguration",
                )
            })?,
        })
    }
}
