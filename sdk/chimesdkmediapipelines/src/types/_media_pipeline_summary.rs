// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of the media pipeline.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MediaPipelineSummary {
    /// <p>The ID of the media pipeline in the summary.</p>
    #[doc(hidden)]
    pub media_pipeline_id: std::option::Option<std::string::String>,
    /// <p>The ARN of the media pipeline in the summary.</p>
    #[doc(hidden)]
    pub media_pipeline_arn: std::option::Option<std::string::String>,
}
impl MediaPipelineSummary {
    /// <p>The ID of the media pipeline in the summary.</p>
    pub fn media_pipeline_id(&self) -> std::option::Option<&str> {
        self.media_pipeline_id.as_deref()
    }
    /// <p>The ARN of the media pipeline in the summary.</p>
    pub fn media_pipeline_arn(&self) -> std::option::Option<&str> {
        self.media_pipeline_arn.as_deref()
    }
}
impl MediaPipelineSummary {
    /// Creates a new builder-style object to manufacture [`MediaPipelineSummary`](crate::types::MediaPipelineSummary).
    pub fn builder() -> crate::types::builders::MediaPipelineSummaryBuilder {
        crate::types::builders::MediaPipelineSummaryBuilder::default()
    }
}

/// A builder for [`MediaPipelineSummary`](crate::types::MediaPipelineSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MediaPipelineSummaryBuilder {
    pub(crate) media_pipeline_id: std::option::Option<std::string::String>,
    pub(crate) media_pipeline_arn: std::option::Option<std::string::String>,
}
impl MediaPipelineSummaryBuilder {
    /// <p>The ID of the media pipeline in the summary.</p>
    pub fn media_pipeline_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.media_pipeline_id = Some(input.into());
        self
    }
    /// <p>The ID of the media pipeline in the summary.</p>
    pub fn set_media_pipeline_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.media_pipeline_id = input;
        self
    }
    /// <p>The ARN of the media pipeline in the summary.</p>
    pub fn media_pipeline_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.media_pipeline_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the media pipeline in the summary.</p>
    pub fn set_media_pipeline_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.media_pipeline_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`MediaPipelineSummary`](crate::types::MediaPipelineSummary).
    pub fn build(self) -> crate::types::MediaPipelineSummary {
        crate::types::MediaPipelineSummary {
            media_pipeline_id: self.media_pipeline_id,
            media_pipeline_arn: self.media_pipeline_arn,
        }
    }
}
