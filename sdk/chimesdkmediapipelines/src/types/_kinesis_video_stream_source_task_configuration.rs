// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The task configuration settings for the Kinesis video stream source.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct KinesisVideoStreamSourceTaskConfiguration {
    /// <p>The ARN of the stream.</p>
    pub stream_arn: ::std::string::String,
    /// <p>The channel ID.</p>
    pub channel_id: i32,
    /// <p>The unique identifier of the fragment to begin processing.</p>
    pub fragment_number: ::std::option::Option<::std::string::String>,
}
impl KinesisVideoStreamSourceTaskConfiguration {
    /// <p>The ARN of the stream.</p>
    pub fn stream_arn(&self) -> &str {
        use std::ops::Deref;
        self.stream_arn.deref()
    }
    /// <p>The channel ID.</p>
    pub fn channel_id(&self) -> i32 {
        self.channel_id
    }
    /// <p>The unique identifier of the fragment to begin processing.</p>
    pub fn fragment_number(&self) -> ::std::option::Option<&str> {
        self.fragment_number.as_deref()
    }
}
impl KinesisVideoStreamSourceTaskConfiguration {
    /// Creates a new builder-style object to manufacture [`KinesisVideoStreamSourceTaskConfiguration`](crate::types::KinesisVideoStreamSourceTaskConfiguration).
    pub fn builder() -> crate::types::builders::KinesisVideoStreamSourceTaskConfigurationBuilder {
        crate::types::builders::KinesisVideoStreamSourceTaskConfigurationBuilder::default()
    }
}

/// A builder for [`KinesisVideoStreamSourceTaskConfiguration`](crate::types::KinesisVideoStreamSourceTaskConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct KinesisVideoStreamSourceTaskConfigurationBuilder {
    pub(crate) stream_arn: ::std::option::Option<::std::string::String>,
    pub(crate) channel_id: ::std::option::Option<i32>,
    pub(crate) fragment_number: ::std::option::Option<::std::string::String>,
}
impl KinesisVideoStreamSourceTaskConfigurationBuilder {
    /// <p>The ARN of the stream.</p>
    /// This field is required.
    pub fn stream_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.stream_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the stream.</p>
    pub fn set_stream_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.stream_arn = input;
        self
    }
    /// <p>The ARN of the stream.</p>
    pub fn get_stream_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.stream_arn
    }
    /// <p>The channel ID.</p>
    /// This field is required.
    pub fn channel_id(mut self, input: i32) -> Self {
        self.channel_id = ::std::option::Option::Some(input);
        self
    }
    /// <p>The channel ID.</p>
    pub fn set_channel_id(mut self, input: ::std::option::Option<i32>) -> Self {
        self.channel_id = input;
        self
    }
    /// <p>The channel ID.</p>
    pub fn get_channel_id(&self) -> &::std::option::Option<i32> {
        &self.channel_id
    }
    /// <p>The unique identifier of the fragment to begin processing.</p>
    pub fn fragment_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.fragment_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the fragment to begin processing.</p>
    pub fn set_fragment_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.fragment_number = input;
        self
    }
    /// <p>The unique identifier of the fragment to begin processing.</p>
    pub fn get_fragment_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.fragment_number
    }
    /// Consumes the builder and constructs a [`KinesisVideoStreamSourceTaskConfiguration`](crate::types::KinesisVideoStreamSourceTaskConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`stream_arn`](crate::types::builders::KinesisVideoStreamSourceTaskConfigurationBuilder::stream_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::KinesisVideoStreamSourceTaskConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::KinesisVideoStreamSourceTaskConfiguration {
            stream_arn: self.stream_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "stream_arn",
                    "stream_arn was not specified but it is required when building KinesisVideoStreamSourceTaskConfiguration",
                )
            })?,
            channel_id: self.channel_id.unwrap_or_default(),
            fragment_number: self.fragment_number,
        })
    }
}
