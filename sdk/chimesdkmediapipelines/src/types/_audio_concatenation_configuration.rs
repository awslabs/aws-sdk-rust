// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The audio artifact concatenation configuration object.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AudioConcatenationConfiguration {
    /// <p>Enables the <i>name</i> object, where <i>name</i> is the name of the configuration object, such as <code>AudioConcatenation</code>.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::AudioArtifactsConcatenationState>,
}
impl AudioConcatenationConfiguration {
    /// <p>Enables the <i>name</i> object, where <i>name</i> is the name of the configuration object, such as <code>AudioConcatenation</code>.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::AudioArtifactsConcatenationState> {
        self.state.as_ref()
    }
}
impl AudioConcatenationConfiguration {
    /// Creates a new builder-style object to manufacture [`AudioConcatenationConfiguration`](crate::types::AudioConcatenationConfiguration).
    pub fn builder() -> crate::types::builders::AudioConcatenationConfigurationBuilder {
        crate::types::builders::AudioConcatenationConfigurationBuilder::default()
    }
}

/// A builder for [`AudioConcatenationConfiguration`](crate::types::AudioConcatenationConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AudioConcatenationConfigurationBuilder {
    pub(crate) state: std::option::Option<crate::types::AudioArtifactsConcatenationState>,
}
impl AudioConcatenationConfigurationBuilder {
    /// <p>Enables the <i>name</i> object, where <i>name</i> is the name of the configuration object, such as <code>AudioConcatenation</code>.</p>
    pub fn state(mut self, input: crate::types::AudioArtifactsConcatenationState) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>Enables the <i>name</i> object, where <i>name</i> is the name of the configuration object, such as <code>AudioConcatenation</code>.</p>
    pub fn set_state(
        mut self,
        input: std::option::Option<crate::types::AudioArtifactsConcatenationState>,
    ) -> Self {
        self.state = input;
        self
    }
    /// Consumes the builder and constructs a [`AudioConcatenationConfiguration`](crate::types::AudioConcatenationConfiguration).
    pub fn build(self) -> crate::types::AudioConcatenationConfiguration {
        crate::types::AudioConcatenationConfiguration { state: self.state }
    }
}
