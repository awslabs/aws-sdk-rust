// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_media_insights_pipeline_configuration_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_media_insights_pipeline_configuration::CreateMediaInsightsPipelineConfigurationInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.elements {
        let mut array_3 = object.key("Elements").start_array();
        for item_4 in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::protocol_serde::shape_media_insights_pipeline_configuration_element::ser_media_insights_pipeline_configuration_element(
                    &mut object_5,
                    item_4,
                )?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.media_insights_pipeline_configuration_name {
        object.key("MediaInsightsPipelineConfigurationName").string(var_6.as_str());
    }
    if let Some(var_7) = &input.real_time_alert_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("RealTimeAlertConfiguration").start_object();
        crate::protocol_serde::shape_real_time_alert_configuration::ser_real_time_alert_configuration(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.resource_access_role_arn {
        object.key("ResourceAccessRoleArn").string(var_9.as_str());
    }
    if let Some(var_10) = &input.tags {
        let mut array_11 = object.key("Tags").start_array();
        for item_12 in var_10 {
            {
                #[allow(unused_mut)]
                let mut object_13 = array_11.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_13, item_12)?;
                object_13.finish();
            }
        }
        array_11.finish();
    }
    Ok(())
}
