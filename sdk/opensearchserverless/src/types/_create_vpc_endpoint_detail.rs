// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Creation details for an OpenSearch Serverless-managed interface endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html">Access Amazon OpenSearch Serverless using an interface endpoint</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateVpcEndpointDetail {
    /// <p>The unique identifier of the endpoint.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The name of the endpoint.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The current status in the endpoint creation process.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::VpcEndpointStatus>,
}
impl CreateVpcEndpointDetail {
    /// <p>The unique identifier of the endpoint.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the endpoint.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The current status in the endpoint creation process.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::VpcEndpointStatus> {
        self.status.as_ref()
    }
}
impl CreateVpcEndpointDetail {
    /// Creates a new builder-style object to manufacture [`CreateVpcEndpointDetail`](crate::types::CreateVpcEndpointDetail).
    pub fn builder() -> crate::types::builders::CreateVpcEndpointDetailBuilder {
        crate::types::builders::CreateVpcEndpointDetailBuilder::default()
    }
}

/// A builder for [`CreateVpcEndpointDetail`](crate::types::CreateVpcEndpointDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateVpcEndpointDetailBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::VpcEndpointStatus>,
}
impl CreateVpcEndpointDetailBuilder {
    /// <p>The unique identifier of the endpoint.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the endpoint.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The name of the endpoint.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the endpoint.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The current status in the endpoint creation process.</p>
    pub fn status(mut self, input: crate::types::VpcEndpointStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The current status in the endpoint creation process.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::VpcEndpointStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateVpcEndpointDetail`](crate::types::CreateVpcEndpointDetail).
    pub fn build(self) -> crate::types::CreateVpcEndpointDetail {
        crate::types::CreateVpcEndpointDetail {
            id: self.id,
            name: self.name,
            status: self.status,
        }
    }
}
