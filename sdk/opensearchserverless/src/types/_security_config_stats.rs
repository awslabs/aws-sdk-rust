// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Statistics for an OpenSearch Serverless security configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SecurityConfigStats {
    /// <p>The number of security configurations in the current account.</p>
    #[doc(hidden)]
    pub saml_config_count: std::option::Option<i64>,
}
impl SecurityConfigStats {
    /// <p>The number of security configurations in the current account.</p>
    pub fn saml_config_count(&self) -> std::option::Option<i64> {
        self.saml_config_count
    }
}
impl SecurityConfigStats {
    /// Creates a new builder-style object to manufacture [`SecurityConfigStats`](crate::types::SecurityConfigStats).
    pub fn builder() -> crate::types::builders::SecurityConfigStatsBuilder {
        crate::types::builders::SecurityConfigStatsBuilder::default()
    }
}

/// A builder for [`SecurityConfigStats`](crate::types::SecurityConfigStats).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SecurityConfigStatsBuilder {
    pub(crate) saml_config_count: std::option::Option<i64>,
}
impl SecurityConfigStatsBuilder {
    /// <p>The number of security configurations in the current account.</p>
    pub fn saml_config_count(mut self, input: i64) -> Self {
        self.saml_config_count = Some(input);
        self
    }
    /// <p>The number of security configurations in the current account.</p>
    pub fn set_saml_config_count(mut self, input: std::option::Option<i64>) -> Self {
        self.saml_config_count = input;
        self
    }
    /// Consumes the builder and constructs a [`SecurityConfigStats`](crate::types::SecurityConfigStats).
    pub fn build(self) -> crate::types::SecurityConfigStats {
        crate::types::SecurityConfigStats {
            saml_config_count: self.saml_config_count,
        }
    }
}
