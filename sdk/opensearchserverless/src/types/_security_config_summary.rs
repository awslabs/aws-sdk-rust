// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of a security configuration for OpenSearch Serverless.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SecurityConfigSummary {
    /// <p>The unique identifier of the security configuration.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The type of security configuration.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::SecurityConfigType>,
    /// <p>The version of the security configuration.</p>
    #[doc(hidden)]
    pub config_version: std::option::Option<std::string::String>,
    /// <p>The description of the security configuration.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The Epoch time when the security configuration was created.</p>
    #[doc(hidden)]
    pub created_date: std::option::Option<i64>,
    /// <p>The timestamp of when the configuration was last modified.</p>
    #[doc(hidden)]
    pub last_modified_date: std::option::Option<i64>,
}
impl SecurityConfigSummary {
    /// <p>The unique identifier of the security configuration.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The type of security configuration.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::SecurityConfigType> {
        self.r#type.as_ref()
    }
    /// <p>The version of the security configuration.</p>
    pub fn config_version(&self) -> std::option::Option<&str> {
        self.config_version.as_deref()
    }
    /// <p>The description of the security configuration.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The Epoch time when the security configuration was created.</p>
    pub fn created_date(&self) -> std::option::Option<i64> {
        self.created_date
    }
    /// <p>The timestamp of when the configuration was last modified.</p>
    pub fn last_modified_date(&self) -> std::option::Option<i64> {
        self.last_modified_date
    }
}
impl SecurityConfigSummary {
    /// Creates a new builder-style object to manufacture [`SecurityConfigSummary`](crate::types::SecurityConfigSummary).
    pub fn builder() -> crate::types::builders::SecurityConfigSummaryBuilder {
        crate::types::builders::SecurityConfigSummaryBuilder::default()
    }
}

/// A builder for [`SecurityConfigSummary`](crate::types::SecurityConfigSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SecurityConfigSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<crate::types::SecurityConfigType>,
    pub(crate) config_version: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) created_date: std::option::Option<i64>,
    pub(crate) last_modified_date: std::option::Option<i64>,
}
impl SecurityConfigSummaryBuilder {
    /// <p>The unique identifier of the security configuration.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the security configuration.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The type of security configuration.</p>
    pub fn r#type(mut self, input: crate::types::SecurityConfigType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The type of security configuration.</p>
    pub fn set_type(
        mut self,
        input: std::option::Option<crate::types::SecurityConfigType>,
    ) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The version of the security configuration.</p>
    pub fn config_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.config_version = Some(input.into());
        self
    }
    /// <p>The version of the security configuration.</p>
    pub fn set_config_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.config_version = input;
        self
    }
    /// <p>The description of the security configuration.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the security configuration.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The Epoch time when the security configuration was created.</p>
    pub fn created_date(mut self, input: i64) -> Self {
        self.created_date = Some(input);
        self
    }
    /// <p>The Epoch time when the security configuration was created.</p>
    pub fn set_created_date(mut self, input: std::option::Option<i64>) -> Self {
        self.created_date = input;
        self
    }
    /// <p>The timestamp of when the configuration was last modified.</p>
    pub fn last_modified_date(mut self, input: i64) -> Self {
        self.last_modified_date = Some(input);
        self
    }
    /// <p>The timestamp of when the configuration was last modified.</p>
    pub fn set_last_modified_date(mut self, input: std::option::Option<i64>) -> Self {
        self.last_modified_date = input;
        self
    }
    /// Consumes the builder and constructs a [`SecurityConfigSummary`](crate::types::SecurityConfigSummary).
    pub fn build(self) -> crate::types::SecurityConfigSummary {
        crate::types::SecurityConfigSummary {
            id: self.id,
            r#type: self.r#type,
            config_version: self.config_version,
            description: self.description,
            created_date: self.created_date,
            last_modified_date: self.last_modified_date,
        }
    }
}
