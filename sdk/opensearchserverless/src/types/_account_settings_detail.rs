// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>OpenSearch Serverless-related information for the current account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AccountSettingsDetail {
    /// <p>The maximum capacity limits for all OpenSearch Serverless collections, in OpenSearch Compute Units (OCUs). These limits are used to scale your collections based on the current workload. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html#serverless-scaling">Autoscaling</a>.</p>
    #[doc(hidden)]
    pub capacity_limits: std::option::Option<crate::types::CapacityLimits>,
}
impl AccountSettingsDetail {
    /// <p>The maximum capacity limits for all OpenSearch Serverless collections, in OpenSearch Compute Units (OCUs). These limits are used to scale your collections based on the current workload. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html#serverless-scaling">Autoscaling</a>.</p>
    pub fn capacity_limits(&self) -> std::option::Option<&crate::types::CapacityLimits> {
        self.capacity_limits.as_ref()
    }
}
impl AccountSettingsDetail {
    /// Creates a new builder-style object to manufacture [`AccountSettingsDetail`](crate::types::AccountSettingsDetail).
    pub fn builder() -> crate::types::builders::AccountSettingsDetailBuilder {
        crate::types::builders::AccountSettingsDetailBuilder::default()
    }
}

/// A builder for [`AccountSettingsDetail`](crate::types::AccountSettingsDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccountSettingsDetailBuilder {
    pub(crate) capacity_limits: std::option::Option<crate::types::CapacityLimits>,
}
impl AccountSettingsDetailBuilder {
    /// <p>The maximum capacity limits for all OpenSearch Serverless collections, in OpenSearch Compute Units (OCUs). These limits are used to scale your collections based on the current workload. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html#serverless-scaling">Autoscaling</a>.</p>
    pub fn capacity_limits(mut self, input: crate::types::CapacityLimits) -> Self {
        self.capacity_limits = Some(input);
        self
    }
    /// <p>The maximum capacity limits for all OpenSearch Serverless collections, in OpenSearch Compute Units (OCUs). These limits are used to scale your collections based on the current workload. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html#serverless-scaling">Autoscaling</a>.</p>
    pub fn set_capacity_limits(
        mut self,
        input: std::option::Option<crate::types::CapacityLimits>,
    ) -> Self {
        self.capacity_limits = input;
        self
    }
    /// Consumes the builder and constructs a [`AccountSettingsDetail`](crate::types::AccountSettingsDetail).
    pub fn build(self) -> crate::types::AccountSettingsDetail {
        crate::types::AccountSettingsDetail {
            capacity_limits: self.capacity_limits,
        }
    }
}
