// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAccessPolicies`](crate::client::fluent_builders::ListAccessPolicies) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAccessPolicies::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(AccessPolicyType)`](crate::client::fluent_builders::ListAccessPolicies::type) / [`set_type(Option<AccessPolicyType>)`](crate::client::fluent_builders::ListAccessPolicies::set_type): <p>The type of access policy.</p>
    ///   - [`resource(Vec<String>)`](crate::client::fluent_builders::ListAccessPolicies::resource) / [`set_resource(Option<Vec<String>>)`](crate::client::fluent_builders::ListAccessPolicies::set_resource): <p>Resource filters (can be collection or indexes) that policies can apply to.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAccessPolicies::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAccessPolicies::set_next_token): <p>If your initial <code>ListAccessPolicies</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListAccessPolicies</code> operations, which returns results in the next page. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAccessPolicies::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAccessPolicies::set_max_results): <p>An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results. The default is 20.</p>
    /// - On success, responds with [`ListAccessPoliciesOutput`](crate::output::ListAccessPoliciesOutput) with field(s):
    ///   - [`access_policy_summaries(Option<Vec<AccessPolicySummary>>)`](crate::output::ListAccessPoliciesOutput::access_policy_summaries): <p>Details about the requested access policies.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAccessPoliciesOutput::next_token): <p>When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.</p>
    /// - On failure, responds with [`SdkError<ListAccessPoliciesError>`](crate::error::ListAccessPoliciesError)
    pub fn list_access_policies(&self) -> crate::client::fluent_builders::ListAccessPolicies {
        crate::client::fluent_builders::ListAccessPolicies::new(self.handle.clone())
    }
}
