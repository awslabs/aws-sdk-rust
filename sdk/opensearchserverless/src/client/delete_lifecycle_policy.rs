// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteLifecyclePolicy`](crate::operation::delete_lifecycle_policy::builders::DeleteLifecyclePolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(LifecyclePolicyType)`](crate::operation::delete_lifecycle_policy::builders::DeleteLifecyclePolicyFluentBuilder::type) / [`set_type(Option<LifecyclePolicyType>)`](crate::operation::delete_lifecycle_policy::builders::DeleteLifecyclePolicyFluentBuilder::set_type):<br>required: **true**<br><p>The type of lifecycle policy.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::delete_lifecycle_policy::builders::DeleteLifecyclePolicyFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::delete_lifecycle_policy::builders::DeleteLifecyclePolicyFluentBuilder::set_name):<br>required: **true**<br><p>The name of the policy to delete.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_lifecycle_policy::builders::DeleteLifecyclePolicyFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_lifecycle_policy::builders::DeleteLifecyclePolicyFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier to ensure idempotency of the request.</p><br>
    /// - On success, responds with [`DeleteLifecyclePolicyOutput`](crate::operation::delete_lifecycle_policy::DeleteLifecyclePolicyOutput)
    /// - On failure, responds with [`SdkError<DeleteLifecyclePolicyError>`](crate::operation::delete_lifecycle_policy::DeleteLifecyclePolicyError)
    pub fn delete_lifecycle_policy(&self) -> crate::operation::delete_lifecycle_policy::builders::DeleteLifecyclePolicyFluentBuilder {
        crate::operation::delete_lifecycle_policy::builders::DeleteLifecyclePolicyFluentBuilder::new(self.handle.clone())
    }
}
