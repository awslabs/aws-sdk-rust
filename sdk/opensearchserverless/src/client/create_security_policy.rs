// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSecurityPolicy`](crate::client::fluent_builders::CreateSecurityPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(SecurityPolicyType)`](crate::client::fluent_builders::CreateSecurityPolicy::type) / [`set_type(Option<SecurityPolicyType>)`](crate::client::fluent_builders::CreateSecurityPolicy::set_type): <p>The type of security policy.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateSecurityPolicy::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateSecurityPolicy::set_name): <p>The name of the policy.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateSecurityPolicy::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateSecurityPolicy::set_description): <p>A description of the policy. Typically used to store information about the permissions defined in the policy.</p>
    ///   - [`policy(impl Into<String>)`](crate::client::fluent_builders::CreateSecurityPolicy::policy) / [`set_policy(Option<String>)`](crate::client::fluent_builders::CreateSecurityPolicy::set_policy): <p>The JSON policy document to use as the content for the new policy.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateSecurityPolicy::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateSecurityPolicy::set_client_token): <p>Unique, case-sensitive identifier to ensure idempotency of the request.</p>
    /// - On success, responds with [`CreateSecurityPolicyOutput`](crate::output::CreateSecurityPolicyOutput) with field(s):
    ///   - [`security_policy_detail(Option<SecurityPolicyDetail>)`](crate::output::CreateSecurityPolicyOutput::security_policy_detail): <p>Details about the created security policy.</p>
    /// - On failure, responds with [`SdkError<CreateSecurityPolicyError>`](crate::error::CreateSecurityPolicyError)
    pub fn create_security_policy(&self) -> crate::client::fluent_builders::CreateSecurityPolicy {
        crate::client::fluent_builders::CreateSecurityPolicy::new(self.handle.clone())
    }
}
