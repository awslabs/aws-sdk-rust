// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateVpcEndpoint`](crate::client::fluent_builders::CreateVpcEndpoint) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateVpcEndpoint::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateVpcEndpoint::set_name): <p>The name of the interface endpoint.</p>
    ///   - [`vpc_id(impl Into<String>)`](crate::client::fluent_builders::CreateVpcEndpoint::vpc_id) / [`set_vpc_id(Option<String>)`](crate::client::fluent_builders::CreateVpcEndpoint::set_vpc_id): <p>The ID of the VPC from which you'll access OpenSearch Serverless.</p>
    ///   - [`subnet_ids(Vec<String>)`](crate::client::fluent_builders::CreateVpcEndpoint::subnet_ids) / [`set_subnet_ids(Option<Vec<String>>)`](crate::client::fluent_builders::CreateVpcEndpoint::set_subnet_ids): <p>The ID of one or more subnets from which you'll access OpenSearch Serverless.</p>
    ///   - [`security_group_ids(Vec<String>)`](crate::client::fluent_builders::CreateVpcEndpoint::security_group_ids) / [`set_security_group_ids(Option<Vec<String>>)`](crate::client::fluent_builders::CreateVpcEndpoint::set_security_group_ids): <p>The unique identifiers of the security groups that define the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateVpcEndpoint::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateVpcEndpoint::set_client_token): <p>Unique, case-sensitive identifier to ensure idempotency of the request.</p>
    /// - On success, responds with [`CreateVpcEndpointOutput`](crate::output::CreateVpcEndpointOutput) with field(s):
    ///   - [`create_vpc_endpoint_detail(Option<CreateVpcEndpointDetail>)`](crate::output::CreateVpcEndpointOutput::create_vpc_endpoint_detail): <p>Details about the created interface VPC endpoint.</p>
    /// - On failure, responds with [`SdkError<CreateVpcEndpointError>`](crate::error::CreateVpcEndpointError)
    pub fn create_vpc_endpoint(&self) -> crate::client::fluent_builders::CreateVpcEndpoint {
        crate::client::fluent_builders::CreateVpcEndpoint::new(self.handle.clone())
    }
}
