// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListLifecyclePolicies`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(LifecyclePolicyType)`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::type) / [`set_type(Option<LifecyclePolicyType>)`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::set_type):<br>required: **true**<br><p>The type of lifecycle policy.</p><br>
    ///   - [`resources(impl Into<String>)`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::resources) / [`set_resources(Option<Vec::<String>>)`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::set_resources):<br>required: **false**<br><p>Resource filters that policies can apply to. Currently, the only supported resource type is <code>index</code>.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::set_next_token):<br>required: **false**<br><p>If your initial <code>ListLifecyclePolicies</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListLifecyclePolicies</code> operations, which returns results in the next page.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::set_max_results):<br>required: **false**<br><p>An optional parameter that specifies the maximum number of results to return. You can use use <code>nextToken</code> to get the next page of results. The default is 10.</p><br>
    /// - On success, responds with [`ListLifecyclePoliciesOutput`](crate::operation::list_lifecycle_policies::ListLifecyclePoliciesOutput) with field(s):
    ///   - [`lifecycle_policy_summaries(Option<Vec::<LifecyclePolicySummary>>)`](crate::operation::list_lifecycle_policies::ListLifecyclePoliciesOutput::lifecycle_policy_summaries): <p>Details about the requested lifecycle policies.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_lifecycle_policies::ListLifecyclePoliciesOutput::next_token): <p>When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.</p>
    /// - On failure, responds with [`SdkError<ListLifecyclePoliciesError>`](crate::operation::list_lifecycle_policies::ListLifecyclePoliciesError)
    pub fn list_lifecycle_policies(&self) -> crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder {
        crate::operation::list_lifecycle_policies::builders::ListLifecyclePoliciesFluentBuilder::new(self.handle.clone())
    }
}
