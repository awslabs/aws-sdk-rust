// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCollection`](crate::client::fluent_builders::CreateCollection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateCollection::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateCollection::set_name): <p>Name of the collection.</p>
    ///   - [`r#type(CollectionType)`](crate::client::fluent_builders::CreateCollection::type) / [`set_type(Option<CollectionType>)`](crate::client::fluent_builders::CreateCollection::set_type): <p>The type of collection.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateCollection::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateCollection::set_description): <p>Description of the collection.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateCollection::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateCollection::set_tags): <p>An arbitrary set of tags (keyâ€“value pairs) to associate with the OpenSearch Serverless collection.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateCollection::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateCollection::set_client_token): <p>Unique, case-sensitive identifier to ensure idempotency of the request.</p>
    /// - On success, responds with [`CreateCollectionOutput`](crate::output::CreateCollectionOutput) with field(s):
    ///   - [`create_collection_detail(Option<CreateCollectionDetail>)`](crate::output::CreateCollectionOutput::create_collection_detail): <p>Details about the collection.</p>
    /// - On failure, responds with [`SdkError<CreateCollectionError>`](crate::error::CreateCollectionError)
    pub fn create_collection(&self) -> crate::client::fluent_builders::CreateCollection {
        crate::client::fluent_builders::CreateCollection::new(self.handle.clone())
    }
}
