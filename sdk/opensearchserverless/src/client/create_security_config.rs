// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSecurityConfig`](crate::client::fluent_builders::CreateSecurityConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(SecurityConfigType)`](crate::client::fluent_builders::CreateSecurityConfig::type) / [`set_type(Option<SecurityConfigType>)`](crate::client::fluent_builders::CreateSecurityConfig::set_type): <p>The type of security configuration.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateSecurityConfig::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateSecurityConfig::set_name): <p>The name of the security configuration.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateSecurityConfig::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateSecurityConfig::set_description): <p>A description of the security configuration.</p>
    ///   - [`saml_options(SamlConfigOptions)`](crate::client::fluent_builders::CreateSecurityConfig::saml_options) / [`set_saml_options(Option<SamlConfigOptions>)`](crate::client::fluent_builders::CreateSecurityConfig::set_saml_options): <p>Describes SAML options in in the form of a key-value map.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateSecurityConfig::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateSecurityConfig::set_client_token): <p>Unique, case-sensitive identifier to ensure idempotency of the request.</p>
    /// - On success, responds with [`CreateSecurityConfigOutput`](crate::output::CreateSecurityConfigOutput) with field(s):
    ///   - [`security_config_detail(Option<SecurityConfigDetail>)`](crate::output::CreateSecurityConfigOutput::security_config_detail): <p>Details about the created security configuration. </p>
    /// - On failure, responds with [`SdkError<CreateSecurityConfigError>`](crate::error::CreateSecurityConfigError)
    pub fn create_security_config(&self) -> crate::client::fluent_builders::CreateSecurityConfig {
        crate::client::fluent_builders::CreateSecurityConfig::new(self.handle.clone())
    }
}
