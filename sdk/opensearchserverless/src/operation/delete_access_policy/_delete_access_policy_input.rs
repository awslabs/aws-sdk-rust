// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteAccessPolicyInput {
    /// <p>The type of policy.</p>
    pub r#type: ::std::option::Option<crate::types::AccessPolicyType>,
    /// <p>The name of the policy to delete.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>Unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl DeleteAccessPolicyInput {
    /// <p>The type of policy.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::AccessPolicyType> {
        self.r#type.as_ref()
    }
    /// <p>The name of the policy to delete.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl DeleteAccessPolicyInput {
    /// Creates a new builder-style object to manufacture [`DeleteAccessPolicyInput`](crate::operation::delete_access_policy::DeleteAccessPolicyInput).
    pub fn builder() -> crate::operation::delete_access_policy::builders::DeleteAccessPolicyInputBuilder {
        crate::operation::delete_access_policy::builders::DeleteAccessPolicyInputBuilder::default()
    }
}

/// A builder for [`DeleteAccessPolicyInput`](crate::operation::delete_access_policy::DeleteAccessPolicyInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteAccessPolicyInputBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::AccessPolicyType>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl DeleteAccessPolicyInputBuilder {
    /// <p>The type of policy.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::AccessPolicyType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of policy.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::AccessPolicyType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of policy.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::AccessPolicyType> {
        &self.r#type
    }
    /// <p>The name of the policy to delete.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the policy to delete.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the policy to delete.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>Unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>Unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`DeleteAccessPolicyInput`](crate::operation::delete_access_policy::DeleteAccessPolicyInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_access_policy::DeleteAccessPolicyInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::delete_access_policy::DeleteAccessPolicyInput {
            r#type: self.r#type,
            name: self.name,
            client_token: self.client_token,
        })
    }
}
