// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchGetVpcEndpointOutput {
    /// <p>Details about the specified VPC endpoint.</p>
    #[doc(hidden)]
    pub vpc_endpoint_details: std::option::Option<std::vec::Vec<crate::types::VpcEndpointDetail>>,
    /// <p>Error information for a failed request.</p>
    #[doc(hidden)]
    pub vpc_endpoint_error_details:
        std::option::Option<std::vec::Vec<crate::types::VpcEndpointErrorDetail>>,
    _request_id: Option<String>,
}
impl BatchGetVpcEndpointOutput {
    /// <p>Details about the specified VPC endpoint.</p>
    pub fn vpc_endpoint_details(&self) -> std::option::Option<&[crate::types::VpcEndpointDetail]> {
        self.vpc_endpoint_details.as_deref()
    }
    /// <p>Error information for a failed request.</p>
    pub fn vpc_endpoint_error_details(
        &self,
    ) -> std::option::Option<&[crate::types::VpcEndpointErrorDetail]> {
        self.vpc_endpoint_error_details.as_deref()
    }
}
impl aws_http::request_id::RequestId for BatchGetVpcEndpointOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchGetVpcEndpointOutput {
    /// Creates a new builder-style object to manufacture [`BatchGetVpcEndpointOutput`](crate::operation::batch_get_vpc_endpoint::BatchGetVpcEndpointOutput).
    pub fn builder(
    ) -> crate::operation::batch_get_vpc_endpoint::builders::BatchGetVpcEndpointOutputBuilder {
        crate::operation::batch_get_vpc_endpoint::builders::BatchGetVpcEndpointOutputBuilder::default()
    }
}

/// A builder for [`BatchGetVpcEndpointOutput`](crate::operation::batch_get_vpc_endpoint::BatchGetVpcEndpointOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchGetVpcEndpointOutputBuilder {
    pub(crate) vpc_endpoint_details:
        std::option::Option<std::vec::Vec<crate::types::VpcEndpointDetail>>,
    pub(crate) vpc_endpoint_error_details:
        std::option::Option<std::vec::Vec<crate::types::VpcEndpointErrorDetail>>,
    _request_id: Option<String>,
}
impl BatchGetVpcEndpointOutputBuilder {
    /// Appends an item to `vpc_endpoint_details`.
    ///
    /// To override the contents of this collection use [`set_vpc_endpoint_details`](Self::set_vpc_endpoint_details).
    ///
    /// <p>Details about the specified VPC endpoint.</p>
    pub fn vpc_endpoint_details(mut self, input: crate::types::VpcEndpointDetail) -> Self {
        let mut v = self.vpc_endpoint_details.unwrap_or_default();
        v.push(input);
        self.vpc_endpoint_details = Some(v);
        self
    }
    /// <p>Details about the specified VPC endpoint.</p>
    pub fn set_vpc_endpoint_details(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::VpcEndpointDetail>>,
    ) -> Self {
        self.vpc_endpoint_details = input;
        self
    }
    /// Appends an item to `vpc_endpoint_error_details`.
    ///
    /// To override the contents of this collection use [`set_vpc_endpoint_error_details`](Self::set_vpc_endpoint_error_details).
    ///
    /// <p>Error information for a failed request.</p>
    pub fn vpc_endpoint_error_details(
        mut self,
        input: crate::types::VpcEndpointErrorDetail,
    ) -> Self {
        let mut v = self.vpc_endpoint_error_details.unwrap_or_default();
        v.push(input);
        self.vpc_endpoint_error_details = Some(v);
        self
    }
    /// <p>Error information for a failed request.</p>
    pub fn set_vpc_endpoint_error_details(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::VpcEndpointErrorDetail>>,
    ) -> Self {
        self.vpc_endpoint_error_details = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetVpcEndpointOutput`](crate::operation::batch_get_vpc_endpoint::BatchGetVpcEndpointOutput).
    pub fn build(self) -> crate::operation::batch_get_vpc_endpoint::BatchGetVpcEndpointOutput {
        crate::operation::batch_get_vpc_endpoint::BatchGetVpcEndpointOutput {
            vpc_endpoint_details: self.vpc_endpoint_details,
            vpc_endpoint_error_details: self.vpc_endpoint_error_details,
            _request_id: self._request_id,
        }
    }
}
