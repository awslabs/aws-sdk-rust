// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[non_exhaustive]
#[derive(std::fmt::Debug)]
pub enum Error {
    DocumentServiceException(crate::error::DocumentServiceException),
    SearchException(crate::error::SearchException),
    Unhandled(Box<dyn std::error::Error + Send + Sync + 'static>),
}
impl std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::DocumentServiceException(inner) => inner.fmt(f),
            Error::SearchException(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SearchError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::SearchError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SearchErrorKind::SearchException(inner) => {
                    Error::SearchException(inner)
                }
                crate::error::SearchErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SuggestError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::SuggestError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SuggestErrorKind::SearchException(inner) => {
                    Error::SearchException(inner)
                }
                crate::error::SuggestErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UploadDocumentsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UploadDocumentsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UploadDocumentsErrorKind::DocumentServiceException(inner) => {
                    Error::DocumentServiceException(inner)
                }
                crate::error::UploadDocumentsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl std::error::Error for Error {}
