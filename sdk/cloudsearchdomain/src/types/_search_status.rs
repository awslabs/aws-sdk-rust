// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the resource id (<code>rid</code>) and the time it took to process the request (<code>timems</code>).</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SearchStatus {
    /// <p>How long it took to process the request, in milliseconds.</p>
    #[doc(hidden)]
    pub timems: i64,
    /// <p>The encrypted resource ID for the request.</p>
    #[doc(hidden)]
    pub rid: std::option::Option<std::string::String>,
}
impl SearchStatus {
    /// <p>How long it took to process the request, in milliseconds.</p>
    pub fn timems(&self) -> i64 {
        self.timems
    }
    /// <p>The encrypted resource ID for the request.</p>
    pub fn rid(&self) -> std::option::Option<&str> {
        self.rid.as_deref()
    }
}
impl SearchStatus {
    /// Creates a new builder-style object to manufacture [`SearchStatus`](crate::types::SearchStatus).
    pub fn builder() -> crate::types::builders::SearchStatusBuilder {
        crate::types::builders::SearchStatusBuilder::default()
    }
}

/// A builder for [`SearchStatus`](crate::types::SearchStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SearchStatusBuilder {
    pub(crate) timems: std::option::Option<i64>,
    pub(crate) rid: std::option::Option<std::string::String>,
}
impl SearchStatusBuilder {
    /// <p>How long it took to process the request, in milliseconds.</p>
    pub fn timems(mut self, input: i64) -> Self {
        self.timems = Some(input);
        self
    }
    /// <p>How long it took to process the request, in milliseconds.</p>
    pub fn set_timems(mut self, input: std::option::Option<i64>) -> Self {
        self.timems = input;
        self
    }
    /// <p>The encrypted resource ID for the request.</p>
    pub fn rid(mut self, input: impl Into<std::string::String>) -> Self {
        self.rid = Some(input.into());
        self
    }
    /// <p>The encrypted resource ID for the request.</p>
    pub fn set_rid(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.rid = input;
        self
    }
    /// Consumes the builder and constructs a [`SearchStatus`](crate::types::SearchStatus).
    pub fn build(self) -> crate::types::SearchStatus {
        crate::types::SearchStatus {
            timems: self.timems.unwrap_or_default(),
            rid: self.rid,
        }
    }
}
