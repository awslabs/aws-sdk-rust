// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn buffer_options_correct_errors(
    mut builder: crate::types::builders::BufferOptionsBuilder,
) -> crate::types::builders::BufferOptionsBuilder {
    if builder.persistent_buffer_enabled.is_none() {
        builder.persistent_buffer_enabled = Some(Default::default())
    }
    builder
}

pub(crate) fn encryption_at_rest_options_correct_errors(
    mut builder: crate::types::builders::EncryptionAtRestOptionsBuilder,
) -> crate::types::builders::EncryptionAtRestOptionsBuilder {
    if builder.kms_key_arn.is_none() {
        builder.kms_key_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}

pub(crate) fn cloud_watch_log_destination_correct_errors(
    mut builder: crate::types::builders::CloudWatchLogDestinationBuilder,
) -> crate::types::builders::CloudWatchLogDestinationBuilder {
    if builder.log_group.is_none() {
        builder.log_group = Some(Default::default())
    }
    builder
}

pub(crate) fn vpc_options_correct_errors(mut builder: crate::types::builders::VpcOptionsBuilder) -> crate::types::builders::VpcOptionsBuilder {
    if builder.subnet_ids.is_none() {
        builder.subnet_ids = Some(Default::default())
    }
    builder
}

pub(crate) fn vpc_attachment_options_correct_errors(
    mut builder: crate::types::builders::VpcAttachmentOptionsBuilder,
) -> crate::types::builders::VpcAttachmentOptionsBuilder {
    if builder.attach_to_vpc.is_none() {
        builder.attach_to_vpc = Some(Default::default())
    }
    builder
}
