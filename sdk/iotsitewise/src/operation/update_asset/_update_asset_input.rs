// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateAssetInput {
    /// <p>The ID of the asset to update.</p>
    #[doc(hidden)]
    pub asset_id: std::option::Option<std::string::String>,
    /// <p>A friendly name for the asset.</p>
    #[doc(hidden)]
    pub asset_name: std::option::Option<std::string::String>,
    /// <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
    /// <p>A description for the asset.</p>
    #[doc(hidden)]
    pub asset_description: std::option::Option<std::string::String>,
}
impl UpdateAssetInput {
    /// <p>The ID of the asset to update.</p>
    pub fn asset_id(&self) -> std::option::Option<&str> {
        self.asset_id.as_deref()
    }
    /// <p>A friendly name for the asset.</p>
    pub fn asset_name(&self) -> std::option::Option<&str> {
        self.asset_name.as_deref()
    }
    /// <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>A description for the asset.</p>
    pub fn asset_description(&self) -> std::option::Option<&str> {
        self.asset_description.as_deref()
    }
}
impl UpdateAssetInput {
    /// Creates a new builder-style object to manufacture [`UpdateAssetInput`](crate::operation::update_asset::UpdateAssetInput).
    pub fn builder() -> crate::operation::update_asset::builders::UpdateAssetInputBuilder {
        crate::operation::update_asset::builders::UpdateAssetInputBuilder::default()
    }
}

/// A builder for [`UpdateAssetInput`](crate::operation::update_asset::UpdateAssetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateAssetInputBuilder {
    pub(crate) asset_id: std::option::Option<std::string::String>,
    pub(crate) asset_name: std::option::Option<std::string::String>,
    pub(crate) client_token: std::option::Option<std::string::String>,
    pub(crate) asset_description: std::option::Option<std::string::String>,
}
impl UpdateAssetInputBuilder {
    /// <p>The ID of the asset to update.</p>
    pub fn asset_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.asset_id = Some(input.into());
        self
    }
    /// <p>The ID of the asset to update.</p>
    pub fn set_asset_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.asset_id = input;
        self
    }
    /// <p>A friendly name for the asset.</p>
    pub fn asset_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.asset_name = Some(input.into());
        self
    }
    /// <p>A friendly name for the asset.</p>
    pub fn set_asset_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.asset_name = input;
        self
    }
    /// <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>A description for the asset.</p>
    pub fn asset_description(mut self, input: impl Into<std::string::String>) -> Self {
        self.asset_description = Some(input.into());
        self
    }
    /// <p>A description for the asset.</p>
    pub fn set_asset_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.asset_description = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateAssetInput`](crate::operation::update_asset::UpdateAssetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_asset::UpdateAssetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::update_asset::UpdateAssetInput {
            asset_id: self.asset_id,
            asset_name: self.asset_name,
            client_token: self.client_token,
            asset_description: self.asset_description,
        })
    }
}
