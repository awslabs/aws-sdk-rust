// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeProjectOutput {
    /// <p>The ID of the project.</p>
    #[doc(hidden)]
    pub project_id: std::option::Option<std::string::String>,
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p>
    /// <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code> </p>
    #[doc(hidden)]
    pub project_arn: std::option::Option<std::string::String>,
    /// <p>The name of the project.</p>
    #[doc(hidden)]
    pub project_name: std::option::Option<std::string::String>,
    /// <p>The ID of the portal that the project is in.</p>
    #[doc(hidden)]
    pub portal_id: std::option::Option<std::string::String>,
    /// <p>The project's description.</p>
    #[doc(hidden)]
    pub project_description: std::option::Option<std::string::String>,
    /// <p>The date the project was created, in Unix epoch time.</p>
    #[doc(hidden)]
    pub project_creation_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date the project was last updated, in Unix epoch time.</p>
    #[doc(hidden)]
    pub project_last_update_date: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl DescribeProjectOutput {
    /// <p>The ID of the project.</p>
    pub fn project_id(&self) -> std::option::Option<&str> {
        self.project_id.as_deref()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p>
    /// <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code> </p>
    pub fn project_arn(&self) -> std::option::Option<&str> {
        self.project_arn.as_deref()
    }
    /// <p>The name of the project.</p>
    pub fn project_name(&self) -> std::option::Option<&str> {
        self.project_name.as_deref()
    }
    /// <p>The ID of the portal that the project is in.</p>
    pub fn portal_id(&self) -> std::option::Option<&str> {
        self.portal_id.as_deref()
    }
    /// <p>The project's description.</p>
    pub fn project_description(&self) -> std::option::Option<&str> {
        self.project_description.as_deref()
    }
    /// <p>The date the project was created, in Unix epoch time.</p>
    pub fn project_creation_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.project_creation_date.as_ref()
    }
    /// <p>The date the project was last updated, in Unix epoch time.</p>
    pub fn project_last_update_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.project_last_update_date.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeProjectOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeProjectOutput {
    /// Creates a new builder-style object to manufacture [`DescribeProjectOutput`](crate::operation::describe_project::DescribeProjectOutput).
    pub fn builder() -> crate::operation::describe_project::builders::DescribeProjectOutputBuilder {
        crate::operation::describe_project::builders::DescribeProjectOutputBuilder::default()
    }
}

/// A builder for [`DescribeProjectOutput`](crate::operation::describe_project::DescribeProjectOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeProjectOutputBuilder {
    pub(crate) project_id: std::option::Option<std::string::String>,
    pub(crate) project_arn: std::option::Option<std::string::String>,
    pub(crate) project_name: std::option::Option<std::string::String>,
    pub(crate) portal_id: std::option::Option<std::string::String>,
    pub(crate) project_description: std::option::Option<std::string::String>,
    pub(crate) project_creation_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) project_last_update_date: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl DescribeProjectOutputBuilder {
    /// <p>The ID of the project.</p>
    pub fn project_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.project_id = Some(input.into());
        self
    }
    /// <p>The ID of the project.</p>
    pub fn set_project_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.project_id = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p>
    /// <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code> </p>
    pub fn project_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.project_arn = Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p>
    /// <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code> </p>
    pub fn set_project_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.project_arn = input;
        self
    }
    /// <p>The name of the project.</p>
    pub fn project_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.project_name = Some(input.into());
        self
    }
    /// <p>The name of the project.</p>
    pub fn set_project_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.project_name = input;
        self
    }
    /// <p>The ID of the portal that the project is in.</p>
    pub fn portal_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.portal_id = Some(input.into());
        self
    }
    /// <p>The ID of the portal that the project is in.</p>
    pub fn set_portal_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.portal_id = input;
        self
    }
    /// <p>The project's description.</p>
    pub fn project_description(mut self, input: impl Into<std::string::String>) -> Self {
        self.project_description = Some(input.into());
        self
    }
    /// <p>The project's description.</p>
    pub fn set_project_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.project_description = input;
        self
    }
    /// <p>The date the project was created, in Unix epoch time.</p>
    pub fn project_creation_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.project_creation_date = Some(input);
        self
    }
    /// <p>The date the project was created, in Unix epoch time.</p>
    pub fn set_project_creation_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.project_creation_date = input;
        self
    }
    /// <p>The date the project was last updated, in Unix epoch time.</p>
    pub fn project_last_update_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.project_last_update_date = Some(input);
        self
    }
    /// <p>The date the project was last updated, in Unix epoch time.</p>
    pub fn set_project_last_update_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.project_last_update_date = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeProjectOutput`](crate::operation::describe_project::DescribeProjectOutput).
    pub fn build(self) -> crate::operation::describe_project::DescribeProjectOutput {
        crate::operation::describe_project::DescribeProjectOutput {
            project_id: self.project_id,
            project_arn: self.project_arn,
            project_name: self.project_name,
            portal_id: self.portal_id,
            project_description: self.project_description,
            project_creation_date: self.project_creation_date,
            project_last_update_date: self.project_last_update_date,
            _request_id: self._request_id,
        }
    }
}
