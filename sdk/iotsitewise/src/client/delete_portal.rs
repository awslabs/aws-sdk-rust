// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePortal`](crate::operation::delete_portal::builders::DeletePortalFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`portal_id(impl Into<String>)`](crate::operation::delete_portal::builders::DeletePortalFluentBuilder::portal_id) / [`set_portal_id(Option<String>)`](crate::operation::delete_portal::builders::DeletePortalFluentBuilder::set_portal_id): <p>The ID of the portal to delete.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_portal::builders::DeletePortalFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_portal::builders::DeletePortalFluentBuilder::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DeletePortalOutput`](crate::operation::delete_portal::DeletePortalOutput) with field(s):
    ///   - [`portal_status(Option<PortalStatus>)`](crate::operation::delete_portal::DeletePortalOutput::portal_status): <p>The status of the portal, which contains a state (<code>DELETING</code> after successfully calling this operation) and any error message.</p>
    /// - On failure, responds with [`SdkError<DeletePortalError>`](crate::operation::delete_portal::DeletePortalError)
    pub fn delete_portal(
        &self,
    ) -> crate::operation::delete_portal::builders::DeletePortalFluentBuilder {
        crate::operation::delete_portal::builders::DeletePortalFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
