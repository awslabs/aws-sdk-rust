// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteAccessPolicy`](crate::operation::delete_access_policy::builders::DeleteAccessPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_policy_id(impl Into<String>)`](crate::operation::delete_access_policy::builders::DeleteAccessPolicyFluentBuilder::access_policy_id) / [`set_access_policy_id(Option<String>)`](crate::operation::delete_access_policy::builders::DeleteAccessPolicyFluentBuilder::set_access_policy_id): <p>The ID of the access policy to be deleted.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_access_policy::builders::DeleteAccessPolicyFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_access_policy::builders::DeleteAccessPolicyFluentBuilder::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DeleteAccessPolicyOutput`](crate::operation::delete_access_policy::DeleteAccessPolicyOutput)
    /// - On failure, responds with [`SdkError<DeleteAccessPolicyError>`](crate::operation::delete_access_policy::DeleteAccessPolicyError)
    pub fn delete_access_policy(
        &self,
    ) -> crate::operation::delete_access_policy::builders::DeleteAccessPolicyFluentBuilder {
        crate::operation::delete_access_policy::builders::DeleteAccessPolicyFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
