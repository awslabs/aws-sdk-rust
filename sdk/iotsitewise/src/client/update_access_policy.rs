// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateAccessPolicy`](crate::client::fluent_builders::UpdateAccessPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_policy_id(impl Into<String>)`](crate::client::fluent_builders::UpdateAccessPolicy::access_policy_id) / [`set_access_policy_id(Option<String>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_access_policy_id): <p>The ID of the access policy.</p>
    ///   - [`access_policy_identity(Identity)`](crate::client::fluent_builders::UpdateAccessPolicy::access_policy_identity) / [`set_access_policy_identity(Option<Identity>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_access_policy_identity): <p>The identity for this access policy. Choose an IAM Identity Center user, an IAM Identity Center group, or an IAM user.</p>
    ///   - [`access_policy_resource(Resource)`](crate::client::fluent_builders::UpdateAccessPolicy::access_policy_resource) / [`set_access_policy_resource(Option<Resource>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_access_policy_resource): <p>The IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.</p>
    ///   - [`access_policy_permission(Permission)`](crate::client::fluent_builders::UpdateAccessPolicy::access_policy_permission) / [`set_access_policy_permission(Option<Permission>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_access_policy_permission): <p>The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdateAccessPolicy::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`UpdateAccessPolicyOutput`](crate::output::UpdateAccessPolicyOutput)
    /// - On failure, responds with [`SdkError<UpdateAccessPolicyError>`](crate::error::UpdateAccessPolicyError)
    pub fn update_access_policy(&self) -> crate::client::fluent_builders::UpdateAccessPolicy {
        crate::client::fluent_builders::UpdateAccessPolicy::new(self.handle.clone())
    }
}
