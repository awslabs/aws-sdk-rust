// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAssets`](crate::client::fluent_builders::ListAssets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssets::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssets::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    ///   - [`asset_model_id(impl Into<String>)`](crate::client::fluent_builders::ListAssets::asset_model_id) / [`set_asset_model_id(Option<String>)`](crate::client::fluent_builders::ListAssets::set_asset_model_id): <p>The ID of the asset model by which to filter the list of assets. This parameter is required if you choose <code>ALL</code> for <code>filter</code>.</p>
    ///   - [`filter(ListAssetsFilter)`](crate::client::fluent_builders::ListAssets::filter) / [`set_filter(Option<ListAssetsFilter>)`](crate::client::fluent_builders::ListAssets::set_filter): <p>The filter for the requested list of assets. Choose one of the following options:</p>  <ul>   <li> <p> <code>ALL</code> – The list includes all assets for a given asset model ID. The <code>assetModelId</code> parameter is required if you filter by <code>ALL</code>.</p> </li>   <li> <p> <code>TOP_LEVEL</code> – The list includes only top-level assets in the asset hierarchy tree.</p> </li>  </ul>  <p>Default: <code>ALL</code> </p>
    /// - On success, responds with [`ListAssetsOutput`](crate::output::ListAssetsOutput) with field(s):
    ///   - [`asset_summaries(Option<Vec<AssetSummary>>)`](crate::output::ListAssetsOutput::asset_summaries): <p>A list that summarizes each asset.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssetsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListAssetsError>`](crate::error::ListAssetsError)
    pub fn list_assets(&self) -> crate::client::fluent_builders::ListAssets {
        crate::client::fluent_builders::ListAssets::new(self.handle.clone())
    }
}
