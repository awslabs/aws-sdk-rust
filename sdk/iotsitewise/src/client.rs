// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for AWS IoT SiteWise
///
/// Client for invoking operations on AWS IoT SiteWise. Each operation on AWS IoT SiteWise is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_iotsitewise::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_iotsitewise::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_iotsitewise::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AssociateAssets`](crate::client::fluent_builders::AssociateAssets) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::AssociateAssets::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::AssociateAssets::set_asset_id): <p>The ID of the parent asset.</p>
    ///   - [`hierarchy_id(impl Into<String>)`](crate::client::fluent_builders::AssociateAssets::hierarchy_id) / [`set_hierarchy_id(Option<String>)`](crate::client::fluent_builders::AssociateAssets::set_hierarchy_id): <p>The ID of a hierarchy in the parent asset's model. Hierarchies allow different groupings of assets to be formed that all come from the same asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`child_asset_id(impl Into<String>)`](crate::client::fluent_builders::AssociateAssets::child_asset_id) / [`set_child_asset_id(Option<String>)`](crate::client::fluent_builders::AssociateAssets::set_child_asset_id): <p>The ID of the child asset to be associated.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::AssociateAssets::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::AssociateAssets::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`AssociateAssetsOutput`](crate::output::AssociateAssetsOutput)

    /// - On failure, responds with [`SdkError<AssociateAssetsError>`](crate::error::AssociateAssetsError)
    pub fn associate_assets(&self) -> crate::client::fluent_builders::AssociateAssets {
        crate::client::fluent_builders::AssociateAssets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`AssociateTimeSeriesToAssetProperty`](crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alias(impl Into<String>)`](crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty::alias) / [`set_alias(Option<String>)`](crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty::set_alias): <p>The alias that identifies the time series.</p>
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty::set_asset_id): <p>The ID of the asset in which the asset property was created.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty::set_property_id): <p>The ID of the asset property.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`AssociateTimeSeriesToAssetPropertyOutput`](crate::output::AssociateTimeSeriesToAssetPropertyOutput)

    /// - On failure, responds with [`SdkError<AssociateTimeSeriesToAssetPropertyError>`](crate::error::AssociateTimeSeriesToAssetPropertyError)
    pub fn associate_time_series_to_asset_property(
        &self,
    ) -> crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty {
        crate::client::fluent_builders::AssociateTimeSeriesToAssetProperty::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BatchAssociateProjectAssets`](crate::client::fluent_builders::BatchAssociateProjectAssets) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_id(impl Into<String>)`](crate::client::fluent_builders::BatchAssociateProjectAssets::project_id) / [`set_project_id(Option<String>)`](crate::client::fluent_builders::BatchAssociateProjectAssets::set_project_id): <p>The ID of the project to which to associate the assets.</p>
    ///   - [`asset_ids(Vec<String>)`](crate::client::fluent_builders::BatchAssociateProjectAssets::asset_ids) / [`set_asset_ids(Option<Vec<String>>)`](crate::client::fluent_builders::BatchAssociateProjectAssets::set_asset_ids): <p>The IDs of the assets to be associated to the project.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::BatchAssociateProjectAssets::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::BatchAssociateProjectAssets::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`BatchAssociateProjectAssetsOutput`](crate::output::BatchAssociateProjectAssetsOutput) with field(s):
    ///   - [`errors(Option<Vec<AssetErrorDetails>>)`](crate::output::BatchAssociateProjectAssetsOutput::errors): <p>A list of associated error information, if any.</p>
    /// - On failure, responds with [`SdkError<BatchAssociateProjectAssetsError>`](crate::error::BatchAssociateProjectAssetsError)
    pub fn batch_associate_project_assets(
        &self,
    ) -> crate::client::fluent_builders::BatchAssociateProjectAssets {
        crate::client::fluent_builders::BatchAssociateProjectAssets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BatchDisassociateProjectAssets`](crate::client::fluent_builders::BatchDisassociateProjectAssets) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_id(impl Into<String>)`](crate::client::fluent_builders::BatchDisassociateProjectAssets::project_id) / [`set_project_id(Option<String>)`](crate::client::fluent_builders::BatchDisassociateProjectAssets::set_project_id): <p>The ID of the project from which to disassociate the assets.</p>
    ///   - [`asset_ids(Vec<String>)`](crate::client::fluent_builders::BatchDisassociateProjectAssets::asset_ids) / [`set_asset_ids(Option<Vec<String>>)`](crate::client::fluent_builders::BatchDisassociateProjectAssets::set_asset_ids): <p>The IDs of the assets to be disassociated from the project.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::BatchDisassociateProjectAssets::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::BatchDisassociateProjectAssets::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`BatchDisassociateProjectAssetsOutput`](crate::output::BatchDisassociateProjectAssetsOutput) with field(s):
    ///   - [`errors(Option<Vec<AssetErrorDetails>>)`](crate::output::BatchDisassociateProjectAssetsOutput::errors): <p>A list of associated error information, if any.</p>
    /// - On failure, responds with [`SdkError<BatchDisassociateProjectAssetsError>`](crate::error::BatchDisassociateProjectAssetsError)
    pub fn batch_disassociate_project_assets(
        &self,
    ) -> crate::client::fluent_builders::BatchDisassociateProjectAssets {
        crate::client::fluent_builders::BatchDisassociateProjectAssets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BatchGetAssetPropertyAggregates`](crate::client::fluent_builders::BatchGetAssetPropertyAggregates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::BatchGetAssetPropertyAggregates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`entries(Vec<BatchGetAssetPropertyAggregatesEntry>)`](crate::client::fluent_builders::BatchGetAssetPropertyAggregates::entries) / [`set_entries(Option<Vec<BatchGetAssetPropertyAggregatesEntry>>)`](crate::client::fluent_builders::BatchGetAssetPropertyAggregates::set_entries): <p>The list of asset property aggregate entries for the batch get request. You can specify up to 16 entries per request.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::BatchGetAssetPropertyAggregates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::BatchGetAssetPropertyAggregates::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::BatchGetAssetPropertyAggregates::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::BatchGetAssetPropertyAggregates::set_max_results): <p>The maximum number of results to return for each paginated request. A result set is returned in the two cases, whichever occurs first.</p>  <ul>   <li> <p>The size of the result set is less than 1 MB.</p> </li>   <li> <p>The number of data points in the result set is less than the value of <code>maxResults</code>. The maximum value of <code>maxResults</code> is 4000.</p> </li>  </ul>
    /// - On success, responds with [`BatchGetAssetPropertyAggregatesOutput`](crate::output::BatchGetAssetPropertyAggregatesOutput) with field(s):
    ///   - [`error_entries(Option<Vec<BatchGetAssetPropertyAggregatesErrorEntry>>)`](crate::output::BatchGetAssetPropertyAggregatesOutput::error_entries): <p>A list of the errors (if any) associated with the batch request. Each error entry contains the <code>entryId</code> of the entry that failed.</p>
    ///   - [`success_entries(Option<Vec<BatchGetAssetPropertyAggregatesSuccessEntry>>)`](crate::output::BatchGetAssetPropertyAggregatesOutput::success_entries): <p>A list of entries that were processed successfully by this batch request. Each success entry contains the <code>entryId</code> of the entry that succeeded and the latest query result.</p>
    ///   - [`skipped_entries(Option<Vec<BatchGetAssetPropertyAggregatesSkippedEntry>>)`](crate::output::BatchGetAssetPropertyAggregatesOutput::skipped_entries): <p>A list of entries that were not processed by this batch request. because these entries had been completely processed by previous paginated requests. Each skipped entry contains the <code>entryId</code> of the entry that skipped.</p>
    ///   - [`next_token(Option<String>)`](crate::output::BatchGetAssetPropertyAggregatesOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<BatchGetAssetPropertyAggregatesError>`](crate::error::BatchGetAssetPropertyAggregatesError)
    pub fn batch_get_asset_property_aggregates(
        &self,
    ) -> crate::client::fluent_builders::BatchGetAssetPropertyAggregates {
        crate::client::fluent_builders::BatchGetAssetPropertyAggregates::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BatchGetAssetPropertyValue`](crate::client::fluent_builders::BatchGetAssetPropertyValue) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::BatchGetAssetPropertyValue::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`entries(Vec<BatchGetAssetPropertyValueEntry>)`](crate::client::fluent_builders::BatchGetAssetPropertyValue::entries) / [`set_entries(Option<Vec<BatchGetAssetPropertyValueEntry>>)`](crate::client::fluent_builders::BatchGetAssetPropertyValue::set_entries): <p>The list of asset property value entries for the batch get request. You can specify up to 16 entries per request.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::BatchGetAssetPropertyValue::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::BatchGetAssetPropertyValue::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    /// - On success, responds with [`BatchGetAssetPropertyValueOutput`](crate::output::BatchGetAssetPropertyValueOutput) with field(s):
    ///   - [`error_entries(Option<Vec<BatchGetAssetPropertyValueErrorEntry>>)`](crate::output::BatchGetAssetPropertyValueOutput::error_entries): <p>A list of the errors (if any) associated with the batch request. Each error entry contains the <code>entryId</code> of the entry that failed.</p>
    ///   - [`success_entries(Option<Vec<BatchGetAssetPropertyValueSuccessEntry>>)`](crate::output::BatchGetAssetPropertyValueOutput::success_entries): <p>A list of entries that were processed successfully by this batch request. Each success entry contains the <code>entryId</code> of the entry that succeeded and the latest query result.</p>
    ///   - [`skipped_entries(Option<Vec<BatchGetAssetPropertyValueSkippedEntry>>)`](crate::output::BatchGetAssetPropertyValueOutput::skipped_entries): <p>A list of entries that were not processed by this batch request. because these entries had been completely processed by previous paginated requests. Each skipped entry contains the <code>entryId</code> of the entry that skipped.</p>
    ///   - [`next_token(Option<String>)`](crate::output::BatchGetAssetPropertyValueOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<BatchGetAssetPropertyValueError>`](crate::error::BatchGetAssetPropertyValueError)
    pub fn batch_get_asset_property_value(
        &self,
    ) -> crate::client::fluent_builders::BatchGetAssetPropertyValue {
        crate::client::fluent_builders::BatchGetAssetPropertyValue::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BatchGetAssetPropertyValueHistory`](crate::client::fluent_builders::BatchGetAssetPropertyValueHistory) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::BatchGetAssetPropertyValueHistory::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`entries(Vec<BatchGetAssetPropertyValueHistoryEntry>)`](crate::client::fluent_builders::BatchGetAssetPropertyValueHistory::entries) / [`set_entries(Option<Vec<BatchGetAssetPropertyValueHistoryEntry>>)`](crate::client::fluent_builders::BatchGetAssetPropertyValueHistory::set_entries): <p>The list of asset property historical value entries for the batch get request. You can specify up to 16 entries per request.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::BatchGetAssetPropertyValueHistory::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::BatchGetAssetPropertyValueHistory::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::BatchGetAssetPropertyValueHistory::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::BatchGetAssetPropertyValueHistory::set_max_results): <p>The maximum number of results to return for each paginated request. A result set is returned in the two cases, whichever occurs first.</p>  <ul>   <li> <p>The size of the result set is less than 1 MB.</p> </li>   <li> <p>The number of data points in the result set is less than the value of <code>maxResults</code>. The maximum value of <code>maxResults</code> is 4000.</p> </li>  </ul>
    /// - On success, responds with [`BatchGetAssetPropertyValueHistoryOutput`](crate::output::BatchGetAssetPropertyValueHistoryOutput) with field(s):
    ///   - [`error_entries(Option<Vec<BatchGetAssetPropertyValueHistoryErrorEntry>>)`](crate::output::BatchGetAssetPropertyValueHistoryOutput::error_entries): <p>A list of the errors (if any) associated with the batch request. Each error entry contains the <code>entryId</code> of the entry that failed.</p>
    ///   - [`success_entries(Option<Vec<BatchGetAssetPropertyValueHistorySuccessEntry>>)`](crate::output::BatchGetAssetPropertyValueHistoryOutput::success_entries): <p>A list of entries that were processed successfully by this batch request. Each success entry contains the <code>entryId</code> of the entry that succeeded and the latest query result.</p>
    ///   - [`skipped_entries(Option<Vec<BatchGetAssetPropertyValueHistorySkippedEntry>>)`](crate::output::BatchGetAssetPropertyValueHistoryOutput::skipped_entries): <p>A list of entries that were not processed by this batch request. because these entries had been completely processed by previous paginated requests. Each skipped entry contains the <code>entryId</code> of the entry that skipped.</p>
    ///   - [`next_token(Option<String>)`](crate::output::BatchGetAssetPropertyValueHistoryOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<BatchGetAssetPropertyValueHistoryError>`](crate::error::BatchGetAssetPropertyValueHistoryError)
    pub fn batch_get_asset_property_value_history(
        &self,
    ) -> crate::client::fluent_builders::BatchGetAssetPropertyValueHistory {
        crate::client::fluent_builders::BatchGetAssetPropertyValueHistory::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BatchPutAssetPropertyValue`](crate::client::fluent_builders::BatchPutAssetPropertyValue) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`entries(Vec<PutAssetPropertyValueEntry>)`](crate::client::fluent_builders::BatchPutAssetPropertyValue::entries) / [`set_entries(Option<Vec<PutAssetPropertyValueEntry>>)`](crate::client::fluent_builders::BatchPutAssetPropertyValue::set_entries): <p>The list of asset property value entries for the batch put request. You can specify up to 10 entries per request.</p>
    /// - On success, responds with [`BatchPutAssetPropertyValueOutput`](crate::output::BatchPutAssetPropertyValueOutput) with field(s):
    ///   - [`error_entries(Option<Vec<BatchPutAssetPropertyErrorEntry>>)`](crate::output::BatchPutAssetPropertyValueOutput::error_entries): <p>A list of the errors (if any) associated with the batch put request. Each error entry contains the <code>entryId</code> of the entry that failed.</p>
    /// - On failure, responds with [`SdkError<BatchPutAssetPropertyValueError>`](crate::error::BatchPutAssetPropertyValueError)
    pub fn batch_put_asset_property_value(
        &self,
    ) -> crate::client::fluent_builders::BatchPutAssetPropertyValue {
        crate::client::fluent_builders::BatchPutAssetPropertyValue::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateAccessPolicy`](crate::client::fluent_builders::CreateAccessPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_policy_identity(Identity)`](crate::client::fluent_builders::CreateAccessPolicy::access_policy_identity) / [`set_access_policy_identity(Option<Identity>)`](crate::client::fluent_builders::CreateAccessPolicy::set_access_policy_identity): <p>The identity for this access policy. Choose an IAM Identity Center user, an IAM Identity Center group, or an IAM user.</p>
    ///   - [`access_policy_resource(Resource)`](crate::client::fluent_builders::CreateAccessPolicy::access_policy_resource) / [`set_access_policy_resource(Option<Resource>)`](crate::client::fluent_builders::CreateAccessPolicy::set_access_policy_resource): <p>The IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.</p>
    ///   - [`access_policy_permission(Permission)`](crate::client::fluent_builders::CreateAccessPolicy::access_policy_permission) / [`set_access_policy_permission(Option<Permission>)`](crate::client::fluent_builders::CreateAccessPolicy::set_access_policy_permission): <p>The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateAccessPolicy::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateAccessPolicy::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateAccessPolicy::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateAccessPolicy::set_tags): <p>A list of key-value pairs that contain metadata for the access policy. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// - On success, responds with [`CreateAccessPolicyOutput`](crate::output::CreateAccessPolicyOutput) with field(s):
    ///   - [`access_policy_id(Option<String>)`](crate::output::CreateAccessPolicyOutput::access_policy_id): <p>The ID of the access policy.</p>
    ///   - [`access_policy_arn(Option<String>)`](crate::output::CreateAccessPolicyOutput::access_policy_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the access policy, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}</code> </p>
    /// - On failure, responds with [`SdkError<CreateAccessPolicyError>`](crate::error::CreateAccessPolicyError)
    pub fn create_access_policy(&self) -> crate::client::fluent_builders::CreateAccessPolicy {
        crate::client::fluent_builders::CreateAccessPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateAsset`](crate::client::fluent_builders::CreateAsset) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_name(impl Into<String>)`](crate::client::fluent_builders::CreateAsset::asset_name) / [`set_asset_name(Option<String>)`](crate::client::fluent_builders::CreateAsset::set_asset_name): <p>A friendly name for the asset.</p>
    ///   - [`asset_model_id(impl Into<String>)`](crate::client::fluent_builders::CreateAsset::asset_model_id) / [`set_asset_model_id(Option<String>)`](crate::client::fluent_builders::CreateAsset::set_asset_model_id): <p>The ID of the asset model from which to create the asset.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateAsset::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateAsset::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateAsset::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateAsset::set_tags): <p>A list of key-value pairs that contain metadata for the asset. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`asset_description(impl Into<String>)`](crate::client::fluent_builders::CreateAsset::asset_description) / [`set_asset_description(Option<String>)`](crate::client::fluent_builders::CreateAsset::set_asset_description): <p>A description for the asset.</p>
    /// - On success, responds with [`CreateAssetOutput`](crate::output::CreateAssetOutput) with field(s):
    ///   - [`asset_id(Option<String>)`](crate::output::CreateAssetOutput::asset_id): <p>The ID of the asset. This ID uniquely identifies the asset within IoT SiteWise and can be used with other IoT SiteWise APIs.</p>
    ///   - [`asset_arn(Option<String>)`](crate::output::CreateAssetOutput::asset_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code> </p>
    ///   - [`asset_status(Option<AssetStatus>)`](crate::output::CreateAssetOutput::asset_status): <p>The status of the asset, which contains a state (<code>CREATING</code> after successfully calling this operation) and any error message.</p>
    /// - On failure, responds with [`SdkError<CreateAssetError>`](crate::error::CreateAssetError)
    pub fn create_asset(&self) -> crate::client::fluent_builders::CreateAsset {
        crate::client::fluent_builders::CreateAsset::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateAssetModel`](crate::client::fluent_builders::CreateAssetModel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_model_name(impl Into<String>)`](crate::client::fluent_builders::CreateAssetModel::asset_model_name) / [`set_asset_model_name(Option<String>)`](crate::client::fluent_builders::CreateAssetModel::set_asset_model_name): <p>A unique, friendly name for the asset model.</p>
    ///   - [`asset_model_description(impl Into<String>)`](crate::client::fluent_builders::CreateAssetModel::asset_model_description) / [`set_asset_model_description(Option<String>)`](crate::client::fluent_builders::CreateAssetModel::set_asset_model_description): <p>A description for the asset model.</p>
    ///   - [`asset_model_properties(Vec<AssetModelPropertyDefinition>)`](crate::client::fluent_builders::CreateAssetModel::asset_model_properties) / [`set_asset_model_properties(Option<Vec<AssetModelPropertyDefinition>>)`](crate::client::fluent_builders::CreateAssetModel::set_asset_model_properties): <p>The property definitions of the asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p>  <p>You can specify up to 200 properties per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`asset_model_hierarchies(Vec<AssetModelHierarchyDefinition>)`](crate::client::fluent_builders::CreateAssetModel::asset_model_hierarchies) / [`set_asset_model_hierarchies(Option<Vec<AssetModelHierarchyDefinition>>)`](crate::client::fluent_builders::CreateAssetModel::set_asset_model_hierarchies): <p>The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>  <p>You can specify up to 10 hierarchies per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`asset_model_composite_models(Vec<AssetModelCompositeModelDefinition>)`](crate::client::fluent_builders::CreateAssetModel::asset_model_composite_models) / [`set_asset_model_composite_models(Option<Vec<AssetModelCompositeModelDefinition>>)`](crate::client::fluent_builders::CreateAssetModel::set_asset_model_composite_models): <p>The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateAssetModel::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateAssetModel::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateAssetModel::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateAssetModel::set_tags): <p>A list of key-value pairs that contain metadata for the asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// - On success, responds with [`CreateAssetModelOutput`](crate::output::CreateAssetModelOutput) with field(s):
    ///   - [`asset_model_id(Option<String>)`](crate::output::CreateAssetModelOutput::asset_model_id): <p>The ID of the asset model. You can use this ID when you call other IoT SiteWise APIs.</p>
    ///   - [`asset_model_arn(Option<String>)`](crate::output::CreateAssetModelOutput::asset_model_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset model, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code> </p>
    ///   - [`asset_model_status(Option<AssetModelStatus>)`](crate::output::CreateAssetModelOutput::asset_model_status): <p>The status of the asset model, which contains a state (<code>CREATING</code> after successfully calling this operation) and any error message.</p>
    /// - On failure, responds with [`SdkError<CreateAssetModelError>`](crate::error::CreateAssetModelError)
    pub fn create_asset_model(&self) -> crate::client::fluent_builders::CreateAssetModel {
        crate::client::fluent_builders::CreateAssetModel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateBulkImportJob`](crate::client::fluent_builders::CreateBulkImportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_name(impl Into<String>)`](crate::client::fluent_builders::CreateBulkImportJob::job_name) / [`set_job_name(Option<String>)`](crate::client::fluent_builders::CreateBulkImportJob::set_job_name): <p>The unique name that helps identify the job request.</p>
    ///   - [`job_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateBulkImportJob::job_role_arn) / [`set_job_role_arn(Option<String>)`](crate::client::fluent_builders::CreateBulkImportJob::set_job_role_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the IAM role that allows IoT SiteWise to read Amazon S3 data.</p>
    ///   - [`files(Vec<File>)`](crate::client::fluent_builders::CreateBulkImportJob::files) / [`set_files(Option<Vec<File>>)`](crate::client::fluent_builders::CreateBulkImportJob::set_files): <p>The files in the specified Amazon S3 bucket that contain your data.</p>
    ///   - [`error_report_location(ErrorReportLocation)`](crate::client::fluent_builders::CreateBulkImportJob::error_report_location) / [`set_error_report_location(Option<ErrorReportLocation>)`](crate::client::fluent_builders::CreateBulkImportJob::set_error_report_location): <p>The Amazon S3 destination where errors associated with the job creation request are saved.</p>
    ///   - [`job_configuration(JobConfiguration)`](crate::client::fluent_builders::CreateBulkImportJob::job_configuration) / [`set_job_configuration(Option<JobConfiguration>)`](crate::client::fluent_builders::CreateBulkImportJob::set_job_configuration): <p>Contains the configuration information of a job, such as the file format used to save data in Amazon S3.</p>
    /// - On success, responds with [`CreateBulkImportJobOutput`](crate::output::CreateBulkImportJobOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::output::CreateBulkImportJobOutput::job_id): <p>The ID of the job.</p>
    ///   - [`job_name(Option<String>)`](crate::output::CreateBulkImportJobOutput::job_name): <p>The unique name that helps identify the job request.</p>
    ///   - [`job_status(Option<JobStatus>)`](crate::output::CreateBulkImportJobOutput::job_status): <p>The status of the bulk import job can be one of following values.</p>  <ul>   <li> <p> <code>PENDING</code> – IoT SiteWise is waiting for the current bulk import job to finish.</p> </li>   <li> <p> <code>CANCELLED</code> – The bulk import job has been canceled.</p> </li>   <li> <p> <code>RUNNING</code> – IoT SiteWise is processing your request to import your data from Amazon S3.</p> </li>   <li> <p> <code>COMPLETED</code> – IoT SiteWise successfully completed your request to import data from Amazon S3.</p> </li>   <li> <p> <code>FAILED</code> – IoT SiteWise couldn't process your request to import data from Amazon S3. You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p> </li>   <li> <p> <code>COMPLETED_WITH_FAILURES</code> – IoT SiteWise completed your request to import data from Amazon S3 with errors. You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<CreateBulkImportJobError>`](crate::error::CreateBulkImportJobError)
    pub fn create_bulk_import_job(&self) -> crate::client::fluent_builders::CreateBulkImportJob {
        crate::client::fluent_builders::CreateBulkImportJob::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateDashboard`](crate::client::fluent_builders::CreateDashboard) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_id(impl Into<String>)`](crate::client::fluent_builders::CreateDashboard::project_id) / [`set_project_id(Option<String>)`](crate::client::fluent_builders::CreateDashboard::set_project_id): <p>The ID of the project in which to create the dashboard.</p>
    ///   - [`dashboard_name(impl Into<String>)`](crate::client::fluent_builders::CreateDashboard::dashboard_name) / [`set_dashboard_name(Option<String>)`](crate::client::fluent_builders::CreateDashboard::set_dashboard_name): <p>A friendly name for the dashboard.</p>
    ///   - [`dashboard_description(impl Into<String>)`](crate::client::fluent_builders::CreateDashboard::dashboard_description) / [`set_dashboard_description(Option<String>)`](crate::client::fluent_builders::CreateDashboard::set_dashboard_description): <p>A description for the dashboard.</p>
    ///   - [`dashboard_definition(impl Into<String>)`](crate::client::fluent_builders::CreateDashboard::dashboard_definition) / [`set_dashboard_definition(Option<String>)`](crate::client::fluent_builders::CreateDashboard::set_dashboard_definition): <p>The dashboard definition specified in a JSON literal. For detailed information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateDashboard::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateDashboard::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateDashboard::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateDashboard::set_tags): <p>A list of key-value pairs that contain metadata for the dashboard. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// - On success, responds with [`CreateDashboardOutput`](crate::output::CreateDashboardOutput) with field(s):
    ///   - [`dashboard_id(Option<String>)`](crate::output::CreateDashboardOutput::dashboard_id): <p>The ID of the dashboard.</p>
    ///   - [`dashboard_arn(Option<String>)`](crate::output::CreateDashboardOutput::dashboard_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the dashboard, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}</code> </p>
    /// - On failure, responds with [`SdkError<CreateDashboardError>`](crate::error::CreateDashboardError)
    pub fn create_dashboard(&self) -> crate::client::fluent_builders::CreateDashboard {
        crate::client::fluent_builders::CreateDashboard::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateGateway`](crate::client::fluent_builders::CreateGateway) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`gateway_name(impl Into<String>)`](crate::client::fluent_builders::CreateGateway::gateway_name) / [`set_gateway_name(Option<String>)`](crate::client::fluent_builders::CreateGateway::set_gateway_name): <p>A unique, friendly name for the gateway.</p>
    ///   - [`gateway_platform(GatewayPlatform)`](crate::client::fluent_builders::CreateGateway::gateway_platform) / [`set_gateway_platform(Option<GatewayPlatform>)`](crate::client::fluent_builders::CreateGateway::set_gateway_platform): <p>The gateway's platform. You can only specify one platform in a gateway.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateGateway::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateGateway::set_tags): <p>A list of key-value pairs that contain metadata for the gateway. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// - On success, responds with [`CreateGatewayOutput`](crate::output::CreateGatewayOutput) with field(s):
    ///   - [`gateway_id(Option<String>)`](crate::output::CreateGatewayOutput::gateway_id): <p>The ID of the gateway device. You can use this ID when you call other IoT SiteWise APIs.</p>
    ///   - [`gateway_arn(Option<String>)`](crate::output::CreateGatewayOutput::gateway_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the gateway, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}</code> </p>
    /// - On failure, responds with [`SdkError<CreateGatewayError>`](crate::error::CreateGatewayError)
    pub fn create_gateway(&self) -> crate::client::fluent_builders::CreateGateway {
        crate::client::fluent_builders::CreateGateway::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreatePortal`](crate::client::fluent_builders::CreatePortal) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`portal_name(impl Into<String>)`](crate::client::fluent_builders::CreatePortal::portal_name) / [`set_portal_name(Option<String>)`](crate::client::fluent_builders::CreatePortal::set_portal_name): <p>A friendly name for the portal.</p>
    ///   - [`portal_description(impl Into<String>)`](crate::client::fluent_builders::CreatePortal::portal_description) / [`set_portal_description(Option<String>)`](crate::client::fluent_builders::CreatePortal::set_portal_description): <p>A description for the portal.</p>
    ///   - [`portal_contact_email(impl Into<String>)`](crate::client::fluent_builders::CreatePortal::portal_contact_email) / [`set_portal_contact_email(Option<String>)`](crate::client::fluent_builders::CreatePortal::set_portal_contact_email): <p>The Amazon Web Services administrator's contact email address.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreatePortal::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreatePortal::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    ///   - [`portal_logo_image_file(ImageFile)`](crate::client::fluent_builders::CreatePortal::portal_logo_image_file) / [`set_portal_logo_image_file(Option<ImageFile>)`](crate::client::fluent_builders::CreatePortal::set_portal_logo_image_file): <p>A logo image to display in the portal. Upload a square, high-resolution image. The image is displayed on a dark background.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::CreatePortal::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::CreatePortal::set_role_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of a service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreatePortal::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreatePortal::set_tags): <p>A list of key-value pairs that contain metadata for the portal. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`portal_auth_mode(AuthMode)`](crate::client::fluent_builders::CreatePortal::portal_auth_mode) / [`set_portal_auth_mode(Option<AuthMode>)`](crate::client::fluent_builders::CreatePortal::set_portal_auth_mode): <p>The service to use to authenticate users to the portal. Choose from the following options:</p>  <ul>   <li> <p> <code>SSO</code> – The portal uses IAM Identity Center (successor to Single Sign-On) to authenticate users and manage user permissions. Before you can create a portal that uses IAM Identity Center, you must enable IAM Identity Center. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso">Enabling IAM Identity Center</a> in the <i>IoT SiteWise User Guide</i>. This option is only available in Amazon Web Services Regions other than the China Regions.</p> </li>   <li> <p> <code>IAM</code> – The portal uses Identity and Access Management to authenticate users and manage user permissions.</p> </li>  </ul>  <p>You can't change this value after you create a portal.</p>  <p>Default: <code>SSO</code> </p>
    ///   - [`notification_sender_email(impl Into<String>)`](crate::client::fluent_builders::CreatePortal::notification_sender_email) / [`set_notification_sender_email(Option<String>)`](crate::client::fluent_builders::CreatePortal::set_notification_sender_email): <p>The email address that sends alarm notifications.</p> <important>   <p>If you use the <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">IoT Events managed Lambda function</a> to manage your emails, you must <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html">verify the sender email address in Amazon SES</a>.</p>  </important>
    ///   - [`alarms(Alarms)`](crate::client::fluent_builders::CreatePortal::alarms) / [`set_alarms(Option<Alarms>)`](crate::client::fluent_builders::CreatePortal::set_alarms): <p>Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.</p>
    /// - On success, responds with [`CreatePortalOutput`](crate::output::CreatePortalOutput) with field(s):
    ///   - [`portal_id(Option<String>)`](crate::output::CreatePortalOutput::portal_id): <p>The ID of the created portal.</p>
    ///   - [`portal_arn(Option<String>)`](crate::output::CreatePortalOutput::portal_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the portal, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}</code> </p>
    ///   - [`portal_start_url(Option<String>)`](crate::output::CreatePortalOutput::portal_start_url): <p>The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use IAM Identity Center for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.</p>
    ///   - [`portal_status(Option<PortalStatus>)`](crate::output::CreatePortalOutput::portal_status): <p>The status of the portal, which contains a state (<code>CREATING</code> after successfully calling this operation) and any error message.</p>
    ///   - [`sso_application_id(Option<String>)`](crate::output::CreatePortalOutput::sso_application_id): <p>The associated IAM Identity Center application ID, if the portal uses IAM Identity Center.</p>
    /// - On failure, responds with [`SdkError<CreatePortalError>`](crate::error::CreatePortalError)
    pub fn create_portal(&self) -> crate::client::fluent_builders::CreatePortal {
        crate::client::fluent_builders::CreatePortal::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateProject`](crate::client::fluent_builders::CreateProject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`portal_id(impl Into<String>)`](crate::client::fluent_builders::CreateProject::portal_id) / [`set_portal_id(Option<String>)`](crate::client::fluent_builders::CreateProject::set_portal_id): <p>The ID of the portal in which to create the project.</p>
    ///   - [`project_name(impl Into<String>)`](crate::client::fluent_builders::CreateProject::project_name) / [`set_project_name(Option<String>)`](crate::client::fluent_builders::CreateProject::set_project_name): <p>A friendly name for the project.</p>
    ///   - [`project_description(impl Into<String>)`](crate::client::fluent_builders::CreateProject::project_description) / [`set_project_description(Option<String>)`](crate::client::fluent_builders::CreateProject::set_project_description): <p>A description for the project.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateProject::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateProject::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateProject::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateProject::set_tags): <p>A list of key-value pairs that contain metadata for the project. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// - On success, responds with [`CreateProjectOutput`](crate::output::CreateProjectOutput) with field(s):
    ///   - [`project_id(Option<String>)`](crate::output::CreateProjectOutput::project_id): <p>The ID of the project.</p>
    ///   - [`project_arn(Option<String>)`](crate::output::CreateProjectOutput::project_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code> </p>
    /// - On failure, responds with [`SdkError<CreateProjectError>`](crate::error::CreateProjectError)
    pub fn create_project(&self) -> crate::client::fluent_builders::CreateProject {
        crate::client::fluent_builders::CreateProject::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteAccessPolicy`](crate::client::fluent_builders::DeleteAccessPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_policy_id(impl Into<String>)`](crate::client::fluent_builders::DeleteAccessPolicy::access_policy_id) / [`set_access_policy_id(Option<String>)`](crate::client::fluent_builders::DeleteAccessPolicy::set_access_policy_id): <p>The ID of the access policy to be deleted.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeleteAccessPolicy::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeleteAccessPolicy::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DeleteAccessPolicyOutput`](crate::output::DeleteAccessPolicyOutput)

    /// - On failure, responds with [`SdkError<DeleteAccessPolicyError>`](crate::error::DeleteAccessPolicyError)
    pub fn delete_access_policy(&self) -> crate::client::fluent_builders::DeleteAccessPolicy {
        crate::client::fluent_builders::DeleteAccessPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteAsset`](crate::client::fluent_builders::DeleteAsset) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::DeleteAsset::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::DeleteAsset::set_asset_id): <p>The ID of the asset to delete.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeleteAsset::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeleteAsset::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DeleteAssetOutput`](crate::output::DeleteAssetOutput) with field(s):
    ///   - [`asset_status(Option<AssetStatus>)`](crate::output::DeleteAssetOutput::asset_status): <p>The status of the asset, which contains a state (<code>DELETING</code> after successfully calling this operation) and any error message.</p>
    /// - On failure, responds with [`SdkError<DeleteAssetError>`](crate::error::DeleteAssetError)
    pub fn delete_asset(&self) -> crate::client::fluent_builders::DeleteAsset {
        crate::client::fluent_builders::DeleteAsset::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteAssetModel`](crate::client::fluent_builders::DeleteAssetModel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_model_id(impl Into<String>)`](crate::client::fluent_builders::DeleteAssetModel::asset_model_id) / [`set_asset_model_id(Option<String>)`](crate::client::fluent_builders::DeleteAssetModel::set_asset_model_id): <p>The ID of the asset model to delete.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeleteAssetModel::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeleteAssetModel::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DeleteAssetModelOutput`](crate::output::DeleteAssetModelOutput) with field(s):
    ///   - [`asset_model_status(Option<AssetModelStatus>)`](crate::output::DeleteAssetModelOutput::asset_model_status): <p>The status of the asset model, which contains a state (<code>DELETING</code> after successfully calling this operation) and any error message.</p>
    /// - On failure, responds with [`SdkError<DeleteAssetModelError>`](crate::error::DeleteAssetModelError)
    pub fn delete_asset_model(&self) -> crate::client::fluent_builders::DeleteAssetModel {
        crate::client::fluent_builders::DeleteAssetModel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteDashboard`](crate::client::fluent_builders::DeleteDashboard) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dashboard_id(impl Into<String>)`](crate::client::fluent_builders::DeleteDashboard::dashboard_id) / [`set_dashboard_id(Option<String>)`](crate::client::fluent_builders::DeleteDashboard::set_dashboard_id): <p>The ID of the dashboard to delete.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeleteDashboard::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeleteDashboard::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DeleteDashboardOutput`](crate::output::DeleteDashboardOutput)

    /// - On failure, responds with [`SdkError<DeleteDashboardError>`](crate::error::DeleteDashboardError)
    pub fn delete_dashboard(&self) -> crate::client::fluent_builders::DeleteDashboard {
        crate::client::fluent_builders::DeleteDashboard::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteGateway`](crate::client::fluent_builders::DeleteGateway) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`gateway_id(impl Into<String>)`](crate::client::fluent_builders::DeleteGateway::gateway_id) / [`set_gateway_id(Option<String>)`](crate::client::fluent_builders::DeleteGateway::set_gateway_id): <p>The ID of the gateway to delete.</p>
    /// - On success, responds with [`DeleteGatewayOutput`](crate::output::DeleteGatewayOutput)

    /// - On failure, responds with [`SdkError<DeleteGatewayError>`](crate::error::DeleteGatewayError)
    pub fn delete_gateway(&self) -> crate::client::fluent_builders::DeleteGateway {
        crate::client::fluent_builders::DeleteGateway::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeletePortal`](crate::client::fluent_builders::DeletePortal) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`portal_id(impl Into<String>)`](crate::client::fluent_builders::DeletePortal::portal_id) / [`set_portal_id(Option<String>)`](crate::client::fluent_builders::DeletePortal::set_portal_id): <p>The ID of the portal to delete.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeletePortal::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeletePortal::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DeletePortalOutput`](crate::output::DeletePortalOutput) with field(s):
    ///   - [`portal_status(Option<PortalStatus>)`](crate::output::DeletePortalOutput::portal_status): <p>The status of the portal, which contains a state (<code>DELETING</code> after successfully calling this operation) and any error message.</p>
    /// - On failure, responds with [`SdkError<DeletePortalError>`](crate::error::DeletePortalError)
    pub fn delete_portal(&self) -> crate::client::fluent_builders::DeletePortal {
        crate::client::fluent_builders::DeletePortal::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteProject`](crate::client::fluent_builders::DeleteProject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_id(impl Into<String>)`](crate::client::fluent_builders::DeleteProject::project_id) / [`set_project_id(Option<String>)`](crate::client::fluent_builders::DeleteProject::set_project_id): <p>The ID of the project.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeleteProject::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeleteProject::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DeleteProjectOutput`](crate::output::DeleteProjectOutput)

    /// - On failure, responds with [`SdkError<DeleteProjectError>`](crate::error::DeleteProjectError)
    pub fn delete_project(&self) -> crate::client::fluent_builders::DeleteProject {
        crate::client::fluent_builders::DeleteProject::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteTimeSeries`](crate::client::fluent_builders::DeleteTimeSeries) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alias(impl Into<String>)`](crate::client::fluent_builders::DeleteTimeSeries::alias) / [`set_alias(Option<String>)`](crate::client::fluent_builders::DeleteTimeSeries::set_alias): <p>The alias that identifies the time series.</p>
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::DeleteTimeSeries::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::DeleteTimeSeries::set_asset_id): <p>The ID of the asset in which the asset property was created.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::DeleteTimeSeries::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::DeleteTimeSeries::set_property_id): <p>The ID of the asset property.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeleteTimeSeries::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeleteTimeSeries::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DeleteTimeSeriesOutput`](crate::output::DeleteTimeSeriesOutput)

    /// - On failure, responds with [`SdkError<DeleteTimeSeriesError>`](crate::error::DeleteTimeSeriesError)
    pub fn delete_time_series(&self) -> crate::client::fluent_builders::DeleteTimeSeries {
        crate::client::fluent_builders::DeleteTimeSeries::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAccessPolicy`](crate::client::fluent_builders::DescribeAccessPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_policy_id(impl Into<String>)`](crate::client::fluent_builders::DescribeAccessPolicy::access_policy_id) / [`set_access_policy_id(Option<String>)`](crate::client::fluent_builders::DescribeAccessPolicy::set_access_policy_id): <p>The ID of the access policy.</p>
    /// - On success, responds with [`DescribeAccessPolicyOutput`](crate::output::DescribeAccessPolicyOutput) with field(s):
    ///   - [`access_policy_id(Option<String>)`](crate::output::DescribeAccessPolicyOutput::access_policy_id): <p>The ID of the access policy.</p>
    ///   - [`access_policy_arn(Option<String>)`](crate::output::DescribeAccessPolicyOutput::access_policy_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the access policy, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}</code> </p>
    ///   - [`access_policy_identity(Option<Identity>)`](crate::output::DescribeAccessPolicyOutput::access_policy_identity): <p>The identity (IAM Identity Center user, IAM Identity Center group, or IAM user) to which this access policy applies.</p>
    ///   - [`access_policy_resource(Option<Resource>)`](crate::output::DescribeAccessPolicyOutput::access_policy_resource): <p>The IoT SiteWise Monitor resource (portal or project) to which this access policy provides access.</p>
    ///   - [`access_policy_permission(Option<Permission>)`](crate::output::DescribeAccessPolicyOutput::access_policy_permission): <p>The access policy permission. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.</p>
    ///   - [`access_policy_creation_date(Option<DateTime>)`](crate::output::DescribeAccessPolicyOutput::access_policy_creation_date): <p>The date the access policy was created, in Unix epoch time.</p>
    ///   - [`access_policy_last_update_date(Option<DateTime>)`](crate::output::DescribeAccessPolicyOutput::access_policy_last_update_date): <p>The date the access policy was last updated, in Unix epoch time.</p>
    /// - On failure, responds with [`SdkError<DescribeAccessPolicyError>`](crate::error::DescribeAccessPolicyError)
    pub fn describe_access_policy(&self) -> crate::client::fluent_builders::DescribeAccessPolicy {
        crate::client::fluent_builders::DescribeAccessPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAsset`](crate::client::fluent_builders::DescribeAsset) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::DescribeAsset::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::DescribeAsset::set_asset_id): <p>The ID of the asset.</p>
    ///   - [`exclude_properties(bool)`](crate::client::fluent_builders::DescribeAsset::exclude_properties) / [`set_exclude_properties(bool)`](crate::client::fluent_builders::DescribeAsset::set_exclude_properties): <p> Whether or not to exclude asset properties from the response. </p>
    /// - On success, responds with [`DescribeAssetOutput`](crate::output::DescribeAssetOutput) with field(s):
    ///   - [`asset_id(Option<String>)`](crate::output::DescribeAssetOutput::asset_id): <p>The ID of the asset.</p>
    ///   - [`asset_arn(Option<String>)`](crate::output::DescribeAssetOutput::asset_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}</code> </p>
    ///   - [`asset_name(Option<String>)`](crate::output::DescribeAssetOutput::asset_name): <p>The name of the asset.</p>
    ///   - [`asset_model_id(Option<String>)`](crate::output::DescribeAssetOutput::asset_model_id): <p>The ID of the asset model that was used to create the asset.</p>
    ///   - [`asset_properties(Option<Vec<AssetProperty>>)`](crate::output::DescribeAssetOutput::asset_properties): <p>The list of asset properties for the asset.</p>  <p>This object doesn't include properties that you define in composite models. You can find composite model properties in the <code>assetCompositeModels</code> object.</p>
    ///   - [`asset_hierarchies(Option<Vec<AssetHierarchy>>)`](crate::output::DescribeAssetOutput::asset_hierarchies): <p>A list of asset hierarchies that each contain a <code>hierarchyId</code>. A hierarchy specifies allowed parent/child asset relationships.</p>
    ///   - [`asset_composite_models(Option<Vec<AssetCompositeModel>>)`](crate::output::DescribeAssetOutput::asset_composite_models): <p>The composite models for the asset.</p>
    ///   - [`asset_creation_date(Option<DateTime>)`](crate::output::DescribeAssetOutput::asset_creation_date): <p>The date the asset was created, in Unix epoch time.</p>
    ///   - [`asset_last_update_date(Option<DateTime>)`](crate::output::DescribeAssetOutput::asset_last_update_date): <p>The date the asset was last updated, in Unix epoch time.</p>
    ///   - [`asset_status(Option<AssetStatus>)`](crate::output::DescribeAssetOutput::asset_status): <p>The current status of the asset, which contains a state and any error message.</p>
    ///   - [`asset_description(Option<String>)`](crate::output::DescribeAssetOutput::asset_description): <p>A description for the asset.</p>
    /// - On failure, responds with [`SdkError<DescribeAssetError>`](crate::error::DescribeAssetError)
    pub fn describe_asset(&self) -> crate::client::fluent_builders::DescribeAsset {
        crate::client::fluent_builders::DescribeAsset::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAssetModel`](crate::client::fluent_builders::DescribeAssetModel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_model_id(impl Into<String>)`](crate::client::fluent_builders::DescribeAssetModel::asset_model_id) / [`set_asset_model_id(Option<String>)`](crate::client::fluent_builders::DescribeAssetModel::set_asset_model_id): <p>The ID of the asset model.</p>
    ///   - [`exclude_properties(bool)`](crate::client::fluent_builders::DescribeAssetModel::exclude_properties) / [`set_exclude_properties(bool)`](crate::client::fluent_builders::DescribeAssetModel::set_exclude_properties): <p> Whether or not to exclude asset model properties from the response. </p>
    /// - On success, responds with [`DescribeAssetModelOutput`](crate::output::DescribeAssetModelOutput) with field(s):
    ///   - [`asset_model_id(Option<String>)`](crate::output::DescribeAssetModelOutput::asset_model_id): <p>The ID of the asset model.</p>
    ///   - [`asset_model_arn(Option<String>)`](crate::output::DescribeAssetModelOutput::asset_model_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the asset model, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code> </p>
    ///   - [`asset_model_name(Option<String>)`](crate::output::DescribeAssetModelOutput::asset_model_name): <p>The name of the asset model.</p>
    ///   - [`asset_model_description(Option<String>)`](crate::output::DescribeAssetModelOutput::asset_model_description): <p>The asset model's description.</p>
    ///   - [`asset_model_properties(Option<Vec<AssetModelProperty>>)`](crate::output::DescribeAssetModelOutput::asset_model_properties): <p>The list of asset properties for the asset model.</p>  <p>This object doesn't include properties that you define in composite models. You can find composite model properties in the <code>assetModelCompositeModels</code> object.</p>
    ///   - [`asset_model_hierarchies(Option<Vec<AssetModelHierarchy>>)`](crate::output::DescribeAssetModelOutput::asset_model_hierarchies): <p>A list of asset model hierarchies that each contain a <code>childAssetModelId</code> and a <code>hierarchyId</code> (named <code>id</code>). A hierarchy specifies allowed parent/child asset relationships for an asset model.</p>
    ///   - [`asset_model_composite_models(Option<Vec<AssetModelCompositeModel>>)`](crate::output::DescribeAssetModelOutput::asset_model_composite_models): <p>The list of composite asset models for the asset model.</p>
    ///   - [`asset_model_creation_date(Option<DateTime>)`](crate::output::DescribeAssetModelOutput::asset_model_creation_date): <p>The date the asset model was created, in Unix epoch time.</p>
    ///   - [`asset_model_last_update_date(Option<DateTime>)`](crate::output::DescribeAssetModelOutput::asset_model_last_update_date): <p>The date the asset model was last updated, in Unix epoch time.</p>
    ///   - [`asset_model_status(Option<AssetModelStatus>)`](crate::output::DescribeAssetModelOutput::asset_model_status): <p>The current status of the asset model, which contains a state and any error message.</p>
    /// - On failure, responds with [`SdkError<DescribeAssetModelError>`](crate::error::DescribeAssetModelError)
    pub fn describe_asset_model(&self) -> crate::client::fluent_builders::DescribeAssetModel {
        crate::client::fluent_builders::DescribeAssetModel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAssetProperty`](crate::client::fluent_builders::DescribeAssetProperty) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::DescribeAssetProperty::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::DescribeAssetProperty::set_asset_id): <p>The ID of the asset.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::DescribeAssetProperty::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::DescribeAssetProperty::set_property_id): <p>The ID of the asset property.</p>
    /// - On success, responds with [`DescribeAssetPropertyOutput`](crate::output::DescribeAssetPropertyOutput) with field(s):
    ///   - [`asset_id(Option<String>)`](crate::output::DescribeAssetPropertyOutput::asset_id): <p>The ID of the asset.</p>
    ///   - [`asset_name(Option<String>)`](crate::output::DescribeAssetPropertyOutput::asset_name): <p>The name of the asset.</p>
    ///   - [`asset_model_id(Option<String>)`](crate::output::DescribeAssetPropertyOutput::asset_model_id): <p>The ID of the asset model.</p>
    ///   - [`asset_property(Option<Property>)`](crate::output::DescribeAssetPropertyOutput::asset_property): <p>The asset property's definition, alias, and notification state.</p>  <p>This response includes this object for normal asset properties. If you describe an asset property in a composite model, this response includes the asset property information in <code>compositeModel</code>.</p>
    ///   - [`composite_model(Option<CompositeModelProperty>)`](crate::output::DescribeAssetPropertyOutput::composite_model): <p>The composite asset model that declares this asset property, if this asset property exists in a composite model.</p>
    /// - On failure, responds with [`SdkError<DescribeAssetPropertyError>`](crate::error::DescribeAssetPropertyError)
    pub fn describe_asset_property(&self) -> crate::client::fluent_builders::DescribeAssetProperty {
        crate::client::fluent_builders::DescribeAssetProperty::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeBulkImportJob`](crate::client::fluent_builders::DescribeBulkImportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_id(impl Into<String>)`](crate::client::fluent_builders::DescribeBulkImportJob::job_id) / [`set_job_id(Option<String>)`](crate::client::fluent_builders::DescribeBulkImportJob::set_job_id): <p>The ID of the job.</p>
    /// - On success, responds with [`DescribeBulkImportJobOutput`](crate::output::DescribeBulkImportJobOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::output::DescribeBulkImportJobOutput::job_id): <p>The ID of the job.</p>
    ///   - [`job_name(Option<String>)`](crate::output::DescribeBulkImportJobOutput::job_name): <p>The unique name that helps identify the job request.</p>
    ///   - [`job_status(Option<JobStatus>)`](crate::output::DescribeBulkImportJobOutput::job_status): <p>The status of the bulk import job can be one of following values.</p>  <ul>   <li> <p> <code>PENDING</code> – IoT SiteWise is waiting for the current bulk import job to finish.</p> </li>   <li> <p> <code>CANCELLED</code> – The bulk import job has been canceled.</p> </li>   <li> <p> <code>RUNNING</code> – IoT SiteWise is processing your request to import your data from Amazon S3.</p> </li>   <li> <p> <code>COMPLETED</code> – IoT SiteWise successfully completed your request to import data from Amazon S3.</p> </li>   <li> <p> <code>FAILED</code> – IoT SiteWise couldn't process your request to import data from Amazon S3. You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p> </li>   <li> <p> <code>COMPLETED_WITH_FAILURES</code> – IoT SiteWise completed your request to import data from Amazon S3 with errors. You can use logs saved in the specified error report location in Amazon S3 to troubleshoot issues.</p> </li>  </ul>
    ///   - [`job_role_arn(Option<String>)`](crate::output::DescribeBulkImportJobOutput::job_role_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the IAM role that allows IoT SiteWise to read Amazon S3 data.</p>
    ///   - [`files(Option<Vec<File>>)`](crate::output::DescribeBulkImportJobOutput::files): <p>The files in the specified Amazon S3 bucket that contain your data.</p>
    ///   - [`error_report_location(Option<ErrorReportLocation>)`](crate::output::DescribeBulkImportJobOutput::error_report_location): <p>The Amazon S3 destination where errors associated with the job creation request are saved.</p>
    ///   - [`job_configuration(Option<JobConfiguration>)`](crate::output::DescribeBulkImportJobOutput::job_configuration): <p>Contains the configuration information of a job, such as the file format used to save data in Amazon S3.</p>
    ///   - [`job_creation_date(Option<DateTime>)`](crate::output::DescribeBulkImportJobOutput::job_creation_date): <p>The date the job was created, in Unix epoch TIME.</p>
    ///   - [`job_last_update_date(Option<DateTime>)`](crate::output::DescribeBulkImportJobOutput::job_last_update_date): <p>The date the job was last updated, in Unix epoch time.</p>
    /// - On failure, responds with [`SdkError<DescribeBulkImportJobError>`](crate::error::DescribeBulkImportJobError)
    pub fn describe_bulk_import_job(
        &self,
    ) -> crate::client::fluent_builders::DescribeBulkImportJob {
        crate::client::fluent_builders::DescribeBulkImportJob::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeDashboard`](crate::client::fluent_builders::DescribeDashboard) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dashboard_id(impl Into<String>)`](crate::client::fluent_builders::DescribeDashboard::dashboard_id) / [`set_dashboard_id(Option<String>)`](crate::client::fluent_builders::DescribeDashboard::set_dashboard_id): <p>The ID of the dashboard.</p>
    /// - On success, responds with [`DescribeDashboardOutput`](crate::output::DescribeDashboardOutput) with field(s):
    ///   - [`dashboard_id(Option<String>)`](crate::output::DescribeDashboardOutput::dashboard_id): <p>The ID of the dashboard.</p>
    ///   - [`dashboard_arn(Option<String>)`](crate::output::DescribeDashboardOutput::dashboard_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the dashboard, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}</code> </p>
    ///   - [`dashboard_name(Option<String>)`](crate::output::DescribeDashboardOutput::dashboard_name): <p>The name of the dashboard.</p>
    ///   - [`project_id(Option<String>)`](crate::output::DescribeDashboardOutput::project_id): <p>The ID of the project that the dashboard is in.</p>
    ///   - [`dashboard_description(Option<String>)`](crate::output::DescribeDashboardOutput::dashboard_description): <p>The dashboard's description.</p>
    ///   - [`dashboard_definition(Option<String>)`](crate::output::DescribeDashboardOutput::dashboard_definition): <p>The dashboard's definition JSON literal. For detailed information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`dashboard_creation_date(Option<DateTime>)`](crate::output::DescribeDashboardOutput::dashboard_creation_date): <p>The date the dashboard was created, in Unix epoch time.</p>
    ///   - [`dashboard_last_update_date(Option<DateTime>)`](crate::output::DescribeDashboardOutput::dashboard_last_update_date): <p>The date the dashboard was last updated, in Unix epoch time.</p>
    /// - On failure, responds with [`SdkError<DescribeDashboardError>`](crate::error::DescribeDashboardError)
    pub fn describe_dashboard(&self) -> crate::client::fluent_builders::DescribeDashboard {
        crate::client::fluent_builders::DescribeDashboard::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeDefaultEncryptionConfiguration`](crate::client::fluent_builders::DescribeDefaultEncryptionConfiguration) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DescribeDefaultEncryptionConfiguration::send) it.

    /// - On success, responds with [`DescribeDefaultEncryptionConfigurationOutput`](crate::output::DescribeDefaultEncryptionConfigurationOutput) with field(s):
    ///   - [`encryption_type(Option<EncryptionType>)`](crate::output::DescribeDefaultEncryptionConfigurationOutput::encryption_type): <p>The type of encryption used for the encryption configuration.</p>
    ///   - [`kms_key_arn(Option<String>)`](crate::output::DescribeDefaultEncryptionConfigurationOutput::kms_key_arn): <p>The key ARN of the customer managed key used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.</p>
    ///   - [`configuration_status(Option<ConfigurationStatus>)`](crate::output::DescribeDefaultEncryptionConfigurationOutput::configuration_status): <p>The status of the account configuration. This contains the <code>ConfigurationState</code>. If there's an error, it also contains the <code>ErrorDetails</code>.</p>
    /// - On failure, responds with [`SdkError<DescribeDefaultEncryptionConfigurationError>`](crate::error::DescribeDefaultEncryptionConfigurationError)
    pub fn describe_default_encryption_configuration(
        &self,
    ) -> crate::client::fluent_builders::DescribeDefaultEncryptionConfiguration {
        crate::client::fluent_builders::DescribeDefaultEncryptionConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DescribeGateway`](crate::client::fluent_builders::DescribeGateway) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`gateway_id(impl Into<String>)`](crate::client::fluent_builders::DescribeGateway::gateway_id) / [`set_gateway_id(Option<String>)`](crate::client::fluent_builders::DescribeGateway::set_gateway_id): <p>The ID of the gateway device.</p>
    /// - On success, responds with [`DescribeGatewayOutput`](crate::output::DescribeGatewayOutput) with field(s):
    ///   - [`gateway_id(Option<String>)`](crate::output::DescribeGatewayOutput::gateway_id): <p>The ID of the gateway device.</p>
    ///   - [`gateway_name(Option<String>)`](crate::output::DescribeGatewayOutput::gateway_name): <p>The name of the gateway.</p>
    ///   - [`gateway_arn(Option<String>)`](crate::output::DescribeGatewayOutput::gateway_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the gateway, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}</code> </p>
    ///   - [`gateway_platform(Option<GatewayPlatform>)`](crate::output::DescribeGatewayOutput::gateway_platform): <p>The gateway's platform.</p>
    ///   - [`gateway_capability_summaries(Option<Vec<GatewayCapabilitySummary>>)`](crate::output::DescribeGatewayOutput::gateway_capability_summaries): <p>A list of gateway capability summaries that each contain a namespace and status. Each gateway capability defines data sources for the gateway. To retrieve a capability configuration's definition, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGatewayCapabilityConfiguration.html">DescribeGatewayCapabilityConfiguration</a>.</p>
    ///   - [`creation_date(Option<DateTime>)`](crate::output::DescribeGatewayOutput::creation_date): <p>The date the gateway was created, in Unix epoch time.</p>
    ///   - [`last_update_date(Option<DateTime>)`](crate::output::DescribeGatewayOutput::last_update_date): <p>The date the gateway was last updated, in Unix epoch time.</p>
    /// - On failure, responds with [`SdkError<DescribeGatewayError>`](crate::error::DescribeGatewayError)
    pub fn describe_gateway(&self) -> crate::client::fluent_builders::DescribeGateway {
        crate::client::fluent_builders::DescribeGateway::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeGatewayCapabilityConfiguration`](crate::client::fluent_builders::DescribeGatewayCapabilityConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`gateway_id(impl Into<String>)`](crate::client::fluent_builders::DescribeGatewayCapabilityConfiguration::gateway_id) / [`set_gateway_id(Option<String>)`](crate::client::fluent_builders::DescribeGatewayCapabilityConfiguration::set_gateway_id): <p>The ID of the gateway that defines the capability configuration.</p>
    ///   - [`capability_namespace(impl Into<String>)`](crate::client::fluent_builders::DescribeGatewayCapabilityConfiguration::capability_namespace) / [`set_capability_namespace(Option<String>)`](crate::client::fluent_builders::DescribeGatewayCapabilityConfiguration::set_capability_namespace): <p>The namespace of the capability configuration. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as <code>1</code>.</p>
    /// - On success, responds with [`DescribeGatewayCapabilityConfigurationOutput`](crate::output::DescribeGatewayCapabilityConfigurationOutput) with field(s):
    ///   - [`gateway_id(Option<String>)`](crate::output::DescribeGatewayCapabilityConfigurationOutput::gateway_id): <p>The ID of the gateway that defines the capability configuration.</p>
    ///   - [`capability_namespace(Option<String>)`](crate::output::DescribeGatewayCapabilityConfigurationOutput::capability_namespace): <p>The namespace of the gateway capability.</p>
    ///   - [`capability_configuration(Option<String>)`](crate::output::DescribeGatewayCapabilityConfigurationOutput::capability_configuration): <p>The JSON document that defines the gateway capability's configuration. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/configure-sources.html#configure-source-cli">Configuring data sources (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`capability_sync_status(Option<CapabilitySyncStatus>)`](crate::output::DescribeGatewayCapabilityConfigurationOutput::capability_sync_status): <p>The synchronization status of the capability configuration. The sync status can be one of the following:</p>  <ul>   <li> <p> <code>IN_SYNC</code> – The gateway is running the capability configuration.</p> </li>   <li> <p> <code>OUT_OF_SYNC</code> – The gateway hasn't received the capability configuration.</p> </li>   <li> <p> <code>SYNC_FAILED</code> – The gateway rejected the capability configuration.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<DescribeGatewayCapabilityConfigurationError>`](crate::error::DescribeGatewayCapabilityConfigurationError)
    pub fn describe_gateway_capability_configuration(
        &self,
    ) -> crate::client::fluent_builders::DescribeGatewayCapabilityConfiguration {
        crate::client::fluent_builders::DescribeGatewayCapabilityConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DescribeLoggingOptions`](crate::client::fluent_builders::DescribeLoggingOptions) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DescribeLoggingOptions::send) it.

    /// - On success, responds with [`DescribeLoggingOptionsOutput`](crate::output::DescribeLoggingOptionsOutput) with field(s):
    ///   - [`logging_options(Option<LoggingOptions>)`](crate::output::DescribeLoggingOptionsOutput::logging_options): <p>The current logging options.</p>
    /// - On failure, responds with [`SdkError<DescribeLoggingOptionsError>`](crate::error::DescribeLoggingOptionsError)
    pub fn describe_logging_options(
        &self,
    ) -> crate::client::fluent_builders::DescribeLoggingOptions {
        crate::client::fluent_builders::DescribeLoggingOptions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribePortal`](crate::client::fluent_builders::DescribePortal) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`portal_id(impl Into<String>)`](crate::client::fluent_builders::DescribePortal::portal_id) / [`set_portal_id(Option<String>)`](crate::client::fluent_builders::DescribePortal::set_portal_id): <p>The ID of the portal.</p>
    /// - On success, responds with [`DescribePortalOutput`](crate::output::DescribePortalOutput) with field(s):
    ///   - [`portal_id(Option<String>)`](crate::output::DescribePortalOutput::portal_id): <p>The ID of the portal.</p>
    ///   - [`portal_arn(Option<String>)`](crate::output::DescribePortalOutput::portal_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the portal, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}</code> </p>
    ///   - [`portal_name(Option<String>)`](crate::output::DescribePortalOutput::portal_name): <p>The name of the portal.</p>
    ///   - [`portal_description(Option<String>)`](crate::output::DescribePortalOutput::portal_description): <p>The portal's description.</p>
    ///   - [`portal_client_id(Option<String>)`](crate::output::DescribePortalOutput::portal_client_id): <p>The IAM Identity Center application generated client ID (used with IAM Identity Center APIs). IoT SiteWise includes <code>portalClientId</code> for only portals that use IAM Identity Center to authenticate users.</p>
    ///   - [`portal_start_url(Option<String>)`](crate::output::DescribePortalOutput::portal_start_url): <p>The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use IAM Identity Center for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.</p>
    ///   - [`portal_contact_email(Option<String>)`](crate::output::DescribePortalOutput::portal_contact_email): <p>The Amazon Web Services administrator's contact email address.</p>
    ///   - [`portal_status(Option<PortalStatus>)`](crate::output::DescribePortalOutput::portal_status): <p>The current status of the portal, which contains a state and any error message.</p>
    ///   - [`portal_creation_date(Option<DateTime>)`](crate::output::DescribePortalOutput::portal_creation_date): <p>The date the portal was created, in Unix epoch time.</p>
    ///   - [`portal_last_update_date(Option<DateTime>)`](crate::output::DescribePortalOutput::portal_last_update_date): <p>The date the portal was last updated, in Unix epoch time.</p>
    ///   - [`portal_logo_image_location(Option<ImageLocation>)`](crate::output::DescribePortalOutput::portal_logo_image_location): <p>The portal's logo image, which is available at a URL.</p>
    ///   - [`role_arn(Option<String>)`](crate::output::DescribePortalOutput::role_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`portal_auth_mode(Option<AuthMode>)`](crate::output::DescribePortalOutput::portal_auth_mode): <p>The service to use to authenticate users to the portal.</p>
    ///   - [`notification_sender_email(Option<String>)`](crate::output::DescribePortalOutput::notification_sender_email): <p>The email address that sends alarm notifications.</p>
    ///   - [`alarms(Option<Alarms>)`](crate::output::DescribePortalOutput::alarms): <p>Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal.</p>
    /// - On failure, responds with [`SdkError<DescribePortalError>`](crate::error::DescribePortalError)
    pub fn describe_portal(&self) -> crate::client::fluent_builders::DescribePortal {
        crate::client::fluent_builders::DescribePortal::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeProject`](crate::client::fluent_builders::DescribeProject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_id(impl Into<String>)`](crate::client::fluent_builders::DescribeProject::project_id) / [`set_project_id(Option<String>)`](crate::client::fluent_builders::DescribeProject::set_project_id): <p>The ID of the project.</p>
    /// - On success, responds with [`DescribeProjectOutput`](crate::output::DescribeProjectOutput) with field(s):
    ///   - [`project_id(Option<String>)`](crate::output::DescribeProjectOutput::project_id): <p>The ID of the project.</p>
    ///   - [`project_arn(Option<String>)`](crate::output::DescribeProjectOutput::project_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the project, which has the following format.</p>  <p> <code>arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}</code> </p>
    ///   - [`project_name(Option<String>)`](crate::output::DescribeProjectOutput::project_name): <p>The name of the project.</p>
    ///   - [`portal_id(Option<String>)`](crate::output::DescribeProjectOutput::portal_id): <p>The ID of the portal that the project is in.</p>
    ///   - [`project_description(Option<String>)`](crate::output::DescribeProjectOutput::project_description): <p>The project's description.</p>
    ///   - [`project_creation_date(Option<DateTime>)`](crate::output::DescribeProjectOutput::project_creation_date): <p>The date the project was created, in Unix epoch time.</p>
    ///   - [`project_last_update_date(Option<DateTime>)`](crate::output::DescribeProjectOutput::project_last_update_date): <p>The date the project was last updated, in Unix epoch time.</p>
    /// - On failure, responds with [`SdkError<DescribeProjectError>`](crate::error::DescribeProjectError)
    pub fn describe_project(&self) -> crate::client::fluent_builders::DescribeProject {
        crate::client::fluent_builders::DescribeProject::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStorageConfiguration`](crate::client::fluent_builders::DescribeStorageConfiguration) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DescribeStorageConfiguration::send) it.

    /// - On success, responds with [`DescribeStorageConfigurationOutput`](crate::output::DescribeStorageConfigurationOutput) with field(s):
    ///   - [`storage_type(Option<StorageType>)`](crate::output::DescribeStorageConfigurationOutput::storage_type): <p>The storage tier that you specified for your data. The <code>storageType</code> parameter can be one of the following values:</p>  <ul>   <li> <p> <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise saves your data into the hot tier. The hot tier is a service-managed database.</p> </li>   <li> <p> <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise saves your data in both the cold tier and the hot tier. The cold tier is a customer-managed Amazon S3 bucket.</p> </li>  </ul>
    ///   - [`multi_layer_storage(Option<MultiLayerStorage>)`](crate::output::DescribeStorageConfigurationOutput::multi_layer_storage): <p>Contains information about the storage destination.</p>
    ///   - [`disassociated_data_storage(Option<DisassociatedDataStorageState>)`](crate::output::DescribeStorageConfigurationOutput::disassociated_data_storage): <p>Contains the storage configuration for time series (data streams) that aren't associated with asset properties. The <code>disassociatedDataStorage</code> can be one of the following values:</p>  <ul>   <li> <p> <code>ENABLED</code> – IoT SiteWise accepts time series that aren't associated with asset properties.</p> <important>     <p>After the <code>disassociatedDataStorage</code> is enabled, you can't disable it.</p>    </important> </li>   <li> <p> <code>DISABLED</code> – IoT SiteWise doesn't accept time series (data streams) that aren't associated with asset properties.</p> </li>  </ul>  <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html">Data streams</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`retention_period(Option<RetentionPeriod>)`](crate::output::DescribeStorageConfigurationOutput::retention_period): <p>How many days your data is kept in the hot tier. By default, your data is kept indefinitely in the hot tier.</p>
    ///   - [`configuration_status(Option<ConfigurationStatus>)`](crate::output::DescribeStorageConfigurationOutput::configuration_status): <p>Contains current status information for the configuration.</p>
    ///   - [`last_update_date(Option<DateTime>)`](crate::output::DescribeStorageConfigurationOutput::last_update_date): <p>The date the storage configuration was last updated, in Unix epoch time.</p>
    /// - On failure, responds with [`SdkError<DescribeStorageConfigurationError>`](crate::error::DescribeStorageConfigurationError)
    pub fn describe_storage_configuration(
        &self,
    ) -> crate::client::fluent_builders::DescribeStorageConfiguration {
        crate::client::fluent_builders::DescribeStorageConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeTimeSeries`](crate::client::fluent_builders::DescribeTimeSeries) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alias(impl Into<String>)`](crate::client::fluent_builders::DescribeTimeSeries::alias) / [`set_alias(Option<String>)`](crate::client::fluent_builders::DescribeTimeSeries::set_alias): <p>The alias that identifies the time series.</p>
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::DescribeTimeSeries::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::DescribeTimeSeries::set_asset_id): <p>The ID of the asset in which the asset property was created.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::DescribeTimeSeries::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::DescribeTimeSeries::set_property_id): <p>The ID of the asset property.</p>
    /// - On success, responds with [`DescribeTimeSeriesOutput`](crate::output::DescribeTimeSeriesOutput) with field(s):
    ///   - [`asset_id(Option<String>)`](crate::output::DescribeTimeSeriesOutput::asset_id): <p>The ID of the asset in which the asset property was created.</p>
    ///   - [`property_id(Option<String>)`](crate::output::DescribeTimeSeriesOutput::property_id): <p>The ID of the asset property.</p>
    ///   - [`alias(Option<String>)`](crate::output::DescribeTimeSeriesOutput::alias): <p>The alias that identifies the time series.</p>
    ///   - [`time_series_id(Option<String>)`](crate::output::DescribeTimeSeriesOutput::time_series_id): <p>The ID of the time series.</p>
    ///   - [`data_type(Option<PropertyDataType>)`](crate::output::DescribeTimeSeriesOutput::data_type): <p>The data type of the time series.</p>  <p>If you specify <code>STRUCT</code>, you must also specify <code>dataTypeSpec</code> to identify the type of the structure for this time series.</p>
    ///   - [`data_type_spec(Option<String>)`](crate::output::DescribeTimeSeriesOutput::data_type_spec): <p>The data type of the structure for this time series. This parameter is required for time series that have the <code>STRUCT</code> data type.</p>  <p>The options for this parameter depend on the type of the composite model in which you created the asset property that is associated with your time series. Use <code>AWS/ALARM_STATE</code> for alarm state in alarm composite models.</p>
    ///   - [`time_series_creation_date(Option<DateTime>)`](crate::output::DescribeTimeSeriesOutput::time_series_creation_date): <p>The date that the time series was created, in Unix epoch time.</p>
    ///   - [`time_series_last_update_date(Option<DateTime>)`](crate::output::DescribeTimeSeriesOutput::time_series_last_update_date): <p>The date that the time series was last updated, in Unix epoch time.</p>
    /// - On failure, responds with [`SdkError<DescribeTimeSeriesError>`](crate::error::DescribeTimeSeriesError)
    pub fn describe_time_series(&self) -> crate::client::fluent_builders::DescribeTimeSeries {
        crate::client::fluent_builders::DescribeTimeSeries::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DisassociateAssets`](crate::client::fluent_builders::DisassociateAssets) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateAssets::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::DisassociateAssets::set_asset_id): <p>The ID of the parent asset from which to disassociate the child asset.</p>
    ///   - [`hierarchy_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateAssets::hierarchy_id) / [`set_hierarchy_id(Option<String>)`](crate::client::fluent_builders::DisassociateAssets::set_hierarchy_id): <p>The ID of a hierarchy in the parent asset's model. Hierarchies allow different groupings of assets to be formed that all come from the same asset model. You can use the hierarchy ID to identify the correct asset to disassociate. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`child_asset_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateAssets::child_asset_id) / [`set_child_asset_id(Option<String>)`](crate::client::fluent_builders::DisassociateAssets::set_child_asset_id): <p>The ID of the child asset to disassociate.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DisassociateAssets::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DisassociateAssets::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DisassociateAssetsOutput`](crate::output::DisassociateAssetsOutput)

    /// - On failure, responds with [`SdkError<DisassociateAssetsError>`](crate::error::DisassociateAssetsError)
    pub fn disassociate_assets(&self) -> crate::client::fluent_builders::DisassociateAssets {
        crate::client::fluent_builders::DisassociateAssets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DisassociateTimeSeriesFromAssetProperty`](crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alias(impl Into<String>)`](crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty::alias) / [`set_alias(Option<String>)`](crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty::set_alias): <p>The alias that identifies the time series.</p>
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty::set_asset_id): <p>The ID of the asset in which the asset property was created.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty::set_property_id): <p>The ID of the asset property.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`DisassociateTimeSeriesFromAssetPropertyOutput`](crate::output::DisassociateTimeSeriesFromAssetPropertyOutput)

    /// - On failure, responds with [`SdkError<DisassociateTimeSeriesFromAssetPropertyError>`](crate::error::DisassociateTimeSeriesFromAssetPropertyError)
    pub fn disassociate_time_series_from_asset_property(
        &self,
    ) -> crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty {
        crate::client::fluent_builders::DisassociateTimeSeriesFromAssetProperty::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`GetAssetPropertyAggregates`](crate::client::fluent_builders::GetAssetPropertyAggregates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetAssetPropertyAggregates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_asset_id): <p>The ID of the asset.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_property_id): <p>The ID of the asset property.</p>
    ///   - [`property_alias(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::property_alias) / [`set_property_alias(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_property_alias): <p>The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`aggregate_types(Vec<AggregateType>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::aggregate_types) / [`set_aggregate_types(Option<Vec<AggregateType>>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_aggregate_types): <p>The data aggregating function.</p>
    ///   - [`resolution(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::resolution) / [`set_resolution(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_resolution): <p>The time interval over which to aggregate data.</p>
    ///   - [`qualities(Vec<Quality>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::qualities) / [`set_qualities(Option<Vec<Quality>>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_qualities): <p>The quality by which to filter asset data.</p>
    ///   - [`start_date(DateTime)`](crate::client::fluent_builders::GetAssetPropertyAggregates::start_date) / [`set_start_date(Option<DateTime>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_start_date): <p>The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
    ///   - [`end_date(DateTime)`](crate::client::fluent_builders::GetAssetPropertyAggregates::end_date) / [`set_end_date(Option<DateTime>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_end_date): <p>The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
    ///   - [`time_ordering(TimeOrdering)`](crate::client::fluent_builders::GetAssetPropertyAggregates::time_ordering) / [`set_time_ordering(Option<TimeOrdering>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_time_ordering): <p>The chronological sorting order of the requested information.</p>  <p>Default: <code>ASCENDING</code> </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetAssetPropertyAggregates::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetAssetPropertyAggregates::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 100</p>
    /// - On success, responds with [`GetAssetPropertyAggregatesOutput`](crate::output::GetAssetPropertyAggregatesOutput) with field(s):
    ///   - [`aggregated_values(Option<Vec<AggregatedValue>>)`](crate::output::GetAssetPropertyAggregatesOutput::aggregated_values): <p>The requested aggregated values.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetAssetPropertyAggregatesOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<GetAssetPropertyAggregatesError>`](crate::error::GetAssetPropertyAggregatesError)
    pub fn get_asset_property_aggregates(
        &self,
    ) -> crate::client::fluent_builders::GetAssetPropertyAggregates {
        crate::client::fluent_builders::GetAssetPropertyAggregates::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetAssetPropertyValue`](crate::client::fluent_builders::GetAssetPropertyValue) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyValue::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyValue::set_asset_id): <p>The ID of the asset.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyValue::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyValue::set_property_id): <p>The ID of the asset property.</p>
    ///   - [`property_alias(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyValue::property_alias) / [`set_property_alias(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyValue::set_property_alias): <p>The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// - On success, responds with [`GetAssetPropertyValueOutput`](crate::output::GetAssetPropertyValueOutput) with field(s):
    ///   - [`property_value(Option<AssetPropertyValue>)`](crate::output::GetAssetPropertyValueOutput::property_value): <p>The current asset property value.</p>
    /// - On failure, responds with [`SdkError<GetAssetPropertyValueError>`](crate::error::GetAssetPropertyValueError)
    pub fn get_asset_property_value(
        &self,
    ) -> crate::client::fluent_builders::GetAssetPropertyValue {
        crate::client::fluent_builders::GetAssetPropertyValue::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetAssetPropertyValueHistory`](crate::client::fluent_builders::GetAssetPropertyValueHistory) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetAssetPropertyValueHistory::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::set_asset_id): <p>The ID of the asset.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::set_property_id): <p>The ID of the asset property.</p>
    ///   - [`property_alias(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::property_alias) / [`set_property_alias(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::set_property_alias): <p>The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`start_date(DateTime)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::start_date) / [`set_start_date(Option<DateTime>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::set_start_date): <p>The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
    ///   - [`end_date(DateTime)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::end_date) / [`set_end_date(Option<DateTime>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::set_end_date): <p>The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.</p>
    ///   - [`qualities(Vec<Quality>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::qualities) / [`set_qualities(Option<Vec<Quality>>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::set_qualities): <p>The quality by which to filter asset data.</p>
    ///   - [`time_ordering(TimeOrdering)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::time_ordering) / [`set_time_ordering(Option<TimeOrdering>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::set_time_ordering): <p>The chronological sorting order of the requested information.</p>  <p>Default: <code>ASCENDING</code> </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetAssetPropertyValueHistory::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 100</p>
    /// - On success, responds with [`GetAssetPropertyValueHistoryOutput`](crate::output::GetAssetPropertyValueHistoryOutput) with field(s):
    ///   - [`asset_property_value_history(Option<Vec<AssetPropertyValue>>)`](crate::output::GetAssetPropertyValueHistoryOutput::asset_property_value_history): <p>The asset property's value history.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetAssetPropertyValueHistoryOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<GetAssetPropertyValueHistoryError>`](crate::error::GetAssetPropertyValueHistoryError)
    pub fn get_asset_property_value_history(
        &self,
    ) -> crate::client::fluent_builders::GetAssetPropertyValueHistory {
        crate::client::fluent_builders::GetAssetPropertyValueHistory::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetInterpolatedAssetPropertyValues`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_asset_id): <p>The ID of the asset.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_property_id): <p>The ID of the asset property.</p>
    ///   - [`property_alias(impl Into<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::property_alias) / [`set_property_alias(Option<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_property_alias): <p>The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`start_time_in_seconds(i64)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::start_time_in_seconds) / [`set_start_time_in_seconds(Option<i64>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_start_time_in_seconds): <p>The exclusive start of the range from which to interpolate data, expressed in seconds in Unix epoch time.</p>
    ///   - [`start_time_offset_in_nanos(i32)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::start_time_offset_in_nanos) / [`set_start_time_offset_in_nanos(Option<i32>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_start_time_offset_in_nanos): <p>The nanosecond offset converted from <code>startTimeInSeconds</code>.</p>
    ///   - [`end_time_in_seconds(i64)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::end_time_in_seconds) / [`set_end_time_in_seconds(Option<i64>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_end_time_in_seconds): <p>The inclusive end of the range from which to interpolate data, expressed in seconds in Unix epoch time.</p>
    ///   - [`end_time_offset_in_nanos(i32)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::end_time_offset_in_nanos) / [`set_end_time_offset_in_nanos(Option<i32>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_end_time_offset_in_nanos): <p>The nanosecond offset converted from <code>endTimeInSeconds</code>.</p>
    ///   - [`quality(Quality)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::quality) / [`set_quality(Option<Quality>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_quality): <p>The quality of the asset property value. You can use this parameter as a filter to choose only the asset property values that have a specific quality.</p>
    ///   - [`interval_in_seconds(i64)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::interval_in_seconds) / [`set_interval_in_seconds(Option<i64>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_interval_in_seconds): <p>The time interval in seconds over which to interpolate data. Each interval starts when the previous one ends.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_max_results): <p>The maximum number of results to return for each paginated request. If not specified, the default value is 10.</p>
    ///   - [`r#type(impl Into<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::type) / [`set_type(Option<String>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_type): <p>The interpolation type.</p>  <p>Valid values: <code>LINEAR_INTERPOLATION | LOCF_INTERPOLATION</code> </p>  <ul>   <li> <p> <code>LINEAR_INTERPOLATION</code> – Estimates missing data using <a href="https://en.wikipedia.org/wiki/Linear_interpolation">linear interpolation</a>.</p> <p>For example, you can use this operation to return the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days. If the interpolation starts July 1, 2021, at 9 AM, IoT SiteWise returns the first interpolated value on July 2, 2021, at 9 AM, the second interpolated value on July 3, 2021, at 9 AM, and so on.</p> </li>   <li> <p> <code>LOCF_INTERPOLATION</code> – Estimates missing data using last observation carried forward interpolation</p> <p>If no data point is found for an interval, IoT SiteWise returns the last observed data point for the previous interval and carries forward this interpolated value until a new data point is found.</p> <p>For example, you can get the state of an on-off valve every 24 hours over a duration of 7 days. If the interpolation starts July 1, 2021, at 9 AM, IoT SiteWise returns the last observed data point between July 1, 2021, at 9 AM and July 2, 2021, at 9 AM as the first interpolated value. If a data point isn't found after 9 AM on July 2, 2021, IoT SiteWise uses the same interpolated value for the rest of the days.</p> </li>  </ul>
    ///   - [`interval_window_in_seconds(i64)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::interval_window_in_seconds) / [`set_interval_window_in_seconds(Option<i64>)`](crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::set_interval_window_in_seconds): <p>The query interval for the window, in seconds. IoT SiteWise computes each interpolated value by using data points from the timestamp of each interval, minus the window to the timestamp of each interval plus the window. If not specified, the window ranges between the start time minus the interval and the end time plus the interval.</p> <note>   <ul>    <li> <p>If you specify a value for the <code>intervalWindowInSeconds</code> parameter, the value for the <code>type</code> parameter must be <code>LINEAR_INTERPOLATION</code>.</p> </li>    <li> <p>If a data point isn't found during the specified query window, IoT SiteWise won't return an interpolated value for the interval. This indicates that there's a gap in the ingested data points.</p> </li>   </ul>  </note>  <p>For example, you can get the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days. If the interpolation starts on July 1, 2021, at 9 AM with a window of 2 hours, IoT SiteWise uses the data points from 7 AM (9 AM minus 2 hours) to 11 AM (9 AM plus 2 hours) on July 2, 2021 to compute the first interpolated value. Next, IoT SiteWise uses the data points from 7 AM (9 AM minus 2 hours) to 11 AM (9 AM plus 2 hours) on July 3, 2021 to compute the second interpolated value, and so on. </p>
    /// - On success, responds with [`GetInterpolatedAssetPropertyValuesOutput`](crate::output::GetInterpolatedAssetPropertyValuesOutput) with field(s):
    ///   - [`interpolated_asset_property_values(Option<Vec<InterpolatedAssetPropertyValue>>)`](crate::output::GetInterpolatedAssetPropertyValuesOutput::interpolated_asset_property_values): <p>The requested interpolated values.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetInterpolatedAssetPropertyValuesOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<GetInterpolatedAssetPropertyValuesError>`](crate::error::GetInterpolatedAssetPropertyValuesError)
    pub fn get_interpolated_asset_property_values(
        &self,
    ) -> crate::client::fluent_builders::GetInterpolatedAssetPropertyValues {
        crate::client::fluent_builders::GetInterpolatedAssetPropertyValues::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAccessPolicies`](crate::client::fluent_builders::ListAccessPolicies) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAccessPolicies::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`identity_type(IdentityType)`](crate::client::fluent_builders::ListAccessPolicies::identity_type) / [`set_identity_type(Option<IdentityType>)`](crate::client::fluent_builders::ListAccessPolicies::set_identity_type): <p>The type of identity (IAM Identity Center user, IAM Identity Center group, or IAM user). This parameter is required if you specify <code>identityId</code>.</p>
    ///   - [`identity_id(impl Into<String>)`](crate::client::fluent_builders::ListAccessPolicies::identity_id) / [`set_identity_id(Option<String>)`](crate::client::fluent_builders::ListAccessPolicies::set_identity_id): <p>The ID of the identity. This parameter is required if you specify <code>USER</code> or <code>GROUP</code> for <code>identityType</code>.</p>
    ///   - [`resource_type(ResourceType)`](crate::client::fluent_builders::ListAccessPolicies::resource_type) / [`set_resource_type(Option<ResourceType>)`](crate::client::fluent_builders::ListAccessPolicies::set_resource_type): <p>The type of resource (portal or project). This parameter is required if you specify <code>resourceId</code>.</p>
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::ListAccessPolicies::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::ListAccessPolicies::set_resource_id): <p>The ID of the resource. This parameter is required if you specify <code>resourceType</code>.</p>
    ///   - [`iam_arn(impl Into<String>)`](crate::client::fluent_builders::ListAccessPolicies::iam_arn) / [`set_iam_arn(Option<String>)`](crate::client::fluent_builders::ListAccessPolicies::set_iam_arn): <p>The ARN of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM ARNs</a> in the <i>IAM User Guide</i>. This parameter is required if you specify <code>IAM</code> for <code>identityType</code>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAccessPolicies::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAccessPolicies::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAccessPolicies::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAccessPolicies::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    /// - On success, responds with [`ListAccessPoliciesOutput`](crate::output::ListAccessPoliciesOutput) with field(s):
    ///   - [`access_policy_summaries(Option<Vec<AccessPolicySummary>>)`](crate::output::ListAccessPoliciesOutput::access_policy_summaries): <p>A list that summarizes each access policy.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAccessPoliciesOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListAccessPoliciesError>`](crate::error::ListAccessPoliciesError)
    pub fn list_access_policies(&self) -> crate::client::fluent_builders::ListAccessPolicies {
        crate::client::fluent_builders::ListAccessPolicies::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAssetModelProperties`](crate::client::fluent_builders::ListAssetModelProperties) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssetModelProperties::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_model_id(impl Into<String>)`](crate::client::fluent_builders::ListAssetModelProperties::asset_model_id) / [`set_asset_model_id(Option<String>)`](crate::client::fluent_builders::ListAssetModelProperties::set_asset_model_id): <p>The ID of the asset model.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssetModelProperties::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssetModelProperties::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssetModelProperties::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssetModelProperties::set_max_results): <p>The maximum number of results to return for each paginated request. If not specified, the default value is 50.</p>
    ///   - [`filter(ListAssetModelPropertiesFilter)`](crate::client::fluent_builders::ListAssetModelProperties::filter) / [`set_filter(Option<ListAssetModelPropertiesFilter>)`](crate::client::fluent_builders::ListAssetModelProperties::set_filter): <p> Filters the requested list of asset model properties. You can choose one of the following options:</p>  <ul>   <li> <p> <code>ALL</code> – The list includes all asset model properties for a given asset model ID. </p> </li>   <li> <p> <code>BASE</code> – The list includes only base asset model properties for a given asset model ID. </p> </li>  </ul>  <p>Default: <code>BASE</code> </p>
    /// - On success, responds with [`ListAssetModelPropertiesOutput`](crate::output::ListAssetModelPropertiesOutput) with field(s):
    ///   - [`asset_model_property_summaries(Option<Vec<AssetModelPropertySummary>>)`](crate::output::ListAssetModelPropertiesOutput::asset_model_property_summaries): <p>A list that summarizes the properties associated with the specified asset model.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssetModelPropertiesOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListAssetModelPropertiesError>`](crate::error::ListAssetModelPropertiesError)
    pub fn list_asset_model_properties(
        &self,
    ) -> crate::client::fluent_builders::ListAssetModelProperties {
        crate::client::fluent_builders::ListAssetModelProperties::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAssetModels`](crate::client::fluent_builders::ListAssetModels) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssetModels::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssetModels::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssetModels::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssetModels::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssetModels::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    /// - On success, responds with [`ListAssetModelsOutput`](crate::output::ListAssetModelsOutput) with field(s):
    ///   - [`asset_model_summaries(Option<Vec<AssetModelSummary>>)`](crate::output::ListAssetModelsOutput::asset_model_summaries): <p>A list that summarizes each asset model.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssetModelsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListAssetModelsError>`](crate::error::ListAssetModelsError)
    pub fn list_asset_models(&self) -> crate::client::fluent_builders::ListAssetModels {
        crate::client::fluent_builders::ListAssetModels::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAssetProperties`](crate::client::fluent_builders::ListAssetProperties) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssetProperties::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::ListAssetProperties::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::ListAssetProperties::set_asset_id): <p>The ID of the asset.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssetProperties::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssetProperties::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssetProperties::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssetProperties::set_max_results): <p>The maximum number of results to return for each paginated request. If not specified, the default value is 50.</p>
    ///   - [`filter(ListAssetPropertiesFilter)`](crate::client::fluent_builders::ListAssetProperties::filter) / [`set_filter(Option<ListAssetPropertiesFilter>)`](crate::client::fluent_builders::ListAssetProperties::set_filter): <p> Filters the requested list of asset properties. You can choose one of the following options:</p>  <ul>   <li> <p> <code>ALL</code> – The list includes all asset properties for a given asset model ID. </p> </li>   <li> <p> <code>BASE</code> – The list includes only base asset properties for a given asset model ID. </p> </li>  </ul>  <p>Default: <code>BASE</code> </p>
    /// - On success, responds with [`ListAssetPropertiesOutput`](crate::output::ListAssetPropertiesOutput) with field(s):
    ///   - [`asset_property_summaries(Option<Vec<AssetPropertySummary>>)`](crate::output::ListAssetPropertiesOutput::asset_property_summaries): <p>A list that summarizes the properties associated with the specified asset.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssetPropertiesOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListAssetPropertiesError>`](crate::error::ListAssetPropertiesError)
    pub fn list_asset_properties(&self) -> crate::client::fluent_builders::ListAssetProperties {
        crate::client::fluent_builders::ListAssetProperties::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAssetRelationships`](crate::client::fluent_builders::ListAssetRelationships) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssetRelationships::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::ListAssetRelationships::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::ListAssetRelationships::set_asset_id): <p>The ID of the asset.</p>
    ///   - [`traversal_type(TraversalType)`](crate::client::fluent_builders::ListAssetRelationships::traversal_type) / [`set_traversal_type(Option<TraversalType>)`](crate::client::fluent_builders::ListAssetRelationships::set_traversal_type): <p>The type of traversal to use to identify asset relationships. Choose the following option:</p>  <ul>   <li> <p> <code>PATH_TO_ROOT</code> – Identify the asset's parent assets up to the root asset. The asset that you specify in <code>assetId</code> is the first result in the list of <code>assetRelationshipSummaries</code>, and the root asset is the last result.</p> </li>  </ul>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssetRelationships::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssetRelationships::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssetRelationships::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssetRelationships::set_max_results): <p>The maximum number of results to return for each paginated request.</p>
    /// - On success, responds with [`ListAssetRelationshipsOutput`](crate::output::ListAssetRelationshipsOutput) with field(s):
    ///   - [`asset_relationship_summaries(Option<Vec<AssetRelationshipSummary>>)`](crate::output::ListAssetRelationshipsOutput::asset_relationship_summaries): <p>A list that summarizes each asset relationship.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssetRelationshipsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListAssetRelationshipsError>`](crate::error::ListAssetRelationshipsError)
    pub fn list_asset_relationships(
        &self,
    ) -> crate::client::fluent_builders::ListAssetRelationships {
        crate::client::fluent_builders::ListAssetRelationships::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAssets`](crate::client::fluent_builders::ListAssets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssets::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssets::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    ///   - [`asset_model_id(impl Into<String>)`](crate::client::fluent_builders::ListAssets::asset_model_id) / [`set_asset_model_id(Option<String>)`](crate::client::fluent_builders::ListAssets::set_asset_model_id): <p>The ID of the asset model by which to filter the list of assets. This parameter is required if you choose <code>ALL</code> for <code>filter</code>.</p>
    ///   - [`filter(ListAssetsFilter)`](crate::client::fluent_builders::ListAssets::filter) / [`set_filter(Option<ListAssetsFilter>)`](crate::client::fluent_builders::ListAssets::set_filter): <p>The filter for the requested list of assets. Choose one of the following options:</p>  <ul>   <li> <p> <code>ALL</code> – The list includes all assets for a given asset model ID. The <code>assetModelId</code> parameter is required if you filter by <code>ALL</code>.</p> </li>   <li> <p> <code>TOP_LEVEL</code> – The list includes only top-level assets in the asset hierarchy tree.</p> </li>  </ul>  <p>Default: <code>ALL</code> </p>
    /// - On success, responds with [`ListAssetsOutput`](crate::output::ListAssetsOutput) with field(s):
    ///   - [`asset_summaries(Option<Vec<AssetSummary>>)`](crate::output::ListAssetsOutput::asset_summaries): <p>A list that summarizes each asset.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssetsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListAssetsError>`](crate::error::ListAssetsError)
    pub fn list_assets(&self) -> crate::client::fluent_builders::ListAssets {
        crate::client::fluent_builders::ListAssets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAssociatedAssets`](crate::client::fluent_builders::ListAssociatedAssets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssociatedAssets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::ListAssociatedAssets::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::ListAssociatedAssets::set_asset_id): <p>The ID of the asset to query.</p>
    ///   - [`hierarchy_id(impl Into<String>)`](crate::client::fluent_builders::ListAssociatedAssets::hierarchy_id) / [`set_hierarchy_id(Option<String>)`](crate::client::fluent_builders::ListAssociatedAssets::set_hierarchy_id): <p>The ID of the hierarchy by which child assets are associated to the asset. To find a hierarchy ID, use the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAsset.html">DescribeAsset</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html">DescribeAssetModel</a> operations. This parameter is required if you choose <code>CHILD</code> for <code>traversalDirection</code>.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`traversal_direction(TraversalDirection)`](crate::client::fluent_builders::ListAssociatedAssets::traversal_direction) / [`set_traversal_direction(Option<TraversalDirection>)`](crate::client::fluent_builders::ListAssociatedAssets::set_traversal_direction): <p>The direction to list associated assets. Choose one of the following options:</p>  <ul>   <li> <p> <code>CHILD</code> – The list includes all child assets associated to the asset. The <code>hierarchyId</code> parameter is required if you choose <code>CHILD</code>.</p> </li>   <li> <p> <code>PARENT</code> – The list includes the asset's parent asset.</p> </li>  </ul>  <p>Default: <code>CHILD</code> </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssociatedAssets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssociatedAssets::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssociatedAssets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssociatedAssets::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    /// - On success, responds with [`ListAssociatedAssetsOutput`](crate::output::ListAssociatedAssetsOutput) with field(s):
    ///   - [`asset_summaries(Option<Vec<AssociatedAssetsSummary>>)`](crate::output::ListAssociatedAssetsOutput::asset_summaries): <p>A list that summarizes the associated assets.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssociatedAssetsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListAssociatedAssetsError>`](crate::error::ListAssociatedAssetsError)
    pub fn list_associated_assets(&self) -> crate::client::fluent_builders::ListAssociatedAssets {
        crate::client::fluent_builders::ListAssociatedAssets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListBulkImportJobs`](crate::client::fluent_builders::ListBulkImportJobs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListBulkImportJobs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListBulkImportJobs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListBulkImportJobs::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListBulkImportJobs::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListBulkImportJobs::set_max_results): <p>The maximum number of results to return for each paginated request.</p>
    ///   - [`filter(ListBulkImportJobsFilter)`](crate::client::fluent_builders::ListBulkImportJobs::filter) / [`set_filter(Option<ListBulkImportJobsFilter>)`](crate::client::fluent_builders::ListBulkImportJobs::set_filter): <p>You can use a filter to select the bulk import jobs that you want to retrieve.</p>
    /// - On success, responds with [`ListBulkImportJobsOutput`](crate::output::ListBulkImportJobsOutput) with field(s):
    ///   - [`job_summaries(Option<Vec<JobSummary>>)`](crate::output::ListBulkImportJobsOutput::job_summaries): <p>One or more job summaries to list.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListBulkImportJobsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListBulkImportJobsError>`](crate::error::ListBulkImportJobsError)
    pub fn list_bulk_import_jobs(&self) -> crate::client::fluent_builders::ListBulkImportJobs {
        crate::client::fluent_builders::ListBulkImportJobs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListDashboards`](crate::client::fluent_builders::ListDashboards) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListDashboards::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_id(impl Into<String>)`](crate::client::fluent_builders::ListDashboards::project_id) / [`set_project_id(Option<String>)`](crate::client::fluent_builders::ListDashboards::set_project_id): <p>The ID of the project.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListDashboards::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListDashboards::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListDashboards::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListDashboards::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    /// - On success, responds with [`ListDashboardsOutput`](crate::output::ListDashboardsOutput) with field(s):
    ///   - [`dashboard_summaries(Option<Vec<DashboardSummary>>)`](crate::output::ListDashboardsOutput::dashboard_summaries): <p>A list that summarizes each dashboard in the project.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListDashboardsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListDashboardsError>`](crate::error::ListDashboardsError)
    pub fn list_dashboards(&self) -> crate::client::fluent_builders::ListDashboards {
        crate::client::fluent_builders::ListDashboards::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListGateways`](crate::client::fluent_builders::ListGateways) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListGateways::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListGateways::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListGateways::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListGateways::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListGateways::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    /// - On success, responds with [`ListGatewaysOutput`](crate::output::ListGatewaysOutput) with field(s):
    ///   - [`gateway_summaries(Option<Vec<GatewaySummary>>)`](crate::output::ListGatewaysOutput::gateway_summaries): <p>A list that summarizes each gateway.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListGatewaysOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListGatewaysError>`](crate::error::ListGatewaysError)
    pub fn list_gateways(&self) -> crate::client::fluent_builders::ListGateways {
        crate::client::fluent_builders::ListGateways::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListPortals`](crate::client::fluent_builders::ListPortals) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListPortals::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListPortals::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListPortals::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListPortals::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListPortals::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    /// - On success, responds with [`ListPortalsOutput`](crate::output::ListPortalsOutput) with field(s):
    ///   - [`portal_summaries(Option<Vec<PortalSummary>>)`](crate::output::ListPortalsOutput::portal_summaries): <p>A list that summarizes each portal.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListPortalsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListPortalsError>`](crate::error::ListPortalsError)
    pub fn list_portals(&self) -> crate::client::fluent_builders::ListPortals {
        crate::client::fluent_builders::ListPortals::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListProjectAssets`](crate::client::fluent_builders::ListProjectAssets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListProjectAssets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_id(impl Into<String>)`](crate::client::fluent_builders::ListProjectAssets::project_id) / [`set_project_id(Option<String>)`](crate::client::fluent_builders::ListProjectAssets::set_project_id): <p>The ID of the project.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListProjectAssets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListProjectAssets::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListProjectAssets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListProjectAssets::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    /// - On success, responds with [`ListProjectAssetsOutput`](crate::output::ListProjectAssetsOutput) with field(s):
    ///   - [`asset_ids(Option<Vec<String>>)`](crate::output::ListProjectAssetsOutput::asset_ids): <p>A list that contains the IDs of each asset associated with the project.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListProjectAssetsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListProjectAssetsError>`](crate::error::ListProjectAssetsError)
    pub fn list_project_assets(&self) -> crate::client::fluent_builders::ListProjectAssets {
        crate::client::fluent_builders::ListProjectAssets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListProjects`](crate::client::fluent_builders::ListProjects) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListProjects::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`portal_id(impl Into<String>)`](crate::client::fluent_builders::ListProjects::portal_id) / [`set_portal_id(Option<String>)`](crate::client::fluent_builders::ListProjects::set_portal_id): <p>The ID of the portal.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListProjects::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListProjects::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListProjects::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListProjects::set_max_results): <p>The maximum number of results to return for each paginated request.</p>  <p>Default: 50</p>
    /// - On success, responds with [`ListProjectsOutput`](crate::output::ListProjectsOutput) with field(s):
    ///   - [`project_summaries(Option<Vec<ProjectSummary>>)`](crate::output::ListProjectsOutput::project_summaries): <p>A list that summarizes each project in the portal.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListProjectsOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListProjectsError>`](crate::error::ListProjectsError)
    pub fn list_projects(&self) -> crate::client::fluent_builders::ListProjects {
        crate::client::fluent_builders::ListProjects::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the resource.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::ListTagsForResourceOutput::tags): <p>The list of key-value pairs that contain metadata for the resource. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTimeSeries`](crate::client::fluent_builders::ListTimeSeries) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTimeSeries::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTimeSeries::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTimeSeries::set_next_token): <p>The token to be used for the next set of paginated results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTimeSeries::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTimeSeries::set_max_results): <p>The maximum number of results to return for each paginated request.</p>
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::ListTimeSeries::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::ListTimeSeries::set_asset_id): <p>The ID of the asset in which the asset property was created.</p>
    ///   - [`alias_prefix(impl Into<String>)`](crate::client::fluent_builders::ListTimeSeries::alias_prefix) / [`set_alias_prefix(Option<String>)`](crate::client::fluent_builders::ListTimeSeries::set_alias_prefix): <p>The alias prefix of the time series.</p>
    ///   - [`time_series_type(ListTimeSeriesType)`](crate::client::fluent_builders::ListTimeSeries::time_series_type) / [`set_time_series_type(Option<ListTimeSeriesType>)`](crate::client::fluent_builders::ListTimeSeries::set_time_series_type): <p>The type of the time series. The time series type can be one of the following values:</p>  <ul>   <li> <p> <code>ASSOCIATED</code> – The time series is associated with an asset property.</p> </li>   <li> <p> <code>DISASSOCIATED</code> – The time series isn't associated with any asset property.</p> </li>  </ul>
    /// - On success, responds with [`ListTimeSeriesOutput`](crate::output::ListTimeSeriesOutput) with field(s):
    ///   - [`time_series_summaries(Option<Vec<TimeSeriesSummary>>)`](crate::output::ListTimeSeriesOutput::time_series_summaries): <p>One or more time series summaries to list.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTimeSeriesOutput::next_token): <p>The token for the next set of results, or null if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListTimeSeriesError>`](crate::error::ListTimeSeriesError)
    pub fn list_time_series(&self) -> crate::client::fluent_builders::ListTimeSeries {
        crate::client::fluent_builders::ListTimeSeries::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutDefaultEncryptionConfiguration`](crate::client::fluent_builders::PutDefaultEncryptionConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`encryption_type(EncryptionType)`](crate::client::fluent_builders::PutDefaultEncryptionConfiguration::encryption_type) / [`set_encryption_type(Option<EncryptionType>)`](crate::client::fluent_builders::PutDefaultEncryptionConfiguration::set_encryption_type): <p>The type of encryption used for the encryption configuration.</p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::client::fluent_builders::PutDefaultEncryptionConfiguration::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::client::fluent_builders::PutDefaultEncryptionConfiguration::set_kms_key_id): <p>The Key ID of the customer managed key used for KMS encryption. This is required if you use <code>KMS_BASED_ENCRYPTION</code>.</p>
    /// - On success, responds with [`PutDefaultEncryptionConfigurationOutput`](crate::output::PutDefaultEncryptionConfigurationOutput) with field(s):
    ///   - [`encryption_type(Option<EncryptionType>)`](crate::output::PutDefaultEncryptionConfigurationOutput::encryption_type): <p>The type of encryption used for the encryption configuration.</p>
    ///   - [`kms_key_arn(Option<String>)`](crate::output::PutDefaultEncryptionConfigurationOutput::kms_key_arn): <p>The Key ARN of the KMS key used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.</p>
    ///   - [`configuration_status(Option<ConfigurationStatus>)`](crate::output::PutDefaultEncryptionConfigurationOutput::configuration_status): <p>The status of the account configuration. This contains the <code>ConfigurationState</code>. If there is an error, it also contains the <code>ErrorDetails</code>.</p>
    /// - On failure, responds with [`SdkError<PutDefaultEncryptionConfigurationError>`](crate::error::PutDefaultEncryptionConfigurationError)
    pub fn put_default_encryption_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutDefaultEncryptionConfiguration {
        crate::client::fluent_builders::PutDefaultEncryptionConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutLoggingOptions`](crate::client::fluent_builders::PutLoggingOptions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`logging_options(LoggingOptions)`](crate::client::fluent_builders::PutLoggingOptions::logging_options) / [`set_logging_options(Option<LoggingOptions>)`](crate::client::fluent_builders::PutLoggingOptions::set_logging_options): <p>The logging options to set.</p>
    /// - On success, responds with [`PutLoggingOptionsOutput`](crate::output::PutLoggingOptionsOutput)

    /// - On failure, responds with [`SdkError<PutLoggingOptionsError>`](crate::error::PutLoggingOptionsError)
    pub fn put_logging_options(&self) -> crate::client::fluent_builders::PutLoggingOptions {
        crate::client::fluent_builders::PutLoggingOptions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutStorageConfiguration`](crate::client::fluent_builders::PutStorageConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`storage_type(StorageType)`](crate::client::fluent_builders::PutStorageConfiguration::storage_type) / [`set_storage_type(Option<StorageType>)`](crate::client::fluent_builders::PutStorageConfiguration::set_storage_type): <p>The storage tier that you specified for your data. The <code>storageType</code> parameter can be one of the following values:</p>  <ul>   <li> <p> <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise saves your data into the hot tier. The hot tier is a service-managed database.</p> </li>   <li> <p> <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise saves your data in both the cold tier and the hot tier. The cold tier is a customer-managed Amazon S3 bucket.</p> </li>  </ul>
    ///   - [`multi_layer_storage(MultiLayerStorage)`](crate::client::fluent_builders::PutStorageConfiguration::multi_layer_storage) / [`set_multi_layer_storage(Option<MultiLayerStorage>)`](crate::client::fluent_builders::PutStorageConfiguration::set_multi_layer_storage): <p>Identifies a storage destination. If you specified <code>MULTI_LAYER_STORAGE</code> for the storage type, you must specify a <code>MultiLayerStorage</code> object.</p>
    ///   - [`disassociated_data_storage(DisassociatedDataStorageState)`](crate::client::fluent_builders::PutStorageConfiguration::disassociated_data_storage) / [`set_disassociated_data_storage(Option<DisassociatedDataStorageState>)`](crate::client::fluent_builders::PutStorageConfiguration::set_disassociated_data_storage): <p>Contains the storage configuration for time series (data streams) that aren't associated with asset properties. The <code>disassociatedDataStorage</code> can be one of the following values:</p>  <ul>   <li> <p> <code>ENABLED</code> – IoT SiteWise accepts time series that aren't associated with asset properties.</p> <important>     <p>After the <code>disassociatedDataStorage</code> is enabled, you can't disable it.</p>    </important> </li>   <li> <p> <code>DISABLED</code> – IoT SiteWise doesn't accept time series (data streams) that aren't associated with asset properties.</p> </li>  </ul>  <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html">Data streams</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`retention_period(RetentionPeriod)`](crate::client::fluent_builders::PutStorageConfiguration::retention_period) / [`set_retention_period(Option<RetentionPeriod>)`](crate::client::fluent_builders::PutStorageConfiguration::set_retention_period): <p>How many days your data is kept in the hot tier. By default, your data is kept indefinitely in the hot tier.</p>
    /// - On success, responds with [`PutStorageConfigurationOutput`](crate::output::PutStorageConfigurationOutput) with field(s):
    ///   - [`storage_type(Option<StorageType>)`](crate::output::PutStorageConfigurationOutput::storage_type): <p>The storage tier that you specified for your data. The <code>storageType</code> parameter can be one of the following values:</p>  <ul>   <li> <p> <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise saves your data into the hot tier. The hot tier is a service-managed database.</p> </li>   <li> <p> <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise saves your data in both the cold tier and the hot tier. The cold tier is a customer-managed Amazon S3 bucket.</p> </li>  </ul>
    ///   - [`multi_layer_storage(Option<MultiLayerStorage>)`](crate::output::PutStorageConfigurationOutput::multi_layer_storage): <p>Contains information about the storage destination.</p>
    ///   - [`disassociated_data_storage(Option<DisassociatedDataStorageState>)`](crate::output::PutStorageConfigurationOutput::disassociated_data_storage): <p>Contains the storage configuration for time series (data streams) that aren't associated with asset properties. The <code>disassociatedDataStorage</code> can be one of the following values:</p>  <ul>   <li> <p> <code>ENABLED</code> – IoT SiteWise accepts time series that aren't associated with asset properties.</p> <important>     <p>After the <code>disassociatedDataStorage</code> is enabled, you can't disable it.</p>    </important> </li>   <li> <p> <code>DISABLED</code> – IoT SiteWise doesn't accept time series (data streams) that aren't associated with asset properties.</p> </li>  </ul>  <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html">Data streams</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`retention_period(Option<RetentionPeriod>)`](crate::output::PutStorageConfigurationOutput::retention_period): <p>How many days your data is kept in the hot tier. By default, your data is kept indefinitely in the hot tier.</p>
    ///   - [`configuration_status(Option<ConfigurationStatus>)`](crate::output::PutStorageConfigurationOutput::configuration_status): <p>Contains current status information for the configuration.</p>
    /// - On failure, responds with [`SdkError<PutStorageConfigurationError>`](crate::error::PutStorageConfigurationError)
    pub fn put_storage_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutStorageConfiguration {
        crate::client::fluent_builders::PutStorageConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the resource to tag.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>A list of key-value pairs that contain metadata for the resource. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the resource to untag.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>A list of keys for tags to remove from the resource.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAccessPolicy`](crate::client::fluent_builders::UpdateAccessPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_policy_id(impl Into<String>)`](crate::client::fluent_builders::UpdateAccessPolicy::access_policy_id) / [`set_access_policy_id(Option<String>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_access_policy_id): <p>The ID of the access policy.</p>
    ///   - [`access_policy_identity(Identity)`](crate::client::fluent_builders::UpdateAccessPolicy::access_policy_identity) / [`set_access_policy_identity(Option<Identity>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_access_policy_identity): <p>The identity for this access policy. Choose an IAM Identity Center user, an IAM Identity Center group, or an IAM user.</p>
    ///   - [`access_policy_resource(Resource)`](crate::client::fluent_builders::UpdateAccessPolicy::access_policy_resource) / [`set_access_policy_resource(Option<Resource>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_access_policy_resource): <p>The IoT SiteWise Monitor resource for this access policy. Choose either a portal or a project.</p>
    ///   - [`access_policy_permission(Permission)`](crate::client::fluent_builders::UpdateAccessPolicy::access_policy_permission) / [`set_access_policy_permission(Option<Permission>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_access_policy_permission): <p>The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdateAccessPolicy::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdateAccessPolicy::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`UpdateAccessPolicyOutput`](crate::output::UpdateAccessPolicyOutput)

    /// - On failure, responds with [`SdkError<UpdateAccessPolicyError>`](crate::error::UpdateAccessPolicyError)
    pub fn update_access_policy(&self) -> crate::client::fluent_builders::UpdateAccessPolicy {
        crate::client::fluent_builders::UpdateAccessPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAsset`](crate::client::fluent_builders::UpdateAsset) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::UpdateAsset::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::UpdateAsset::set_asset_id): <p>The ID of the asset to update.</p>
    ///   - [`asset_name(impl Into<String>)`](crate::client::fluent_builders::UpdateAsset::asset_name) / [`set_asset_name(Option<String>)`](crate::client::fluent_builders::UpdateAsset::set_asset_name): <p>A friendly name for the asset.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdateAsset::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdateAsset::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    ///   - [`asset_description(impl Into<String>)`](crate::client::fluent_builders::UpdateAsset::asset_description) / [`set_asset_description(Option<String>)`](crate::client::fluent_builders::UpdateAsset::set_asset_description): <p>A description for the asset.</p>
    /// - On success, responds with [`UpdateAssetOutput`](crate::output::UpdateAssetOutput) with field(s):
    ///   - [`asset_status(Option<AssetStatus>)`](crate::output::UpdateAssetOutput::asset_status): <p>The status of the asset, which contains a state (<code>UPDATING</code> after successfully calling this operation) and any error message.</p>
    /// - On failure, responds with [`SdkError<UpdateAssetError>`](crate::error::UpdateAssetError)
    pub fn update_asset(&self) -> crate::client::fluent_builders::UpdateAsset {
        crate::client::fluent_builders::UpdateAsset::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAssetModel`](crate::client::fluent_builders::UpdateAssetModel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_model_id(impl Into<String>)`](crate::client::fluent_builders::UpdateAssetModel::asset_model_id) / [`set_asset_model_id(Option<String>)`](crate::client::fluent_builders::UpdateAssetModel::set_asset_model_id): <p>The ID of the asset model to update.</p>
    ///   - [`asset_model_name(impl Into<String>)`](crate::client::fluent_builders::UpdateAssetModel::asset_model_name) / [`set_asset_model_name(Option<String>)`](crate::client::fluent_builders::UpdateAssetModel::set_asset_model_name): <p>A unique, friendly name for the asset model.</p>
    ///   - [`asset_model_description(impl Into<String>)`](crate::client::fluent_builders::UpdateAssetModel::asset_model_description) / [`set_asset_model_description(Option<String>)`](crate::client::fluent_builders::UpdateAssetModel::set_asset_model_description): <p>A description for the asset model.</p>
    ///   - [`asset_model_properties(Vec<AssetModelProperty>)`](crate::client::fluent_builders::UpdateAssetModel::asset_model_properties) / [`set_asset_model_properties(Option<Vec<AssetModelProperty>>)`](crate::client::fluent_builders::UpdateAssetModel::set_asset_model_properties): <p>The updated property definitions of the asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p>  <p>You can specify up to 200 properties per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`asset_model_hierarchies(Vec<AssetModelHierarchy>)`](crate::client::fluent_builders::UpdateAssetModel::asset_model_hierarchies) / [`set_asset_model_hierarchies(Option<Vec<AssetModelHierarchy>>)`](crate::client::fluent_builders::UpdateAssetModel::set_asset_model_hierarchies): <p>The updated hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>  <p>You can specify up to 10 hierarchies per asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`asset_model_composite_models(Vec<AssetModelCompositeModel>)`](crate::client::fluent_builders::UpdateAssetModel::asset_model_composite_models) / [`set_asset_model_composite_models(Option<Vec<AssetModelCompositeModel>>)`](crate::client::fluent_builders::UpdateAssetModel::set_asset_model_composite_models): <p>The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdateAssetModel::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdateAssetModel::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`UpdateAssetModelOutput`](crate::output::UpdateAssetModelOutput) with field(s):
    ///   - [`asset_model_status(Option<AssetModelStatus>)`](crate::output::UpdateAssetModelOutput::asset_model_status): <p>The status of the asset model, which contains a state (<code>UPDATING</code> after successfully calling this operation) and any error message.</p>
    /// - On failure, responds with [`SdkError<UpdateAssetModelError>`](crate::error::UpdateAssetModelError)
    pub fn update_asset_model(&self) -> crate::client::fluent_builders::UpdateAssetModel {
        crate::client::fluent_builders::UpdateAssetModel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAssetProperty`](crate::client::fluent_builders::UpdateAssetProperty) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`asset_id(impl Into<String>)`](crate::client::fluent_builders::UpdateAssetProperty::asset_id) / [`set_asset_id(Option<String>)`](crate::client::fluent_builders::UpdateAssetProperty::set_asset_id): <p>The ID of the asset to be updated.</p>
    ///   - [`property_id(impl Into<String>)`](crate::client::fluent_builders::UpdateAssetProperty::property_id) / [`set_property_id(Option<String>)`](crate::client::fluent_builders::UpdateAssetProperty::set_property_id): <p>The ID of the asset property to be updated.</p>
    ///   - [`property_alias(impl Into<String>)`](crate::client::fluent_builders::UpdateAssetProperty::property_alias) / [`set_property_alias(Option<String>)`](crate::client::fluent_builders::UpdateAssetProperty::set_property_alias): <p>The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p>  <p>If you omit this parameter, the alias is removed from the property.</p>
    ///   - [`property_notification_state(PropertyNotificationState)`](crate::client::fluent_builders::UpdateAssetProperty::property_notification_state) / [`set_property_notification_state(Option<PropertyNotificationState>)`](crate::client::fluent_builders::UpdateAssetProperty::set_property_notification_state): <p>The MQTT notification state (enabled or disabled) for this asset property. When the notification state is enabled, IoT SiteWise publishes property value updates to a unique MQTT topic. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html">Interacting with other services</a> in the <i>IoT SiteWise User Guide</i>.</p>  <p>If you omit this parameter, the notification state is set to <code>DISABLED</code>.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdateAssetProperty::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdateAssetProperty::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    ///   - [`property_unit(impl Into<String>)`](crate::client::fluent_builders::UpdateAssetProperty::property_unit) / [`set_property_unit(Option<String>)`](crate::client::fluent_builders::UpdateAssetProperty::set_property_unit): <p>The unit of measure (such as Newtons or RPM) of the asset property. If you don't specify a value for this parameter, the service uses the value of the <code>assetModelProperty</code> in the asset model.</p>
    /// - On success, responds with [`UpdateAssetPropertyOutput`](crate::output::UpdateAssetPropertyOutput)

    /// - On failure, responds with [`SdkError<UpdateAssetPropertyError>`](crate::error::UpdateAssetPropertyError)
    pub fn update_asset_property(&self) -> crate::client::fluent_builders::UpdateAssetProperty {
        crate::client::fluent_builders::UpdateAssetProperty::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateDashboard`](crate::client::fluent_builders::UpdateDashboard) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dashboard_id(impl Into<String>)`](crate::client::fluent_builders::UpdateDashboard::dashboard_id) / [`set_dashboard_id(Option<String>)`](crate::client::fluent_builders::UpdateDashboard::set_dashboard_id): <p>The ID of the dashboard to update.</p>
    ///   - [`dashboard_name(impl Into<String>)`](crate::client::fluent_builders::UpdateDashboard::dashboard_name) / [`set_dashboard_name(Option<String>)`](crate::client::fluent_builders::UpdateDashboard::set_dashboard_name): <p>A new friendly name for the dashboard.</p>
    ///   - [`dashboard_description(impl Into<String>)`](crate::client::fluent_builders::UpdateDashboard::dashboard_description) / [`set_dashboard_description(Option<String>)`](crate::client::fluent_builders::UpdateDashboard::set_dashboard_description): <p>A new description for the dashboard.</p>
    ///   - [`dashboard_definition(impl Into<String>)`](crate::client::fluent_builders::UpdateDashboard::dashboard_definition) / [`set_dashboard_definition(Option<String>)`](crate::client::fluent_builders::UpdateDashboard::set_dashboard_definition): <p>The new dashboard definition, as specified in a JSON literal. For detailed information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdateDashboard::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdateDashboard::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`UpdateDashboardOutput`](crate::output::UpdateDashboardOutput)

    /// - On failure, responds with [`SdkError<UpdateDashboardError>`](crate::error::UpdateDashboardError)
    pub fn update_dashboard(&self) -> crate::client::fluent_builders::UpdateDashboard {
        crate::client::fluent_builders::UpdateDashboard::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateGateway`](crate::client::fluent_builders::UpdateGateway) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`gateway_id(impl Into<String>)`](crate::client::fluent_builders::UpdateGateway::gateway_id) / [`set_gateway_id(Option<String>)`](crate::client::fluent_builders::UpdateGateway::set_gateway_id): <p>The ID of the gateway to update.</p>
    ///   - [`gateway_name(impl Into<String>)`](crate::client::fluent_builders::UpdateGateway::gateway_name) / [`set_gateway_name(Option<String>)`](crate::client::fluent_builders::UpdateGateway::set_gateway_name): <p>A unique, friendly name for the gateway.</p>
    /// - On success, responds with [`UpdateGatewayOutput`](crate::output::UpdateGatewayOutput)

    /// - On failure, responds with [`SdkError<UpdateGatewayError>`](crate::error::UpdateGatewayError)
    pub fn update_gateway(&self) -> crate::client::fluent_builders::UpdateGateway {
        crate::client::fluent_builders::UpdateGateway::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateGatewayCapabilityConfiguration`](crate::client::fluent_builders::UpdateGatewayCapabilityConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`gateway_id(impl Into<String>)`](crate::client::fluent_builders::UpdateGatewayCapabilityConfiguration::gateway_id) / [`set_gateway_id(Option<String>)`](crate::client::fluent_builders::UpdateGatewayCapabilityConfiguration::set_gateway_id): <p>The ID of the gateway to be updated.</p>
    ///   - [`capability_namespace(impl Into<String>)`](crate::client::fluent_builders::UpdateGatewayCapabilityConfiguration::capability_namespace) / [`set_capability_namespace(Option<String>)`](crate::client::fluent_builders::UpdateGatewayCapabilityConfiguration::set_capability_namespace): <p>The namespace of the gateway capability configuration to be updated. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as <code>1</code>.</p>
    ///   - [`capability_configuration(impl Into<String>)`](crate::client::fluent_builders::UpdateGatewayCapabilityConfiguration::capability_configuration) / [`set_capability_configuration(Option<String>)`](crate::client::fluent_builders::UpdateGatewayCapabilityConfiguration::set_capability_configuration): <p>The JSON document that defines the configuration for the gateway capability. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/configure-sources.html#configure-source-cli">Configuring data sources (CLI)</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// - On success, responds with [`UpdateGatewayCapabilityConfigurationOutput`](crate::output::UpdateGatewayCapabilityConfigurationOutput) with field(s):
    ///   - [`capability_namespace(Option<String>)`](crate::output::UpdateGatewayCapabilityConfigurationOutput::capability_namespace): <p>The namespace of the gateway capability.</p>
    ///   - [`capability_sync_status(Option<CapabilitySyncStatus>)`](crate::output::UpdateGatewayCapabilityConfigurationOutput::capability_sync_status): <p>The synchronization status of the capability configuration. The sync status can be one of the following:</p>  <ul>   <li> <p> <code>IN_SYNC</code> – The gateway is running the capability configuration.</p> </li>   <li> <p> <code>OUT_OF_SYNC</code> – The gateway hasn't received the capability configuration.</p> </li>   <li> <p> <code>SYNC_FAILED</code> – The gateway rejected the capability configuration.</p> </li>  </ul>  <p>After you update a capability configuration, its sync status is <code>OUT_OF_SYNC</code> until the gateway receives and applies or rejects the updated configuration.</p>
    /// - On failure, responds with [`SdkError<UpdateGatewayCapabilityConfigurationError>`](crate::error::UpdateGatewayCapabilityConfigurationError)
    pub fn update_gateway_capability_configuration(
        &self,
    ) -> crate::client::fluent_builders::UpdateGatewayCapabilityConfiguration {
        crate::client::fluent_builders::UpdateGatewayCapabilityConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`UpdatePortal`](crate::client::fluent_builders::UpdatePortal) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`portal_id(impl Into<String>)`](crate::client::fluent_builders::UpdatePortal::portal_id) / [`set_portal_id(Option<String>)`](crate::client::fluent_builders::UpdatePortal::set_portal_id): <p>The ID of the portal to update.</p>
    ///   - [`portal_name(impl Into<String>)`](crate::client::fluent_builders::UpdatePortal::portal_name) / [`set_portal_name(Option<String>)`](crate::client::fluent_builders::UpdatePortal::set_portal_name): <p>A new friendly name for the portal.</p>
    ///   - [`portal_description(impl Into<String>)`](crate::client::fluent_builders::UpdatePortal::portal_description) / [`set_portal_description(Option<String>)`](crate::client::fluent_builders::UpdatePortal::set_portal_description): <p>A new description for the portal.</p>
    ///   - [`portal_contact_email(impl Into<String>)`](crate::client::fluent_builders::UpdatePortal::portal_contact_email) / [`set_portal_contact_email(Option<String>)`](crate::client::fluent_builders::UpdatePortal::set_portal_contact_email): <p>The Amazon Web Services administrator's contact email address.</p>
    ///   - [`portal_logo_image(Image)`](crate::client::fluent_builders::UpdatePortal::portal_logo_image) / [`set_portal_logo_image(Option<Image>)`](crate::client::fluent_builders::UpdatePortal::set_portal_logo_image): <p>Contains an image that is one of the following:</p>  <ul>   <li> <p>An image file. Choose this option to upload a new image.</p> </li>   <li> <p>The ID of an existing image. Choose this option to keep an existing image.</p> </li>  </ul>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdatePortal::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::UpdatePortal::set_role_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of a service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdatePortal::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdatePortal::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    ///   - [`notification_sender_email(impl Into<String>)`](crate::client::fluent_builders::UpdatePortal::notification_sender_email) / [`set_notification_sender_email(Option<String>)`](crate::client::fluent_builders::UpdatePortal::set_notification_sender_email): <p>The email address that sends alarm notifications.</p>
    ///   - [`alarms(Alarms)`](crate::client::fluent_builders::UpdatePortal::alarms) / [`set_alarms(Option<Alarms>)`](crate::client::fluent_builders::UpdatePortal::set_alarms): <p>Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.</p>
    /// - On success, responds with [`UpdatePortalOutput`](crate::output::UpdatePortalOutput) with field(s):
    ///   - [`portal_status(Option<PortalStatus>)`](crate::output::UpdatePortalOutput::portal_status): <p>The status of the portal, which contains a state (<code>UPDATING</code> after successfully calling this operation) and any error message.</p>
    /// - On failure, responds with [`SdkError<UpdatePortalError>`](crate::error::UpdatePortalError)
    pub fn update_portal(&self) -> crate::client::fluent_builders::UpdatePortal {
        crate::client::fluent_builders::UpdatePortal::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateProject`](crate::client::fluent_builders::UpdateProject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_id(impl Into<String>)`](crate::client::fluent_builders::UpdateProject::project_id) / [`set_project_id(Option<String>)`](crate::client::fluent_builders::UpdateProject::set_project_id): <p>The ID of the project to update.</p>
    ///   - [`project_name(impl Into<String>)`](crate::client::fluent_builders::UpdateProject::project_name) / [`set_project_name(Option<String>)`](crate::client::fluent_builders::UpdateProject::set_project_name): <p>A new friendly name for the project.</p>
    ///   - [`project_description(impl Into<String>)`](crate::client::fluent_builders::UpdateProject::project_description) / [`set_project_description(Option<String>)`](crate::client::fluent_builders::UpdateProject::set_project_description): <p>A new description for the project.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdateProject::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdateProject::set_client_token): <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    /// - On success, responds with [`UpdateProjectOutput`](crate::output::UpdateProjectOutput)

    /// - On failure, responds with [`SdkError<UpdateProjectError>`](crate::error::UpdateProjectError)
    pub fn update_project(&self) -> crate::client::fluent_builders::UpdateProject {
        crate::client::fluent_builders::UpdateProject::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
