// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains success information for an entry that is associated with the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html">BatchGetAssetPropertyValueHistory</a> API.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchGetAssetPropertyValueHistorySuccessEntry {
    /// <p>The ID of the entry.</p>
    #[doc(hidden)]
    pub entry_id: std::option::Option<std::string::String>,
    /// <p>The requested historical values for the specified asset property.</p>
    #[doc(hidden)]
    pub asset_property_value_history:
        std::option::Option<std::vec::Vec<crate::types::AssetPropertyValue>>,
}
impl BatchGetAssetPropertyValueHistorySuccessEntry {
    /// <p>The ID of the entry.</p>
    pub fn entry_id(&self) -> std::option::Option<&str> {
        self.entry_id.as_deref()
    }
    /// <p>The requested historical values for the specified asset property.</p>
    pub fn asset_property_value_history(
        &self,
    ) -> std::option::Option<&[crate::types::AssetPropertyValue]> {
        self.asset_property_value_history.as_deref()
    }
}
impl BatchGetAssetPropertyValueHistorySuccessEntry {
    /// Creates a new builder-style object to manufacture [`BatchGetAssetPropertyValueHistorySuccessEntry`](crate::types::BatchGetAssetPropertyValueHistorySuccessEntry).
    pub fn builder() -> crate::types::builders::BatchGetAssetPropertyValueHistorySuccessEntryBuilder
    {
        crate::types::builders::BatchGetAssetPropertyValueHistorySuccessEntryBuilder::default()
    }
}

/// A builder for [`BatchGetAssetPropertyValueHistorySuccessEntry`](crate::types::BatchGetAssetPropertyValueHistorySuccessEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchGetAssetPropertyValueHistorySuccessEntryBuilder {
    pub(crate) entry_id: std::option::Option<std::string::String>,
    pub(crate) asset_property_value_history:
        std::option::Option<std::vec::Vec<crate::types::AssetPropertyValue>>,
}
impl BatchGetAssetPropertyValueHistorySuccessEntryBuilder {
    /// <p>The ID of the entry.</p>
    pub fn entry_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.entry_id = Some(input.into());
        self
    }
    /// <p>The ID of the entry.</p>
    pub fn set_entry_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.entry_id = input;
        self
    }
    /// Appends an item to `asset_property_value_history`.
    ///
    /// To override the contents of this collection use [`set_asset_property_value_history`](Self::set_asset_property_value_history).
    ///
    /// <p>The requested historical values for the specified asset property.</p>
    pub fn asset_property_value_history(mut self, input: crate::types::AssetPropertyValue) -> Self {
        let mut v = self.asset_property_value_history.unwrap_or_default();
        v.push(input);
        self.asset_property_value_history = Some(v);
        self
    }
    /// <p>The requested historical values for the specified asset property.</p>
    pub fn set_asset_property_value_history(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AssetPropertyValue>>,
    ) -> Self {
        self.asset_property_value_history = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetAssetPropertyValueHistorySuccessEntry`](crate::types::BatchGetAssetPropertyValueHistorySuccessEntry).
    pub fn build(self) -> crate::types::BatchGetAssetPropertyValueHistorySuccessEntry {
        crate::types::BatchGetAssetPropertyValueHistorySuccessEntry {
            entry_id: self.entry_id,
            asset_property_value_history: self.asset_property_value_history,
        }
    }
}
