// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains logging options.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LoggingOptions {
    /// <p>The IoT SiteWise logging verbosity level.</p>
    #[doc(hidden)]
    pub level: std::option::Option<crate::types::LoggingLevel>,
}
impl LoggingOptions {
    /// <p>The IoT SiteWise logging verbosity level.</p>
    pub fn level(&self) -> std::option::Option<&crate::types::LoggingLevel> {
        self.level.as_ref()
    }
}
impl LoggingOptions {
    /// Creates a new builder-style object to manufacture [`LoggingOptions`](crate::types::LoggingOptions).
    pub fn builder() -> crate::types::builders::LoggingOptionsBuilder {
        crate::types::builders::LoggingOptionsBuilder::default()
    }
}

/// A builder for [`LoggingOptions`](crate::types::LoggingOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LoggingOptionsBuilder {
    pub(crate) level: std::option::Option<crate::types::LoggingLevel>,
}
impl LoggingOptionsBuilder {
    /// <p>The IoT SiteWise logging verbosity level.</p>
    pub fn level(mut self, input: crate::types::LoggingLevel) -> Self {
        self.level = Some(input);
        self
    }
    /// <p>The IoT SiteWise logging verbosity level.</p>
    pub fn set_level(mut self, input: std::option::Option<crate::types::LoggingLevel>) -> Self {
        self.level = input;
        self
    }
    /// Consumes the builder and constructs a [`LoggingOptions`](crate::types::LoggingOptions).
    pub fn build(self) -> crate::types::LoggingOptions {
        crate::types::LoggingOptions { level: self.level }
    }
}
