// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains an asset measurement property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#measurements">Measurements</a> in the <i>IoT SiteWise User Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Measurement {
    /// <p>The processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.</p>
    #[doc(hidden)]
    pub processing_config: std::option::Option<crate::types::MeasurementProcessingConfig>,
}
impl Measurement {
    /// <p>The processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.</p>
    pub fn processing_config(
        &self,
    ) -> std::option::Option<&crate::types::MeasurementProcessingConfig> {
        self.processing_config.as_ref()
    }
}
impl Measurement {
    /// Creates a new builder-style object to manufacture [`Measurement`](crate::types::Measurement).
    pub fn builder() -> crate::types::builders::MeasurementBuilder {
        crate::types::builders::MeasurementBuilder::default()
    }
}

/// A builder for [`Measurement`](crate::types::Measurement).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MeasurementBuilder {
    pub(crate) processing_config: std::option::Option<crate::types::MeasurementProcessingConfig>,
}
impl MeasurementBuilder {
    /// <p>The processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.</p>
    pub fn processing_config(mut self, input: crate::types::MeasurementProcessingConfig) -> Self {
        self.processing_config = Some(input);
        self
    }
    /// <p>The processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.</p>
    pub fn set_processing_config(
        mut self,
        input: std::option::Option<crate::types::MeasurementProcessingConfig>,
    ) -> Self {
        self.processing_config = input;
        self
    }
    /// Consumes the builder and constructs a [`Measurement`](crate::types::Measurement).
    pub fn build(self) -> crate::types::Measurement {
        crate::types::Measurement {
            processing_config: self.processing_config,
        }
    }
}
