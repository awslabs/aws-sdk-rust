// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains error information from updating a batch of asset property values.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchPutAssetPropertyError {
    /// <p>The error code.</p>
    #[doc(hidden)]
    pub error_code: std::option::Option<crate::types::BatchPutAssetPropertyValueErrorCode>,
    /// <p>The associated error message.</p>
    #[doc(hidden)]
    pub error_message: std::option::Option<std::string::String>,
    /// <p>A list of timestamps for each error, if any.</p>
    #[doc(hidden)]
    pub timestamps: std::option::Option<std::vec::Vec<crate::types::TimeInNanos>>,
}
impl BatchPutAssetPropertyError {
    /// <p>The error code.</p>
    pub fn error_code(
        &self,
    ) -> std::option::Option<&crate::types::BatchPutAssetPropertyValueErrorCode> {
        self.error_code.as_ref()
    }
    /// <p>The associated error message.</p>
    pub fn error_message(&self) -> std::option::Option<&str> {
        self.error_message.as_deref()
    }
    /// <p>A list of timestamps for each error, if any.</p>
    pub fn timestamps(&self) -> std::option::Option<&[crate::types::TimeInNanos]> {
        self.timestamps.as_deref()
    }
}
impl BatchPutAssetPropertyError {
    /// Creates a new builder-style object to manufacture [`BatchPutAssetPropertyError`](crate::types::BatchPutAssetPropertyError).
    pub fn builder() -> crate::types::builders::BatchPutAssetPropertyErrorBuilder {
        crate::types::builders::BatchPutAssetPropertyErrorBuilder::default()
    }
}

/// A builder for [`BatchPutAssetPropertyError`](crate::types::BatchPutAssetPropertyError).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchPutAssetPropertyErrorBuilder {
    pub(crate) error_code: std::option::Option<crate::types::BatchPutAssetPropertyValueErrorCode>,
    pub(crate) error_message: std::option::Option<std::string::String>,
    pub(crate) timestamps: std::option::Option<std::vec::Vec<crate::types::TimeInNanos>>,
}
impl BatchPutAssetPropertyErrorBuilder {
    /// <p>The error code.</p>
    pub fn error_code(mut self, input: crate::types::BatchPutAssetPropertyValueErrorCode) -> Self {
        self.error_code = Some(input);
        self
    }
    /// <p>The error code.</p>
    pub fn set_error_code(
        mut self,
        input: std::option::Option<crate::types::BatchPutAssetPropertyValueErrorCode>,
    ) -> Self {
        self.error_code = input;
        self
    }
    /// <p>The associated error message.</p>
    pub fn error_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.error_message = Some(input.into());
        self
    }
    /// <p>The associated error message.</p>
    pub fn set_error_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// Appends an item to `timestamps`.
    ///
    /// To override the contents of this collection use [`set_timestamps`](Self::set_timestamps).
    ///
    /// <p>A list of timestamps for each error, if any.</p>
    pub fn timestamps(mut self, input: crate::types::TimeInNanos) -> Self {
        let mut v = self.timestamps.unwrap_or_default();
        v.push(input);
        self.timestamps = Some(v);
        self
    }
    /// <p>A list of timestamps for each error, if any.</p>
    pub fn set_timestamps(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TimeInNanos>>,
    ) -> Self {
        self.timestamps = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchPutAssetPropertyError`](crate::types::BatchPutAssetPropertyError).
    pub fn build(self) -> crate::types::BatchPutAssetPropertyError {
        crate::types::BatchPutAssetPropertyError {
            error_code: self.error_code,
            error_message: self.error_message,
            timestamps: self.timestamps,
        }
    }
}
