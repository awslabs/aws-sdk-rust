// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the current status of an asset. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssetStatus {
    /// <p>The current status of the asset.</p>
    pub state: crate::types::AssetState,
    /// <p>Contains associated error information, if any.</p>
    pub error: ::std::option::Option<crate::types::ErrorDetails>,
}
impl AssetStatus {
    /// <p>The current status of the asset.</p>
    pub fn state(&self) -> &crate::types::AssetState {
        &self.state
    }
    /// <p>Contains associated error information, if any.</p>
    pub fn error(&self) -> ::std::option::Option<&crate::types::ErrorDetails> {
        self.error.as_ref()
    }
}
impl AssetStatus {
    /// Creates a new builder-style object to manufacture [`AssetStatus`](crate::types::AssetStatus).
    pub fn builder() -> crate::types::builders::AssetStatusBuilder {
        crate::types::builders::AssetStatusBuilder::default()
    }
}

/// A builder for [`AssetStatus`](crate::types::AssetStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssetStatusBuilder {
    pub(crate) state: ::std::option::Option<crate::types::AssetState>,
    pub(crate) error: ::std::option::Option<crate::types::ErrorDetails>,
}
impl AssetStatusBuilder {
    /// <p>The current status of the asset.</p>
    /// This field is required.
    pub fn state(mut self, input: crate::types::AssetState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the asset.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::AssetState>) -> Self {
        self.state = input;
        self
    }
    /// <p>The current status of the asset.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::AssetState> {
        &self.state
    }
    /// <p>Contains associated error information, if any.</p>
    pub fn error(mut self, input: crate::types::ErrorDetails) -> Self {
        self.error = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains associated error information, if any.</p>
    pub fn set_error(mut self, input: ::std::option::Option<crate::types::ErrorDetails>) -> Self {
        self.error = input;
        self
    }
    /// <p>Contains associated error information, if any.</p>
    pub fn get_error(&self) -> &::std::option::Option<crate::types::ErrorDetails> {
        &self.error
    }
    /// Consumes the builder and constructs a [`AssetStatus`](crate::types::AssetStatus).
    /// This method will fail if any of the following fields are not set:
    /// - [`state`](crate::types::builders::AssetStatusBuilder::state)
    pub fn build(self) -> ::std::result::Result<crate::types::AssetStatus, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AssetStatus {
            state: self.state.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "state",
                    "state was not specified but it is required when building AssetStatus",
                )
            })?,
            error: self.error,
        })
    }
}
