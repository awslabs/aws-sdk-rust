// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Identifies a property value used in an expression.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VariableValue {
    /// <p>The ID of the property to use as the variable. You can use the property <code>name</code> if it's from the same asset model.</p>
    #[doc(hidden)]
    pub property_id: std::option::Option<std::string::String>,
    /// <p>The ID of the hierarchy to query for the property ID. You can use the hierarchy's name instead of the hierarchy's ID.</p>
    /// <p>You use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same <code>propertyId</code>. For example, you might have separately grouped assets that come from the same asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
    #[doc(hidden)]
    pub hierarchy_id: std::option::Option<std::string::String>,
}
impl VariableValue {
    /// <p>The ID of the property to use as the variable. You can use the property <code>name</code> if it's from the same asset model.</p>
    pub fn property_id(&self) -> std::option::Option<&str> {
        self.property_id.as_deref()
    }
    /// <p>The ID of the hierarchy to query for the property ID. You can use the hierarchy's name instead of the hierarchy's ID.</p>
    /// <p>You use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same <code>propertyId</code>. For example, you might have separately grouped assets that come from the same asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub fn hierarchy_id(&self) -> std::option::Option<&str> {
        self.hierarchy_id.as_deref()
    }
}
impl VariableValue {
    /// Creates a new builder-style object to manufacture [`VariableValue`](crate::types::VariableValue).
    pub fn builder() -> crate::types::builders::VariableValueBuilder {
        crate::types::builders::VariableValueBuilder::default()
    }
}

/// A builder for [`VariableValue`](crate::types::VariableValue).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VariableValueBuilder {
    pub(crate) property_id: std::option::Option<std::string::String>,
    pub(crate) hierarchy_id: std::option::Option<std::string::String>,
}
impl VariableValueBuilder {
    /// <p>The ID of the property to use as the variable. You can use the property <code>name</code> if it's from the same asset model.</p>
    pub fn property_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.property_id = Some(input.into());
        self
    }
    /// <p>The ID of the property to use as the variable. You can use the property <code>name</code> if it's from the same asset model.</p>
    pub fn set_property_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.property_id = input;
        self
    }
    /// <p>The ID of the hierarchy to query for the property ID. You can use the hierarchy's name instead of the hierarchy's ID.</p>
    /// <p>You use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same <code>propertyId</code>. For example, you might have separately grouped assets that come from the same asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub fn hierarchy_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.hierarchy_id = Some(input.into());
        self
    }
    /// <p>The ID of the hierarchy to query for the property ID. You can use the hierarchy's name instead of the hierarchy's ID.</p>
    /// <p>You use a hierarchy ID instead of a model ID because you can have several hierarchies using the same model and therefore the same <code>propertyId</code>. For example, you might have separately grouped assets that come from the same asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub fn set_hierarchy_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.hierarchy_id = input;
        self
    }
    /// Consumes the builder and constructs a [`VariableValue`](crate::types::VariableValue).
    pub fn build(self) -> crate::types::VariableValue {
        crate::types::VariableValue {
            property_id: self.property_id,
            hierarchy_id: self.hierarchy_id,
        }
    }
}
