// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an asset hierarchy that contains a hierarchy's name, ID, and child asset model ID that specifies the type of asset that can be in this hierarchy.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssetModelHierarchy {
    /// <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.</p>
    #[doc(hidden)]
    pub child_asset_model_id: std::option::Option<std::string::String>,
}
impl AssetModelHierarchy {
    /// <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.</p>
    pub fn child_asset_model_id(&self) -> std::option::Option<&str> {
        self.child_asset_model_id.as_deref()
    }
}
impl AssetModelHierarchy {
    /// Creates a new builder-style object to manufacture [`AssetModelHierarchy`](crate::types::AssetModelHierarchy).
    pub fn builder() -> crate::types::builders::AssetModelHierarchyBuilder {
        crate::types::builders::AssetModelHierarchyBuilder::default()
    }
}

/// A builder for [`AssetModelHierarchy`](crate::types::AssetModelHierarchy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssetModelHierarchyBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) child_asset_model_id: std::option::Option<std::string::String>,
}
impl AssetModelHierarchyBuilder {
    /// <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.</p>
    pub fn child_asset_model_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.child_asset_model_id = Some(input.into());
        self
    }
    /// <p>The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.</p>
    pub fn set_child_asset_model_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.child_asset_model_id = input;
        self
    }
    /// Consumes the builder and constructs a [`AssetModelHierarchy`](crate::types::AssetModelHierarchy).
    pub fn build(self) -> crate::types::AssetModelHierarchy {
        crate::types::AssetModelHierarchy {
            id: self.id,
            name: self.name,
            child_asset_model_id: self.child_asset_model_id,
        }
    }
}
