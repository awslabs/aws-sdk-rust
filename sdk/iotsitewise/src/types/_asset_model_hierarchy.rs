// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an asset hierarchy that contains a hierarchy's name, ID, and child asset model ID that specifies the type of asset that can be in this hierarchy.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssetModelHierarchy {
    /// <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
    pub name: ::std::string::String,
    /// <p>The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.</p>
    pub child_asset_model_id: ::std::string::String,
}
impl AssetModelHierarchy {
    /// <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.</p>
    pub fn child_asset_model_id(&self) -> &str {
        use std::ops::Deref;
        self.child_asset_model_id.deref()
    }
}
impl AssetModelHierarchy {
    /// Creates a new builder-style object to manufacture [`AssetModelHierarchy`](crate::types::AssetModelHierarchy).
    pub fn builder() -> crate::types::builders::AssetModelHierarchyBuilder {
        crate::types::builders::AssetModelHierarchyBuilder::default()
    }
}

/// A builder for [`AssetModelHierarchy`](crate::types::AssetModelHierarchy).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssetModelHierarchyBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) child_asset_model_id: ::std::option::Option<::std::string::String>,
}
impl AssetModelHierarchyBuilder {
    /// <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the asset model hierarchy. This ID is a <code>hierarchyId</code>.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the asset model hierarchy that you specify by using the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html">CreateAssetModel</a> or <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html">UpdateAssetModel</a> API operation.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.</p>
    /// This field is required.
    pub fn child_asset_model_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.child_asset_model_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.</p>
    pub fn set_child_asset_model_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.child_asset_model_id = input;
        self
    }
    /// <p>The ID of the asset model. All assets in this hierarchy must be instances of the <code>childAssetModelId</code> asset model.</p>
    pub fn get_child_asset_model_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.child_asset_model_id
    }
    /// Consumes the builder and constructs a [`AssetModelHierarchy`](crate::types::AssetModelHierarchy).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::AssetModelHierarchyBuilder::name)
    /// - [`child_asset_model_id`](crate::types::builders::AssetModelHierarchyBuilder::child_asset_model_id)
    pub fn build(self) -> ::std::result::Result<crate::types::AssetModelHierarchy, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AssetModelHierarchy {
            id: self.id,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building AssetModelHierarchy",
                )
            })?,
            child_asset_model_id: self.child_asset_model_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "child_asset_model_id",
                    "child_asset_model_id was not specified but it is required when building AssetModelHierarchy",
                )
            })?,
        })
    }
}
