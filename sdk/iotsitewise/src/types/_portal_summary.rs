// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains a portal summary.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PortalSummary {
    /// <p>The ID of the portal.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The name of the portal.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The portal's description.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use IAM Identity Center for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.</p>
    #[doc(hidden)]
    pub start_url: std::option::Option<std::string::String>,
    /// <p>The date the portal was created, in Unix epoch time.</p>
    #[doc(hidden)]
    pub creation_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date the portal was last updated, in Unix epoch time.</p>
    #[doc(hidden)]
    pub last_update_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
    /// <p>Contains information about the current status of a portal.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::PortalStatus>,
}
impl PortalSummary {
    /// <p>The ID of the portal.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the portal.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The portal's description.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use IAM Identity Center for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.</p>
    pub fn start_url(&self) -> std::option::Option<&str> {
        self.start_url.as_deref()
    }
    /// <p>The date the portal was created, in Unix epoch time.</p>
    pub fn creation_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_date.as_ref()
    }
    /// <p>The date the portal was last updated, in Unix epoch time.</p>
    pub fn last_update_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_update_date.as_ref()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>Contains information about the current status of a portal.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::PortalStatus> {
        self.status.as_ref()
    }
}
impl PortalSummary {
    /// Creates a new builder-style object to manufacture [`PortalSummary`](crate::types::PortalSummary).
    pub fn builder() -> crate::types::builders::PortalSummaryBuilder {
        crate::types::builders::PortalSummaryBuilder::default()
    }
}

/// A builder for [`PortalSummary`](crate::types::PortalSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PortalSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) start_url: std::option::Option<std::string::String>,
    pub(crate) creation_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_update_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) role_arn: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::PortalStatus>,
}
impl PortalSummaryBuilder {
    /// <p>The ID of the portal.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of the portal.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The name of the portal.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the portal.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The portal's description.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The portal's description.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use IAM Identity Center for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.</p>
    pub fn start_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.start_url = Some(input.into());
        self
    }
    /// <p>The URL for the IoT SiteWise Monitor portal. You can use this URL to access portals that use IAM Identity Center for authentication. For portals that use IAM for authentication, you must use the IoT SiteWise console to get a URL that you can use to access the portal.</p>
    pub fn set_start_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.start_url = input;
        self
    }
    /// <p>The date the portal was created, in Unix epoch time.</p>
    pub fn creation_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_date = Some(input);
        self
    }
    /// <p>The date the portal was created, in Unix epoch time.</p>
    pub fn set_creation_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The date the portal was last updated, in Unix epoch time.</p>
    pub fn last_update_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_update_date = Some(input);
        self
    }
    /// <p>The date the portal was last updated, in Unix epoch time.</p>
    pub fn set_last_update_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_update_date = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>Contains information about the current status of a portal.</p>
    pub fn status(mut self, input: crate::types::PortalStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>Contains information about the current status of a portal.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::PortalStatus>) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`PortalSummary`](crate::types::PortalSummary).
    pub fn build(self) -> crate::types::PortalSummary {
        crate::types::PortalSummary {
            id: self.id,
            name: self.name,
            description: self.description,
            start_url: self.start_url,
            creation_date: self.creation_date,
            last_update_date: self.last_update_date,
            role_arn: self.role_arn,
            status: self.status,
        }
    }
}
