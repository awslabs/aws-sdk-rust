// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_bulk_import_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_bulk_import_job::CreateBulkImportJobInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.error_report_location {
        #[allow(unused_mut)]
        let mut object_2 = object.key("errorReportLocation").start_object();
        crate::protocol_serde::shape_error_report_location::ser_error_report_location(
            &mut object_2,
            var_1,
        )?;
        object_2.finish();
    }
    if let Some(var_3) = &input.files {
        let mut array_4 = object.key("files").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_file::ser_file(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if let Some(var_7) = &input.job_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("jobConfiguration").start_object();
        crate::protocol_serde::shape_job_configuration::ser_job_configuration(
            &mut object_8,
            var_7,
        )?;
        object_8.finish();
    }
    if let Some(var_9) = &input.job_name {
        object.key("jobName").string(var_9.as_str());
    }
    if let Some(var_10) = &input.job_role_arn {
        object.key("jobRoleArn").string(var_10.as_str());
    }
    Ok(())
}
