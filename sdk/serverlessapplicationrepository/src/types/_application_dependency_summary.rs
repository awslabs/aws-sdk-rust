// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A nested application summary.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ApplicationDependencySummary {
    /// <p>The Amazon Resource Name (ARN) of the nested application.</p>
    #[doc(hidden)]
    pub application_id: std::option::Option<std::string::String>,
    /// <p>The semantic version of the nested application.</p>
    #[doc(hidden)]
    pub semantic_version: std::option::Option<std::string::String>,
}
impl ApplicationDependencySummary {
    /// <p>The Amazon Resource Name (ARN) of the nested application.</p>
    pub fn application_id(&self) -> std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>The semantic version of the nested application.</p>
    pub fn semantic_version(&self) -> std::option::Option<&str> {
        self.semantic_version.as_deref()
    }
}
impl ApplicationDependencySummary {
    /// Creates a new builder-style object to manufacture [`ApplicationDependencySummary`](crate::types::ApplicationDependencySummary).
    pub fn builder() -> crate::types::builders::ApplicationDependencySummaryBuilder {
        crate::types::builders::ApplicationDependencySummaryBuilder::default()
    }
}

/// A builder for [`ApplicationDependencySummary`](crate::types::ApplicationDependencySummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ApplicationDependencySummaryBuilder {
    pub(crate) application_id: std::option::Option<std::string::String>,
    pub(crate) semantic_version: std::option::Option<std::string::String>,
}
impl ApplicationDependencySummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the nested application.</p>
    pub fn application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_id = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the nested application.</p>
    pub fn set_application_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>The semantic version of the nested application.</p>
    pub fn semantic_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.semantic_version = Some(input.into());
        self
    }
    /// <p>The semantic version of the nested application.</p>
    pub fn set_semantic_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.semantic_version = input;
        self
    }
    /// Consumes the builder and constructs a [`ApplicationDependencySummary`](crate::types::ApplicationDependencySummary).
    pub fn build(self) -> crate::types::ApplicationDependencySummary {
        crate::types::ApplicationDependencySummary {
            application_id: self.application_id,
            semantic_version: self.semantic_version,
        }
    }
}
