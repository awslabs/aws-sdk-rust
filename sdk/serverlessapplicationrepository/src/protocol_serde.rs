// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_application;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_application_version;

pub(crate) mod shape_create_cloud_formation_change_set;

pub(crate) mod shape_create_cloud_formation_template;

pub(crate) mod shape_delete_application;

pub(crate) mod shape_get_application;

pub(crate) mod shape_get_application_policy;

pub(crate) mod shape_get_cloud_formation_template;

pub(crate) mod shape_list_application_dependencies;

pub(crate) mod shape_list_application_versions;

pub(crate) mod shape_list_applications;

pub(crate) mod shape_put_application_policy;

pub(crate) mod shape_unshare_application;

pub(crate) mod shape_update_application;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_application_input;

pub(crate) mod shape_create_application_version_input;

pub(crate) mod shape_create_cloud_formation_change_set_input;

pub(crate) mod shape_create_cloud_formation_template_input;

pub(crate) mod shape_forbidden_exception;

pub(crate) mod shape_internal_server_error_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_put_application_policy_input;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_unshare_application_input;

pub(crate) mod shape_update_application_input;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of__string;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_application_dependency_summary;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_application_policy_statement;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_application_summary;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_capability;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_parameter_definition;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_version_summary;

pub(crate) mod shape_application_policy_statement;

pub(crate) mod shape_parameter_value;

pub(crate) mod shape_rollback_configuration;

pub(crate) mod shape_tag;

pub(crate) mod shape_version;

pub(crate) mod shape_application_dependency_summary;

pub(crate) mod shape_application_summary;

pub(crate) mod shape_parameter_definition;

pub(crate) mod shape_rollback_trigger;

pub(crate) mod shape_version_summary;
