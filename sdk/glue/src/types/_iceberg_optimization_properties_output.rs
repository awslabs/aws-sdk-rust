// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains the output properties of Iceberg table optimization configuration for your catalog resource in the Glue Data Catalog.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IcebergOptimizationPropertiesOutput {
    /// <p>The Amazon Resource Name (ARN) of the IAM role that is used to perform Iceberg table optimization operations.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table compaction operations, which optimize the layout of data files to improve query performance.</p>
    pub compaction: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table retention operations, which manage the lifecycle of table snapshots to control storage costs.</p>
    pub retention: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg orphan file deletion operations, which identify and remove files that are no longer referenced by the table metadata.</p>
    pub orphan_file_deletion: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    /// <p>The timestamp when the Iceberg optimization properties were last updated.</p>
    pub last_updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl IcebergOptimizationPropertiesOutput {
    /// <p>The Amazon Resource Name (ARN) of the IAM role that is used to perform Iceberg table optimization operations.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table compaction operations, which optimize the layout of data files to improve query performance.</p>
    pub fn compaction(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.compaction.as_ref()
    }
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table retention operations, which manage the lifecycle of table snapshots to control storage costs.</p>
    pub fn retention(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.retention.as_ref()
    }
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg orphan file deletion operations, which identify and remove files that are no longer referenced by the table metadata.</p>
    pub fn orphan_file_deletion(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.orphan_file_deletion.as_ref()
    }
    /// <p>The timestamp when the Iceberg optimization properties were last updated.</p>
    pub fn last_updated_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_time.as_ref()
    }
}
impl IcebergOptimizationPropertiesOutput {
    /// Creates a new builder-style object to manufacture [`IcebergOptimizationPropertiesOutput`](crate::types::IcebergOptimizationPropertiesOutput).
    pub fn builder() -> crate::types::builders::IcebergOptimizationPropertiesOutputBuilder {
        crate::types::builders::IcebergOptimizationPropertiesOutputBuilder::default()
    }
}

/// A builder for [`IcebergOptimizationPropertiesOutput`](crate::types::IcebergOptimizationPropertiesOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct IcebergOptimizationPropertiesOutputBuilder {
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) compaction: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    pub(crate) retention: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    pub(crate) orphan_file_deletion: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    pub(crate) last_updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl IcebergOptimizationPropertiesOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the IAM role that is used to perform Iceberg table optimization operations.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role that is used to perform Iceberg table optimization operations.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role that is used to perform Iceberg table optimization operations.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// Adds a key-value pair to `compaction`.
    ///
    /// To override the contents of this collection use [`set_compaction`](Self::set_compaction).
    ///
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table compaction operations, which optimize the layout of data files to improve query performance.</p>
    pub fn compaction(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut hash_map = self.compaction.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.compaction = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table compaction operations, which optimize the layout of data files to improve query performance.</p>
    pub fn set_compaction(mut self, input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>) -> Self {
        self.compaction = input;
        self
    }
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table compaction operations, which optimize the layout of data files to improve query performance.</p>
    pub fn get_compaction(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.compaction
    }
    /// Adds a key-value pair to `retention`.
    ///
    /// To override the contents of this collection use [`set_retention`](Self::set_retention).
    ///
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table retention operations, which manage the lifecycle of table snapshots to control storage costs.</p>
    pub fn retention(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut hash_map = self.retention.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.retention = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table retention operations, which manage the lifecycle of table snapshots to control storage costs.</p>
    pub fn set_retention(mut self, input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>) -> Self {
        self.retention = input;
        self
    }
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg table retention operations, which manage the lifecycle of table snapshots to control storage costs.</p>
    pub fn get_retention(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.retention
    }
    /// Adds a key-value pair to `orphan_file_deletion`.
    ///
    /// To override the contents of this collection use [`set_orphan_file_deletion`](Self::set_orphan_file_deletion).
    ///
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg orphan file deletion operations, which identify and remove files that are no longer referenced by the table metadata.</p>
    pub fn orphan_file_deletion(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        let mut hash_map = self.orphan_file_deletion.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.orphan_file_deletion = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg orphan file deletion operations, which identify and remove files that are no longer referenced by the table metadata.</p>
    pub fn set_orphan_file_deletion(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    ) -> Self {
        self.orphan_file_deletion = input;
        self
    }
    /// <p>A map of key-value pairs that specify configuration parameters for Iceberg orphan file deletion operations, which identify and remove files that are no longer referenced by the table metadata.</p>
    pub fn get_orphan_file_deletion(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.orphan_file_deletion
    }
    /// <p>The timestamp when the Iceberg optimization properties were last updated.</p>
    pub fn last_updated_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the Iceberg optimization properties were last updated.</p>
    pub fn set_last_updated_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_time = input;
        self
    }
    /// <p>The timestamp when the Iceberg optimization properties were last updated.</p>
    pub fn get_last_updated_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_time
    }
    /// Consumes the builder and constructs a [`IcebergOptimizationPropertiesOutput`](crate::types::IcebergOptimizationPropertiesOutput).
    pub fn build(self) -> crate::types::IcebergOptimizationPropertiesOutput {
        crate::types::IcebergOptimizationPropertiesOutput {
            role_arn: self.role_arn,
            compaction: self.compaction,
            retention: self.retention,
            orphan_file_deletion: self.orphan_file_deletion,
            last_updated_time: self.last_updated_time,
        }
    }
}
