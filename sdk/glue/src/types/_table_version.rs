// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies a version of a table.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TableVersion {
    /// <p>The table in question.</p>
    #[doc(hidden)]
    pub table: std::option::Option<crate::types::Table>,
    /// <p>The ID value that identifies this table version. A <code>VersionId</code> is a string representation of an integer. Each version is incremented by 1.</p>
    #[doc(hidden)]
    pub version_id: std::option::Option<std::string::String>,
}
impl TableVersion {
    /// <p>The table in question.</p>
    pub fn table(&self) -> std::option::Option<&crate::types::Table> {
        self.table.as_ref()
    }
    /// <p>The ID value that identifies this table version. A <code>VersionId</code> is a string representation of an integer. Each version is incremented by 1.</p>
    pub fn version_id(&self) -> std::option::Option<&str> {
        self.version_id.as_deref()
    }
}
impl TableVersion {
    /// Creates a new builder-style object to manufacture [`TableVersion`](crate::types::TableVersion).
    pub fn builder() -> crate::types::builders::TableVersionBuilder {
        crate::types::builders::TableVersionBuilder::default()
    }
}

/// A builder for [`TableVersion`](crate::types::TableVersion).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TableVersionBuilder {
    pub(crate) table: std::option::Option<crate::types::Table>,
    pub(crate) version_id: std::option::Option<std::string::String>,
}
impl TableVersionBuilder {
    /// <p>The table in question.</p>
    pub fn table(mut self, input: crate::types::Table) -> Self {
        self.table = Some(input);
        self
    }
    /// <p>The table in question.</p>
    pub fn set_table(mut self, input: std::option::Option<crate::types::Table>) -> Self {
        self.table = input;
        self
    }
    /// <p>The ID value that identifies this table version. A <code>VersionId</code> is a string representation of an integer. Each version is incremented by 1.</p>
    pub fn version_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.version_id = Some(input.into());
        self
    }
    /// <p>The ID value that identifies this table version. A <code>VersionId</code> is a string representation of an integer. Each version is incremented by 1.</p>
    pub fn set_version_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version_id = input;
        self
    }
    /// Consumes the builder and constructs a [`TableVersion`](crate::types::TableVersion).
    pub fn build(self) -> crate::types::TableVersion {
        crate::types::TableVersion {
            table: self.table,
            version_id: self.version_id,
        }
    }
}
