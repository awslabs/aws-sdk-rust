// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains a numeric value in decimal format.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DecimalNumber {
    /// <p>The unscaled numeric value.</p>
    #[doc(hidden)]
    pub unscaled_value: std::option::Option<aws_smithy_types::Blob>,
    /// <p>The scale that determines where the decimal point falls in the unscaled value.</p>
    #[doc(hidden)]
    pub scale: i32,
}
impl DecimalNumber {
    /// <p>The unscaled numeric value.</p>
    pub fn unscaled_value(&self) -> std::option::Option<&aws_smithy_types::Blob> {
        self.unscaled_value.as_ref()
    }
    /// <p>The scale that determines where the decimal point falls in the unscaled value.</p>
    pub fn scale(&self) -> i32 {
        self.scale
    }
}
impl DecimalNumber {
    /// Creates a new builder-style object to manufacture [`DecimalNumber`](crate::types::DecimalNumber).
    pub fn builder() -> crate::types::builders::DecimalNumberBuilder {
        crate::types::builders::DecimalNumberBuilder::default()
    }
}

/// A builder for [`DecimalNumber`](crate::types::DecimalNumber).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DecimalNumberBuilder {
    pub(crate) unscaled_value: std::option::Option<aws_smithy_types::Blob>,
    pub(crate) scale: std::option::Option<i32>,
}
impl DecimalNumberBuilder {
    /// <p>The unscaled numeric value.</p>
    pub fn unscaled_value(mut self, input: aws_smithy_types::Blob) -> Self {
        self.unscaled_value = Some(input);
        self
    }
    /// <p>The unscaled numeric value.</p>
    pub fn set_unscaled_value(
        mut self,
        input: std::option::Option<aws_smithy_types::Blob>,
    ) -> Self {
        self.unscaled_value = input;
        self
    }
    /// <p>The scale that determines where the decimal point falls in the unscaled value.</p>
    pub fn scale(mut self, input: i32) -> Self {
        self.scale = Some(input);
        self
    }
    /// <p>The scale that determines where the decimal point falls in the unscaled value.</p>
    pub fn set_scale(mut self, input: std::option::Option<i32>) -> Self {
        self.scale = input;
        self
    }
    /// Consumes the builder and constructs a [`DecimalNumber`](crate::types::DecimalNumber).
    pub fn build(self) -> crate::types::DecimalNumber {
        crate::types::DecimalNumber {
            unscaled_value: self.unscaled_value,
            scale: self.scale.unwrap_or_default(),
        }
    }
}
