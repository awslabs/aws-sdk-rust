// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains a numeric value in decimal format.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DecimalNumber {
    /// <p>The unscaled numeric value.</p>
    pub unscaled_value: ::aws_smithy_types::Blob,
    /// <p>The scale that determines where the decimal point falls in the unscaled value.</p>
    pub scale: i32,
}
impl DecimalNumber {
    /// <p>The unscaled numeric value.</p>
    pub fn unscaled_value(&self) -> &::aws_smithy_types::Blob {
        &self.unscaled_value
    }
    /// <p>The scale that determines where the decimal point falls in the unscaled value.</p>
    pub fn scale(&self) -> i32 {
        self.scale
    }
}
impl DecimalNumber {
    /// Creates a new builder-style object to manufacture [`DecimalNumber`](crate::types::DecimalNumber).
    pub fn builder() -> crate::types::builders::DecimalNumberBuilder {
        crate::types::builders::DecimalNumberBuilder::default()
    }
}

/// A builder for [`DecimalNumber`](crate::types::DecimalNumber).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DecimalNumberBuilder {
    pub(crate) unscaled_value: ::std::option::Option<::aws_smithy_types::Blob>,
    pub(crate) scale: ::std::option::Option<i32>,
}
impl DecimalNumberBuilder {
    /// <p>The unscaled numeric value.</p>
    /// This field is required.
    pub fn unscaled_value(mut self, input: ::aws_smithy_types::Blob) -> Self {
        self.unscaled_value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The unscaled numeric value.</p>
    pub fn set_unscaled_value(mut self, input: ::std::option::Option<::aws_smithy_types::Blob>) -> Self {
        self.unscaled_value = input;
        self
    }
    /// <p>The unscaled numeric value.</p>
    pub fn get_unscaled_value(&self) -> &::std::option::Option<::aws_smithy_types::Blob> {
        &self.unscaled_value
    }
    /// <p>The scale that determines where the decimal point falls in the unscaled value.</p>
    /// This field is required.
    pub fn scale(mut self, input: i32) -> Self {
        self.scale = ::std::option::Option::Some(input);
        self
    }
    /// <p>The scale that determines where the decimal point falls in the unscaled value.</p>
    pub fn set_scale(mut self, input: ::std::option::Option<i32>) -> Self {
        self.scale = input;
        self
    }
    /// <p>The scale that determines where the decimal point falls in the unscaled value.</p>
    pub fn get_scale(&self) -> &::std::option::Option<i32> {
        &self.scale
    }
    /// Consumes the builder and constructs a [`DecimalNumber`](crate::types::DecimalNumber).
    /// This method will fail if any of the following fields are not set:
    /// - [`unscaled_value`](crate::types::builders::DecimalNumberBuilder::unscaled_value)
    pub fn build(self) -> ::std::result::Result<crate::types::DecimalNumber, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DecimalNumber {
            unscaled_value: self.unscaled_value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "unscaled_value",
                    "unscaled_value was not specified but it is required when building DecimalNumber",
                )
            })?,
            scale: self.scale.unwrap_or_default(),
        })
    }
}
