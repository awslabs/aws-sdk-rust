// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the update operations to be applied to an existing Iceberg table inGlue Data Catalog, defining the new state of the table metadata.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateIcebergTableInput {
    /// <p>The list of table update operations that specify the changes to be made to the Iceberg table, including schema modifications, partition specifications, and table properties.</p>
    pub updates: ::std::vec::Vec<crate::types::IcebergTableUpdate>,
}
impl UpdateIcebergTableInput {
    /// <p>The list of table update operations that specify the changes to be made to the Iceberg table, including schema modifications, partition specifications, and table properties.</p>
    pub fn updates(&self) -> &[crate::types::IcebergTableUpdate] {
        use std::ops::Deref;
        self.updates.deref()
    }
}
impl UpdateIcebergTableInput {
    /// Creates a new builder-style object to manufacture [`UpdateIcebergTableInput`](crate::types::UpdateIcebergTableInput).
    pub fn builder() -> crate::types::builders::UpdateIcebergTableInputBuilder {
        crate::types::builders::UpdateIcebergTableInputBuilder::default()
    }
}

/// A builder for [`UpdateIcebergTableInput`](crate::types::UpdateIcebergTableInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateIcebergTableInputBuilder {
    pub(crate) updates: ::std::option::Option<::std::vec::Vec<crate::types::IcebergTableUpdate>>,
}
impl UpdateIcebergTableInputBuilder {
    /// Appends an item to `updates`.
    ///
    /// To override the contents of this collection use [`set_updates`](Self::set_updates).
    ///
    /// <p>The list of table update operations that specify the changes to be made to the Iceberg table, including schema modifications, partition specifications, and table properties.</p>
    pub fn updates(mut self, input: crate::types::IcebergTableUpdate) -> Self {
        let mut v = self.updates.unwrap_or_default();
        v.push(input);
        self.updates = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of table update operations that specify the changes to be made to the Iceberg table, including schema modifications, partition specifications, and table properties.</p>
    pub fn set_updates(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::IcebergTableUpdate>>) -> Self {
        self.updates = input;
        self
    }
    /// <p>The list of table update operations that specify the changes to be made to the Iceberg table, including schema modifications, partition specifications, and table properties.</p>
    pub fn get_updates(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::IcebergTableUpdate>> {
        &self.updates
    }
    /// Consumes the builder and constructs a [`UpdateIcebergTableInput`](crate::types::UpdateIcebergTableInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`updates`](crate::types::builders::UpdateIcebergTableInputBuilder::updates)
    pub fn build(self) -> ::std::result::Result<crate::types::UpdateIcebergTableInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UpdateIcebergTableInput {
            updates: self.updates.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "updates",
                    "updates was not specified but it is required when building UpdateIcebergTableInput",
                )
            })?,
        })
    }
}
