// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains the values and structure used to update a partition.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchUpdatePartitionRequestEntry {
    /// <p>A list of values defining the partitions.</p>
    #[doc(hidden)]
    pub partition_value_list: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The structure used to update a partition.</p>
    #[doc(hidden)]
    pub partition_input: std::option::Option<crate::types::PartitionInput>,
}
impl BatchUpdatePartitionRequestEntry {
    /// <p>A list of values defining the partitions.</p>
    pub fn partition_value_list(&self) -> std::option::Option<&[std::string::String]> {
        self.partition_value_list.as_deref()
    }
    /// <p>The structure used to update a partition.</p>
    pub fn partition_input(&self) -> std::option::Option<&crate::types::PartitionInput> {
        self.partition_input.as_ref()
    }
}
impl BatchUpdatePartitionRequestEntry {
    /// Creates a new builder-style object to manufacture [`BatchUpdatePartitionRequestEntry`](crate::types::BatchUpdatePartitionRequestEntry).
    pub fn builder() -> crate::types::builders::BatchUpdatePartitionRequestEntryBuilder {
        crate::types::builders::BatchUpdatePartitionRequestEntryBuilder::default()
    }
}

/// A builder for [`BatchUpdatePartitionRequestEntry`](crate::types::BatchUpdatePartitionRequestEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchUpdatePartitionRequestEntryBuilder {
    pub(crate) partition_value_list: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) partition_input: std::option::Option<crate::types::PartitionInput>,
}
impl BatchUpdatePartitionRequestEntryBuilder {
    /// Appends an item to `partition_value_list`.
    ///
    /// To override the contents of this collection use [`set_partition_value_list`](Self::set_partition_value_list).
    ///
    /// <p>A list of values defining the partitions.</p>
    pub fn partition_value_list(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.partition_value_list.unwrap_or_default();
        v.push(input.into());
        self.partition_value_list = Some(v);
        self
    }
    /// <p>A list of values defining the partitions.</p>
    pub fn set_partition_value_list(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.partition_value_list = input;
        self
    }
    /// <p>The structure used to update a partition.</p>
    pub fn partition_input(mut self, input: crate::types::PartitionInput) -> Self {
        self.partition_input = Some(input);
        self
    }
    /// <p>The structure used to update a partition.</p>
    pub fn set_partition_input(
        mut self,
        input: std::option::Option<crate::types::PartitionInput>,
    ) -> Self {
        self.partition_input = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchUpdatePartitionRequestEntry`](crate::types::BatchUpdatePartitionRequestEntry).
    pub fn build(self) -> crate::types::BatchUpdatePartitionRequestEntry {
        crate::types::BatchUpdatePartitionRequestEntry {
            partition_value_list: self.partition_value_list,
            partition_input: self.partition_input,
        }
    }
}
