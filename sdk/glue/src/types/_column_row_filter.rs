// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ColumnRowFilter {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub column_name: std::option::Option<std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub row_filter_expression: std::option::Option<std::string::String>,
}
impl ColumnRowFilter {
    #[allow(missing_docs)] // documentation missing in model
    pub fn column_name(&self) -> std::option::Option<&str> {
        self.column_name.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn row_filter_expression(&self) -> std::option::Option<&str> {
        self.row_filter_expression.as_deref()
    }
}
impl ColumnRowFilter {
    /// Creates a new builder-style object to manufacture [`ColumnRowFilter`](crate::types::ColumnRowFilter).
    pub fn builder() -> crate::types::builders::ColumnRowFilterBuilder {
        crate::types::builders::ColumnRowFilterBuilder::default()
    }
}

/// A builder for [`ColumnRowFilter`](crate::types::ColumnRowFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ColumnRowFilterBuilder {
    pub(crate) column_name: std::option::Option<std::string::String>,
    pub(crate) row_filter_expression: std::option::Option<std::string::String>,
}
impl ColumnRowFilterBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn column_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.column_name = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_column_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.column_name = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn row_filter_expression(mut self, input: impl Into<std::string::String>) -> Self {
        self.row_filter_expression = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_row_filter_expression(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.row_filter_expression = input;
        self
    }
    /// Consumes the builder and constructs a [`ColumnRowFilter`](crate::types::ColumnRowFilter).
    pub fn build(self) -> crate::types::ColumnRowFilter {
        crate::types::ColumnRowFilter {
            column_name: self.column_name,
            row_filter_expression: self.row_filter_expression,
        }
    }
}
