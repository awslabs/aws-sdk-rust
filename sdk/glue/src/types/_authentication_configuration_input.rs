// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure containing the authentication configuration in the CreateConnection request.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AuthenticationConfigurationInput {
    /// <p>A structure containing the authentication configuration in the CreateConnection request.</p>
    pub authentication_type: ::std::option::Option<crate::types::AuthenticationType>,
    /// <p>The properties for OAuth2 authentication in the CreateConnection request.</p>
    pub o_auth2_properties: ::std::option::Option<crate::types::OAuth2PropertiesInput>,
    /// <p>The secret manager ARN to store credentials in the CreateConnection request.</p>
    pub secret_arn: ::std::option::Option<::std::string::String>,
}
impl AuthenticationConfigurationInput {
    /// <p>A structure containing the authentication configuration in the CreateConnection request.</p>
    pub fn authentication_type(&self) -> ::std::option::Option<&crate::types::AuthenticationType> {
        self.authentication_type.as_ref()
    }
    /// <p>The properties for OAuth2 authentication in the CreateConnection request.</p>
    pub fn o_auth2_properties(&self) -> ::std::option::Option<&crate::types::OAuth2PropertiesInput> {
        self.o_auth2_properties.as_ref()
    }
    /// <p>The secret manager ARN to store credentials in the CreateConnection request.</p>
    pub fn secret_arn(&self) -> ::std::option::Option<&str> {
        self.secret_arn.as_deref()
    }
}
impl AuthenticationConfigurationInput {
    /// Creates a new builder-style object to manufacture [`AuthenticationConfigurationInput`](crate::types::AuthenticationConfigurationInput).
    pub fn builder() -> crate::types::builders::AuthenticationConfigurationInputBuilder {
        crate::types::builders::AuthenticationConfigurationInputBuilder::default()
    }
}

/// A builder for [`AuthenticationConfigurationInput`](crate::types::AuthenticationConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AuthenticationConfigurationInputBuilder {
    pub(crate) authentication_type: ::std::option::Option<crate::types::AuthenticationType>,
    pub(crate) o_auth2_properties: ::std::option::Option<crate::types::OAuth2PropertiesInput>,
    pub(crate) secret_arn: ::std::option::Option<::std::string::String>,
}
impl AuthenticationConfigurationInputBuilder {
    /// <p>A structure containing the authentication configuration in the CreateConnection request.</p>
    pub fn authentication_type(mut self, input: crate::types::AuthenticationType) -> Self {
        self.authentication_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>A structure containing the authentication configuration in the CreateConnection request.</p>
    pub fn set_authentication_type(mut self, input: ::std::option::Option<crate::types::AuthenticationType>) -> Self {
        self.authentication_type = input;
        self
    }
    /// <p>A structure containing the authentication configuration in the CreateConnection request.</p>
    pub fn get_authentication_type(&self) -> &::std::option::Option<crate::types::AuthenticationType> {
        &self.authentication_type
    }
    /// <p>The properties for OAuth2 authentication in the CreateConnection request.</p>
    pub fn o_auth2_properties(mut self, input: crate::types::OAuth2PropertiesInput) -> Self {
        self.o_auth2_properties = ::std::option::Option::Some(input);
        self
    }
    /// <p>The properties for OAuth2 authentication in the CreateConnection request.</p>
    pub fn set_o_auth2_properties(mut self, input: ::std::option::Option<crate::types::OAuth2PropertiesInput>) -> Self {
        self.o_auth2_properties = input;
        self
    }
    /// <p>The properties for OAuth2 authentication in the CreateConnection request.</p>
    pub fn get_o_auth2_properties(&self) -> &::std::option::Option<crate::types::OAuth2PropertiesInput> {
        &self.o_auth2_properties
    }
    /// <p>The secret manager ARN to store credentials in the CreateConnection request.</p>
    pub fn secret_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.secret_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The secret manager ARN to store credentials in the CreateConnection request.</p>
    pub fn set_secret_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.secret_arn = input;
        self
    }
    /// <p>The secret manager ARN to store credentials in the CreateConnection request.</p>
    pub fn get_secret_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.secret_arn
    }
    /// Consumes the builder and constructs a [`AuthenticationConfigurationInput`](crate::types::AuthenticationConfigurationInput).
    pub fn build(self) -> crate::types::AuthenticationConfigurationInput {
        crate::types::AuthenticationConfigurationInput {
            authentication_type: self.authentication_type,
            o_auth2_properties: self.o_auth2_properties,
            secret_arn: self.secret_arn,
        }
    }
}
