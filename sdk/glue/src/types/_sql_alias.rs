// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a single entry in the list of values for <code>SqlAliases</code>. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SqlAlias {
    /// <p>A table, or a column in a table.</p>
    #[doc(hidden)]
    pub from: std::option::Option<std::string::String>,
    /// <p>A temporary name given to a table, or a column in a table.</p>
    #[doc(hidden)]
    pub alias: std::option::Option<std::string::String>,
}
impl SqlAlias {
    /// <p>A table, or a column in a table.</p>
    pub fn from(&self) -> std::option::Option<&str> {
        self.from.as_deref()
    }
    /// <p>A temporary name given to a table, or a column in a table.</p>
    pub fn alias(&self) -> std::option::Option<&str> {
        self.alias.as_deref()
    }
}
impl SqlAlias {
    /// Creates a new builder-style object to manufacture [`SqlAlias`](crate::types::SqlAlias).
    pub fn builder() -> crate::types::builders::SqlAliasBuilder {
        crate::types::builders::SqlAliasBuilder::default()
    }
}

/// A builder for [`SqlAlias`](crate::types::SqlAlias).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SqlAliasBuilder {
    pub(crate) from: std::option::Option<std::string::String>,
    pub(crate) alias: std::option::Option<std::string::String>,
}
impl SqlAliasBuilder {
    /// <p>A table, or a column in a table.</p>
    pub fn from(mut self, input: impl Into<std::string::String>) -> Self {
        self.from = Some(input.into());
        self
    }
    /// <p>A table, or a column in a table.</p>
    pub fn set_from(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.from = input;
        self
    }
    /// <p>A temporary name given to a table, or a column in a table.</p>
    pub fn alias(mut self, input: impl Into<std::string::String>) -> Self {
        self.alias = Some(input.into());
        self
    }
    /// <p>A temporary name given to a table, or a column in a table.</p>
    pub fn set_alias(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.alias = input;
        self
    }
    /// Consumes the builder and constructs a [`SqlAlias`](crate::types::SqlAlias).
    pub fn build(self) -> crate::types::SqlAlias {
        crate::types::SqlAlias {
            from: self.from,
            alias: self.alias,
        }
    }
}
