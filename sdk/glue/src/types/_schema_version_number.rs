// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure containing the schema version information.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SchemaVersionNumber {
    /// <p>The latest version available for the schema.</p>
    #[doc(hidden)]
    pub latest_version: bool,
    /// <p>The version number of the schema.</p>
    #[doc(hidden)]
    pub version_number: i64,
}
impl SchemaVersionNumber {
    /// <p>The latest version available for the schema.</p>
    pub fn latest_version(&self) -> bool {
        self.latest_version
    }
    /// <p>The version number of the schema.</p>
    pub fn version_number(&self) -> i64 {
        self.version_number
    }
}
impl SchemaVersionNumber {
    /// Creates a new builder-style object to manufacture [`SchemaVersionNumber`](crate::types::SchemaVersionNumber).
    pub fn builder() -> crate::types::builders::SchemaVersionNumberBuilder {
        crate::types::builders::SchemaVersionNumberBuilder::default()
    }
}

/// A builder for [`SchemaVersionNumber`](crate::types::SchemaVersionNumber).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SchemaVersionNumberBuilder {
    pub(crate) latest_version: std::option::Option<bool>,
    pub(crate) version_number: std::option::Option<i64>,
}
impl SchemaVersionNumberBuilder {
    /// <p>The latest version available for the schema.</p>
    pub fn latest_version(mut self, input: bool) -> Self {
        self.latest_version = Some(input);
        self
    }
    /// <p>The latest version available for the schema.</p>
    pub fn set_latest_version(mut self, input: std::option::Option<bool>) -> Self {
        self.latest_version = input;
        self
    }
    /// <p>The version number of the schema.</p>
    pub fn version_number(mut self, input: i64) -> Self {
        self.version_number = Some(input);
        self
    }
    /// <p>The version number of the schema.</p>
    pub fn set_version_number(mut self, input: std::option::Option<i64>) -> Self {
        self.version_number = input;
        self
    }
    /// Consumes the builder and constructs a [`SchemaVersionNumber`](crate::types::SchemaVersionNumber).
    pub fn build(self) -> crate::types::SchemaVersionNumber {
        crate::types::SchemaVersionNumber {
            latest_version: self.latest_version.unwrap_or_default(),
            version_number: self.version_number.unwrap_or_default(),
        }
    }
}
