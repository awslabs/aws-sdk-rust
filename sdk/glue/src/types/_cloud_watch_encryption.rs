// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies how Amazon CloudWatch data should be encrypted.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CloudWatchEncryption {
    /// <p>The encryption mode to use for CloudWatch data.</p>
    #[doc(hidden)]
    pub cloud_watch_encryption_mode: std::option::Option<crate::types::CloudWatchEncryptionMode>,
    /// <p>The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.</p>
    #[doc(hidden)]
    pub kms_key_arn: std::option::Option<std::string::String>,
}
impl CloudWatchEncryption {
    /// <p>The encryption mode to use for CloudWatch data.</p>
    pub fn cloud_watch_encryption_mode(
        &self,
    ) -> std::option::Option<&crate::types::CloudWatchEncryptionMode> {
        self.cloud_watch_encryption_mode.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.</p>
    pub fn kms_key_arn(&self) -> std::option::Option<&str> {
        self.kms_key_arn.as_deref()
    }
}
impl CloudWatchEncryption {
    /// Creates a new builder-style object to manufacture [`CloudWatchEncryption`](crate::types::CloudWatchEncryption).
    pub fn builder() -> crate::types::builders::CloudWatchEncryptionBuilder {
        crate::types::builders::CloudWatchEncryptionBuilder::default()
    }
}

/// A builder for [`CloudWatchEncryption`](crate::types::CloudWatchEncryption).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CloudWatchEncryptionBuilder {
    pub(crate) cloud_watch_encryption_mode:
        std::option::Option<crate::types::CloudWatchEncryptionMode>,
    pub(crate) kms_key_arn: std::option::Option<std::string::String>,
}
impl CloudWatchEncryptionBuilder {
    /// <p>The encryption mode to use for CloudWatch data.</p>
    pub fn cloud_watch_encryption_mode(
        mut self,
        input: crate::types::CloudWatchEncryptionMode,
    ) -> Self {
        self.cloud_watch_encryption_mode = Some(input);
        self
    }
    /// <p>The encryption mode to use for CloudWatch data.</p>
    pub fn set_cloud_watch_encryption_mode(
        mut self,
        input: std::option::Option<crate::types::CloudWatchEncryptionMode>,
    ) -> Self {
        self.cloud_watch_encryption_mode = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.</p>
    pub fn kms_key_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.kms_key_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.</p>
    pub fn set_kms_key_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.kms_key_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`CloudWatchEncryption`](crate::types::CloudWatchEncryption).
    pub fn build(self) -> crate::types::CloudWatchEncryption {
        crate::types::CloudWatchEncryption {
            cloud_watch_encryption_mode: self.cloud_watch_encryption_mode,
            kms_key_arn: self.kms_key_arn,
        }
    }
}
