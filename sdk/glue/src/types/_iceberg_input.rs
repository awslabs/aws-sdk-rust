// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that defines an Apache Iceberg metadata table to create in the catalog.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IcebergInput {
    /// <p>A required metadata operation. Can only be set to <code>CREATE</code>.</p>
    pub metadata_operation: crate::types::MetadataOperation,
    /// <p>The table version for the Iceberg table. Defaults to 2.</p>
    pub version: ::std::option::Option<::std::string::String>,
}
impl IcebergInput {
    /// <p>A required metadata operation. Can only be set to <code>CREATE</code>.</p>
    pub fn metadata_operation(&self) -> &crate::types::MetadataOperation {
        &self.metadata_operation
    }
    /// <p>The table version for the Iceberg table. Defaults to 2.</p>
    pub fn version(&self) -> ::std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl IcebergInput {
    /// Creates a new builder-style object to manufacture [`IcebergInput`](crate::types::IcebergInput).
    pub fn builder() -> crate::types::builders::IcebergInputBuilder {
        crate::types::builders::IcebergInputBuilder::default()
    }
}

/// A builder for [`IcebergInput`](crate::types::IcebergInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IcebergInputBuilder {
    pub(crate) metadata_operation: ::std::option::Option<crate::types::MetadataOperation>,
    pub(crate) version: ::std::option::Option<::std::string::String>,
}
impl IcebergInputBuilder {
    /// <p>A required metadata operation. Can only be set to <code>CREATE</code>.</p>
    /// This field is required.
    pub fn metadata_operation(mut self, input: crate::types::MetadataOperation) -> Self {
        self.metadata_operation = ::std::option::Option::Some(input);
        self
    }
    /// <p>A required metadata operation. Can only be set to <code>CREATE</code>.</p>
    pub fn set_metadata_operation(mut self, input: ::std::option::Option<crate::types::MetadataOperation>) -> Self {
        self.metadata_operation = input;
        self
    }
    /// <p>A required metadata operation. Can only be set to <code>CREATE</code>.</p>
    pub fn get_metadata_operation(&self) -> &::std::option::Option<crate::types::MetadataOperation> {
        &self.metadata_operation
    }
    /// <p>The table version for the Iceberg table. Defaults to 2.</p>
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The table version for the Iceberg table. Defaults to 2.</p>
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// <p>The table version for the Iceberg table. Defaults to 2.</p>
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    /// Consumes the builder and constructs a [`IcebergInput`](crate::types::IcebergInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`metadata_operation`](crate::types::builders::IcebergInputBuilder::metadata_operation)
    pub fn build(self) -> ::std::result::Result<crate::types::IcebergInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::IcebergInput {
            metadata_operation: self.metadata_operation.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "metadata_operation",
                    "metadata_operation was not specified but it is required when building IcebergInput",
                )
            })?,
            version: self.version,
        })
    }
}
