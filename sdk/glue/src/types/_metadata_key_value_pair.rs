// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure containing a key value pair for metadata.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MetadataKeyValuePair {
    /// <p>A metadata key.</p>
    #[doc(hidden)]
    pub metadata_key: std::option::Option<std::string::String>,
    /// <p>A metadata key’s corresponding value.</p>
    #[doc(hidden)]
    pub metadata_value: std::option::Option<std::string::String>,
}
impl MetadataKeyValuePair {
    /// <p>A metadata key.</p>
    pub fn metadata_key(&self) -> std::option::Option<&str> {
        self.metadata_key.as_deref()
    }
    /// <p>A metadata key’s corresponding value.</p>
    pub fn metadata_value(&self) -> std::option::Option<&str> {
        self.metadata_value.as_deref()
    }
}
impl MetadataKeyValuePair {
    /// Creates a new builder-style object to manufacture [`MetadataKeyValuePair`](crate::types::MetadataKeyValuePair).
    pub fn builder() -> crate::types::builders::MetadataKeyValuePairBuilder {
        crate::types::builders::MetadataKeyValuePairBuilder::default()
    }
}

/// A builder for [`MetadataKeyValuePair`](crate::types::MetadataKeyValuePair).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MetadataKeyValuePairBuilder {
    pub(crate) metadata_key: std::option::Option<std::string::String>,
    pub(crate) metadata_value: std::option::Option<std::string::String>,
}
impl MetadataKeyValuePairBuilder {
    /// <p>A metadata key.</p>
    pub fn metadata_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.metadata_key = Some(input.into());
        self
    }
    /// <p>A metadata key.</p>
    pub fn set_metadata_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.metadata_key = input;
        self
    }
    /// <p>A metadata key’s corresponding value.</p>
    pub fn metadata_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.metadata_value = Some(input.into());
        self
    }
    /// <p>A metadata key’s corresponding value.</p>
    pub fn set_metadata_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.metadata_value = input;
        self
    }
    /// Consumes the builder and constructs a [`MetadataKeyValuePair`](crate::types::MetadataKeyValuePair).
    pub fn build(self) -> crate::types::MetadataKeyValuePair {
        crate::types::MetadataKeyValuePair {
            metadata_key: self.metadata_key,
            metadata_value: self.metadata_value,
        }
    }
}
