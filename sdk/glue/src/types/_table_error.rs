// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An error record for table operations.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TableError {
    /// <p>The name of the table. For Hive compatibility, this must be entirely lowercase.</p>
    #[doc(hidden)]
    pub table_name: std::option::Option<std::string::String>,
    /// <p>The details about the error.</p>
    #[doc(hidden)]
    pub error_detail: std::option::Option<crate::types::ErrorDetail>,
}
impl TableError {
    /// <p>The name of the table. For Hive compatibility, this must be entirely lowercase.</p>
    pub fn table_name(&self) -> std::option::Option<&str> {
        self.table_name.as_deref()
    }
    /// <p>The details about the error.</p>
    pub fn error_detail(&self) -> std::option::Option<&crate::types::ErrorDetail> {
        self.error_detail.as_ref()
    }
}
impl TableError {
    /// Creates a new builder-style object to manufacture [`TableError`](crate::types::TableError).
    pub fn builder() -> crate::types::builders::TableErrorBuilder {
        crate::types::builders::TableErrorBuilder::default()
    }
}

/// A builder for [`TableError`](crate::types::TableError).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TableErrorBuilder {
    pub(crate) table_name: std::option::Option<std::string::String>,
    pub(crate) error_detail: std::option::Option<crate::types::ErrorDetail>,
}
impl TableErrorBuilder {
    /// <p>The name of the table. For Hive compatibility, this must be entirely lowercase.</p>
    pub fn table_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.table_name = Some(input.into());
        self
    }
    /// <p>The name of the table. For Hive compatibility, this must be entirely lowercase.</p>
    pub fn set_table_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.table_name = input;
        self
    }
    /// <p>The details about the error.</p>
    pub fn error_detail(mut self, input: crate::types::ErrorDetail) -> Self {
        self.error_detail = Some(input);
        self
    }
    /// <p>The details about the error.</p>
    pub fn set_error_detail(
        mut self,
        input: std::option::Option<crate::types::ErrorDetail>,
    ) -> Self {
        self.error_detail = input;
        self
    }
    /// Consumes the builder and constructs a [`TableError`](crate::types::TableError).
    pub fn build(self) -> crate::types::TableError {
        crate::types::TableError {
            table_name: self.table_name,
            error_detail: self.error_detail,
        }
    }
}
