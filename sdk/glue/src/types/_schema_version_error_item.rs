// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains the error details for an operation on a schema version.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SchemaVersionErrorItem {
    /// <p>The version number of the schema.</p>
    #[doc(hidden)]
    pub version_number: i64,
    /// <p>The details of the error for the schema version.</p>
    #[doc(hidden)]
    pub error_details: std::option::Option<crate::types::ErrorDetails>,
}
impl SchemaVersionErrorItem {
    /// <p>The version number of the schema.</p>
    pub fn version_number(&self) -> i64 {
        self.version_number
    }
    /// <p>The details of the error for the schema version.</p>
    pub fn error_details(&self) -> std::option::Option<&crate::types::ErrorDetails> {
        self.error_details.as_ref()
    }
}
impl SchemaVersionErrorItem {
    /// Creates a new builder-style object to manufacture [`SchemaVersionErrorItem`](crate::types::SchemaVersionErrorItem).
    pub fn builder() -> crate::types::builders::SchemaVersionErrorItemBuilder {
        crate::types::builders::SchemaVersionErrorItemBuilder::default()
    }
}

/// A builder for [`SchemaVersionErrorItem`](crate::types::SchemaVersionErrorItem).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SchemaVersionErrorItemBuilder {
    pub(crate) version_number: std::option::Option<i64>,
    pub(crate) error_details: std::option::Option<crate::types::ErrorDetails>,
}
impl SchemaVersionErrorItemBuilder {
    /// <p>The version number of the schema.</p>
    pub fn version_number(mut self, input: i64) -> Self {
        self.version_number = Some(input);
        self
    }
    /// <p>The version number of the schema.</p>
    pub fn set_version_number(mut self, input: std::option::Option<i64>) -> Self {
        self.version_number = input;
        self
    }
    /// <p>The details of the error for the schema version.</p>
    pub fn error_details(mut self, input: crate::types::ErrorDetails) -> Self {
        self.error_details = Some(input);
        self
    }
    /// <p>The details of the error for the schema version.</p>
    pub fn set_error_details(
        mut self,
        input: std::option::Option<crate::types::ErrorDetails>,
    ) -> Self {
        self.error_details = input;
        self
    }
    /// Consumes the builder and constructs a [`SchemaVersionErrorItem`](crate::types::SchemaVersionErrorItem).
    pub fn build(self) -> crate::types::SchemaVersionErrorItem {
        crate::types::SchemaVersionErrorItem {
            version_number: self.version_number.unwrap_or_default(),
            error_details: self.error_details,
        }
    }
}
