// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of a blueprint.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BlueprintDetails {
    /// <p>The name of the blueprint.</p>
    #[doc(hidden)]
    pub blueprint_name: std::option::Option<std::string::String>,
    /// <p>The run ID for this blueprint.</p>
    #[doc(hidden)]
    pub run_id: std::option::Option<std::string::String>,
}
impl BlueprintDetails {
    /// <p>The name of the blueprint.</p>
    pub fn blueprint_name(&self) -> std::option::Option<&str> {
        self.blueprint_name.as_deref()
    }
    /// <p>The run ID for this blueprint.</p>
    pub fn run_id(&self) -> std::option::Option<&str> {
        self.run_id.as_deref()
    }
}
impl BlueprintDetails {
    /// Creates a new builder-style object to manufacture [`BlueprintDetails`](crate::types::BlueprintDetails).
    pub fn builder() -> crate::types::builders::BlueprintDetailsBuilder {
        crate::types::builders::BlueprintDetailsBuilder::default()
    }
}

/// A builder for [`BlueprintDetails`](crate::types::BlueprintDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BlueprintDetailsBuilder {
    pub(crate) blueprint_name: std::option::Option<std::string::String>,
    pub(crate) run_id: std::option::Option<std::string::String>,
}
impl BlueprintDetailsBuilder {
    /// <p>The name of the blueprint.</p>
    pub fn blueprint_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.blueprint_name = Some(input.into());
        self
    }
    /// <p>The name of the blueprint.</p>
    pub fn set_blueprint_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.blueprint_name = input;
        self
    }
    /// <p>The run ID for this blueprint.</p>
    pub fn run_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.run_id = Some(input.into());
        self
    }
    /// <p>The run ID for this blueprint.</p>
    pub fn set_run_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.run_id = input;
        self
    }
    /// Consumes the builder and constructs a [`BlueprintDetails`](crate::types::BlueprintDetails).
    pub fn build(self) -> crate::types::BlueprintDetails {
        crate::types::BlueprintDetails {
            blueprint_name: self.blueprint_name,
            run_id: self.run_id,
        }
    }
}
