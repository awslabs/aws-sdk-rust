// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_partition_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::PartitionInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.values {
        let mut array_2 = object.key("Values").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.last_access_time {
        object
            .key("LastAccessTime")
            .date_time(var_4, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_5) = &input.storage_descriptor {
        #[allow(unused_mut)]
        let mut object_6 = object.key("StorageDescriptor").start_object();
        crate::protocol_serde::shape_storage_descriptor::ser_storage_descriptor(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.parameters {
        #[allow(unused_mut)]
        let mut object_8 = object.key("Parameters").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9.as_str()).string(value_10.as_str());
            }
        }
        object_8.finish();
    }
    if let Some(var_11) = &input.last_analyzed_time {
        object
            .key("LastAnalyzedTime")
            .date_time(var_11, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    Ok(())
}
