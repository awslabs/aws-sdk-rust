// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetCrawlerMetricsInput {
    /// <p>A list of the names of crawlers about which to retrieve metrics.</p>
    #[doc(hidden)]
    pub crawler_name_list: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The maximum size of a list to return.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>A continuation token, if this is a continuation call.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl GetCrawlerMetricsInput {
    /// <p>A list of the names of crawlers about which to retrieve metrics.</p>
    pub fn crawler_name_list(&self) -> std::option::Option<&[std::string::String]> {
        self.crawler_name_list.as_deref()
    }
    /// <p>The maximum size of a list to return.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>A continuation token, if this is a continuation call.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl GetCrawlerMetricsInput {
    /// Creates a new builder-style object to manufacture [`GetCrawlerMetricsInput`](crate::operation::get_crawler_metrics::GetCrawlerMetricsInput).
    pub fn builder(
    ) -> crate::operation::get_crawler_metrics::builders::GetCrawlerMetricsInputBuilder {
        crate::operation::get_crawler_metrics::builders::GetCrawlerMetricsInputBuilder::default()
    }
}

/// A builder for [`GetCrawlerMetricsInput`](crate::operation::get_crawler_metrics::GetCrawlerMetricsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetCrawlerMetricsInputBuilder {
    pub(crate) crawler_name_list: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl GetCrawlerMetricsInputBuilder {
    /// Appends an item to `crawler_name_list`.
    ///
    /// To override the contents of this collection use [`set_crawler_name_list`](Self::set_crawler_name_list).
    ///
    /// <p>A list of the names of crawlers about which to retrieve metrics.</p>
    pub fn crawler_name_list(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.crawler_name_list.unwrap_or_default();
        v.push(input.into());
        self.crawler_name_list = Some(v);
        self
    }
    /// <p>A list of the names of crawlers about which to retrieve metrics.</p>
    pub fn set_crawler_name_list(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.crawler_name_list = input;
        self
    }
    /// <p>The maximum size of a list to return.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum size of a list to return.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>A continuation token, if this is a continuation call.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A continuation token, if this is a continuation call.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`GetCrawlerMetricsInput`](crate::operation::get_crawler_metrics::GetCrawlerMetricsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_crawler_metrics::GetCrawlerMetricsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_crawler_metrics::GetCrawlerMetricsInput {
                crawler_name_list: self.crawler_name_list,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
