// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateJobInput {
    /// <p>The name of the job definition to update.</p>
    pub job_name: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the values with which to update the job definition. Unspecified configuration is removed or reset to default values.</p>
    pub job_update: ::std::option::Option<crate::types::JobUpdate>,
}
impl UpdateJobInput {
    /// <p>The name of the job definition to update.</p>
    pub fn job_name(&self) -> ::std::option::Option<&str> {
        self.job_name.as_deref()
    }
    /// <p>Specifies the values with which to update the job definition. Unspecified configuration is removed or reset to default values.</p>
    pub fn job_update(&self) -> ::std::option::Option<&crate::types::JobUpdate> {
        self.job_update.as_ref()
    }
}
impl UpdateJobInput {
    /// Creates a new builder-style object to manufacture [`UpdateJobInput`](crate::operation::update_job::UpdateJobInput).
    pub fn builder() -> crate::operation::update_job::builders::UpdateJobInputBuilder {
        crate::operation::update_job::builders::UpdateJobInputBuilder::default()
    }
}

/// A builder for [`UpdateJobInput`](crate::operation::update_job::UpdateJobInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateJobInputBuilder {
    pub(crate) job_name: ::std::option::Option<::std::string::String>,
    pub(crate) job_update: ::std::option::Option<crate::types::JobUpdate>,
}
impl UpdateJobInputBuilder {
    /// <p>The name of the job definition to update.</p>
    /// This field is required.
    pub fn job_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the job definition to update.</p>
    pub fn set_job_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_name = input;
        self
    }
    /// <p>The name of the job definition to update.</p>
    pub fn get_job_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_name
    }
    /// <p>Specifies the values with which to update the job definition. Unspecified configuration is removed or reset to default values.</p>
    /// This field is required.
    pub fn job_update(mut self, input: crate::types::JobUpdate) -> Self {
        self.job_update = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the values with which to update the job definition. Unspecified configuration is removed or reset to default values.</p>
    pub fn set_job_update(mut self, input: ::std::option::Option<crate::types::JobUpdate>) -> Self {
        self.job_update = input;
        self
    }
    /// <p>Specifies the values with which to update the job definition. Unspecified configuration is removed or reset to default values.</p>
    pub fn get_job_update(&self) -> &::std::option::Option<crate::types::JobUpdate> {
        &self.job_update
    }
    /// Consumes the builder and constructs a [`UpdateJobInput`](crate::operation::update_job::UpdateJobInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::update_job::UpdateJobInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_job::UpdateJobInput {
            job_name: self.job_name,
            job_update: self.job_update,
        })
    }
}
