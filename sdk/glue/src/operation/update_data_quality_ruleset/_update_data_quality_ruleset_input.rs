// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateDataQualityRulesetInput {
    /// <p>The name of the data quality ruleset.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The new name of the ruleset, if you are renaming it.</p>
    #[doc(hidden)]
    pub updated_name: std::option::Option<std::string::String>,
    /// <p>A description of the ruleset.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    #[doc(hidden)]
    pub ruleset: std::option::Option<std::string::String>,
}
impl UpdateDataQualityRulesetInput {
    /// <p>The name of the data quality ruleset.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The new name of the ruleset, if you are renaming it.</p>
    pub fn updated_name(&self) -> std::option::Option<&str> {
        self.updated_name.as_deref()
    }
    /// <p>A description of the ruleset.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn ruleset(&self) -> std::option::Option<&str> {
        self.ruleset.as_deref()
    }
}
impl UpdateDataQualityRulesetInput {
    /// Creates a new builder-style object to manufacture [`UpdateDataQualityRulesetInput`](crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput).
    pub fn builder(
    ) -> crate::operation::update_data_quality_ruleset::builders::UpdateDataQualityRulesetInputBuilder
    {
        crate::operation::update_data_quality_ruleset::builders::UpdateDataQualityRulesetInputBuilder::default()
    }
}

/// A builder for [`UpdateDataQualityRulesetInput`](crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateDataQualityRulesetInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) updated_name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) ruleset: std::option::Option<std::string::String>,
}
impl UpdateDataQualityRulesetInputBuilder {
    /// <p>The name of the data quality ruleset.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the data quality ruleset.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The new name of the ruleset, if you are renaming it.</p>
    pub fn updated_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.updated_name = Some(input.into());
        self
    }
    /// <p>The new name of the ruleset, if you are renaming it.</p>
    pub fn set_updated_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.updated_name = input;
        self
    }
    /// <p>A description of the ruleset.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>A description of the ruleset.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn ruleset(mut self, input: impl Into<std::string::String>) -> Self {
        self.ruleset = Some(input.into());
        self
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn set_ruleset(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ruleset = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateDataQualityRulesetInput`](crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput {
                name: self.name,
                updated_name: self.updated_name,
                description: self.description,
                ruleset: self.ruleset,
            },
        )
    }
}
