// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateDataQualityRulesetInput {
    /// <p>The name of the data quality ruleset.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>A description of the ruleset.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub ruleset: ::std::option::Option<::std::string::String>,
}
impl UpdateDataQualityRulesetInput {
    /// <p>The name of the data quality ruleset.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>A description of the ruleset.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn ruleset(&self) -> ::std::option::Option<&str> {
        self.ruleset.as_deref()
    }
}
impl UpdateDataQualityRulesetInput {
    /// Creates a new builder-style object to manufacture [`UpdateDataQualityRulesetInput`](crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput).
    pub fn builder() -> crate::operation::update_data_quality_ruleset::builders::UpdateDataQualityRulesetInputBuilder {
        crate::operation::update_data_quality_ruleset::builders::UpdateDataQualityRulesetInputBuilder::default()
    }
}

/// A builder for [`UpdateDataQualityRulesetInput`](crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateDataQualityRulesetInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) ruleset: ::std::option::Option<::std::string::String>,
}
impl UpdateDataQualityRulesetInputBuilder {
    /// <p>The name of the data quality ruleset.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the data quality ruleset.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the data quality ruleset.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>A description of the ruleset.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the ruleset.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A description of the ruleset.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn ruleset(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ruleset = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn set_ruleset(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ruleset = input;
        self
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn get_ruleset(&self) -> &::std::option::Option<::std::string::String> {
        &self.ruleset
    }
    /// Consumes the builder and constructs a [`UpdateDataQualityRulesetInput`](crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetInput {
            name: self.name,
            description: self.description,
            ruleset: self.ruleset,
        })
    }
}
