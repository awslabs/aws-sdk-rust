// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateDataQualityRulesetOutput {
    /// <p>The name of the data quality ruleset.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>A description of the ruleset.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    #[doc(hidden)]
    pub ruleset: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl UpdateDataQualityRulesetOutput {
    /// <p>The name of the data quality ruleset.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>A description of the ruleset.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn ruleset(&self) -> std::option::Option<&str> {
        self.ruleset.as_deref()
    }
}
impl aws_http::request_id::RequestId for UpdateDataQualityRulesetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateDataQualityRulesetOutput {
    /// Creates a new builder-style object to manufacture [`UpdateDataQualityRulesetOutput`](crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetOutput).
    pub fn builder() -> crate::operation::update_data_quality_ruleset::builders::UpdateDataQualityRulesetOutputBuilder{
        crate::operation::update_data_quality_ruleset::builders::UpdateDataQualityRulesetOutputBuilder::default()
    }
}

/// A builder for [`UpdateDataQualityRulesetOutput`](crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateDataQualityRulesetOutputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) ruleset: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl UpdateDataQualityRulesetOutputBuilder {
    /// <p>The name of the data quality ruleset.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the data quality ruleset.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>A description of the ruleset.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>A description of the ruleset.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn ruleset(mut self, input: impl Into<std::string::String>) -> Self {
        self.ruleset = Some(input.into());
        self
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn set_ruleset(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ruleset = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateDataQualityRulesetOutput`](crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetOutput).
    pub fn build(
        self,
    ) -> crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetOutput {
        crate::operation::update_data_quality_ruleset::UpdateDataQualityRulesetOutput {
            name: self.name,
            description: self.description,
            ruleset: self.ruleset,
            _request_id: self._request_id,
        }
    }
}
