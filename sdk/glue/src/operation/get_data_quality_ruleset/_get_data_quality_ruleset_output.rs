// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDataQualityRulesetOutput {
    /// <p>The name of the ruleset.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>A description of the ruleset.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    #[doc(hidden)]
    pub ruleset: std::option::Option<std::string::String>,
    /// <p>The name and database name of the target table.</p>
    #[doc(hidden)]
    pub target_table: std::option::Option<crate::types::DataQualityTargetTable>,
    /// <p>A timestamp. The time and date that this data quality ruleset was created.</p>
    #[doc(hidden)]
    pub created_on: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A timestamp. The last point in time when this data quality ruleset was modified.</p>
    #[doc(hidden)]
    pub last_modified_on: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>When a ruleset was created from a recommendation run, this run ID is generated to link the two together.</p>
    #[doc(hidden)]
    pub recommendation_run_id: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetDataQualityRulesetOutput {
    /// <p>The name of the ruleset.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>A description of the ruleset.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn ruleset(&self) -> std::option::Option<&str> {
        self.ruleset.as_deref()
    }
    /// <p>The name and database name of the target table.</p>
    pub fn target_table(&self) -> std::option::Option<&crate::types::DataQualityTargetTable> {
        self.target_table.as_ref()
    }
    /// <p>A timestamp. The time and date that this data quality ruleset was created.</p>
    pub fn created_on(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_on.as_ref()
    }
    /// <p>A timestamp. The last point in time when this data quality ruleset was modified.</p>
    pub fn last_modified_on(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_on.as_ref()
    }
    /// <p>When a ruleset was created from a recommendation run, this run ID is generated to link the two together.</p>
    pub fn recommendation_run_id(&self) -> std::option::Option<&str> {
        self.recommendation_run_id.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetDataQualityRulesetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetDataQualityRulesetOutput {
    /// Creates a new builder-style object to manufacture [`GetDataQualityRulesetOutput`](crate::operation::get_data_quality_ruleset::GetDataQualityRulesetOutput).
    pub fn builder(
    ) -> crate::operation::get_data_quality_ruleset::builders::GetDataQualityRulesetOutputBuilder
    {
        crate::operation::get_data_quality_ruleset::builders::GetDataQualityRulesetOutputBuilder::default()
    }
}

/// A builder for [`GetDataQualityRulesetOutput`](crate::operation::get_data_quality_ruleset::GetDataQualityRulesetOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDataQualityRulesetOutputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) ruleset: std::option::Option<std::string::String>,
    pub(crate) target_table: std::option::Option<crate::types::DataQualityTargetTable>,
    pub(crate) created_on: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_on: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) recommendation_run_id: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetDataQualityRulesetOutputBuilder {
    /// <p>The name of the ruleset.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the ruleset.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>A description of the ruleset.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>A description of the ruleset.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn ruleset(mut self, input: impl Into<std::string::String>) -> Self {
        self.ruleset = Some(input.into());
        self
    }
    /// <p>A Data Quality Definition Language (DQDL) ruleset. For more information, see the Glue developer guide.</p>
    pub fn set_ruleset(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ruleset = input;
        self
    }
    /// <p>The name and database name of the target table.</p>
    pub fn target_table(mut self, input: crate::types::DataQualityTargetTable) -> Self {
        self.target_table = Some(input);
        self
    }
    /// <p>The name and database name of the target table.</p>
    pub fn set_target_table(
        mut self,
        input: std::option::Option<crate::types::DataQualityTargetTable>,
    ) -> Self {
        self.target_table = input;
        self
    }
    /// <p>A timestamp. The time and date that this data quality ruleset was created.</p>
    pub fn created_on(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_on = Some(input);
        self
    }
    /// <p>A timestamp. The time and date that this data quality ruleset was created.</p>
    pub fn set_created_on(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_on = input;
        self
    }
    /// <p>A timestamp. The last point in time when this data quality ruleset was modified.</p>
    pub fn last_modified_on(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_on = Some(input);
        self
    }
    /// <p>A timestamp. The last point in time when this data quality ruleset was modified.</p>
    pub fn set_last_modified_on(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_on = input;
        self
    }
    /// <p>When a ruleset was created from a recommendation run, this run ID is generated to link the two together.</p>
    pub fn recommendation_run_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.recommendation_run_id = Some(input.into());
        self
    }
    /// <p>When a ruleset was created from a recommendation run, this run ID is generated to link the two together.</p>
    pub fn set_recommendation_run_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.recommendation_run_id = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetDataQualityRulesetOutput`](crate::operation::get_data_quality_ruleset::GetDataQualityRulesetOutput).
    pub fn build(self) -> crate::operation::get_data_quality_ruleset::GetDataQualityRulesetOutput {
        crate::operation::get_data_quality_ruleset::GetDataQualityRulesetOutput {
            name: self.name,
            description: self.description,
            ruleset: self.ruleset,
            target_table: self.target_table,
            created_on: self.created_on,
            last_modified_on: self.last_modified_on,
            recommendation_run_id: self.recommendation_run_id,
            _request_id: self._request_id,
        }
    }
}
