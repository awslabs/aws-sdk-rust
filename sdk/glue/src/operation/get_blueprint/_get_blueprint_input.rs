// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetBlueprintInput {
    /// <p>The name of the blueprint.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>Specifies whether or not to include the blueprint in the response.</p>
    #[doc(hidden)]
    pub include_blueprint: std::option::Option<bool>,
    /// <p>Specifies whether or not to include the parameter specification.</p>
    #[doc(hidden)]
    pub include_parameter_spec: std::option::Option<bool>,
}
impl GetBlueprintInput {
    /// <p>The name of the blueprint.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Specifies whether or not to include the blueprint in the response.</p>
    pub fn include_blueprint(&self) -> std::option::Option<bool> {
        self.include_blueprint
    }
    /// <p>Specifies whether or not to include the parameter specification.</p>
    pub fn include_parameter_spec(&self) -> std::option::Option<bool> {
        self.include_parameter_spec
    }
}
impl GetBlueprintInput {
    /// Creates a new builder-style object to manufacture [`GetBlueprintInput`](crate::operation::get_blueprint::GetBlueprintInput).
    pub fn builder() -> crate::operation::get_blueprint::builders::GetBlueprintInputBuilder {
        crate::operation::get_blueprint::builders::GetBlueprintInputBuilder::default()
    }
}

/// A builder for [`GetBlueprintInput`](crate::operation::get_blueprint::GetBlueprintInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetBlueprintInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) include_blueprint: std::option::Option<bool>,
    pub(crate) include_parameter_spec: std::option::Option<bool>,
}
impl GetBlueprintInputBuilder {
    /// <p>The name of the blueprint.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the blueprint.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Specifies whether or not to include the blueprint in the response.</p>
    pub fn include_blueprint(mut self, input: bool) -> Self {
        self.include_blueprint = Some(input);
        self
    }
    /// <p>Specifies whether or not to include the blueprint in the response.</p>
    pub fn set_include_blueprint(mut self, input: std::option::Option<bool>) -> Self {
        self.include_blueprint = input;
        self
    }
    /// <p>Specifies whether or not to include the parameter specification.</p>
    pub fn include_parameter_spec(mut self, input: bool) -> Self {
        self.include_parameter_spec = Some(input);
        self
    }
    /// <p>Specifies whether or not to include the parameter specification.</p>
    pub fn set_include_parameter_spec(mut self, input: std::option::Option<bool>) -> Self {
        self.include_parameter_spec = input;
        self
    }
    /// Consumes the builder and constructs a [`GetBlueprintInput`](crate::operation::get_blueprint::GetBlueprintInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_blueprint::GetBlueprintInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_blueprint::GetBlueprintInput {
            name: self.name,
            include_blueprint: self.include_blueprint,
            include_parameter_spec: self.include_parameter_spec,
        })
    }
}
