// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CancelStatementInput {
    /// <p>The Session ID of the statement to be cancelled.</p>
    #[doc(hidden)]
    pub session_id: std::option::Option<std::string::String>,
    /// <p>The ID of the statement to be cancelled.</p>
    #[doc(hidden)]
    pub id: i32,
    /// <p>The origin of the request to cancel the statement.</p>
    #[doc(hidden)]
    pub request_origin: std::option::Option<std::string::String>,
}
impl CancelStatementInput {
    /// <p>The Session ID of the statement to be cancelled.</p>
    pub fn session_id(&self) -> std::option::Option<&str> {
        self.session_id.as_deref()
    }
    /// <p>The ID of the statement to be cancelled.</p>
    pub fn id(&self) -> i32 {
        self.id
    }
    /// <p>The origin of the request to cancel the statement.</p>
    pub fn request_origin(&self) -> std::option::Option<&str> {
        self.request_origin.as_deref()
    }
}
impl CancelStatementInput {
    /// Creates a new builder-style object to manufacture [`CancelStatementInput`](crate::operation::cancel_statement::CancelStatementInput).
    pub fn builder() -> crate::operation::cancel_statement::builders::CancelStatementInputBuilder {
        crate::operation::cancel_statement::builders::CancelStatementInputBuilder::default()
    }
}

/// A builder for [`CancelStatementInput`](crate::operation::cancel_statement::CancelStatementInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CancelStatementInputBuilder {
    pub(crate) session_id: std::option::Option<std::string::String>,
    pub(crate) id: std::option::Option<i32>,
    pub(crate) request_origin: std::option::Option<std::string::String>,
}
impl CancelStatementInputBuilder {
    /// <p>The Session ID of the statement to be cancelled.</p>
    pub fn session_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.session_id = Some(input.into());
        self
    }
    /// <p>The Session ID of the statement to be cancelled.</p>
    pub fn set_session_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.session_id = input;
        self
    }
    /// <p>The ID of the statement to be cancelled.</p>
    pub fn id(mut self, input: i32) -> Self {
        self.id = Some(input);
        self
    }
    /// <p>The ID of the statement to be cancelled.</p>
    pub fn set_id(mut self, input: std::option::Option<i32>) -> Self {
        self.id = input;
        self
    }
    /// <p>The origin of the request to cancel the statement.</p>
    pub fn request_origin(mut self, input: impl Into<std::string::String>) -> Self {
        self.request_origin = Some(input.into());
        self
    }
    /// <p>The origin of the request to cancel the statement.</p>
    pub fn set_request_origin(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.request_origin = input;
        self
    }
    /// Consumes the builder and constructs a [`CancelStatementInput`](crate::operation::cancel_statement::CancelStatementInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::cancel_statement::CancelStatementInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::cancel_statement::CancelStatementInput {
            session_id: self.session_id,
            id: self.id.unwrap_or_default(),
            request_origin: self.request_origin,
        })
    }
}
