// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CancelMlTaskRunInput {
    /// <p>The unique identifier of the machine learning transform.</p>
    pub transform_id: ::std::option::Option<::std::string::String>,
    /// <p>A unique identifier for the task run.</p>
    pub task_run_id: ::std::option::Option<::std::string::String>,
}
impl CancelMlTaskRunInput {
    /// <p>The unique identifier of the machine learning transform.</p>
    pub fn transform_id(&self) -> ::std::option::Option<&str> {
        self.transform_id.as_deref()
    }
    /// <p>A unique identifier for the task run.</p>
    pub fn task_run_id(&self) -> ::std::option::Option<&str> {
        self.task_run_id.as_deref()
    }
}
impl CancelMlTaskRunInput {
    /// Creates a new builder-style object to manufacture [`CancelMlTaskRunInput`](crate::operation::cancel_ml_task_run::CancelMlTaskRunInput).
    pub fn builder() -> crate::operation::cancel_ml_task_run::builders::CancelMlTaskRunInputBuilder {
        crate::operation::cancel_ml_task_run::builders::CancelMlTaskRunInputBuilder::default()
    }
}

/// A builder for [`CancelMlTaskRunInput`](crate::operation::cancel_ml_task_run::CancelMlTaskRunInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CancelMlTaskRunInputBuilder {
    pub(crate) transform_id: ::std::option::Option<::std::string::String>,
    pub(crate) task_run_id: ::std::option::Option<::std::string::String>,
}
impl CancelMlTaskRunInputBuilder {
    /// <p>The unique identifier of the machine learning transform.</p>
    /// This field is required.
    pub fn transform_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.transform_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the machine learning transform.</p>
    pub fn set_transform_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.transform_id = input;
        self
    }
    /// <p>The unique identifier of the machine learning transform.</p>
    pub fn get_transform_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.transform_id
    }
    /// <p>A unique identifier for the task run.</p>
    /// This field is required.
    pub fn task_run_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.task_run_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the task run.</p>
    pub fn set_task_run_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.task_run_id = input;
        self
    }
    /// <p>A unique identifier for the task run.</p>
    pub fn get_task_run_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.task_run_id
    }
    /// Consumes the builder and constructs a [`CancelMlTaskRunInput`](crate::operation::cancel_ml_task_run::CancelMlTaskRunInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::cancel_ml_task_run::CancelMlTaskRunInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::cancel_ml_task_run::CancelMlTaskRunInput {
            transform_id: self.transform_id,
            task_run_id: self.task_run_id,
        })
    }
}
