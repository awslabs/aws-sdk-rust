// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteSchemaVersionsInput {
    /// <p>This is a wrapper structure that may contain the schema name and Amazon Resource Name (ARN).</p>
    #[doc(hidden)]
    pub schema_id: std::option::Option<crate::types::SchemaId>,
    /// <p>A version range may be supplied which may be of the format:</p>
    /// <ul>
    /// <li> <p>a single version number, 5</p> </li>
    /// <li> <p>a range, 5-8 : deletes versions 5, 6, 7, 8</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub versions: std::option::Option<std::string::String>,
}
impl DeleteSchemaVersionsInput {
    /// <p>This is a wrapper structure that may contain the schema name and Amazon Resource Name (ARN).</p>
    pub fn schema_id(&self) -> std::option::Option<&crate::types::SchemaId> {
        self.schema_id.as_ref()
    }
    /// <p>A version range may be supplied which may be of the format:</p>
    /// <ul>
    /// <li> <p>a single version number, 5</p> </li>
    /// <li> <p>a range, 5-8 : deletes versions 5, 6, 7, 8</p> </li>
    /// </ul>
    pub fn versions(&self) -> std::option::Option<&str> {
        self.versions.as_deref()
    }
}
impl DeleteSchemaVersionsInput {
    /// Creates a new builder-style object to manufacture [`DeleteSchemaVersionsInput`](crate::operation::delete_schema_versions::DeleteSchemaVersionsInput).
    pub fn builder(
    ) -> crate::operation::delete_schema_versions::builders::DeleteSchemaVersionsInputBuilder {
        crate::operation::delete_schema_versions::builders::DeleteSchemaVersionsInputBuilder::default()
    }
}

/// A builder for [`DeleteSchemaVersionsInput`](crate::operation::delete_schema_versions::DeleteSchemaVersionsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteSchemaVersionsInputBuilder {
    pub(crate) schema_id: std::option::Option<crate::types::SchemaId>,
    pub(crate) versions: std::option::Option<std::string::String>,
}
impl DeleteSchemaVersionsInputBuilder {
    /// <p>This is a wrapper structure that may contain the schema name and Amazon Resource Name (ARN).</p>
    pub fn schema_id(mut self, input: crate::types::SchemaId) -> Self {
        self.schema_id = Some(input);
        self
    }
    /// <p>This is a wrapper structure that may contain the schema name and Amazon Resource Name (ARN).</p>
    pub fn set_schema_id(mut self, input: std::option::Option<crate::types::SchemaId>) -> Self {
        self.schema_id = input;
        self
    }
    /// <p>A version range may be supplied which may be of the format:</p>
    /// <ul>
    /// <li> <p>a single version number, 5</p> </li>
    /// <li> <p>a range, 5-8 : deletes versions 5, 6, 7, 8</p> </li>
    /// </ul>
    pub fn versions(mut self, input: impl Into<std::string::String>) -> Self {
        self.versions = Some(input.into());
        self
    }
    /// <p>A version range may be supplied which may be of the format:</p>
    /// <ul>
    /// <li> <p>a single version number, 5</p> </li>
    /// <li> <p>a range, 5-8 : deletes versions 5, 6, 7, 8</p> </li>
    /// </ul>
    pub fn set_versions(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.versions = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteSchemaVersionsInput`](crate::operation::delete_schema_versions::DeleteSchemaVersionsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_schema_versions::DeleteSchemaVersionsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_schema_versions::DeleteSchemaVersionsInput {
                schema_id: self.schema_id,
                versions: self.versions,
            },
        )
    }
}
