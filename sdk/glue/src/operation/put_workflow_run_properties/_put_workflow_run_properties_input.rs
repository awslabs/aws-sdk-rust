// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutWorkflowRunPropertiesInput {
    /// <p>Name of the workflow which was run.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The ID of the workflow run for which the run properties should be updated.</p>
    #[doc(hidden)]
    pub run_id: std::option::Option<std::string::String>,
    /// <p>The properties to put for the specified run.</p>
    #[doc(hidden)]
    pub run_properties:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl PutWorkflowRunPropertiesInput {
    /// <p>Name of the workflow which was run.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The ID of the workflow run for which the run properties should be updated.</p>
    pub fn run_id(&self) -> std::option::Option<&str> {
        self.run_id.as_deref()
    }
    /// <p>The properties to put for the specified run.</p>
    pub fn run_properties(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.run_properties.as_ref()
    }
}
impl PutWorkflowRunPropertiesInput {
    /// Creates a new builder-style object to manufacture [`PutWorkflowRunPropertiesInput`](crate::operation::put_workflow_run_properties::PutWorkflowRunPropertiesInput).
    pub fn builder(
    ) -> crate::operation::put_workflow_run_properties::builders::PutWorkflowRunPropertiesInputBuilder
    {
        crate::operation::put_workflow_run_properties::builders::PutWorkflowRunPropertiesInputBuilder::default()
    }
}

/// A builder for [`PutWorkflowRunPropertiesInput`](crate::operation::put_workflow_run_properties::PutWorkflowRunPropertiesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutWorkflowRunPropertiesInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) run_id: std::option::Option<std::string::String>,
    pub(crate) run_properties:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl PutWorkflowRunPropertiesInputBuilder {
    /// <p>Name of the workflow which was run.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>Name of the workflow which was run.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The ID of the workflow run for which the run properties should be updated.</p>
    pub fn run_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.run_id = Some(input.into());
        self
    }
    /// <p>The ID of the workflow run for which the run properties should be updated.</p>
    pub fn set_run_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.run_id = input;
        self
    }
    /// Adds a key-value pair to `run_properties`.
    ///
    /// To override the contents of this collection use [`set_run_properties`](Self::set_run_properties).
    ///
    /// <p>The properties to put for the specified run.</p>
    pub fn run_properties(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.run_properties.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.run_properties = Some(hash_map);
        self
    }
    /// <p>The properties to put for the specified run.</p>
    pub fn set_run_properties(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.run_properties = input;
        self
    }
    /// Consumes the builder and constructs a [`PutWorkflowRunPropertiesInput`](crate::operation::put_workflow_run_properties::PutWorkflowRunPropertiesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_workflow_run_properties::PutWorkflowRunPropertiesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_workflow_run_properties::PutWorkflowRunPropertiesInput {
                name: self.name,
                run_id: self.run_id,
                run_properties: self.run_properties,
            },
        )
    }
}
