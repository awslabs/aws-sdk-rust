// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartExportLabelsTaskRunInput {
    /// <p>The unique identifier of the machine learning transform.</p>
    #[doc(hidden)]
    pub transform_id: std::option::Option<std::string::String>,
    /// <p>The Amazon S3 path where you export the labels.</p>
    #[doc(hidden)]
    pub output_s3_path: std::option::Option<std::string::String>,
}
impl StartExportLabelsTaskRunInput {
    /// <p>The unique identifier of the machine learning transform.</p>
    pub fn transform_id(&self) -> std::option::Option<&str> {
        self.transform_id.as_deref()
    }
    /// <p>The Amazon S3 path where you export the labels.</p>
    pub fn output_s3_path(&self) -> std::option::Option<&str> {
        self.output_s3_path.as_deref()
    }
}
impl StartExportLabelsTaskRunInput {
    /// Creates a new builder-style object to manufacture [`StartExportLabelsTaskRunInput`](crate::operation::start_export_labels_task_run::StartExportLabelsTaskRunInput).
    pub fn builder() -> crate::operation::start_export_labels_task_run::builders::StartExportLabelsTaskRunInputBuilder{
        crate::operation::start_export_labels_task_run::builders::StartExportLabelsTaskRunInputBuilder::default()
    }
}

/// A builder for [`StartExportLabelsTaskRunInput`](crate::operation::start_export_labels_task_run::StartExportLabelsTaskRunInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartExportLabelsTaskRunInputBuilder {
    pub(crate) transform_id: std::option::Option<std::string::String>,
    pub(crate) output_s3_path: std::option::Option<std::string::String>,
}
impl StartExportLabelsTaskRunInputBuilder {
    /// <p>The unique identifier of the machine learning transform.</p>
    pub fn transform_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.transform_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the machine learning transform.</p>
    pub fn set_transform_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.transform_id = input;
        self
    }
    /// <p>The Amazon S3 path where you export the labels.</p>
    pub fn output_s3_path(mut self, input: impl Into<std::string::String>) -> Self {
        self.output_s3_path = Some(input.into());
        self
    }
    /// <p>The Amazon S3 path where you export the labels.</p>
    pub fn set_output_s3_path(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.output_s3_path = input;
        self
    }
    /// Consumes the builder and constructs a [`StartExportLabelsTaskRunInput`](crate::operation::start_export_labels_task_run::StartExportLabelsTaskRunInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::start_export_labels_task_run::StartExportLabelsTaskRunInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::start_export_labels_task_run::StartExportLabelsTaskRunInput {
                transform_id: self.transform_id,
                output_s3_path: self.output_s3_path,
            },
        )
    }
}
