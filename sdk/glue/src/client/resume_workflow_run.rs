// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ResumeWorkflowRun`](crate::operation::resume_workflow_run::builders::ResumeWorkflowRunFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::resume_workflow_run::builders::ResumeWorkflowRunFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::resume_workflow_run::builders::ResumeWorkflowRunFluentBuilder::set_name):<br>required: **true**<br><p>The name of the workflow to resume.</p><br>
    ///   - [`run_id(impl Into<String>)`](crate::operation::resume_workflow_run::builders::ResumeWorkflowRunFluentBuilder::run_id) / [`set_run_id(Option<String>)`](crate::operation::resume_workflow_run::builders::ResumeWorkflowRunFluentBuilder::set_run_id):<br>required: **true**<br><p>The ID of the workflow run to resume.</p><br>
    ///   - [`node_ids(impl Into<String>)`](crate::operation::resume_workflow_run::builders::ResumeWorkflowRunFluentBuilder::node_ids) / [`set_node_ids(Option<Vec::<String>>)`](crate::operation::resume_workflow_run::builders::ResumeWorkflowRunFluentBuilder::set_node_ids):<br>required: **true**<br><p>A list of the node IDs for the nodes you want to restart. The nodes that are to be restarted must have a run attempt in the original run.</p><br>
    /// - On success, responds with [`ResumeWorkflowRunOutput`](crate::operation::resume_workflow_run::ResumeWorkflowRunOutput) with field(s):
    ///   - [`run_id(Option<String>)`](crate::operation::resume_workflow_run::ResumeWorkflowRunOutput::run_id): <p>The new ID assigned to the resumed workflow run. Each resume of a workflow run will have a new run ID.</p>
    ///   - [`node_ids(Option<Vec::<String>>)`](crate::operation::resume_workflow_run::ResumeWorkflowRunOutput::node_ids): <p>A list of the node IDs for the nodes that were actually restarted.</p>
    /// - On failure, responds with [`SdkError<ResumeWorkflowRunError>`](crate::operation::resume_workflow_run::ResumeWorkflowRunError)
    pub fn resume_workflow_run(&self) -> crate::operation::resume_workflow_run::builders::ResumeWorkflowRunFluentBuilder {
        crate::operation::resume_workflow_run::builders::ResumeWorkflowRunFluentBuilder::new(self.handle.clone())
    }
}
