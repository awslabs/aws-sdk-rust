// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBlueprint`](crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder::set_name):<br>required: **true**<br><p>The name of the blueprint.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder::set_description):<br>required: **false**<br><p>A description of the blueprint.</p><br>
    ///   - [`blueprint_location(impl Into<String>)`](crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder::blueprint_location) / [`set_blueprint_location(Option<String>)`](crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder::set_blueprint_location):<br>required: **true**<br><p>Specifies a path in Amazon S3 where the blueprint is published.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be applied to this blueprint.</p><br>
    /// - On success, responds with [`CreateBlueprintOutput`](crate::operation::create_blueprint::CreateBlueprintOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::create_blueprint::CreateBlueprintOutput::name): <p>Returns the name of the blueprint that was registered.</p>
    /// - On failure, responds with [`SdkError<CreateBlueprintError>`](crate::operation::create_blueprint::CreateBlueprintError)
    pub fn create_blueprint(&self) -> crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder {
        crate::operation::create_blueprint::builders::CreateBlueprintFluentBuilder::new(self.handle.clone())
    }
}
