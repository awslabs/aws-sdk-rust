// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateJob`](crate::operation::create_job::builders::CreateJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_name):<br>required: **true**<br><p>The name you assign to this job definition. It must be unique in your account.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_description):<br>required: **false**<br><p>Description of the job being defined.</p><br>
    ///   - [`log_uri(impl Into<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::log_uri) / [`set_log_uri(Option<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_log_uri):<br>required: **false**<br><p>This field is reserved for future use.</p><br>
    ///   - [`role(impl Into<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::role) / [`set_role(Option<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_role):<br>required: **true**<br><p>The name or Amazon Resource Name (ARN) of the IAM role associated with this job.</p><br>
    ///   - [`execution_property(ExecutionProperty)`](crate::operation::create_job::builders::CreateJobFluentBuilder::execution_property) / [`set_execution_property(Option<ExecutionProperty>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_execution_property):<br>required: **false**<br><p>An <code>ExecutionProperty</code> specifying the maximum number of concurrent runs allowed for this job.</p><br>
    ///   - [`command(JobCommand)`](crate::operation::create_job::builders::CreateJobFluentBuilder::command) / [`set_command(Option<JobCommand>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_command):<br>required: **true**<br><p>The <code>JobCommand</code> that runs this job.</p><br>
    ///   - [`default_arguments(impl Into<String>, impl Into<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::default_arguments) / [`set_default_arguments(Option<HashMap::<String, String>>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_default_arguments):<br>required: **false**<br><p>The default arguments for every run of this job, specified as name-value pairs.</p>  <p>You can specify arguments here that your own job-execution script consumes, as well as arguments that Glue itself consumes.</p>  <p>Job arguments may be logged. Do not pass plaintext secrets as arguments. Retrieve secrets from a Glue Connection, Secrets Manager or other secret management mechanism if you intend to keep them within the Job. </p>  <p>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling Glue APIs in Python</a> topic in the developer guide.</p>  <p>For information about the arguments you can provide to this field when configuring Spark jobs, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special Parameters Used by Glue</a> topic in the developer guide.</p>  <p>For information about the arguments you can provide to this field when configuring Ray jobs, see <a href="https://docs.aws.amazon.com/glue/latest/dg/author-job-ray-job-parameters.html">Using job parameters in Ray jobs</a> in the developer guide.</p><br>
    ///   - [`non_overridable_arguments(impl Into<String>, impl Into<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::non_overridable_arguments) / [`set_non_overridable_arguments(Option<HashMap::<String, String>>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_non_overridable_arguments):<br>required: **false**<br><p>Arguments for this job that are not overridden when providing job arguments in a job run, specified as name-value pairs.</p><br>
    ///   - [`connections(ConnectionsList)`](crate::operation::create_job::builders::CreateJobFluentBuilder::connections) / [`set_connections(Option<ConnectionsList>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_connections):<br>required: **false**<br><p>The connections used for this job.</p><br>
    ///   - [`max_retries(i32)`](crate::operation::create_job::builders::CreateJobFluentBuilder::max_retries) / [`set_max_retries(Option<i32>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_max_retries):<br>required: **false**<br><p>The maximum number of times to retry this job if it fails.</p><br>
    ///   - [`allocated_capacity(i32)`](crate::operation::create_job::builders::CreateJobFluentBuilder::allocated_capacity) / [`set_allocated_capacity(Option<i32>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_allocated_capacity):<br>required: **false**<br><p>This parameter is deprecated. Use <code>MaxCapacity</code> instead.</p>  <p>The number of Glue data processing units (DPUs) to allocate to this Job. You can allocate a minimum of 2 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</p><br>
    ///   - [`timeout(i32)`](crate::operation::create_job::builders::CreateJobFluentBuilder::timeout) / [`set_timeout(Option<i32>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_timeout):<br>required: **false**<br><p>The job timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p><br>
    ///   - [`max_capacity(f64)`](crate::operation::create_job::builders::CreateJobFluentBuilder::max_capacity) / [`set_max_capacity(Option<f64>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_max_capacity):<br>required: **false**<br><p>For Glue version 1.0 or earlier jobs, using the standard worker type, the number of Glue data processing units (DPUs) that can be allocated when this job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/"> Glue pricing page</a>.</p>  <p>For Glue version 2.0+ jobs, you cannot specify a <code>Maximum capacity</code>. Instead, you should specify a <code>Worker type</code> and the <code>Number of workers</code>.</p>  <p>Do not set <code>MaxCapacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</p>  <p>The value that can be allocated for <code>MaxCapacity</code> depends on whether you are running a Python shell job, an Apache Spark ETL job, or an Apache Spark streaming ETL job:</p>  <ul>   <li> <p>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"), you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</p> </li>   <li> <p>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl") or Apache Spark streaming ETL job (<code>JobCommand.Name</code>="gluestreaming"), you can allocate from 2 to 100 DPUs. The default is 10 DPUs. This job type cannot have a fractional DPU allocation.</p> </li>  </ul><br>
    ///   - [`security_configuration(impl Into<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::security_configuration) / [`set_security_configuration(Option<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_security_configuration):<br>required: **false**<br><p>The name of the <code>SecurityConfiguration</code> structure to be used with this job.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to use with this job. You may use tags to limit access to the job. For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon Web Services Tags in Glue</a> in the developer guide.</p><br>
    ///   - [`notification_property(NotificationProperty)`](crate::operation::create_job::builders::CreateJobFluentBuilder::notification_property) / [`set_notification_property(Option<NotificationProperty>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_notification_property):<br>required: **false**<br><p>Specifies configuration properties of a job notification.</p><br>
    ///   - [`glue_version(impl Into<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::glue_version) / [`set_glue_version(Option<String>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_glue_version):<br>required: **false**<br><p>In Spark jobs, <code>GlueVersion</code> determines the versions of Apache Spark and Python that Glue available in a job. The Python version indicates the version supported for jobs of type Spark. </p>  <p>Ray jobs should set <code>GlueVersion</code> to <code>4.0</code> or greater. However, the versions of Ray, Python and additional libraries available in your Ray job are determined by the <code>Runtime</code> parameter of the Job command.</p>  <p>For more information about the available Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p>  <p>Jobs that are created without specifying a Glue version default to Glue 0.9.</p><br>
    ///   - [`number_of_workers(i32)`](crate::operation::create_job::builders::CreateJobFluentBuilder::number_of_workers) / [`set_number_of_workers(Option<i32>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_number_of_workers):<br>required: **false**<br><p>The number of workers of a defined <code>workerType</code> that are allocated when a job runs.</p><br>
    ///   - [`worker_type(WorkerType)`](crate::operation::create_job::builders::CreateJobFluentBuilder::worker_type) / [`set_worker_type(Option<WorkerType>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_worker_type):<br>required: **false**<br><p>The type of predefined worker that is allocated when a job runs. Accepts a value of G.1X, G.2X, G.4X, G.8X or G.025X for Spark jobs. Accepts the value Z.2X for Ray jobs.</p>  <ul>   <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPUs, 16 GB of memory) with 84GB disk (approximately 34GB free), and provides 1 executor per worker. We recommend this worker type for workloads such as data transforms, joins, and queries, to offers a scalable and cost effective way to run most jobs.</p> </li>   <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPUs, 32 GB of memory) with 128GB disk (approximately 77GB free), and provides 1 executor per worker. We recommend this worker type for workloads such as data transforms, joins, and queries, to offers a scalable and cost effective way to run most jobs.</p> </li>   <li> <p>For the <code>G.4X</code> worker type, each worker maps to 4 DPU (16 vCPUs, 64 GB of memory) with 256GB disk (approximately 235GB free), and provides 1 executor per worker. We recommend this worker type for jobs whose workloads contain your most demanding transforms, aggregations, joins, and queries. This worker type is available only for Glue version 3.0 or later Spark ETL jobs in the following Amazon Web Services Regions: US East (Ohio), US East (N. Virginia), US West (Oregon), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central), Europe (Frankfurt), Europe (Ireland), and Europe (Stockholm).</p> </li>   <li> <p>For the <code>G.8X</code> worker type, each worker maps to 8 DPU (32 vCPUs, 128 GB of memory) with 512GB disk (approximately 487GB free), and provides 1 executor per worker. We recommend this worker type for jobs whose workloads contain your most demanding transforms, aggregations, joins, and queries. This worker type is available only for Glue version 3.0 or later Spark ETL jobs, in the same Amazon Web Services Regions as supported for the <code>G.4X</code> worker type.</p> </li>   <li> <p>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPUs, 4 GB of memory) with 84GB disk (approximately 34GB free), and provides 1 executor per worker. We recommend this worker type for low volume streaming jobs. This worker type is only available for Glue version 3.0 streaming jobs.</p> </li>   <li> <p>For the <code>Z.2X</code> worker type, each worker maps to 2 M-DPU (8vCPUs, 64 GB of memory) with 128 GB disk (approximately 120GB free), and provides up to 8 Ray workers based on the autoscaler.</p> </li>  </ul><br>
    ///   - [`code_gen_configuration_nodes(impl Into<String>, CodeGenConfigurationNode)`](crate::operation::create_job::builders::CreateJobFluentBuilder::code_gen_configuration_nodes) / [`set_code_gen_configuration_nodes(Option<HashMap::<String, CodeGenConfigurationNode>>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_code_gen_configuration_nodes):<br>required: **false**<br><p>The representation of a directed acyclic graph on which both the Glue Studio visual component and Glue Studio code generation is based.</p><br>
    ///   - [`execution_class(ExecutionClass)`](crate::operation::create_job::builders::CreateJobFluentBuilder::execution_class) / [`set_execution_class(Option<ExecutionClass>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_execution_class):<br>required: **false**<br><p>Indicates whether the job is run with a standard or flexible execution class. The standard execution-class is ideal for time-sensitive workloads that require fast job startup and dedicated resources.</p>  <p>The flexible execution class is appropriate for time-insensitive jobs whose start and completion times may vary. </p>  <p>Only jobs with Glue version 3.0 and above and command type <code>glueetl</code> will be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>. The flexible execution class is available for Spark jobs.</p><br>
    ///   - [`source_control_details(SourceControlDetails)`](crate::operation::create_job::builders::CreateJobFluentBuilder::source_control_details) / [`set_source_control_details(Option<SourceControlDetails>)`](crate::operation::create_job::builders::CreateJobFluentBuilder::set_source_control_details):<br>required: **false**<br><p>The details for a source control configuration for a job, allowing synchronization of job artifacts to or from a remote repository.</p><br>
    /// - On success, responds with [`CreateJobOutput`](crate::operation::create_job::CreateJobOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::create_job::CreateJobOutput::name): <p>The unique name that was provided for this job definition.</p>
    /// - On failure, responds with [`SdkError<CreateJobError>`](crate::operation::create_job::CreateJobError)
    pub fn create_job(&self) -> crate::operation::create_job::builders::CreateJobFluentBuilder {
        crate::operation::create_job::builders::CreateJobFluentBuilder::new(self.handle.clone())
    }
}
