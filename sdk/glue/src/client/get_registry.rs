// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRegistry`](crate::operation::get_registry::builders::GetRegistryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`registry_id(RegistryId)`](crate::operation::get_registry::builders::GetRegistryFluentBuilder::registry_id) / [`set_registry_id(Option<RegistryId>)`](crate::operation::get_registry::builders::GetRegistryFluentBuilder::set_registry_id):<br>required: **true**<br><p>This is a wrapper structure that may contain the registry name and Amazon Resource Name (ARN).</p><br>
    /// - On success, responds with [`GetRegistryOutput`](crate::operation::get_registry::GetRegistryOutput) with field(s):
    ///   - [`registry_name(Option<String>)`](crate::operation::get_registry::GetRegistryOutput::registry_name): <p>The name of the registry.</p>
    ///   - [`registry_arn(Option<String>)`](crate::operation::get_registry::GetRegistryOutput::registry_arn): <p>The Amazon Resource Name (ARN) of the registry.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_registry::GetRegistryOutput::description): <p>A description of the registry.</p>
    ///   - [`status(Option<RegistryStatus>)`](crate::operation::get_registry::GetRegistryOutput::status): <p>The status of the registry.</p>
    ///   - [`created_time(Option<String>)`](crate::operation::get_registry::GetRegistryOutput::created_time): <p>The date and time the registry was created.</p>
    ///   - [`updated_time(Option<String>)`](crate::operation::get_registry::GetRegistryOutput::updated_time): <p>The date and time the registry was updated.</p>
    /// - On failure, responds with [`SdkError<GetRegistryError>`](crate::operation::get_registry::GetRegistryError)
    pub fn get_registry(&self) -> crate::operation::get_registry::builders::GetRegistryFluentBuilder {
        crate::operation::get_registry::builders::GetRegistryFluentBuilder::new(self.handle.clone())
    }
}
