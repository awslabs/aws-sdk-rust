// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteRegistry`](crate::operation::delete_registry::builders::DeleteRegistryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`registry_id(RegistryId)`](crate::operation::delete_registry::builders::DeleteRegistryFluentBuilder::registry_id) / [`set_registry_id(Option<RegistryId>)`](crate::operation::delete_registry::builders::DeleteRegistryFluentBuilder::set_registry_id): <p>This is a wrapper structure that may contain the registry name and Amazon Resource Name (ARN).</p>
    /// - On success, responds with [`DeleteRegistryOutput`](crate::operation::delete_registry::DeleteRegistryOutput) with field(s):
    ///   - [`registry_name(Option<String>)`](crate::operation::delete_registry::DeleteRegistryOutput::registry_name): <p>The name of the registry being deleted.</p>
    ///   - [`registry_arn(Option<String>)`](crate::operation::delete_registry::DeleteRegistryOutput::registry_arn): <p>The Amazon Resource Name (ARN) of the registry being deleted.</p>
    ///   - [`status(Option<RegistryStatus>)`](crate::operation::delete_registry::DeleteRegistryOutput::status): <p>The status of the registry. A successful operation will return the <code>Deleting</code> status.</p>
    /// - On failure, responds with [`SdkError<DeleteRegistryError>`](crate::operation::delete_registry::DeleteRegistryError)
    pub fn delete_registry(
        &self,
    ) -> crate::operation::delete_registry::builders::DeleteRegistryFluentBuilder {
        crate::operation::delete_registry::builders::DeleteRegistryFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
