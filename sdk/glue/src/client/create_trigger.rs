// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTrigger`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_name):<br>required: **true**<br><p>The name of the trigger.</p><br>
    ///   - [`workflow_name(impl Into<String>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::workflow_name) / [`set_workflow_name(Option<String>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_workflow_name):<br>required: **false**<br><p>The name of the workflow associated with the trigger.</p><br>
    ///   - [`r#type(TriggerType)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::type) / [`set_type(Option<TriggerType>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_type):<br>required: **true**<br><p>The type of the new trigger.</p><br>
    ///   - [`schedule(impl Into<String>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::schedule) / [`set_schedule(Option<String>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_schedule):<br>required: **false**<br><p>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15 UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</p>  <p>This field is required when the trigger type is SCHEDULED.</p><br>
    ///   - [`predicate(Predicate)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::predicate) / [`set_predicate(Option<Predicate>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_predicate):<br>required: **false**<br><p>A predicate to specify when the new trigger should fire.</p>  <p>This field is required when the trigger type is <code>CONDITIONAL</code>.</p><br>
    ///   - [`actions(Action)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::actions) / [`set_actions(Option<Vec::<Action>>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_actions):<br>required: **true**<br><p>The actions initiated by this trigger when it fires.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_description):<br>required: **false**<br><p>A description of the new trigger.</p><br>
    ///   - [`start_on_creation(bool)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::start_on_creation) / [`set_start_on_creation(Option<bool>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_start_on_creation):<br>required: **false**<br><p>Set to <code>true</code> to start <code>SCHEDULED</code> and <code>CONDITIONAL</code> triggers when created. True is not supported for <code>ON_DEMAND</code> triggers.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to use with this trigger. You may use tags to limit access to the trigger. For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon Web Services Tags in Glue</a> in the developer guide. </p><br>
    ///   - [`event_batching_condition(EventBatchingCondition)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::event_batching_condition) / [`set_event_batching_condition(Option<EventBatchingCondition>)`](crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::set_event_batching_condition):<br>required: **false**<br><p>Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.</p><br>
    /// - On success, responds with [`CreateTriggerOutput`](crate::operation::create_trigger::CreateTriggerOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::create_trigger::CreateTriggerOutput::name): <p>The name of the trigger.</p>
    /// - On failure, responds with [`SdkError<CreateTriggerError>`](crate::operation::create_trigger::CreateTriggerError)
    pub fn create_trigger(&self) -> crate::operation::create_trigger::builders::CreateTriggerFluentBuilder {
        crate::operation::create_trigger::builders::CreateTriggerFluentBuilder::new(self.handle.clone())
    }
}
