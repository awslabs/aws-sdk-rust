// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreatePartition`](crate::operation::create_partition::builders::CreatePartitionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::create_partition::builders::CreatePartitionFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::create_partition::builders::CreatePartitionFluentBuilder::set_catalog_id): <p>The Amazon Web Services account ID of the catalog in which the partition is to be created.</p>
    ///   - [`database_name(impl Into<String>)`](crate::operation::create_partition::builders::CreatePartitionFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::create_partition::builders::CreatePartitionFluentBuilder::set_database_name): <p>The name of the metadata database in which the partition is to be created.</p>
    ///   - [`table_name(impl Into<String>)`](crate::operation::create_partition::builders::CreatePartitionFluentBuilder::table_name) / [`set_table_name(Option<String>)`](crate::operation::create_partition::builders::CreatePartitionFluentBuilder::set_table_name): <p>The name of the metadata table in which the partition is to be created.</p>
    ///   - [`partition_input(PartitionInput)`](crate::operation::create_partition::builders::CreatePartitionFluentBuilder::partition_input) / [`set_partition_input(Option<PartitionInput>)`](crate::operation::create_partition::builders::CreatePartitionFluentBuilder::set_partition_input): <p>A <code>PartitionInput</code> structure defining the partition to be created.</p>
    /// - On success, responds with [`CreatePartitionOutput`](crate::operation::create_partition::CreatePartitionOutput)
    /// - On failure, responds with [`SdkError<CreatePartitionError>`](crate::operation::create_partition::CreatePartitionError)
    pub fn create_partition(
        &self,
    ) -> crate::operation::create_partition::builders::CreatePartitionFluentBuilder {
        crate::operation::create_partition::builders::CreatePartitionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
