// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelStatement`](crate::operation::cancel_statement::builders::CancelStatementFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`session_id(impl Into<String>)`](crate::operation::cancel_statement::builders::CancelStatementFluentBuilder::session_id) / [`set_session_id(Option<String>)`](crate::operation::cancel_statement::builders::CancelStatementFluentBuilder::set_session_id):<br>required: **true**<br><p>The Session ID of the statement to be cancelled.</p><br>
    ///   - [`id(i32)`](crate::operation::cancel_statement::builders::CancelStatementFluentBuilder::id) / [`set_id(Option<i32>)`](crate::operation::cancel_statement::builders::CancelStatementFluentBuilder::set_id):<br>required: **true**<br><p>The ID of the statement to be cancelled.</p><br>
    ///   - [`request_origin(impl Into<String>)`](crate::operation::cancel_statement::builders::CancelStatementFluentBuilder::request_origin) / [`set_request_origin(Option<String>)`](crate::operation::cancel_statement::builders::CancelStatementFluentBuilder::set_request_origin):<br>required: **false**<br><p>The origin of the request to cancel the statement.</p><br>
    /// - On success, responds with [`CancelStatementOutput`](crate::operation::cancel_statement::CancelStatementOutput)
    /// - On failure, responds with [`SdkError<CancelStatementError>`](crate::operation::cancel_statement::CancelStatementError)
    pub fn cancel_statement(&self) -> crate::operation::cancel_statement::builders::CancelStatementFluentBuilder {
        crate::operation::cancel_statement::builders::CancelStatementFluentBuilder::new(self.handle.clone())
    }
}
