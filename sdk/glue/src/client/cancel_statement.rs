// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelStatement`](crate::client::fluent_builders::CancelStatement) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`session_id(impl Into<String>)`](crate::client::fluent_builders::CancelStatement::session_id) / [`set_session_id(Option<String>)`](crate::client::fluent_builders::CancelStatement::set_session_id): <p>The Session ID of the statement to be cancelled.</p>
    ///   - [`id(i32)`](crate::client::fluent_builders::CancelStatement::id) / [`set_id(i32)`](crate::client::fluent_builders::CancelStatement::set_id): <p>The ID of the statement to be cancelled.</p>
    ///   - [`request_origin(impl Into<String>)`](crate::client::fluent_builders::CancelStatement::request_origin) / [`set_request_origin(Option<String>)`](crate::client::fluent_builders::CancelStatement::set_request_origin): <p>The origin of the request to cancel the statement.</p>
    /// - On success, responds with [`CancelStatementOutput`](crate::output::CancelStatementOutput)
    /// - On failure, responds with [`SdkError<CancelStatementError>`](crate::error::CancelStatementError)
    pub fn cancel_statement(&self) -> crate::client::fluent_builders::CancelStatement {
        crate::client::fluent_builders::CancelStatement::new(self.handle.clone())
    }
}
