// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListStatements`](crate::operation::list_statements::builders::ListStatementsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`session_id(impl Into<String>)`](crate::operation::list_statements::builders::ListStatementsFluentBuilder::session_id) / [`set_session_id(Option<String>)`](crate::operation::list_statements::builders::ListStatementsFluentBuilder::set_session_id):<br>required: **true**<br><p>The Session ID of the statements.</p><br>
    ///   - [`request_origin(impl Into<String>)`](crate::operation::list_statements::builders::ListStatementsFluentBuilder::request_origin) / [`set_request_origin(Option<String>)`](crate::operation::list_statements::builders::ListStatementsFluentBuilder::set_request_origin):<br>required: **false**<br><p>The origin of the request to list statements.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_statements::builders::ListStatementsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_statements::builders::ListStatementsFluentBuilder::set_next_token):<br>required: **false**<br><p>A continuation token, if this is a continuation call.</p><br>
    /// - On success, responds with [`ListStatementsOutput`](crate::operation::list_statements::ListStatementsOutput) with field(s):
    ///   - [`statements(Option<Vec::<Statement>>)`](crate::operation::list_statements::ListStatementsOutput::statements): <p>Returns the list of statements.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_statements::ListStatementsOutput::next_token): <p>A continuation token, if not all statements have yet been returned.</p>
    /// - On failure, responds with [`SdkError<ListStatementsError>`](crate::operation::list_statements::ListStatementsError)
    pub fn list_statements(&self) -> crate::operation::list_statements::builders::ListStatementsFluentBuilder {
        crate::operation::list_statements::builders::ListStatementsFluentBuilder::new(self.handle.clone())
    }
}
