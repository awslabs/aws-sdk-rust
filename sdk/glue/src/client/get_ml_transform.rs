// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMLTransform`](crate::operation::get_ml_transform::builders::GetMLTransformFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`transform_id(impl Into<String>)`](crate::operation::get_ml_transform::builders::GetMLTransformFluentBuilder::transform_id) / [`set_transform_id(Option<String>)`](crate::operation::get_ml_transform::builders::GetMLTransformFluentBuilder::set_transform_id):<br>required: **true**<br><p>The unique identifier of the transform, generated at the time that the transform was created.</p><br>
    /// - On success, responds with [`GetMlTransformOutput`](crate::operation::get_ml_transform::GetMlTransformOutput) with field(s):
    ///   - [`transform_id(Option<String>)`](crate::operation::get_ml_transform::GetMlTransformOutput::transform_id): <p>The unique identifier of the transform, generated at the time that the transform was created.</p>
    ///   - [`name(Option<String>)`](crate::operation::get_ml_transform::GetMlTransformOutput::name): <p>The unique name given to the transform when it was created.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_ml_transform::GetMlTransformOutput::description): <p>A description of the transform.</p>
    ///   - [`status(Option<TransformStatusType>)`](crate::operation::get_ml_transform::GetMlTransformOutput::status): <p>The last known status of the transform (to indicate whether it can be used or not). One of "NOT_READY", "READY", or "DELETING".</p>
    ///   - [`created_on(Option<DateTime>)`](crate::operation::get_ml_transform::GetMlTransformOutput::created_on): <p>The date and time when the transform was created.</p>
    ///   - [`last_modified_on(Option<DateTime>)`](crate::operation::get_ml_transform::GetMlTransformOutput::last_modified_on): <p>The date and time when the transform was last modified.</p>
    ///   - [`input_record_tables(Option<Vec::<GlueTable>>)`](crate::operation::get_ml_transform::GetMlTransformOutput::input_record_tables): <p>A list of Glue table definitions used by the transform.</p>
    ///   - [`parameters(Option<TransformParameters>)`](crate::operation::get_ml_transform::GetMlTransformOutput::parameters): <p>The configuration parameters that are specific to the algorithm used.</p>
    ///   - [`evaluation_metrics(Option<EvaluationMetrics>)`](crate::operation::get_ml_transform::GetMlTransformOutput::evaluation_metrics): <p>The latest evaluation metrics.</p>
    ///   - [`label_count(i32)`](crate::operation::get_ml_transform::GetMlTransformOutput::label_count): <p>The number of labels available for this transform.</p>
    ///   - [`schema(Option<Vec::<SchemaColumn>>)`](crate::operation::get_ml_transform::GetMlTransformOutput::schema): <p>The <code>Map   <column, type></column,></code> object that represents the schema that this transform accepts. Has an upper bound of 100 columns.</p>
    ///   - [`role(Option<String>)`](crate::operation::get_ml_transform::GetMlTransformOutput::role): <p>The name or Amazon Resource Name (ARN) of the IAM role with the required permissions.</p>
    ///   - [`glue_version(Option<String>)`](crate::operation::get_ml_transform::GetMlTransformOutput::glue_version): <p>This value determines which version of Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue Versions</a> in the developer guide.</p>
    ///   - [`max_capacity(Option<f64>)`](crate::operation::get_ml_transform::GetMlTransformOutput::max_capacity): <p>The number of Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>. </p>  <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>
    ///   - [`worker_type(Option<WorkerType>)`](crate::operation::get_ml_transform::GetMlTransformOutput::worker_type): <p>The type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.</p>  <ul>   <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li>   <li> <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p> </li>   <li> <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p> </li>  </ul>
    ///   - [`number_of_workers(Option<i32>)`](crate::operation::get_ml_transform::GetMlTransformOutput::number_of_workers): <p>The number of workers of a defined <code>workerType</code> that are allocated when this task runs.</p>
    ///   - [`timeout(Option<i32>)`](crate::operation::get_ml_transform::GetMlTransformOutput::timeout): <p>The timeout for a task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p>
    ///   - [`max_retries(Option<i32>)`](crate::operation::get_ml_transform::GetMlTransformOutput::max_retries): <p>The maximum number of times to retry a task for this transform after a task run fails.</p>
    ///   - [`transform_encryption(Option<TransformEncryption>)`](crate::operation::get_ml_transform::GetMlTransformOutput::transform_encryption): <p>The encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.</p>
    /// - On failure, responds with [`SdkError<GetMLTransformError>`](crate::operation::get_ml_transform::GetMLTransformError)
    pub fn get_ml_transform(&self) -> crate::operation::get_ml_transform::builders::GetMLTransformFluentBuilder {
        crate::operation::get_ml_transform::builders::GetMLTransformFluentBuilder::new(self.handle.clone())
    }
}
