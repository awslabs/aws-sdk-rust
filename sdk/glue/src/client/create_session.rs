// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSession`](crate::operation::create_session::builders::CreateSessionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_id):<br>required: **true**<br><p>The ID of the session request. </p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_description):<br>required: **false**<br><p>The description of the session. </p><br>
    ///   - [`role(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::role) / [`set_role(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_role):<br>required: **true**<br><p>The IAM Role ARN </p><br>
    ///   - [`command(SessionCommand)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::command) / [`set_command(Option<SessionCommand>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_command):<br>required: **true**<br><p>The <code>SessionCommand</code> that runs the job. </p><br>
    ///   - [`timeout(i32)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::timeout) / [`set_timeout(Option<i32>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_timeout):<br>required: **false**<br><p> The number of minutes before session times out. Default for Spark ETL jobs is 48 hours (2880 minutes), the maximum session lifetime for this job type. Consult the documentation for other job types. </p><br>
    ///   - [`idle_timeout(i32)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::idle_timeout) / [`set_idle_timeout(Option<i32>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_idle_timeout):<br>required: **false**<br><p> The number of minutes when idle before session times out. Default for Spark ETL jobs is value of Timeout. Consult the documentation for other job types. </p><br>
    ///   - [`default_arguments(impl Into<String>, impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::default_arguments) / [`set_default_arguments(Option<HashMap::<String, String>>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_default_arguments):<br>required: **false**<br><p>A map array of key-value pairs. Max is 75 pairs. </p><br>
    ///   - [`connections(ConnectionsList)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::connections) / [`set_connections(Option<ConnectionsList>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_connections):<br>required: **false**<br><p>The number of connections to use for the session. </p><br>
    ///   - [`max_capacity(f64)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::max_capacity) / [`set_max_capacity(Option<f64>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_max_capacity):<br>required: **false**<br><p>The number of Glue data processing units (DPUs) that can be allocated when the job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB memory. </p><br>
    ///   - [`number_of_workers(i32)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::number_of_workers) / [`set_number_of_workers(Option<i32>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_number_of_workers):<br>required: **false**<br><p>The number of workers of a defined <code>WorkerType</code> to use for the session. </p><br>
    ///   - [`worker_type(WorkerType)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::worker_type) / [`set_worker_type(Option<WorkerType>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_worker_type):<br>required: **false**<br><p>The type of predefined worker that is allocated when a job runs. Accepts a value of G.1X, G.2X, G.4X, or G.8X for Spark jobs. Accepts the value Z.2X for Ray notebooks.</p>  <ul>   <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPUs, 16 GB of memory) with 84GB disk (approximately 34GB free), and provides 1 executor per worker. We recommend this worker type for workloads such as data transforms, joins, and queries, to offers a scalable and cost effective way to run most jobs.</p> </li>   <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPUs, 32 GB of memory) with 128GB disk (approximately 77GB free), and provides 1 executor per worker. We recommend this worker type for workloads such as data transforms, joins, and queries, to offers a scalable and cost effective way to run most jobs.</p> </li>   <li> <p>For the <code>G.4X</code> worker type, each worker maps to 4 DPU (16 vCPUs, 64 GB of memory) with 256GB disk (approximately 235GB free), and provides 1 executor per worker. We recommend this worker type for jobs whose workloads contain your most demanding transforms, aggregations, joins, and queries. This worker type is available only for Glue version 3.0 or later Spark ETL jobs in the following Amazon Web Services Regions: US East (Ohio), US East (N. Virginia), US West (Oregon), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), Canada (Central), Europe (Frankfurt), Europe (Ireland), and Europe (Stockholm).</p> </li>   <li> <p>For the <code>G.8X</code> worker type, each worker maps to 8 DPU (32 vCPUs, 128 GB of memory) with 512GB disk (approximately 487GB free), and provides 1 executor per worker. We recommend this worker type for jobs whose workloads contain your most demanding transforms, aggregations, joins, and queries. This worker type is available only for Glue version 3.0 or later Spark ETL jobs, in the same Amazon Web Services Regions as supported for the <code>G.4X</code> worker type.</p> </li>   <li> <p>For the <code>Z.2X</code> worker type, each worker maps to 2 M-DPU (8vCPUs, 64 GB of memory) with 128 GB disk (approximately 120GB free), and provides up to 8 Ray workers based on the autoscaler.</p> </li>  </ul><br>
    ///   - [`security_configuration(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::security_configuration) / [`set_security_configuration(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_security_configuration):<br>required: **false**<br><p>The name of the SecurityConfiguration structure to be used with the session </p><br>
    ///   - [`glue_version(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::glue_version) / [`set_glue_version(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_glue_version):<br>required: **false**<br><p>The Glue version determines the versions of Apache Spark and Python that Glue supports. The GlueVersion must be greater than 2.0. </p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_tags):<br>required: **false**<br><p>The map of key value pairs (tags) belonging to the session.</p><br>
    ///   - [`request_origin(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::request_origin) / [`set_request_origin(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_request_origin):<br>required: **false**<br><p>The origin of the request. </p><br>
    /// - On success, responds with [`CreateSessionOutput`](crate::operation::create_session::CreateSessionOutput) with field(s):
    ///   - [`session(Option<Session>)`](crate::operation::create_session::CreateSessionOutput::session): <p>Returns the session object in the response.</p>
    /// - On failure, responds with [`SdkError<CreateSessionError>`](crate::operation::create_session::CreateSessionError)
    pub fn create_session(&self) -> crate::operation::create_session::builders::CreateSessionFluentBuilder {
        crate::operation::create_session::builders::CreateSessionFluentBuilder::new(self.handle.clone())
    }
}
