// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSession`](crate::operation::create_session::builders::CreateSessionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_id): <p>The ID of the session request. </p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_description): <p>The description of the session. </p>
    ///   - [`role(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::role) / [`set_role(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_role): <p>The IAM Role ARN </p>
    ///   - [`command(SessionCommand)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::command) / [`set_command(Option<SessionCommand>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_command): <p>The <code>SessionCommand</code> that runs the job. </p>
    ///   - [`timeout(i32)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::timeout) / [`set_timeout(Option<i32>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_timeout): <p>The number of seconds before request times out. </p>
    ///   - [`idle_timeout(i32)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::idle_timeout) / [`set_idle_timeout(Option<i32>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_idle_timeout): <p>The number of seconds when idle before request times out. </p>
    ///   - [`default_arguments(HashMap<String, String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::default_arguments) / [`set_default_arguments(Option<HashMap<String, String>>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_default_arguments): <p>A map array of key-value pairs. Max is 75 pairs. </p>
    ///   - [`connections(ConnectionsList)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::connections) / [`set_connections(Option<ConnectionsList>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_connections): <p>The number of connections to use for the session. </p>
    ///   - [`max_capacity(f64)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::max_capacity) / [`set_max_capacity(Option<f64>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_max_capacity): <p>The number of Glue data processing units (DPUs) that can be allocated when the job runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB memory. </p>
    ///   - [`number_of_workers(i32)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::number_of_workers) / [`set_number_of_workers(Option<i32>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_number_of_workers): <p>The number of workers of a defined <code>WorkerType</code> to use for the session. </p>
    ///   - [`worker_type(WorkerType)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::worker_type) / [`set_worker_type(Option<WorkerType>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_worker_type): <p>The type of predefined worker that is allocated to use for the session. Accepts a value of Standard, G.1X, G.2X, or G.025X.</p>  <ul>   <li> <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p> </li>   <li> <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li>   <li> <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p> </li>   <li> <p>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for low volume streaming jobs. This worker type is only available for Glue version 3.0 streaming jobs.</p> </li>  </ul>
    ///   - [`security_configuration(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::security_configuration) / [`set_security_configuration(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_security_configuration): <p>The name of the SecurityConfiguration structure to be used with the session </p>
    ///   - [`glue_version(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::glue_version) / [`set_glue_version(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_glue_version): <p>The Glue version determines the versions of Apache Spark and Python that Glue supports. The GlueVersion must be greater than 2.0. </p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_tags): <p>The map of key value pairs (tags) belonging to the session.</p>
    ///   - [`request_origin(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::request_origin) / [`set_request_origin(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_request_origin): <p>The origin of the request. </p>
    /// - On success, responds with [`CreateSessionOutput`](crate::operation::create_session::CreateSessionOutput) with field(s):
    ///   - [`session(Option<Session>)`](crate::operation::create_session::CreateSessionOutput::session): <p>Returns the session object in the response.</p>
    /// - On failure, responds with [`SdkError<CreateSessionError>`](crate::operation::create_session::CreateSessionError)
    pub fn create_session(
        &self,
    ) -> crate::operation::create_session::builders::CreateSessionFluentBuilder {
        crate::operation::create_session::builders::CreateSessionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
