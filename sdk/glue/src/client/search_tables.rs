// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchTables`](crate::operation::search_tables::builders::SearchTablesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::set_catalog_id):<br>required: **false**<br><p>A unique identifier, consisting of <code> <i>account_id</i> </code>.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::set_next_token):<br>required: **false**<br><p>A continuation token, included if this is a continuation call.</p><br>
    ///   - [`filters(PropertyPredicate)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::filters) / [`set_filters(Option<Vec::<PropertyPredicate>>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::set_filters):<br>required: **false**<br><p>A list of key-value pairs, and a comparator used to filter the search results. Returns all entities matching the predicate.</p>  <p>The <code>Comparator</code> member of the <code>PropertyPredicate</code> struct is used only for time fields, and can be omitted for other field types. Also, when comparing string values, such as when <code>Key=Name</code>, a fuzzy match algorithm is used. The <code>Key</code> field (for example, the value of the <code>Name</code> field) is split on certain punctuation characters, for example, -, :, #, etc. into tokens. Then each token is exact-match compared with the <code>Value</code> member of <code>PropertyPredicate</code>. For example, if <code>Key=Name</code> and <code>Value=link</code>, tables named <code>customer-link</code> and <code>xx-link-yy</code> are returned, but <code>xxlinkyy</code> is not returned.</p><br>
    ///   - [`search_text(impl Into<String>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::search_text) / [`set_search_text(Option<String>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::set_search_text):<br>required: **false**<br><p>A string used for a text search.</p>  <p>Specifying a value in quotes filters based on an exact match to the value.</p><br>
    ///   - [`sort_criteria(SortCriterion)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::sort_criteria) / [`set_sort_criteria(Option<Vec::<SortCriterion>>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::set_sort_criteria):<br>required: **false**<br><p>A list of criteria for sorting the results by a field name, in an ascending or descending order.</p><br>
    ///   - [`max_results(i32)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of tables to return in a single response.</p><br>
    ///   - [`resource_share_type(ResourceShareType)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::resource_share_type) / [`set_resource_share_type(Option<ResourceShareType>)`](crate::operation::search_tables::builders::SearchTablesFluentBuilder::set_resource_share_type):<br>required: **false**<br><p>Allows you to specify that you want to search the tables shared with your account. The allowable values are <code>FOREIGN</code> or <code>ALL</code>. </p>  <ul>   <li> <p>If set to <code>FOREIGN</code>, will search the tables shared with your account. </p> </li>   <li> <p>If set to <code>ALL</code>, will search the tables shared with your account, as well as the tables in yor local account. </p> </li>  </ul><br>
    /// - On success, responds with [`SearchTablesOutput`](crate::operation::search_tables::SearchTablesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::search_tables::SearchTablesOutput::next_token): <p>A continuation token, present if the current list segment is not the last.</p>
    ///   - [`table_list(Option<Vec::<Table>>)`](crate::operation::search_tables::SearchTablesOutput::table_list): <p>A list of the requested <code>Table</code> objects. The <code>SearchTables</code> response returns only the tables that you have access to.</p>
    /// - On failure, responds with [`SdkError<SearchTablesError>`](crate::operation::search_tables::SearchTablesError)
    pub fn search_tables(&self) -> crate::operation::search_tables::builders::SearchTablesFluentBuilder {
        crate::operation::search_tables::builders::SearchTablesFluentBuilder::new(self.handle.clone())
    }
}
