// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartDataQualityRulesetEvaluationRun`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`data_source(DataSource)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::data_source) / [`set_data_source(Option<DataSource>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::set_data_source):<br>required: **true**<br><p>The data source (Glue table) associated with this run.</p><br>
    ///   - [`role(impl Into<String>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::role) / [`set_role(Option<String>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::set_role):<br>required: **true**<br><p>An IAM role supplied to encrypt the results of the run.</p><br>
    ///   - [`number_of_workers(i32)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::number_of_workers) / [`set_number_of_workers(Option<i32>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::set_number_of_workers):<br>required: **false**<br><p>The number of <code>G.1X</code> workers to be used in the run. The default is 5.</p><br>
    ///   - [`timeout(i32)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::timeout) / [`set_timeout(Option<i32>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::set_timeout):<br>required: **false**<br><p>The timeout for a run in minutes. This is the maximum time that a run can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::set_client_token):<br>required: **false**<br><p>Used for idempotency and is recommended to be set to a random ID (such as a UUID) to avoid creating or starting multiple instances of the same resource.</p><br>
    ///   - [`additional_run_options(DataQualityEvaluationRunAdditionalRunOptions)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::additional_run_options) / [`set_additional_run_options(Option<DataQualityEvaluationRunAdditionalRunOptions>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::set_additional_run_options):<br>required: **false**<br><p>Additional run options you can specify for an evaluation run.</p><br>
    ///   - [`ruleset_names(impl Into<String>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::ruleset_names) / [`set_ruleset_names(Option<Vec::<String>>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::set_ruleset_names):<br>required: **true**<br><p>A list of ruleset names.</p><br>
    ///   - [`additional_data_sources(impl Into<String>, DataSource)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::additional_data_sources) / [`set_additional_data_sources(Option<HashMap::<String, DataSource>>)`](crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::set_additional_data_sources):<br>required: **false**<br><p>A map of reference strings to additional data sources you can specify for an evaluation run.</p><br>
    /// - On success, responds with [`StartDataQualityRulesetEvaluationRunOutput`](crate::operation::start_data_quality_ruleset_evaluation_run::StartDataQualityRulesetEvaluationRunOutput) with field(s):
    ///   - [`run_id(Option<String>)`](crate::operation::start_data_quality_ruleset_evaluation_run::StartDataQualityRulesetEvaluationRunOutput::run_id): <p>The unique run identifier associated with this run.</p>
    /// - On failure, responds with [`SdkError<StartDataQualityRulesetEvaluationRunError>`](crate::operation::start_data_quality_ruleset_evaluation_run::StartDataQualityRulesetEvaluationRunError)
    pub fn start_data_quality_ruleset_evaluation_run(
        &self,
    ) -> crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder {
        crate::operation::start_data_quality_ruleset_evaluation_run::builders::StartDataQualityRulesetEvaluationRunFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
