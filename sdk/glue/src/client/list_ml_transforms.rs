// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListMLTransforms`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::set_next_token):<br>required: **false**<br><p>A continuation token, if this is a continuation request.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum size of a list to return.</p><br>
    ///   - [`filter(TransformFilterCriteria)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::filter) / [`set_filter(Option<TransformFilterCriteria>)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::set_filter):<br>required: **false**<br><p>A <code>TransformFilterCriteria</code> used to filter the machine learning transforms.</p><br>
    ///   - [`sort(TransformSortCriteria)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::sort) / [`set_sort(Option<TransformSortCriteria>)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::set_sort):<br>required: **false**<br><p>A <code>TransformSortCriteria</code> used to sort the machine learning transforms.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::set_tags):<br>required: **false**<br><p>Specifies to return only these tagged resources.</p><br>
    /// - On success, responds with [`ListMlTransformsOutput`](crate::operation::list_ml_transforms::ListMlTransformsOutput) with field(s):
    ///   - [`transform_ids(Vec::<String>)`](crate::operation::list_ml_transforms::ListMlTransformsOutput::transform_ids): <p>The identifiers of all the machine learning transforms in the account, or the machine learning transforms with the specified tags.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_ml_transforms::ListMlTransformsOutput::next_token): <p>A continuation token, if the returned list does not contain the last metric available.</p>
    /// - On failure, responds with [`SdkError<ListMLTransformsError>`](crate::operation::list_ml_transforms::ListMLTransformsError)
    pub fn list_ml_transforms(&self) -> crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder {
        crate::operation::list_ml_transforms::builders::ListMLTransformsFluentBuilder::new(self.handle.clone())
    }
}
