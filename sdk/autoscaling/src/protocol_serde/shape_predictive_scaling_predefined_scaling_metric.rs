// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_predictive_scaling_predefined_scaling_metric(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::PredictiveScalingPredefinedScalingMetric,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("PredefinedMetricType");
    if let Some(var_2) = &input.predefined_metric_type {
        scope_1.string(var_2.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("ResourceLabel");
    if let Some(var_4) = &input.resource_label {
        scope_3.string(var_4);
    }
    Ok(())
}

#[allow(clippy::needless_question_mark)]
pub fn de_predictive_scaling_predefined_scaling_metric(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::PredictiveScalingPredefinedScalingMetric, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::PredictiveScalingPredefinedScalingMetric::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("PredefinedMetricType") /* PredefinedMetricType com.amazonaws.autoscaling#PredictiveScalingPredefinedScalingMetric$PredefinedMetricType */ =>  {
                let var_5 =
                    Some(
                        Result::<crate::types::PredefinedScalingMetricType, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::PredefinedScalingMetricType::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_predefined_metric_type(var_5);
            }
            ,
            s if s.matches("ResourceLabel") /* ResourceLabel com.amazonaws.autoscaling#PredictiveScalingPredefinedScalingMetric$ResourceLabel */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_resource_label(var_6);
            }
            ,
            _ => {}
        }
    }
    Ok(crate::serde_util::predictive_scaling_predefined_scaling_metric_correct_errors(builder).build())
}
