// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_predictive_scaling_metric_specification(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::PredictiveScalingMetricSpecification,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("TargetValue");
    if let Some(var_2) = &input.target_value {
        scope_1.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::Float((*var_2).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("PredefinedMetricPairSpecification");
    if let Some(var_4) = &input.predefined_metric_pair_specification {
        crate::protocol_serde::shape_predictive_scaling_predefined_metric_pair::ser_predictive_scaling_predefined_metric_pair(scope_3, var_4)?;
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("PredefinedScalingMetricSpecification");
    if let Some(var_6) = &input.predefined_scaling_metric_specification {
        crate::protocol_serde::shape_predictive_scaling_predefined_scaling_metric::ser_predictive_scaling_predefined_scaling_metric(scope_5, var_6)?;
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("PredefinedLoadMetricSpecification");
    if let Some(var_8) = &input.predefined_load_metric_specification {
        crate::protocol_serde::shape_predictive_scaling_predefined_load_metric::ser_predictive_scaling_predefined_load_metric(scope_7, var_8)?;
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("CustomizedScalingMetricSpecification");
    if let Some(var_10) = &input.customized_scaling_metric_specification {
        crate::protocol_serde::shape_predictive_scaling_customized_scaling_metric::ser_predictive_scaling_customized_scaling_metric(scope_9, var_10)?;
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("CustomizedLoadMetricSpecification");
    if let Some(var_12) = &input.customized_load_metric_specification {
        crate::protocol_serde::shape_predictive_scaling_customized_load_metric::ser_predictive_scaling_customized_load_metric(scope_11, var_12)?;
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("CustomizedCapacityMetricSpecification");
    if let Some(var_14) = &input.customized_capacity_metric_specification {
        crate::protocol_serde::shape_predictive_scaling_customized_capacity_metric::ser_predictive_scaling_customized_capacity_metric(
            scope_13, var_14,
        )?;
    }
    Ok(())
}

#[allow(clippy::needless_question_mark)]
pub fn de_predictive_scaling_metric_specification(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::PredictiveScalingMetricSpecification, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::PredictiveScalingMetricSpecification::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("TargetValue") /* TargetValue com.amazonaws.autoscaling#PredictiveScalingMetricSpecification$TargetValue */ =>  {
                let var_15 =
                    Some(
                         {
                            <f64 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (double: `com.amazonaws.autoscaling#MetricScale`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_target_value(var_15);
            }
            ,
            s if s.matches("PredefinedMetricPairSpecification") /* PredefinedMetricPairSpecification com.amazonaws.autoscaling#PredictiveScalingMetricSpecification$PredefinedMetricPairSpecification */ =>  {
                let var_16 =
                    Some(
                        crate::protocol_serde::shape_predictive_scaling_predefined_metric_pair::de_predictive_scaling_predefined_metric_pair(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_predefined_metric_pair_specification(var_16);
            }
            ,
            s if s.matches("PredefinedScalingMetricSpecification") /* PredefinedScalingMetricSpecification com.amazonaws.autoscaling#PredictiveScalingMetricSpecification$PredefinedScalingMetricSpecification */ =>  {
                let var_17 =
                    Some(
                        crate::protocol_serde::shape_predictive_scaling_predefined_scaling_metric::de_predictive_scaling_predefined_scaling_metric(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_predefined_scaling_metric_specification(var_17);
            }
            ,
            s if s.matches("PredefinedLoadMetricSpecification") /* PredefinedLoadMetricSpecification com.amazonaws.autoscaling#PredictiveScalingMetricSpecification$PredefinedLoadMetricSpecification */ =>  {
                let var_18 =
                    Some(
                        crate::protocol_serde::shape_predictive_scaling_predefined_load_metric::de_predictive_scaling_predefined_load_metric(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_predefined_load_metric_specification(var_18);
            }
            ,
            s if s.matches("CustomizedScalingMetricSpecification") /* CustomizedScalingMetricSpecification com.amazonaws.autoscaling#PredictiveScalingMetricSpecification$CustomizedScalingMetricSpecification */ =>  {
                let var_19 =
                    Some(
                        crate::protocol_serde::shape_predictive_scaling_customized_scaling_metric::de_predictive_scaling_customized_scaling_metric(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_customized_scaling_metric_specification(var_19);
            }
            ,
            s if s.matches("CustomizedLoadMetricSpecification") /* CustomizedLoadMetricSpecification com.amazonaws.autoscaling#PredictiveScalingMetricSpecification$CustomizedLoadMetricSpecification */ =>  {
                let var_20 =
                    Some(
                        crate::protocol_serde::shape_predictive_scaling_customized_load_metric::de_predictive_scaling_customized_load_metric(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_customized_load_metric_specification(var_20);
            }
            ,
            s if s.matches("CustomizedCapacityMetricSpecification") /* CustomizedCapacityMetricSpecification com.amazonaws.autoscaling#PredictiveScalingMetricSpecification$CustomizedCapacityMetricSpecification */ =>  {
                let var_21 =
                    Some(
                        crate::protocol_serde::shape_predictive_scaling_customized_capacity_metric::de_predictive_scaling_customized_capacity_metric(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_customized_capacity_metric_specification(var_21);
            }
            ,
            _ => {}
        }
    }
    Ok(crate::serde_util::predictive_scaling_metric_specification_correct_errors(builder).build())
}
