// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_mixed_instances_policy(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::MixedInstancesPolicy,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("LaunchTemplate");
    if let Some(var_2) = &input.launch_template {
        crate::protocol_serde::shape_launch_template::ser_launch_template(scope_1, var_2)?;
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("InstancesDistribution");
    if let Some(var_4) = &input.instances_distribution {
        crate::protocol_serde::shape_instances_distribution::ser_instances_distribution(
            scope_3, var_4,
        )?;
    }
    Ok(())
}

pub fn de_mixed_instances_policy(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::MixedInstancesPolicy, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::MixedInstancesPolicy::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("LaunchTemplate") /* LaunchTemplate com.amazonaws.autoscaling#MixedInstancesPolicy$LaunchTemplate */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_launch_template::de_launch_template(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_launch_template(var_5);
            }
            ,
            s if s.matches("InstancesDistribution") /* InstancesDistribution com.amazonaws.autoscaling#MixedInstancesPolicy$InstancesDistribution */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_instances_distribution::de_instances_distribution(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_instances_distribution(var_6);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
