// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_launch_template(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::LaunchTemplate,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("LaunchTemplateSpecification");
    if let Some(var_2) = &input.launch_template_specification {
        crate::protocol_serde::shape_launch_template_specification::ser_launch_template_specification(scope_1, var_2)?;
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Overrides");
    if let Some(var_4) = &input.overrides {
        let mut list_6 = scope_3.start_list(false, None);
        for item_5 in var_4 {
            #[allow(unused_mut)]
            let mut entry_7 = list_6.entry();
            crate::protocol_serde::shape_launch_template_overrides::ser_launch_template_overrides(entry_7, item_5)?;
        }
        list_6.finish();
    }
    Ok(())
}

#[allow(clippy::needless_question_mark)]
pub fn de_launch_template(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::LaunchTemplate, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::LaunchTemplate::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("LaunchTemplateSpecification") /* LaunchTemplateSpecification com.amazonaws.autoscaling#LaunchTemplate$LaunchTemplateSpecification */ =>  {
                let var_8 =
                    Some(
                        crate::protocol_serde::shape_launch_template_specification::de_launch_template_specification(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_launch_template_specification(var_8);
            }
            ,
            s if s.matches("Overrides") /* Overrides com.amazonaws.autoscaling#LaunchTemplate$Overrides */ =>  {
                let var_9 =
                    Some(
                        crate::protocol_serde::shape_overrides::de_overrides(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_overrides(var_9);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
