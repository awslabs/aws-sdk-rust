// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_predictive_scaling_customized_scaling_metric(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::PredictiveScalingCustomizedScalingMetric,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("MetricDataQueries");
    if let Some(var_2) = &input.metric_data_queries {
        let mut list_4 = scope_1.start_list(false, None);
        for item_3 in var_2 {
            #[allow(unused_mut)]
            let mut entry_5 = list_4.entry();
            crate::protocol_serde::shape_metric_data_query::ser_metric_data_query(entry_5, item_3)?;
        }
        list_4.finish();
    }
    Ok(())
}

pub fn de_predictive_scaling_customized_scaling_metric(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<
    crate::types::PredictiveScalingCustomizedScalingMetric,
    aws_smithy_xml::decode::XmlDecodeError,
> {
    #[allow(unused_mut)]
    let mut builder = crate::types::PredictiveScalingCustomizedScalingMetric::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("MetricDataQueries") /* MetricDataQueries com.amazonaws.autoscaling#PredictiveScalingCustomizedScalingMetric$MetricDataQueries */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_metric_data_queries::de_metric_data_queries(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_metric_data_queries(var_6);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
