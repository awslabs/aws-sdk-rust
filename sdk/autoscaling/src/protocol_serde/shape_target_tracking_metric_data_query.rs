// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_target_tracking_metric_data_query(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::TargetTrackingMetricDataQuery,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Id");
    if let Some(var_2) = &input.id {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Expression");
    if let Some(var_4) = &input.expression {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("MetricStat");
    if let Some(var_6) = &input.metric_stat {
        crate::protocol_serde::shape_target_tracking_metric_stat::ser_target_tracking_metric_stat(
            scope_5, var_6,
        )?;
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("Label");
    if let Some(var_8) = &input.label {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("ReturnData");
    if let Some(var_10) = &input.return_data {
        scope_9.boolean(*var_10);
    }
    Ok(())
}

pub fn de_target_tracking_metric_data_query(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::TargetTrackingMetricDataQuery, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::TargetTrackingMetricDataQuery::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Id") /* Id com.amazonaws.autoscaling#TargetTrackingMetricDataQuery$Id */ =>  {
                let var_11 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_id(var_11);
            }
            ,
            s if s.matches("Expression") /* Expression com.amazonaws.autoscaling#TargetTrackingMetricDataQuery$Expression */ =>  {
                let var_12 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_expression(var_12);
            }
            ,
            s if s.matches("MetricStat") /* MetricStat com.amazonaws.autoscaling#TargetTrackingMetricDataQuery$MetricStat */ =>  {
                let var_13 =
                    Some(
                        crate::protocol_serde::shape_target_tracking_metric_stat::de_target_tracking_metric_stat(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_metric_stat(var_13);
            }
            ,
            s if s.matches("Label") /* Label com.amazonaws.autoscaling#TargetTrackingMetricDataQuery$Label */ =>  {
                let var_14 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_label(var_14);
            }
            ,
            s if s.matches("ReturnData") /* ReturnData com.amazonaws.autoscaling#TargetTrackingMetricDataQuery$ReturnData */ =>  {
                let var_15 =
                    Some(
                         {
                            <bool as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.autoscaling#ReturnData`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_return_data(var_15);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
