// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_rollback_details(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::RollbackDetails, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::RollbackDetails::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("RollbackReason") /* RollbackReason com.amazonaws.autoscaling#RollbackDetails$RollbackReason */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_rollback_reason(var_1);
            }
            ,
            s if s.matches("RollbackStartTime") /* RollbackStartTime com.amazonaws.autoscaling#RollbackDetails$RollbackStartTime */ =>  {
                let var_2 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.autoscaling#TimestampType`)"))
                        ?
                    )
                ;
                builder = builder.set_rollback_start_time(var_2);
            }
            ,
            s if s.matches("PercentageCompleteOnRollback") /* PercentageCompleteOnRollback com.amazonaws.autoscaling#RollbackDetails$PercentageCompleteOnRollback */ =>  {
                let var_3 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.autoscaling#IntPercent`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_percentage_complete_on_rollback(var_3);
            }
            ,
            s if s.matches("InstancesToUpdateOnRollback") /* InstancesToUpdateOnRollback com.amazonaws.autoscaling#RollbackDetails$InstancesToUpdateOnRollback */ =>  {
                let var_4 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.autoscaling#InstancesToUpdate`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_instances_to_update_on_rollback(var_4);
            }
            ,
            s if s.matches("ProgressDetailsOnRollback") /* ProgressDetailsOnRollback com.amazonaws.autoscaling#RollbackDetails$ProgressDetailsOnRollback */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_instance_refresh_progress_details::de_instance_refresh_progress_details(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_progress_details_on_rollback(var_5);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
