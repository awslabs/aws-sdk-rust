// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_activity(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::Activity, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::Activity::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ActivityId") /* ActivityId com.amazonaws.autoscaling#Activity$ActivityId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_activity_id(var_1);
            }
            ,
            s if s.matches("AutoScalingGroupName") /* AutoScalingGroupName com.amazonaws.autoscaling#Activity$AutoScalingGroupName */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_auto_scaling_group_name(var_2);
            }
            ,
            s if s.matches("Description") /* Description com.amazonaws.autoscaling#Activity$Description */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_3);
            }
            ,
            s if s.matches("Cause") /* Cause com.amazonaws.autoscaling#Activity$Cause */ =>  {
                let var_4 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_cause(var_4);
            }
            ,
            s if s.matches("StartTime") /* StartTime com.amazonaws.autoscaling#Activity$StartTime */ =>  {
                let var_5 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.autoscaling#TimestampType`)"))
                        ?
                    )
                ;
                builder = builder.set_start_time(var_5);
            }
            ,
            s if s.matches("EndTime") /* EndTime com.amazonaws.autoscaling#Activity$EndTime */ =>  {
                let var_6 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.autoscaling#TimestampType`)"))
                        ?
                    )
                ;
                builder = builder.set_end_time(var_6);
            }
            ,
            s if s.matches("StatusCode") /* StatusCode com.amazonaws.autoscaling#Activity$StatusCode */ =>  {
                let var_7 =
                    Some(
                        Result::<crate::types::ScalingActivityStatusCode, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ScalingActivityStatusCode::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status_code(var_7);
            }
            ,
            s if s.matches("StatusMessage") /* StatusMessage com.amazonaws.autoscaling#Activity$StatusMessage */ =>  {
                let var_8 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_status_message(var_8);
            }
            ,
            s if s.matches("Progress") /* Progress com.amazonaws.autoscaling#Activity$Progress */ =>  {
                let var_9 =
                    Some(
                         {
                            <i32 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.autoscaling#Progress`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_progress(var_9);
            }
            ,
            s if s.matches("Details") /* Details com.amazonaws.autoscaling#Activity$Details */ =>  {
                let var_10 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_details(var_10);
            }
            ,
            s if s.matches("AutoScalingGroupState") /* AutoScalingGroupState com.amazonaws.autoscaling#Activity$AutoScalingGroupState */ =>  {
                let var_11 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_auto_scaling_group_state(var_11);
            }
            ,
            s if s.matches("AutoScalingGroupARN") /* AutoScalingGroupARN com.amazonaws.autoscaling#Activity$AutoScalingGroupARN */ =>  {
                let var_12 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_auto_scaling_group_arn(var_12);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
