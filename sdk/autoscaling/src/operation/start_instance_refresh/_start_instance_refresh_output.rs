// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartInstanceRefreshOutput {
    /// <p>A unique ID for tracking the progress of the request.</p>
    #[doc(hidden)]
    pub instance_refresh_id: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl StartInstanceRefreshOutput {
    /// <p>A unique ID for tracking the progress of the request.</p>
    pub fn instance_refresh_id(&self) -> std::option::Option<&str> {
        self.instance_refresh_id.as_deref()
    }
}
impl aws_http::request_id::RequestId for StartInstanceRefreshOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl StartInstanceRefreshOutput {
    /// Creates a new builder-style object to manufacture [`StartInstanceRefreshOutput`](crate::operation::start_instance_refresh::StartInstanceRefreshOutput).
    pub fn builder(
    ) -> crate::operation::start_instance_refresh::builders::StartInstanceRefreshOutputBuilder {
        crate::operation::start_instance_refresh::builders::StartInstanceRefreshOutputBuilder::default()
    }
}

/// A builder for [`StartInstanceRefreshOutput`](crate::operation::start_instance_refresh::StartInstanceRefreshOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartInstanceRefreshOutputBuilder {
    pub(crate) instance_refresh_id: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl StartInstanceRefreshOutputBuilder {
    /// <p>A unique ID for tracking the progress of the request.</p>
    pub fn instance_refresh_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_refresh_id = Some(input.into());
        self
    }
    /// <p>A unique ID for tracking the progress of the request.</p>
    pub fn set_instance_refresh_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.instance_refresh_id = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`StartInstanceRefreshOutput`](crate::operation::start_instance_refresh::StartInstanceRefreshOutput).
    pub fn build(self) -> crate::operation::start_instance_refresh::StartInstanceRefreshOutput {
        crate::operation::start_instance_refresh::StartInstanceRefreshOutput {
            instance_refresh_id: self.instance_refresh_id,
            _request_id: self._request_id,
        }
    }
}
