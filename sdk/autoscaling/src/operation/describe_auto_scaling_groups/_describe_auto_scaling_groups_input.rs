// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeAutoScalingGroupsInput {
    /// <p>The names of the Auto Scaling groups. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> property.</p>
    /// <p>If you omit this property, all Auto Scaling groups are described.</p>
    #[doc(hidden)]
    pub auto_scaling_group_names: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.</p>
    #[doc(hidden)]
    pub max_records: std::option::Option<i32>,
    /// <p>One or more filters to limit the results based on specific tags. </p>
    #[doc(hidden)]
    pub filters: std::option::Option<std::vec::Vec<crate::types::Filter>>,
}
impl DescribeAutoScalingGroupsInput {
    /// <p>The names of the Auto Scaling groups. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> property.</p>
    /// <p>If you omit this property, all Auto Scaling groups are described.</p>
    pub fn auto_scaling_group_names(&self) -> std::option::Option<&[std::string::String]> {
        self.auto_scaling_group_names.as_deref()
    }
    /// <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.</p>
    pub fn max_records(&self) -> std::option::Option<i32> {
        self.max_records
    }
    /// <p>One or more filters to limit the results based on specific tags. </p>
    pub fn filters(&self) -> std::option::Option<&[crate::types::Filter]> {
        self.filters.as_deref()
    }
}
impl DescribeAutoScalingGroupsInput {
    /// Creates a new builder-style object to manufacture [`DescribeAutoScalingGroupsInput`](crate::operation::describe_auto_scaling_groups::DescribeAutoScalingGroupsInput).
    pub fn builder() -> crate::operation::describe_auto_scaling_groups::builders::DescribeAutoScalingGroupsInputBuilder{
        crate::operation::describe_auto_scaling_groups::builders::DescribeAutoScalingGroupsInputBuilder::default()
    }
}

/// A builder for [`DescribeAutoScalingGroupsInput`](crate::operation::describe_auto_scaling_groups::DescribeAutoScalingGroupsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeAutoScalingGroupsInputBuilder {
    pub(crate) auto_scaling_group_names: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_records: std::option::Option<i32>,
    pub(crate) filters: std::option::Option<std::vec::Vec<crate::types::Filter>>,
}
impl DescribeAutoScalingGroupsInputBuilder {
    /// Appends an item to `auto_scaling_group_names`.
    ///
    /// To override the contents of this collection use [`set_auto_scaling_group_names`](Self::set_auto_scaling_group_names).
    ///
    /// <p>The names of the Auto Scaling groups. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> property.</p>
    /// <p>If you omit this property, all Auto Scaling groups are described.</p>
    pub fn auto_scaling_group_names(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.auto_scaling_group_names.unwrap_or_default();
        v.push(input.into());
        self.auto_scaling_group_names = Some(v);
        self
    }
    /// <p>The names of the Auto Scaling groups. By default, you can only specify up to 50 names. You can optionally increase this limit using the <code>MaxRecords</code> property.</p>
    /// <p>If you omit this property, all Auto Scaling groups are described.</p>
    pub fn set_auto_scaling_group_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.auto_scaling_group_names = input;
        self
    }
    /// <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.</p>
    pub fn max_records(mut self, input: i32) -> Self {
        self.max_records = Some(input);
        self
    }
    /// <p>The maximum number of items to return with this call. The default value is <code>50</code> and the maximum value is <code>100</code>.</p>
    pub fn set_max_records(mut self, input: std::option::Option<i32>) -> Self {
        self.max_records = input;
        self
    }
    /// Appends an item to `filters`.
    ///
    /// To override the contents of this collection use [`set_filters`](Self::set_filters).
    ///
    /// <p>One or more filters to limit the results based on specific tags. </p>
    pub fn filters(mut self, input: crate::types::Filter) -> Self {
        let mut v = self.filters.unwrap_or_default();
        v.push(input);
        self.filters = Some(v);
        self
    }
    /// <p>One or more filters to limit the results based on specific tags. </p>
    pub fn set_filters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Filter>>,
    ) -> Self {
        self.filters = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeAutoScalingGroupsInput`](crate::operation::describe_auto_scaling_groups::DescribeAutoScalingGroupsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_auto_scaling_groups::DescribeAutoScalingGroupsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_auto_scaling_groups::DescribeAutoScalingGroupsInput {
                auto_scaling_group_names: self.auto_scaling_group_names,
                next_token: self.next_token,
                max_records: self.max_records,
                filters: self.filters,
            },
        )
    }
}
