// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RecordLifecycleActionHeartbeatInput {
    /// <p>The name of the lifecycle hook.</p>
    pub lifecycle_hook_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the Auto Scaling group.</p>
    pub auto_scaling_group_name: ::std::option::Option<::std::string::String>,
    /// <p>A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.</p>
    pub lifecycle_action_token: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
}
impl RecordLifecycleActionHeartbeatInput {
    /// <p>The name of the lifecycle hook.</p>
    pub fn lifecycle_hook_name(&self) -> ::std::option::Option<&str> {
        self.lifecycle_hook_name.as_deref()
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn auto_scaling_group_name(&self) -> ::std::option::Option<&str> {
        self.auto_scaling_group_name.as_deref()
    }
    /// <p>A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.</p>
    pub fn lifecycle_action_token(&self) -> ::std::option::Option<&str> {
        self.lifecycle_action_token.as_deref()
    }
    /// <p>The ID of the instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
}
impl RecordLifecycleActionHeartbeatInput {
    /// Creates a new builder-style object to manufacture [`RecordLifecycleActionHeartbeatInput`](crate::operation::record_lifecycle_action_heartbeat::RecordLifecycleActionHeartbeatInput).
    pub fn builder() -> crate::operation::record_lifecycle_action_heartbeat::builders::RecordLifecycleActionHeartbeatInputBuilder {
        crate::operation::record_lifecycle_action_heartbeat::builders::RecordLifecycleActionHeartbeatInputBuilder::default()
    }
}

/// A builder for [`RecordLifecycleActionHeartbeatInput`](crate::operation::record_lifecycle_action_heartbeat::RecordLifecycleActionHeartbeatInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RecordLifecycleActionHeartbeatInputBuilder {
    pub(crate) lifecycle_hook_name: ::std::option::Option<::std::string::String>,
    pub(crate) auto_scaling_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) lifecycle_action_token: ::std::option::Option<::std::string::String>,
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
}
impl RecordLifecycleActionHeartbeatInputBuilder {
    /// <p>The name of the lifecycle hook.</p>
    /// This field is required.
    pub fn lifecycle_hook_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.lifecycle_hook_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the lifecycle hook.</p>
    pub fn set_lifecycle_hook_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.lifecycle_hook_name = input;
        self
    }
    /// <p>The name of the lifecycle hook.</p>
    pub fn get_lifecycle_hook_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.lifecycle_hook_name
    }
    /// <p>The name of the Auto Scaling group.</p>
    /// This field is required.
    pub fn auto_scaling_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.auto_scaling_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn set_auto_scaling_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.auto_scaling_group_name = input;
        self
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn get_auto_scaling_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.auto_scaling_group_name
    }
    /// <p>A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.</p>
    pub fn lifecycle_action_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.lifecycle_action_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.</p>
    pub fn set_lifecycle_action_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.lifecycle_action_token = input;
        self
    }
    /// <p>A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.</p>
    pub fn get_lifecycle_action_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.lifecycle_action_token
    }
    /// <p>The ID of the instance.</p>
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The ID of the instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// Consumes the builder and constructs a [`RecordLifecycleActionHeartbeatInput`](crate::operation::record_lifecycle_action_heartbeat::RecordLifecycleActionHeartbeatInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::record_lifecycle_action_heartbeat::RecordLifecycleActionHeartbeatInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::record_lifecycle_action_heartbeat::RecordLifecycleActionHeartbeatInput {
            lifecycle_hook_name: self.lifecycle_hook_name,
            auto_scaling_group_name: self.auto_scaling_group_name,
            lifecycle_action_token: self.lifecycle_action_token,
            instance_id: self.instance_id,
        })
    }
}
