// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeScalingProcessTypesOutput {
    /// <p>The names of the process types.</p>
    #[doc(hidden)]
    pub processes: std::option::Option<std::vec::Vec<crate::types::ProcessType>>,
    _request_id: Option<String>,
}
impl DescribeScalingProcessTypesOutput {
    /// <p>The names of the process types.</p>
    pub fn processes(&self) -> std::option::Option<&[crate::types::ProcessType]> {
        self.processes.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeScalingProcessTypesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeScalingProcessTypesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeScalingProcessTypesOutput`](crate::operation::describe_scaling_process_types::DescribeScalingProcessTypesOutput).
    pub fn builder() -> crate::operation::describe_scaling_process_types::builders::DescribeScalingProcessTypesOutputBuilder{
        crate::operation::describe_scaling_process_types::builders::DescribeScalingProcessTypesOutputBuilder::default()
    }
}

/// A builder for [`DescribeScalingProcessTypesOutput`](crate::operation::describe_scaling_process_types::DescribeScalingProcessTypesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeScalingProcessTypesOutputBuilder {
    pub(crate) processes: std::option::Option<std::vec::Vec<crate::types::ProcessType>>,
    _request_id: Option<String>,
}
impl DescribeScalingProcessTypesOutputBuilder {
    /// Appends an item to `processes`.
    ///
    /// To override the contents of this collection use [`set_processes`](Self::set_processes).
    ///
    /// <p>The names of the process types.</p>
    pub fn processes(mut self, input: crate::types::ProcessType) -> Self {
        let mut v = self.processes.unwrap_or_default();
        v.push(input);
        self.processes = Some(v);
        self
    }
    /// <p>The names of the process types.</p>
    pub fn set_processes(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ProcessType>>,
    ) -> Self {
        self.processes = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeScalingProcessTypesOutput`](crate::operation::describe_scaling_process_types::DescribeScalingProcessTypesOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_scaling_process_types::DescribeScalingProcessTypesOutput {
        crate::operation::describe_scaling_process_types::DescribeScalingProcessTypesOutput {
            processes: self.processes,
            _request_id: self._request_id,
        }
    }
}
