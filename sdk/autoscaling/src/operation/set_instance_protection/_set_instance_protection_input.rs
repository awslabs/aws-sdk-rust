// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SetInstanceProtectionInput {
    /// <p>One or more instance IDs. You can specify up to 50 instances.</p>
    pub instance_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The name of the Auto Scaling group.</p>
    pub auto_scaling_group_name: ::std::option::Option<::std::string::String>,
    /// <p>Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.</p>
    pub protected_from_scale_in: ::std::option::Option<bool>,
}
impl SetInstanceProtectionInput {
    /// <p>One or more instance IDs. You can specify up to 50 instances.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.instance_ids.is_none()`.
    pub fn instance_ids(&self) -> &[::std::string::String] {
        self.instance_ids.as_deref().unwrap_or_default()
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn auto_scaling_group_name(&self) -> ::std::option::Option<&str> {
        self.auto_scaling_group_name.as_deref()
    }
    /// <p>Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.</p>
    pub fn protected_from_scale_in(&self) -> ::std::option::Option<bool> {
        self.protected_from_scale_in
    }
}
impl SetInstanceProtectionInput {
    /// Creates a new builder-style object to manufacture [`SetInstanceProtectionInput`](crate::operation::set_instance_protection::SetInstanceProtectionInput).
    pub fn builder() -> crate::operation::set_instance_protection::builders::SetInstanceProtectionInputBuilder {
        crate::operation::set_instance_protection::builders::SetInstanceProtectionInputBuilder::default()
    }
}

/// A builder for [`SetInstanceProtectionInput`](crate::operation::set_instance_protection::SetInstanceProtectionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SetInstanceProtectionInputBuilder {
    pub(crate) instance_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) auto_scaling_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) protected_from_scale_in: ::std::option::Option<bool>,
}
impl SetInstanceProtectionInputBuilder {
    /// Appends an item to `instance_ids`.
    ///
    /// To override the contents of this collection use [`set_instance_ids`](Self::set_instance_ids).
    ///
    /// <p>One or more instance IDs. You can specify up to 50 instances.</p>
    pub fn instance_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.instance_ids.unwrap_or_default();
        v.push(input.into());
        self.instance_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>One or more instance IDs. You can specify up to 50 instances.</p>
    pub fn set_instance_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.instance_ids = input;
        self
    }
    /// <p>One or more instance IDs. You can specify up to 50 instances.</p>
    pub fn get_instance_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.instance_ids
    }
    /// <p>The name of the Auto Scaling group.</p>
    /// This field is required.
    pub fn auto_scaling_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.auto_scaling_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn set_auto_scaling_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.auto_scaling_group_name = input;
        self
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn get_auto_scaling_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.auto_scaling_group_name
    }
    /// <p>Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.</p>
    /// This field is required.
    pub fn protected_from_scale_in(mut self, input: bool) -> Self {
        self.protected_from_scale_in = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.</p>
    pub fn set_protected_from_scale_in(mut self, input: ::std::option::Option<bool>) -> Self {
        self.protected_from_scale_in = input;
        self
    }
    /// <p>Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling when scaling in.</p>
    pub fn get_protected_from_scale_in(&self) -> &::std::option::Option<bool> {
        &self.protected_from_scale_in
    }
    /// Consumes the builder and constructs a [`SetInstanceProtectionInput`](crate::operation::set_instance_protection::SetInstanceProtectionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::set_instance_protection::SetInstanceProtectionInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::set_instance_protection::SetInstanceProtectionInput {
            instance_ids: self.instance_ids,
            auto_scaling_group_name: self.auto_scaling_group_name,
            protected_from_scale_in: self.protected_from_scale_in,
        })
    }
}
