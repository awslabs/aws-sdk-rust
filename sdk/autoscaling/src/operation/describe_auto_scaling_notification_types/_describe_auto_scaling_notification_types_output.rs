// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeAutoScalingNotificationTypesOutput {
    /// <p>The notification types.</p>
    #[doc(hidden)]
    pub auto_scaling_notification_types: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl DescribeAutoScalingNotificationTypesOutput {
    /// <p>The notification types.</p>
    pub fn auto_scaling_notification_types(&self) -> std::option::Option<&[std::string::String]> {
        self.auto_scaling_notification_types.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeAutoScalingNotificationTypesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeAutoScalingNotificationTypesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeAutoScalingNotificationTypesOutput`](crate::operation::describe_auto_scaling_notification_types::DescribeAutoScalingNotificationTypesOutput).
    pub fn builder() -> crate::operation::describe_auto_scaling_notification_types::builders::DescribeAutoScalingNotificationTypesOutputBuilder{
        crate::operation::describe_auto_scaling_notification_types::builders::DescribeAutoScalingNotificationTypesOutputBuilder::default()
    }
}

/// A builder for [`DescribeAutoScalingNotificationTypesOutput`](crate::operation::describe_auto_scaling_notification_types::DescribeAutoScalingNotificationTypesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeAutoScalingNotificationTypesOutputBuilder {
    pub(crate) auto_scaling_notification_types:
        std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl DescribeAutoScalingNotificationTypesOutputBuilder {
    /// Appends an item to `auto_scaling_notification_types`.
    ///
    /// To override the contents of this collection use [`set_auto_scaling_notification_types`](Self::set_auto_scaling_notification_types).
    ///
    /// <p>The notification types.</p>
    pub fn auto_scaling_notification_types(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        let mut v = self.auto_scaling_notification_types.unwrap_or_default();
        v.push(input.into());
        self.auto_scaling_notification_types = Some(v);
        self
    }
    /// <p>The notification types.</p>
    pub fn set_auto_scaling_notification_types(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.auto_scaling_notification_types = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeAutoScalingNotificationTypesOutput`](crate::operation::describe_auto_scaling_notification_types::DescribeAutoScalingNotificationTypesOutput).
    pub fn build(self) -> crate::operation::describe_auto_scaling_notification_types::DescribeAutoScalingNotificationTypesOutput{
        crate::operation::describe_auto_scaling_notification_types::DescribeAutoScalingNotificationTypesOutput {
            auto_scaling_notification_types: self.auto_scaling_notification_types
            ,
            _request_id: self._request_id,
        }
    }
}
