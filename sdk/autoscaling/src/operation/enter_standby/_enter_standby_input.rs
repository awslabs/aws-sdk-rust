// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EnterStandbyInput {
    /// <p>The IDs of the instances. You can specify up to 20 instances.</p>
    #[doc(hidden)]
    pub instance_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The name of the Auto Scaling group.</p>
    #[doc(hidden)]
    pub auto_scaling_group_name: std::option::Option<std::string::String>,
    /// <p>Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.</p>
    #[doc(hidden)]
    pub should_decrement_desired_capacity: std::option::Option<bool>,
}
impl EnterStandbyInput {
    /// <p>The IDs of the instances. You can specify up to 20 instances.</p>
    pub fn instance_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.instance_ids.as_deref()
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn auto_scaling_group_name(&self) -> std::option::Option<&str> {
        self.auto_scaling_group_name.as_deref()
    }
    /// <p>Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.</p>
    pub fn should_decrement_desired_capacity(&self) -> std::option::Option<bool> {
        self.should_decrement_desired_capacity
    }
}
impl EnterStandbyInput {
    /// Creates a new builder-style object to manufacture [`EnterStandbyInput`](crate::operation::enter_standby::EnterStandbyInput).
    pub fn builder() -> crate::operation::enter_standby::builders::EnterStandbyInputBuilder {
        crate::operation::enter_standby::builders::EnterStandbyInputBuilder::default()
    }
}

/// A builder for [`EnterStandbyInput`](crate::operation::enter_standby::EnterStandbyInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EnterStandbyInputBuilder {
    pub(crate) instance_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) auto_scaling_group_name: std::option::Option<std::string::String>,
    pub(crate) should_decrement_desired_capacity: std::option::Option<bool>,
}
impl EnterStandbyInputBuilder {
    /// Appends an item to `instance_ids`.
    ///
    /// To override the contents of this collection use [`set_instance_ids`](Self::set_instance_ids).
    ///
    /// <p>The IDs of the instances. You can specify up to 20 instances.</p>
    pub fn instance_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.instance_ids.unwrap_or_default();
        v.push(input.into());
        self.instance_ids = Some(v);
        self
    }
    /// <p>The IDs of the instances. You can specify up to 20 instances.</p>
    pub fn set_instance_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.instance_ids = input;
        self
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn auto_scaling_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.auto_scaling_group_name = Some(input.into());
        self
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn set_auto_scaling_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.auto_scaling_group_name = input;
        self
    }
    /// <p>Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.</p>
    pub fn should_decrement_desired_capacity(mut self, input: bool) -> Self {
        self.should_decrement_desired_capacity = Some(input);
        self
    }
    /// <p>Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.</p>
    pub fn set_should_decrement_desired_capacity(
        mut self,
        input: std::option::Option<bool>,
    ) -> Self {
        self.should_decrement_desired_capacity = input;
        self
    }
    /// Consumes the builder and constructs a [`EnterStandbyInput`](crate::operation::enter_standby::EnterStandbyInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::enter_standby::EnterStandbyInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::enter_standby::EnterStandbyInput {
            instance_ids: self.instance_ids,
            auto_scaling_group_name: self.auto_scaling_group_name,
            should_decrement_desired_capacity: self.should_decrement_desired_capacity,
        })
    }
}
