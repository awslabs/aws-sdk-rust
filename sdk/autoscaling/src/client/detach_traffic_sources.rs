// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DetachTrafficSources`](crate::client::fluent_builders::DetachTrafficSources) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_scaling_group_name(impl Into<String>)`](crate::client::fluent_builders::DetachTrafficSources::auto_scaling_group_name) / [`set_auto_scaling_group_name(Option<String>)`](crate::client::fluent_builders::DetachTrafficSources::set_auto_scaling_group_name): <p>The name of the Auto Scaling group.</p>
    ///   - [`traffic_sources(Vec<TrafficSourceIdentifier>)`](crate::client::fluent_builders::DetachTrafficSources::traffic_sources) / [`set_traffic_sources(Option<Vec<TrafficSourceIdentifier>>)`](crate::client::fluent_builders::DetachTrafficSources::set_traffic_sources): <p>The unique identifiers of one or more traffic sources you are detaching. You can specify up to 10 traffic sources.</p>  <p>Currently, you must specify an Amazon Resource Name (ARN) for an existing VPC Lattice target group. When you detach a target group, it enters the <code>Removing</code> state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the target group using the <code>DescribeTrafficSources</code> API call. The instances continue to run.</p>
    /// - On success, responds with [`DetachTrafficSourcesOutput`](crate::output::DetachTrafficSourcesOutput)
    /// - On failure, responds with [`SdkError<DetachTrafficSourcesError>`](crate::error::DetachTrafficSourcesError)
    pub fn detach_traffic_sources(&self) -> crate::client::fluent_builders::DetachTrafficSources {
        crate::client::fluent_builders::DetachTrafficSources::new(self.handle.clone())
    }
}
