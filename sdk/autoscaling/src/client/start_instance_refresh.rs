// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartInstanceRefresh`](crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_scaling_group_name(impl Into<String>)`](crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder::auto_scaling_group_name) / [`set_auto_scaling_group_name(Option<String>)`](crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder::set_auto_scaling_group_name):<br>required: **true**<br><p>The name of the Auto Scaling group.</p><br>
    ///   - [`strategy(RefreshStrategy)`](crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder::strategy) / [`set_strategy(Option<RefreshStrategy>)`](crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder::set_strategy):<br>required: **false**<br><p>The strategy to use for the instance refresh. The only valid value is <code>Rolling</code>.</p><br>
    ///   - [`desired_configuration(DesiredConfiguration)`](crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder::desired_configuration) / [`set_desired_configuration(Option<DesiredConfiguration>)`](crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder::set_desired_configuration):<br>required: **false**<br><p>The desired configuration. For example, the desired configuration can specify a new launch template or a new version of the current launch template.</p>  <p>Once the instance refresh succeeds, Amazon EC2 Auto Scaling updates the settings of the Auto Scaling group to reflect the new desired configuration. </p> <note>   <p>When you specify a new launch template or a new version of the current launch template for your desired configuration, consider enabling the <code>SkipMatching</code> property in preferences. If it's enabled, Amazon EC2 Auto Scaling skips replacing instances that already use the specified launch template and instance types. This can help you reduce the number of replacements that are required to apply updates. </p>  </note><br>
    ///   - [`preferences(RefreshPreferences)`](crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder::preferences) / [`set_preferences(Option<RefreshPreferences>)`](crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder::set_preferences):<br>required: **false**<br><p>Sets your preferences for the instance refresh so that it performs as expected when you start it. Includes the instance warmup time, the minimum healthy percentage, and the behaviors that you want Amazon EC2 Auto Scaling to use if instances that are in <code>Standby</code> state or protected from scale in are found. You can also choose to enable additional features, such as the following:</p>  <ul>   <li> <p>Auto rollback</p> </li>   <li> <p>Checkpoints</p> </li>   <li> <p>CloudWatch alarms</p> </li>   <li> <p>Skip matching</p> </li>  </ul><br>
    /// - On success, responds with [`StartInstanceRefreshOutput`](crate::operation::start_instance_refresh::StartInstanceRefreshOutput) with field(s):
    ///   - [`instance_refresh_id(Option<String>)`](crate::operation::start_instance_refresh::StartInstanceRefreshOutput::instance_refresh_id): <p>A unique ID for tracking the progress of the instance refresh.</p>
    /// - On failure, responds with [`SdkError<StartInstanceRefreshError>`](crate::operation::start_instance_refresh::StartInstanceRefreshError)
    pub fn start_instance_refresh(&self) -> crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder {
        crate::operation::start_instance_refresh::builders::StartInstanceRefreshFluentBuilder::new(self.handle.clone())
    }
}
