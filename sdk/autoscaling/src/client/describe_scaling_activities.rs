// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeScalingActivities`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`activity_ids(Vec<String>)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::activity_ids) / [`set_activity_ids(Option<Vec<String>>)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::set_activity_ids): <p>The activity IDs of the desired scaling activities. If you omit this property, all activities for the past six weeks are described. If unknown activities are requested, they are ignored with no error. If you specify an Auto Scaling group, the results are limited to that group.</p>  <p>Array Members: Maximum number of 50 IDs.</p>
    ///   - [`auto_scaling_group_name(impl Into<String>)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::auto_scaling_group_name) / [`set_auto_scaling_group_name(Option<String>)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::set_auto_scaling_group_name): <p>The name of the Auto Scaling group.</p>
    ///   - [`include_deleted_groups(bool)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::include_deleted_groups) / [`set_include_deleted_groups(Option<bool>)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::set_include_deleted_groups): <p>Indicates whether to include scaling activity from deleted Auto Scaling groups.</p>
    ///   - [`max_records(i32)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::set_max_records): <p>The maximum number of items to return with this call. The default value is <code>100</code> and the maximum value is <code>100</code>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::set_next_token): <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    /// - On success, responds with [`DescribeScalingActivitiesOutput`](crate::operation::describe_scaling_activities::DescribeScalingActivitiesOutput) with field(s):
    ///   - [`activities(Option<Vec<Activity>>)`](crate::operation::describe_scaling_activities::DescribeScalingActivitiesOutput::activities): <p>The scaling activities. Activities are sorted by start time. Activities still in progress are described first.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_scaling_activities::DescribeScalingActivitiesOutput::next_token): <p>A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.</p>
    /// - On failure, responds with [`SdkError<DescribeScalingActivitiesError>`](crate::operation::describe_scaling_activities::DescribeScalingActivitiesError)
    pub fn describe_scaling_activities(&self) -> crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder{
        crate::operation::describe_scaling_activities::builders::DescribeScalingActivitiesFluentBuilder::new(self.handle.clone())
    }
}
