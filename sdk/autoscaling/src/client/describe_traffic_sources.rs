// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeTrafficSources`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_scaling_group_name(impl Into<String>)`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::auto_scaling_group_name) / [`set_auto_scaling_group_name(Option<String>)`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::set_auto_scaling_group_name):<br>required: **true**<br><p>The name of the Auto Scaling group.</p><br>
    ///   - [`traffic_source_type(impl Into<String>)`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::traffic_source_type) / [`set_traffic_source_type(Option<String>)`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::set_traffic_source_type):<br>required: **false**<br><p>The traffic source type that you want to describe.</p>  <p>The following lists the valid values:</p>  <ul>   <li> <p> <code>elb</code> if the traffic source is a Classic Load Balancer.</p> </li>   <li> <p> <code>elbv2</code> if the traffic source is a Application Load Balancer, Gateway Load Balancer, or Network Load Balancer.</p> </li>   <li> <p> <code>vpc-lattice</code> if the traffic source is VPC Lattice.</p> </li>  </ul><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of items to return. (You received this token from a previous call.)</p><br>
    ///   - [`max_records(i32)`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of items to return with this call. The maximum value is <code>50</code>.</p><br>
    /// - On success, responds with [`DescribeTrafficSourcesOutput`](crate::operation::describe_traffic_sources::DescribeTrafficSourcesOutput) with field(s):
    ///   - [`traffic_sources(Option<Vec::<TrafficSourceState>>)`](crate::operation::describe_traffic_sources::DescribeTrafficSourcesOutput::traffic_sources): <p>Information about the traffic sources.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_traffic_sources::DescribeTrafficSourcesOutput::next_token): <p>This string indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.</p>
    /// - On failure, responds with [`SdkError<DescribeTrafficSourcesError>`](crate::operation::describe_traffic_sources::DescribeTrafficSourcesError)
    pub fn describe_traffic_sources(&self) -> crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder {
        crate::operation::describe_traffic_sources::builders::DescribeTrafficSourcesFluentBuilder::new(self.handle.clone())
    }
}
