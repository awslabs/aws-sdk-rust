// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`EnableMetricsCollection`](crate::client::fluent_builders::EnableMetricsCollection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_scaling_group_name(impl Into<String>)`](crate::client::fluent_builders::EnableMetricsCollection::auto_scaling_group_name) / [`set_auto_scaling_group_name(Option<String>)`](crate::client::fluent_builders::EnableMetricsCollection::set_auto_scaling_group_name): <p>The name of the Auto Scaling group.</p>
    ///   - [`metrics(Vec<String>)`](crate::client::fluent_builders::EnableMetricsCollection::metrics) / [`set_metrics(Option<Vec<String>>)`](crate::client::fluent_builders::EnableMetricsCollection::set_metrics): <p>Identifies the metrics to enable.</p>  <p>You can specify one or more of the following metrics:</p>  <ul>   <li> <p> <code>GroupMinSize</code> </p> </li>   <li> <p> <code>GroupMaxSize</code> </p> </li>   <li> <p> <code>GroupDesiredCapacity</code> </p> </li>   <li> <p> <code>GroupInServiceInstances</code> </p> </li>   <li> <p> <code>GroupPendingInstances</code> </p> </li>   <li> <p> <code>GroupStandbyInstances</code> </p> </li>   <li> <p> <code>GroupTerminatingInstances</code> </p> </li>   <li> <p> <code>GroupTotalInstances</code> </p> </li>   <li> <p> <code>GroupInServiceCapacity</code> </p> </li>   <li> <p> <code>GroupPendingCapacity</code> </p> </li>   <li> <p> <code>GroupStandbyCapacity</code> </p> </li>   <li> <p> <code>GroupTerminatingCapacity</code> </p> </li>   <li> <p> <code>GroupTotalCapacity</code> </p> </li>   <li> <p> <code>WarmPoolDesiredCapacity</code> </p> </li>   <li> <p> <code>WarmPoolWarmedCapacity</code> </p> </li>   <li> <p> <code>WarmPoolPendingCapacity</code> </p> </li>   <li> <p> <code>WarmPoolTerminatingCapacity</code> </p> </li>   <li> <p> <code>WarmPoolTotalCapacity</code> </p> </li>   <li> <p> <code>GroupAndWarmPoolDesiredCapacity</code> </p> </li>   <li> <p> <code>GroupAndWarmPoolTotalCapacity</code> </p> </li>  </ul>  <p>If you specify <code>Granularity</code> and don't specify any metrics, all metrics are enabled.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics">Auto Scaling group metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    ///   - [`granularity(impl Into<String>)`](crate::client::fluent_builders::EnableMetricsCollection::granularity) / [`set_granularity(Option<String>)`](crate::client::fluent_builders::EnableMetricsCollection::set_granularity): <p>The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is <code>1Minute</code>.</p>
    /// - On success, responds with [`EnableMetricsCollectionOutput`](crate::output::EnableMetricsCollectionOutput)
    /// - On failure, responds with [`SdkError<EnableMetricsCollectionError>`](crate::error::EnableMetricsCollectionError)
    pub fn enable_metrics_collection(
        &self,
    ) -> crate::client::fluent_builders::EnableMetricsCollection {
        crate::client::fluent_builders::EnableMetricsCollection::new(self.handle.clone())
    }
}
