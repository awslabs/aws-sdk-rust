// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetInstanceHealth`](crate::client::fluent_builders::SetInstanceHealth) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::client::fluent_builders::SetInstanceHealth::instance_id) / [`set_instance_id(Option<String>)`](crate::client::fluent_builders::SetInstanceHealth::set_instance_id): <p>The ID of the instance.</p>
    ///   - [`health_status(impl Into<String>)`](crate::client::fluent_builders::SetInstanceHealth::health_status) / [`set_health_status(Option<String>)`](crate::client::fluent_builders::SetInstanceHealth::set_health_status): <p>The health status of the instance. Set to <code>Healthy</code> to have the instance remain in service. Set to <code>Unhealthy</code> to have the instance be out of service. Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance.</p>
    ///   - [`should_respect_grace_period(bool)`](crate::client::fluent_builders::SetInstanceHealth::should_respect_grace_period) / [`set_should_respect_grace_period(Option<bool>)`](crate::client::fluent_builders::SetInstanceHealth::set_should_respect_grace_period): <p>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code> specified for the group, by default, this call respects the grace period. Set this to <code>False</code>, to have the call not respect the grace period associated with the group.</p>  <p>For more information about the health check grace period, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CreateAutoScalingGroup.html">CreateAutoScalingGroup</a> in the <i>Amazon EC2 Auto Scaling API Reference</i>.</p>
    /// - On success, responds with [`SetInstanceHealthOutput`](crate::output::SetInstanceHealthOutput)
    /// - On failure, responds with [`SdkError<SetInstanceHealthError>`](crate::error::SetInstanceHealthError)
    pub fn set_instance_health(&self) -> crate::client::fluent_builders::SetInstanceHealth {
        crate::client::fluent_builders::SetInstanceHealth::new(self.handle.clone())
    }
}
