// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribePolicies`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_scaling_group_name(impl Into<String>)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::auto_scaling_group_name) / [`set_auto_scaling_group_name(Option<String>)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::set_auto_scaling_group_name):<br>required: **false**<br><p>The name of the Auto Scaling group.</p><br>
    ///   - [`policy_names(impl Into<String>)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::policy_names) / [`set_policy_names(Option<Vec::<String>>)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::set_policy_names):<br>required: **false**<br><p>The names of one or more policies. If you omit this property, all policies are described. If a group name is provided, the results are limited to that group. If you specify an unknown policy name, it is ignored with no error.</p>  <p>Array Members: Maximum number of 50 items.</p><br>
    ///   - [`policy_types(impl Into<String>)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::policy_types) / [`set_policy_types(Option<Vec::<String>>)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::set_policy_types):<br>required: **false**<br><p>One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>, <code>TargetTrackingScaling</code>, and <code>PredictiveScaling</code>.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of items to return. (You received this token from a previous call.)</p><br>
    ///   - [`max_records(i32)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of items to be returned with each call. The default value is <code>50</code> and the maximum value is <code>100</code>.</p><br>
    /// - On success, responds with [`DescribePoliciesOutput`](crate::operation::describe_policies::DescribePoliciesOutput) with field(s):
    ///   - [`scaling_policies(Option<Vec::<ScalingPolicy>>)`](crate::operation::describe_policies::DescribePoliciesOutput::scaling_policies): <p>The scaling policies.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_policies::DescribePoliciesOutput::next_token): <p>A string that indicates that the response contains more items than can be returned in a single response. To receive additional items, specify this string for the <code>NextToken</code> value when requesting the next set of items. This value is null when there are no more items to return.</p>
    /// - On failure, responds with [`SdkError<DescribePoliciesError>`](crate::operation::describe_policies::DescribePoliciesError)
    pub fn describe_policies(&self) -> crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder {
        crate::operation::describe_policies::builders::DescribePoliciesFluentBuilder::new(self.handle.clone())
    }
}
