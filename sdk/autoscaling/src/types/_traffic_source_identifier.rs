// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the identifier of a traffic source.</p>
/// <p>Currently, you must specify an Amazon Resource Name (ARN) for an existing VPC Lattice target group.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TrafficSourceIdentifier {
    /// <p>The unique identifier of the traffic source.</p>
    #[doc(hidden)]
    pub identifier: std::option::Option<std::string::String>,
}
impl TrafficSourceIdentifier {
    /// <p>The unique identifier of the traffic source.</p>
    pub fn identifier(&self) -> std::option::Option<&str> {
        self.identifier.as_deref()
    }
}
impl TrafficSourceIdentifier {
    /// Creates a new builder-style object to manufacture [`TrafficSourceIdentifier`](crate::types::TrafficSourceIdentifier).
    pub fn builder() -> crate::types::builders::TrafficSourceIdentifierBuilder {
        crate::types::builders::TrafficSourceIdentifierBuilder::default()
    }
}

/// A builder for [`TrafficSourceIdentifier`](crate::types::TrafficSourceIdentifier).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TrafficSourceIdentifierBuilder {
    pub(crate) identifier: std::option::Option<std::string::String>,
}
impl TrafficSourceIdentifierBuilder {
    /// <p>The unique identifier of the traffic source.</p>
    pub fn identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.identifier = Some(input.into());
        self
    }
    /// <p>The unique identifier of the traffic source.</p>
    pub fn set_identifier(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`TrafficSourceIdentifier`](crate::types::TrafficSourceIdentifier).
    pub fn build(self) -> crate::types::TrafficSourceIdentifier {
        crate::types::TrafficSourceIdentifier {
            identifier: self.identifier,
        }
    }
}
