// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a granularity of a metric.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MetricGranularityType {
    /// <p>The granularity. The only valid value is <code>1Minute</code>.</p>
    #[doc(hidden)]
    pub granularity: std::option::Option<std::string::String>,
}
impl MetricGranularityType {
    /// <p>The granularity. The only valid value is <code>1Minute</code>.</p>
    pub fn granularity(&self) -> std::option::Option<&str> {
        self.granularity.as_deref()
    }
}
impl MetricGranularityType {
    /// Creates a new builder-style object to manufacture [`MetricGranularityType`](crate::types::MetricGranularityType).
    pub fn builder() -> crate::types::builders::MetricGranularityTypeBuilder {
        crate::types::builders::MetricGranularityTypeBuilder::default()
    }
}

/// A builder for [`MetricGranularityType`](crate::types::MetricGranularityType).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MetricGranularityTypeBuilder {
    pub(crate) granularity: std::option::Option<std::string::String>,
}
impl MetricGranularityTypeBuilder {
    /// <p>The granularity. The only valid value is <code>1Minute</code>.</p>
    pub fn granularity(mut self, input: impl Into<std::string::String>) -> Self {
        self.granularity = Some(input.into());
        self
    }
    /// <p>The granularity. The only valid value is <code>1Minute</code>.</p>
    pub fn set_granularity(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.granularity = input;
        self
    }
    /// Consumes the builder and constructs a [`MetricGranularityType`](crate::types::MetricGranularityType).
    pub fn build(self) -> crate::types::MetricGranularityType {
        crate::types::MetricGranularityType {
            granularity: self.granularity,
        }
    }
}
