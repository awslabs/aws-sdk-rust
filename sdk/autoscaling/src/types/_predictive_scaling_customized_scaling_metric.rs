// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a custom scaling metric for a predictive scaling policy.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PredictiveScalingCustomizedScalingMetric {
    /// <p>One or more metric data queries to provide the data points for a scaling metric. Use multiple metric data queries only if you are performing a math expression on returned data. </p>
    #[doc(hidden)]
    pub metric_data_queries: std::option::Option<std::vec::Vec<crate::types::MetricDataQuery>>,
}
impl PredictiveScalingCustomizedScalingMetric {
    /// <p>One or more metric data queries to provide the data points for a scaling metric. Use multiple metric data queries only if you are performing a math expression on returned data. </p>
    pub fn metric_data_queries(&self) -> std::option::Option<&[crate::types::MetricDataQuery]> {
        self.metric_data_queries.as_deref()
    }
}
impl PredictiveScalingCustomizedScalingMetric {
    /// Creates a new builder-style object to manufacture [`PredictiveScalingCustomizedScalingMetric`](crate::types::PredictiveScalingCustomizedScalingMetric).
    pub fn builder() -> crate::types::builders::PredictiveScalingCustomizedScalingMetricBuilder {
        crate::types::builders::PredictiveScalingCustomizedScalingMetricBuilder::default()
    }
}

/// A builder for [`PredictiveScalingCustomizedScalingMetric`](crate::types::PredictiveScalingCustomizedScalingMetric).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PredictiveScalingCustomizedScalingMetricBuilder {
    pub(crate) metric_data_queries:
        std::option::Option<std::vec::Vec<crate::types::MetricDataQuery>>,
}
impl PredictiveScalingCustomizedScalingMetricBuilder {
    /// Appends an item to `metric_data_queries`.
    ///
    /// To override the contents of this collection use [`set_metric_data_queries`](Self::set_metric_data_queries).
    ///
    /// <p>One or more metric data queries to provide the data points for a scaling metric. Use multiple metric data queries only if you are performing a math expression on returned data. </p>
    pub fn metric_data_queries(mut self, input: crate::types::MetricDataQuery) -> Self {
        let mut v = self.metric_data_queries.unwrap_or_default();
        v.push(input);
        self.metric_data_queries = Some(v);
        self
    }
    /// <p>One or more metric data queries to provide the data points for a scaling metric. Use multiple metric data queries only if you are performing a math expression on returned data. </p>
    pub fn set_metric_data_queries(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::MetricDataQuery>>,
    ) -> Self {
        self.metric_data_queries = input;
        self
    }
    /// Consumes the builder and constructs a [`PredictiveScalingCustomizedScalingMetric`](crate::types::PredictiveScalingCustomizedScalingMetric).
    pub fn build(self) -> crate::types::PredictiveScalingCustomizedScalingMetric {
        crate::types::PredictiveScalingCustomizedScalingMetric {
            metric_data_queries: self.metric_data_queries,
        }
    }
}
