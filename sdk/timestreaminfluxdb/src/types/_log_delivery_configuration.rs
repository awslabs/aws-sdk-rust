// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LogDeliveryConfiguration {
    /// <p>Configuration for S3 bucket log delivery.</p>
    pub s3_configuration: ::std::option::Option<crate::types::S3Configuration>,
}
impl LogDeliveryConfiguration {
    /// <p>Configuration for S3 bucket log delivery.</p>
    pub fn s3_configuration(&self) -> ::std::option::Option<&crate::types::S3Configuration> {
        self.s3_configuration.as_ref()
    }
}
impl LogDeliveryConfiguration {
    /// Creates a new builder-style object to manufacture [`LogDeliveryConfiguration`](crate::types::LogDeliveryConfiguration).
    pub fn builder() -> crate::types::builders::LogDeliveryConfigurationBuilder {
        crate::types::builders::LogDeliveryConfigurationBuilder::default()
    }
}

/// A builder for [`LogDeliveryConfiguration`](crate::types::LogDeliveryConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LogDeliveryConfigurationBuilder {
    pub(crate) s3_configuration: ::std::option::Option<crate::types::S3Configuration>,
}
impl LogDeliveryConfigurationBuilder {
    /// <p>Configuration for S3 bucket log delivery.</p>
    /// This field is required.
    pub fn s3_configuration(mut self, input: crate::types::S3Configuration) -> Self {
        self.s3_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration for S3 bucket log delivery.</p>
    pub fn set_s3_configuration(mut self, input: ::std::option::Option<crate::types::S3Configuration>) -> Self {
        self.s3_configuration = input;
        self
    }
    /// <p>Configuration for S3 bucket log delivery.</p>
    pub fn get_s3_configuration(&self) -> &::std::option::Option<crate::types::S3Configuration> {
        &self.s3_configuration
    }
    /// Consumes the builder and constructs a [`LogDeliveryConfiguration`](crate::types::LogDeliveryConfiguration).
    pub fn build(self) -> crate::types::LogDeliveryConfiguration {
        crate::types::LogDeliveryConfiguration {
            s3_configuration: self.s3_configuration,
        }
    }
}
