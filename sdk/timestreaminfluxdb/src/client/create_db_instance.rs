// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDbInstance`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_name):<br>required: **true**<br><p>The name that uniquely identifies the DB instance when interacting with the Amazon Timestream for InfluxDB API and CLI commands. This name will also be a prefix included in the endpoint. DB instance names must be unique per customer and per region.</p><br>
    ///   - [`username(impl Into<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_username):<br>required: **false**<br><p>The username of the initial admin user created in InfluxDB. Must start with a letter and can't end with a hyphen or contain two consecutive hyphens. For example, my-user1. This username will allow you to access the InfluxDB UI to perform various administrative tasks and also use the InfluxDB CLI to create an operator token. These attributes will be stored in a Secret created in Amazon Secrets Manager in your account.</p><br>
    ///   - [`password(impl Into<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::password) / [`set_password(Option<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_password):<br>required: **true**<br><p>The password of the initial admin user created in InfluxDB. This password will allow you to access the InfluxDB UI to perform various administrative tasks and also use the InfluxDB CLI to create an operator token. These attributes will be stored in a Secret created in AWS SecretManager in your account.</p><br>
    ///   - [`organization(impl Into<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::organization) / [`set_organization(Option<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_organization):<br>required: **false**<br><p>The name of the initial organization for the initial admin user in InfluxDB. An InfluxDB organization is a workspace for a group of users.</p><br>
    ///   - [`bucket(impl Into<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_bucket):<br>required: **false**<br><p>The name of the initial InfluxDB bucket. All InfluxDB data is stored in a bucket. A bucket combines the concept of a database and a retention period (the duration of time that each data point persists). A bucket belongs to an organization.</p><br>
    ///   - [`db_instance_type(DbInstanceType)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::db_instance_type) / [`set_db_instance_type(Option<DbInstanceType>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_db_instance_type):<br>required: **true**<br><p>The Timestream for InfluxDB DB instance type to run InfluxDB on.</p><br>
    ///   - [`vpc_subnet_ids(impl Into<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::vpc_subnet_ids) / [`set_vpc_subnet_ids(Option<Vec::<String>>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_vpc_subnet_ids):<br>required: **true**<br><p>A list of VPC subnet IDs to associate with the DB instance. Provide at least two VPC subnet IDs in different availability zones when deploying with a Multi-AZ standby.</p><br>
    ///   - [`vpc_security_group_ids(impl Into<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_vpc_security_group_ids):<br>required: **true**<br><p>A list of VPC security group IDs to associate with the DB instance.</p><br>
    ///   - [`publicly_accessible(bool)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::publicly_accessible) / [`set_publicly_accessible(Option<bool>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_publicly_accessible):<br>required: **false**<br><p>Configures the DB instance with a public IP to facilitate access.</p><br>
    ///   - [`db_storage_type(DbStorageType)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::db_storage_type) / [`set_db_storage_type(Option<DbStorageType>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_db_storage_type):<br>required: **false**<br><p>The Timestream for InfluxDB DB storage type to read and write InfluxDB data.</p> <p>You can choose between 3 different types of provisioned Influx IOPS included storage according to your workloads requirements:</p> <ul>  <li>   <p>Influx IO Included 3000 IOPS</p></li>  <li>   <p>Influx IO Included 12000 IOPS</p></li>  <li>   <p>Influx IO Included 16000 IOPS</p></li> </ul><br>
    ///   - [`allocated_storage(i32)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::allocated_storage) / [`set_allocated_storage(Option<i32>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_allocated_storage):<br>required: **true**<br><p>The amount of storage to allocate for your DB storage type in GiB (gibibytes).</p><br>
    ///   - [`db_parameter_group_identifier(impl Into<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::db_parameter_group_identifier) / [`set_db_parameter_group_identifier(Option<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_db_parameter_group_identifier):<br>required: **false**<br><p>The id of the DB parameter group to assign to your DB instance. DB parameter groups specify how the database is configured. For example, DB parameter groups can specify the limit for query concurrency.</p><br>
    ///   - [`deployment_type(DeploymentType)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::deployment_type) / [`set_deployment_type(Option<DeploymentType>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_deployment_type):<br>required: **false**<br><p>Specifies whether the DB instance will be deployed as a standalone instance or with a Multi-AZ standby for high availability.</p><br>
    ///   - [`log_delivery_configuration(LogDeliveryConfiguration)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::log_delivery_configuration) / [`set_log_delivery_configuration(Option<LogDeliveryConfiguration>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_log_delivery_configuration):<br>required: **false**<br><p>Configuration for sending InfluxDB engine logs to a specified S3 bucket.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::set_tags):<br>required: **false**<br><p>A list of key-value pairs to associate with the DB instance.</p><br>
    /// - On success, responds with [`CreateDbInstanceOutput`](crate::operation::create_db_instance::CreateDbInstanceOutput) with field(s):
    ///   - [`id(String)`](crate::operation::create_db_instance::CreateDbInstanceOutput::id): <p>A service-generated unique identifier.</p>
    ///   - [`name(String)`](crate::operation::create_db_instance::CreateDbInstanceOutput::name): <p>The customer-supplied name that uniquely identifies the DB instance when interacting with the Amazon Timestream for InfluxDB API and CLI commands.</p>
    ///   - [`arn(String)`](crate::operation::create_db_instance::CreateDbInstanceOutput::arn): <p>The Amazon Resource Name (ARN) of the DB instance.</p>
    ///   - [`status(Option<Status>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::status): <p>The status of the DB instance.</p>
    ///   - [`endpoint(Option<String>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::endpoint): <p>The endpoint used to connect to InfluxDB. The default InfluxDB port is 8086.</p>
    ///   - [`db_instance_type(Option<DbInstanceType>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::db_instance_type): <p>The Timestream for InfluxDB instance type that InfluxDB runs on.</p>
    ///   - [`db_storage_type(Option<DbStorageType>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::db_storage_type): <p>The Timestream for InfluxDB DB storage type that InfluxDB stores data on.</p>
    ///   - [`allocated_storage(Option<i32>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::allocated_storage): <p>The amount of storage allocated for your DB storage type (in gibibytes).</p>
    ///   - [`deployment_type(Option<DeploymentType>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::deployment_type): <p>Specifies whether the Timestream for InfluxDB is deployed as Single-AZ or with a MultiAZ Standby for High availability.</p>
    ///   - [`vpc_subnet_ids(Vec::<String>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::vpc_subnet_ids): <p>A list of VPC subnet IDs associated with the DB instance.</p>
    ///   - [`publicly_accessible(Option<bool>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::publicly_accessible): <p>Indicates if the DB instance has a public IP to facilitate access.</p>
    ///   - [`vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::vpc_security_group_ids): <p>A list of VPC security group IDs associated with the DB instance.</p>
    ///   - [`db_parameter_group_identifier(Option<String>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::db_parameter_group_identifier): <p>The id of the DB parameter group assigned to your DB instance.</p>
    ///   - [`availability_zone(Option<String>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::availability_zone): <p>The Availability Zone in which the DB instance resides.</p>
    ///   - [`secondary_availability_zone(Option<String>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::secondary_availability_zone): <p>The Availability Zone in which the standby instance is located when deploying with a MultiAZ standby instance.</p>
    ///   - [`log_delivery_configuration(Option<LogDeliveryConfiguration>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::log_delivery_configuration): <p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>
    ///   - [`influx_auth_parameters_secret_arn(Option<String>)`](crate::operation::create_db_instance::CreateDbInstanceOutput::influx_auth_parameters_secret_arn): <p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret containing the initial InfluxDB authorization parameters. The secret value is a JSON formatted key-value pair holding InfluxDB authorization values: organization, bucket, username, and password.</p>
    /// - On failure, responds with [`SdkError<CreateDbInstanceError>`](crate::operation::create_db_instance::CreateDbInstanceError)
    pub fn create_db_instance(&self) -> crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder {
        crate::operation::create_db_instance::builders::CreateDbInstanceFluentBuilder::new(self.handle.clone())
    }
}
