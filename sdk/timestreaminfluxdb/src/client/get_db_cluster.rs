// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDbCluster`](crate::operation::get_db_cluster::builders::GetDbClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_cluster_id(impl Into<String>)`](crate::operation::get_db_cluster::builders::GetDbClusterFluentBuilder::db_cluster_id) / [`set_db_cluster_id(Option<String>)`](crate::operation::get_db_cluster::builders::GetDbClusterFluentBuilder::set_db_cluster_id):<br>required: **true**<br><p>Service-generated unique identifier of the DB cluster to retrieve.</p><br>
    /// - On success, responds with [`GetDbClusterOutput`](crate::operation::get_db_cluster::GetDbClusterOutput) with field(s):
    ///   - [`id(String)`](crate::operation::get_db_cluster::GetDbClusterOutput::id): <p>Service-generated unique identifier of the DB cluster to retrieve.</p>
    ///   - [`name(String)`](crate::operation::get_db_cluster::GetDbClusterOutput::name): <p>Customer-supplied name of the Timestream for InfluxDB cluster.</p>
    ///   - [`arn(String)`](crate::operation::get_db_cluster::GetDbClusterOutput::arn): <p>The Amazon Resource Name (ARN) of the DB cluster.</p>
    ///   - [`status(Option<ClusterStatus>)`](crate::operation::get_db_cluster::GetDbClusterOutput::status): <p>The status of the DB cluster.</p>
    ///   - [`endpoint(Option<String>)`](crate::operation::get_db_cluster::GetDbClusterOutput::endpoint): <p>The endpoint used to connect to the Timestream for InfluxDB cluster for write and read operations.</p>
    ///   - [`reader_endpoint(Option<String>)`](crate::operation::get_db_cluster::GetDbClusterOutput::reader_endpoint): <p>The endpoint used to connect to the Timestream for InfluxDB cluster for read-only operations.</p>
    ///   - [`port(Option<i32>)`](crate::operation::get_db_cluster::GetDbClusterOutput::port): <p>The port number on which InfluxDB accepts connections.</p>
    ///   - [`deployment_type(Option<ClusterDeploymentType>)`](crate::operation::get_db_cluster::GetDbClusterOutput::deployment_type): <p>Deployment type of the DB cluster.</p>
    ///   - [`db_instance_type(Option<DbInstanceType>)`](crate::operation::get_db_cluster::GetDbClusterOutput::db_instance_type): <p>The Timestream for InfluxDB instance type that InfluxDB runs on.</p>
    ///   - [`network_type(Option<NetworkType>)`](crate::operation::get_db_cluster::GetDbClusterOutput::network_type): <p>Specifies whether the network type of the Timestream for InfluxDB cluster is IPv4, which can communicate over IPv4 protocol only, or DUAL, which can communicate over both IPv4 and IPv6 protocols.</p>
    ///   - [`db_storage_type(Option<DbStorageType>)`](crate::operation::get_db_cluster::GetDbClusterOutput::db_storage_type): <p>The Timestream for InfluxDB DB storage type that InfluxDB stores data on.</p>
    ///   - [`allocated_storage(Option<i32>)`](crate::operation::get_db_cluster::GetDbClusterOutput::allocated_storage): <p>The amount of storage allocated for your DB storage type (in gibibytes).</p>
    ///   - [`engine_type(Option<EngineType>)`](crate::operation::get_db_cluster::GetDbClusterOutput::engine_type): <p>The engine type of your DB cluster.</p>
    ///   - [`publicly_accessible(Option<bool>)`](crate::operation::get_db_cluster::GetDbClusterOutput::publicly_accessible): <p>Indicates if the DB cluster has a public IP to facilitate access from outside the VPC.</p>
    ///   - [`db_parameter_group_identifier(Option<String>)`](crate::operation::get_db_cluster::GetDbClusterOutput::db_parameter_group_identifier): <p>The ID of the DB parameter group assigned to your DB cluster.</p>
    ///   - [`log_delivery_configuration(Option<LogDeliveryConfiguration>)`](crate::operation::get_db_cluster::GetDbClusterOutput::log_delivery_configuration): <p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>
    ///   - [`influx_auth_parameters_secret_arn(Option<String>)`](crate::operation::get_db_cluster::GetDbClusterOutput::influx_auth_parameters_secret_arn): <p>The Amazon Resource Name (ARN) of the Secrets Manager secret containing the initial InfluxDB authorization parameters. The secret value is a JSON formatted key-value pair holding InfluxDB authorization values: organization, bucket, username, and password.</p>
    ///   - [`vpc_subnet_ids(Option<Vec::<String>>)`](crate::operation::get_db_cluster::GetDbClusterOutput::vpc_subnet_ids): <p>A list of VPC subnet IDs associated with the DB cluster.</p>
    ///   - [`vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::get_db_cluster::GetDbClusterOutput::vpc_security_group_ids): <p>A list of VPC security group IDs associated with the DB cluster.</p>
    ///   - [`failover_mode(Option<FailoverMode>)`](crate::operation::get_db_cluster::GetDbClusterOutput::failover_mode): <p>The configured failover mode for the DB cluster.</p>
    /// - On failure, responds with [`SdkError<GetDbClusterError>`](crate::operation::get_db_cluster::GetDbClusterError)
    pub fn get_db_cluster(&self) -> crate::operation::get_db_cluster::builders::GetDbClusterFluentBuilder {
        crate::operation::get_db_cluster::builders::GetDbClusterFluentBuilder::new(self.handle.clone())
    }
}
