// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDbInstance`](crate::operation::delete_db_instance::builders::DeleteDbInstanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identifier(impl Into<String>)`](crate::operation::delete_db_instance::builders::DeleteDbInstanceFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::delete_db_instance::builders::DeleteDbInstanceFluentBuilder::set_identifier):<br>required: **true**<br><p>The id of the DB instance.</p><br>
    /// - On success, responds with [`DeleteDbInstanceOutput`](crate::operation::delete_db_instance::DeleteDbInstanceOutput) with field(s):
    ///   - [`id(String)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::id): <p>A service-generated unique identifier.</p>
    ///   - [`name(String)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::name): <p>The customer-supplied name that uniquely identifies the DB instance when interacting with the Amazon Timestream for InfluxDB API and CLI commands.</p>
    ///   - [`arn(String)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::arn): <p>The Amazon Resource Name (ARN) of the DB instance.</p>
    ///   - [`status(Option<Status>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::status): <p>The status of the DB instance.</p>
    ///   - [`endpoint(Option<String>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::endpoint): <p>The endpoint used to connect to InfluxDB. The default InfluxDB port is 8086.</p>
    ///   - [`db_instance_type(Option<DbInstanceType>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::db_instance_type): <p>The Timestream for InfluxDB instance type that InfluxDB runs on.</p>
    ///   - [`db_storage_type(Option<DbStorageType>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::db_storage_type): <p>The Timestream for InfluxDB DB storage type that InfluxDB stores data on.</p>
    ///   - [`allocated_storage(Option<i32>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::allocated_storage): <p>The amount of storage allocated for your DB storage type (in gibibytes).</p>
    ///   - [`deployment_type(Option<DeploymentType>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::deployment_type): <p>Specifies whether the Timestream for InfluxDB is deployed as Single-AZ or with a MultiAZ Standby for High availability.</p>
    ///   - [`vpc_subnet_ids(Vec::<String>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::vpc_subnet_ids): <p>A list of VPC subnet IDs associated with the DB instance.</p>
    ///   - [`publicly_accessible(Option<bool>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::publicly_accessible): <p>Indicates if the DB instance has a public IP to facilitate access.</p>
    ///   - [`vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::vpc_security_group_ids): <p>A list of VPC security group IDs associated with the DB instance.</p>
    ///   - [`db_parameter_group_identifier(Option<String>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::db_parameter_group_identifier): <p>The id of the DB parameter group assigned to your DB instance.</p>
    ///   - [`availability_zone(Option<String>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::availability_zone): <p>The Availability Zone in which the DB instance resides.</p>
    ///   - [`secondary_availability_zone(Option<String>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::secondary_availability_zone): <p>The Availability Zone in which the standby instance is located when deploying with a MultiAZ standby instance.</p>
    ///   - [`log_delivery_configuration(Option<LogDeliveryConfiguration>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::log_delivery_configuration): <p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>
    ///   - [`influx_auth_parameters_secret_arn(Option<String>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::influx_auth_parameters_secret_arn): <p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret containing the initial InfluxDB authorization parameters. The secret value is a JSON formatted key-value pair holding InfluxDB authorization values: organization, bucket, username, and password.</p>
    /// - On failure, responds with [`SdkError<DeleteDbInstanceError>`](crate::operation::delete_db_instance::DeleteDbInstanceError)
    pub fn delete_db_instance(&self) -> crate::operation::delete_db_instance::builders::DeleteDbInstanceFluentBuilder {
        crate::operation::delete_db_instance::builders::DeleteDbInstanceFluentBuilder::new(self.handle.clone())
    }
}
