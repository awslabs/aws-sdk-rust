// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListDbInstances`](crate::operation::list_db_instances::builders::ListDbInstancesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_db_instances::builders::ListDbInstancesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_db_instances::builders::ListDbInstancesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_db_instances::builders::ListDbInstancesFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_db_instances::builders::ListDbInstancesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_db_instances::builders::ListDbInstancesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of items to return in the output. If the total number of items available is more than the value specified, a NextToken is provided in the output. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.</p><br>
    /// - On success, responds with [`ListDbInstancesOutput`](crate::operation::list_db_instances::ListDbInstancesOutput) with field(s):
    ///   - [`items(Vec::<DbInstanceSummary>)`](crate::operation::list_db_instances::ListDbInstancesOutput::items): <p>A list of Timestream for InfluxDB DB instance summaries.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_db_instances::ListDbInstancesOutput::next_token): <p>Token from a previous call of the operation. When this value is provided, the service returns results from where the previous response left off.</p>
    /// - On failure, responds with [`SdkError<ListDbInstancesError>`](crate::operation::list_db_instances::ListDbInstancesError)
    pub fn list_db_instances(&self) -> crate::operation::list_db_instances::builders::ListDbInstancesFluentBuilder {
        crate::operation::list_db_instances::builders::ListDbInstancesFluentBuilder::new(self.handle.clone())
    }
}
