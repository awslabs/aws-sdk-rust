// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_fhir_datastore;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_delete_fhir_datastore;

pub(crate) mod shape_describe_fhir_datastore;

pub(crate) mod shape_describe_fhir_export_job;

pub(crate) mod shape_describe_fhir_import_job;

pub(crate) mod shape_list_fhir_datastores;

pub(crate) mod shape_list_fhir_export_jobs;

pub(crate) mod shape_list_fhir_import_jobs;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_start_fhir_export_job;

pub(crate) mod shape_start_fhir_import_job;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_fhir_datastore_input;

pub(crate) mod shape_delete_fhir_datastore_input;

pub(crate) mod shape_describe_fhir_datastore_input;

pub(crate) mod shape_describe_fhir_export_job_input;

pub(crate) mod shape_describe_fhir_import_job_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_fhir_datastores_input;

pub(crate) mod shape_list_fhir_export_jobs_input;

pub(crate) mod shape_list_fhir_import_jobs_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_start_fhir_export_job_input;

pub(crate) mod shape_start_fhir_import_job_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_datastore_filter;

pub(crate) mod shape_datastore_properties;

pub(crate) mod shape_datastore_properties_list;

pub(crate) mod shape_export_job_properties;

pub(crate) mod shape_export_job_properties_list;

pub(crate) mod shape_import_job_properties;

pub(crate) mod shape_import_job_properties_list;

pub(crate) mod shape_input_data_config;

pub(crate) mod shape_output_data_config;

pub(crate) mod shape_preload_data_config;

pub(crate) mod shape_sse_configuration;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_kms_encryption_config;

pub(crate) mod shape_s3_configuration;
