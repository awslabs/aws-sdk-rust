// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The server-side encryption key configuration for a customer provided encryption key. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SseConfiguration {
    /// <p> The KMS encryption configuration used to provide details for data encryption. </p>
    pub kms_encryption_config: ::std::option::Option<crate::types::KmsEncryptionConfig>,
}
impl SseConfiguration {
    /// <p> The KMS encryption configuration used to provide details for data encryption. </p>
    pub fn kms_encryption_config(&self) -> ::std::option::Option<&crate::types::KmsEncryptionConfig> {
        self.kms_encryption_config.as_ref()
    }
}
impl SseConfiguration {
    /// Creates a new builder-style object to manufacture [`SseConfiguration`](crate::types::SseConfiguration).
    pub fn builder() -> crate::types::builders::SseConfigurationBuilder {
        crate::types::builders::SseConfigurationBuilder::default()
    }
}

/// A builder for [`SseConfiguration`](crate::types::SseConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SseConfigurationBuilder {
    pub(crate) kms_encryption_config: ::std::option::Option<crate::types::KmsEncryptionConfig>,
}
impl SseConfigurationBuilder {
    /// <p> The KMS encryption configuration used to provide details for data encryption. </p>
    /// This field is required.
    pub fn kms_encryption_config(mut self, input: crate::types::KmsEncryptionConfig) -> Self {
        self.kms_encryption_config = ::std::option::Option::Some(input);
        self
    }
    /// <p> The KMS encryption configuration used to provide details for data encryption. </p>
    pub fn set_kms_encryption_config(mut self, input: ::std::option::Option<crate::types::KmsEncryptionConfig>) -> Self {
        self.kms_encryption_config = input;
        self
    }
    /// <p> The KMS encryption configuration used to provide details for data encryption. </p>
    pub fn get_kms_encryption_config(&self) -> &::std::option::Option<crate::types::KmsEncryptionConfig> {
        &self.kms_encryption_config
    }
    /// Consumes the builder and constructs a [`SseConfiguration`](crate::types::SseConfiguration).
    pub fn build(self) -> crate::types::SseConfiguration {
        crate::types::SseConfiguration {
            kms_encryption_config: self.kms_encryption_config,
        }
    }
}
