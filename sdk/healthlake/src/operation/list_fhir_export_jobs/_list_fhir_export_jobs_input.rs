// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListFhirExportJobsInput {
    /// <p> This parameter limits the response to the export job with the specified Data Store ID. </p>
    #[doc(hidden)]
    pub datastore_id: std::option::Option<std::string::String>,
    /// <p> A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p> This parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user. </p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p> This parameter limits the response to the export job with the specified job name. </p>
    #[doc(hidden)]
    pub job_name: std::option::Option<std::string::String>,
    /// <p> This parameter limits the response to the export jobs with the specified job status. </p>
    #[doc(hidden)]
    pub job_status: std::option::Option<crate::types::JobStatus>,
    /// <p> This parameter limits the response to FHIR export jobs submitted before a user specified date. </p>
    #[doc(hidden)]
    pub submitted_before: std::option::Option<aws_smithy_types::DateTime>,
    /// <p> This parameter limits the response to FHIR export jobs submitted after a user specified date. </p>
    #[doc(hidden)]
    pub submitted_after: std::option::Option<aws_smithy_types::DateTime>,
}
impl ListFhirExportJobsInput {
    /// <p> This parameter limits the response to the export job with the specified Data Store ID. </p>
    pub fn datastore_id(&self) -> std::option::Option<&str> {
        self.datastore_id.as_deref()
    }
    /// <p> A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p> This parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user. </p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p> This parameter limits the response to the export job with the specified job name. </p>
    pub fn job_name(&self) -> std::option::Option<&str> {
        self.job_name.as_deref()
    }
    /// <p> This parameter limits the response to the export jobs with the specified job status. </p>
    pub fn job_status(&self) -> std::option::Option<&crate::types::JobStatus> {
        self.job_status.as_ref()
    }
    /// <p> This parameter limits the response to FHIR export jobs submitted before a user specified date. </p>
    pub fn submitted_before(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.submitted_before.as_ref()
    }
    /// <p> This parameter limits the response to FHIR export jobs submitted after a user specified date. </p>
    pub fn submitted_after(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.submitted_after.as_ref()
    }
}
impl ListFhirExportJobsInput {
    /// Creates a new builder-style object to manufacture [`ListFhirExportJobsInput`](crate::operation::list_fhir_export_jobs::ListFhirExportJobsInput).
    pub fn builder(
    ) -> crate::operation::list_fhir_export_jobs::builders::ListFhirExportJobsInputBuilder {
        crate::operation::list_fhir_export_jobs::builders::ListFhirExportJobsInputBuilder::default()
    }
}

/// A builder for [`ListFhirExportJobsInput`](crate::operation::list_fhir_export_jobs::ListFhirExportJobsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListFhirExportJobsInputBuilder {
    pub(crate) datastore_id: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) job_name: std::option::Option<std::string::String>,
    pub(crate) job_status: std::option::Option<crate::types::JobStatus>,
    pub(crate) submitted_before: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) submitted_after: std::option::Option<aws_smithy_types::DateTime>,
}
impl ListFhirExportJobsInputBuilder {
    /// <p> This parameter limits the response to the export job with the specified Data Store ID. </p>
    pub fn datastore_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.datastore_id = Some(input.into());
        self
    }
    /// <p> This parameter limits the response to the export job with the specified Data Store ID. </p>
    pub fn set_datastore_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.datastore_id = input;
        self
    }
    /// <p> A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p> A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p> This parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user. </p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p> This parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user. </p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p> This parameter limits the response to the export job with the specified job name. </p>
    pub fn job_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_name = Some(input.into());
        self
    }
    /// <p> This parameter limits the response to the export job with the specified job name. </p>
    pub fn set_job_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_name = input;
        self
    }
    /// <p> This parameter limits the response to the export jobs with the specified job status. </p>
    pub fn job_status(mut self, input: crate::types::JobStatus) -> Self {
        self.job_status = Some(input);
        self
    }
    /// <p> This parameter limits the response to the export jobs with the specified job status. </p>
    pub fn set_job_status(mut self, input: std::option::Option<crate::types::JobStatus>) -> Self {
        self.job_status = input;
        self
    }
    /// <p> This parameter limits the response to FHIR export jobs submitted before a user specified date. </p>
    pub fn submitted_before(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.submitted_before = Some(input);
        self
    }
    /// <p> This parameter limits the response to FHIR export jobs submitted before a user specified date. </p>
    pub fn set_submitted_before(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.submitted_before = input;
        self
    }
    /// <p> This parameter limits the response to FHIR export jobs submitted after a user specified date. </p>
    pub fn submitted_after(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.submitted_after = Some(input);
        self
    }
    /// <p> This parameter limits the response to FHIR export jobs submitted after a user specified date. </p>
    pub fn set_submitted_after(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.submitted_after = input;
        self
    }
    /// Consumes the builder and constructs a [`ListFhirExportJobsInput`](crate::operation::list_fhir_export_jobs::ListFhirExportJobsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_fhir_export_jobs::ListFhirExportJobsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_fhir_export_jobs::ListFhirExportJobsInput {
                datastore_id: self.datastore_id,
                next_token: self.next_token,
                max_results: self.max_results,
                job_name: self.job_name,
                job_status: self.job_status,
                submitted_before: self.submitted_before,
                submitted_after: self.submitted_after,
            },
        )
    }
}
