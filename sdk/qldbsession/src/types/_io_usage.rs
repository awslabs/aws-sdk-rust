// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains I/O usage metrics for a command that was invoked.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IoUsage {
    /// <p>The number of read I/O requests that the command made.</p>
    #[doc(hidden)]
    pub read_i_os: i64,
    /// <p>The number of write I/O requests that the command made.</p>
    #[doc(hidden)]
    pub write_i_os: i64,
}
impl IoUsage {
    /// <p>The number of read I/O requests that the command made.</p>
    pub fn read_i_os(&self) -> i64 {
        self.read_i_os
    }
    /// <p>The number of write I/O requests that the command made.</p>
    pub fn write_i_os(&self) -> i64 {
        self.write_i_os
    }
}
impl IoUsage {
    /// Creates a new builder-style object to manufacture [`IoUsage`](crate::types::IoUsage).
    pub fn builder() -> crate::types::builders::IoUsageBuilder {
        crate::types::builders::IoUsageBuilder::default()
    }
}

/// A builder for [`IoUsage`](crate::types::IoUsage).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IoUsageBuilder {
    pub(crate) read_i_os: std::option::Option<i64>,
    pub(crate) write_i_os: std::option::Option<i64>,
}
impl IoUsageBuilder {
    /// <p>The number of read I/O requests that the command made.</p>
    pub fn read_i_os(mut self, input: i64) -> Self {
        self.read_i_os = Some(input);
        self
    }
    /// <p>The number of read I/O requests that the command made.</p>
    pub fn set_read_i_os(mut self, input: std::option::Option<i64>) -> Self {
        self.read_i_os = input;
        self
    }
    /// <p>The number of write I/O requests that the command made.</p>
    pub fn write_i_os(mut self, input: i64) -> Self {
        self.write_i_os = Some(input);
        self
    }
    /// <p>The number of write I/O requests that the command made.</p>
    pub fn set_write_i_os(mut self, input: std::option::Option<i64>) -> Self {
        self.write_i_os = input;
        self
    }
    /// Consumes the builder and constructs a [`IoUsage`](crate::types::IoUsage).
    pub fn build(self) -> crate::types::IoUsage {
        crate::types::IoUsage {
            read_i_os: self.read_i_os.unwrap_or_default(),
            write_i_os: self.write_i_os.unwrap_or_default(),
        }
    }
}
