// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies a request to start a new session.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartSessionRequest {
    /// <p>The name of the ledger to start a new session against.</p>
    #[doc(hidden)]
    pub ledger_name: std::option::Option<std::string::String>,
}
impl StartSessionRequest {
    /// <p>The name of the ledger to start a new session against.</p>
    pub fn ledger_name(&self) -> std::option::Option<&str> {
        self.ledger_name.as_deref()
    }
}
impl StartSessionRequest {
    /// Creates a new builder-style object to manufacture [`StartSessionRequest`](crate::types::StartSessionRequest).
    pub fn builder() -> crate::types::builders::StartSessionRequestBuilder {
        crate::types::builders::StartSessionRequestBuilder::default()
    }
}

/// A builder for [`StartSessionRequest`](crate::types::StartSessionRequest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartSessionRequestBuilder {
    pub(crate) ledger_name: std::option::Option<std::string::String>,
}
impl StartSessionRequestBuilder {
    /// <p>The name of the ledger to start a new session against.</p>
    pub fn ledger_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.ledger_name = Some(input.into());
        self
    }
    /// <p>The name of the ledger to start a new session against.</p>
    pub fn set_ledger_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ledger_name = input;
        self
    }
    /// Consumes the builder and constructs a [`StartSessionRequest`](crate::types::StartSessionRequest).
    pub fn build(self) -> crate::types::StartSessionRequest {
        crate::types::StartSessionRequest {
            ledger_name: self.ledger_name,
        }
    }
}
