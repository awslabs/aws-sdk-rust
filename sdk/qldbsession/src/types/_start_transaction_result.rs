// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the details of the started transaction.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartTransactionResult {
    /// <p>The transaction ID of the started transaction.</p>
    #[doc(hidden)]
    pub transaction_id: std::option::Option<std::string::String>,
    /// <p>Contains server-side performance information for the command.</p>
    #[doc(hidden)]
    pub timing_information: std::option::Option<crate::types::TimingInformation>,
}
impl StartTransactionResult {
    /// <p>The transaction ID of the started transaction.</p>
    pub fn transaction_id(&self) -> std::option::Option<&str> {
        self.transaction_id.as_deref()
    }
    /// <p>Contains server-side performance information for the command.</p>
    pub fn timing_information(&self) -> std::option::Option<&crate::types::TimingInformation> {
        self.timing_information.as_ref()
    }
}
impl StartTransactionResult {
    /// Creates a new builder-style object to manufacture [`StartTransactionResult`](crate::types::StartTransactionResult).
    pub fn builder() -> crate::types::builders::StartTransactionResultBuilder {
        crate::types::builders::StartTransactionResultBuilder::default()
    }
}

/// A builder for [`StartTransactionResult`](crate::types::StartTransactionResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartTransactionResultBuilder {
    pub(crate) transaction_id: std::option::Option<std::string::String>,
    pub(crate) timing_information: std::option::Option<crate::types::TimingInformation>,
}
impl StartTransactionResultBuilder {
    /// <p>The transaction ID of the started transaction.</p>
    pub fn transaction_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.transaction_id = Some(input.into());
        self
    }
    /// <p>The transaction ID of the started transaction.</p>
    pub fn set_transaction_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.transaction_id = input;
        self
    }
    /// <p>Contains server-side performance information for the command.</p>
    pub fn timing_information(mut self, input: crate::types::TimingInformation) -> Self {
        self.timing_information = Some(input);
        self
    }
    /// <p>Contains server-side performance information for the command.</p>
    pub fn set_timing_information(
        mut self,
        input: std::option::Option<crate::types::TimingInformation>,
    ) -> Self {
        self.timing_information = input;
        self
    }
    /// Consumes the builder and constructs a [`StartTransactionResult`](crate::types::StartTransactionResult).
    pub fn build(self) -> crate::types::StartTransactionResult {
        crate::types::StartTransactionResult {
            transaction_id: self.transaction_id,
            timing_information: self.timing_information,
        }
    }
}
