// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the details of the page to be fetched.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FetchPageRequest {
    /// <p>Specifies the transaction ID of the page to be fetched.</p>
    #[doc(hidden)]
    pub transaction_id: std::option::Option<std::string::String>,
    /// <p>Specifies the next page token of the page to be fetched.</p>
    #[doc(hidden)]
    pub next_page_token: std::option::Option<std::string::String>,
}
impl FetchPageRequest {
    /// <p>Specifies the transaction ID of the page to be fetched.</p>
    pub fn transaction_id(&self) -> std::option::Option<&str> {
        self.transaction_id.as_deref()
    }
    /// <p>Specifies the next page token of the page to be fetched.</p>
    pub fn next_page_token(&self) -> std::option::Option<&str> {
        self.next_page_token.as_deref()
    }
}
impl FetchPageRequest {
    /// Creates a new builder-style object to manufacture [`FetchPageRequest`](crate::types::FetchPageRequest).
    pub fn builder() -> crate::types::builders::FetchPageRequestBuilder {
        crate::types::builders::FetchPageRequestBuilder::default()
    }
}

/// A builder for [`FetchPageRequest`](crate::types::FetchPageRequest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FetchPageRequestBuilder {
    pub(crate) transaction_id: std::option::Option<std::string::String>,
    pub(crate) next_page_token: std::option::Option<std::string::String>,
}
impl FetchPageRequestBuilder {
    /// <p>Specifies the transaction ID of the page to be fetched.</p>
    pub fn transaction_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.transaction_id = Some(input.into());
        self
    }
    /// <p>Specifies the transaction ID of the page to be fetched.</p>
    pub fn set_transaction_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.transaction_id = input;
        self
    }
    /// <p>Specifies the next page token of the page to be fetched.</p>
    pub fn next_page_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_page_token = Some(input.into());
        self
    }
    /// <p>Specifies the next page token of the page to be fetched.</p>
    pub fn set_next_page_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_page_token = input;
        self
    }
    /// Consumes the builder and constructs a [`FetchPageRequest`](crate::types::FetchPageRequest).
    pub fn build(self) -> crate::types::FetchPageRequest {
        crate::types::FetchPageRequest {
            transaction_id: self.transaction_id,
            next_page_token: self.next_page_token,
        }
    }
}
