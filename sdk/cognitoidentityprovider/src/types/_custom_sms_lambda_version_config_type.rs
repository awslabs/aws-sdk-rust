// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A custom SMS sender Lambda configuration type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CustomSmsLambdaVersionConfigType {
    /// <p>Signature of the "request" attribute in the "event" information that Amazon Cognito passes to your custom SMS Lambda function. The only supported value is <code>V1_0</code>.</p>
    #[doc(hidden)]
    pub lambda_version: std::option::Option<crate::types::CustomSmsSenderLambdaVersionType>,
    /// <p>The Amazon Resource Name (ARN) of the Lambda function that Amazon Cognito activates to send SMS notifications to users.</p>
    #[doc(hidden)]
    pub lambda_arn: std::option::Option<std::string::String>,
}
impl CustomSmsLambdaVersionConfigType {
    /// <p>Signature of the "request" attribute in the "event" information that Amazon Cognito passes to your custom SMS Lambda function. The only supported value is <code>V1_0</code>.</p>
    pub fn lambda_version(
        &self,
    ) -> std::option::Option<&crate::types::CustomSmsSenderLambdaVersionType> {
        self.lambda_version.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the Lambda function that Amazon Cognito activates to send SMS notifications to users.</p>
    pub fn lambda_arn(&self) -> std::option::Option<&str> {
        self.lambda_arn.as_deref()
    }
}
impl CustomSmsLambdaVersionConfigType {
    /// Creates a new builder-style object to manufacture [`CustomSmsLambdaVersionConfigType`](crate::types::CustomSmsLambdaVersionConfigType).
    pub fn builder() -> crate::types::builders::CustomSmsLambdaVersionConfigTypeBuilder {
        crate::types::builders::CustomSmsLambdaVersionConfigTypeBuilder::default()
    }
}

/// A builder for [`CustomSmsLambdaVersionConfigType`](crate::types::CustomSmsLambdaVersionConfigType).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CustomSmsLambdaVersionConfigTypeBuilder {
    pub(crate) lambda_version: std::option::Option<crate::types::CustomSmsSenderLambdaVersionType>,
    pub(crate) lambda_arn: std::option::Option<std::string::String>,
}
impl CustomSmsLambdaVersionConfigTypeBuilder {
    /// <p>Signature of the "request" attribute in the "event" information that Amazon Cognito passes to your custom SMS Lambda function. The only supported value is <code>V1_0</code>.</p>
    pub fn lambda_version(mut self, input: crate::types::CustomSmsSenderLambdaVersionType) -> Self {
        self.lambda_version = Some(input);
        self
    }
    /// <p>Signature of the "request" attribute in the "event" information that Amazon Cognito passes to your custom SMS Lambda function. The only supported value is <code>V1_0</code>.</p>
    pub fn set_lambda_version(
        mut self,
        input: std::option::Option<crate::types::CustomSmsSenderLambdaVersionType>,
    ) -> Self {
        self.lambda_version = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Lambda function that Amazon Cognito activates to send SMS notifications to users.</p>
    pub fn lambda_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.lambda_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Lambda function that Amazon Cognito activates to send SMS notifications to users.</p>
    pub fn set_lambda_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.lambda_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`CustomSmsLambdaVersionConfigType`](crate::types::CustomSmsLambdaVersionConfigType).
    pub fn build(self) -> crate::types::CustomSmsLambdaVersionConfigType {
        crate::types::CustomSmsLambdaVersionConfigType {
            lambda_version: self.lambda_version,
            lambda_arn: self.lambda_arn,
        }
    }
}
