// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The device verifier against which it is authenticated.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeviceSecretVerifierConfigType {
    /// <p>The password verifier.</p>
    #[doc(hidden)]
    pub password_verifier: std::option::Option<std::string::String>,
    /// <p>The <a href="https://en.wikipedia.org/wiki/Salt_(cryptography)">salt</a> </p>
    #[doc(hidden)]
    pub salt: std::option::Option<std::string::String>,
}
impl DeviceSecretVerifierConfigType {
    /// <p>The password verifier.</p>
    pub fn password_verifier(&self) -> std::option::Option<&str> {
        self.password_verifier.as_deref()
    }
    /// <p>The <a href="https://en.wikipedia.org/wiki/Salt_(cryptography)">salt</a> </p>
    pub fn salt(&self) -> std::option::Option<&str> {
        self.salt.as_deref()
    }
}
impl DeviceSecretVerifierConfigType {
    /// Creates a new builder-style object to manufacture [`DeviceSecretVerifierConfigType`](crate::types::DeviceSecretVerifierConfigType).
    pub fn builder() -> crate::types::builders::DeviceSecretVerifierConfigTypeBuilder {
        crate::types::builders::DeviceSecretVerifierConfigTypeBuilder::default()
    }
}

/// A builder for [`DeviceSecretVerifierConfigType`](crate::types::DeviceSecretVerifierConfigType).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeviceSecretVerifierConfigTypeBuilder {
    pub(crate) password_verifier: std::option::Option<std::string::String>,
    pub(crate) salt: std::option::Option<std::string::String>,
}
impl DeviceSecretVerifierConfigTypeBuilder {
    /// <p>The password verifier.</p>
    pub fn password_verifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.password_verifier = Some(input.into());
        self
    }
    /// <p>The password verifier.</p>
    pub fn set_password_verifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.password_verifier = input;
        self
    }
    /// <p>The <a href="https://en.wikipedia.org/wiki/Salt_(cryptography)">salt</a> </p>
    pub fn salt(mut self, input: impl Into<std::string::String>) -> Self {
        self.salt = Some(input.into());
        self
    }
    /// <p>The <a href="https://en.wikipedia.org/wiki/Salt_(cryptography)">salt</a> </p>
    pub fn set_salt(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.salt = input;
        self
    }
    /// Consumes the builder and constructs a [`DeviceSecretVerifierConfigType`](crate::types::DeviceSecretVerifierConfigType).
    pub fn build(self) -> crate::types::DeviceSecretVerifierConfigType {
        crate::types::DeviceSecretVerifierConfigType {
            password_verifier: self.password_verifier,
            salt: self.salt,
        }
    }
}
