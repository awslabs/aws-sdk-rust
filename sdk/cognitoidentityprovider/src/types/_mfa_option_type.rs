// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> <i>This data type is no longer supported.</i> Applies only to SMS multi-factor authentication (MFA) configurations. Does not apply to time-based one-time password (TOTP) software token MFA configurations.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MfaOptionType {
    /// <p>The delivery medium to send the MFA code. You can use this parameter to set only the <code>SMS</code> delivery medium value.</p>
    #[doc(hidden)]
    pub delivery_medium: std::option::Option<crate::types::DeliveryMediumType>,
    /// <p>The attribute name of the MFA option type. The only valid value is <code>phone_number</code>.</p>
    #[doc(hidden)]
    pub attribute_name: std::option::Option<std::string::String>,
}
impl MfaOptionType {
    /// <p>The delivery medium to send the MFA code. You can use this parameter to set only the <code>SMS</code> delivery medium value.</p>
    pub fn delivery_medium(&self) -> std::option::Option<&crate::types::DeliveryMediumType> {
        self.delivery_medium.as_ref()
    }
    /// <p>The attribute name of the MFA option type. The only valid value is <code>phone_number</code>.</p>
    pub fn attribute_name(&self) -> std::option::Option<&str> {
        self.attribute_name.as_deref()
    }
}
impl MfaOptionType {
    /// Creates a new builder-style object to manufacture [`MfaOptionType`](crate::types::MfaOptionType).
    pub fn builder() -> crate::types::builders::MfaOptionTypeBuilder {
        crate::types::builders::MfaOptionTypeBuilder::default()
    }
}

/// A builder for [`MfaOptionType`](crate::types::MfaOptionType).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MfaOptionTypeBuilder {
    pub(crate) delivery_medium: std::option::Option<crate::types::DeliveryMediumType>,
    pub(crate) attribute_name: std::option::Option<std::string::String>,
}
impl MfaOptionTypeBuilder {
    /// <p>The delivery medium to send the MFA code. You can use this parameter to set only the <code>SMS</code> delivery medium value.</p>
    pub fn delivery_medium(mut self, input: crate::types::DeliveryMediumType) -> Self {
        self.delivery_medium = Some(input);
        self
    }
    /// <p>The delivery medium to send the MFA code. You can use this parameter to set only the <code>SMS</code> delivery medium value.</p>
    pub fn set_delivery_medium(
        mut self,
        input: std::option::Option<crate::types::DeliveryMediumType>,
    ) -> Self {
        self.delivery_medium = input;
        self
    }
    /// <p>The attribute name of the MFA option type. The only valid value is <code>phone_number</code>.</p>
    pub fn attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.attribute_name = Some(input.into());
        self
    }
    /// <p>The attribute name of the MFA option type. The only valid value is <code>phone_number</code>.</p>
    pub fn set_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attribute_name = input;
        self
    }
    /// Consumes the builder and constructs a [`MfaOptionType`](crate::types::MfaOptionType).
    pub fn build(self) -> crate::types::MfaOptionType {
        crate::types::MfaOptionType {
            delivery_medium: self.delivery_medium,
            attribute_name: self.attribute_name,
        }
    }
}
