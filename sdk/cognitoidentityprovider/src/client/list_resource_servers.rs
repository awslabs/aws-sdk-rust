// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListResourceServers`](crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder::set_user_pool_id): <p>The user pool ID for the user pool.</p>
    ///   - [`max_results(i32)`](crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder::max_results) / [`set_max_results(i32)`](crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder::set_max_results): <p>The maximum number of resource servers to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder::set_next_token): <p>A pagination token.</p>
    /// - On success, responds with [`ListResourceServersOutput`](crate::operation::list_resource_servers::ListResourceServersOutput) with field(s):
    ///   - [`resource_servers(Option<Vec<ResourceServerType>>)`](crate::operation::list_resource_servers::ListResourceServersOutput::resource_servers): <p>The resource servers.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_resource_servers::ListResourceServersOutput::next_token): <p>A pagination token.</p>
    /// - On failure, responds with [`SdkError<ListResourceServersError>`](crate::operation::list_resource_servers::ListResourceServersError)
    pub fn list_resource_servers(
        &self,
    ) -> crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder {
        crate::operation::list_resource_servers::builders::ListResourceServersFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
