// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateSoftwareToken`](crate::operation::associate_software_token::builders::AssociateSoftwareTokenFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_token(impl Into<String>)`](crate::operation::associate_software_token::builders::AssociateSoftwareTokenFluentBuilder::access_token) / [`set_access_token(Option<String>)`](crate::operation::associate_software_token::builders::AssociateSoftwareTokenFluentBuilder::set_access_token):<br>required: **false**<br><p>A valid access token that Amazon Cognito issued to the user whose software token you want to generate.</p><br>
    ///   - [`session(impl Into<String>)`](crate::operation::associate_software_token::builders::AssociateSoftwareTokenFluentBuilder::session) / [`set_session(Option<String>)`](crate::operation::associate_software_token::builders::AssociateSoftwareTokenFluentBuilder::set_session):<br>required: **false**<br><p>The session that should be passed both ways in challenge-response calls to the service. This allows authentication of the user as part of the MFA setup process.</p><br>
    /// - On success, responds with [`AssociateSoftwareTokenOutput`](crate::operation::associate_software_token::AssociateSoftwareTokenOutput) with field(s):
    ///   - [`secret_code(Option<String>)`](crate::operation::associate_software_token::AssociateSoftwareTokenOutput::secret_code): <p>A unique generated shared secret code that is used in the TOTP algorithm to generate a one-time code.</p>
    ///   - [`session(Option<String>)`](crate::operation::associate_software_token::AssociateSoftwareTokenOutput::session): <p>The session that should be passed both ways in challenge-response calls to the service. This allows authentication of the user as part of the MFA setup process.</p>
    /// - On failure, responds with [`SdkError<AssociateSoftwareTokenError>`](crate::operation::associate_software_token::AssociateSoftwareTokenError)
    pub fn associate_software_token(&self) -> crate::operation::associate_software_token::builders::AssociateSoftwareTokenFluentBuilder {
        crate::operation::associate_software_token::builders::AssociateSoftwareTokenFluentBuilder::new(self.handle.clone())
    }
}
