// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AdminSetUserSettings`](crate::client::fluent_builders::AdminSetUserSettings) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::client::fluent_builders::AdminSetUserSettings::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::client::fluent_builders::AdminSetUserSettings::set_user_pool_id): <p>The ID of the user pool that contains the user whose options you're setting.</p>
    ///   - [`username(impl Into<String>)`](crate::client::fluent_builders::AdminSetUserSettings::username) / [`set_username(Option<String>)`](crate::client::fluent_builders::AdminSetUserSettings::set_username): <p>The user name of the user whose options you're setting.</p>
    ///   - [`mfa_options(Vec<MfaOptionType>)`](crate::client::fluent_builders::AdminSetUserSettings::mfa_options) / [`set_mfa_options(Option<Vec<MfaOptionType>>)`](crate::client::fluent_builders::AdminSetUserSettings::set_mfa_options): <p>You can use this parameter only to set an SMS configuration that uses SMS for delivery.</p>
    /// - On success, responds with [`AdminSetUserSettingsOutput`](crate::output::AdminSetUserSettingsOutput)
    /// - On failure, responds with [`SdkError<AdminSetUserSettingsError>`](crate::error::AdminSetUserSettingsError)
    pub fn admin_set_user_settings(&self) -> crate::client::fluent_builders::AdminSetUserSettings {
        crate::client::fluent_builders::AdminSetUserSettings::new(self.handle.clone())
    }
}
