// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AdminDeleteUserAttributes`](crate::client::fluent_builders::AdminDeleteUserAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::client::fluent_builders::AdminDeleteUserAttributes::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::client::fluent_builders::AdminDeleteUserAttributes::set_user_pool_id): <p>The user pool ID for the user pool where you want to delete user attributes.</p>
    ///   - [`username(impl Into<String>)`](crate::client::fluent_builders::AdminDeleteUserAttributes::username) / [`set_username(Option<String>)`](crate::client::fluent_builders::AdminDeleteUserAttributes::set_username): <p>The user name of the user from which you would like to delete attributes.</p>
    ///   - [`user_attribute_names(Vec<String>)`](crate::client::fluent_builders::AdminDeleteUserAttributes::user_attribute_names) / [`set_user_attribute_names(Option<Vec<String>>)`](crate::client::fluent_builders::AdminDeleteUserAttributes::set_user_attribute_names): <p>An array of strings representing the user attribute names you want to delete.</p>  <p>For custom attributes, you must prepend the <code>custom:</code> prefix to the attribute name.</p>
    /// - On success, responds with [`AdminDeleteUserAttributesOutput`](crate::output::AdminDeleteUserAttributesOutput)
    /// - On failure, responds with [`SdkError<AdminDeleteUserAttributesError>`](crate::error::AdminDeleteUserAttributesError)
    pub fn admin_delete_user_attributes(
        &self,
    ) -> crate::client::fluent_builders::AdminDeleteUserAttributes {
        crate::client::fluent_builders::AdminDeleteUserAttributes::new(self.handle.clone())
    }
}
