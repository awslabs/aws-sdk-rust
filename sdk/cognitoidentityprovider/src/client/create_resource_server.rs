// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateResourceServer`](crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The user pool ID for the user pool.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder::set_identifier):<br>required: **true**<br><p>A unique resource server identifier for the resource server. This could be an HTTPS endpoint where the resource server is located, such as <code>https://my-weather-api.example.com</code>.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder::set_name):<br>required: **true**<br><p>A friendly name for the resource server.</p><br>
    ///   - [`scopes(ResourceServerScopeType)`](crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder::scopes) / [`set_scopes(Option<Vec::<ResourceServerScopeType>>)`](crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder::set_scopes):<br>required: **false**<br><p>A list of scopes. Each scope is a key-value map with the keys <code>name</code> and <code>description</code>.</p><br>
    /// - On success, responds with [`CreateResourceServerOutput`](crate::operation::create_resource_server::CreateResourceServerOutput) with field(s):
    ///   - [`resource_server(Option<ResourceServerType>)`](crate::operation::create_resource_server::CreateResourceServerOutput::resource_server): <p>The newly created resource server.</p>
    /// - On failure, responds with [`SdkError<CreateResourceServerError>`](crate::operation::create_resource_server::CreateResourceServerError)
    pub fn create_resource_server(&self) -> crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder {
        crate::operation::create_resource_server::builders::CreateResourceServerFluentBuilder::new(self.handle.clone())
    }
}
