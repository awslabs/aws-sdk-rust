// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`VerifySoftwareToken`](crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_token(impl Into<String>)`](crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder::access_token) / [`set_access_token(Option<String>)`](crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder::set_access_token):<br>required: **false**<br><p>A valid access token that Amazon Cognito issued to the user whose software token you want to verify.</p><br>
    ///   - [`session(impl Into<String>)`](crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder::session) / [`set_session(Option<String>)`](crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder::set_session):<br>required: **false**<br><p>The session that should be passed both ways in challenge-response calls to the service.</p><br>
    ///   - [`user_code(impl Into<String>)`](crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder::user_code) / [`set_user_code(Option<String>)`](crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder::set_user_code):<br>required: **true**<br><p>The one- time password computed using the secret code returned by <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AssociateSoftwareToken.html">AssociateSoftwareToken</a>.</p><br>
    ///   - [`friendly_device_name(impl Into<String>)`](crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder::friendly_device_name) / [`set_friendly_device_name(Option<String>)`](crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder::set_friendly_device_name):<br>required: **false**<br><p>The friendly device name.</p><br>
    /// - On success, responds with [`VerifySoftwareTokenOutput`](crate::operation::verify_software_token::VerifySoftwareTokenOutput) with field(s):
    ///   - [`status(Option<VerifySoftwareTokenResponseType>)`](crate::operation::verify_software_token::VerifySoftwareTokenOutput::status): <p>The status of the verify software token.</p>
    ///   - [`session(Option<String>)`](crate::operation::verify_software_token::VerifySoftwareTokenOutput::session): <p>The session that should be passed both ways in challenge-response calls to the service.</p>
    /// - On failure, responds with [`SdkError<VerifySoftwareTokenError>`](crate::operation::verify_software_token::VerifySoftwareTokenError)
    pub fn verify_software_token(&self) -> crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder {
        crate::operation::verify_software_token::builders::VerifySoftwareTokenFluentBuilder::new(self.handle.clone())
    }
}
