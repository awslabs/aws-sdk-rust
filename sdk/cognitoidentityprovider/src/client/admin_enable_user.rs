// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AdminEnableUser`](crate::operation::admin_enable_user::builders::AdminEnableUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::admin_enable_user::builders::AdminEnableUserFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::admin_enable_user::builders::AdminEnableUserFluentBuilder::set_user_pool_id): <p>The user pool ID for the user pool where you want to enable the user.</p>
    ///   - [`username(impl Into<String>)`](crate::operation::admin_enable_user::builders::AdminEnableUserFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::admin_enable_user::builders::AdminEnableUserFluentBuilder::set_username): <p>The user name of the user you want to enable.</p>
    /// - On success, responds with [`AdminEnableUserOutput`](crate::operation::admin_enable_user::AdminEnableUserOutput)
    /// - On failure, responds with [`SdkError<AdminEnableUserError>`](crate::operation::admin_enable_user::AdminEnableUserError)
    pub fn admin_enable_user(
        &self,
    ) -> crate::operation::admin_enable_user::builders::AdminEnableUserFluentBuilder {
        crate::operation::admin_enable_user::builders::AdminEnableUserFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
