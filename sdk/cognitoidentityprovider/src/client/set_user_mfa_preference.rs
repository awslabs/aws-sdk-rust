// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetUserMFAPreference`](crate::client::fluent_builders::SetUserMFAPreference) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sms_mfa_settings(SmsMfaSettingsType)`](crate::client::fluent_builders::SetUserMFAPreference::sms_mfa_settings) / [`set_sms_mfa_settings(Option<SmsMfaSettingsType>)`](crate::client::fluent_builders::SetUserMFAPreference::set_sms_mfa_settings): <p>The SMS text message multi-factor authentication (MFA) settings.</p>
    ///   - [`software_token_mfa_settings(SoftwareTokenMfaSettingsType)`](crate::client::fluent_builders::SetUserMFAPreference::software_token_mfa_settings) / [`set_software_token_mfa_settings(Option<SoftwareTokenMfaSettingsType>)`](crate::client::fluent_builders::SetUserMFAPreference::set_software_token_mfa_settings): <p>The time-based one-time password (TOTP) software token MFA settings.</p>
    ///   - [`access_token(impl Into<String>)`](crate::client::fluent_builders::SetUserMFAPreference::access_token) / [`set_access_token(Option<String>)`](crate::client::fluent_builders::SetUserMFAPreference::set_access_token): <p>A valid access token that Amazon Cognito issued to the user whose MFA preference you want to set.</p>
    /// - On success, responds with [`SetUserMfaPreferenceOutput`](crate::output::SetUserMfaPreferenceOutput)
    /// - On failure, responds with [`SdkError<SetUserMFAPreferenceError>`](crate::error::SetUserMFAPreferenceError)
    pub fn set_user_mfa_preference(&self) -> crate::client::fluent_builders::SetUserMFAPreference {
        crate::client::fluent_builders::SetUserMFAPreference::new(self.handle.clone())
    }
}
