// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ChangePassword`](crate::client::fluent_builders::ChangePassword) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`previous_password(impl Into<String>)`](crate::client::fluent_builders::ChangePassword::previous_password) / [`set_previous_password(Option<String>)`](crate::client::fluent_builders::ChangePassword::set_previous_password): <p>The old password.</p>
    ///   - [`proposed_password(impl Into<String>)`](crate::client::fluent_builders::ChangePassword::proposed_password) / [`set_proposed_password(Option<String>)`](crate::client::fluent_builders::ChangePassword::set_proposed_password): <p>The new password.</p>
    ///   - [`access_token(impl Into<String>)`](crate::client::fluent_builders::ChangePassword::access_token) / [`set_access_token(Option<String>)`](crate::client::fluent_builders::ChangePassword::set_access_token): <p>A valid access token that Amazon Cognito issued to the user whose password you want to change.</p>
    /// - On success, responds with [`ChangePasswordOutput`](crate::output::ChangePasswordOutput)
    /// - On failure, responds with [`SdkError<ChangePasswordError>`](crate::error::ChangePasswordError)
    pub fn change_password(&self) -> crate::client::fluent_builders::ChangePassword {
        crate::client::fluent_builders::ChangePassword::new(self.handle.clone())
    }
}
