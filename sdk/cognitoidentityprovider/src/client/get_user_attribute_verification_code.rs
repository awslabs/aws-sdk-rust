// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetUserAttributeVerificationCode`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_token(impl Into<String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::access_token) / [`set_access_token(Option<String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::set_access_token): <p>A non-expired access token for the user whose attribute verification code you want to generate.</p>
    ///   - [`attribute_name(impl Into<String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::attribute_name) / [`set_attribute_name(Option<String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::set_attribute_name): <p>The attribute name returned by the server response to get the user attribute verification code.</p>
    ///   - [`client_metadata(HashMap<String, String>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::client_metadata) / [`set_client_metadata(Option<HashMap<String, String>>)`](crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::set_client_metadata): <p>A map of custom key-value pairs that you can provide as input for any custom workflows that this action triggers.</p>  <p>You create custom workflows by assigning Lambda functions to user pool triggers. When you use the GetUserAttributeVerificationCode API action, Amazon Cognito invokes the function that is assigned to the <i>custom message</i> trigger. When Amazon Cognito invokes this function, it passes a JSON payload, which the function receives as input. This payload contains a <code>clientMetadata</code> attribute, which provides the data that you assigned to the ClientMetadata parameter in your GetUserAttributeVerificationCode request. In your function code in Lambda, you can process the <code>clientMetadata</code> value to enhance your workflow for your specific needs.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html"> Customizing user pool Workflows with Lambda Triggers</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <note>   <p>When you use the ClientMetadata parameter, remember that Amazon Cognito won't do the following:</p>   <ul>    <li> <p>Store the ClientMetadata value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration doesn't include triggers, the ClientMetadata parameter serves no purpose.</p> </li>    <li> <p>Validate the ClientMetadata value.</p> </li>    <li> <p>Encrypt the ClientMetadata value. Don't use Amazon Cognito to provide sensitive information.</p> </li>   </ul>  </note>
    /// - On success, responds with [`GetUserAttributeVerificationCodeOutput`](crate::operation::get_user_attribute_verification_code::GetUserAttributeVerificationCodeOutput) with field(s):
    ///   - [`code_delivery_details(Option<CodeDeliveryDetailsType>)`](crate::operation::get_user_attribute_verification_code::GetUserAttributeVerificationCodeOutput::code_delivery_details): <p>The code delivery details returned by the server in response to the request to get the user attribute verification code.</p>
    /// - On failure, responds with [`SdkError<GetUserAttributeVerificationCodeError>`](crate::operation::get_user_attribute_verification_code::GetUserAttributeVerificationCodeError)
    pub fn get_user_attribute_verification_code(&self) -> crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder{
        crate::operation::get_user_attribute_verification_code::builders::GetUserAttributeVerificationCodeFluentBuilder::new(self.handle.clone())
    }
}
