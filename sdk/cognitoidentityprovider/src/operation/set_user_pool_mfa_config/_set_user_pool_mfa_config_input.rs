// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SetUserPoolMfaConfigInput {
    /// <p>The user pool ID.</p>
    #[doc(hidden)]
    pub user_pool_id: std::option::Option<std::string::String>,
    /// <p>The SMS text message MFA configuration.</p>
    #[doc(hidden)]
    pub sms_mfa_configuration: std::option::Option<crate::types::SmsMfaConfigType>,
    /// <p>The software token MFA configuration.</p>
    #[doc(hidden)]
    pub software_token_mfa_configuration:
        std::option::Option<crate::types::SoftwareTokenMfaConfigType>,
    /// <p>The MFA configuration. If you set the MfaConfiguration value to ‘ON’, only users who have set up an MFA factor can sign in. To learn more, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html">Adding Multi-Factor Authentication (MFA) to a user pool</a>. Valid values include:</p>
    /// <ul>
    /// <li> <p> <code>OFF</code> MFA won't be used for any users.</p> </li>
    /// <li> <p> <code>ON</code> MFA is required for all users to sign in.</p> </li>
    /// <li> <p> <code>OPTIONAL</code> MFA will be required only for individual users who have an MFA factor activated.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub mfa_configuration: std::option::Option<crate::types::UserPoolMfaType>,
}
impl SetUserPoolMfaConfigInput {
    /// <p>The user pool ID.</p>
    pub fn user_pool_id(&self) -> std::option::Option<&str> {
        self.user_pool_id.as_deref()
    }
    /// <p>The SMS text message MFA configuration.</p>
    pub fn sms_mfa_configuration(&self) -> std::option::Option<&crate::types::SmsMfaConfigType> {
        self.sms_mfa_configuration.as_ref()
    }
    /// <p>The software token MFA configuration.</p>
    pub fn software_token_mfa_configuration(
        &self,
    ) -> std::option::Option<&crate::types::SoftwareTokenMfaConfigType> {
        self.software_token_mfa_configuration.as_ref()
    }
    /// <p>The MFA configuration. If you set the MfaConfiguration value to ‘ON’, only users who have set up an MFA factor can sign in. To learn more, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html">Adding Multi-Factor Authentication (MFA) to a user pool</a>. Valid values include:</p>
    /// <ul>
    /// <li> <p> <code>OFF</code> MFA won't be used for any users.</p> </li>
    /// <li> <p> <code>ON</code> MFA is required for all users to sign in.</p> </li>
    /// <li> <p> <code>OPTIONAL</code> MFA will be required only for individual users who have an MFA factor activated.</p> </li>
    /// </ul>
    pub fn mfa_configuration(&self) -> std::option::Option<&crate::types::UserPoolMfaType> {
        self.mfa_configuration.as_ref()
    }
}
impl SetUserPoolMfaConfigInput {
    /// Creates a new builder-style object to manufacture [`SetUserPoolMfaConfigInput`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigInput).
    pub fn builder(
    ) -> crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigInputBuilder
    {
        crate::operation::set_user_pool_mfa_config::builders::SetUserPoolMfaConfigInputBuilder::default()
    }
}

/// A builder for [`SetUserPoolMfaConfigInput`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SetUserPoolMfaConfigInputBuilder {
    pub(crate) user_pool_id: std::option::Option<std::string::String>,
    pub(crate) sms_mfa_configuration: std::option::Option<crate::types::SmsMfaConfigType>,
    pub(crate) software_token_mfa_configuration:
        std::option::Option<crate::types::SoftwareTokenMfaConfigType>,
    pub(crate) mfa_configuration: std::option::Option<crate::types::UserPoolMfaType>,
}
impl SetUserPoolMfaConfigInputBuilder {
    /// <p>The user pool ID.</p>
    pub fn user_pool_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.user_pool_id = Some(input.into());
        self
    }
    /// <p>The user pool ID.</p>
    pub fn set_user_pool_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.user_pool_id = input;
        self
    }
    /// <p>The SMS text message MFA configuration.</p>
    pub fn sms_mfa_configuration(mut self, input: crate::types::SmsMfaConfigType) -> Self {
        self.sms_mfa_configuration = Some(input);
        self
    }
    /// <p>The SMS text message MFA configuration.</p>
    pub fn set_sms_mfa_configuration(
        mut self,
        input: std::option::Option<crate::types::SmsMfaConfigType>,
    ) -> Self {
        self.sms_mfa_configuration = input;
        self
    }
    /// <p>The software token MFA configuration.</p>
    pub fn software_token_mfa_configuration(
        mut self,
        input: crate::types::SoftwareTokenMfaConfigType,
    ) -> Self {
        self.software_token_mfa_configuration = Some(input);
        self
    }
    /// <p>The software token MFA configuration.</p>
    pub fn set_software_token_mfa_configuration(
        mut self,
        input: std::option::Option<crate::types::SoftwareTokenMfaConfigType>,
    ) -> Self {
        self.software_token_mfa_configuration = input;
        self
    }
    /// <p>The MFA configuration. If you set the MfaConfiguration value to ‘ON’, only users who have set up an MFA factor can sign in. To learn more, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html">Adding Multi-Factor Authentication (MFA) to a user pool</a>. Valid values include:</p>
    /// <ul>
    /// <li> <p> <code>OFF</code> MFA won't be used for any users.</p> </li>
    /// <li> <p> <code>ON</code> MFA is required for all users to sign in.</p> </li>
    /// <li> <p> <code>OPTIONAL</code> MFA will be required only for individual users who have an MFA factor activated.</p> </li>
    /// </ul>
    pub fn mfa_configuration(mut self, input: crate::types::UserPoolMfaType) -> Self {
        self.mfa_configuration = Some(input);
        self
    }
    /// <p>The MFA configuration. If you set the MfaConfiguration value to ‘ON’, only users who have set up an MFA factor can sign in. To learn more, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html">Adding Multi-Factor Authentication (MFA) to a user pool</a>. Valid values include:</p>
    /// <ul>
    /// <li> <p> <code>OFF</code> MFA won't be used for any users.</p> </li>
    /// <li> <p> <code>ON</code> MFA is required for all users to sign in.</p> </li>
    /// <li> <p> <code>OPTIONAL</code> MFA will be required only for individual users who have an MFA factor activated.</p> </li>
    /// </ul>
    pub fn set_mfa_configuration(
        mut self,
        input: std::option::Option<crate::types::UserPoolMfaType>,
    ) -> Self {
        self.mfa_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`SetUserPoolMfaConfigInput`](crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::set_user_pool_mfa_config::SetUserPoolMfaConfigInput {
                user_pool_id: self.user_pool_id,
                sms_mfa_configuration: self.sms_mfa_configuration,
                software_token_mfa_configuration: self.software_token_mfa_configuration,
                mfa_configuration: self.mfa_configuration,
            },
        )
    }
}
