// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the request to delete a user pool client.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct DeleteUserPoolClientInput {
    /// <p>The user pool ID for the user pool where you want to delete the client.</p>
    #[doc(hidden)]
    pub user_pool_id: std::option::Option<std::string::String>,
    /// <p>The app client ID of the app associated with the user pool.</p>
    #[doc(hidden)]
    pub client_id: std::option::Option<std::string::String>,
}
impl DeleteUserPoolClientInput {
    /// <p>The user pool ID for the user pool where you want to delete the client.</p>
    pub fn user_pool_id(&self) -> std::option::Option<&str> {
        self.user_pool_id.as_deref()
    }
    /// <p>The app client ID of the app associated with the user pool.</p>
    pub fn client_id(&self) -> std::option::Option<&str> {
        self.client_id.as_deref()
    }
}
impl std::fmt::Debug for DeleteUserPoolClientInput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("DeleteUserPoolClientInput");
        formatter.field("user_pool_id", &self.user_pool_id);
        formatter.field("client_id", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl DeleteUserPoolClientInput {
    /// Creates a new builder-style object to manufacture [`DeleteUserPoolClientInput`](crate::operation::delete_user_pool_client::DeleteUserPoolClientInput).
    pub fn builder(
    ) -> crate::operation::delete_user_pool_client::builders::DeleteUserPoolClientInputBuilder {
        crate::operation::delete_user_pool_client::builders::DeleteUserPoolClientInputBuilder::default()
    }
}

/// A builder for [`DeleteUserPoolClientInput`](crate::operation::delete_user_pool_client::DeleteUserPoolClientInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct DeleteUserPoolClientInputBuilder {
    pub(crate) user_pool_id: std::option::Option<std::string::String>,
    pub(crate) client_id: std::option::Option<std::string::String>,
}
impl DeleteUserPoolClientInputBuilder {
    /// <p>The user pool ID for the user pool where you want to delete the client.</p>
    pub fn user_pool_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.user_pool_id = Some(input.into());
        self
    }
    /// <p>The user pool ID for the user pool where you want to delete the client.</p>
    pub fn set_user_pool_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.user_pool_id = input;
        self
    }
    /// <p>The app client ID of the app associated with the user pool.</p>
    pub fn client_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_id = Some(input.into());
        self
    }
    /// <p>The app client ID of the app associated with the user pool.</p>
    pub fn set_client_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteUserPoolClientInput`](crate::operation::delete_user_pool_client::DeleteUserPoolClientInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_user_pool_client::DeleteUserPoolClientInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_user_pool_client::DeleteUserPoolClientInput {
                user_pool_id: self.user_pool_id,
                client_id: self.client_id,
            },
        )
    }
}
impl std::fmt::Debug for DeleteUserPoolClientInputBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("DeleteUserPoolClientInputBuilder");
        formatter.field("user_pool_id", &self.user_pool_id);
        formatter.field("client_id", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
