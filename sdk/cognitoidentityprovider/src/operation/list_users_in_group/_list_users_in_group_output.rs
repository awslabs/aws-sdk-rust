// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListUsersInGroupOutput {
    /// <p>The users returned in the request to list users.</p>
    #[doc(hidden)]
    pub users: std::option::Option<std::vec::Vec<crate::types::UserType>>,
    /// <p>An identifier that you can use in a later request to return the next set of items in the list.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListUsersInGroupOutput {
    /// <p>The users returned in the request to list users.</p>
    pub fn users(&self) -> std::option::Option<&[crate::types::UserType]> {
        self.users.as_deref()
    }
    /// <p>An identifier that you can use in a later request to return the next set of items in the list.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListUsersInGroupOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListUsersInGroupOutput {
    /// Creates a new builder-style object to manufacture [`ListUsersInGroupOutput`](crate::operation::list_users_in_group::ListUsersInGroupOutput).
    pub fn builder(
    ) -> crate::operation::list_users_in_group::builders::ListUsersInGroupOutputBuilder {
        crate::operation::list_users_in_group::builders::ListUsersInGroupOutputBuilder::default()
    }
}

/// A builder for [`ListUsersInGroupOutput`](crate::operation::list_users_in_group::ListUsersInGroupOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListUsersInGroupOutputBuilder {
    pub(crate) users: std::option::Option<std::vec::Vec<crate::types::UserType>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListUsersInGroupOutputBuilder {
    /// Appends an item to `users`.
    ///
    /// To override the contents of this collection use [`set_users`](Self::set_users).
    ///
    /// <p>The users returned in the request to list users.</p>
    pub fn users(mut self, input: crate::types::UserType) -> Self {
        let mut v = self.users.unwrap_or_default();
        v.push(input);
        self.users = Some(v);
        self
    }
    /// <p>The users returned in the request to list users.</p>
    pub fn set_users(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::UserType>>,
    ) -> Self {
        self.users = input;
        self
    }
    /// <p>An identifier that you can use in a later request to return the next set of items in the list.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>An identifier that you can use in a later request to return the next set of items in the list.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListUsersInGroupOutput`](crate::operation::list_users_in_group::ListUsersInGroupOutput).
    pub fn build(self) -> crate::operation::list_users_in_group::ListUsersInGroupOutput {
        crate::operation::list_users_in_group::ListUsersInGroupOutput {
            users: self.users,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
