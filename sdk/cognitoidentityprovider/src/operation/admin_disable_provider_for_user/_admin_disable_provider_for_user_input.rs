// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AdminDisableProviderForUserInput {
    /// <p>The user pool ID for the user pool.</p>
    #[doc(hidden)]
    pub user_pool_id: std::option::Option<std::string::String>,
    /// <p>The user to be disabled.</p>
    #[doc(hidden)]
    pub user: std::option::Option<crate::types::ProviderUserIdentifierType>,
}
impl AdminDisableProviderForUserInput {
    /// <p>The user pool ID for the user pool.</p>
    pub fn user_pool_id(&self) -> std::option::Option<&str> {
        self.user_pool_id.as_deref()
    }
    /// <p>The user to be disabled.</p>
    pub fn user(&self) -> std::option::Option<&crate::types::ProviderUserIdentifierType> {
        self.user.as_ref()
    }
}
impl AdminDisableProviderForUserInput {
    /// Creates a new builder-style object to manufacture [`AdminDisableProviderForUserInput`](crate::operation::admin_disable_provider_for_user::AdminDisableProviderForUserInput).
    pub fn builder() -> crate::operation::admin_disable_provider_for_user::builders::AdminDisableProviderForUserInputBuilder{
        crate::operation::admin_disable_provider_for_user::builders::AdminDisableProviderForUserInputBuilder::default()
    }
}

/// A builder for [`AdminDisableProviderForUserInput`](crate::operation::admin_disable_provider_for_user::AdminDisableProviderForUserInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AdminDisableProviderForUserInputBuilder {
    pub(crate) user_pool_id: std::option::Option<std::string::String>,
    pub(crate) user: std::option::Option<crate::types::ProviderUserIdentifierType>,
}
impl AdminDisableProviderForUserInputBuilder {
    /// <p>The user pool ID for the user pool.</p>
    pub fn user_pool_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.user_pool_id = Some(input.into());
        self
    }
    /// <p>The user pool ID for the user pool.</p>
    pub fn set_user_pool_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.user_pool_id = input;
        self
    }
    /// <p>The user to be disabled.</p>
    pub fn user(mut self, input: crate::types::ProviderUserIdentifierType) -> Self {
        self.user = Some(input);
        self
    }
    /// <p>The user to be disabled.</p>
    pub fn set_user(
        mut self,
        input: std::option::Option<crate::types::ProviderUserIdentifierType>,
    ) -> Self {
        self.user = input;
        self
    }
    /// Consumes the builder and constructs a [`AdminDisableProviderForUserInput`](crate::operation::admin_disable_provider_for_user::AdminDisableProviderForUserInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::admin_disable_provider_for_user::AdminDisableProviderForUserInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::admin_disable_provider_for_user::AdminDisableProviderForUserInput {
                user_pool_id: self.user_pool_id,
                user: self.user,
            },
        )
    }
}
