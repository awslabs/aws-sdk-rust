// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_admin_create_user_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::admin_create_user::AdminCreateUserInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.user_pool_id {
        object.key("UserPoolId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.username {
        object.key("Username").string(var_2.as_str());
    }
    if let Some(var_3) = &input.user_attributes {
        let mut array_4 = object.key("UserAttributes").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_attribute_type::ser_attribute_type(
                    &mut object_6,
                    item_5,
                )?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if let Some(var_7) = &input.validation_data {
        let mut array_8 = object.key("ValidationData").start_array();
        for item_9 in var_7 {
            {
                #[allow(unused_mut)]
                let mut object_10 = array_8.value().start_object();
                crate::protocol_serde::shape_attribute_type::ser_attribute_type(
                    &mut object_10,
                    item_9,
                )?;
                object_10.finish();
            }
        }
        array_8.finish();
    }
    if let Some(var_11) = &input.temporary_password {
        object.key("TemporaryPassword").string(var_11.as_str());
    }
    if input.force_alias_creation {
        object
            .key("ForceAliasCreation")
            .boolean(input.force_alias_creation);
    }
    if let Some(var_12) = &input.message_action {
        object.key("MessageAction").string(var_12.as_str());
    }
    if let Some(var_13) = &input.desired_delivery_mediums {
        let mut array_14 = object.key("DesiredDeliveryMediums").start_array();
        for item_15 in var_13 {
            {
                array_14.value().string(item_15.as_str());
            }
        }
        array_14.finish();
    }
    if let Some(var_16) = &input.client_metadata {
        #[allow(unused_mut)]
        let mut object_17 = object.key("ClientMetadata").start_object();
        for (key_18, value_19) in var_16 {
            {
                object_17.key(key_18.as_str()).string(value_19.as_str());
            }
        }
        object_17.finish();
    }
    Ok(())
}
