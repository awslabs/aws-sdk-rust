// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_admin_initiate_auth_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::admin_initiate_auth::AdminInitiateAuthInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.user_pool_id {
        object.key("UserPoolId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.client_id {
        object.key("ClientId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.auth_flow {
        object.key("AuthFlow").string(var_3.as_str());
    }
    if let Some(var_4) = &input.auth_parameters {
        #[allow(unused_mut)]
        let mut object_5 = object.key("AuthParameters").start_object();
        for (key_6, value_7) in var_4 {
            {
                object_5.key(key_6.as_str()).string(value_7.as_str());
            }
        }
        object_5.finish();
    }
    if let Some(var_8) = &input.client_metadata {
        #[allow(unused_mut)]
        let mut object_9 = object.key("ClientMetadata").start_object();
        for (key_10, value_11) in var_8 {
            {
                object_9.key(key_10.as_str()).string(value_11.as_str());
            }
        }
        object_9.finish();
    }
    if let Some(var_12) = &input.analytics_metadata {
        #[allow(unused_mut)]
        let mut object_13 = object.key("AnalyticsMetadata").start_object();
        crate::protocol_serde::shape_analytics_metadata_type::ser_analytics_metadata_type(
            &mut object_13,
            var_12,
        )?;
        object_13.finish();
    }
    if let Some(var_14) = &input.context_data {
        #[allow(unused_mut)]
        let mut object_15 = object.key("ContextData").start_object();
        crate::protocol_serde::shape_context_data_type::ser_context_data_type(
            &mut object_15,
            var_14,
        )?;
        object_15.finish();
    }
    Ok(())
}
