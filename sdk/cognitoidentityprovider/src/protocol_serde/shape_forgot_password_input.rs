// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_forgot_password_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::forgot_password::ForgotPasswordInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.client_id {
        object.key("ClientId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.secret_hash {
        object.key("SecretHash").string(var_2.as_str());
    }
    if let Some(var_3) = &input.user_context_data {
        #[allow(unused_mut)]
        let mut object_4 = object.key("UserContextData").start_object();
        crate::protocol_serde::shape_user_context_data_type::ser_user_context_data_type(
            &mut object_4,
            var_3,
        )?;
        object_4.finish();
    }
    if let Some(var_5) = &input.username {
        object.key("Username").string(var_5.as_str());
    }
    if let Some(var_6) = &input.analytics_metadata {
        #[allow(unused_mut)]
        let mut object_7 = object.key("AnalyticsMetadata").start_object();
        crate::protocol_serde::shape_analytics_metadata_type::ser_analytics_metadata_type(
            &mut object_7,
            var_6,
        )?;
        object_7.finish();
    }
    if let Some(var_8) = &input.client_metadata {
        #[allow(unused_mut)]
        let mut object_9 = object.key("ClientMetadata").start_object();
        for (key_10, value_11) in var_8 {
            {
                object_9.key(key_10.as_str()).string(value_11.as_str());
            }
        }
        object_9.finish();
    }
    Ok(())
}
