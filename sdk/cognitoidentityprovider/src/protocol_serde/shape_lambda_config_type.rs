// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_lambda_config_type(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::LambdaConfigType,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.pre_sign_up {
        object.key("PreSignUp").string(var_1.as_str());
    }
    if let Some(var_2) = &input.custom_message {
        object.key("CustomMessage").string(var_2.as_str());
    }
    if let Some(var_3) = &input.post_confirmation {
        object.key("PostConfirmation").string(var_3.as_str());
    }
    if let Some(var_4) = &input.pre_authentication {
        object.key("PreAuthentication").string(var_4.as_str());
    }
    if let Some(var_5) = &input.post_authentication {
        object.key("PostAuthentication").string(var_5.as_str());
    }
    if let Some(var_6) = &input.define_auth_challenge {
        object.key("DefineAuthChallenge").string(var_6.as_str());
    }
    if let Some(var_7) = &input.create_auth_challenge {
        object.key("CreateAuthChallenge").string(var_7.as_str());
    }
    if let Some(var_8) = &input.verify_auth_challenge_response {
        object
            .key("VerifyAuthChallengeResponse")
            .string(var_8.as_str());
    }
    if let Some(var_9) = &input.pre_token_generation {
        object.key("PreTokenGeneration").string(var_9.as_str());
    }
    if let Some(var_10) = &input.user_migration {
        object.key("UserMigration").string(var_10.as_str());
    }
    if let Some(var_11) = &input.custom_sms_sender {
        #[allow(unused_mut)]
        let mut object_12 = object.key("CustomSMSSender").start_object();
        crate::protocol_serde::shape_custom_sms_lambda_version_config_type::ser_custom_sms_lambda_version_config_type(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.custom_email_sender {
        #[allow(unused_mut)]
        let mut object_14 = object.key("CustomEmailSender").start_object();
        crate::protocol_serde::shape_custom_email_lambda_version_config_type::ser_custom_email_lambda_version_config_type(&mut object_14, var_13)?;
        object_14.finish();
    }
    if let Some(var_15) = &input.kms_key_id {
        object.key("KMSKeyID").string(var_15.as_str());
    }
    Ok(())
}

pub(crate) fn de_lambda_config_type<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::LambdaConfigType>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::LambdaConfigTypeBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "PreSignUp" => {
                                builder = builder.set_pre_sign_up(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "CustomMessage" => {
                                builder = builder.set_custom_message(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "PostConfirmation" => {
                                builder = builder.set_post_confirmation(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "PreAuthentication" => {
                                builder = builder.set_pre_authentication(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "PostAuthentication" => {
                                builder = builder.set_post_authentication(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "DefineAuthChallenge" => {
                                builder = builder.set_define_auth_challenge(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "CreateAuthChallenge" => {
                                builder = builder.set_create_auth_challenge(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "VerifyAuthChallengeResponse" => {
                                builder = builder.set_verify_auth_challenge_response(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "PreTokenGeneration" => {
                                builder = builder.set_pre_token_generation(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "UserMigration" => {
                                builder = builder.set_user_migration(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "CustomSMSSender" => {
                                builder = builder.set_custom_sms_sender(
                                    crate::protocol_serde::shape_custom_sms_lambda_version_config_type::de_custom_sms_lambda_version_config_type(tokens)?
                                );
                            }
                            "CustomEmailSender" => {
                                builder = builder.set_custom_email_sender(
                                    crate::protocol_serde::shape_custom_email_lambda_version_config_type::de_custom_email_lambda_version_config_type(tokens)?
                                );
                            }
                            "KMSKeyID" => {
                                builder = builder.set_kms_key_id(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
