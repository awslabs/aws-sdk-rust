// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_set_risk_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::set_risk_configuration::SetRiskConfigurationInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.user_pool_id {
        object.key("UserPoolId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.client_id {
        object.key("ClientId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.compromised_credentials_risk_configuration {
        #[allow(unused_mut)]
        let mut object_4 = object
            .key("CompromisedCredentialsRiskConfiguration")
            .start_object();
        crate::protocol_serde::shape_compromised_credentials_risk_configuration_type::ser_compromised_credentials_risk_configuration_type(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.account_takeover_risk_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object
            .key("AccountTakeoverRiskConfiguration")
            .start_object();
        crate::protocol_serde::shape_account_takeover_risk_configuration_type::ser_account_takeover_risk_configuration_type(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.risk_exception_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("RiskExceptionConfiguration").start_object();
        crate::protocol_serde::shape_risk_exception_configuration_type::ser_risk_exception_configuration_type(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
