// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct CreateAgentRuntimeEndpointOutput {
    /// <p>The target version of the AgentCore Runtime for the endpoint.</p>
    pub target_version: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime endpoint.</p>
    pub agent_runtime_endpoint_arn: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime.</p>
    pub agent_runtime_arn: ::std::string::String,
    /// <p>The unique identifier of the AgentCore Runtime.</p>
    pub agent_runtime_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the AgentCore Runtime endpoint.</p>
    pub endpoint_name: ::std::option::Option<::std::string::String>,
    /// <p>The current status of the AgentCore Runtime endpoint.</p>
    pub status: crate::types::AgentRuntimeEndpointStatus,
    /// <p>The timestamp when the AgentCore Runtime endpoint was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    _request_id: Option<String>,
}
impl CreateAgentRuntimeEndpointOutput {
    /// <p>The target version of the AgentCore Runtime for the endpoint.</p>
    pub fn target_version(&self) -> &str {
        use std::ops::Deref;
        self.target_version.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime endpoint.</p>
    pub fn agent_runtime_endpoint_arn(&self) -> &str {
        use std::ops::Deref;
        self.agent_runtime_endpoint_arn.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime.</p>
    pub fn agent_runtime_arn(&self) -> &str {
        use std::ops::Deref;
        self.agent_runtime_arn.deref()
    }
    /// <p>The unique identifier of the AgentCore Runtime.</p>
    pub fn agent_runtime_id(&self) -> ::std::option::Option<&str> {
        self.agent_runtime_id.as_deref()
    }
    /// <p>The name of the AgentCore Runtime endpoint.</p>
    pub fn endpoint_name(&self) -> ::std::option::Option<&str> {
        self.endpoint_name.as_deref()
    }
    /// <p>The current status of the AgentCore Runtime endpoint.</p>
    pub fn status(&self) -> &crate::types::AgentRuntimeEndpointStatus {
        &self.status
    }
    /// <p>The timestamp when the AgentCore Runtime endpoint was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
}
impl ::std::fmt::Debug for CreateAgentRuntimeEndpointOutput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CreateAgentRuntimeEndpointOutput");
        formatter.field("target_version", &self.target_version);
        formatter.field("agent_runtime_endpoint_arn", &self.agent_runtime_endpoint_arn);
        formatter.field("agent_runtime_arn", &self.agent_runtime_arn);
        formatter.field("agent_runtime_id", &self.agent_runtime_id);
        formatter.field("endpoint_name", &"*** Sensitive Data Redacted ***");
        formatter.field("status", &self.status);
        formatter.field("created_at", &self.created_at);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
impl ::aws_types::request_id::RequestId for CreateAgentRuntimeEndpointOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateAgentRuntimeEndpointOutput {
    /// Creates a new builder-style object to manufacture [`CreateAgentRuntimeEndpointOutput`](crate::operation::create_agent_runtime_endpoint::CreateAgentRuntimeEndpointOutput).
    pub fn builder() -> crate::operation::create_agent_runtime_endpoint::builders::CreateAgentRuntimeEndpointOutputBuilder {
        crate::operation::create_agent_runtime_endpoint::builders::CreateAgentRuntimeEndpointOutputBuilder::default()
    }
}

/// A builder for [`CreateAgentRuntimeEndpointOutput`](crate::operation::create_agent_runtime_endpoint::CreateAgentRuntimeEndpointOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct CreateAgentRuntimeEndpointOutputBuilder {
    pub(crate) target_version: ::std::option::Option<::std::string::String>,
    pub(crate) agent_runtime_endpoint_arn: ::std::option::Option<::std::string::String>,
    pub(crate) agent_runtime_arn: ::std::option::Option<::std::string::String>,
    pub(crate) agent_runtime_id: ::std::option::Option<::std::string::String>,
    pub(crate) endpoint_name: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::AgentRuntimeEndpointStatus>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl CreateAgentRuntimeEndpointOutputBuilder {
    /// <p>The target version of the AgentCore Runtime for the endpoint.</p>
    /// This field is required.
    pub fn target_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The target version of the AgentCore Runtime for the endpoint.</p>
    pub fn set_target_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_version = input;
        self
    }
    /// <p>The target version of the AgentCore Runtime for the endpoint.</p>
    pub fn get_target_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_version
    }
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime endpoint.</p>
    /// This field is required.
    pub fn agent_runtime_endpoint_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_endpoint_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime endpoint.</p>
    pub fn set_agent_runtime_endpoint_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_endpoint_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime endpoint.</p>
    pub fn get_agent_runtime_endpoint_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_endpoint_arn
    }
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime.</p>
    /// This field is required.
    pub fn agent_runtime_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime.</p>
    pub fn set_agent_runtime_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the AgentCore Runtime.</p>
    pub fn get_agent_runtime_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_arn
    }
    /// <p>The unique identifier of the AgentCore Runtime.</p>
    pub fn agent_runtime_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the AgentCore Runtime.</p>
    pub fn set_agent_runtime_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_id = input;
        self
    }
    /// <p>The unique identifier of the AgentCore Runtime.</p>
    pub fn get_agent_runtime_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_id
    }
    /// <p>The name of the AgentCore Runtime endpoint.</p>
    pub fn endpoint_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.endpoint_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the AgentCore Runtime endpoint.</p>
    pub fn set_endpoint_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.endpoint_name = input;
        self
    }
    /// <p>The name of the AgentCore Runtime endpoint.</p>
    pub fn get_endpoint_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.endpoint_name
    }
    /// <p>The current status of the AgentCore Runtime endpoint.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::AgentRuntimeEndpointStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the AgentCore Runtime endpoint.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::AgentRuntimeEndpointStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the AgentCore Runtime endpoint.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::AgentRuntimeEndpointStatus> {
        &self.status
    }
    /// <p>The timestamp when the AgentCore Runtime endpoint was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the AgentCore Runtime endpoint was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp when the AgentCore Runtime endpoint was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateAgentRuntimeEndpointOutput`](crate::operation::create_agent_runtime_endpoint::CreateAgentRuntimeEndpointOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`target_version`](crate::operation::create_agent_runtime_endpoint::builders::CreateAgentRuntimeEndpointOutputBuilder::target_version)
    /// - [`agent_runtime_endpoint_arn`](crate::operation::create_agent_runtime_endpoint::builders::CreateAgentRuntimeEndpointOutputBuilder::agent_runtime_endpoint_arn)
    /// - [`agent_runtime_arn`](crate::operation::create_agent_runtime_endpoint::builders::CreateAgentRuntimeEndpointOutputBuilder::agent_runtime_arn)
    /// - [`status`](crate::operation::create_agent_runtime_endpoint::builders::CreateAgentRuntimeEndpointOutputBuilder::status)
    /// - [`created_at`](crate::operation::create_agent_runtime_endpoint::builders::CreateAgentRuntimeEndpointOutputBuilder::created_at)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_agent_runtime_endpoint::CreateAgentRuntimeEndpointOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_agent_runtime_endpoint::CreateAgentRuntimeEndpointOutput {
            target_version: self.target_version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "target_version",
                    "target_version was not specified but it is required when building CreateAgentRuntimeEndpointOutput",
                )
            })?,
            agent_runtime_endpoint_arn: self.agent_runtime_endpoint_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_runtime_endpoint_arn",
                    "agent_runtime_endpoint_arn was not specified but it is required when building CreateAgentRuntimeEndpointOutput",
                )
            })?,
            agent_runtime_arn: self.agent_runtime_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_runtime_arn",
                    "agent_runtime_arn was not specified but it is required when building CreateAgentRuntimeEndpointOutput",
                )
            })?,
            agent_runtime_id: self.agent_runtime_id,
            endpoint_name: self.endpoint_name,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building CreateAgentRuntimeEndpointOutput",
                )
            })?,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building CreateAgentRuntimeEndpointOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
impl ::std::fmt::Debug for CreateAgentRuntimeEndpointOutputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CreateAgentRuntimeEndpointOutputBuilder");
        formatter.field("target_version", &self.target_version);
        formatter.field("agent_runtime_endpoint_arn", &self.agent_runtime_endpoint_arn);
        formatter.field("agent_runtime_arn", &self.agent_runtime_arn);
        formatter.field("agent_runtime_id", &self.agent_runtime_id);
        formatter.field("endpoint_name", &"*** Sensitive Data Redacted ***");
        formatter.field("status", &self.status);
        formatter.field("created_at", &self.created_at);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
