// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for updating invocation settings.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModifyInvocationConfigurationInput {
    /// <p>The updated ARN of the SNS topic for job notifications.</p>
    pub topic_arn: ::std::option::Option<::std::string::String>,
    /// <p>The updated S3 bucket name for event payload delivery.</p>
    pub payload_delivery_bucket_name: ::std::option::Option<::std::string::String>,
}
impl ModifyInvocationConfigurationInput {
    /// <p>The updated ARN of the SNS topic for job notifications.</p>
    pub fn topic_arn(&self) -> ::std::option::Option<&str> {
        self.topic_arn.as_deref()
    }
    /// <p>The updated S3 bucket name for event payload delivery.</p>
    pub fn payload_delivery_bucket_name(&self) -> ::std::option::Option<&str> {
        self.payload_delivery_bucket_name.as_deref()
    }
}
impl ModifyInvocationConfigurationInput {
    /// Creates a new builder-style object to manufacture [`ModifyInvocationConfigurationInput`](crate::types::ModifyInvocationConfigurationInput).
    pub fn builder() -> crate::types::builders::ModifyInvocationConfigurationInputBuilder {
        crate::types::builders::ModifyInvocationConfigurationInputBuilder::default()
    }
}

/// A builder for [`ModifyInvocationConfigurationInput`](crate::types::ModifyInvocationConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ModifyInvocationConfigurationInputBuilder {
    pub(crate) topic_arn: ::std::option::Option<::std::string::String>,
    pub(crate) payload_delivery_bucket_name: ::std::option::Option<::std::string::String>,
}
impl ModifyInvocationConfigurationInputBuilder {
    /// <p>The updated ARN of the SNS topic for job notifications.</p>
    pub fn topic_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.topic_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The updated ARN of the SNS topic for job notifications.</p>
    pub fn set_topic_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.topic_arn = input;
        self
    }
    /// <p>The updated ARN of the SNS topic for job notifications.</p>
    pub fn get_topic_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.topic_arn
    }
    /// <p>The updated S3 bucket name for event payload delivery.</p>
    pub fn payload_delivery_bucket_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.payload_delivery_bucket_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The updated S3 bucket name for event payload delivery.</p>
    pub fn set_payload_delivery_bucket_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.payload_delivery_bucket_name = input;
        self
    }
    /// <p>The updated S3 bucket name for event payload delivery.</p>
    pub fn get_payload_delivery_bucket_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.payload_delivery_bucket_name
    }
    /// Consumes the builder and constructs a [`ModifyInvocationConfigurationInput`](crate::types::ModifyInvocationConfigurationInput).
    pub fn build(self) -> crate::types::ModifyInvocationConfigurationInput {
        crate::types::ModifyInvocationConfigurationInput {
            topic_arn: self.topic_arn,
            payload_delivery_bucket_name: self.payload_delivery_bucket_name,
        }
    }
}
