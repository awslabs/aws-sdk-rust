// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Output configuration for a Google OAuth2 provider.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GoogleOauth2ProviderConfigOutput {
    /// <p>The OAuth2 discovery information for the Google provider.</p>
    pub oauth_discovery: ::std::option::Option<crate::types::Oauth2Discovery>,
    /// <p>The client ID for the Google OAuth2 provider.</p>
    pub client_id: ::std::option::Option<::std::string::String>,
}
impl GoogleOauth2ProviderConfigOutput {
    /// <p>The OAuth2 discovery information for the Google provider.</p>
    pub fn oauth_discovery(&self) -> ::std::option::Option<&crate::types::Oauth2Discovery> {
        self.oauth_discovery.as_ref()
    }
    /// <p>The client ID for the Google OAuth2 provider.</p>
    pub fn client_id(&self) -> ::std::option::Option<&str> {
        self.client_id.as_deref()
    }
}
impl GoogleOauth2ProviderConfigOutput {
    /// Creates a new builder-style object to manufacture [`GoogleOauth2ProviderConfigOutput`](crate::types::GoogleOauth2ProviderConfigOutput).
    pub fn builder() -> crate::types::builders::GoogleOauth2ProviderConfigOutputBuilder {
        crate::types::builders::GoogleOauth2ProviderConfigOutputBuilder::default()
    }
}

/// A builder for [`GoogleOauth2ProviderConfigOutput`](crate::types::GoogleOauth2ProviderConfigOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GoogleOauth2ProviderConfigOutputBuilder {
    pub(crate) oauth_discovery: ::std::option::Option<crate::types::Oauth2Discovery>,
    pub(crate) client_id: ::std::option::Option<::std::string::String>,
}
impl GoogleOauth2ProviderConfigOutputBuilder {
    /// <p>The OAuth2 discovery information for the Google provider.</p>
    /// This field is required.
    pub fn oauth_discovery(mut self, input: crate::types::Oauth2Discovery) -> Self {
        self.oauth_discovery = ::std::option::Option::Some(input);
        self
    }
    /// <p>The OAuth2 discovery information for the Google provider.</p>
    pub fn set_oauth_discovery(mut self, input: ::std::option::Option<crate::types::Oauth2Discovery>) -> Self {
        self.oauth_discovery = input;
        self
    }
    /// <p>The OAuth2 discovery information for the Google provider.</p>
    pub fn get_oauth_discovery(&self) -> &::std::option::Option<crate::types::Oauth2Discovery> {
        &self.oauth_discovery
    }
    /// <p>The client ID for the Google OAuth2 provider.</p>
    pub fn client_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The client ID for the Google OAuth2 provider.</p>
    pub fn set_client_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_id = input;
        self
    }
    /// <p>The client ID for the Google OAuth2 provider.</p>
    pub fn get_client_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_id
    }
    /// Consumes the builder and constructs a [`GoogleOauth2ProviderConfigOutput`](crate::types::GoogleOauth2ProviderConfigOutput).
    pub fn build(self) -> crate::types::GoogleOauth2ProviderConfigOutput {
        crate::types::GoogleOauth2ProviderConfigOutput {
            oauth_discovery: self.oauth_discovery,
            client_id: self.client_id,
        }
    }
}
