// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A configuration for a self-managed memory strategy.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SelfManagedConfiguration {
    /// <p>A list of conditions that trigger memory processing.</p>
    pub trigger_conditions: ::std::vec::Vec<crate::types::TriggerCondition>,
    /// <p>The configuration to use when invoking memory processing.</p>
    pub invocation_configuration: ::std::option::Option<crate::types::InvocationConfiguration>,
    /// <p>The number of historical messages to include in processing context.</p>
    pub historical_context_window_size: i32,
}
impl SelfManagedConfiguration {
    /// <p>A list of conditions that trigger memory processing.</p>
    pub fn trigger_conditions(&self) -> &[crate::types::TriggerCondition] {
        use std::ops::Deref;
        self.trigger_conditions.deref()
    }
    /// <p>The configuration to use when invoking memory processing.</p>
    pub fn invocation_configuration(&self) -> ::std::option::Option<&crate::types::InvocationConfiguration> {
        self.invocation_configuration.as_ref()
    }
    /// <p>The number of historical messages to include in processing context.</p>
    pub fn historical_context_window_size(&self) -> i32 {
        self.historical_context_window_size
    }
}
impl SelfManagedConfiguration {
    /// Creates a new builder-style object to manufacture [`SelfManagedConfiguration`](crate::types::SelfManagedConfiguration).
    pub fn builder() -> crate::types::builders::SelfManagedConfigurationBuilder {
        crate::types::builders::SelfManagedConfigurationBuilder::default()
    }
}

/// A builder for [`SelfManagedConfiguration`](crate::types::SelfManagedConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SelfManagedConfigurationBuilder {
    pub(crate) trigger_conditions: ::std::option::Option<::std::vec::Vec<crate::types::TriggerCondition>>,
    pub(crate) invocation_configuration: ::std::option::Option<crate::types::InvocationConfiguration>,
    pub(crate) historical_context_window_size: ::std::option::Option<i32>,
}
impl SelfManagedConfigurationBuilder {
    /// Appends an item to `trigger_conditions`.
    ///
    /// To override the contents of this collection use [`set_trigger_conditions`](Self::set_trigger_conditions).
    ///
    /// <p>A list of conditions that trigger memory processing.</p>
    pub fn trigger_conditions(mut self, input: crate::types::TriggerCondition) -> Self {
        let mut v = self.trigger_conditions.unwrap_or_default();
        v.push(input);
        self.trigger_conditions = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of conditions that trigger memory processing.</p>
    pub fn set_trigger_conditions(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::TriggerCondition>>) -> Self {
        self.trigger_conditions = input;
        self
    }
    /// <p>A list of conditions that trigger memory processing.</p>
    pub fn get_trigger_conditions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::TriggerCondition>> {
        &self.trigger_conditions
    }
    /// <p>The configuration to use when invoking memory processing.</p>
    /// This field is required.
    pub fn invocation_configuration(mut self, input: crate::types::InvocationConfiguration) -> Self {
        self.invocation_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration to use when invoking memory processing.</p>
    pub fn set_invocation_configuration(mut self, input: ::std::option::Option<crate::types::InvocationConfiguration>) -> Self {
        self.invocation_configuration = input;
        self
    }
    /// <p>The configuration to use when invoking memory processing.</p>
    pub fn get_invocation_configuration(&self) -> &::std::option::Option<crate::types::InvocationConfiguration> {
        &self.invocation_configuration
    }
    /// <p>The number of historical messages to include in processing context.</p>
    /// This field is required.
    pub fn historical_context_window_size(mut self, input: i32) -> Self {
        self.historical_context_window_size = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of historical messages to include in processing context.</p>
    pub fn set_historical_context_window_size(mut self, input: ::std::option::Option<i32>) -> Self {
        self.historical_context_window_size = input;
        self
    }
    /// <p>The number of historical messages to include in processing context.</p>
    pub fn get_historical_context_window_size(&self) -> &::std::option::Option<i32> {
        &self.historical_context_window_size
    }
    /// Consumes the builder and constructs a [`SelfManagedConfiguration`](crate::types::SelfManagedConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`trigger_conditions`](crate::types::builders::SelfManagedConfigurationBuilder::trigger_conditions)
    /// - [`historical_context_window_size`](crate::types::builders::SelfManagedConfigurationBuilder::historical_context_window_size)
    pub fn build(self) -> ::std::result::Result<crate::types::SelfManagedConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SelfManagedConfiguration {
            trigger_conditions: self.trigger_conditions.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "trigger_conditions",
                    "trigger_conditions was not specified but it is required when building SelfManagedConfiguration",
                )
            })?,
            invocation_configuration: self.invocation_configuration,
            historical_context_window_size: self.historical_context_window_size.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "historical_context_window_size",
                    "historical_context_window_size was not specified but it is required when building SelfManagedConfiguration",
                )
            })?,
        })
    }
}
