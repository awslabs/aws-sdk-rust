// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Trigger configuration based on time.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TimeBasedTriggerInput {
    /// <p>Idle session timeout (seconds) that triggers memory processing.</p>
    pub idle_session_timeout: i32,
}
impl TimeBasedTriggerInput {
    /// <p>Idle session timeout (seconds) that triggers memory processing.</p>
    pub fn idle_session_timeout(&self) -> i32 {
        self.idle_session_timeout
    }
}
impl TimeBasedTriggerInput {
    /// Creates a new builder-style object to manufacture [`TimeBasedTriggerInput`](crate::types::TimeBasedTriggerInput).
    pub fn builder() -> crate::types::builders::TimeBasedTriggerInputBuilder {
        crate::types::builders::TimeBasedTriggerInputBuilder::default()
    }
}

/// A builder for [`TimeBasedTriggerInput`](crate::types::TimeBasedTriggerInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TimeBasedTriggerInputBuilder {
    pub(crate) idle_session_timeout: ::std::option::Option<i32>,
}
impl TimeBasedTriggerInputBuilder {
    /// <p>Idle session timeout (seconds) that triggers memory processing.</p>
    pub fn idle_session_timeout(mut self, input: i32) -> Self {
        self.idle_session_timeout = ::std::option::Option::Some(input);
        self
    }
    /// <p>Idle session timeout (seconds) that triggers memory processing.</p>
    pub fn set_idle_session_timeout(mut self, input: ::std::option::Option<i32>) -> Self {
        self.idle_session_timeout = input;
        self
    }
    /// <p>Idle session timeout (seconds) that triggers memory processing.</p>
    pub fn get_idle_session_timeout(&self) -> &::std::option::Option<i32> {
        &self.idle_session_timeout
    }
    /// Consumes the builder and constructs a [`TimeBasedTriggerInput`](crate::types::TimeBasedTriggerInput).
    pub fn build(self) -> crate::types::TimeBasedTriggerInput {
        crate::types::TimeBasedTriggerInput {
            idle_session_timeout: self.idle_session_timeout.unwrap_or(20),
        }
    }
}
