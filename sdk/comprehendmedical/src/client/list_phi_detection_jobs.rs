// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPHIDetectionJobs`](crate::client::fluent_builders::ListPHIDetectionJobs) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(ComprehendMedicalAsyncJobFilter)`](crate::client::fluent_builders::ListPHIDetectionJobs::filter) / [`set_filter(Option<ComprehendMedicalAsyncJobFilter>)`](crate::client::fluent_builders::ListPHIDetectionJobs::set_filter): <p>Filters the jobs that are returned. You can filter jobs based on their names, status, or the date and time that they were submitted. You can only set one filter at a time.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListPHIDetectionJobs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListPHIDetectionJobs::set_next_token): <p>Identifies the next page of results to return.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListPHIDetectionJobs::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListPHIDetectionJobs::set_max_results): <p>The maximum number of results to return in each page. The default is 100.</p>
    /// - On success, responds with [`ListPhiDetectionJobsOutput`](crate::output::ListPhiDetectionJobsOutput) with field(s):
    ///   - [`comprehend_medical_async_job_properties_list(Option<Vec<ComprehendMedicalAsyncJobProperties>>)`](crate::output::ListPhiDetectionJobsOutput::comprehend_medical_async_job_properties_list): <p>A list containing the properties of each job returned.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListPhiDetectionJobsOutput::next_token): <p>Identifies the next page of results to return.</p>
    /// - On failure, responds with [`SdkError<ListPHIDetectionJobsError>`](crate::error::ListPHIDetectionJobsError)
    pub fn list_phi_detection_jobs(&self) -> crate::client::fluent_builders::ListPHIDetectionJobs {
        crate::client::fluent_builders::ListPHIDetectionJobs::new(self.handle.clone())
    }
}
