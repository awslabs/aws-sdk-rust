// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_describe_entities_detection_v2_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeEntitiesDetectionV2JobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_1) = &input.job_id {
        object.key("JobId").string(var_1);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_describe_icd10_cm_inference_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeIcd10CmInferenceJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_2) = &input.job_id {
        object.key("JobId").string(var_2);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_describe_phi_detection_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribePhiDetectionJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_3) = &input.job_id {
        object.key("JobId").string(var_3);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_describe_rx_norm_inference_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeRxNormInferenceJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_4) = &input.job_id {
        object.key("JobId").string(var_4);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_detect_entities_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DetectEntitiesInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_5) = &input.text {
        object.key("Text").string(var_5);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_detect_entities_v2_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DetectEntitiesV2Input,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_6) = &input.text {
        object.key("Text").string(var_6);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_detect_phi_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DetectPhiInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_7) = &input.text {
        object.key("Text").string(var_7);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_infer_icd10_cm_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::InferIcd10CmInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_8) = &input.text {
        object.key("Text").string(var_8);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_infer_rx_norm_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::InferRxNormInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_9) = &input.text {
        object.key("Text").string(var_9);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_entities_detection_v2_jobs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListEntitiesDetectionV2JobsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_10) = &input.filter {
        let mut object_11 = object.key("Filter").start_object();
        crate::json_ser::serialize_structure_crate_model_comprehend_medical_async_job_filter(
            &mut object_11,
            var_10,
        )?;
        object_11.finish();
    }
    if let Some(var_12) = &input.next_token {
        object.key("NextToken").string(var_12);
    }
    if let Some(var_13) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_13).into()),
        );
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_icd10_cm_inference_jobs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListIcd10CmInferenceJobsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_14) = &input.filter {
        let mut object_15 = object.key("Filter").start_object();
        crate::json_ser::serialize_structure_crate_model_comprehend_medical_async_job_filter(
            &mut object_15,
            var_14,
        )?;
        object_15.finish();
    }
    if let Some(var_16) = &input.next_token {
        object.key("NextToken").string(var_16);
    }
    if let Some(var_17) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_17).into()),
        );
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_phi_detection_jobs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListPhiDetectionJobsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_18) = &input.filter {
        let mut object_19 = object.key("Filter").start_object();
        crate::json_ser::serialize_structure_crate_model_comprehend_medical_async_job_filter(
            &mut object_19,
            var_18,
        )?;
        object_19.finish();
    }
    if let Some(var_20) = &input.next_token {
        object.key("NextToken").string(var_20);
    }
    if let Some(var_21) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_21).into()),
        );
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_rx_norm_inference_jobs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListRxNormInferenceJobsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_22) = &input.filter {
        let mut object_23 = object.key("Filter").start_object();
        crate::json_ser::serialize_structure_crate_model_comprehend_medical_async_job_filter(
            &mut object_23,
            var_22,
        )?;
        object_23.finish();
    }
    if let Some(var_24) = &input.next_token {
        object.key("NextToken").string(var_24);
    }
    if let Some(var_25) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_25).into()),
        );
    }
    Ok(())
}

pub fn serialize_structure_crate_input_start_entities_detection_v2_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartEntitiesDetectionV2JobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_26) = &input.input_data_config {
        let mut object_27 = object.key("InputDataConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_input_data_config(&mut object_27, var_26)?;
        object_27.finish();
    }
    if let Some(var_28) = &input.output_data_config {
        let mut object_29 = object.key("OutputDataConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_output_data_config(
            &mut object_29,
            var_28,
        )?;
        object_29.finish();
    }
    if let Some(var_30) = &input.data_access_role_arn {
        object.key("DataAccessRoleArn").string(var_30);
    }
    if let Some(var_31) = &input.job_name {
        object.key("JobName").string(var_31);
    }
    if let Some(var_32) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_32);
    }
    if let Some(var_33) = &input.kms_key {
        object.key("KMSKey").string(var_33);
    }
    if let Some(var_34) = &input.language_code {
        object.key("LanguageCode").string(var_34.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_start_icd10_cm_inference_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartIcd10CmInferenceJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_35) = &input.input_data_config {
        let mut object_36 = object.key("InputDataConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_input_data_config(&mut object_36, var_35)?;
        object_36.finish();
    }
    if let Some(var_37) = &input.output_data_config {
        let mut object_38 = object.key("OutputDataConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_output_data_config(
            &mut object_38,
            var_37,
        )?;
        object_38.finish();
    }
    if let Some(var_39) = &input.data_access_role_arn {
        object.key("DataAccessRoleArn").string(var_39);
    }
    if let Some(var_40) = &input.job_name {
        object.key("JobName").string(var_40);
    }
    if let Some(var_41) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_41);
    }
    if let Some(var_42) = &input.kms_key {
        object.key("KMSKey").string(var_42);
    }
    if let Some(var_43) = &input.language_code {
        object.key("LanguageCode").string(var_43.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_start_phi_detection_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartPhiDetectionJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_44) = &input.input_data_config {
        let mut object_45 = object.key("InputDataConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_input_data_config(&mut object_45, var_44)?;
        object_45.finish();
    }
    if let Some(var_46) = &input.output_data_config {
        let mut object_47 = object.key("OutputDataConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_output_data_config(
            &mut object_47,
            var_46,
        )?;
        object_47.finish();
    }
    if let Some(var_48) = &input.data_access_role_arn {
        object.key("DataAccessRoleArn").string(var_48);
    }
    if let Some(var_49) = &input.job_name {
        object.key("JobName").string(var_49);
    }
    if let Some(var_50) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_50);
    }
    if let Some(var_51) = &input.kms_key {
        object.key("KMSKey").string(var_51);
    }
    if let Some(var_52) = &input.language_code {
        object.key("LanguageCode").string(var_52.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_start_rx_norm_inference_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartRxNormInferenceJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_53) = &input.input_data_config {
        let mut object_54 = object.key("InputDataConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_input_data_config(&mut object_54, var_53)?;
        object_54.finish();
    }
    if let Some(var_55) = &input.output_data_config {
        let mut object_56 = object.key("OutputDataConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_output_data_config(
            &mut object_56,
            var_55,
        )?;
        object_56.finish();
    }
    if let Some(var_57) = &input.data_access_role_arn {
        object.key("DataAccessRoleArn").string(var_57);
    }
    if let Some(var_58) = &input.job_name {
        object.key("JobName").string(var_58);
    }
    if let Some(var_59) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_59);
    }
    if let Some(var_60) = &input.kms_key {
        object.key("KMSKey").string(var_60);
    }
    if let Some(var_61) = &input.language_code {
        object.key("LanguageCode").string(var_61.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_stop_entities_detection_v2_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StopEntitiesDetectionV2JobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_62) = &input.job_id {
        object.key("JobId").string(var_62);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_stop_icd10_cm_inference_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StopIcd10CmInferenceJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_63) = &input.job_id {
        object.key("JobId").string(var_63);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_stop_phi_detection_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StopPhiDetectionJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_64) = &input.job_id {
        object.key("JobId").string(var_64);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_stop_rx_norm_inference_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StopRxNormInferenceJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_65) = &input.job_id {
        object.key("JobId").string(var_65);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_comprehend_medical_async_job_filter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ComprehendMedicalAsyncJobFilter,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_66) = &input.job_name {
        object.key("JobName").string(var_66);
    }
    if let Some(var_67) = &input.job_status {
        object.key("JobStatus").string(var_67.as_str());
    }
    if let Some(var_68) = &input.submit_time_before {
        object
            .key("SubmitTimeBefore")
            .instant(var_68, aws_smithy_types::instant::Format::EpochSeconds);
    }
    if let Some(var_69) = &input.submit_time_after {
        object
            .key("SubmitTimeAfter")
            .instant(var_69, aws_smithy_types::instant::Format::EpochSeconds);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_input_data_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::InputDataConfig,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_70) = &input.s3_bucket {
        object.key("S3Bucket").string(var_70);
    }
    if let Some(var_71) = &input.s3_key {
        object.key("S3Key").string(var_71);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_output_data_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::OutputDataConfig,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_72) = &input.s3_bucket {
        object.key("S3Bucket").string(var_72);
    }
    if let Some(var_73) = &input.s3_key {
        object.key("S3Key").string(var_73);
    }
    Ok(())
}
