// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DetectEntitiesV2Input {
    /// <p>A UTF-8 string containing the clinical content being examined for entities.</p>
    pub text: ::std::option::Option<::std::string::String>,
}
impl DetectEntitiesV2Input {
    /// <p>A UTF-8 string containing the clinical content being examined for entities.</p>
    pub fn text(&self) -> ::std::option::Option<&str> {
        self.text.as_deref()
    }
}
impl DetectEntitiesV2Input {
    /// Creates a new builder-style object to manufacture [`DetectEntitiesV2Input`](crate::operation::detect_entities_v2::DetectEntitiesV2Input).
    pub fn builder() -> crate::operation::detect_entities_v2::builders::DetectEntitiesV2InputBuilder {
        crate::operation::detect_entities_v2::builders::DetectEntitiesV2InputBuilder::default()
    }
}

/// A builder for [`DetectEntitiesV2Input`](crate::operation::detect_entities_v2::DetectEntitiesV2Input).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DetectEntitiesV2InputBuilder {
    pub(crate) text: ::std::option::Option<::std::string::String>,
}
impl DetectEntitiesV2InputBuilder {
    /// <p>A UTF-8 string containing the clinical content being examined for entities.</p>
    /// This field is required.
    pub fn text(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.text = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A UTF-8 string containing the clinical content being examined for entities.</p>
    pub fn set_text(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.text = input;
        self
    }
    /// <p>A UTF-8 string containing the clinical content being examined for entities.</p>
    pub fn get_text(&self) -> &::std::option::Option<::std::string::String> {
        &self.text
    }
    /// Consumes the builder and constructs a [`DetectEntitiesV2Input`](crate::operation::detect_entities_v2::DetectEntitiesV2Input).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::detect_entities_v2::DetectEntitiesV2Input, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::detect_entities_v2::DetectEntitiesV2Input { text: self.text })
    }
}
