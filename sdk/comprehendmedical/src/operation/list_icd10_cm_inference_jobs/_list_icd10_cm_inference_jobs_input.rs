// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListIcd10CmInferenceJobsInput {
    /// <p>Filters the jobs that are returned. You can filter jobs based on their names, status, or the date and time that they were submitted. You can only set one filter at a time.</p>
    #[doc(hidden)]
    pub filter: std::option::Option<crate::types::ComprehendMedicalAsyncJobFilter>,
    /// <p>Identifies the next page of results to return.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The maximum number of results to return in each page. The default is 100.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
}
impl ListIcd10CmInferenceJobsInput {
    /// <p>Filters the jobs that are returned. You can filter jobs based on their names, status, or the date and time that they were submitted. You can only set one filter at a time.</p>
    pub fn filter(&self) -> std::option::Option<&crate::types::ComprehendMedicalAsyncJobFilter> {
        self.filter.as_ref()
    }
    /// <p>Identifies the next page of results to return.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of results to return in each page. The default is 100.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
}
impl ListIcd10CmInferenceJobsInput {
    /// Creates a new builder-style object to manufacture [`ListIcd10CmInferenceJobsInput`](crate::operation::list_icd10_cm_inference_jobs::ListIcd10CmInferenceJobsInput).
    pub fn builder() -> crate::operation::list_icd10_cm_inference_jobs::builders::ListIcd10CmInferenceJobsInputBuilder{
        crate::operation::list_icd10_cm_inference_jobs::builders::ListIcd10CmInferenceJobsInputBuilder::default()
    }
}

/// A builder for [`ListIcd10CmInferenceJobsInput`](crate::operation::list_icd10_cm_inference_jobs::ListIcd10CmInferenceJobsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListIcd10CmInferenceJobsInputBuilder {
    pub(crate) filter: std::option::Option<crate::types::ComprehendMedicalAsyncJobFilter>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
}
impl ListIcd10CmInferenceJobsInputBuilder {
    /// <p>Filters the jobs that are returned. You can filter jobs based on their names, status, or the date and time that they were submitted. You can only set one filter at a time.</p>
    pub fn filter(mut self, input: crate::types::ComprehendMedicalAsyncJobFilter) -> Self {
        self.filter = Some(input);
        self
    }
    /// <p>Filters the jobs that are returned. You can filter jobs based on their names, status, or the date and time that they were submitted. You can only set one filter at a time.</p>
    pub fn set_filter(
        mut self,
        input: std::option::Option<crate::types::ComprehendMedicalAsyncJobFilter>,
    ) -> Self {
        self.filter = input;
        self
    }
    /// <p>Identifies the next page of results to return.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Identifies the next page of results to return.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The maximum number of results to return in each page. The default is 100.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to return in each page. The default is 100.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Consumes the builder and constructs a [`ListIcd10CmInferenceJobsInput`](crate::operation::list_icd10_cm_inference_jobs::ListIcd10CmInferenceJobsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_icd10_cm_inference_jobs::ListIcd10CmInferenceJobsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_icd10_cm_inference_jobs::ListIcd10CmInferenceJobsInput {
                filter: self.filter,
                next_token: self.next_token,
                max_results: self.max_results,
            },
        )
    }
}
