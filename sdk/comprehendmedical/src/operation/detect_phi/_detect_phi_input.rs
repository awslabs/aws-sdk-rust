// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DetectPhiInput {
    /// <p> A UTF-8 text string containing the clinical content being examined for PHI entities. Each string must contain fewer than 20,000 bytes of characters.</p>
    #[doc(hidden)]
    pub text: std::option::Option<std::string::String>,
}
impl DetectPhiInput {
    /// <p> A UTF-8 text string containing the clinical content being examined for PHI entities. Each string must contain fewer than 20,000 bytes of characters.</p>
    pub fn text(&self) -> std::option::Option<&str> {
        self.text.as_deref()
    }
}
impl DetectPhiInput {
    /// Creates a new builder-style object to manufacture [`DetectPhiInput`](crate::operation::detect_phi::DetectPhiInput).
    pub fn builder() -> crate::operation::detect_phi::builders::DetectPhiInputBuilder {
        crate::operation::detect_phi::builders::DetectPhiInputBuilder::default()
    }
}

/// A builder for [`DetectPhiInput`](crate::operation::detect_phi::DetectPhiInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DetectPhiInputBuilder {
    pub(crate) text: std::option::Option<std::string::String>,
}
impl DetectPhiInputBuilder {
    /// <p> A UTF-8 text string containing the clinical content being examined for PHI entities. Each string must contain fewer than 20,000 bytes of characters.</p>
    pub fn text(mut self, input: impl Into<std::string::String>) -> Self {
        self.text = Some(input.into());
        self
    }
    /// <p> A UTF-8 text string containing the clinical content being examined for PHI entities. Each string must contain fewer than 20,000 bytes of characters.</p>
    pub fn set_text(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.text = input;
        self
    }
    /// Consumes the builder and constructs a [`DetectPhiInput`](crate::operation::detect_phi::DetectPhiInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::detect_phi::DetectPhiInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::detect_phi::DetectPhiInput { text: self.text })
    }
}
