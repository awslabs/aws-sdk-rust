// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the tunnel.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TunnelSummary {
    /// <p>The unique alpha-numeric identifier for the tunnel.</p>
    #[doc(hidden)]
    pub tunnel_id: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name of the tunnel. </p>
    #[doc(hidden)]
    pub tunnel_arn: std::option::Option<std::string::String>,
    /// <p>The status of a tunnel. Valid values are: Open and Closed.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::TunnelStatus>,
    /// <p>A description of the tunnel.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The time the tunnel was created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time the tunnel was last updated.</p>
    #[doc(hidden)]
    pub last_updated_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl TunnelSummary {
    /// <p>The unique alpha-numeric identifier for the tunnel.</p>
    pub fn tunnel_id(&self) -> std::option::Option<&str> {
        self.tunnel_id.as_deref()
    }
    /// <p>The Amazon Resource Name of the tunnel. </p>
    pub fn tunnel_arn(&self) -> std::option::Option<&str> {
        self.tunnel_arn.as_deref()
    }
    /// <p>The status of a tunnel. Valid values are: Open and Closed.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::TunnelStatus> {
        self.status.as_ref()
    }
    /// <p>A description of the tunnel.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The time the tunnel was created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The time the tunnel was last updated.</p>
    pub fn last_updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_updated_at.as_ref()
    }
}
impl TunnelSummary {
    /// Creates a new builder-style object to manufacture [`TunnelSummary`](crate::types::TunnelSummary).
    pub fn builder() -> crate::types::builders::TunnelSummaryBuilder {
        crate::types::builders::TunnelSummaryBuilder::default()
    }
}

/// A builder for [`TunnelSummary`](crate::types::TunnelSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TunnelSummaryBuilder {
    pub(crate) tunnel_id: std::option::Option<std::string::String>,
    pub(crate) tunnel_arn: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::TunnelStatus>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_updated_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl TunnelSummaryBuilder {
    /// <p>The unique alpha-numeric identifier for the tunnel.</p>
    pub fn tunnel_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.tunnel_id = Some(input.into());
        self
    }
    /// <p>The unique alpha-numeric identifier for the tunnel.</p>
    pub fn set_tunnel_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.tunnel_id = input;
        self
    }
    /// <p>The Amazon Resource Name of the tunnel. </p>
    pub fn tunnel_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.tunnel_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name of the tunnel. </p>
    pub fn set_tunnel_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.tunnel_arn = input;
        self
    }
    /// <p>The status of a tunnel. Valid values are: Open and Closed.</p>
    pub fn status(mut self, input: crate::types::TunnelStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of a tunnel. Valid values are: Open and Closed.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::TunnelStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>A description of the tunnel.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>A description of the tunnel.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The time the tunnel was created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The time the tunnel was created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The time the tunnel was last updated.</p>
    pub fn last_updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = Some(input);
        self
    }
    /// <p>The time the tunnel was last updated.</p>
    pub fn set_last_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_updated_at = input;
        self
    }
    /// Consumes the builder and constructs a [`TunnelSummary`](crate::types::TunnelSummary).
    pub fn build(self) -> crate::types::TunnelSummary {
        crate::types::TunnelSummary {
            tunnel_id: self.tunnel_id,
            tunnel_arn: self.tunnel_arn,
            status: self.status,
            description: self.description,
            created_at: self.created_at,
            last_updated_at: self.last_updated_at,
        }
    }
}
