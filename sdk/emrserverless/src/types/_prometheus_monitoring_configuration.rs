// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The monitoring configuration object you can configure to send metrics to Amazon Managed Service for Prometheus for a job run.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PrometheusMonitoringConfiguration {
    /// <p>The remote write URL in the Amazon Managed Service for Prometheus workspace to send metrics to.</p>
    pub remote_write_url: ::std::option::Option<::std::string::String>,
}
impl PrometheusMonitoringConfiguration {
    /// <p>The remote write URL in the Amazon Managed Service for Prometheus workspace to send metrics to.</p>
    pub fn remote_write_url(&self) -> ::std::option::Option<&str> {
        self.remote_write_url.as_deref()
    }
}
impl PrometheusMonitoringConfiguration {
    /// Creates a new builder-style object to manufacture [`PrometheusMonitoringConfiguration`](crate::types::PrometheusMonitoringConfiguration).
    pub fn builder() -> crate::types::builders::PrometheusMonitoringConfigurationBuilder {
        crate::types::builders::PrometheusMonitoringConfigurationBuilder::default()
    }
}

/// A builder for [`PrometheusMonitoringConfiguration`](crate::types::PrometheusMonitoringConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PrometheusMonitoringConfigurationBuilder {
    pub(crate) remote_write_url: ::std::option::Option<::std::string::String>,
}
impl PrometheusMonitoringConfigurationBuilder {
    /// <p>The remote write URL in the Amazon Managed Service for Prometheus workspace to send metrics to.</p>
    pub fn remote_write_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.remote_write_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The remote write URL in the Amazon Managed Service for Prometheus workspace to send metrics to.</p>
    pub fn set_remote_write_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.remote_write_url = input;
        self
    }
    /// <p>The remote write URL in the Amazon Managed Service for Prometheus workspace to send metrics to.</p>
    pub fn get_remote_write_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.remote_write_url
    }
    /// Consumes the builder and constructs a [`PrometheusMonitoringConfiguration`](crate::types::PrometheusMonitoringConfiguration).
    pub fn build(self) -> crate::types::PrometheusMonitoringConfiguration {
        crate::types::PrometheusMonitoringConfiguration {
            remote_write_url: self.remote_write_url,
        }
    }
}
