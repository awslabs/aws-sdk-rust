// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The driver that the job runs on.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub enum JobDriver {
    /// <p>The job driver parameters specified for Hive.</p>
    Hive(crate::types::Hive),
    /// <p>The job driver parameters specified for Spark.</p>
    SparkSubmit(crate::types::SparkSubmit),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl JobDriver {
    /// Tries to convert the enum instance into [`Hive`](crate::types::JobDriver::Hive), extracting the inner [`Hive`](crate::types::Hive).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_hive(&self) -> std::result::Result<&crate::types::Hive, &Self> {
        if let JobDriver::Hive(val) = &self {
            Ok(val)
        } else {
            Err(self)
        }
    }
    /// Returns true if this is a [`Hive`](crate::types::JobDriver::Hive).
    pub fn is_hive(&self) -> bool {
        self.as_hive().is_ok()
    }
    /// Tries to convert the enum instance into [`SparkSubmit`](crate::types::JobDriver::SparkSubmit), extracting the inner [`SparkSubmit`](crate::types::SparkSubmit).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_spark_submit(&self) -> std::result::Result<&crate::types::SparkSubmit, &Self> {
        if let JobDriver::SparkSubmit(val) = &self {
            Ok(val)
        } else {
            Err(self)
        }
    }
    /// Returns true if this is a [`SparkSubmit`](crate::types::JobDriver::SparkSubmit).
    pub fn is_spark_submit(&self) -> bool {
        self.as_spark_submit().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
