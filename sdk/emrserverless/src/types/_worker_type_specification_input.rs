// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The specifications for a worker type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct WorkerTypeSpecificationInput {
    /// <p>The image configuration for a worker type.</p>
    #[doc(hidden)]
    pub image_configuration: std::option::Option<crate::types::ImageConfigurationInput>,
}
impl WorkerTypeSpecificationInput {
    /// <p>The image configuration for a worker type.</p>
    pub fn image_configuration(
        &self,
    ) -> std::option::Option<&crate::types::ImageConfigurationInput> {
        self.image_configuration.as_ref()
    }
}
impl WorkerTypeSpecificationInput {
    /// Creates a new builder-style object to manufacture [`WorkerTypeSpecificationInput`](crate::types::WorkerTypeSpecificationInput).
    pub fn builder() -> crate::types::builders::WorkerTypeSpecificationInputBuilder {
        crate::types::builders::WorkerTypeSpecificationInputBuilder::default()
    }
}

/// A builder for [`WorkerTypeSpecificationInput`](crate::types::WorkerTypeSpecificationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct WorkerTypeSpecificationInputBuilder {
    pub(crate) image_configuration: std::option::Option<crate::types::ImageConfigurationInput>,
}
impl WorkerTypeSpecificationInputBuilder {
    /// <p>The image configuration for a worker type.</p>
    pub fn image_configuration(mut self, input: crate::types::ImageConfigurationInput) -> Self {
        self.image_configuration = Some(input);
        self
    }
    /// <p>The image configuration for a worker type.</p>
    pub fn set_image_configuration(
        mut self,
        input: std::option::Option<crate::types::ImageConfigurationInput>,
    ) -> Self {
        self.image_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`WorkerTypeSpecificationInput`](crate::types::WorkerTypeSpecificationInput).
    pub fn build(self) -> crate::types::WorkerTypeSpecificationInput {
        crate::types::WorkerTypeSpecificationInput {
            image_configuration: self.image_configuration,
        }
    }
}
