// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The initial capacity configuration per worker.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InitialCapacityConfig {
    /// <p>The number of workers in the initial capacity configuration.</p>
    #[doc(hidden)]
    pub worker_count: i64,
    /// <p>The resource configuration of the initial capacity configuration.</p>
    #[doc(hidden)]
    pub worker_configuration: std::option::Option<crate::types::WorkerResourceConfig>,
}
impl InitialCapacityConfig {
    /// <p>The number of workers in the initial capacity configuration.</p>
    pub fn worker_count(&self) -> i64 {
        self.worker_count
    }
    /// <p>The resource configuration of the initial capacity configuration.</p>
    pub fn worker_configuration(&self) -> std::option::Option<&crate::types::WorkerResourceConfig> {
        self.worker_configuration.as_ref()
    }
}
impl InitialCapacityConfig {
    /// Creates a new builder-style object to manufacture [`InitialCapacityConfig`](crate::types::InitialCapacityConfig).
    pub fn builder() -> crate::types::builders::InitialCapacityConfigBuilder {
        crate::types::builders::InitialCapacityConfigBuilder::default()
    }
}

/// A builder for [`InitialCapacityConfig`](crate::types::InitialCapacityConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InitialCapacityConfigBuilder {
    pub(crate) worker_count: std::option::Option<i64>,
    pub(crate) worker_configuration: std::option::Option<crate::types::WorkerResourceConfig>,
}
impl InitialCapacityConfigBuilder {
    /// <p>The number of workers in the initial capacity configuration.</p>
    pub fn worker_count(mut self, input: i64) -> Self {
        self.worker_count = Some(input);
        self
    }
    /// <p>The number of workers in the initial capacity configuration.</p>
    pub fn set_worker_count(mut self, input: std::option::Option<i64>) -> Self {
        self.worker_count = input;
        self
    }
    /// <p>The resource configuration of the initial capacity configuration.</p>
    pub fn worker_configuration(mut self, input: crate::types::WorkerResourceConfig) -> Self {
        self.worker_configuration = Some(input);
        self
    }
    /// <p>The resource configuration of the initial capacity configuration.</p>
    pub fn set_worker_configuration(
        mut self,
        input: std::option::Option<crate::types::WorkerResourceConfig>,
    ) -> Self {
        self.worker_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`InitialCapacityConfig`](crate::types::InitialCapacityConfig).
    pub fn build(self) -> crate::types::InitialCapacityConfig {
        crate::types::InitialCapacityConfig {
            worker_count: self.worker_count.unwrap_or_default(),
            worker_configuration: self.worker_configuration,
        }
    }
}
