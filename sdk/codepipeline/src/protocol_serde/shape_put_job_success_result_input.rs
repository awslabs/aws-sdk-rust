// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_put_job_success_result_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::put_job_success_result::PutJobSuccessResultInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.job_id {
        object.key("jobId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.current_revision {
        #[allow(unused_mut)]
        let mut object_3 = object.key("currentRevision").start_object();
        crate::protocol_serde::shape_current_revision::ser_current_revision(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.continuation_token {
        object.key("continuationToken").string(var_4.as_str());
    }
    if let Some(var_5) = &input.execution_details {
        #[allow(unused_mut)]
        let mut object_6 = object.key("executionDetails").start_object();
        crate::protocol_serde::shape_execution_details::ser_execution_details(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.output_variables {
        #[allow(unused_mut)]
        let mut object_8 = object.key("outputVariables").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9.as_str()).string(value_10.as_str());
            }
        }
        object_8.finish();
    }
    Ok(())
}
