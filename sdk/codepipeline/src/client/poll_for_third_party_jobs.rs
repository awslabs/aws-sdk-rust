// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PollForThirdPartyJobs`](crate::operation::poll_for_third_party_jobs::builders::PollForThirdPartyJobsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`action_type_id(ActionTypeId)`](crate::operation::poll_for_third_party_jobs::builders::PollForThirdPartyJobsFluentBuilder::action_type_id) / [`set_action_type_id(Option<ActionTypeId>)`](crate::operation::poll_for_third_party_jobs::builders::PollForThirdPartyJobsFluentBuilder::set_action_type_id): <p>Represents information about an action type.</p>
    ///   - [`max_batch_size(i32)`](crate::operation::poll_for_third_party_jobs::builders::PollForThirdPartyJobsFluentBuilder::max_batch_size) / [`set_max_batch_size(Option<i32>)`](crate::operation::poll_for_third_party_jobs::builders::PollForThirdPartyJobsFluentBuilder::set_max_batch_size): <p>The maximum number of jobs to return in a poll for jobs call.</p>
    /// - On success, responds with [`PollForThirdPartyJobsOutput`](crate::operation::poll_for_third_party_jobs::PollForThirdPartyJobsOutput) with field(s):
    ///   - [`jobs(Option<Vec<ThirdPartyJob>>)`](crate::operation::poll_for_third_party_jobs::PollForThirdPartyJobsOutput::jobs): <p>Information about the jobs to take action on.</p>
    /// - On failure, responds with [`SdkError<PollForThirdPartyJobsError>`](crate::operation::poll_for_third_party_jobs::PollForThirdPartyJobsError)
    pub fn poll_for_third_party_jobs(
        &self,
    ) -> crate::operation::poll_for_third_party_jobs::builders::PollForThirdPartyJobsFluentBuilder
    {
        crate::operation::poll_for_third_party_jobs::builders::PollForThirdPartyJobsFluentBuilder::new(self.handle.clone())
    }
}
