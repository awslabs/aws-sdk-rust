// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeregisterWebhookWithThirdParty`](crate::operation::deregister_webhook_with_third_party::builders::DeregisterWebhookWithThirdPartyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`webhook_name(impl Into<String>)`](crate::operation::deregister_webhook_with_third_party::builders::DeregisterWebhookWithThirdPartyFluentBuilder::webhook_name) / [`set_webhook_name(Option<String>)`](crate::operation::deregister_webhook_with_third_party::builders::DeregisterWebhookWithThirdPartyFluentBuilder::set_webhook_name): <p>The name of the webhook you want to deregister.</p>
    /// - On success, responds with [`DeregisterWebhookWithThirdPartyOutput`](crate::operation::deregister_webhook_with_third_party::DeregisterWebhookWithThirdPartyOutput)
    /// - On failure, responds with [`SdkError<DeregisterWebhookWithThirdPartyError>`](crate::operation::deregister_webhook_with_third_party::DeregisterWebhookWithThirdPartyError)
    pub fn deregister_webhook_with_third_party(&self) -> crate::operation::deregister_webhook_with_third_party::builders::DeregisterWebhookWithThirdPartyFluentBuilder{
        crate::operation::deregister_webhook_with_third_party::builders::DeregisterWebhookWithThirdPartyFluentBuilder::new(self.handle.clone())
    }
}
