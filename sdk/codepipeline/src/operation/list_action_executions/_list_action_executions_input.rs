// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListActionExecutionsInput {
    /// <p> The name of the pipeline for which you want to list action execution history.</p>
    pub pipeline_name: ::std::option::Option<::std::string::String>,
    /// <p>Input information used to filter action execution history.</p>
    pub filter: ::std::option::Option<crate::types::ActionExecutionFilter>,
    /// <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value. Action execution history is retained for up to 12 months, based on action execution start times. Default value is 100. </p> <note>
    /// <p>Detailed execution history is available for executions run on or after February 21, 2019.</p>
    /// </note>
    pub max_results: ::std::option::Option<i32>,
    /// <p>The token that was returned from the previous <code>ListActionExecutions</code> call, which can be used to return the next set of action executions in the list.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListActionExecutionsInput {
    /// <p> The name of the pipeline for which you want to list action execution history.</p>
    pub fn pipeline_name(&self) -> ::std::option::Option<&str> {
        self.pipeline_name.as_deref()
    }
    /// <p>Input information used to filter action execution history.</p>
    pub fn filter(&self) -> ::std::option::Option<&crate::types::ActionExecutionFilter> {
        self.filter.as_ref()
    }
    /// <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value. Action execution history is retained for up to 12 months, based on action execution start times. Default value is 100. </p> <note>
    /// <p>Detailed execution history is available for executions run on or after February 21, 2019.</p>
    /// </note>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>The token that was returned from the previous <code>ListActionExecutions</code> call, which can be used to return the next set of action executions in the list.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListActionExecutionsInput {
    /// Creates a new builder-style object to manufacture [`ListActionExecutionsInput`](crate::operation::list_action_executions::ListActionExecutionsInput).
    pub fn builder() -> crate::operation::list_action_executions::builders::ListActionExecutionsInputBuilder {
        crate::operation::list_action_executions::builders::ListActionExecutionsInputBuilder::default()
    }
}

/// A builder for [`ListActionExecutionsInput`](crate::operation::list_action_executions::ListActionExecutionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListActionExecutionsInputBuilder {
    pub(crate) pipeline_name: ::std::option::Option<::std::string::String>,
    pub(crate) filter: ::std::option::Option<crate::types::ActionExecutionFilter>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListActionExecutionsInputBuilder {
    /// <p> The name of the pipeline for which you want to list action execution history.</p>
    /// This field is required.
    pub fn pipeline_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pipeline_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name of the pipeline for which you want to list action execution history.</p>
    pub fn set_pipeline_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pipeline_name = input;
        self
    }
    /// <p> The name of the pipeline for which you want to list action execution history.</p>
    pub fn get_pipeline_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.pipeline_name
    }
    /// <p>Input information used to filter action execution history.</p>
    pub fn filter(mut self, input: crate::types::ActionExecutionFilter) -> Self {
        self.filter = ::std::option::Option::Some(input);
        self
    }
    /// <p>Input information used to filter action execution history.</p>
    pub fn set_filter(mut self, input: ::std::option::Option<crate::types::ActionExecutionFilter>) -> Self {
        self.filter = input;
        self
    }
    /// <p>Input information used to filter action execution history.</p>
    pub fn get_filter(&self) -> &::std::option::Option<crate::types::ActionExecutionFilter> {
        &self.filter
    }
    /// <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value. Action execution history is retained for up to 12 months, based on action execution start times. Default value is 100. </p> <note>
    /// <p>Detailed execution history is available for executions run on or after February 21, 2019.</p>
    /// </note>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value. Action execution history is retained for up to 12 months, based on action execution start times. Default value is 100. </p> <note>
    /// <p>Detailed execution history is available for executions run on or after February 21, 2019.</p>
    /// </note>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value. Action execution history is retained for up to 12 months, based on action execution start times. Default value is 100. </p> <note>
    /// <p>Detailed execution history is available for executions run on or after February 21, 2019.</p>
    /// </note>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>The token that was returned from the previous <code>ListActionExecutions</code> call, which can be used to return the next set of action executions in the list.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token that was returned from the previous <code>ListActionExecutions</code> call, which can be used to return the next set of action executions in the list.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token that was returned from the previous <code>ListActionExecutions</code> call, which can be used to return the next set of action executions in the list.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListActionExecutionsInput`](crate::operation::list_action_executions::ListActionExecutionsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::list_action_executions::ListActionExecutionsInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::list_action_executions::ListActionExecutionsInput {
            pipeline_name: self.pipeline_name,
            filter: self.filter,
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
