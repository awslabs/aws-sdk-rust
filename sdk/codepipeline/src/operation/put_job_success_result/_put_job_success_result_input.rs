// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input of a <code>PutJobSuccessResult</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutJobSuccessResultInput {
    /// <p>The unique system-generated ID of the job that succeeded. This is the same ID returned from <code>PollForJobs</code>.</p>
    #[doc(hidden)]
    pub job_id: std::option::Option<std::string::String>,
    /// <p>The ID of the current revision of the artifact successfully worked on by the job.</p>
    #[doc(hidden)]
    pub current_revision: std::option::Option<crate::types::CurrentRevision>,
    /// <p>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the custom action. When the action is complete, no continuation token should be supplied.</p>
    #[doc(hidden)]
    pub continuation_token: std::option::Option<std::string::String>,
    /// <p>The execution details of the successful job, such as the actions taken by the job worker.</p>
    #[doc(hidden)]
    pub execution_details: std::option::Option<crate::types::ExecutionDetails>,
    /// <p>Key-value pairs produced as output by a job worker that can be made available to a downstream action configuration. <code>outputVariables</code> can be included only when there is no continuation token on the request.</p>
    #[doc(hidden)]
    pub output_variables:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl PutJobSuccessResultInput {
    /// <p>The unique system-generated ID of the job that succeeded. This is the same ID returned from <code>PollForJobs</code>.</p>
    pub fn job_id(&self) -> std::option::Option<&str> {
        self.job_id.as_deref()
    }
    /// <p>The ID of the current revision of the artifact successfully worked on by the job.</p>
    pub fn current_revision(&self) -> std::option::Option<&crate::types::CurrentRevision> {
        self.current_revision.as_ref()
    }
    /// <p>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the custom action. When the action is complete, no continuation token should be supplied.</p>
    pub fn continuation_token(&self) -> std::option::Option<&str> {
        self.continuation_token.as_deref()
    }
    /// <p>The execution details of the successful job, such as the actions taken by the job worker.</p>
    pub fn execution_details(&self) -> std::option::Option<&crate::types::ExecutionDetails> {
        self.execution_details.as_ref()
    }
    /// <p>Key-value pairs produced as output by a job worker that can be made available to a downstream action configuration. <code>outputVariables</code> can be included only when there is no continuation token on the request.</p>
    pub fn output_variables(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.output_variables.as_ref()
    }
}
impl PutJobSuccessResultInput {
    /// Creates a new builder-style object to manufacture [`PutJobSuccessResultInput`](crate::operation::put_job_success_result::PutJobSuccessResultInput).
    pub fn builder(
    ) -> crate::operation::put_job_success_result::builders::PutJobSuccessResultInputBuilder {
        crate::operation::put_job_success_result::builders::PutJobSuccessResultInputBuilder::default(
        )
    }
}

/// A builder for [`PutJobSuccessResultInput`](crate::operation::put_job_success_result::PutJobSuccessResultInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutJobSuccessResultInputBuilder {
    pub(crate) job_id: std::option::Option<std::string::String>,
    pub(crate) current_revision: std::option::Option<crate::types::CurrentRevision>,
    pub(crate) continuation_token: std::option::Option<std::string::String>,
    pub(crate) execution_details: std::option::Option<crate::types::ExecutionDetails>,
    pub(crate) output_variables:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl PutJobSuccessResultInputBuilder {
    /// <p>The unique system-generated ID of the job that succeeded. This is the same ID returned from <code>PollForJobs</code>.</p>
    pub fn job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_id = Some(input.into());
        self
    }
    /// <p>The unique system-generated ID of the job that succeeded. This is the same ID returned from <code>PollForJobs</code>.</p>
    pub fn set_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_id = input;
        self
    }
    /// <p>The ID of the current revision of the artifact successfully worked on by the job.</p>
    pub fn current_revision(mut self, input: crate::types::CurrentRevision) -> Self {
        self.current_revision = Some(input);
        self
    }
    /// <p>The ID of the current revision of the artifact successfully worked on by the job.</p>
    pub fn set_current_revision(
        mut self,
        input: std::option::Option<crate::types::CurrentRevision>,
    ) -> Self {
        self.current_revision = input;
        self
    }
    /// <p>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the custom action. When the action is complete, no continuation token should be supplied.</p>
    pub fn continuation_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.continuation_token = Some(input.into());
        self
    }
    /// <p>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the custom action. When the action is complete, no continuation token should be supplied.</p>
    pub fn set_continuation_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.continuation_token = input;
        self
    }
    /// <p>The execution details of the successful job, such as the actions taken by the job worker.</p>
    pub fn execution_details(mut self, input: crate::types::ExecutionDetails) -> Self {
        self.execution_details = Some(input);
        self
    }
    /// <p>The execution details of the successful job, such as the actions taken by the job worker.</p>
    pub fn set_execution_details(
        mut self,
        input: std::option::Option<crate::types::ExecutionDetails>,
    ) -> Self {
        self.execution_details = input;
        self
    }
    /// Adds a key-value pair to `output_variables`.
    ///
    /// To override the contents of this collection use [`set_output_variables`](Self::set_output_variables).
    ///
    /// <p>Key-value pairs produced as output by a job worker that can be made available to a downstream action configuration. <code>outputVariables</code> can be included only when there is no continuation token on the request.</p>
    pub fn output_variables(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.output_variables.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.output_variables = Some(hash_map);
        self
    }
    /// <p>Key-value pairs produced as output by a job worker that can be made available to a downstream action configuration. <code>outputVariables</code> can be included only when there is no continuation token on the request.</p>
    pub fn set_output_variables(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.output_variables = input;
        self
    }
    /// Consumes the builder and constructs a [`PutJobSuccessResultInput`](crate::operation::put_job_success_result::PutJobSuccessResultInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_job_success_result::PutJobSuccessResultInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_job_success_result::PutJobSuccessResultInput {
                job_id: self.job_id,
                current_revision: self.current_revision,
                continuation_token: self.continuation_token,
                execution_details: self.execution_details,
                output_variables: self.output_variables,
            },
        )
    }
}
