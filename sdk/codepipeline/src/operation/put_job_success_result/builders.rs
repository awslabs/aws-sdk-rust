// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::put_job_success_result::_put_job_success_result_output::PutJobSuccessResultOutputBuilder;

pub use crate::operation::put_job_success_result::_put_job_success_result_input::PutJobSuccessResultInputBuilder;

/// Fluent builder constructing a request to `PutJobSuccessResult`.
///
/// <p>Represents the success of a job as returned to the pipeline by a job worker. Used for custom actions only.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct PutJobSuccessResultFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::put_job_success_result::builders::PutJobSuccessResultInputBuilder,
}
impl PutJobSuccessResultFluentBuilder {
    /// Creates a new `PutJobSuccessResult`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::put_job_success_result::PutJobSuccessResult,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::put_job_success_result::PutJobSuccessResultError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::put_job_success_result::PutJobSuccessResultOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::put_job_success_result::PutJobSuccessResultError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The unique system-generated ID of the job that succeeded. This is the same ID returned from <code>PollForJobs</code>.</p>
    pub fn job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.job_id(input.into());
        self
    }
    /// <p>The unique system-generated ID of the job that succeeded. This is the same ID returned from <code>PollForJobs</code>.</p>
    pub fn set_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_job_id(input);
        self
    }
    /// <p>The ID of the current revision of the artifact successfully worked on by the job.</p>
    pub fn current_revision(mut self, input: crate::types::CurrentRevision) -> Self {
        self.inner = self.inner.current_revision(input);
        self
    }
    /// <p>The ID of the current revision of the artifact successfully worked on by the job.</p>
    pub fn set_current_revision(
        mut self,
        input: std::option::Option<crate::types::CurrentRevision>,
    ) -> Self {
        self.inner = self.inner.set_current_revision(input);
        self
    }
    /// <p>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the custom action. When the action is complete, no continuation token should be supplied.</p>
    pub fn continuation_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.continuation_token(input.into());
        self
    }
    /// <p>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the custom action. When the action is complete, no continuation token should be supplied.</p>
    pub fn set_continuation_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_continuation_token(input);
        self
    }
    /// <p>The execution details of the successful job, such as the actions taken by the job worker.</p>
    pub fn execution_details(mut self, input: crate::types::ExecutionDetails) -> Self {
        self.inner = self.inner.execution_details(input);
        self
    }
    /// <p>The execution details of the successful job, such as the actions taken by the job worker.</p>
    pub fn set_execution_details(
        mut self,
        input: std::option::Option<crate::types::ExecutionDetails>,
    ) -> Self {
        self.inner = self.inner.set_execution_details(input);
        self
    }
    /// Adds a key-value pair to `outputVariables`.
    ///
    /// To override the contents of this collection use [`set_output_variables`](Self::set_output_variables).
    ///
    /// <p>Key-value pairs produced as output by a job worker that can be made available to a downstream action configuration. <code>outputVariables</code> can be included only when there is no continuation token on the request.</p>
    pub fn output_variables(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        self.inner = self.inner.output_variables(k.into(), v.into());
        self
    }
    /// <p>Key-value pairs produced as output by a job worker that can be made available to a downstream action configuration. <code>outputVariables</code> can be included only when there is no continuation token on the request.</p>
    pub fn set_output_variables(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.inner = self.inner.set_output_variables(input);
        self
    }
}
