// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input of a <code>StartPipelineExecution</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartPipelineExecutionInput {
    /// <p>The name of the pipeline to start.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The system-generated unique ID used to identify a unique execution request.</p>
    #[doc(hidden)]
    pub client_request_token: std::option::Option<std::string::String>,
}
impl StartPipelineExecutionInput {
    /// <p>The name of the pipeline to start.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The system-generated unique ID used to identify a unique execution request.</p>
    pub fn client_request_token(&self) -> std::option::Option<&str> {
        self.client_request_token.as_deref()
    }
}
impl StartPipelineExecutionInput {
    /// Creates a new builder-style object to manufacture [`StartPipelineExecutionInput`](crate::operation::start_pipeline_execution::StartPipelineExecutionInput).
    pub fn builder(
    ) -> crate::operation::start_pipeline_execution::builders::StartPipelineExecutionInputBuilder
    {
        crate::operation::start_pipeline_execution::builders::StartPipelineExecutionInputBuilder::default()
    }
}

/// A builder for [`StartPipelineExecutionInput`](crate::operation::start_pipeline_execution::StartPipelineExecutionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartPipelineExecutionInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) client_request_token: std::option::Option<std::string::String>,
}
impl StartPipelineExecutionInputBuilder {
    /// <p>The name of the pipeline to start.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the pipeline to start.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The system-generated unique ID used to identify a unique execution request.</p>
    pub fn client_request_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_request_token = Some(input.into());
        self
    }
    /// <p>The system-generated unique ID used to identify a unique execution request.</p>
    pub fn set_client_request_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.client_request_token = input;
        self
    }
    /// Consumes the builder and constructs a [`StartPipelineExecutionInput`](crate::operation::start_pipeline_execution::StartPipelineExecutionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::start_pipeline_execution::StartPipelineExecutionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::start_pipeline_execution::StartPipelineExecutionInput {
                name: self.name,
                client_request_token: self.client_request_token,
            },
        )
    }
}
