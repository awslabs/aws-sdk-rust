// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input of a <code>DeleteCustomActionType</code> operation. The custom action will be marked as deleted.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteCustomActionTypeInput {
    /// <p>The category of the custom action that you want to delete, such as source or deploy.</p>
    #[doc(hidden)]
    pub category: std::option::Option<crate::types::ActionCategory>,
    /// <p>The provider of the service used in the custom action, such as AWS CodeDeploy.</p>
    #[doc(hidden)]
    pub provider: std::option::Option<std::string::String>,
    /// <p>The version of the custom action to delete.</p>
    #[doc(hidden)]
    pub version: std::option::Option<std::string::String>,
}
impl DeleteCustomActionTypeInput {
    /// <p>The category of the custom action that you want to delete, such as source or deploy.</p>
    pub fn category(&self) -> std::option::Option<&crate::types::ActionCategory> {
        self.category.as_ref()
    }
    /// <p>The provider of the service used in the custom action, such as AWS CodeDeploy.</p>
    pub fn provider(&self) -> std::option::Option<&str> {
        self.provider.as_deref()
    }
    /// <p>The version of the custom action to delete.</p>
    pub fn version(&self) -> std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl DeleteCustomActionTypeInput {
    /// Creates a new builder-style object to manufacture [`DeleteCustomActionTypeInput`](crate::operation::delete_custom_action_type::DeleteCustomActionTypeInput).
    pub fn builder(
    ) -> crate::operation::delete_custom_action_type::builders::DeleteCustomActionTypeInputBuilder
    {
        crate::operation::delete_custom_action_type::builders::DeleteCustomActionTypeInputBuilder::default()
    }
}

/// A builder for [`DeleteCustomActionTypeInput`](crate::operation::delete_custom_action_type::DeleteCustomActionTypeInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteCustomActionTypeInputBuilder {
    pub(crate) category: std::option::Option<crate::types::ActionCategory>,
    pub(crate) provider: std::option::Option<std::string::String>,
    pub(crate) version: std::option::Option<std::string::String>,
}
impl DeleteCustomActionTypeInputBuilder {
    /// <p>The category of the custom action that you want to delete, such as source or deploy.</p>
    pub fn category(mut self, input: crate::types::ActionCategory) -> Self {
        self.category = Some(input);
        self
    }
    /// <p>The category of the custom action that you want to delete, such as source or deploy.</p>
    pub fn set_category(
        mut self,
        input: std::option::Option<crate::types::ActionCategory>,
    ) -> Self {
        self.category = input;
        self
    }
    /// <p>The provider of the service used in the custom action, such as AWS CodeDeploy.</p>
    pub fn provider(mut self, input: impl Into<std::string::String>) -> Self {
        self.provider = Some(input.into());
        self
    }
    /// <p>The provider of the service used in the custom action, such as AWS CodeDeploy.</p>
    pub fn set_provider(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.provider = input;
        self
    }
    /// <p>The version of the custom action to delete.</p>
    pub fn version(mut self, input: impl Into<std::string::String>) -> Self {
        self.version = Some(input.into());
        self
    }
    /// <p>The version of the custom action to delete.</p>
    pub fn set_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteCustomActionTypeInput`](crate::operation::delete_custom_action_type::DeleteCustomActionTypeInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_custom_action_type::DeleteCustomActionTypeInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_custom_action_type::DeleteCustomActionTypeInput {
                category: self.category,
                provider: self.provider,
                version: self.version,
            },
        )
    }
}
