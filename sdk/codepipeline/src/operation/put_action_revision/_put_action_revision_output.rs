// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>PutActionRevision</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutActionRevisionOutput {
    /// <p>Indicates whether the artifact revision was previously used in an execution of the specified pipeline.</p>
    #[doc(hidden)]
    pub new_revision: bool,
    /// <p>The ID of the current workflow state of the pipeline.</p>
    #[doc(hidden)]
    pub pipeline_execution_id: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl PutActionRevisionOutput {
    /// <p>Indicates whether the artifact revision was previously used in an execution of the specified pipeline.</p>
    pub fn new_revision(&self) -> bool {
        self.new_revision
    }
    /// <p>The ID of the current workflow state of the pipeline.</p>
    pub fn pipeline_execution_id(&self) -> std::option::Option<&str> {
        self.pipeline_execution_id.as_deref()
    }
}
impl aws_http::request_id::RequestId for PutActionRevisionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PutActionRevisionOutput {
    /// Creates a new builder-style object to manufacture [`PutActionRevisionOutput`](crate::operation::put_action_revision::PutActionRevisionOutput).
    pub fn builder(
    ) -> crate::operation::put_action_revision::builders::PutActionRevisionOutputBuilder {
        crate::operation::put_action_revision::builders::PutActionRevisionOutputBuilder::default()
    }
}

/// A builder for [`PutActionRevisionOutput`](crate::operation::put_action_revision::PutActionRevisionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutActionRevisionOutputBuilder {
    pub(crate) new_revision: std::option::Option<bool>,
    pub(crate) pipeline_execution_id: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl PutActionRevisionOutputBuilder {
    /// <p>Indicates whether the artifact revision was previously used in an execution of the specified pipeline.</p>
    pub fn new_revision(mut self, input: bool) -> Self {
        self.new_revision = Some(input);
        self
    }
    /// <p>Indicates whether the artifact revision was previously used in an execution of the specified pipeline.</p>
    pub fn set_new_revision(mut self, input: std::option::Option<bool>) -> Self {
        self.new_revision = input;
        self
    }
    /// <p>The ID of the current workflow state of the pipeline.</p>
    pub fn pipeline_execution_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.pipeline_execution_id = Some(input.into());
        self
    }
    /// <p>The ID of the current workflow state of the pipeline.</p>
    pub fn set_pipeline_execution_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.pipeline_execution_id = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PutActionRevisionOutput`](crate::operation::put_action_revision::PutActionRevisionOutput).
    pub fn build(self) -> crate::operation::put_action_revision::PutActionRevisionOutput {
        crate::operation::put_action_revision::PutActionRevisionOutput {
            new_revision: self.new_revision.unwrap_or_default(),
            pipeline_execution_id: self.pipeline_execution_id,
            _request_id: self._request_id,
        }
    }
}
