// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Output details listed for an action execution, such as the action execution result.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActionExecutionOutput {
    /// <p>Details of output artifacts of the action that correspond to the action execution.</p>
    #[doc(hidden)]
    pub output_artifacts: std::option::Option<std::vec::Vec<crate::types::ArtifactDetail>>,
    /// <p>Execution result information listed in the output details for an action execution.</p>
    #[doc(hidden)]
    pub execution_result: std::option::Option<crate::types::ActionExecutionResult>,
    /// <p>The outputVariables field shows the key-value pairs that were output as part of that execution.</p>
    #[doc(hidden)]
    pub output_variables:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl ActionExecutionOutput {
    /// <p>Details of output artifacts of the action that correspond to the action execution.</p>
    pub fn output_artifacts(&self) -> std::option::Option<&[crate::types::ArtifactDetail]> {
        self.output_artifacts.as_deref()
    }
    /// <p>Execution result information listed in the output details for an action execution.</p>
    pub fn execution_result(&self) -> std::option::Option<&crate::types::ActionExecutionResult> {
        self.execution_result.as_ref()
    }
    /// <p>The outputVariables field shows the key-value pairs that were output as part of that execution.</p>
    pub fn output_variables(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.output_variables.as_ref()
    }
}
impl ActionExecutionOutput {
    /// Creates a new builder-style object to manufacture [`ActionExecutionOutput`](crate::types::ActionExecutionOutput).
    pub fn builder() -> crate::types::builders::ActionExecutionOutputBuilder {
        crate::types::builders::ActionExecutionOutputBuilder::default()
    }
}

/// A builder for [`ActionExecutionOutput`](crate::types::ActionExecutionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActionExecutionOutputBuilder {
    pub(crate) output_artifacts: std::option::Option<std::vec::Vec<crate::types::ArtifactDetail>>,
    pub(crate) execution_result: std::option::Option<crate::types::ActionExecutionResult>,
    pub(crate) output_variables:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl ActionExecutionOutputBuilder {
    /// Appends an item to `output_artifacts`.
    ///
    /// To override the contents of this collection use [`set_output_artifacts`](Self::set_output_artifacts).
    ///
    /// <p>Details of output artifacts of the action that correspond to the action execution.</p>
    pub fn output_artifacts(mut self, input: crate::types::ArtifactDetail) -> Self {
        let mut v = self.output_artifacts.unwrap_or_default();
        v.push(input);
        self.output_artifacts = Some(v);
        self
    }
    /// <p>Details of output artifacts of the action that correspond to the action execution.</p>
    pub fn set_output_artifacts(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ArtifactDetail>>,
    ) -> Self {
        self.output_artifacts = input;
        self
    }
    /// <p>Execution result information listed in the output details for an action execution.</p>
    pub fn execution_result(mut self, input: crate::types::ActionExecutionResult) -> Self {
        self.execution_result = Some(input);
        self
    }
    /// <p>Execution result information listed in the output details for an action execution.</p>
    pub fn set_execution_result(
        mut self,
        input: std::option::Option<crate::types::ActionExecutionResult>,
    ) -> Self {
        self.execution_result = input;
        self
    }
    /// Adds a key-value pair to `output_variables`.
    ///
    /// To override the contents of this collection use [`set_output_variables`](Self::set_output_variables).
    ///
    /// <p>The outputVariables field shows the key-value pairs that were output as part of that execution.</p>
    pub fn output_variables(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.output_variables.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.output_variables = Some(hash_map);
        self
    }
    /// <p>The outputVariables field shows the key-value pairs that were output as part of that execution.</p>
    pub fn set_output_variables(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.output_variables = input;
        self
    }
    /// Consumes the builder and constructs a [`ActionExecutionOutput`](crate::types::ActionExecutionOutput).
    pub fn build(self) -> crate::types::ActionExecutionOutput {
        crate::types::ActionExecutionOutput {
            output_artifacts: self.output_artifacts,
            execution_result: self.execution_result,
            output_variables: self.output_variables,
        }
    }
}
