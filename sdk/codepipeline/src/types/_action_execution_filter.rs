// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Filter values for the action execution.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActionExecutionFilter {
    /// <p>The pipeline execution ID used to filter action execution history.</p>
    #[doc(hidden)]
    pub pipeline_execution_id: std::option::Option<std::string::String>,
}
impl ActionExecutionFilter {
    /// <p>The pipeline execution ID used to filter action execution history.</p>
    pub fn pipeline_execution_id(&self) -> std::option::Option<&str> {
        self.pipeline_execution_id.as_deref()
    }
}
impl ActionExecutionFilter {
    /// Creates a new builder-style object to manufacture [`ActionExecutionFilter`](crate::types::ActionExecutionFilter).
    pub fn builder() -> crate::types::builders::ActionExecutionFilterBuilder {
        crate::types::builders::ActionExecutionFilterBuilder::default()
    }
}

/// A builder for [`ActionExecutionFilter`](crate::types::ActionExecutionFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActionExecutionFilterBuilder {
    pub(crate) pipeline_execution_id: std::option::Option<std::string::String>,
}
impl ActionExecutionFilterBuilder {
    /// <p>The pipeline execution ID used to filter action execution history.</p>
    pub fn pipeline_execution_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.pipeline_execution_id = Some(input.into());
        self
    }
    /// <p>The pipeline execution ID used to filter action execution history.</p>
    pub fn set_pipeline_execution_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.pipeline_execution_id = input;
        self
    }
    /// Consumes the builder and constructs a [`ActionExecutionFilter`](crate::types::ActionExecutionFilter).
    pub fn build(self) -> crate::types::ActionExecutionFilter {
        crate::types::ActionExecutionFilter {
            pipeline_execution_id: self.pipeline_execution_id,
        }
    }
}
