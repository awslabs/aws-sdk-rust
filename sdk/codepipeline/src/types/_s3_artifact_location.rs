// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The location of the S3 bucket that contains a revision.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3ArtifactLocation {
    /// <p>The name of the S3 bucket.</p>
    #[doc(hidden)]
    pub bucket_name: std::option::Option<std::string::String>,
    /// <p>The key of the object in the S3 bucket, which uniquely identifies the object in the bucket.</p>
    #[doc(hidden)]
    pub object_key: std::option::Option<std::string::String>,
}
impl S3ArtifactLocation {
    /// <p>The name of the S3 bucket.</p>
    pub fn bucket_name(&self) -> std::option::Option<&str> {
        self.bucket_name.as_deref()
    }
    /// <p>The key of the object in the S3 bucket, which uniquely identifies the object in the bucket.</p>
    pub fn object_key(&self) -> std::option::Option<&str> {
        self.object_key.as_deref()
    }
}
impl S3ArtifactLocation {
    /// Creates a new builder-style object to manufacture [`S3ArtifactLocation`](crate::types::S3ArtifactLocation).
    pub fn builder() -> crate::types::builders::S3ArtifactLocationBuilder {
        crate::types::builders::S3ArtifactLocationBuilder::default()
    }
}

/// A builder for [`S3ArtifactLocation`](crate::types::S3ArtifactLocation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3ArtifactLocationBuilder {
    pub(crate) bucket_name: std::option::Option<std::string::String>,
    pub(crate) object_key: std::option::Option<std::string::String>,
}
impl S3ArtifactLocationBuilder {
    /// <p>The name of the S3 bucket.</p>
    pub fn bucket_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_name = Some(input.into());
        self
    }
    /// <p>The name of the S3 bucket.</p>
    pub fn set_bucket_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket_name = input;
        self
    }
    /// <p>The key of the object in the S3 bucket, which uniquely identifies the object in the bucket.</p>
    pub fn object_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.object_key = Some(input.into());
        self
    }
    /// <p>The key of the object in the S3 bucket, which uniquely identifies the object in the bucket.</p>
    pub fn set_object_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.object_key = input;
        self
    }
    /// Consumes the builder and constructs a [`S3ArtifactLocation`](crate::types::S3ArtifactLocation).
    pub fn build(self) -> crate::types::S3ArtifactLocation {
        crate::types::S3ArtifactLocation {
            bucket_name: self.bucket_name,
            object_key: self.object_key,
        }
    }
}
