// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents information about the location of an artifact.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ArtifactLocation {
    /// <p>The type of artifact in the location.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::ArtifactLocationType>,
    /// <p>The S3 bucket that contains the artifact.</p>
    #[doc(hidden)]
    pub s3_location: std::option::Option<crate::types::S3ArtifactLocation>,
}
impl ArtifactLocation {
    /// <p>The type of artifact in the location.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::ArtifactLocationType> {
        self.r#type.as_ref()
    }
    /// <p>The S3 bucket that contains the artifact.</p>
    pub fn s3_location(&self) -> std::option::Option<&crate::types::S3ArtifactLocation> {
        self.s3_location.as_ref()
    }
}
impl ArtifactLocation {
    /// Creates a new builder-style object to manufacture [`ArtifactLocation`](crate::types::ArtifactLocation).
    pub fn builder() -> crate::types::builders::ArtifactLocationBuilder {
        crate::types::builders::ArtifactLocationBuilder::default()
    }
}

/// A builder for [`ArtifactLocation`](crate::types::ArtifactLocation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ArtifactLocationBuilder {
    pub(crate) r#type: std::option::Option<crate::types::ArtifactLocationType>,
    pub(crate) s3_location: std::option::Option<crate::types::S3ArtifactLocation>,
}
impl ArtifactLocationBuilder {
    /// <p>The type of artifact in the location.</p>
    pub fn r#type(mut self, input: crate::types::ArtifactLocationType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The type of artifact in the location.</p>
    pub fn set_type(
        mut self,
        input: std::option::Option<crate::types::ArtifactLocationType>,
    ) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The S3 bucket that contains the artifact.</p>
    pub fn s3_location(mut self, input: crate::types::S3ArtifactLocation) -> Self {
        self.s3_location = Some(input);
        self
    }
    /// <p>The S3 bucket that contains the artifact.</p>
    pub fn set_s3_location(
        mut self,
        input: std::option::Option<crate::types::S3ArtifactLocation>,
    ) -> Self {
        self.s3_location = input;
        self
    }
    /// Consumes the builder and constructs a [`ArtifactLocation`](crate::types::ArtifactLocation).
    pub fn build(self) -> crate::types::ArtifactLocation {
        crate::types::ArtifactLocation {
            r#type: self.r#type,
            s3_location: self.s3_location,
        }
    }
}
