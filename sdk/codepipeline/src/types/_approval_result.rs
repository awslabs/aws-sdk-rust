// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents information about the result of an approval request.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ApprovalResult {
    /// <p>The summary of the current status of the approval request.</p>
    pub summary: ::std::string::String,
    /// <p>The response submitted by a reviewer assigned to an approval action request.</p>
    pub status: crate::types::ApprovalStatus,
}
impl ApprovalResult {
    /// <p>The summary of the current status of the approval request.</p>
    pub fn summary(&self) -> &str {
        use std::ops::Deref;
        self.summary.deref()
    }
    /// <p>The response submitted by a reviewer assigned to an approval action request.</p>
    pub fn status(&self) -> &crate::types::ApprovalStatus {
        &self.status
    }
}
impl ApprovalResult {
    /// Creates a new builder-style object to manufacture [`ApprovalResult`](crate::types::ApprovalResult).
    pub fn builder() -> crate::types::builders::ApprovalResultBuilder {
        crate::types::builders::ApprovalResultBuilder::default()
    }
}

/// A builder for [`ApprovalResult`](crate::types::ApprovalResult).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ApprovalResultBuilder {
    pub(crate) summary: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::ApprovalStatus>,
}
impl ApprovalResultBuilder {
    /// <p>The summary of the current status of the approval request.</p>
    /// This field is required.
    pub fn summary(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.summary = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The summary of the current status of the approval request.</p>
    pub fn set_summary(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.summary = input;
        self
    }
    /// <p>The summary of the current status of the approval request.</p>
    pub fn get_summary(&self) -> &::std::option::Option<::std::string::String> {
        &self.summary
    }
    /// <p>The response submitted by a reviewer assigned to an approval action request.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::ApprovalStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The response submitted by a reviewer assigned to an approval action request.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ApprovalStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The response submitted by a reviewer assigned to an approval action request.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ApprovalStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`ApprovalResult`](crate::types::ApprovalResult).
    /// This method will fail if any of the following fields are not set:
    /// - [`summary`](crate::types::builders::ApprovalResultBuilder::summary)
    /// - [`status`](crate::types::builders::ApprovalResultBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::ApprovalResult, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ApprovalResult {
            summary: self.summary.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "summary",
                    "summary was not specified but it is required when building ApprovalResult",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building ApprovalResult",
                )
            })?,
        })
    }
}
