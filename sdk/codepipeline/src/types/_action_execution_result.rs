// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Execution result information, such as the external execution ID.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActionExecutionResult {
    /// <p>The action provider's external ID for the action execution.</p>
    #[doc(hidden)]
    pub external_execution_id: std::option::Option<std::string::String>,
    /// <p>The action provider's summary for the action execution.</p>
    #[doc(hidden)]
    pub external_execution_summary: std::option::Option<std::string::String>,
    /// <p>The deepest external link to the external resource (for example, a repository URL or deployment endpoint) that is used when running the action.</p>
    #[doc(hidden)]
    pub external_execution_url: std::option::Option<std::string::String>,
}
impl ActionExecutionResult {
    /// <p>The action provider's external ID for the action execution.</p>
    pub fn external_execution_id(&self) -> std::option::Option<&str> {
        self.external_execution_id.as_deref()
    }
    /// <p>The action provider's summary for the action execution.</p>
    pub fn external_execution_summary(&self) -> std::option::Option<&str> {
        self.external_execution_summary.as_deref()
    }
    /// <p>The deepest external link to the external resource (for example, a repository URL or deployment endpoint) that is used when running the action.</p>
    pub fn external_execution_url(&self) -> std::option::Option<&str> {
        self.external_execution_url.as_deref()
    }
}
impl ActionExecutionResult {
    /// Creates a new builder-style object to manufacture [`ActionExecutionResult`](crate::types::ActionExecutionResult).
    pub fn builder() -> crate::types::builders::ActionExecutionResultBuilder {
        crate::types::builders::ActionExecutionResultBuilder::default()
    }
}

/// A builder for [`ActionExecutionResult`](crate::types::ActionExecutionResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActionExecutionResultBuilder {
    pub(crate) external_execution_id: std::option::Option<std::string::String>,
    pub(crate) external_execution_summary: std::option::Option<std::string::String>,
    pub(crate) external_execution_url: std::option::Option<std::string::String>,
}
impl ActionExecutionResultBuilder {
    /// <p>The action provider's external ID for the action execution.</p>
    pub fn external_execution_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.external_execution_id = Some(input.into());
        self
    }
    /// <p>The action provider's external ID for the action execution.</p>
    pub fn set_external_execution_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.external_execution_id = input;
        self
    }
    /// <p>The action provider's summary for the action execution.</p>
    pub fn external_execution_summary(mut self, input: impl Into<std::string::String>) -> Self {
        self.external_execution_summary = Some(input.into());
        self
    }
    /// <p>The action provider's summary for the action execution.</p>
    pub fn set_external_execution_summary(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.external_execution_summary = input;
        self
    }
    /// <p>The deepest external link to the external resource (for example, a repository URL or deployment endpoint) that is used when running the action.</p>
    pub fn external_execution_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.external_execution_url = Some(input.into());
        self
    }
    /// <p>The deepest external link to the external resource (for example, a repository URL or deployment endpoint) that is used when running the action.</p>
    pub fn set_external_execution_url(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.external_execution_url = input;
        self
    }
    /// Consumes the builder and constructs a [`ActionExecutionResult`](crate::types::ActionExecutionResult).
    pub fn build(self) -> crate::types::ActionExecutionResult {
        crate::types::ActionExecutionResult {
            external_execution_id: self.external_execution_id,
            external_execution_summary: self.external_execution_summary,
            external_execution_url: self.external_execution_url,
        }
    }
}
