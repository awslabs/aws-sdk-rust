// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents information about the details of a job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct JobDetails {
    /// <p>The unique system-generated ID of the job.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>Represents other information about a job required for a job worker to complete the job. </p>
    #[doc(hidden)]
    pub data: std::option::Option<crate::types::JobData>,
    /// <p>The AWS account ID associated with the job.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
}
impl JobDetails {
    /// <p>The unique system-generated ID of the job.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>Represents other information about a job required for a job worker to complete the job. </p>
    pub fn data(&self) -> std::option::Option<&crate::types::JobData> {
        self.data.as_ref()
    }
    /// <p>The AWS account ID associated with the job.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
}
impl JobDetails {
    /// Creates a new builder-style object to manufacture [`JobDetails`](crate::types::JobDetails).
    pub fn builder() -> crate::types::builders::JobDetailsBuilder {
        crate::types::builders::JobDetailsBuilder::default()
    }
}

/// A builder for [`JobDetails`](crate::types::JobDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct JobDetailsBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) data: std::option::Option<crate::types::JobData>,
    pub(crate) account_id: std::option::Option<std::string::String>,
}
impl JobDetailsBuilder {
    /// <p>The unique system-generated ID of the job.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The unique system-generated ID of the job.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>Represents other information about a job required for a job worker to complete the job. </p>
    pub fn data(mut self, input: crate::types::JobData) -> Self {
        self.data = Some(input);
        self
    }
    /// <p>Represents other information about a job required for a job worker to complete the job. </p>
    pub fn set_data(mut self, input: std::option::Option<crate::types::JobData>) -> Self {
        self.data = input;
        self
    }
    /// <p>The AWS account ID associated with the job.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The AWS account ID associated with the job.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// Consumes the builder and constructs a [`JobDetails`](crate::types::JobDetails).
    pub fn build(self) -> crate::types::JobDetails {
        crate::types::JobDetails {
            id: self.id,
            data: self.data,
            account_id: self.account_id,
        }
    }
}
