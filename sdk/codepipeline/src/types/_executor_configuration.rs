// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The action engine, or executor, related to the supported integration model used to create and update the action type. The available executor types are <code>Lambda</code> and <code>JobWorker</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExecutorConfiguration {
    /// <p>Details about the <code>Lambda</code> executor of the action type.</p>
    #[doc(hidden)]
    pub lambda_executor_configuration:
        std::option::Option<crate::types::LambdaExecutorConfiguration>,
    /// <p>Details about the <code>JobWorker</code> executor of the action type.</p>
    #[doc(hidden)]
    pub job_worker_executor_configuration:
        std::option::Option<crate::types::JobWorkerExecutorConfiguration>,
}
impl ExecutorConfiguration {
    /// <p>Details about the <code>Lambda</code> executor of the action type.</p>
    pub fn lambda_executor_configuration(
        &self,
    ) -> std::option::Option<&crate::types::LambdaExecutorConfiguration> {
        self.lambda_executor_configuration.as_ref()
    }
    /// <p>Details about the <code>JobWorker</code> executor of the action type.</p>
    pub fn job_worker_executor_configuration(
        &self,
    ) -> std::option::Option<&crate::types::JobWorkerExecutorConfiguration> {
        self.job_worker_executor_configuration.as_ref()
    }
}
impl ExecutorConfiguration {
    /// Creates a new builder-style object to manufacture [`ExecutorConfiguration`](crate::types::ExecutorConfiguration).
    pub fn builder() -> crate::types::builders::ExecutorConfigurationBuilder {
        crate::types::builders::ExecutorConfigurationBuilder::default()
    }
}

/// A builder for [`ExecutorConfiguration`](crate::types::ExecutorConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExecutorConfigurationBuilder {
    pub(crate) lambda_executor_configuration:
        std::option::Option<crate::types::LambdaExecutorConfiguration>,
    pub(crate) job_worker_executor_configuration:
        std::option::Option<crate::types::JobWorkerExecutorConfiguration>,
}
impl ExecutorConfigurationBuilder {
    /// <p>Details about the <code>Lambda</code> executor of the action type.</p>
    pub fn lambda_executor_configuration(
        mut self,
        input: crate::types::LambdaExecutorConfiguration,
    ) -> Self {
        self.lambda_executor_configuration = Some(input);
        self
    }
    /// <p>Details about the <code>Lambda</code> executor of the action type.</p>
    pub fn set_lambda_executor_configuration(
        mut self,
        input: std::option::Option<crate::types::LambdaExecutorConfiguration>,
    ) -> Self {
        self.lambda_executor_configuration = input;
        self
    }
    /// <p>Details about the <code>JobWorker</code> executor of the action type.</p>
    pub fn job_worker_executor_configuration(
        mut self,
        input: crate::types::JobWorkerExecutorConfiguration,
    ) -> Self {
        self.job_worker_executor_configuration = Some(input);
        self
    }
    /// <p>Details about the <code>JobWorker</code> executor of the action type.</p>
    pub fn set_job_worker_executor_configuration(
        mut self,
        input: std::option::Option<crate::types::JobWorkerExecutorConfiguration>,
    ) -> Self {
        self.job_worker_executor_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`ExecutorConfiguration`](crate::types::ExecutorConfiguration).
    pub fn build(self) -> crate::types::ExecutorConfiguration {
        crate::types::ExecutorConfiguration {
            lambda_executor_configuration: self.lambda_executor_configuration,
            job_worker_executor_configuration: self.job_worker_executor_configuration,
        }
    }
}
