// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A response to a <code>PollForThirdPartyJobs</code> request returned by AWS CodePipeline when there is a job to be worked on by a partner action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ThirdPartyJob {
    /// <p>The <code>clientToken</code> portion of the <code>clientId</code> and <code>clientToken</code> pair used to verify that the calling entity is allowed access to the job and its details.</p>
    #[doc(hidden)]
    pub client_id: std::option::Option<std::string::String>,
    /// <p>The identifier used to identify the job in AWS CodePipeline.</p>
    #[doc(hidden)]
    pub job_id: std::option::Option<std::string::String>,
}
impl ThirdPartyJob {
    /// <p>The <code>clientToken</code> portion of the <code>clientId</code> and <code>clientToken</code> pair used to verify that the calling entity is allowed access to the job and its details.</p>
    pub fn client_id(&self) -> std::option::Option<&str> {
        self.client_id.as_deref()
    }
    /// <p>The identifier used to identify the job in AWS CodePipeline.</p>
    pub fn job_id(&self) -> std::option::Option<&str> {
        self.job_id.as_deref()
    }
}
impl ThirdPartyJob {
    /// Creates a new builder-style object to manufacture [`ThirdPartyJob`](crate::types::ThirdPartyJob).
    pub fn builder() -> crate::types::builders::ThirdPartyJobBuilder {
        crate::types::builders::ThirdPartyJobBuilder::default()
    }
}

/// A builder for [`ThirdPartyJob`](crate::types::ThirdPartyJob).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ThirdPartyJobBuilder {
    pub(crate) client_id: std::option::Option<std::string::String>,
    pub(crate) job_id: std::option::Option<std::string::String>,
}
impl ThirdPartyJobBuilder {
    /// <p>The <code>clientToken</code> portion of the <code>clientId</code> and <code>clientToken</code> pair used to verify that the calling entity is allowed access to the job and its details.</p>
    pub fn client_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_id = Some(input.into());
        self
    }
    /// <p>The <code>clientToken</code> portion of the <code>clientId</code> and <code>clientToken</code> pair used to verify that the calling entity is allowed access to the job and its details.</p>
    pub fn set_client_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_id = input;
        self
    }
    /// <p>The identifier used to identify the job in AWS CodePipeline.</p>
    pub fn job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_id = Some(input.into());
        self
    }
    /// <p>The identifier used to identify the job in AWS CodePipeline.</p>
    pub fn set_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_id = input;
        self
    }
    /// Consumes the builder and constructs a [`ThirdPartyJob`](crate::types::ThirdPartyJob).
    pub fn build(self) -> crate::types::ThirdPartyJob {
        crate::types::ThirdPartyJob {
            client_id: self.client_id,
            job_id: self.job_id,
        }
    }
}
