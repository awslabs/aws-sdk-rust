// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The interaction or event that started a pipeline execution.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExecutionTrigger {
    /// <p>The type of change-detection method, command, or user interaction that started a pipeline execution.</p>
    #[doc(hidden)]
    pub trigger_type: std::option::Option<crate::types::TriggerType>,
    /// <p>Detail related to the event that started a pipeline execution, such as the webhook ARN of the webhook that triggered the pipeline execution or the user ARN for a user-initiated <code>start-pipeline-execution</code> CLI command.</p>
    #[doc(hidden)]
    pub trigger_detail: std::option::Option<std::string::String>,
}
impl ExecutionTrigger {
    /// <p>The type of change-detection method, command, or user interaction that started a pipeline execution.</p>
    pub fn trigger_type(&self) -> std::option::Option<&crate::types::TriggerType> {
        self.trigger_type.as_ref()
    }
    /// <p>Detail related to the event that started a pipeline execution, such as the webhook ARN of the webhook that triggered the pipeline execution or the user ARN for a user-initiated <code>start-pipeline-execution</code> CLI command.</p>
    pub fn trigger_detail(&self) -> std::option::Option<&str> {
        self.trigger_detail.as_deref()
    }
}
impl ExecutionTrigger {
    /// Creates a new builder-style object to manufacture [`ExecutionTrigger`](crate::types::ExecutionTrigger).
    pub fn builder() -> crate::types::builders::ExecutionTriggerBuilder {
        crate::types::builders::ExecutionTriggerBuilder::default()
    }
}

/// A builder for [`ExecutionTrigger`](crate::types::ExecutionTrigger).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExecutionTriggerBuilder {
    pub(crate) trigger_type: std::option::Option<crate::types::TriggerType>,
    pub(crate) trigger_detail: std::option::Option<std::string::String>,
}
impl ExecutionTriggerBuilder {
    /// <p>The type of change-detection method, command, or user interaction that started a pipeline execution.</p>
    pub fn trigger_type(mut self, input: crate::types::TriggerType) -> Self {
        self.trigger_type = Some(input);
        self
    }
    /// <p>The type of change-detection method, command, or user interaction that started a pipeline execution.</p>
    pub fn set_trigger_type(
        mut self,
        input: std::option::Option<crate::types::TriggerType>,
    ) -> Self {
        self.trigger_type = input;
        self
    }
    /// <p>Detail related to the event that started a pipeline execution, such as the webhook ARN of the webhook that triggered the pipeline execution or the user ARN for a user-initiated <code>start-pipeline-execution</code> CLI command.</p>
    pub fn trigger_detail(mut self, input: impl Into<std::string::String>) -> Self {
        self.trigger_detail = Some(input.into());
        self
    }
    /// <p>Detail related to the event that started a pipeline execution, such as the webhook ARN of the webhook that triggered the pipeline execution or the user ARN for a user-initiated <code>start-pipeline-execution</code> CLI command.</p>
    pub fn set_trigger_detail(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.trigger_detail = input;
        self
    }
    /// Consumes the builder and constructs a [`ExecutionTrigger`](crate::types::ExecutionTrigger).
    pub fn build(self) -> crate::types::ExecutionTrigger {
        crate::types::ExecutionTrigger {
            trigger_type: self.trigger_type,
            trigger_detail: self.trigger_detail,
        }
    }
}
