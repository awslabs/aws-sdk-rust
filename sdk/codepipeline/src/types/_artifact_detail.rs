// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Artifact details for the action execution, such as the artifact location.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ArtifactDetail {
    /// <p>The artifact object name for the action execution.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The Amazon S3 artifact location for the action execution.</p>
    #[doc(hidden)]
    pub s3location: std::option::Option<crate::types::S3Location>,
}
impl ArtifactDetail {
    /// <p>The artifact object name for the action execution.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Amazon S3 artifact location for the action execution.</p>
    pub fn s3location(&self) -> std::option::Option<&crate::types::S3Location> {
        self.s3location.as_ref()
    }
}
impl ArtifactDetail {
    /// Creates a new builder-style object to manufacture [`ArtifactDetail`](crate::types::ArtifactDetail).
    pub fn builder() -> crate::types::builders::ArtifactDetailBuilder {
        crate::types::builders::ArtifactDetailBuilder::default()
    }
}

/// A builder for [`ArtifactDetail`](crate::types::ArtifactDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ArtifactDetailBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) s3location: std::option::Option<crate::types::S3Location>,
}
impl ArtifactDetailBuilder {
    /// <p>The artifact object name for the action execution.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The artifact object name for the action execution.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The Amazon S3 artifact location for the action execution.</p>
    pub fn s3location(mut self, input: crate::types::S3Location) -> Self {
        self.s3location = Some(input);
        self
    }
    /// <p>The Amazon S3 artifact location for the action execution.</p>
    pub fn set_s3location(mut self, input: std::option::Option<crate::types::S3Location>) -> Self {
        self.s3location = input;
        self
    }
    /// Consumes the builder and constructs a [`ArtifactDetail`](crate::types::ArtifactDetail).
    pub fn build(self) -> crate::types::ArtifactDetail {
        crate::types::ArtifactDetail {
            name: self.name,
            s3location: self.s3location,
        }
    }
}
