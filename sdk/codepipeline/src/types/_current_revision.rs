// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents information about a current revision.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CurrentRevision {
    /// <p>The revision ID of the current version of an artifact.</p>
    pub revision: ::std::string::String,
    /// <p>The change identifier for the current revision.</p>
    pub change_identifier: ::std::string::String,
    /// <p>The date and time when the most recent revision of the artifact was created, in timestamp format.</p>
    pub created: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The summary of the most recent revision of the artifact.</p>
    pub revision_summary: ::std::option::Option<::std::string::String>,
}
impl CurrentRevision {
    /// <p>The revision ID of the current version of an artifact.</p>
    pub fn revision(&self) -> &str {
        use std::ops::Deref;
        self.revision.deref()
    }
    /// <p>The change identifier for the current revision.</p>
    pub fn change_identifier(&self) -> &str {
        use std::ops::Deref;
        self.change_identifier.deref()
    }
    /// <p>The date and time when the most recent revision of the artifact was created, in timestamp format.</p>
    pub fn created(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created.as_ref()
    }
    /// <p>The summary of the most recent revision of the artifact.</p>
    pub fn revision_summary(&self) -> ::std::option::Option<&str> {
        self.revision_summary.as_deref()
    }
}
impl CurrentRevision {
    /// Creates a new builder-style object to manufacture [`CurrentRevision`](crate::types::CurrentRevision).
    pub fn builder() -> crate::types::builders::CurrentRevisionBuilder {
        crate::types::builders::CurrentRevisionBuilder::default()
    }
}

/// A builder for [`CurrentRevision`](crate::types::CurrentRevision).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CurrentRevisionBuilder {
    pub(crate) revision: ::std::option::Option<::std::string::String>,
    pub(crate) change_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) created: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) revision_summary: ::std::option::Option<::std::string::String>,
}
impl CurrentRevisionBuilder {
    /// <p>The revision ID of the current version of an artifact.</p>
    /// This field is required.
    pub fn revision(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.revision = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The revision ID of the current version of an artifact.</p>
    pub fn set_revision(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.revision = input;
        self
    }
    /// <p>The revision ID of the current version of an artifact.</p>
    pub fn get_revision(&self) -> &::std::option::Option<::std::string::String> {
        &self.revision
    }
    /// <p>The change identifier for the current revision.</p>
    /// This field is required.
    pub fn change_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.change_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The change identifier for the current revision.</p>
    pub fn set_change_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.change_identifier = input;
        self
    }
    /// <p>The change identifier for the current revision.</p>
    pub fn get_change_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.change_identifier
    }
    /// <p>The date and time when the most recent revision of the artifact was created, in timestamp format.</p>
    pub fn created(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the most recent revision of the artifact was created, in timestamp format.</p>
    pub fn set_created(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created = input;
        self
    }
    /// <p>The date and time when the most recent revision of the artifact was created, in timestamp format.</p>
    pub fn get_created(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created
    }
    /// <p>The summary of the most recent revision of the artifact.</p>
    pub fn revision_summary(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.revision_summary = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The summary of the most recent revision of the artifact.</p>
    pub fn set_revision_summary(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.revision_summary = input;
        self
    }
    /// <p>The summary of the most recent revision of the artifact.</p>
    pub fn get_revision_summary(&self) -> &::std::option::Option<::std::string::String> {
        &self.revision_summary
    }
    /// Consumes the builder and constructs a [`CurrentRevision`](crate::types::CurrentRevision).
    /// This method will fail if any of the following fields are not set:
    /// - [`revision`](crate::types::builders::CurrentRevisionBuilder::revision)
    /// - [`change_identifier`](crate::types::builders::CurrentRevisionBuilder::change_identifier)
    pub fn build(self) -> ::std::result::Result<crate::types::CurrentRevision, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CurrentRevision {
            revision: self.revision.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "revision",
                    "revision was not specified but it is required when building CurrentRevision",
                )
            })?,
            change_identifier: self.change_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "change_identifier",
                    "change_identifier was not specified but it is required when building CurrentRevision",
                )
            })?,
            created: self.created,
            revision_summary: self.revision_summary,
        })
    }
}
