// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListConfigurationHistoryInput {
    /// <p>Resource group to which the application belongs. </p>
    #[doc(hidden)]
    pub resource_group_name: std::option::Option<std::string::String>,
    /// <p>The start time of the event. </p>
    #[doc(hidden)]
    pub start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The end time of the event.</p>
    #[doc(hidden)]
    pub end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status of the configuration update event. Possible values include INFO, WARN, and ERROR.</p>
    #[doc(hidden)]
    pub event_status: std::option::Option<crate::types::ConfigurationEventStatus>,
    /// <p> The maximum number of results returned by <code>ListConfigurationHistory</code> in paginated output. When this parameter is used, <code>ListConfigurationHistory</code> returns only <code>MaxResults</code> in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListConfigurationHistory</code> request with the returned <code>NextToken</code> value. If this parameter is not used, then <code>ListConfigurationHistory</code> returns all results. </p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>The <code>NextToken</code> value returned from a previous paginated <code>ListConfigurationHistory</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListConfigurationHistoryInput {
    /// <p>Resource group to which the application belongs. </p>
    pub fn resource_group_name(&self) -> std::option::Option<&str> {
        self.resource_group_name.as_deref()
    }
    /// <p>The start time of the event. </p>
    pub fn start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>The end time of the event.</p>
    pub fn end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The status of the configuration update event. Possible values include INFO, WARN, and ERROR.</p>
    pub fn event_status(&self) -> std::option::Option<&crate::types::ConfigurationEventStatus> {
        self.event_status.as_ref()
    }
    /// <p> The maximum number of results returned by <code>ListConfigurationHistory</code> in paginated output. When this parameter is used, <code>ListConfigurationHistory</code> returns only <code>MaxResults</code> in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListConfigurationHistory</code> request with the returned <code>NextToken</code> value. If this parameter is not used, then <code>ListConfigurationHistory</code> returns all results. </p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>The <code>NextToken</code> value returned from a previous paginated <code>ListConfigurationHistory</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListConfigurationHistoryInput {
    /// Creates a new builder-style object to manufacture [`ListConfigurationHistoryInput`](crate::operation::list_configuration_history::ListConfigurationHistoryInput).
    pub fn builder(
    ) -> crate::operation::list_configuration_history::builders::ListConfigurationHistoryInputBuilder
    {
        crate::operation::list_configuration_history::builders::ListConfigurationHistoryInputBuilder::default()
    }
}

/// A builder for [`ListConfigurationHistoryInput`](crate::operation::list_configuration_history::ListConfigurationHistoryInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListConfigurationHistoryInputBuilder {
    pub(crate) resource_group_name: std::option::Option<std::string::String>,
    pub(crate) start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) event_status: std::option::Option<crate::types::ConfigurationEventStatus>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListConfigurationHistoryInputBuilder {
    /// <p>Resource group to which the application belongs. </p>
    pub fn resource_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_group_name = Some(input.into());
        self
    }
    /// <p>Resource group to which the application belongs. </p>
    pub fn set_resource_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_group_name = input;
        self
    }
    /// <p>The start time of the event. </p>
    pub fn start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_time = Some(input);
        self
    }
    /// <p>The start time of the event. </p>
    pub fn set_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The end time of the event.</p>
    pub fn end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_time = Some(input);
        self
    }
    /// <p>The end time of the event.</p>
    pub fn set_end_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The status of the configuration update event. Possible values include INFO, WARN, and ERROR.</p>
    pub fn event_status(mut self, input: crate::types::ConfigurationEventStatus) -> Self {
        self.event_status = Some(input);
        self
    }
    /// <p>The status of the configuration update event. Possible values include INFO, WARN, and ERROR.</p>
    pub fn set_event_status(
        mut self,
        input: std::option::Option<crate::types::ConfigurationEventStatus>,
    ) -> Self {
        self.event_status = input;
        self
    }
    /// <p> The maximum number of results returned by <code>ListConfigurationHistory</code> in paginated output. When this parameter is used, <code>ListConfigurationHistory</code> returns only <code>MaxResults</code> in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListConfigurationHistory</code> request with the returned <code>NextToken</code> value. If this parameter is not used, then <code>ListConfigurationHistory</code> returns all results. </p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p> The maximum number of results returned by <code>ListConfigurationHistory</code> in paginated output. When this parameter is used, <code>ListConfigurationHistory</code> returns only <code>MaxResults</code> in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListConfigurationHistory</code> request with the returned <code>NextToken</code> value. If this parameter is not used, then <code>ListConfigurationHistory</code> returns all results. </p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The <code>NextToken</code> value returned from a previous paginated <code>ListConfigurationHistory</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The <code>NextToken</code> value returned from a previous paginated <code>ListConfigurationHistory</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListConfigurationHistoryInput`](crate::operation::list_configuration_history::ListConfigurationHistoryInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_configuration_history::ListConfigurationHistoryInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_configuration_history::ListConfigurationHistoryInput {
                resource_group_name: self.resource_group_name,
                start_time: self.start_time,
                end_time: self.end_time,
                event_status: self.event_status,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
