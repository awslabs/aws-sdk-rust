// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::update_component_configuration::_update_component_configuration_output::UpdateComponentConfigurationOutputBuilder;

pub use crate::operation::update_component_configuration::_update_component_configuration_input::UpdateComponentConfigurationInputBuilder;

/// Fluent builder constructing a request to `UpdateComponentConfiguration`.
///
/// <p>Updates the monitoring configurations for the component. The configuration input parameter is an escaped JSON of the configuration and should match the schema of what is returned by <code>DescribeComponentConfigurationRecommendation</code>. </p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct UpdateComponentConfigurationFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::update_component_configuration::builders::UpdateComponentConfigurationInputBuilder
            }
impl UpdateComponentConfigurationFluentBuilder {
    /// Creates a new `UpdateComponentConfiguration`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::update_component_configuration::UpdateComponentConfiguration,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::update_component_configuration::UpdateComponentConfigurationError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::update_component_configuration::UpdateComponentConfigurationOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::update_component_configuration::UpdateComponentConfigurationError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The name of the resource group.</p>
    pub fn resource_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.resource_group_name(input.into());
        self
    }
    /// <p>The name of the resource group.</p>
    pub fn set_resource_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_resource_group_name(input);
        self
    }
    /// <p>The name of the component.</p>
    pub fn component_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.component_name(input.into());
        self
    }
    /// <p>The name of the component.</p>
    pub fn set_component_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_component_name(input);
        self
    }
    /// <p>Indicates whether the application component is monitored.</p>
    pub fn monitor(mut self, input: bool) -> Self {
        self.inner = self.inner.monitor(input);
        self
    }
    /// <p>Indicates whether the application component is monitored.</p>
    pub fn set_monitor(mut self, input: std::option::Option<bool>) -> Self {
        self.inner = self.inner.set_monitor(input);
        self
    }
    /// <p>The tier of the application component.</p>
    pub fn tier(mut self, input: crate::types::Tier) -> Self {
        self.inner = self.inner.tier(input);
        self
    }
    /// <p>The tier of the application component.</p>
    pub fn set_tier(mut self, input: std::option::Option<crate::types::Tier>) -> Self {
        self.inner = self.inner.set_tier(input);
        self
    }
    /// <p>The configuration settings of the component. The value is the escaped JSON of the configuration. For more information about the JSON format, see <a href="https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/working-with-json.html">Working with JSON</a>. You can send a request to <code>DescribeComponentConfigurationRecommendation</code> to see the recommended configuration for a component. For the complete format of the component configuration file, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/component-config.html">Component Configuration</a>.</p>
    pub fn component_configuration(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.component_configuration(input.into());
        self
    }
    /// <p>The configuration settings of the component. The value is the escaped JSON of the configuration. For more information about the JSON format, see <a href="https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/working-with-json.html">Working with JSON</a>. You can send a request to <code>DescribeComponentConfigurationRecommendation</code> to see the recommended configuration for a component. For the complete format of the component configuration file, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/component-config.html">Component Configuration</a>.</p>
    pub fn set_component_configuration(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_component_configuration(input);
        self
    }
    /// <p> Automatically configures the component by applying the recommended configurations. </p>
    pub fn auto_config_enabled(mut self, input: bool) -> Self {
        self.inner = self.inner.auto_config_enabled(input);
        self
    }
    /// <p> Automatically configures the component by applying the recommended configurations. </p>
    pub fn set_auto_config_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.inner = self.inner.set_auto_config_enabled(input);
        self
    }
}
