// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteLogPatternInput {
    /// <p>The name of the resource group.</p>
    pub resource_group_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the log pattern set.</p>
    pub pattern_set_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the log pattern.</p>
    pub pattern_name: ::std::option::Option<::std::string::String>,
}
impl DeleteLogPatternInput {
    /// <p>The name of the resource group.</p>
    pub fn resource_group_name(&self) -> ::std::option::Option<&str> {
        self.resource_group_name.as_deref()
    }
    /// <p>The name of the log pattern set.</p>
    pub fn pattern_set_name(&self) -> ::std::option::Option<&str> {
        self.pattern_set_name.as_deref()
    }
    /// <p>The name of the log pattern.</p>
    pub fn pattern_name(&self) -> ::std::option::Option<&str> {
        self.pattern_name.as_deref()
    }
}
impl DeleteLogPatternInput {
    /// Creates a new builder-style object to manufacture [`DeleteLogPatternInput`](crate::operation::delete_log_pattern::DeleteLogPatternInput).
    pub fn builder() -> crate::operation::delete_log_pattern::builders::DeleteLogPatternInputBuilder {
        crate::operation::delete_log_pattern::builders::DeleteLogPatternInputBuilder::default()
    }
}

/// A builder for [`DeleteLogPatternInput`](crate::operation::delete_log_pattern::DeleteLogPatternInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteLogPatternInputBuilder {
    pub(crate) resource_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) pattern_set_name: ::std::option::Option<::std::string::String>,
    pub(crate) pattern_name: ::std::option::Option<::std::string::String>,
}
impl DeleteLogPatternInputBuilder {
    /// <p>The name of the resource group.</p>
    /// This field is required.
    pub fn resource_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the resource group.</p>
    pub fn set_resource_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_group_name = input;
        self
    }
    /// <p>The name of the resource group.</p>
    pub fn get_resource_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_group_name
    }
    /// <p>The name of the log pattern set.</p>
    /// This field is required.
    pub fn pattern_set_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pattern_set_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the log pattern set.</p>
    pub fn set_pattern_set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pattern_set_name = input;
        self
    }
    /// <p>The name of the log pattern set.</p>
    pub fn get_pattern_set_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.pattern_set_name
    }
    /// <p>The name of the log pattern.</p>
    /// This field is required.
    pub fn pattern_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pattern_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the log pattern.</p>
    pub fn set_pattern_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pattern_name = input;
        self
    }
    /// <p>The name of the log pattern.</p>
    pub fn get_pattern_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.pattern_name
    }
    /// Consumes the builder and constructs a [`DeleteLogPatternInput`](crate::operation::delete_log_pattern::DeleteLogPatternInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_log_pattern::DeleteLogPatternInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_log_pattern::DeleteLogPatternInput {
            resource_group_name: self.resource_group_name,
            pattern_set_name: self.pattern_set_name,
            pattern_name: self.pattern_name,
        })
    }
}
