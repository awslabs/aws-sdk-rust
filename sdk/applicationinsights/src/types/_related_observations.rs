// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes observations related to the problem.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RelatedObservations {
    /// <p>The list of observations related to the problem.</p>
    #[doc(hidden)]
    pub observation_list: std::option::Option<std::vec::Vec<crate::types::Observation>>,
}
impl RelatedObservations {
    /// <p>The list of observations related to the problem.</p>
    pub fn observation_list(&self) -> std::option::Option<&[crate::types::Observation]> {
        self.observation_list.as_deref()
    }
}
impl RelatedObservations {
    /// Creates a new builder-style object to manufacture [`RelatedObservations`](crate::types::RelatedObservations).
    pub fn builder() -> crate::types::builders::RelatedObservationsBuilder {
        crate::types::builders::RelatedObservationsBuilder::default()
    }
}

/// A builder for [`RelatedObservations`](crate::types::RelatedObservations).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RelatedObservationsBuilder {
    pub(crate) observation_list: std::option::Option<std::vec::Vec<crate::types::Observation>>,
}
impl RelatedObservationsBuilder {
    /// Appends an item to `observation_list`.
    ///
    /// To override the contents of this collection use [`set_observation_list`](Self::set_observation_list).
    ///
    /// <p>The list of observations related to the problem.</p>
    pub fn observation_list(mut self, input: crate::types::Observation) -> Self {
        let mut v = self.observation_list.unwrap_or_default();
        v.push(input);
        self.observation_list = Some(v);
        self
    }
    /// <p>The list of observations related to the problem.</p>
    pub fn set_observation_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Observation>>,
    ) -> Self {
        self.observation_list = input;
        self
    }
    /// Consumes the builder and constructs a [`RelatedObservations`](crate::types::RelatedObservations).
    pub fn build(self) -> crate::types::RelatedObservations {
        crate::types::RelatedObservations {
            observation_list: self.observation_list,
        }
    }
}
