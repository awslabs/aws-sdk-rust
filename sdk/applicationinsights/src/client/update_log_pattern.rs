// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLogPattern`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_group_name(impl Into<String>)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::resource_group_name) / [`set_resource_group_name(Option<String>)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::set_resource_group_name): <p>The name of the resource group.</p>
    ///   - [`pattern_set_name(impl Into<String>)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::pattern_set_name) / [`set_pattern_set_name(Option<String>)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::set_pattern_set_name): <p>The name of the log pattern set.</p>
    ///   - [`pattern_name(impl Into<String>)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::pattern_name) / [`set_pattern_name(Option<String>)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::set_pattern_name): <p>The name of the log pattern.</p>
    ///   - [`pattern(impl Into<String>)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::pattern) / [`set_pattern(Option<String>)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::set_pattern): <p>The log pattern. The pattern must be DFA compatible. Patterns that utilize forward lookahead or backreference constructions are not supported.</p>
    ///   - [`rank(i32)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::rank) / [`set_rank(i32)`](crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::set_rank): <p>Rank of the log pattern. Must be a value between <code>1</code> and <code>1,000,000</code>. The patterns are sorted by rank, so we recommend that you set your highest priority patterns with the lowest rank. A pattern of rank <code>1</code> will be the first to get matched to a log line. A pattern of rank <code>1,000,000</code> will be last to get matched. When you configure custom log patterns from the console, a <code>Low</code> severity pattern translates to a <code>750,000</code> rank. A <code>Medium</code> severity pattern translates to a <code>500,000</code> rank. And a <code>High</code> severity pattern translates to a <code>250,000</code> rank. Rank values less than <code>1</code> or greater than <code>1,000,000</code> are reserved for AWS-provided patterns. </p>
    /// - On success, responds with [`UpdateLogPatternOutput`](crate::operation::update_log_pattern::UpdateLogPatternOutput) with field(s):
    ///   - [`resource_group_name(Option<String>)`](crate::operation::update_log_pattern::UpdateLogPatternOutput::resource_group_name): <p>The name of the resource group.</p>
    ///   - [`log_pattern(Option<LogPattern>)`](crate::operation::update_log_pattern::UpdateLogPatternOutput::log_pattern): <p>The successfully created log pattern.</p>
    /// - On failure, responds with [`SdkError<UpdateLogPatternError>`](crate::operation::update_log_pattern::UpdateLogPatternError)
    pub fn update_log_pattern(
        &self,
    ) -> crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder {
        crate::operation::update_log_pattern::builders::UpdateLogPatternFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
