// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AddWorkload`](crate::operation::add_workload::builders::AddWorkloadFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_group_name(impl Into<String>)`](crate::operation::add_workload::builders::AddWorkloadFluentBuilder::resource_group_name) / [`set_resource_group_name(Option<String>)`](crate::operation::add_workload::builders::AddWorkloadFluentBuilder::set_resource_group_name):<br>required: **true**<br><p>The name of the resource group.</p><br>
    ///   - [`component_name(impl Into<String>)`](crate::operation::add_workload::builders::AddWorkloadFluentBuilder::component_name) / [`set_component_name(Option<String>)`](crate::operation::add_workload::builders::AddWorkloadFluentBuilder::set_component_name):<br>required: **true**<br><p>The name of the component.</p><br>
    ///   - [`workload_configuration(WorkloadConfiguration)`](crate::operation::add_workload::builders::AddWorkloadFluentBuilder::workload_configuration) / [`set_workload_configuration(Option<WorkloadConfiguration>)`](crate::operation::add_workload::builders::AddWorkloadFluentBuilder::set_workload_configuration):<br>required: **true**<br><p>The configuration settings of the workload. The value is the escaped JSON of the configuration.</p><br>
    /// - On success, responds with [`AddWorkloadOutput`](crate::operation::add_workload::AddWorkloadOutput) with field(s):
    ///   - [`workload_id(Option<String>)`](crate::operation::add_workload::AddWorkloadOutput::workload_id): <p>The ID of the workload.</p>
    ///   - [`workload_configuration(Option<WorkloadConfiguration>)`](crate::operation::add_workload::AddWorkloadOutput::workload_configuration): <p>The configuration settings of the workload. The value is the escaped JSON of the configuration.</p>
    /// - On failure, responds with [`SdkError<AddWorkloadError>`](crate::operation::add_workload::AddWorkloadError)
    pub fn add_workload(&self) -> crate::operation::add_workload::builders::AddWorkloadFluentBuilder {
        crate::operation::add_workload::builders::AddWorkloadFluentBuilder::new(self.handle.clone())
    }
}
