#![allow(clippy::module_inception)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::large_enum_variant)]
#![allow(clippy::wrong_self_convention)]
#![allow(clippy::should_implement_trait)]
#![allow(clippy::blacklisted_name)]
#![allow(clippy::vec_init_then_push)]
//! <fullname>Amazon CloudWatch Application Insights</fullname>
//! <p> Amazon CloudWatch Application Insights is a service that
//! helps you detect common problems with your applications. It
//! enables you to pinpoint the source of issues in your applications (built with technologies
//! such as Microsoft IIS, .NET, and Microsoft SQL Server), by providing key insights into
//! detected problems.</p>
//! <p>After you onboard your application, CloudWatch Application Insights identifies,
//! recommends, and sets up metrics and logs. It continuously analyzes and
//! correlates your metrics and logs for unusual behavior to surface actionable problems with
//! your application. For example, if your application is slow and unresponsive and leading to
//! HTTP 500 errors in your Application Load Balancer (ALB), Application Insights informs you
//! that a memory pressure problem with your SQL Server database is occurring. It bases this
//! analysis on impactful metrics and log errors. </p>

// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use error_meta::Error;

pub use config::Config;

mod aws_endpoint;
#[cfg(feature = "client")]
pub mod client;
pub mod config;
pub mod error;
mod error_meta;
pub mod input;
mod json_deser;
mod json_errors;
mod json_ser;
pub mod model;
mod no_credentials;
pub mod operation;
mod operation_deser;
mod operation_ser;
pub mod output;
pub static PKG_VERSION: &str = env!("CARGO_PKG_VERSION");
pub use smithy_http::byte_stream::ByteStream;
pub use smithy_http::result::SdkError;
pub use smithy_types::Blob;
static API_METADATA: aws_http::user_agent::ApiMetadata =
    aws_http::user_agent::ApiMetadata::new("applicationinsights", PKG_VERSION);
pub use aws_types::region::Region;
pub use aws_types::Credentials;
#[cfg(feature = "client")]
pub use client::Client;
pub use smithy_http::endpoint::Endpoint;
