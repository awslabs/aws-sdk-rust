// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for AWS Proton
///
/// Client for invoking operations on AWS Proton. Each operation on AWS Proton is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_proton::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_proton::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_proton::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AcceptEnvironmentAccountConnection`](crate::client::fluent_builders::AcceptEnvironmentAccountConnection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::AcceptEnvironmentAccountConnection::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::AcceptEnvironmentAccountConnection::set_id): <p>The ID of the environment account connection.</p>
    /// - On success, responds with [`AcceptEnvironmentAccountConnectionOutput`](crate::output::AcceptEnvironmentAccountConnectionOutput) with field(s):
    ///   - [`environment_account_connection(Option<EnvironmentAccountConnection>)`](crate::output::AcceptEnvironmentAccountConnectionOutput::environment_account_connection): <p>The environment account connection data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<AcceptEnvironmentAccountConnectionError>`](crate::error::AcceptEnvironmentAccountConnectionError)
    pub fn accept_environment_account_connection(
        &self,
    ) -> crate::client::fluent_builders::AcceptEnvironmentAccountConnection {
        crate::client::fluent_builders::AcceptEnvironmentAccountConnection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CancelComponentDeployment`](crate::client::fluent_builders::CancelComponentDeployment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`component_name(impl Into<String>)`](crate::client::fluent_builders::CancelComponentDeployment::component_name) / [`set_component_name(Option<String>)`](crate::client::fluent_builders::CancelComponentDeployment::set_component_name): <p>The name of the component with the deployment to cancel.</p>
    /// - On success, responds with [`CancelComponentDeploymentOutput`](crate::output::CancelComponentDeploymentOutput) with field(s):
    ///   - [`component(Option<Component>)`](crate::output::CancelComponentDeploymentOutput::component): <p>The detailed data of the component with the deployment that is being canceled.</p>
    /// - On failure, responds with [`SdkError<CancelComponentDeploymentError>`](crate::error::CancelComponentDeploymentError)
    pub fn cancel_component_deployment(
        &self,
    ) -> crate::client::fluent_builders::CancelComponentDeployment {
        crate::client::fluent_builders::CancelComponentDeployment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CancelEnvironmentDeployment`](crate::client::fluent_builders::CancelEnvironmentDeployment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::CancelEnvironmentDeployment::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::CancelEnvironmentDeployment::set_environment_name): <p>The name of the environment with the deployment to cancel.</p>
    /// - On success, responds with [`CancelEnvironmentDeploymentOutput`](crate::output::CancelEnvironmentDeploymentOutput) with field(s):
    ///   - [`environment(Option<Environment>)`](crate::output::CancelEnvironmentDeploymentOutput::environment): <p>The environment summary data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CancelEnvironmentDeploymentError>`](crate::error::CancelEnvironmentDeploymentError)
    pub fn cancel_environment_deployment(
        &self,
    ) -> crate::client::fluent_builders::CancelEnvironmentDeployment {
        crate::client::fluent_builders::CancelEnvironmentDeployment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CancelServiceInstanceDeployment`](crate::client::fluent_builders::CancelServiceInstanceDeployment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_instance_name(impl Into<String>)`](crate::client::fluent_builders::CancelServiceInstanceDeployment::service_instance_name) / [`set_service_instance_name(Option<String>)`](crate::client::fluent_builders::CancelServiceInstanceDeployment::set_service_instance_name): <p>The name of the service instance with the deployment to cancel.</p>
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::CancelServiceInstanceDeployment::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::CancelServiceInstanceDeployment::set_service_name): <p>The name of the service with the service instance deployment to cancel.</p>
    /// - On success, responds with [`CancelServiceInstanceDeploymentOutput`](crate::output::CancelServiceInstanceDeploymentOutput) with field(s):
    ///   - [`service_instance(Option<ServiceInstance>)`](crate::output::CancelServiceInstanceDeploymentOutput::service_instance): <p>The service instance summary data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CancelServiceInstanceDeploymentError>`](crate::error::CancelServiceInstanceDeploymentError)
    pub fn cancel_service_instance_deployment(
        &self,
    ) -> crate::client::fluent_builders::CancelServiceInstanceDeployment {
        crate::client::fluent_builders::CancelServiceInstanceDeployment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CancelServicePipelineDeployment`](crate::client::fluent_builders::CancelServicePipelineDeployment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::CancelServicePipelineDeployment::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::CancelServicePipelineDeployment::set_service_name): <p>The name of the service with the service pipeline deployment to cancel.</p>
    /// - On success, responds with [`CancelServicePipelineDeploymentOutput`](crate::output::CancelServicePipelineDeploymentOutput) with field(s):
    ///   - [`pipeline(Option<ServicePipeline>)`](crate::output::CancelServicePipelineDeploymentOutput::pipeline): <p>The service pipeline detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CancelServicePipelineDeploymentError>`](crate::error::CancelServicePipelineDeploymentError)
    pub fn cancel_service_pipeline_deployment(
        &self,
    ) -> crate::client::fluent_builders::CancelServicePipelineDeployment {
        crate::client::fluent_builders::CancelServicePipelineDeployment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateComponent`](crate::client::fluent_builders::CreateComponent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateComponent::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateComponent::set_name): <p>The customer-provided name of the component.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateComponent::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateComponent::set_description): <p>An optional customer-provided description of the component.</p>
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::CreateComponent::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::CreateComponent::set_service_name): <p>The name of the service that <code>serviceInstanceName</code> is associated with. If you don't specify this, the component isn't attached to any service instance. Specify both <code>serviceInstanceName</code> and <code>serviceName</code> or neither of them.</p>
    ///   - [`service_instance_name(impl Into<String>)`](crate::client::fluent_builders::CreateComponent::service_instance_name) / [`set_service_instance_name(Option<String>)`](crate::client::fluent_builders::CreateComponent::set_service_instance_name): <p>The name of the service instance that you want to attach this component to. If you don't specify this, the component isn't attached to any service instance. Specify both <code>serviceInstanceName</code> and <code>serviceName</code> or neither of them.</p>
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::CreateComponent::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::CreateComponent::set_environment_name): <p>The name of the Proton environment that you want to associate this component with. You must specify this when you don't specify <code>serviceInstanceName</code> and <code>serviceName</code>.</p>
    ///   - [`template_file(impl Into<String>)`](crate::client::fluent_builders::CreateComponent::template_file) / [`set_template_file(Option<String>)`](crate::client::fluent_builders::CreateComponent::set_template_file): <p>A path to the Infrastructure as Code (IaC) file describing infrastructure that a custom component provisions.</p> <note>   <p>Components support a single IaC file, even if you use Terraform as your template language.</p>  </note>
    ///   - [`manifest(impl Into<String>)`](crate::client::fluent_builders::CreateComponent::manifest) / [`set_manifest(Option<String>)`](crate::client::fluent_builders::CreateComponent::set_manifest): <p>A path to a manifest file that lists the Infrastructure as Code (IaC) file, template language, and rendering engine for infrastructure that a custom component provisions.</p>
    ///   - [`service_spec(impl Into<String>)`](crate::client::fluent_builders::CreateComponent::service_spec) / [`set_service_spec(Option<String>)`](crate::client::fluent_builders::CreateComponent::set_service_spec): <p>The service spec that you want the component to use to access service inputs. Set this only when you attach the component to a service instance.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateComponent::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateComponent::set_tags): <p>An optional list of metadata items that you can associate with the Proton component. A tag is a key-value pair.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    /// - On success, responds with [`CreateComponentOutput`](crate::output::CreateComponentOutput) with field(s):
    ///   - [`component(Option<Component>)`](crate::output::CreateComponentOutput::component): <p>The detailed data of the created component.</p>
    /// - On failure, responds with [`SdkError<CreateComponentError>`](crate::error::CreateComponentError)
    pub fn create_component(&self) -> crate::client::fluent_builders::CreateComponent {
        crate::client::fluent_builders::CreateComponent::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEnvironment`](crate::client::fluent_builders::CreateEnvironment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_name): <p>The name of the environment.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_template_name): <p>The name of the environment template. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-templates.html">Environment Templates</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`template_major_version(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::template_major_version) / [`set_template_major_version(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_template_major_version): <p>The major version of the environment template.</p>
    ///   - [`template_minor_version(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::template_minor_version) / [`set_template_minor_version(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_template_minor_version): <p>The minor version of the environment template.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_description): <p>A description of the environment that's being created and deployed.</p>
    ///   - [`spec(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::spec) / [`set_spec(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_spec): <p>A YAML formatted string that provides inputs as defined in the environment template bundle schema file. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-environments.html">Environments</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`proton_service_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::proton_service_role_arn) / [`set_proton_service_role_arn(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_proton_service_role_arn): <p>The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make calls to other services on your behalf.</p>  <p>To use Amazon Web Services-managed provisioning for the environment, specify either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and omit the <code>provisioningRepository</code> parameter.</p>
    ///   - [`environment_account_connection_id(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::environment_account_connection_id) / [`set_environment_account_connection_id(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_environment_account_connection_id): <p>The ID of the environment account connection that you provide if you're provisioning your environment infrastructure resources to an environment account. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p>  <p>To use Amazon Web Services-managed provisioning for the environment, specify either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and omit the <code>provisioningRepository</code> parameter.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateEnvironment::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateEnvironment::set_tags): <p>An optional list of metadata items that you can associate with the Proton environment. A tag is a key-value pair.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`provisioning_repository(RepositoryBranchInput)`](crate::client::fluent_builders::CreateEnvironment::provisioning_repository) / [`set_provisioning_repository(Option<RepositoryBranchInput>)`](crate::client::fluent_builders::CreateEnvironment::set_provisioning_repository): <p>The linked repository that you use to host your rendered infrastructure templates for self-managed provisioning. A linked repository is a repository that has been registered with Proton. For more information, see <code>CreateRepository</code>.</p>  <p>To use self-managed provisioning for the environment, specify this parameter and omit the <code>environmentAccountConnectionId</code> and <code>protonServiceRoleArn</code> parameters.</p>
    ///   - [`component_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::component_role_arn) / [`set_component_role_arn(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_component_role_arn): <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It determines the scope of infrastructure that a component can provision.</p>  <p>You must specify <code>componentRoleArn</code> to allow directly defined components to be associated with this environment.</p>  <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`codebuild_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironment::codebuild_role_arn) / [`set_codebuild_role_arn(Option<String>)`](crate::client::fluent_builders::CreateEnvironment::set_codebuild_role_arn): <p>The Amazon Resource Name (ARN) of the IAM service role that allows Proton to provision infrastructure using CodeBuild-based provisioning on your behalf.</p>  <p>To use CodeBuild-based provisioning for the environment or for any service instance running in the environment, specify either the <code>environmentAccountConnectionId</code> or <code>codebuildRoleArn</code> parameter.</p>
    /// - On success, responds with [`CreateEnvironmentOutput`](crate::output::CreateEnvironmentOutput) with field(s):
    ///   - [`environment(Option<Environment>)`](crate::output::CreateEnvironmentOutput::environment): <p>The environment detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CreateEnvironmentError>`](crate::error::CreateEnvironmentError)
    pub fn create_environment(&self) -> crate::client::fluent_builders::CreateEnvironment {
        crate::client::fluent_builders::CreateEnvironment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEnvironmentAccountConnection`](crate::client::fluent_builders::CreateEnvironmentAccountConnection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::set_client_token): <p>When included, if two identical requests are made with the same client token, Proton returns the environment account connection that the first request created.</p>
    ///   - [`management_account_id(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::management_account_id) / [`set_management_account_id(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::set_management_account_id): <p>The ID of the management account that accepts or rejects the environment account connection. You create and manage the Proton environment in this account. If the management account accepts the environment account connection, Proton can use the associated IAM role to provision environment infrastructure resources in the associated environment account.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::set_role_arn): <p>The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. Proton uses this role to provision infrastructure resources in the associated environment account.</p>
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::set_environment_name): <p>The name of the Proton environment that's created in the associated management account.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::set_tags): <p>An optional list of metadata items that you can associate with the Proton environment account connection. A tag is a key-value pair.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`component_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::component_role_arn) / [`set_component_role_arn(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::set_component_role_arn): <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>  <p>You must specify <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in this account.</p>  <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`codebuild_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::codebuild_role_arn) / [`set_codebuild_role_arn(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentAccountConnection::set_codebuild_role_arn): <p>The Amazon Resource Name (ARN) of an IAM service role in the environment account. Proton uses this role to provision infrastructure resources using CodeBuild-based provisioning in the associated environment account.</p>
    /// - On success, responds with [`CreateEnvironmentAccountConnectionOutput`](crate::output::CreateEnvironmentAccountConnectionOutput) with field(s):
    ///   - [`environment_account_connection(Option<EnvironmentAccountConnection>)`](crate::output::CreateEnvironmentAccountConnectionOutput::environment_account_connection): <p>The environment account connection detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CreateEnvironmentAccountConnectionError>`](crate::error::CreateEnvironmentAccountConnectionError)
    pub fn create_environment_account_connection(
        &self,
    ) -> crate::client::fluent_builders::CreateEnvironmentAccountConnection {
        crate::client::fluent_builders::CreateEnvironmentAccountConnection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEnvironmentTemplate`](crate::client::fluent_builders::CreateEnvironmentTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::set_name): <p>The name of the environment template.</p>
    ///   - [`display_name(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::display_name) / [`set_display_name(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::set_display_name): <p>The environment template name as displayed in the developer interface.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::set_description): <p>A description of the environment template.</p>
    ///   - [`encryption_key(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::encryption_key) / [`set_encryption_key(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::set_encryption_key): <p>A customer provided encryption key that Proton uses to encrypt data.</p>
    ///   - [`provisioning(Provisioning)`](crate::client::fluent_builders::CreateEnvironmentTemplate::provisioning) / [`set_provisioning(Option<Provisioning>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::set_provisioning): <p>When included, indicates that the environment template is for customer provisioned and managed infrastructure.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateEnvironmentTemplate::set_tags): <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    /// - On success, responds with [`CreateEnvironmentTemplateOutput`](crate::output::CreateEnvironmentTemplateOutput) with field(s):
    ///   - [`environment_template(Option<EnvironmentTemplate>)`](crate::output::CreateEnvironmentTemplateOutput::environment_template): <p>The environment template detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CreateEnvironmentTemplateError>`](crate::error::CreateEnvironmentTemplateError)
    pub fn create_environment_template(
        &self,
    ) -> crate::client::fluent_builders::CreateEnvironmentTemplate {
        crate::client::fluent_builders::CreateEnvironmentTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEnvironmentTemplateVersion`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::set_client_token): <p>When included, if two identical requests are made with the same client token, Proton returns the environment template version that the first request created.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::set_template_name): <p>The name of the environment template.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::set_description): <p>A description of the new version of an environment template.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::set_major_version): <p>To create a new minor version of the environment template, include <code>major Version</code>.</p>  <p>To create a new major and minor version of the environment template, exclude <code>major Version</code>.</p>
    ///   - [`source(TemplateVersionSourceInput)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::source) / [`set_source(Option<TemplateVersionSourceInput>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::set_source): <p>An object that includes the template bundle S3 bucket path and name for the new version of an template.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateEnvironmentTemplateVersion::set_tags): <p>An optional list of metadata items that you can associate with the Proton environment template version. A tag is a key-value pair.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    /// - On success, responds with [`CreateEnvironmentTemplateVersionOutput`](crate::output::CreateEnvironmentTemplateVersionOutput) with field(s):
    ///   - [`environment_template_version(Option<EnvironmentTemplateVersion>)`](crate::output::CreateEnvironmentTemplateVersionOutput::environment_template_version): <p>The environment template detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CreateEnvironmentTemplateVersionError>`](crate::error::CreateEnvironmentTemplateVersionError)
    pub fn create_environment_template_version(
        &self,
    ) -> crate::client::fluent_builders::CreateEnvironmentTemplateVersion {
        crate::client::fluent_builders::CreateEnvironmentTemplateVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateRepository`](crate::client::fluent_builders::CreateRepository) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`provider(RepositoryProvider)`](crate::client::fluent_builders::CreateRepository::provider) / [`set_provider(Option<RepositoryProvider>)`](crate::client::fluent_builders::CreateRepository::set_provider): <p>The repository provider.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateRepository::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateRepository::set_name): <p>The repository name (for example, <code>myrepos/myrepo</code>).</p>
    ///   - [`connection_arn(impl Into<String>)`](crate::client::fluent_builders::CreateRepository::connection_arn) / [`set_connection_arn(Option<String>)`](crate::client::fluent_builders::CreateRepository::set_connection_arn): <p>The Amazon Resource Name (ARN) of your AWS CodeStar connection that connects Proton to your repository provider account. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/setting-up-for-service.html">Setting up for Proton</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`encryption_key(impl Into<String>)`](crate::client::fluent_builders::CreateRepository::encryption_key) / [`set_encryption_key(Option<String>)`](crate::client::fluent_builders::CreateRepository::set_encryption_key): <p>The ARN of your customer Amazon Web Services Key Management Service (Amazon Web Services KMS) key.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateRepository::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateRepository::set_tags): <p>An optional list of metadata items that you can associate with the Proton repository. A tag is a key-value pair.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    /// - On success, responds with [`CreateRepositoryOutput`](crate::output::CreateRepositoryOutput) with field(s):
    ///   - [`repository(Option<Repository>)`](crate::output::CreateRepositoryOutput::repository): <p>The repository link's detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CreateRepositoryError>`](crate::error::CreateRepositoryError)
    pub fn create_repository(&self) -> crate::client::fluent_builders::CreateRepository {
        crate::client::fluent_builders::CreateRepository::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateService`](crate::client::fluent_builders::CreateService) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateService::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateService::set_name): <p>The service name.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateService::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateService::set_description): <p>A description of the Proton service.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateService::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateService::set_template_name): <p>The name of the service template that's used to create the service.</p>
    ///   - [`template_major_version(impl Into<String>)`](crate::client::fluent_builders::CreateService::template_major_version) / [`set_template_major_version(Option<String>)`](crate::client::fluent_builders::CreateService::set_template_major_version): <p>The major version of the service template that was used to create the service.</p>
    ///   - [`template_minor_version(impl Into<String>)`](crate::client::fluent_builders::CreateService::template_minor_version) / [`set_template_minor_version(Option<String>)`](crate::client::fluent_builders::CreateService::set_template_minor_version): <p>The minor version of the service template that was used to create the service.</p>
    ///   - [`spec(impl Into<String>)`](crate::client::fluent_builders::CreateService::spec) / [`set_spec(Option<String>)`](crate::client::fluent_builders::CreateService::set_spec): <p>A link to a spec file that provides inputs as defined in the service template bundle schema file. The spec file is in YAML format. <i>Don’t</i> include pipeline inputs in the spec if your service template <i>doesn’t</i> include a service pipeline. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-create-svc.html">Create a service</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`repository_connection_arn(impl Into<String>)`](crate::client::fluent_builders::CreateService::repository_connection_arn) / [`set_repository_connection_arn(Option<String>)`](crate::client::fluent_builders::CreateService::set_repository_connection_arn): <p>The Amazon Resource Name (ARN) of the repository connection. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/setting-up-for-service.html#setting-up-vcontrol">Setting up an AWS CodeStar connection</a> in the <i>Proton User Guide</i>. <i>Don't</i> include this parameter if your service template <i>doesn't</i> include a service pipeline.</p>
    ///   - [`repository_id(impl Into<String>)`](crate::client::fluent_builders::CreateService::repository_id) / [`set_repository_id(Option<String>)`](crate::client::fluent_builders::CreateService::set_repository_id): <p>The ID of the code repository. <i>Don't</i> include this parameter if your service template <i>doesn't</i> include a service pipeline.</p>
    ///   - [`branch_name(impl Into<String>)`](crate::client::fluent_builders::CreateService::branch_name) / [`set_branch_name(Option<String>)`](crate::client::fluent_builders::CreateService::set_branch_name): <p>The name of the code repository branch that holds the code that's deployed in Proton. <i>Don't</i> include this parameter if your service template <i>doesn't</i> include a service pipeline.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateService::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateService::set_tags): <p>An optional list of metadata items that you can associate with the Proton service. A tag is a key-value pair.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    /// - On success, responds with [`CreateServiceOutput`](crate::output::CreateServiceOutput) with field(s):
    ///   - [`service(Option<Service>)`](crate::output::CreateServiceOutput::service): <p>The service detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CreateServiceError>`](crate::error::CreateServiceError)
    pub fn create_service(&self) -> crate::client::fluent_builders::CreateService {
        crate::client::fluent_builders::CreateService::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateServiceTemplate`](crate::client::fluent_builders::CreateServiceTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateServiceTemplate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateServiceTemplate::set_name): <p>The name of the service template.</p>
    ///   - [`display_name(impl Into<String>)`](crate::client::fluent_builders::CreateServiceTemplate::display_name) / [`set_display_name(Option<String>)`](crate::client::fluent_builders::CreateServiceTemplate::set_display_name): <p>The name of the service template as displayed in the developer interface.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateServiceTemplate::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateServiceTemplate::set_description): <p>A description of the service template.</p>
    ///   - [`encryption_key(impl Into<String>)`](crate::client::fluent_builders::CreateServiceTemplate::encryption_key) / [`set_encryption_key(Option<String>)`](crate::client::fluent_builders::CreateServiceTemplate::set_encryption_key): <p>A customer provided encryption key that's used to encrypt data.</p>
    ///   - [`pipeline_provisioning(Provisioning)`](crate::client::fluent_builders::CreateServiceTemplate::pipeline_provisioning) / [`set_pipeline_provisioning(Option<Provisioning>)`](crate::client::fluent_builders::CreateServiceTemplate::set_pipeline_provisioning): <p>By default, Proton provides a service pipeline for your service. When this parameter is included, it indicates that an Proton service pipeline <i>isn't</i> provided for your service. After it's included, it <i>can't</i> be changed. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-template-authoring.html#ag-template-bundles">Template bundles</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateServiceTemplate::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateServiceTemplate::set_tags): <p>An optional list of metadata items that you can associate with the Proton service template. A tag is a key-value pair.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    /// - On success, responds with [`CreateServiceTemplateOutput`](crate::output::CreateServiceTemplateOutput) with field(s):
    ///   - [`service_template(Option<ServiceTemplate>)`](crate::output::CreateServiceTemplateOutput::service_template): <p>The service template detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CreateServiceTemplateError>`](crate::error::CreateServiceTemplateError)
    pub fn create_service_template(&self) -> crate::client::fluent_builders::CreateServiceTemplate {
        crate::client::fluent_builders::CreateServiceTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateServiceTemplateVersion`](crate::client::fluent_builders::CreateServiceTemplateVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::set_client_token): <p>When included, if two identical requests are made with the same client token, Proton returns the service template version that the first request created.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::set_template_name): <p>The name of the service template.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::set_description): <p>A description of the new version of a service template.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::set_major_version): <p>To create a new minor version of the service template, include a <code>major Version</code>.</p>  <p>To create a new major and minor version of the service template, <i>exclude</i> <code>major Version</code>.</p>
    ///   - [`source(TemplateVersionSourceInput)`](crate::client::fluent_builders::CreateServiceTemplateVersion::source) / [`set_source(Option<TemplateVersionSourceInput>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::set_source): <p>An object that includes the template bundle S3 bucket path and name for the new version of a service template.</p>
    ///   - [`compatible_environment_templates(Vec<CompatibleEnvironmentTemplateInput>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::compatible_environment_templates) / [`set_compatible_environment_templates(Option<Vec<CompatibleEnvironmentTemplateInput>>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::set_compatible_environment_templates): <p>An array of environment template objects that are compatible with the new service template version. A service instance based on this service template version can run in environments based on compatible templates.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::set_tags): <p>An optional list of metadata items that you can associate with the Proton service template version. A tag is a key-value pair.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`supported_component_sources(Vec<ServiceTemplateSupportedComponentSourceType>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::supported_component_sources) / [`set_supported_component_sources(Option<Vec<ServiceTemplateSupportedComponentSourceType>>)`](crate::client::fluent_builders::CreateServiceTemplateVersion::set_supported_component_sources): <p>An array of supported component sources. Components with supported sources can be attached to service instances based on this service template version.</p>  <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    /// - On success, responds with [`CreateServiceTemplateVersionOutput`](crate::output::CreateServiceTemplateVersionOutput) with field(s):
    ///   - [`service_template_version(Option<ServiceTemplateVersion>)`](crate::output::CreateServiceTemplateVersionOutput::service_template_version): <p>The service template version summary of detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CreateServiceTemplateVersionError>`](crate::error::CreateServiceTemplateVersionError)
    pub fn create_service_template_version(
        &self,
    ) -> crate::client::fluent_builders::CreateServiceTemplateVersion {
        crate::client::fluent_builders::CreateServiceTemplateVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateTemplateSyncConfig`](crate::client::fluent_builders::CreateTemplateSyncConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::set_template_name): <p>The name of your registered template.</p>
    ///   - [`template_type(TemplateType)`](crate::client::fluent_builders::CreateTemplateSyncConfig::template_type) / [`set_template_type(Option<TemplateType>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::set_template_type): <p>The type of the registered template.</p>
    ///   - [`repository_provider(RepositoryProvider)`](crate::client::fluent_builders::CreateTemplateSyncConfig::repository_provider) / [`set_repository_provider(Option<RepositoryProvider>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::set_repository_provider): <p>The provider type for your repository.</p>
    ///   - [`repository_name(impl Into<String>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::repository_name) / [`set_repository_name(Option<String>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::set_repository_name): <p>The repository name (for example, <code>myrepos/myrepo</code>).</p>
    ///   - [`branch(impl Into<String>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::branch) / [`set_branch(Option<String>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::set_branch): <p>The repository branch for your template.</p>
    ///   - [`subdirectory(impl Into<String>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::subdirectory) / [`set_subdirectory(Option<String>)`](crate::client::fluent_builders::CreateTemplateSyncConfig::set_subdirectory): <p>A repository subdirectory path to your template bundle directory. When included, Proton limits the template bundle search to this repository directory.</p>
    /// - On success, responds with [`CreateTemplateSyncConfigOutput`](crate::output::CreateTemplateSyncConfigOutput) with field(s):
    ///   - [`template_sync_config(Option<TemplateSyncConfig>)`](crate::output::CreateTemplateSyncConfigOutput::template_sync_config): <p>The template sync configuration detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<CreateTemplateSyncConfigError>`](crate::error::CreateTemplateSyncConfigError)
    pub fn create_template_sync_config(
        &self,
    ) -> crate::client::fluent_builders::CreateTemplateSyncConfig {
        crate::client::fluent_builders::CreateTemplateSyncConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteComponent`](crate::client::fluent_builders::DeleteComponent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DeleteComponent::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DeleteComponent::set_name): <p>The name of the component to delete.</p>
    /// - On success, responds with [`DeleteComponentOutput`](crate::output::DeleteComponentOutput) with field(s):
    ///   - [`component(Option<Component>)`](crate::output::DeleteComponentOutput::component): <p>The detailed data of the component being deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteComponentError>`](crate::error::DeleteComponentError)
    pub fn delete_component(&self) -> crate::client::fluent_builders::DeleteComponent {
        crate::client::fluent_builders::DeleteComponent::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEnvironment`](crate::client::fluent_builders::DeleteEnvironment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DeleteEnvironment::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DeleteEnvironment::set_name): <p>The name of the environment to delete.</p>
    /// - On success, responds with [`DeleteEnvironmentOutput`](crate::output::DeleteEnvironmentOutput) with field(s):
    ///   - [`environment(Option<Environment>)`](crate::output::DeleteEnvironmentOutput::environment): <p>The detailed data of the environment being deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteEnvironmentError>`](crate::error::DeleteEnvironmentError)
    pub fn delete_environment(&self) -> crate::client::fluent_builders::DeleteEnvironment {
        crate::client::fluent_builders::DeleteEnvironment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEnvironmentAccountConnection`](crate::client::fluent_builders::DeleteEnvironmentAccountConnection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::DeleteEnvironmentAccountConnection::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::DeleteEnvironmentAccountConnection::set_id): <p>The ID of the environment account connection to delete.</p>
    /// - On success, responds with [`DeleteEnvironmentAccountConnectionOutput`](crate::output::DeleteEnvironmentAccountConnectionOutput) with field(s):
    ///   - [`environment_account_connection(Option<EnvironmentAccountConnection>)`](crate::output::DeleteEnvironmentAccountConnectionOutput::environment_account_connection): <p>The detailed data of the environment account connection being deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteEnvironmentAccountConnectionError>`](crate::error::DeleteEnvironmentAccountConnectionError)
    pub fn delete_environment_account_connection(
        &self,
    ) -> crate::client::fluent_builders::DeleteEnvironmentAccountConnection {
        crate::client::fluent_builders::DeleteEnvironmentAccountConnection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEnvironmentTemplate`](crate::client::fluent_builders::DeleteEnvironmentTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DeleteEnvironmentTemplate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DeleteEnvironmentTemplate::set_name): <p>The name of the environment template to delete.</p>
    /// - On success, responds with [`DeleteEnvironmentTemplateOutput`](crate::output::DeleteEnvironmentTemplateOutput) with field(s):
    ///   - [`environment_template(Option<EnvironmentTemplate>)`](crate::output::DeleteEnvironmentTemplateOutput::environment_template): <p>The detailed data of the environment template being deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteEnvironmentTemplateError>`](crate::error::DeleteEnvironmentTemplateError)
    pub fn delete_environment_template(
        &self,
    ) -> crate::client::fluent_builders::DeleteEnvironmentTemplate {
        crate::client::fluent_builders::DeleteEnvironmentTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEnvironmentTemplateVersion`](crate::client::fluent_builders::DeleteEnvironmentTemplateVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteEnvironmentTemplateVersion::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeleteEnvironmentTemplateVersion::set_template_name): <p>The name of the environment template.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::DeleteEnvironmentTemplateVersion::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::DeleteEnvironmentTemplateVersion::set_major_version): <p>The environment template major version to delete.</p>
    ///   - [`minor_version(impl Into<String>)`](crate::client::fluent_builders::DeleteEnvironmentTemplateVersion::minor_version) / [`set_minor_version(Option<String>)`](crate::client::fluent_builders::DeleteEnvironmentTemplateVersion::set_minor_version): <p>The environment template minor version to delete.</p>
    /// - On success, responds with [`DeleteEnvironmentTemplateVersionOutput`](crate::output::DeleteEnvironmentTemplateVersionOutput) with field(s):
    ///   - [`environment_template_version(Option<EnvironmentTemplateVersion>)`](crate::output::DeleteEnvironmentTemplateVersionOutput::environment_template_version): <p>The detailed data of the environment template version being deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteEnvironmentTemplateVersionError>`](crate::error::DeleteEnvironmentTemplateVersionError)
    pub fn delete_environment_template_version(
        &self,
    ) -> crate::client::fluent_builders::DeleteEnvironmentTemplateVersion {
        crate::client::fluent_builders::DeleteEnvironmentTemplateVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteRepository`](crate::client::fluent_builders::DeleteRepository) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`provider(RepositoryProvider)`](crate::client::fluent_builders::DeleteRepository::provider) / [`set_provider(Option<RepositoryProvider>)`](crate::client::fluent_builders::DeleteRepository::set_provider): <p>The repository provider.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DeleteRepository::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DeleteRepository::set_name): <p>The repository name.</p>
    /// - On success, responds with [`DeleteRepositoryOutput`](crate::output::DeleteRepositoryOutput) with field(s):
    ///   - [`repository(Option<Repository>)`](crate::output::DeleteRepositoryOutput::repository): <p>The deleted repository link's detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<DeleteRepositoryError>`](crate::error::DeleteRepositoryError)
    pub fn delete_repository(&self) -> crate::client::fluent_builders::DeleteRepository {
        crate::client::fluent_builders::DeleteRepository::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteService`](crate::client::fluent_builders::DeleteService) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DeleteService::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DeleteService::set_name): <p>The name of the service to delete.</p>
    /// - On success, responds with [`DeleteServiceOutput`](crate::output::DeleteServiceOutput) with field(s):
    ///   - [`service(Option<Service>)`](crate::output::DeleteServiceOutput::service): <p>The detailed data of the service being deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteServiceError>`](crate::error::DeleteServiceError)
    pub fn delete_service(&self) -> crate::client::fluent_builders::DeleteService {
        crate::client::fluent_builders::DeleteService::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteServiceTemplate`](crate::client::fluent_builders::DeleteServiceTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DeleteServiceTemplate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DeleteServiceTemplate::set_name): <p>The name of the service template to delete.</p>
    /// - On success, responds with [`DeleteServiceTemplateOutput`](crate::output::DeleteServiceTemplateOutput) with field(s):
    ///   - [`service_template(Option<ServiceTemplate>)`](crate::output::DeleteServiceTemplateOutput::service_template): <p>The detailed data of the service template being deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteServiceTemplateError>`](crate::error::DeleteServiceTemplateError)
    pub fn delete_service_template(&self) -> crate::client::fluent_builders::DeleteServiceTemplate {
        crate::client::fluent_builders::DeleteServiceTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteServiceTemplateVersion`](crate::client::fluent_builders::DeleteServiceTemplateVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteServiceTemplateVersion::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeleteServiceTemplateVersion::set_template_name): <p>The name of the service template.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::DeleteServiceTemplateVersion::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::DeleteServiceTemplateVersion::set_major_version): <p>The service template major version to delete.</p>
    ///   - [`minor_version(impl Into<String>)`](crate::client::fluent_builders::DeleteServiceTemplateVersion::minor_version) / [`set_minor_version(Option<String>)`](crate::client::fluent_builders::DeleteServiceTemplateVersion::set_minor_version): <p>The service template minor version to delete.</p>
    /// - On success, responds with [`DeleteServiceTemplateVersionOutput`](crate::output::DeleteServiceTemplateVersionOutput) with field(s):
    ///   - [`service_template_version(Option<ServiceTemplateVersion>)`](crate::output::DeleteServiceTemplateVersionOutput::service_template_version): <p>The detailed data of the service template version being deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteServiceTemplateVersionError>`](crate::error::DeleteServiceTemplateVersionError)
    pub fn delete_service_template_version(
        &self,
    ) -> crate::client::fluent_builders::DeleteServiceTemplateVersion {
        crate::client::fluent_builders::DeleteServiceTemplateVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteTemplateSyncConfig`](crate::client::fluent_builders::DeleteTemplateSyncConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteTemplateSyncConfig::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeleteTemplateSyncConfig::set_template_name): <p>The template name.</p>
    ///   - [`template_type(TemplateType)`](crate::client::fluent_builders::DeleteTemplateSyncConfig::template_type) / [`set_template_type(Option<TemplateType>)`](crate::client::fluent_builders::DeleteTemplateSyncConfig::set_template_type): <p>The template type.</p>
    /// - On success, responds with [`DeleteTemplateSyncConfigOutput`](crate::output::DeleteTemplateSyncConfigOutput) with field(s):
    ///   - [`template_sync_config(Option<TemplateSyncConfig>)`](crate::output::DeleteTemplateSyncConfigOutput::template_sync_config): <p>The template sync configuration detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<DeleteTemplateSyncConfigError>`](crate::error::DeleteTemplateSyncConfigError)
    pub fn delete_template_sync_config(
        &self,
    ) -> crate::client::fluent_builders::DeleteTemplateSyncConfig {
        crate::client::fluent_builders::DeleteTemplateSyncConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetAccountSettings`](crate::client::fluent_builders::GetAccountSettings) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::GetAccountSettings::send) it.

    /// - On success, responds with [`GetAccountSettingsOutput`](crate::output::GetAccountSettingsOutput) with field(s):
    ///   - [`account_settings(Option<AccountSettings>)`](crate::output::GetAccountSettingsOutput::account_settings): <p>The Proton pipeline service role detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<GetAccountSettingsError>`](crate::error::GetAccountSettingsError)
    pub fn get_account_settings(&self) -> crate::client::fluent_builders::GetAccountSettings {
        crate::client::fluent_builders::GetAccountSettings::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetComponent`](crate::client::fluent_builders::GetComponent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetComponent::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetComponent::set_name): <p>The name of the component that you want to get the detailed data for.</p>
    /// - On success, responds with [`GetComponentOutput`](crate::output::GetComponentOutput) with field(s):
    ///   - [`component(Option<Component>)`](crate::output::GetComponentOutput::component): <p>The detailed data of the requested component.</p>
    /// - On failure, responds with [`SdkError<GetComponentError>`](crate::error::GetComponentError)
    pub fn get_component(&self) -> crate::client::fluent_builders::GetComponent {
        crate::client::fluent_builders::GetComponent::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEnvironment`](crate::client::fluent_builders::GetEnvironment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetEnvironment::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetEnvironment::set_name): <p>The name of the environment that you want to get the detailed data for.</p>
    /// - On success, responds with [`GetEnvironmentOutput`](crate::output::GetEnvironmentOutput) with field(s):
    ///   - [`environment(Option<Environment>)`](crate::output::GetEnvironmentOutput::environment): <p>The detailed data of the requested environment.</p>
    /// - On failure, responds with [`SdkError<GetEnvironmentError>`](crate::error::GetEnvironmentError)
    pub fn get_environment(&self) -> crate::client::fluent_builders::GetEnvironment {
        crate::client::fluent_builders::GetEnvironment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEnvironmentAccountConnection`](crate::client::fluent_builders::GetEnvironmentAccountConnection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::GetEnvironmentAccountConnection::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::GetEnvironmentAccountConnection::set_id): <p>The ID of the environment account connection that you want to get the detailed data for.</p>
    /// - On success, responds with [`GetEnvironmentAccountConnectionOutput`](crate::output::GetEnvironmentAccountConnectionOutput) with field(s):
    ///   - [`environment_account_connection(Option<EnvironmentAccountConnection>)`](crate::output::GetEnvironmentAccountConnectionOutput::environment_account_connection): <p>The detailed data of the requested environment account connection.</p>
    /// - On failure, responds with [`SdkError<GetEnvironmentAccountConnectionError>`](crate::error::GetEnvironmentAccountConnectionError)
    pub fn get_environment_account_connection(
        &self,
    ) -> crate::client::fluent_builders::GetEnvironmentAccountConnection {
        crate::client::fluent_builders::GetEnvironmentAccountConnection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEnvironmentTemplate`](crate::client::fluent_builders::GetEnvironmentTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetEnvironmentTemplate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetEnvironmentTemplate::set_name): <p>The name of the environment template that you want to get the detailed data for.</p>
    /// - On success, responds with [`GetEnvironmentTemplateOutput`](crate::output::GetEnvironmentTemplateOutput) with field(s):
    ///   - [`environment_template(Option<EnvironmentTemplate>)`](crate::output::GetEnvironmentTemplateOutput::environment_template): <p>The detailed data of the requested environment template.</p>
    /// - On failure, responds with [`SdkError<GetEnvironmentTemplateError>`](crate::error::GetEnvironmentTemplateError)
    pub fn get_environment_template(
        &self,
    ) -> crate::client::fluent_builders::GetEnvironmentTemplate {
        crate::client::fluent_builders::GetEnvironmentTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEnvironmentTemplateVersion`](crate::client::fluent_builders::GetEnvironmentTemplateVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetEnvironmentTemplateVersion::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetEnvironmentTemplateVersion::set_template_name): <p>The name of the environment template a version of which you want to get detailed data for.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::GetEnvironmentTemplateVersion::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::GetEnvironmentTemplateVersion::set_major_version): <p>To get environment template major version detail data, include <code>major Version</code>.</p>
    ///   - [`minor_version(impl Into<String>)`](crate::client::fluent_builders::GetEnvironmentTemplateVersion::minor_version) / [`set_minor_version(Option<String>)`](crate::client::fluent_builders::GetEnvironmentTemplateVersion::set_minor_version): <p>To get environment template minor version detail data, include <code>minorVersion</code>.</p>
    /// - On success, responds with [`GetEnvironmentTemplateVersionOutput`](crate::output::GetEnvironmentTemplateVersionOutput) with field(s):
    ///   - [`environment_template_version(Option<EnvironmentTemplateVersion>)`](crate::output::GetEnvironmentTemplateVersionOutput::environment_template_version): <p>The detailed data of the requested environment template version.</p>
    /// - On failure, responds with [`SdkError<GetEnvironmentTemplateVersionError>`](crate::error::GetEnvironmentTemplateVersionError)
    pub fn get_environment_template_version(
        &self,
    ) -> crate::client::fluent_builders::GetEnvironmentTemplateVersion {
        crate::client::fluent_builders::GetEnvironmentTemplateVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetRepository`](crate::client::fluent_builders::GetRepository) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`provider(RepositoryProvider)`](crate::client::fluent_builders::GetRepository::provider) / [`set_provider(Option<RepositoryProvider>)`](crate::client::fluent_builders::GetRepository::set_provider): <p>The repository provider.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetRepository::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetRepository::set_name): <p>The repository name, for example <code>myrepos/myrepo</code>.</p>
    /// - On success, responds with [`GetRepositoryOutput`](crate::output::GetRepositoryOutput) with field(s):
    ///   - [`repository(Option<Repository>)`](crate::output::GetRepositoryOutput::repository): <p>The repository link's detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<GetRepositoryError>`](crate::error::GetRepositoryError)
    pub fn get_repository(&self) -> crate::client::fluent_builders::GetRepository {
        crate::client::fluent_builders::GetRepository::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetRepositorySyncStatus`](crate::client::fluent_builders::GetRepositorySyncStatus) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`repository_name(impl Into<String>)`](crate::client::fluent_builders::GetRepositorySyncStatus::repository_name) / [`set_repository_name(Option<String>)`](crate::client::fluent_builders::GetRepositorySyncStatus::set_repository_name): <p>The repository name.</p>
    ///   - [`repository_provider(RepositoryProvider)`](crate::client::fluent_builders::GetRepositorySyncStatus::repository_provider) / [`set_repository_provider(Option<RepositoryProvider>)`](crate::client::fluent_builders::GetRepositorySyncStatus::set_repository_provider): <p>The repository provider.</p>
    ///   - [`branch(impl Into<String>)`](crate::client::fluent_builders::GetRepositorySyncStatus::branch) / [`set_branch(Option<String>)`](crate::client::fluent_builders::GetRepositorySyncStatus::set_branch): <p>The repository branch.</p>
    ///   - [`sync_type(SyncType)`](crate::client::fluent_builders::GetRepositorySyncStatus::sync_type) / [`set_sync_type(Option<SyncType>)`](crate::client::fluent_builders::GetRepositorySyncStatus::set_sync_type): <p>The repository sync type.</p>
    /// - On success, responds with [`GetRepositorySyncStatusOutput`](crate::output::GetRepositorySyncStatusOutput) with field(s):
    ///   - [`latest_sync(Option<RepositorySyncAttempt>)`](crate::output::GetRepositorySyncStatusOutput::latest_sync): <p>The repository sync status detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<GetRepositorySyncStatusError>`](crate::error::GetRepositorySyncStatusError)
    pub fn get_repository_sync_status(
        &self,
    ) -> crate::client::fluent_builders::GetRepositorySyncStatus {
        crate::client::fluent_builders::GetRepositorySyncStatus::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetService`](crate::client::fluent_builders::GetService) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetService::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetService::set_name): <p>The name of the service that you want to get the detailed data for.</p>
    /// - On success, responds with [`GetServiceOutput`](crate::output::GetServiceOutput) with field(s):
    ///   - [`service(Option<Service>)`](crate::output::GetServiceOutput::service): <p>The detailed data of the requested service.</p>
    /// - On failure, responds with [`SdkError<GetServiceError>`](crate::error::GetServiceError)
    pub fn get_service(&self) -> crate::client::fluent_builders::GetService {
        crate::client::fluent_builders::GetService::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetServiceInstance`](crate::client::fluent_builders::GetServiceInstance) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetServiceInstance::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetServiceInstance::set_name): <p>The name of a service instance that you want to get the detailed data for.</p>
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::GetServiceInstance::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::GetServiceInstance::set_service_name): <p>The name of the service that the service instance belongs to.</p>
    /// - On success, responds with [`GetServiceInstanceOutput`](crate::output::GetServiceInstanceOutput) with field(s):
    ///   - [`service_instance(Option<ServiceInstance>)`](crate::output::GetServiceInstanceOutput::service_instance): <p>The detailed data of the requested service instance.</p>
    /// - On failure, responds with [`SdkError<GetServiceInstanceError>`](crate::error::GetServiceInstanceError)
    pub fn get_service_instance(&self) -> crate::client::fluent_builders::GetServiceInstance {
        crate::client::fluent_builders::GetServiceInstance::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetServiceTemplate`](crate::client::fluent_builders::GetServiceTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetServiceTemplate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetServiceTemplate::set_name): <p>The name of the service template that you want to get detailed data for.</p>
    /// - On success, responds with [`GetServiceTemplateOutput`](crate::output::GetServiceTemplateOutput) with field(s):
    ///   - [`service_template(Option<ServiceTemplate>)`](crate::output::GetServiceTemplateOutput::service_template): <p>The detailed data of the requested service template.</p>
    /// - On failure, responds with [`SdkError<GetServiceTemplateError>`](crate::error::GetServiceTemplateError)
    pub fn get_service_template(&self) -> crate::client::fluent_builders::GetServiceTemplate {
        crate::client::fluent_builders::GetServiceTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetServiceTemplateVersion`](crate::client::fluent_builders::GetServiceTemplateVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetServiceTemplateVersion::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetServiceTemplateVersion::set_template_name): <p>The name of the service template a version of which you want to get detailed data for.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::GetServiceTemplateVersion::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::GetServiceTemplateVersion::set_major_version): <p>To get service template major version detail data, include <code>major Version</code>.</p>
    ///   - [`minor_version(impl Into<String>)`](crate::client::fluent_builders::GetServiceTemplateVersion::minor_version) / [`set_minor_version(Option<String>)`](crate::client::fluent_builders::GetServiceTemplateVersion::set_minor_version): <p>To get service template minor version detail data, include <code>minorVersion</code>.</p>
    /// - On success, responds with [`GetServiceTemplateVersionOutput`](crate::output::GetServiceTemplateVersionOutput) with field(s):
    ///   - [`service_template_version(Option<ServiceTemplateVersion>)`](crate::output::GetServiceTemplateVersionOutput::service_template_version): <p>The detailed data of the requested service template version.</p>
    /// - On failure, responds with [`SdkError<GetServiceTemplateVersionError>`](crate::error::GetServiceTemplateVersionError)
    pub fn get_service_template_version(
        &self,
    ) -> crate::client::fluent_builders::GetServiceTemplateVersion {
        crate::client::fluent_builders::GetServiceTemplateVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetTemplateSyncConfig`](crate::client::fluent_builders::GetTemplateSyncConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetTemplateSyncConfig::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetTemplateSyncConfig::set_template_name): <p>The template name.</p>
    ///   - [`template_type(TemplateType)`](crate::client::fluent_builders::GetTemplateSyncConfig::template_type) / [`set_template_type(Option<TemplateType>)`](crate::client::fluent_builders::GetTemplateSyncConfig::set_template_type): <p>The template type.</p>
    /// - On success, responds with [`GetTemplateSyncConfigOutput`](crate::output::GetTemplateSyncConfigOutput) with field(s):
    ///   - [`template_sync_config(Option<TemplateSyncConfig>)`](crate::output::GetTemplateSyncConfigOutput::template_sync_config): <p>The template sync configuration detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<GetTemplateSyncConfigError>`](crate::error::GetTemplateSyncConfigError)
    pub fn get_template_sync_config(
        &self,
    ) -> crate::client::fluent_builders::GetTemplateSyncConfig {
        crate::client::fluent_builders::GetTemplateSyncConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetTemplateSyncStatus`](crate::client::fluent_builders::GetTemplateSyncStatus) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetTemplateSyncStatus::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetTemplateSyncStatus::set_template_name): <p>The template name.</p>
    ///   - [`template_type(TemplateType)`](crate::client::fluent_builders::GetTemplateSyncStatus::template_type) / [`set_template_type(Option<TemplateType>)`](crate::client::fluent_builders::GetTemplateSyncStatus::set_template_type): <p>The template type.</p>
    ///   - [`template_version(impl Into<String>)`](crate::client::fluent_builders::GetTemplateSyncStatus::template_version) / [`set_template_version(Option<String>)`](crate::client::fluent_builders::GetTemplateSyncStatus::set_template_version): <p>The template major version.</p>
    /// - On success, responds with [`GetTemplateSyncStatusOutput`](crate::output::GetTemplateSyncStatusOutput) with field(s):
    ///   - [`latest_sync(Option<ResourceSyncAttempt>)`](crate::output::GetTemplateSyncStatusOutput::latest_sync): <p>The details of the last sync that's returned by Proton.</p>
    ///   - [`latest_successful_sync(Option<ResourceSyncAttempt>)`](crate::output::GetTemplateSyncStatusOutput::latest_successful_sync): <p>The details of the last successful sync that's returned by Proton.</p>
    ///   - [`desired_state(Option<Revision>)`](crate::output::GetTemplateSyncStatusOutput::desired_state): <p>The template sync desired state that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<GetTemplateSyncStatusError>`](crate::error::GetTemplateSyncStatusError)
    pub fn get_template_sync_status(
        &self,
    ) -> crate::client::fluent_builders::GetTemplateSyncStatus {
        crate::client::fluent_builders::GetTemplateSyncStatus::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListComponentOutputs`](crate::client::fluent_builders::ListComponentOutputs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListComponentOutputs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`component_name(impl Into<String>)`](crate::client::fluent_builders::ListComponentOutputs::component_name) / [`set_component_name(Option<String>)`](crate::client::fluent_builders::ListComponentOutputs::set_component_name): <p>The name of the component whose outputs you want.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListComponentOutputs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListComponentOutputs::set_next_token): <p>A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.</p>
    /// - On success, responds with [`ListComponentOutputsOutput`](crate::output::ListComponentOutputsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListComponentOutputsOutput::next_token): <p>A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.</p>
    ///   - [`outputs(Option<Vec<Output>>)`](crate::output::ListComponentOutputsOutput::outputs): <p>An array of component Infrastructure as Code (IaC) outputs.</p>
    /// - On failure, responds with [`SdkError<ListComponentOutputsError>`](crate::error::ListComponentOutputsError)
    pub fn list_component_outputs(&self) -> crate::client::fluent_builders::ListComponentOutputs {
        crate::client::fluent_builders::ListComponentOutputs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListComponentProvisionedResources`](crate::client::fluent_builders::ListComponentProvisionedResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListComponentProvisionedResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`component_name(impl Into<String>)`](crate::client::fluent_builders::ListComponentProvisionedResources::component_name) / [`set_component_name(Option<String>)`](crate::client::fluent_builders::ListComponentProvisionedResources::set_component_name): <p>The name of the component whose provisioned resources you want.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListComponentProvisionedResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListComponentProvisionedResources::set_next_token): <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources that was previously requested.</p>
    /// - On success, responds with [`ListComponentProvisionedResourcesOutput`](crate::output::ListComponentProvisionedResourcesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListComponentProvisionedResourcesOutput::next_token): <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.</p>
    ///   - [`provisioned_resources(Option<Vec<ProvisionedResource>>)`](crate::output::ListComponentProvisionedResourcesOutput::provisioned_resources): <p>An array of provisioned resources for a component.</p>
    /// - On failure, responds with [`SdkError<ListComponentProvisionedResourcesError>`](crate::error::ListComponentProvisionedResourcesError)
    pub fn list_component_provisioned_resources(
        &self,
    ) -> crate::client::fluent_builders::ListComponentProvisionedResources {
        crate::client::fluent_builders::ListComponentProvisionedResources::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListComponents`](crate::client::fluent_builders::ListComponents) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListComponents::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListComponents::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListComponents::set_next_token): <p>A token that indicates the location of the next component in the array of components, after the list of components that was previously requested.</p>
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::ListComponents::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::ListComponents::set_environment_name): <p>The name of an environment for result list filtering. Proton returns components associated with the environment or attached to service instances running in it.</p>
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::ListComponents::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::ListComponents::set_service_name): <p>The name of a service for result list filtering. Proton returns components attached to service instances of the service.</p>
    ///   - [`service_instance_name(impl Into<String>)`](crate::client::fluent_builders::ListComponents::service_instance_name) / [`set_service_instance_name(Option<String>)`](crate::client::fluent_builders::ListComponents::set_service_instance_name): <p>The name of a service instance for result list filtering. Proton returns the component attached to the service instance, if any.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListComponents::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListComponents::set_max_results): <p>The maximum number of components to list.</p>
    /// - On success, responds with [`ListComponentsOutput`](crate::output::ListComponentsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListComponentsOutput::next_token): <p>A token that indicates the location of the next component in the array of components, after the current requested list of components.</p>
    ///   - [`components(Option<Vec<ComponentSummary>>)`](crate::output::ListComponentsOutput::components): <p>An array of components with summary data.</p>
    /// - On failure, responds with [`SdkError<ListComponentsError>`](crate::error::ListComponentsError)
    pub fn list_components(&self) -> crate::client::fluent_builders::ListComponents {
        crate::client::fluent_builders::ListComponents::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListEnvironmentAccountConnections`](crate::client::fluent_builders::ListEnvironmentAccountConnections) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEnvironmentAccountConnections::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`requested_by(EnvironmentAccountConnectionRequesterAccountType)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::requested_by) / [`set_requested_by(Option<EnvironmentAccountConnectionRequesterAccountType>)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::set_requested_by): <p>The type of account making the <code>ListEnvironmentAccountConnections</code> request.</p>
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::set_environment_name): <p>The environment name that's associated with each listed environment account connection.</p>
    ///   - [`statuses(Vec<EnvironmentAccountConnectionStatus>)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::statuses) / [`set_statuses(Option<Vec<EnvironmentAccountConnectionStatus>>)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::set_statuses): <p>The status details for each listed environment account connection.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::set_next_token): <p>A token that indicates the location of the next environment account connection in the array of environment account connections, after the list of environment account connections that was previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListEnvironmentAccountConnections::set_max_results): <p>The maximum number of environment account connections to list.</p>
    /// - On success, responds with [`ListEnvironmentAccountConnectionsOutput`](crate::output::ListEnvironmentAccountConnectionsOutput) with field(s):
    ///   - [`environment_account_connections(Option<Vec<EnvironmentAccountConnectionSummary>>)`](crate::output::ListEnvironmentAccountConnectionsOutput::environment_account_connections): <p>An array of environment account connections with details that's returned by Proton. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListEnvironmentAccountConnectionsOutput::next_token): <p>A token that indicates the location of the next environment account connection in the array of environment account connections, after the current requested list of environment account connections.</p>
    /// - On failure, responds with [`SdkError<ListEnvironmentAccountConnectionsError>`](crate::error::ListEnvironmentAccountConnectionsError)
    pub fn list_environment_account_connections(
        &self,
    ) -> crate::client::fluent_builders::ListEnvironmentAccountConnections {
        crate::client::fluent_builders::ListEnvironmentAccountConnections::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListEnvironmentOutputs`](crate::client::fluent_builders::ListEnvironmentOutputs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEnvironmentOutputs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentOutputs::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::ListEnvironmentOutputs::set_environment_name): <p>The environment name.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentOutputs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEnvironmentOutputs::set_next_token): <p>A token that indicates the location of the next environment output in the array of environment outputs, after the list of environment outputs that was previously requested.</p>
    /// - On success, responds with [`ListEnvironmentOutputsOutput`](crate::output::ListEnvironmentOutputsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListEnvironmentOutputsOutput::next_token): <p>A token that indicates the location of the next environment output in the array of environment outputs, after the current requested list of environment outputs.</p>
    ///   - [`outputs(Option<Vec<Output>>)`](crate::output::ListEnvironmentOutputsOutput::outputs): <p>An array of environment outputs with detail data.</p>
    /// - On failure, responds with [`SdkError<ListEnvironmentOutputsError>`](crate::error::ListEnvironmentOutputsError)
    pub fn list_environment_outputs(
        &self,
    ) -> crate::client::fluent_builders::ListEnvironmentOutputs {
        crate::client::fluent_builders::ListEnvironmentOutputs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListEnvironmentProvisionedResources`](crate::client::fluent_builders::ListEnvironmentProvisionedResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEnvironmentProvisionedResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentProvisionedResources::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::ListEnvironmentProvisionedResources::set_environment_name): <p>The environment name.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentProvisionedResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEnvironmentProvisionedResources::set_next_token): <p>A token that indicates the location of the next environment provisioned resource in the array of environment provisioned resources, after the list of environment provisioned resources that was previously requested.</p>
    /// - On success, responds with [`ListEnvironmentProvisionedResourcesOutput`](crate::output::ListEnvironmentProvisionedResourcesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListEnvironmentProvisionedResourcesOutput::next_token): <p>A token that indicates the location of the next environment provisioned resource in the array of provisioned resources, after the current requested list of environment provisioned resources.</p>
    ///   - [`provisioned_resources(Option<Vec<ProvisionedResource>>)`](crate::output::ListEnvironmentProvisionedResourcesOutput::provisioned_resources): <p>An array of environment provisioned resources.</p>
    /// - On failure, responds with [`SdkError<ListEnvironmentProvisionedResourcesError>`](crate::error::ListEnvironmentProvisionedResourcesError)
    pub fn list_environment_provisioned_resources(
        &self,
    ) -> crate::client::fluent_builders::ListEnvironmentProvisionedResources {
        crate::client::fluent_builders::ListEnvironmentProvisionedResources::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`ListEnvironments`](crate::client::fluent_builders::ListEnvironments) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEnvironments::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEnvironments::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEnvironments::set_next_token): <p>A token that indicates the location of the next environment in the array of environments, after the list of environments that was previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListEnvironments::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListEnvironments::set_max_results): <p>The maximum number of environments to list.</p>
    ///   - [`environment_templates(Vec<EnvironmentTemplateFilter>)`](crate::client::fluent_builders::ListEnvironments::environment_templates) / [`set_environment_templates(Option<Vec<EnvironmentTemplateFilter>>)`](crate::client::fluent_builders::ListEnvironments::set_environment_templates): <p>An array of the versions of the environment template.</p>
    /// - On success, responds with [`ListEnvironmentsOutput`](crate::output::ListEnvironmentsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListEnvironmentsOutput::next_token): <p>A token that indicates the location of the next environment in the array of environments, after the current requested list of environments.</p>
    ///   - [`environments(Option<Vec<EnvironmentSummary>>)`](crate::output::ListEnvironmentsOutput::environments): <p>An array of environment detail data summaries.</p>
    /// - On failure, responds with [`SdkError<ListEnvironmentsError>`](crate::error::ListEnvironmentsError)
    pub fn list_environments(&self) -> crate::client::fluent_builders::ListEnvironments {
        crate::client::fluent_builders::ListEnvironments::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListEnvironmentTemplates`](crate::client::fluent_builders::ListEnvironmentTemplates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEnvironmentTemplates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentTemplates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEnvironmentTemplates::set_next_token): <p>A token that indicates the location of the next environment template in the array of environment templates, after the list of environment templates that was previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListEnvironmentTemplates::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListEnvironmentTemplates::set_max_results): <p>The maximum number of environment templates to list.</p>
    /// - On success, responds with [`ListEnvironmentTemplatesOutput`](crate::output::ListEnvironmentTemplatesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListEnvironmentTemplatesOutput::next_token): <p>A token that indicates the location of the next environment template in the array of environment templates, after the current requested list of environment templates.</p>
    ///   - [`templates(Option<Vec<EnvironmentTemplateSummary>>)`](crate::output::ListEnvironmentTemplatesOutput::templates): <p>An array of environment templates with detail data.</p>
    /// - On failure, responds with [`SdkError<ListEnvironmentTemplatesError>`](crate::error::ListEnvironmentTemplatesError)
    pub fn list_environment_templates(
        &self,
    ) -> crate::client::fluent_builders::ListEnvironmentTemplates {
        crate::client::fluent_builders::ListEnvironmentTemplates::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListEnvironmentTemplateVersions`](crate::client::fluent_builders::ListEnvironmentTemplateVersions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEnvironmentTemplateVersions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentTemplateVersions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEnvironmentTemplateVersions::set_next_token): <p>A token that indicates the location of the next major or minor version in the array of major or minor versions of an environment template, after the list of major or minor versions that was previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListEnvironmentTemplateVersions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListEnvironmentTemplateVersions::set_max_results): <p>The maximum number of major or minor versions of an environment template to list.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentTemplateVersions::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::ListEnvironmentTemplateVersions::set_template_name): <p>The name of the environment template.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::ListEnvironmentTemplateVersions::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::ListEnvironmentTemplateVersions::set_major_version): <p>To view a list of minor of versions under a major version of an environment template, include <code>major Version</code>.</p>  <p>To view a list of major versions of an environment template, <i>exclude</i> <code>major Version</code>.</p>
    /// - On success, responds with [`ListEnvironmentTemplateVersionsOutput`](crate::output::ListEnvironmentTemplateVersionsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListEnvironmentTemplateVersionsOutput::next_token): <p>A token that indicates the location of the next major or minor version in the array of major or minor versions of an environment template, after the list of major or minor versions that was previously requested.</p>
    ///   - [`template_versions(Option<Vec<EnvironmentTemplateVersionSummary>>)`](crate::output::ListEnvironmentTemplateVersionsOutput::template_versions): <p>An array of major or minor versions of an environment template detail data.</p>
    /// - On failure, responds with [`SdkError<ListEnvironmentTemplateVersionsError>`](crate::error::ListEnvironmentTemplateVersionsError)
    pub fn list_environment_template_versions(
        &self,
    ) -> crate::client::fluent_builders::ListEnvironmentTemplateVersions {
        crate::client::fluent_builders::ListEnvironmentTemplateVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListRepositories`](crate::client::fluent_builders::ListRepositories) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListRepositories::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListRepositories::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListRepositories::set_next_token): <p>A token that indicates the location of the next repository in the array of repositories, after the list of repositories previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListRepositories::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListRepositories::set_max_results): <p>The maximum number of repositories to list.</p>
    /// - On success, responds with [`ListRepositoriesOutput`](crate::output::ListRepositoriesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListRepositoriesOutput::next_token): <p>A token that indicates the location of the next repository in the array of repositories, after the current requested list of repositories. </p>
    ///   - [`repositories(Option<Vec<RepositorySummary>>)`](crate::output::ListRepositoriesOutput::repositories): <p>An array of repository links.</p>
    /// - On failure, responds with [`SdkError<ListRepositoriesError>`](crate::error::ListRepositoriesError)
    pub fn list_repositories(&self) -> crate::client::fluent_builders::ListRepositories {
        crate::client::fluent_builders::ListRepositories::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListRepositorySyncDefinitions`](crate::client::fluent_builders::ListRepositorySyncDefinitions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListRepositorySyncDefinitions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`repository_name(impl Into<String>)`](crate::client::fluent_builders::ListRepositorySyncDefinitions::repository_name) / [`set_repository_name(Option<String>)`](crate::client::fluent_builders::ListRepositorySyncDefinitions::set_repository_name): <p>The repository name.</p>
    ///   - [`repository_provider(RepositoryProvider)`](crate::client::fluent_builders::ListRepositorySyncDefinitions::repository_provider) / [`set_repository_provider(Option<RepositoryProvider>)`](crate::client::fluent_builders::ListRepositorySyncDefinitions::set_repository_provider): <p>The repository provider.</p>
    ///   - [`sync_type(SyncType)`](crate::client::fluent_builders::ListRepositorySyncDefinitions::sync_type) / [`set_sync_type(Option<SyncType>)`](crate::client::fluent_builders::ListRepositorySyncDefinitions::set_sync_type): <p>The sync type. The only supported value is <code>TEMPLATE_SYNC</code>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListRepositorySyncDefinitions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListRepositorySyncDefinitions::set_next_token): <p>A token that indicates the location of the next repository sync definition in the array of repository sync definitions, after the list of repository sync definitions previously requested.</p>
    /// - On success, responds with [`ListRepositorySyncDefinitionsOutput`](crate::output::ListRepositorySyncDefinitionsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListRepositorySyncDefinitionsOutput::next_token): <p>A token that indicates the location of the next repository sync definition in the array of repository sync definitions, after the current requested list of repository sync definitions.</p>
    ///   - [`sync_definitions(Option<Vec<RepositorySyncDefinition>>)`](crate::output::ListRepositorySyncDefinitionsOutput::sync_definitions): <p>An array of repository sync definitions.</p>
    /// - On failure, responds with [`SdkError<ListRepositorySyncDefinitionsError>`](crate::error::ListRepositorySyncDefinitionsError)
    pub fn list_repository_sync_definitions(
        &self,
    ) -> crate::client::fluent_builders::ListRepositorySyncDefinitions {
        crate::client::fluent_builders::ListRepositorySyncDefinitions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListServiceInstanceOutputs`](crate::client::fluent_builders::ListServiceInstanceOutputs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListServiceInstanceOutputs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_instance_name(impl Into<String>)`](crate::client::fluent_builders::ListServiceInstanceOutputs::service_instance_name) / [`set_service_instance_name(Option<String>)`](crate::client::fluent_builders::ListServiceInstanceOutputs::set_service_instance_name): <p>The name of the service instance whose outputs you want.</p>
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::ListServiceInstanceOutputs::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::ListServiceInstanceOutputs::set_service_name): <p>The name of the service that <code>serviceInstanceName</code> is associated to.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListServiceInstanceOutputs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListServiceInstanceOutputs::set_next_token): <p>A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.</p>
    /// - On success, responds with [`ListServiceInstanceOutputsOutput`](crate::output::ListServiceInstanceOutputsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListServiceInstanceOutputsOutput::next_token): <p>A token that indicates the location of the next output in the array of outputs, after the current requested list of outputs.</p>
    ///   - [`outputs(Option<Vec<Output>>)`](crate::output::ListServiceInstanceOutputsOutput::outputs): <p>An array of service instance Infrastructure as Code (IaC) outputs.</p>
    /// - On failure, responds with [`SdkError<ListServiceInstanceOutputsError>`](crate::error::ListServiceInstanceOutputsError)
    pub fn list_service_instance_outputs(
        &self,
    ) -> crate::client::fluent_builders::ListServiceInstanceOutputs {
        crate::client::fluent_builders::ListServiceInstanceOutputs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListServiceInstanceProvisionedResources`](crate::client::fluent_builders::ListServiceInstanceProvisionedResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListServiceInstanceProvisionedResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::ListServiceInstanceProvisionedResources::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::ListServiceInstanceProvisionedResources::set_service_name): <p>The name of the service that <code>serviceInstanceName</code> is associated to.</p>
    ///   - [`service_instance_name(impl Into<String>)`](crate::client::fluent_builders::ListServiceInstanceProvisionedResources::service_instance_name) / [`set_service_instance_name(Option<String>)`](crate::client::fluent_builders::ListServiceInstanceProvisionedResources::set_service_instance_name): <p>The name of the service instance whose provisioned resources you want.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListServiceInstanceProvisionedResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListServiceInstanceProvisionedResources::set_next_token): <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources that was previously requested.</p>
    /// - On success, responds with [`ListServiceInstanceProvisionedResourcesOutput`](crate::output::ListServiceInstanceProvisionedResourcesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListServiceInstanceProvisionedResourcesOutput::next_token): <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.</p>
    ///   - [`provisioned_resources(Option<Vec<ProvisionedResource>>)`](crate::output::ListServiceInstanceProvisionedResourcesOutput::provisioned_resources): <p>An array of provisioned resources for a service instance.</p>
    /// - On failure, responds with [`SdkError<ListServiceInstanceProvisionedResourcesError>`](crate::error::ListServiceInstanceProvisionedResourcesError)
    pub fn list_service_instance_provisioned_resources(
        &self,
    ) -> crate::client::fluent_builders::ListServiceInstanceProvisionedResources {
        crate::client::fluent_builders::ListServiceInstanceProvisionedResources::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`ListServiceInstances`](crate::client::fluent_builders::ListServiceInstances) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListServiceInstances::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::ListServiceInstances::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::ListServiceInstances::set_service_name): <p>The name of the service that the service instance belongs to.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListServiceInstances::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListServiceInstances::set_next_token): <p>A token that indicates the location of the next service in the array of service instances, after the list of service instances that was previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListServiceInstances::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListServiceInstances::set_max_results): <p>The maximum number of service instances to list.</p>
    ///   - [`filters(Vec<ListServiceInstancesFilter>)`](crate::client::fluent_builders::ListServiceInstances::filters) / [`set_filters(Option<Vec<ListServiceInstancesFilter>>)`](crate::client::fluent_builders::ListServiceInstances::set_filters): <p>An array of filtering criteria that scope down the result list. By default, all service instances in the Amazon Web Services account are returned.</p>
    ///   - [`sort_by(ListServiceInstancesSortBy)`](crate::client::fluent_builders::ListServiceInstances::sort_by) / [`set_sort_by(Option<ListServiceInstancesSortBy>)`](crate::client::fluent_builders::ListServiceInstances::set_sort_by): <p>The field that the result list is sorted by.</p>  <p>When you choose to sort by <code>serviceName</code>, service instances within each service are sorted by service instance name.</p>  <p>Default: <code>serviceName</code> </p>
    ///   - [`sort_order(SortOrder)`](crate::client::fluent_builders::ListServiceInstances::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::client::fluent_builders::ListServiceInstances::set_sort_order): <p>Result list sort order.</p>  <p>Default: <code>ASCENDING</code> </p>
    /// - On success, responds with [`ListServiceInstancesOutput`](crate::output::ListServiceInstancesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListServiceInstancesOutput::next_token): <p>A token that indicates the location of the next service instance in the array of service instances, after the current requested list of service instances.</p>
    ///   - [`service_instances(Option<Vec<ServiceInstanceSummary>>)`](crate::output::ListServiceInstancesOutput::service_instances): <p>An array of service instances with summary data.</p>
    /// - On failure, responds with [`SdkError<ListServiceInstancesError>`](crate::error::ListServiceInstancesError)
    pub fn list_service_instances(&self) -> crate::client::fluent_builders::ListServiceInstances {
        crate::client::fluent_builders::ListServiceInstances::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListServicePipelineOutputs`](crate::client::fluent_builders::ListServicePipelineOutputs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListServicePipelineOutputs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::ListServicePipelineOutputs::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::ListServicePipelineOutputs::set_service_name): <p>The name of the service whose pipeline's outputs you want.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListServicePipelineOutputs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListServicePipelineOutputs::set_next_token): <p>A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.</p>
    /// - On success, responds with [`ListServicePipelineOutputsOutput`](crate::output::ListServicePipelineOutputsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListServicePipelineOutputsOutput::next_token): <p>A token that indicates the location of the next output in the array of outputs, after the current requested list of outputs.</p>
    ///   - [`outputs(Option<Vec<Output>>)`](crate::output::ListServicePipelineOutputsOutput::outputs): <p>An array of service pipeline Infrastructure as Code (IaC) outputs.</p>
    /// - On failure, responds with [`SdkError<ListServicePipelineOutputsError>`](crate::error::ListServicePipelineOutputsError)
    pub fn list_service_pipeline_outputs(
        &self,
    ) -> crate::client::fluent_builders::ListServicePipelineOutputs {
        crate::client::fluent_builders::ListServicePipelineOutputs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListServicePipelineProvisionedResources`](crate::client::fluent_builders::ListServicePipelineProvisionedResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListServicePipelineProvisionedResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::ListServicePipelineProvisionedResources::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::ListServicePipelineProvisionedResources::set_service_name): <p>The name of the service whose pipeline's provisioned resources you want.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListServicePipelineProvisionedResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListServicePipelineProvisionedResources::set_next_token): <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources that was previously requested.</p>
    /// - On success, responds with [`ListServicePipelineProvisionedResourcesOutput`](crate::output::ListServicePipelineProvisionedResourcesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListServicePipelineProvisionedResourcesOutput::next_token): <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.</p>
    ///   - [`provisioned_resources(Option<Vec<ProvisionedResource>>)`](crate::output::ListServicePipelineProvisionedResourcesOutput::provisioned_resources): <p>An array of provisioned resources for a service and pipeline.</p>
    /// - On failure, responds with [`SdkError<ListServicePipelineProvisionedResourcesError>`](crate::error::ListServicePipelineProvisionedResourcesError)
    pub fn list_service_pipeline_provisioned_resources(
        &self,
    ) -> crate::client::fluent_builders::ListServicePipelineProvisionedResources {
        crate::client::fluent_builders::ListServicePipelineProvisionedResources::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`ListServices`](crate::client::fluent_builders::ListServices) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListServices::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListServices::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListServices::set_next_token): <p>A token that indicates the location of the next service in the array of services, after the list of services that was previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListServices::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListServices::set_max_results): <p>The maximum number of services to list.</p>
    /// - On success, responds with [`ListServicesOutput`](crate::output::ListServicesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListServicesOutput::next_token): <p>A token that indicates the location of the next service in the array of services, after the current requested list of services.</p>
    ///   - [`services(Option<Vec<ServiceSummary>>)`](crate::output::ListServicesOutput::services): <p>An array of services with summaries of detail data.</p>
    /// - On failure, responds with [`SdkError<ListServicesError>`](crate::error::ListServicesError)
    pub fn list_services(&self) -> crate::client::fluent_builders::ListServices {
        crate::client::fluent_builders::ListServices::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListServiceTemplates`](crate::client::fluent_builders::ListServiceTemplates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListServiceTemplates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListServiceTemplates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListServiceTemplates::set_next_token): <p>A token that indicates the location of the next service template in the array of service templates, after the list of service templates previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListServiceTemplates::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListServiceTemplates::set_max_results): <p>The maximum number of service templates to list.</p>
    /// - On success, responds with [`ListServiceTemplatesOutput`](crate::output::ListServiceTemplatesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListServiceTemplatesOutput::next_token): <p>A token that indicates the location of the next service template in the array of service templates, after the current requested list of service templates.</p>
    ///   - [`templates(Option<Vec<ServiceTemplateSummary>>)`](crate::output::ListServiceTemplatesOutput::templates): <p>An array of service templates with detail data.</p>
    /// - On failure, responds with [`SdkError<ListServiceTemplatesError>`](crate::error::ListServiceTemplatesError)
    pub fn list_service_templates(&self) -> crate::client::fluent_builders::ListServiceTemplates {
        crate::client::fluent_builders::ListServiceTemplates::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListServiceTemplateVersions`](crate::client::fluent_builders::ListServiceTemplateVersions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListServiceTemplateVersions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListServiceTemplateVersions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListServiceTemplateVersions::set_next_token): <p>A token that indicates the location of the next major or minor version in the array of major or minor versions of a service template, after the list of major or minor versions that was previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListServiceTemplateVersions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListServiceTemplateVersions::set_max_results): <p>The maximum number of major or minor versions of a service template to list.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::ListServiceTemplateVersions::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::ListServiceTemplateVersions::set_template_name): <p>The name of the service template.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::ListServiceTemplateVersions::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::ListServiceTemplateVersions::set_major_version): <p>To view a list of minor of versions under a major version of a service template, include <code>major Version</code>.</p>  <p>To view a list of major versions of a service template, <i>exclude</i> <code>major Version</code>.</p>
    /// - On success, responds with [`ListServiceTemplateVersionsOutput`](crate::output::ListServiceTemplateVersionsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListServiceTemplateVersionsOutput::next_token): <p>A token that indicates the location of the next major or minor version in the array of major or minor versions of a service template, after the current requested list of service major or minor versions.</p>
    ///   - [`template_versions(Option<Vec<ServiceTemplateVersionSummary>>)`](crate::output::ListServiceTemplateVersionsOutput::template_versions): <p>An array of major or minor versions of a service template with detail data.</p>
    /// - On failure, responds with [`SdkError<ListServiceTemplateVersionsError>`](crate::error::ListServiceTemplateVersionsError)
    pub fn list_service_template_versions(
        &self,
    ) -> crate::client::fluent_builders::ListServiceTemplateVersions {
        crate::client::fluent_builders::ListServiceTemplateVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTagsForResource::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource for the listed tags.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_next_token): <p>A token that indicates the location of the next resource tag in the array of resource tags, after the list of resource tags that was previously requested.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTagsForResource::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTagsForResource::set_max_results): <p>The maximum number of tags to list.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::ListTagsForResourceOutput::tags): <p>A list of resource tags with detail data.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTagsForResourceOutput::next_token): <p>A token that indicates the location of the next resource tag in the array of resource tags, after the current requested list of resource tags.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`NotifyResourceDeploymentStatusChange`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::set_resource_arn): <p>The provisioned resource Amazon Resource Name (ARN).</p>
    ///   - [`status(ResourceDeploymentStatus)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::status) / [`set_status(Option<ResourceDeploymentStatus>)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::set_status): <p>The status of your provisioned resource.</p>
    ///   - [`outputs(Vec<Output>)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::outputs) / [`set_outputs(Option<Vec<Output>>)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::set_outputs): <p>The provisioned resource state change detail data that's returned by Proton.</p>
    ///   - [`deployment_id(impl Into<String>)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::deployment_id) / [`set_deployment_id(Option<String>)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::set_deployment_id): <p>The deployment ID for your provisioned resource.</p>
    ///   - [`status_message(impl Into<String>)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::status_message) / [`set_status_message(Option<String>)`](crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::set_status_message): <p>The deployment status message for your provisioned resource.</p>
    /// - On success, responds with [`NotifyResourceDeploymentStatusChangeOutput`](crate::output::NotifyResourceDeploymentStatusChangeOutput)

    /// - On failure, responds with [`SdkError<NotifyResourceDeploymentStatusChangeError>`](crate::error::NotifyResourceDeploymentStatusChangeError)
    pub fn notify_resource_deployment_status_change(
        &self,
    ) -> crate::client::fluent_builders::NotifyResourceDeploymentStatusChange {
        crate::client::fluent_builders::NotifyResourceDeploymentStatusChange::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`RejectEnvironmentAccountConnection`](crate::client::fluent_builders::RejectEnvironmentAccountConnection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::RejectEnvironmentAccountConnection::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::RejectEnvironmentAccountConnection::set_id): <p>The ID of the environment account connection to reject.</p>
    /// - On success, responds with [`RejectEnvironmentAccountConnectionOutput`](crate::output::RejectEnvironmentAccountConnectionOutput) with field(s):
    ///   - [`environment_account_connection(Option<EnvironmentAccountConnection>)`](crate::output::RejectEnvironmentAccountConnectionOutput::environment_account_connection): <p>The environment connection account detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<RejectEnvironmentAccountConnectionError>`](crate::error::RejectEnvironmentAccountConnectionError)
    pub fn reject_environment_account_connection(
        &self,
    ) -> crate::client::fluent_builders::RejectEnvironmentAccountConnection {
        crate::client::fluent_builders::RejectEnvironmentAccountConnection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the Proton resource to apply customer tags to.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>A list of customer tags to apply to the Proton resource.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource to remove customer tags from.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>A list of customer tag keys that indicate the customer tags to be removed from the resource.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAccountSettings`](crate::client::fluent_builders::UpdateAccountSettings) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pipeline_service_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateAccountSettings::pipeline_service_role_arn) / [`set_pipeline_service_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateAccountSettings::set_pipeline_service_role_arn): <p>The Amazon Resource Name (ARN) of the service role you want to use for provisioning pipelines. Assumed by Proton for Amazon Web Services-managed provisioning, and by customer-owned automation for self-managed provisioning.</p>  <p>To remove a previously configured ARN, specify an empty string.</p>
    ///   - [`pipeline_provisioning_repository(RepositoryBranchInput)`](crate::client::fluent_builders::UpdateAccountSettings::pipeline_provisioning_repository) / [`set_pipeline_provisioning_repository(Option<RepositoryBranchInput>)`](crate::client::fluent_builders::UpdateAccountSettings::set_pipeline_provisioning_repository): <p>A linked repository for pipeline provisioning. Specify it if you have environments configured for self-managed provisioning with services that include pipelines. A linked repository is a repository that has been registered with Proton. For more information, see <code>CreateRepository</code>.</p>  <p>To remove a previously configured repository, set <code>deletePipelineProvisioningRepository</code> to <code>true</code>, and don't set <code>pipelineProvisioningRepository</code>.</p>
    ///   - [`delete_pipeline_provisioning_repository(bool)`](crate::client::fluent_builders::UpdateAccountSettings::delete_pipeline_provisioning_repository) / [`set_delete_pipeline_provisioning_repository(Option<bool>)`](crate::client::fluent_builders::UpdateAccountSettings::set_delete_pipeline_provisioning_repository): <p>Set to <code>true</code> to remove a configured pipeline repository from the account settings. Don't set this field if you are updating the configured pipeline repository.</p>
    ///   - [`pipeline_codebuild_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateAccountSettings::pipeline_codebuild_role_arn) / [`set_pipeline_codebuild_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateAccountSettings::set_pipeline_codebuild_role_arn): <p>The Amazon Resource Name (ARN) of the service role you want to use for provisioning pipelines. Proton assumes this role for CodeBuild-based provisioning.</p>
    /// - On success, responds with [`UpdateAccountSettingsOutput`](crate::output::UpdateAccountSettingsOutput) with field(s):
    ///   - [`account_settings(Option<AccountSettings>)`](crate::output::UpdateAccountSettingsOutput::account_settings): <p>The Proton pipeline service role and repository data shared across the Amazon Web Services account.</p>
    /// - On failure, responds with [`SdkError<UpdateAccountSettingsError>`](crate::error::UpdateAccountSettingsError)
    pub fn update_account_settings(&self) -> crate::client::fluent_builders::UpdateAccountSettings {
        crate::client::fluent_builders::UpdateAccountSettings::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateComponent`](crate::client::fluent_builders::UpdateComponent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateComponent::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateComponent::set_name): <p>The name of the component to update.</p>
    ///   - [`deployment_type(ComponentDeploymentUpdateType)`](crate::client::fluent_builders::UpdateComponent::deployment_type) / [`set_deployment_type(Option<ComponentDeploymentUpdateType>)`](crate::client::fluent_builders::UpdateComponent::set_deployment_type): <p>The deployment type. It defines the mode for updating a component, as follows:</p>  <dl>   <dt></dt>   <dd>    <p> <code>NONE</code> </p>    <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated. You can only specify <code>description</code> in this mode.</p>   </dd>   <dt></dt>   <dd>    <p> <code>CURRENT_VERSION</code> </p>    <p>In this mode, the component is deployed and updated with the new <code>serviceSpec</code>, <code>templateSource</code>, and/or <code>type</code> that you provide. Only requested parameters are updated.</p>   </dd>  </dl>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateComponent::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateComponent::set_description): <p>An optional customer-provided description of the component.</p>
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::UpdateComponent::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::UpdateComponent::set_service_name): <p>The name of the service that <code>serviceInstanceName</code> is associated with. Don't specify to keep the component's current service instance attachment. Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both <code>serviceInstanceName</code> and <code>serviceName</code> or for neither of them.</p>
    ///   - [`service_instance_name(impl Into<String>)`](crate::client::fluent_builders::UpdateComponent::service_instance_name) / [`set_service_instance_name(Option<String>)`](crate::client::fluent_builders::UpdateComponent::set_service_instance_name): <p>The name of the service instance that you want to attach this component to. Don't specify to keep the component's current service instance attachment. Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both <code>serviceInstanceName</code> and <code>serviceName</code> or for neither of them.</p>
    ///   - [`service_spec(impl Into<String>)`](crate::client::fluent_builders::UpdateComponent::service_spec) / [`set_service_spec(Option<String>)`](crate::client::fluent_builders::UpdateComponent::set_service_spec): <p>The service spec that you want the component to use to access service inputs. Set this only when the component is attached to a service instance.</p>
    ///   - [`template_file(impl Into<String>)`](crate::client::fluent_builders::UpdateComponent::template_file) / [`set_template_file(Option<String>)`](crate::client::fluent_builders::UpdateComponent::set_template_file): <p>A path to the Infrastructure as Code (IaC) file describing infrastructure that a custom component provisions.</p> <note>   <p>Components support a single IaC file, even if you use Terraform as your template language.</p>  </note>
    /// - On success, responds with [`UpdateComponentOutput`](crate::output::UpdateComponentOutput) with field(s):
    ///   - [`component(Option<Component>)`](crate::output::UpdateComponentOutput::component): <p>The detailed data of the updated component.</p>
    /// - On failure, responds with [`SdkError<UpdateComponentError>`](crate::error::UpdateComponentError)
    pub fn update_component(&self) -> crate::client::fluent_builders::UpdateComponent {
        crate::client::fluent_builders::UpdateComponent::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEnvironment`](crate::client::fluent_builders::UpdateEnvironment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironment::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateEnvironment::set_name): <p>The name of the environment to update.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironment::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateEnvironment::set_description): <p>A description of the environment update.</p>
    ///   - [`spec(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironment::spec) / [`set_spec(Option<String>)`](crate::client::fluent_builders::UpdateEnvironment::set_spec): <p>The formatted specification that defines the update.</p>
    ///   - [`template_major_version(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironment::template_major_version) / [`set_template_major_version(Option<String>)`](crate::client::fluent_builders::UpdateEnvironment::set_template_major_version): <p>The major version of the environment to update.</p>
    ///   - [`template_minor_version(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironment::template_minor_version) / [`set_template_minor_version(Option<String>)`](crate::client::fluent_builders::UpdateEnvironment::set_template_minor_version): <p>The minor version of the environment to update.</p>
    ///   - [`proton_service_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironment::proton_service_role_arn) / [`set_proton_service_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateEnvironment::set_proton_service_role_arn): <p>The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make API calls to other services your behalf.</p>
    ///   - [`deployment_type(DeploymentUpdateType)`](crate::client::fluent_builders::UpdateEnvironment::deployment_type) / [`set_deployment_type(Option<DeploymentUpdateType>)`](crate::client::fluent_builders::UpdateEnvironment::set_deployment_type): <p>There are four modes for updating an environment. The <code>deploymentType</code> field defines the mode.</p>  <dl>   <dt></dt>   <dd>    <p> <code>NONE</code> </p>    <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>   </dd>   <dt></dt>   <dd>    <p> <code>CURRENT_VERSION</code> </p>    <p>In this mode, the environment is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Don’t</i> include major or minor version parameters when you use this <code>deployment-type</code>.</p>   </dd>   <dt></dt>   <dd>    <p> <code>MINOR_VERSION</code> </p>    <p>In this mode, the environment is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p>   </dd>   <dt></dt>   <dd>    <p> <code>MAJOR_VERSION</code> </p>    <p>In this mode, the environment is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can also specify a different major version that is higher than the major version in use and a minor version (optional).</p>   </dd>  </dl>
    ///   - [`environment_account_connection_id(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironment::environment_account_connection_id) / [`set_environment_account_connection_id(Option<String>)`](crate::client::fluent_builders::UpdateEnvironment::set_environment_account_connection_id): <p>The ID of the environment account connection.</p>  <p>You can only update to a new environment account connection if it was created in the same environment account that the current environment account connection was created in and is associated with the current environment.</p>
    ///   - [`provisioning_repository(RepositoryBranchInput)`](crate::client::fluent_builders::UpdateEnvironment::provisioning_repository) / [`set_provisioning_repository(Option<RepositoryBranchInput>)`](crate::client::fluent_builders::UpdateEnvironment::set_provisioning_repository): <p>The linked repository that you use to host your rendered infrastructure templates for self-managed provisioning. A linked repository is a repository that has been registered with Proton. For more information, see <code>CreateRepository</code>.</p>
    ///   - [`component_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironment::component_role_arn) / [`set_component_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateEnvironment::set_component_role_arn): <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It determines the scope of infrastructure that a component can provision.</p>  <p>The environment must have a <code>componentRoleArn</code> to allow directly defined components to be associated with the environment.</p>  <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`codebuild_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironment::codebuild_role_arn) / [`set_codebuild_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateEnvironment::set_codebuild_role_arn): <p>The Amazon Resource Name (ARN) of the IAM service role that allows Proton to provision infrastructure using CodeBuild-based provisioning on your behalf.</p>
    /// - On success, responds with [`UpdateEnvironmentOutput`](crate::output::UpdateEnvironmentOutput) with field(s):
    ///   - [`environment(Option<Environment>)`](crate::output::UpdateEnvironmentOutput::environment): <p>The environment detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateEnvironmentError>`](crate::error::UpdateEnvironmentError)
    pub fn update_environment(&self) -> crate::client::fluent_builders::UpdateEnvironment {
        crate::client::fluent_builders::UpdateEnvironment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEnvironmentAccountConnection`](crate::client::fluent_builders::UpdateEnvironmentAccountConnection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentAccountConnection::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentAccountConnection::set_id): <p>The ID of the environment account connection to update.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentAccountConnection::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentAccountConnection::set_role_arn): <p>The Amazon Resource Name (ARN) of the IAM service role that's associated with the environment account connection to update.</p>
    ///   - [`component_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentAccountConnection::component_role_arn) / [`set_component_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentAccountConnection::set_component_role_arn): <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>  <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>  <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    ///   - [`codebuild_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentAccountConnection::codebuild_role_arn) / [`set_codebuild_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentAccountConnection::set_codebuild_role_arn): <p>The Amazon Resource Name (ARN) of an IAM service role in the environment account. Proton uses this role to provision infrastructure resources using CodeBuild-based provisioning in the associated environment account.</p>
    /// - On success, responds with [`UpdateEnvironmentAccountConnectionOutput`](crate::output::UpdateEnvironmentAccountConnectionOutput) with field(s):
    ///   - [`environment_account_connection(Option<EnvironmentAccountConnection>)`](crate::output::UpdateEnvironmentAccountConnectionOutput::environment_account_connection): <p>The environment account connection detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateEnvironmentAccountConnectionError>`](crate::error::UpdateEnvironmentAccountConnectionError)
    pub fn update_environment_account_connection(
        &self,
    ) -> crate::client::fluent_builders::UpdateEnvironmentAccountConnection {
        crate::client::fluent_builders::UpdateEnvironmentAccountConnection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEnvironmentTemplate`](crate::client::fluent_builders::UpdateEnvironmentTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplate::set_name): <p>The name of the environment template to update.</p>
    ///   - [`display_name(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplate::display_name) / [`set_display_name(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplate::set_display_name): <p>The name of the environment template to update as displayed in the developer interface.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplate::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplate::set_description): <p>A description of the environment template update.</p>
    /// - On success, responds with [`UpdateEnvironmentTemplateOutput`](crate::output::UpdateEnvironmentTemplateOutput) with field(s):
    ///   - [`environment_template(Option<EnvironmentTemplate>)`](crate::output::UpdateEnvironmentTemplateOutput::environment_template): <p>The environment template detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateEnvironmentTemplateError>`](crate::error::UpdateEnvironmentTemplateError)
    pub fn update_environment_template(
        &self,
    ) -> crate::client::fluent_builders::UpdateEnvironmentTemplate {
        crate::client::fluent_builders::UpdateEnvironmentTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEnvironmentTemplateVersion`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::set_template_name): <p>The name of the environment template.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::set_major_version): <p>To update a major version of an environment template, include <code>major Version</code>.</p>
    ///   - [`minor_version(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::minor_version) / [`set_minor_version(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::set_minor_version): <p>To update a minor version of an environment template, include <code>minorVersion</code>.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::set_description): <p>A description of environment template version to update.</p>
    ///   - [`status(TemplateVersionStatus)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::status) / [`set_status(Option<TemplateVersionStatus>)`](crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::set_status): <p>The status of the environment template minor version to update.</p>
    /// - On success, responds with [`UpdateEnvironmentTemplateVersionOutput`](crate::output::UpdateEnvironmentTemplateVersionOutput) with field(s):
    ///   - [`environment_template_version(Option<EnvironmentTemplateVersion>)`](crate::output::UpdateEnvironmentTemplateVersionOutput::environment_template_version): <p>The environment template version detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateEnvironmentTemplateVersionError>`](crate::error::UpdateEnvironmentTemplateVersionError)
    pub fn update_environment_template_version(
        &self,
    ) -> crate::client::fluent_builders::UpdateEnvironmentTemplateVersion {
        crate::client::fluent_builders::UpdateEnvironmentTemplateVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateService`](crate::client::fluent_builders::UpdateService) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateService::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateService::set_name): <p>The name of the service to edit.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateService::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateService::set_description): <p>The edited service description.</p>
    ///   - [`spec(impl Into<String>)`](crate::client::fluent_builders::UpdateService::spec) / [`set_spec(Option<String>)`](crate::client::fluent_builders::UpdateService::set_spec): <p>Lists the service instances to add and the existing service instances to remain. Omit the existing service instances to delete from the list. <i>Don't</i> include edits to the existing service instances or pipeline. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-svc-update.html">Edit a service</a> in the <i>Proton User Guide</i>.</p>
    /// - On success, responds with [`UpdateServiceOutput`](crate::output::UpdateServiceOutput) with field(s):
    ///   - [`service(Option<Service>)`](crate::output::UpdateServiceOutput::service): <p>The service detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateServiceError>`](crate::error::UpdateServiceError)
    pub fn update_service(&self) -> crate::client::fluent_builders::UpdateService {
        crate::client::fluent_builders::UpdateService::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateServiceInstance`](crate::client::fluent_builders::UpdateServiceInstance) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceInstance::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateServiceInstance::set_name): <p>The name of the service instance to update.</p>
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceInstance::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::UpdateServiceInstance::set_service_name): <p>The name of the service that the service instance belongs to.</p>
    ///   - [`deployment_type(DeploymentUpdateType)`](crate::client::fluent_builders::UpdateServiceInstance::deployment_type) / [`set_deployment_type(Option<DeploymentUpdateType>)`](crate::client::fluent_builders::UpdateServiceInstance::set_deployment_type): <p>The deployment type. It defines the mode for updating a service instance, as follows:</p>  <dl>   <dt></dt>   <dd>    <p> <code>NONE</code> </p>    <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>   </dd>   <dt></dt>   <dd>    <p> <code>CURRENT_VERSION</code> </p>    <p>In this mode, the service instance is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Don’t</i> include major or minor version parameters when you use this deployment type.</p>   </dd>   <dt></dt>   <dd>    <p> <code>MINOR_VERSION</code> </p>    <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p>   </dd>   <dt></dt>   <dd>    <p> <code>MAJOR_VERSION</code> </p>    <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can specify a different major version that's higher than the major version in use and a minor version.</p>   </dd>  </dl>
    ///   - [`spec(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceInstance::spec) / [`set_spec(Option<String>)`](crate::client::fluent_builders::UpdateServiceInstance::set_spec): <p>The formatted specification that defines the service instance update.</p>
    ///   - [`template_major_version(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceInstance::template_major_version) / [`set_template_major_version(Option<String>)`](crate::client::fluent_builders::UpdateServiceInstance::set_template_major_version): <p>The major version of the service template to update.</p>
    ///   - [`template_minor_version(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceInstance::template_minor_version) / [`set_template_minor_version(Option<String>)`](crate::client::fluent_builders::UpdateServiceInstance::set_template_minor_version): <p>The minor version of the service template to update.</p>
    /// - On success, responds with [`UpdateServiceInstanceOutput`](crate::output::UpdateServiceInstanceOutput) with field(s):
    ///   - [`service_instance(Option<ServiceInstance>)`](crate::output::UpdateServiceInstanceOutput::service_instance): <p>The service instance summary data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateServiceInstanceError>`](crate::error::UpdateServiceInstanceError)
    pub fn update_service_instance(&self) -> crate::client::fluent_builders::UpdateServiceInstance {
        crate::client::fluent_builders::UpdateServiceInstance::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateServicePipeline`](crate::client::fluent_builders::UpdateServicePipeline) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_name(impl Into<String>)`](crate::client::fluent_builders::UpdateServicePipeline::service_name) / [`set_service_name(Option<String>)`](crate::client::fluent_builders::UpdateServicePipeline::set_service_name): <p>The name of the service to that the pipeline is associated with.</p>
    ///   - [`spec(impl Into<String>)`](crate::client::fluent_builders::UpdateServicePipeline::spec) / [`set_spec(Option<String>)`](crate::client::fluent_builders::UpdateServicePipeline::set_spec): <p>The spec for the service pipeline to update.</p>
    ///   - [`deployment_type(DeploymentUpdateType)`](crate::client::fluent_builders::UpdateServicePipeline::deployment_type) / [`set_deployment_type(Option<DeploymentUpdateType>)`](crate::client::fluent_builders::UpdateServicePipeline::set_deployment_type): <p>The deployment type.</p>  <p>There are four modes for updating a service pipeline. The <code>deploymentType</code> field defines the mode.</p>  <dl>   <dt></dt>   <dd>    <p> <code>NONE</code> </p>    <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p>   </dd>   <dt></dt>   <dd>    <p> <code>CURRENT_VERSION</code> </p>    <p>In this mode, the service pipeline is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Don’t</i> include major or minor version parameters when you use this <code>deployment-type</code>.</p>   </dd>   <dt></dt>   <dd>    <p> <code>MINOR_VERSION</code> </p>    <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can specify a different minor version of the current major version in use.</p>   </dd>   <dt></dt>   <dd>    <p> <code>MAJOR_VERSION</code> </p>    <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can specify a different major version that's higher than the major version in use and a minor version.</p>   </dd>  </dl>
    ///   - [`template_major_version(impl Into<String>)`](crate::client::fluent_builders::UpdateServicePipeline::template_major_version) / [`set_template_major_version(Option<String>)`](crate::client::fluent_builders::UpdateServicePipeline::set_template_major_version): <p>The major version of the service template that was used to create the service that the pipeline is associated with.</p>
    ///   - [`template_minor_version(impl Into<String>)`](crate::client::fluent_builders::UpdateServicePipeline::template_minor_version) / [`set_template_minor_version(Option<String>)`](crate::client::fluent_builders::UpdateServicePipeline::set_template_minor_version): <p>The minor version of the service template that was used to create the service that the pipeline is associated with.</p>
    /// - On success, responds with [`UpdateServicePipelineOutput`](crate::output::UpdateServicePipelineOutput) with field(s):
    ///   - [`pipeline(Option<ServicePipeline>)`](crate::output::UpdateServicePipelineOutput::pipeline): <p>The pipeline details that are returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateServicePipelineError>`](crate::error::UpdateServicePipelineError)
    pub fn update_service_pipeline(&self) -> crate::client::fluent_builders::UpdateServicePipeline {
        crate::client::fluent_builders::UpdateServicePipeline::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateServiceTemplate`](crate::client::fluent_builders::UpdateServiceTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceTemplate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateServiceTemplate::set_name): <p>The name of the service template to update.</p>
    ///   - [`display_name(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceTemplate::display_name) / [`set_display_name(Option<String>)`](crate::client::fluent_builders::UpdateServiceTemplate::set_display_name): <p>The name of the service template to update that's displayed in the developer interface.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceTemplate::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateServiceTemplate::set_description): <p>A description of the service template update.</p>
    /// - On success, responds with [`UpdateServiceTemplateOutput`](crate::output::UpdateServiceTemplateOutput) with field(s):
    ///   - [`service_template(Option<ServiceTemplate>)`](crate::output::UpdateServiceTemplateOutput::service_template): <p>The service template detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateServiceTemplateError>`](crate::error::UpdateServiceTemplateError)
    pub fn update_service_template(&self) -> crate::client::fluent_builders::UpdateServiceTemplate {
        crate::client::fluent_builders::UpdateServiceTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateServiceTemplateVersion`](crate::client::fluent_builders::UpdateServiceTemplateVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::set_template_name): <p>The name of the service template.</p>
    ///   - [`major_version(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::major_version) / [`set_major_version(Option<String>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::set_major_version): <p>To update a major version of a service template, include <code>major Version</code>.</p>
    ///   - [`minor_version(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::minor_version) / [`set_minor_version(Option<String>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::set_minor_version): <p>To update a minor version of a service template, include <code>minorVersion</code>.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::set_description): <p>A description of a service template version to update.</p>
    ///   - [`status(TemplateVersionStatus)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::status) / [`set_status(Option<TemplateVersionStatus>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::set_status): <p>The status of the service template minor version to update.</p>
    ///   - [`compatible_environment_templates(Vec<CompatibleEnvironmentTemplateInput>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::compatible_environment_templates) / [`set_compatible_environment_templates(Option<Vec<CompatibleEnvironmentTemplateInput>>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::set_compatible_environment_templates): <p>An array of environment template objects that are compatible with this service template version. A service instance based on this service template version can run in environments based on compatible templates.</p>
    ///   - [`supported_component_sources(Vec<ServiceTemplateSupportedComponentSourceType>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::supported_component_sources) / [`set_supported_component_sources(Option<Vec<ServiceTemplateSupportedComponentSourceType>>)`](crate::client::fluent_builders::UpdateServiceTemplateVersion::set_supported_component_sources): <p>An array of supported component sources. Components with supported sources can be attached to service instances based on this service template version.</p> <note>   <p>A change to <code>supportedComponentSources</code> doesn't impact existing component attachments to instances based on this template version. A change only affects later associations.</p>  </note>  <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    /// - On success, responds with [`UpdateServiceTemplateVersionOutput`](crate::output::UpdateServiceTemplateVersionOutput) with field(s):
    ///   - [`service_template_version(Option<ServiceTemplateVersion>)`](crate::output::UpdateServiceTemplateVersionOutput::service_template_version): <p>The service template version detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateServiceTemplateVersionError>`](crate::error::UpdateServiceTemplateVersionError)
    pub fn update_service_template_version(
        &self,
    ) -> crate::client::fluent_builders::UpdateServiceTemplateVersion {
        crate::client::fluent_builders::UpdateServiceTemplateVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateTemplateSyncConfig`](crate::client::fluent_builders::UpdateTemplateSyncConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::set_template_name): <p>The synced template name.</p>
    ///   - [`template_type(TemplateType)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::template_type) / [`set_template_type(Option<TemplateType>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::set_template_type): <p>The synced template type.</p>
    ///   - [`repository_provider(RepositoryProvider)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::repository_provider) / [`set_repository_provider(Option<RepositoryProvider>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::set_repository_provider): <p>The repository provider.</p>
    ///   - [`repository_name(impl Into<String>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::repository_name) / [`set_repository_name(Option<String>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::set_repository_name): <p>The repository name (for example, <code>myrepos/myrepo</code>).</p>
    ///   - [`branch(impl Into<String>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::branch) / [`set_branch(Option<String>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::set_branch): <p>The repository branch for your template.</p>
    ///   - [`subdirectory(impl Into<String>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::subdirectory) / [`set_subdirectory(Option<String>)`](crate::client::fluent_builders::UpdateTemplateSyncConfig::set_subdirectory): <p>A subdirectory path to your template bundle version. When included, limits the template bundle search to this repository directory.</p>
    /// - On success, responds with [`UpdateTemplateSyncConfigOutput`](crate::output::UpdateTemplateSyncConfigOutput) with field(s):
    ///   - [`template_sync_config(Option<TemplateSyncConfig>)`](crate::output::UpdateTemplateSyncConfigOutput::template_sync_config): <p>The template sync configuration detail data that's returned by Proton.</p>
    /// - On failure, responds with [`SdkError<UpdateTemplateSyncConfigError>`](crate::error::UpdateTemplateSyncConfigError)
    pub fn update_template_sync_config(
        &self,
    ) -> crate::client::fluent_builders::UpdateTemplateSyncConfig {
        crate::client::fluent_builders::UpdateTemplateSyncConfig::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
