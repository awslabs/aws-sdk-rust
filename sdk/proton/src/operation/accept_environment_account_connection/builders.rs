// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::accept_environment_account_connection::_accept_environment_account_connection_output::AcceptEnvironmentAccountConnectionOutputBuilder;

pub use crate::operation::accept_environment_account_connection::_accept_environment_account_connection_input::AcceptEnvironmentAccountConnectionInputBuilder;

/// Fluent builder constructing a request to `AcceptEnvironmentAccountConnection`.
///
/// <p>In a management account, an environment account connection request is accepted. When the environment account connection request is accepted, Proton can use the associated IAM role to provision environment infrastructure resources in the associated environment account.</p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct AcceptEnvironmentAccountConnectionFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::accept_environment_account_connection::builders::AcceptEnvironmentAccountConnectionInputBuilder
            }
impl AcceptEnvironmentAccountConnectionFluentBuilder {
    /// Creates a new `AcceptEnvironmentAccountConnection`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::accept_environment_account_connection::AcceptEnvironmentAccountConnection, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::accept_environment_account_connection::AcceptEnvironmentAccountConnectionError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::accept_environment_account_connection::AcceptEnvironmentAccountConnectionOutput, aws_smithy_http::result::SdkError<crate::operation::accept_environment_account_connection::AcceptEnvironmentAccountConnectionError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The ID of the environment account connection.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.id(input.into());
        self
    }
    /// <p>The ID of the environment account connection.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_id(input);
        self
    }
}
