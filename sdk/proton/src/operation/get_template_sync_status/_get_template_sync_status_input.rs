// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetTemplateSyncStatusInput {
    /// <p>The template name.</p>
    #[doc(hidden)]
    pub template_name: std::option::Option<std::string::String>,
    /// <p>The template type.</p>
    #[doc(hidden)]
    pub template_type: std::option::Option<crate::types::TemplateType>,
    /// <p>The template major version.</p>
    #[doc(hidden)]
    pub template_version: std::option::Option<std::string::String>,
}
impl GetTemplateSyncStatusInput {
    /// <p>The template name.</p>
    pub fn template_name(&self) -> std::option::Option<&str> {
        self.template_name.as_deref()
    }
    /// <p>The template type.</p>
    pub fn template_type(&self) -> std::option::Option<&crate::types::TemplateType> {
        self.template_type.as_ref()
    }
    /// <p>The template major version.</p>
    pub fn template_version(&self) -> std::option::Option<&str> {
        self.template_version.as_deref()
    }
}
impl GetTemplateSyncStatusInput {
    /// Creates a new builder-style object to manufacture [`GetTemplateSyncStatusInput`](crate::operation::get_template_sync_status::GetTemplateSyncStatusInput).
    pub fn builder(
    ) -> crate::operation::get_template_sync_status::builders::GetTemplateSyncStatusInputBuilder
    {
        crate::operation::get_template_sync_status::builders::GetTemplateSyncStatusInputBuilder::default()
    }
}

/// A builder for [`GetTemplateSyncStatusInput`](crate::operation::get_template_sync_status::GetTemplateSyncStatusInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetTemplateSyncStatusInputBuilder {
    pub(crate) template_name: std::option::Option<std::string::String>,
    pub(crate) template_type: std::option::Option<crate::types::TemplateType>,
    pub(crate) template_version: std::option::Option<std::string::String>,
}
impl GetTemplateSyncStatusInputBuilder {
    /// <p>The template name.</p>
    pub fn template_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_name = Some(input.into());
        self
    }
    /// <p>The template name.</p>
    pub fn set_template_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_name = input;
        self
    }
    /// <p>The template type.</p>
    pub fn template_type(mut self, input: crate::types::TemplateType) -> Self {
        self.template_type = Some(input);
        self
    }
    /// <p>The template type.</p>
    pub fn set_template_type(
        mut self,
        input: std::option::Option<crate::types::TemplateType>,
    ) -> Self {
        self.template_type = input;
        self
    }
    /// <p>The template major version.</p>
    pub fn template_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_version = Some(input.into());
        self
    }
    /// <p>The template major version.</p>
    pub fn set_template_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_version = input;
        self
    }
    /// Consumes the builder and constructs a [`GetTemplateSyncStatusInput`](crate::operation::get_template_sync_status::GetTemplateSyncStatusInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_template_sync_status::GetTemplateSyncStatusInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_template_sync_status::GetTemplateSyncStatusInput {
                template_name: self.template_name,
                template_type: self.template_type,
                template_version: self.template_version,
            },
        )
    }
}
