// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateServiceTemplateOutput {
    /// <p>The service template detail data that's returned by Proton.</p>
    #[doc(hidden)]
    pub service_template: std::option::Option<crate::types::ServiceTemplate>,
    _request_id: Option<String>,
}
impl CreateServiceTemplateOutput {
    /// <p>The service template detail data that's returned by Proton.</p>
    pub fn service_template(&self) -> std::option::Option<&crate::types::ServiceTemplate> {
        self.service_template.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateServiceTemplateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateServiceTemplateOutput {
    /// Creates a new builder-style object to manufacture [`CreateServiceTemplateOutput`](crate::operation::create_service_template::CreateServiceTemplateOutput).
    pub fn builder(
    ) -> crate::operation::create_service_template::builders::CreateServiceTemplateOutputBuilder
    {
        crate::operation::create_service_template::builders::CreateServiceTemplateOutputBuilder::default()
    }
}

/// A builder for [`CreateServiceTemplateOutput`](crate::operation::create_service_template::CreateServiceTemplateOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateServiceTemplateOutputBuilder {
    pub(crate) service_template: std::option::Option<crate::types::ServiceTemplate>,
    _request_id: Option<String>,
}
impl CreateServiceTemplateOutputBuilder {
    /// <p>The service template detail data that's returned by Proton.</p>
    pub fn service_template(mut self, input: crate::types::ServiceTemplate) -> Self {
        self.service_template = Some(input);
        self
    }
    /// <p>The service template detail data that's returned by Proton.</p>
    pub fn set_service_template(
        mut self,
        input: std::option::Option<crate::types::ServiceTemplate>,
    ) -> Self {
        self.service_template = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateServiceTemplateOutput`](crate::operation::create_service_template::CreateServiceTemplateOutput).
    pub fn build(self) -> crate::operation::create_service_template::CreateServiceTemplateOutput {
        crate::operation::create_service_template::CreateServiceTemplateOutput {
            service_template: self.service_template,
            _request_id: self._request_id,
        }
    }
}
