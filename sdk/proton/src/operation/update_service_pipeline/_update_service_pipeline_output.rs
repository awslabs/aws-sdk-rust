// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateServicePipelineOutput {
    /// <p>The pipeline details that are returned by Proton.</p>
    pub pipeline: ::std::option::Option<crate::types::ServicePipeline>,
    _request_id: Option<String>,
}
impl UpdateServicePipelineOutput {
    /// <p>The pipeline details that are returned by Proton.</p>
    pub fn pipeline(&self) -> ::std::option::Option<&crate::types::ServicePipeline> {
        self.pipeline.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for UpdateServicePipelineOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateServicePipelineOutput {
    /// Creates a new builder-style object to manufacture [`UpdateServicePipelineOutput`](crate::operation::update_service_pipeline::UpdateServicePipelineOutput).
    pub fn builder() -> crate::operation::update_service_pipeline::builders::UpdateServicePipelineOutputBuilder {
        crate::operation::update_service_pipeline::builders::UpdateServicePipelineOutputBuilder::default()
    }
}

/// A builder for [`UpdateServicePipelineOutput`](crate::operation::update_service_pipeline::UpdateServicePipelineOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateServicePipelineOutputBuilder {
    pub(crate) pipeline: ::std::option::Option<crate::types::ServicePipeline>,
    _request_id: Option<String>,
}
impl UpdateServicePipelineOutputBuilder {
    /// <p>The pipeline details that are returned by Proton.</p>
    /// This field is required.
    pub fn pipeline(mut self, input: crate::types::ServicePipeline) -> Self {
        self.pipeline = ::std::option::Option::Some(input);
        self
    }
    /// <p>The pipeline details that are returned by Proton.</p>
    pub fn set_pipeline(mut self, input: ::std::option::Option<crate::types::ServicePipeline>) -> Self {
        self.pipeline = input;
        self
    }
    /// <p>The pipeline details that are returned by Proton.</p>
    pub fn get_pipeline(&self) -> &::std::option::Option<crate::types::ServicePipeline> {
        &self.pipeline
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateServicePipelineOutput`](crate::operation::update_service_pipeline::UpdateServicePipelineOutput).
    pub fn build(self) -> crate::operation::update_service_pipeline::UpdateServicePipelineOutput {
        crate::operation::update_service_pipeline::UpdateServicePipelineOutput {
            pipeline: self.pipeline,
            _request_id: self._request_id,
        }
    }
}
