// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListComponentProvisionedResourcesOutput {
    /// <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>An array of provisioned resources for a component.</p>
    #[doc(hidden)]
    pub provisioned_resources:
        std::option::Option<std::vec::Vec<crate::types::ProvisionedResource>>,
    _request_id: Option<String>,
}
impl ListComponentProvisionedResourcesOutput {
    /// <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>An array of provisioned resources for a component.</p>
    pub fn provisioned_resources(
        &self,
    ) -> std::option::Option<&[crate::types::ProvisionedResource]> {
        self.provisioned_resources.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListComponentProvisionedResourcesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListComponentProvisionedResourcesOutput {
    /// Creates a new builder-style object to manufacture [`ListComponentProvisionedResourcesOutput`](crate::operation::list_component_provisioned_resources::ListComponentProvisionedResourcesOutput).
    pub fn builder() -> crate::operation::list_component_provisioned_resources::builders::ListComponentProvisionedResourcesOutputBuilder{
        crate::operation::list_component_provisioned_resources::builders::ListComponentProvisionedResourcesOutputBuilder::default()
    }
}

/// A builder for [`ListComponentProvisionedResourcesOutput`](crate::operation::list_component_provisioned_resources::ListComponentProvisionedResourcesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListComponentProvisionedResourcesOutputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) provisioned_resources:
        std::option::Option<std::vec::Vec<crate::types::ProvisionedResource>>,
    _request_id: Option<String>,
}
impl ListComponentProvisionedResourcesOutputBuilder {
    /// <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Appends an item to `provisioned_resources`.
    ///
    /// To override the contents of this collection use [`set_provisioned_resources`](Self::set_provisioned_resources).
    ///
    /// <p>An array of provisioned resources for a component.</p>
    pub fn provisioned_resources(mut self, input: crate::types::ProvisionedResource) -> Self {
        let mut v = self.provisioned_resources.unwrap_or_default();
        v.push(input);
        self.provisioned_resources = Some(v);
        self
    }
    /// <p>An array of provisioned resources for a component.</p>
    pub fn set_provisioned_resources(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ProvisionedResource>>,
    ) -> Self {
        self.provisioned_resources = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListComponentProvisionedResourcesOutput`](crate::operation::list_component_provisioned_resources::ListComponentProvisionedResourcesOutput).
    pub fn build(self) -> crate::operation::list_component_provisioned_resources::ListComponentProvisionedResourcesOutput{
        crate::operation::list_component_provisioned_resources::ListComponentProvisionedResourcesOutput {
            next_token: self.next_token
            ,
            provisioned_resources: self.provisioned_resources
            ,
            _request_id: self._request_id,
        }
    }
}
