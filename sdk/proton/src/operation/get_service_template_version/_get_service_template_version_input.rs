// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetServiceTemplateVersionInput {
    /// <p>The name of the service template a version of which you want to get detailed data for.</p>
    #[doc(hidden)]
    pub template_name: std::option::Option<std::string::String>,
    /// <p>To get service template major version detail data, include <code>major Version</code>.</p>
    #[doc(hidden)]
    pub major_version: std::option::Option<std::string::String>,
    /// <p>To get service template minor version detail data, include <code>minorVersion</code>.</p>
    #[doc(hidden)]
    pub minor_version: std::option::Option<std::string::String>,
}
impl GetServiceTemplateVersionInput {
    /// <p>The name of the service template a version of which you want to get detailed data for.</p>
    pub fn template_name(&self) -> std::option::Option<&str> {
        self.template_name.as_deref()
    }
    /// <p>To get service template major version detail data, include <code>major Version</code>.</p>
    pub fn major_version(&self) -> std::option::Option<&str> {
        self.major_version.as_deref()
    }
    /// <p>To get service template minor version detail data, include <code>minorVersion</code>.</p>
    pub fn minor_version(&self) -> std::option::Option<&str> {
        self.minor_version.as_deref()
    }
}
impl GetServiceTemplateVersionInput {
    /// Creates a new builder-style object to manufacture [`GetServiceTemplateVersionInput`](crate::operation::get_service_template_version::GetServiceTemplateVersionInput).
    pub fn builder() -> crate::operation::get_service_template_version::builders::GetServiceTemplateVersionInputBuilder{
        crate::operation::get_service_template_version::builders::GetServiceTemplateVersionInputBuilder::default()
    }
}

/// A builder for [`GetServiceTemplateVersionInput`](crate::operation::get_service_template_version::GetServiceTemplateVersionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetServiceTemplateVersionInputBuilder {
    pub(crate) template_name: std::option::Option<std::string::String>,
    pub(crate) major_version: std::option::Option<std::string::String>,
    pub(crate) minor_version: std::option::Option<std::string::String>,
}
impl GetServiceTemplateVersionInputBuilder {
    /// <p>The name of the service template a version of which you want to get detailed data for.</p>
    pub fn template_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_name = Some(input.into());
        self
    }
    /// <p>The name of the service template a version of which you want to get detailed data for.</p>
    pub fn set_template_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_name = input;
        self
    }
    /// <p>To get service template major version detail data, include <code>major Version</code>.</p>
    pub fn major_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.major_version = Some(input.into());
        self
    }
    /// <p>To get service template major version detail data, include <code>major Version</code>.</p>
    pub fn set_major_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.major_version = input;
        self
    }
    /// <p>To get service template minor version detail data, include <code>minorVersion</code>.</p>
    pub fn minor_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.minor_version = Some(input.into());
        self
    }
    /// <p>To get service template minor version detail data, include <code>minorVersion</code>.</p>
    pub fn set_minor_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.minor_version = input;
        self
    }
    /// Consumes the builder and constructs a [`GetServiceTemplateVersionInput`](crate::operation::get_service_template_version::GetServiceTemplateVersionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_service_template_version::GetServiceTemplateVersionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_service_template_version::GetServiceTemplateVersionInput {
                template_name: self.template_name,
                major_version: self.major_version,
                minor_version: self.minor_version,
            },
        )
    }
}
