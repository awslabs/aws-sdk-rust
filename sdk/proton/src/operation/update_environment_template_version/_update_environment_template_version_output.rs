// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateEnvironmentTemplateVersionOutput {
    /// <p>The environment template version detail data that's returned by Proton.</p>
    pub environment_template_version: ::std::option::Option<crate::types::EnvironmentTemplateVersion>,
    _request_id: Option<String>,
}
impl UpdateEnvironmentTemplateVersionOutput {
    /// <p>The environment template version detail data that's returned by Proton.</p>
    pub fn environment_template_version(&self) -> ::std::option::Option<&crate::types::EnvironmentTemplateVersion> {
        self.environment_template_version.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for UpdateEnvironmentTemplateVersionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateEnvironmentTemplateVersionOutput {
    /// Creates a new builder-style object to manufacture [`UpdateEnvironmentTemplateVersionOutput`](crate::operation::update_environment_template_version::UpdateEnvironmentTemplateVersionOutput).
    pub fn builder() -> crate::operation::update_environment_template_version::builders::UpdateEnvironmentTemplateVersionOutputBuilder {
        crate::operation::update_environment_template_version::builders::UpdateEnvironmentTemplateVersionOutputBuilder::default()
    }
}

/// A builder for [`UpdateEnvironmentTemplateVersionOutput`](crate::operation::update_environment_template_version::UpdateEnvironmentTemplateVersionOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateEnvironmentTemplateVersionOutputBuilder {
    pub(crate) environment_template_version: ::std::option::Option<crate::types::EnvironmentTemplateVersion>,
    _request_id: Option<String>,
}
impl UpdateEnvironmentTemplateVersionOutputBuilder {
    /// <p>The environment template version detail data that's returned by Proton.</p>
    /// This field is required.
    pub fn environment_template_version(mut self, input: crate::types::EnvironmentTemplateVersion) -> Self {
        self.environment_template_version = ::std::option::Option::Some(input);
        self
    }
    /// <p>The environment template version detail data that's returned by Proton.</p>
    pub fn set_environment_template_version(mut self, input: ::std::option::Option<crate::types::EnvironmentTemplateVersion>) -> Self {
        self.environment_template_version = input;
        self
    }
    /// <p>The environment template version detail data that's returned by Proton.</p>
    pub fn get_environment_template_version(&self) -> &::std::option::Option<crate::types::EnvironmentTemplateVersion> {
        &self.environment_template_version
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateEnvironmentTemplateVersionOutput`](crate::operation::update_environment_template_version::UpdateEnvironmentTemplateVersionOutput).
    pub fn build(self) -> crate::operation::update_environment_template_version::UpdateEnvironmentTemplateVersionOutput {
        crate::operation::update_environment_template_version::UpdateEnvironmentTemplateVersionOutput {
            environment_template_version: self.environment_template_version,
            _request_id: self._request_id,
        }
    }
}
