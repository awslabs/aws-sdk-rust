// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateComponentOutput {
    /// <p>The detailed data of the created component.</p>
    #[doc(hidden)]
    pub component: std::option::Option<crate::types::Component>,
    _request_id: Option<String>,
}
impl CreateComponentOutput {
    /// <p>The detailed data of the created component.</p>
    pub fn component(&self) -> std::option::Option<&crate::types::Component> {
        self.component.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateComponentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateComponentOutput {
    /// Creates a new builder-style object to manufacture [`CreateComponentOutput`](crate::operation::create_component::CreateComponentOutput).
    pub fn builder() -> crate::operation::create_component::builders::CreateComponentOutputBuilder {
        crate::operation::create_component::builders::CreateComponentOutputBuilder::default()
    }
}

/// A builder for [`CreateComponentOutput`](crate::operation::create_component::CreateComponentOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateComponentOutputBuilder {
    pub(crate) component: std::option::Option<crate::types::Component>,
    _request_id: Option<String>,
}
impl CreateComponentOutputBuilder {
    /// <p>The detailed data of the created component.</p>
    pub fn component(mut self, input: crate::types::Component) -> Self {
        self.component = Some(input);
        self
    }
    /// <p>The detailed data of the created component.</p>
    pub fn set_component(mut self, input: std::option::Option<crate::types::Component>) -> Self {
        self.component = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateComponentOutput`](crate::operation::create_component::CreateComponentOutput).
    pub fn build(self) -> crate::operation::create_component::CreateComponentOutput {
        crate::operation::create_component::CreateComponentOutput {
            component: self.component,
            _request_id: self._request_id,
        }
    }
}
