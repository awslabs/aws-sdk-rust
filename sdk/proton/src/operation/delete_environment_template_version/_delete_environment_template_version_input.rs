// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteEnvironmentTemplateVersionInput {
    /// <p>The name of the environment template.</p>
    #[doc(hidden)]
    pub template_name: std::option::Option<std::string::String>,
    /// <p>The environment template major version to delete.</p>
    #[doc(hidden)]
    pub major_version: std::option::Option<std::string::String>,
    /// <p>The environment template minor version to delete.</p>
    #[doc(hidden)]
    pub minor_version: std::option::Option<std::string::String>,
}
impl DeleteEnvironmentTemplateVersionInput {
    /// <p>The name of the environment template.</p>
    pub fn template_name(&self) -> std::option::Option<&str> {
        self.template_name.as_deref()
    }
    /// <p>The environment template major version to delete.</p>
    pub fn major_version(&self) -> std::option::Option<&str> {
        self.major_version.as_deref()
    }
    /// <p>The environment template minor version to delete.</p>
    pub fn minor_version(&self) -> std::option::Option<&str> {
        self.minor_version.as_deref()
    }
}
impl DeleteEnvironmentTemplateVersionInput {
    /// Creates a new builder-style object to manufacture [`DeleteEnvironmentTemplateVersionInput`](crate::operation::delete_environment_template_version::DeleteEnvironmentTemplateVersionInput).
    pub fn builder() -> crate::operation::delete_environment_template_version::builders::DeleteEnvironmentTemplateVersionInputBuilder{
        crate::operation::delete_environment_template_version::builders::DeleteEnvironmentTemplateVersionInputBuilder::default()
    }
}

/// A builder for [`DeleteEnvironmentTemplateVersionInput`](crate::operation::delete_environment_template_version::DeleteEnvironmentTemplateVersionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteEnvironmentTemplateVersionInputBuilder {
    pub(crate) template_name: std::option::Option<std::string::String>,
    pub(crate) major_version: std::option::Option<std::string::String>,
    pub(crate) minor_version: std::option::Option<std::string::String>,
}
impl DeleteEnvironmentTemplateVersionInputBuilder {
    /// <p>The name of the environment template.</p>
    pub fn template_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_name = Some(input.into());
        self
    }
    /// <p>The name of the environment template.</p>
    pub fn set_template_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_name = input;
        self
    }
    /// <p>The environment template major version to delete.</p>
    pub fn major_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.major_version = Some(input.into());
        self
    }
    /// <p>The environment template major version to delete.</p>
    pub fn set_major_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.major_version = input;
        self
    }
    /// <p>The environment template minor version to delete.</p>
    pub fn minor_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.minor_version = Some(input.into());
        self
    }
    /// <p>The environment template minor version to delete.</p>
    pub fn set_minor_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.minor_version = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteEnvironmentTemplateVersionInput`](crate::operation::delete_environment_template_version::DeleteEnvironmentTemplateVersionInput).
    pub fn build(self) -> Result<crate::operation::delete_environment_template_version::DeleteEnvironmentTemplateVersionInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::delete_environment_template_version::DeleteEnvironmentTemplateVersionInput {
                template_name: self.template_name
                ,
                major_version: self.major_version
                ,
                minor_version: self.minor_version
                ,
            }
        )
    }
}
