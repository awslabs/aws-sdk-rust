// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetServiceInstanceOutput {
    /// <p>The detailed data of the requested service instance.</p>
    pub service_instance: ::std::option::Option<crate::types::ServiceInstance>,
    _request_id: Option<String>,
}
impl GetServiceInstanceOutput {
    /// <p>The detailed data of the requested service instance.</p>
    pub fn service_instance(&self) -> ::std::option::Option<&crate::types::ServiceInstance> {
        self.service_instance.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for GetServiceInstanceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetServiceInstanceOutput {
    /// Creates a new builder-style object to manufacture [`GetServiceInstanceOutput`](crate::operation::get_service_instance::GetServiceInstanceOutput).
    pub fn builder() -> crate::operation::get_service_instance::builders::GetServiceInstanceOutputBuilder {
        crate::operation::get_service_instance::builders::GetServiceInstanceOutputBuilder::default()
    }
}

/// A builder for [`GetServiceInstanceOutput`](crate::operation::get_service_instance::GetServiceInstanceOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetServiceInstanceOutputBuilder {
    pub(crate) service_instance: ::std::option::Option<crate::types::ServiceInstance>,
    _request_id: Option<String>,
}
impl GetServiceInstanceOutputBuilder {
    /// <p>The detailed data of the requested service instance.</p>
    /// This field is required.
    pub fn service_instance(mut self, input: crate::types::ServiceInstance) -> Self {
        self.service_instance = ::std::option::Option::Some(input);
        self
    }
    /// <p>The detailed data of the requested service instance.</p>
    pub fn set_service_instance(mut self, input: ::std::option::Option<crate::types::ServiceInstance>) -> Self {
        self.service_instance = input;
        self
    }
    /// <p>The detailed data of the requested service instance.</p>
    pub fn get_service_instance(&self) -> &::std::option::Option<crate::types::ServiceInstance> {
        &self.service_instance
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetServiceInstanceOutput`](crate::operation::get_service_instance::GetServiceInstanceOutput).
    pub fn build(self) -> crate::operation::get_service_instance::GetServiceInstanceOutput {
        crate::operation::get_service_instance::GetServiceInstanceOutput {
            service_instance: self.service_instance,
            _request_id: self._request_id,
        }
    }
}
