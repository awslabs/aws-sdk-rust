// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListComponentProvisionedResources`](crate::client::fluent_builders::ListComponentProvisionedResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListComponentProvisionedResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`component_name(impl Into<String>)`](crate::client::fluent_builders::ListComponentProvisionedResources::component_name) / [`set_component_name(Option<String>)`](crate::client::fluent_builders::ListComponentProvisionedResources::set_component_name): <p>The name of the component whose provisioned resources you want.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListComponentProvisionedResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListComponentProvisionedResources::set_next_token): <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources that was previously requested.</p>
    /// - On success, responds with [`ListComponentProvisionedResourcesOutput`](crate::output::ListComponentProvisionedResourcesOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListComponentProvisionedResourcesOutput::next_token): <p>A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.</p>
    ///   - [`provisioned_resources(Option<Vec<ProvisionedResource>>)`](crate::output::ListComponentProvisionedResourcesOutput::provisioned_resources): <p>An array of provisioned resources for a component.</p>
    /// - On failure, responds with [`SdkError<ListComponentProvisionedResourcesError>`](crate::error::ListComponentProvisionedResourcesError)
    pub fn list_component_provisioned_resources(
        &self,
    ) -> crate::client::fluent_builders::ListComponentProvisionedResources {
        crate::client::fluent_builders::ListComponentProvisionedResources::new(self.handle.clone())
    }
}
