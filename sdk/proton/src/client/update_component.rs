// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateComponent`](crate::operation::update_component::builders::UpdateComponentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::set_name):<br>required: **true**<br><p>The name of the component to update.</p><br>
    ///   - [`deployment_type(ComponentDeploymentUpdateType)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::deployment_type) / [`set_deployment_type(Option<ComponentDeploymentUpdateType>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::set_deployment_type):<br>required: **true**<br><p>The deployment type. It defines the mode for updating a component, as follows:</p>  <dl>   <dt></dt>   <dd>    <p> <code>NONE</code> </p>    <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated. You can only specify <code>description</code> in this mode.</p>   </dd>   <dt></dt>   <dd>    <p> <code>CURRENT_VERSION</code> </p>    <p>In this mode, the component is deployed and updated with the new <code>serviceSpec</code>, <code>templateSource</code>, and/or <code>type</code> that you provide. Only requested parameters are updated.</p>   </dd>  </dl><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::set_description):<br>required: **false**<br><p>An optional customer-provided description of the component.</p><br>
    ///   - [`service_name(impl Into<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::service_name) / [`set_service_name(Option<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::set_service_name):<br>required: **false**<br><p>The name of the service that <code>serviceInstanceName</code> is associated with. Don't specify to keep the component's current service instance attachment. Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both <code>serviceInstanceName</code> and <code>serviceName</code> or for neither of them.</p><br>
    ///   - [`service_instance_name(impl Into<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::service_instance_name) / [`set_service_instance_name(Option<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::set_service_instance_name):<br>required: **false**<br><p>The name of the service instance that you want to attach this component to. Don't specify to keep the component's current service instance attachment. Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both <code>serviceInstanceName</code> and <code>serviceName</code> or for neither of them.</p><br>
    ///   - [`service_spec(impl Into<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::service_spec) / [`set_service_spec(Option<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::set_service_spec):<br>required: **false**<br><p>The service spec that you want the component to use to access service inputs. Set this only when the component is attached to a service instance.</p><br>
    ///   - [`template_file(impl Into<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::template_file) / [`set_template_file(Option<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::set_template_file):<br>required: **false**<br><p>A path to the Infrastructure as Code (IaC) file describing infrastructure that a custom component provisions.</p> <note>   <p>Components support a single IaC file, even if you use Terraform as your template language.</p>  </note><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::update_component::builders::UpdateComponentFluentBuilder::set_client_token):<br>required: **false**<br><p>The client token for the updated component.</p><br>
    /// - On success, responds with [`UpdateComponentOutput`](crate::operation::update_component::UpdateComponentOutput) with field(s):
    ///   - [`component(Option<Component>)`](crate::operation::update_component::UpdateComponentOutput::component): <p>The detailed data of the updated component.</p>
    /// - On failure, responds with [`SdkError<UpdateComponentError>`](crate::operation::update_component::UpdateComponentError)
    pub fn update_component(&self) -> crate::operation::update_component::builders::UpdateComponentFluentBuilder {
        crate::operation::update_component::builders::UpdateComponentFluentBuilder::new(self.handle.clone())
    }
}
