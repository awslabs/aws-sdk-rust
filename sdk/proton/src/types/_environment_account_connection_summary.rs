// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary data of an Proton environment account connection resource.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnvironmentAccountConnectionSummary {
    /// <p>The ID of the environment account connection.</p>
    pub id: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
    pub arn: ::std::string::String,
    /// <p>The ID of the management account that's connected to the environment account connection.</p>
    pub management_account_id: ::std::string::String,
    /// <p>The ID of the environment account that's connected to the environment account connection.</p>
    pub environment_account_id: ::std::string::String,
    /// <p>The IAM service role that's associated with the environment account connection.</p>
    pub role_arn: ::std::string::String,
    /// <p>The name of the environment that's associated with the environment account connection.</p>
    pub environment_name: ::std::string::String,
    /// <p>The time when the environment account connection request was made.</p>
    pub requested_at: ::aws_smithy_types::DateTime,
    /// <p>The time when the environment account connection was last modified.</p>
    pub last_modified_at: ::aws_smithy_types::DateTime,
    /// <p>The status of the environment account connection.</p>
    pub status: crate::types::EnvironmentAccountConnectionStatus,
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
    /// <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>
    /// <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    pub component_role_arn: ::std::option::Option<::std::string::String>,
}
impl EnvironmentAccountConnectionSummary {
    /// <p>The ID of the environment account connection.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The ID of the management account that's connected to the environment account connection.</p>
    pub fn management_account_id(&self) -> &str {
        use std::ops::Deref;
        self.management_account_id.deref()
    }
    /// <p>The ID of the environment account that's connected to the environment account connection.</p>
    pub fn environment_account_id(&self) -> &str {
        use std::ops::Deref;
        self.environment_account_id.deref()
    }
    /// <p>The IAM service role that's associated with the environment account connection.</p>
    pub fn role_arn(&self) -> &str {
        use std::ops::Deref;
        self.role_arn.deref()
    }
    /// <p>The name of the environment that's associated with the environment account connection.</p>
    pub fn environment_name(&self) -> &str {
        use std::ops::Deref;
        self.environment_name.deref()
    }
    /// <p>The time when the environment account connection request was made.</p>
    pub fn requested_at(&self) -> &::aws_smithy_types::DateTime {
        &self.requested_at
    }
    /// <p>The time when the environment account connection was last modified.</p>
    pub fn last_modified_at(&self) -> &::aws_smithy_types::DateTime {
        &self.last_modified_at
    }
    /// <p>The status of the environment account connection.</p>
    pub fn status(&self) -> &crate::types::EnvironmentAccountConnectionStatus {
        &self.status
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
    /// <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>
    /// <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    pub fn component_role_arn(&self) -> ::std::option::Option<&str> {
        self.component_role_arn.as_deref()
    }
}
impl EnvironmentAccountConnectionSummary {
    /// Creates a new builder-style object to manufacture [`EnvironmentAccountConnectionSummary`](crate::types::EnvironmentAccountConnectionSummary).
    pub fn builder() -> crate::types::builders::EnvironmentAccountConnectionSummaryBuilder {
        crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::default()
    }
}

/// A builder for [`EnvironmentAccountConnectionSummary`](crate::types::EnvironmentAccountConnectionSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EnvironmentAccountConnectionSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) management_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) environment_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) environment_name: ::std::option::Option<::std::string::String>,
    pub(crate) requested_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::EnvironmentAccountConnectionStatus>,
    pub(crate) component_role_arn: ::std::option::Option<::std::string::String>,
}
impl EnvironmentAccountConnectionSummaryBuilder {
    /// <p>The ID of the environment account connection.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the environment account connection.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the environment account connection.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The ID of the management account that's connected to the environment account connection.</p>
    /// This field is required.
    pub fn management_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.management_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the management account that's connected to the environment account connection.</p>
    pub fn set_management_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.management_account_id = input;
        self
    }
    /// <p>The ID of the management account that's connected to the environment account connection.</p>
    pub fn get_management_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.management_account_id
    }
    /// <p>The ID of the environment account that's connected to the environment account connection.</p>
    /// This field is required.
    pub fn environment_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.environment_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the environment account that's connected to the environment account connection.</p>
    pub fn set_environment_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.environment_account_id = input;
        self
    }
    /// <p>The ID of the environment account that's connected to the environment account connection.</p>
    pub fn get_environment_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.environment_account_id
    }
    /// <p>The IAM service role that's associated with the environment account connection.</p>
    /// This field is required.
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The IAM service role that's associated with the environment account connection.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The IAM service role that's associated with the environment account connection.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The name of the environment that's associated with the environment account connection.</p>
    /// This field is required.
    pub fn environment_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.environment_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the environment that's associated with the environment account connection.</p>
    pub fn set_environment_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.environment_name = input;
        self
    }
    /// <p>The name of the environment that's associated with the environment account connection.</p>
    pub fn get_environment_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.environment_name
    }
    /// <p>The time when the environment account connection request was made.</p>
    /// This field is required.
    pub fn requested_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.requested_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the environment account connection request was made.</p>
    pub fn set_requested_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.requested_at = input;
        self
    }
    /// <p>The time when the environment account connection request was made.</p>
    pub fn get_requested_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.requested_at
    }
    /// <p>The time when the environment account connection was last modified.</p>
    /// This field is required.
    pub fn last_modified_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the environment account connection was last modified.</p>
    pub fn set_last_modified_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_at = input;
        self
    }
    /// <p>The time when the environment account connection was last modified.</p>
    pub fn get_last_modified_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_at
    }
    /// <p>The status of the environment account connection.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::EnvironmentAccountConnectionStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the environment account connection.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::EnvironmentAccountConnectionStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the environment account connection.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::EnvironmentAccountConnectionStatus> {
        &self.status
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
    /// <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>
    /// <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    pub fn component_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.component_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
    /// <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>
    /// <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    pub fn set_component_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.component_role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
    /// <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>
    /// <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    pub fn get_component_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.component_role_arn
    }
    /// Consumes the builder and constructs a [`EnvironmentAccountConnectionSummary`](crate::types::EnvironmentAccountConnectionSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::id)
    /// - [`arn`](crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::arn)
    /// - [`management_account_id`](crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::management_account_id)
    /// - [`environment_account_id`](crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::environment_account_id)
    /// - [`role_arn`](crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::role_arn)
    /// - [`environment_name`](crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::environment_name)
    /// - [`requested_at`](crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::requested_at)
    /// - [`last_modified_at`](crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::last_modified_at)
    /// - [`status`](crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::EnvironmentAccountConnectionSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::EnvironmentAccountConnectionSummary {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building EnvironmentAccountConnectionSummary",
                )
            })?,
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building EnvironmentAccountConnectionSummary",
                )
            })?,
            management_account_id: self.management_account_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "management_account_id",
                    "management_account_id was not specified but it is required when building EnvironmentAccountConnectionSummary",
                )
            })?,
            environment_account_id: self.environment_account_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "environment_account_id",
                    "environment_account_id was not specified but it is required when building EnvironmentAccountConnectionSummary",
                )
            })?,
            role_arn: self.role_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "role_arn",
                    "role_arn was not specified but it is required when building EnvironmentAccountConnectionSummary",
                )
            })?,
            environment_name: self.environment_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "environment_name",
                    "environment_name was not specified but it is required when building EnvironmentAccountConnectionSummary",
                )
            })?,
            requested_at: self.requested_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "requested_at",
                    "requested_at was not specified but it is required when building EnvironmentAccountConnectionSummary",
                )
            })?,
            last_modified_at: self.last_modified_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "last_modified_at",
                    "last_modified_at was not specified but it is required when building EnvironmentAccountConnectionSummary",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building EnvironmentAccountConnectionSummary",
                )
            })?,
            component_role_arn: self.component_role_arn,
        })
    }
}
