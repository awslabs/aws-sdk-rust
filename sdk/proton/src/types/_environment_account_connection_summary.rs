// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary data of an Proton environment account connection resource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EnvironmentAccountConnectionSummary {
    /// <p>The ID of the environment account connection.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The ID of the management account that's connected to the environment account connection.</p>
    #[doc(hidden)]
    pub management_account_id: std::option::Option<std::string::String>,
    /// <p>The ID of the environment account that's connected to the environment account connection.</p>
    #[doc(hidden)]
    pub environment_account_id: std::option::Option<std::string::String>,
    /// <p>The IAM service role that's associated with the environment account connection.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
    /// <p>The name of the environment that's associated with the environment account connection.</p>
    #[doc(hidden)]
    pub environment_name: std::option::Option<std::string::String>,
    /// <p>The time when the environment account connection request was made.</p>
    #[doc(hidden)]
    pub requested_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time when the environment account connection was last modified.</p>
    #[doc(hidden)]
    pub last_modified_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status of the environment account connection.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::EnvironmentAccountConnectionStatus>,
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
    /// <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>
    /// <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    #[doc(hidden)]
    pub component_role_arn: std::option::Option<std::string::String>,
}
impl EnvironmentAccountConnectionSummary {
    /// <p>The ID of the environment account connection.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The ID of the management account that's connected to the environment account connection.</p>
    pub fn management_account_id(&self) -> std::option::Option<&str> {
        self.management_account_id.as_deref()
    }
    /// <p>The ID of the environment account that's connected to the environment account connection.</p>
    pub fn environment_account_id(&self) -> std::option::Option<&str> {
        self.environment_account_id.as_deref()
    }
    /// <p>The IAM service role that's associated with the environment account connection.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The name of the environment that's associated with the environment account connection.</p>
    pub fn environment_name(&self) -> std::option::Option<&str> {
        self.environment_name.as_deref()
    }
    /// <p>The time when the environment account connection request was made.</p>
    pub fn requested_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.requested_at.as_ref()
    }
    /// <p>The time when the environment account connection was last modified.</p>
    pub fn last_modified_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_at.as_ref()
    }
    /// <p>The status of the environment account connection.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::EnvironmentAccountConnectionStatus> {
        self.status.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
    /// <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>
    /// <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    pub fn component_role_arn(&self) -> std::option::Option<&str> {
        self.component_role_arn.as_deref()
    }
}
impl EnvironmentAccountConnectionSummary {
    /// Creates a new builder-style object to manufacture [`EnvironmentAccountConnectionSummary`](crate::types::EnvironmentAccountConnectionSummary).
    pub fn builder() -> crate::types::builders::EnvironmentAccountConnectionSummaryBuilder {
        crate::types::builders::EnvironmentAccountConnectionSummaryBuilder::default()
    }
}

/// A builder for [`EnvironmentAccountConnectionSummary`](crate::types::EnvironmentAccountConnectionSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EnvironmentAccountConnectionSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) management_account_id: std::option::Option<std::string::String>,
    pub(crate) environment_account_id: std::option::Option<std::string::String>,
    pub(crate) role_arn: std::option::Option<std::string::String>,
    pub(crate) environment_name: std::option::Option<std::string::String>,
    pub(crate) requested_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) status: std::option::Option<crate::types::EnvironmentAccountConnectionStatus>,
    pub(crate) component_role_arn: std::option::Option<std::string::String>,
}
impl EnvironmentAccountConnectionSummaryBuilder {
    /// <p>The ID of the environment account connection.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of the environment account connection.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the environment account connection.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ID of the management account that's connected to the environment account connection.</p>
    pub fn management_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.management_account_id = Some(input.into());
        self
    }
    /// <p>The ID of the management account that's connected to the environment account connection.</p>
    pub fn set_management_account_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.management_account_id = input;
        self
    }
    /// <p>The ID of the environment account that's connected to the environment account connection.</p>
    pub fn environment_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.environment_account_id = Some(input.into());
        self
    }
    /// <p>The ID of the environment account that's connected to the environment account connection.</p>
    pub fn set_environment_account_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.environment_account_id = input;
        self
    }
    /// <p>The IAM service role that's associated with the environment account connection.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The IAM service role that's associated with the environment account connection.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The name of the environment that's associated with the environment account connection.</p>
    pub fn environment_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.environment_name = Some(input.into());
        self
    }
    /// <p>The name of the environment that's associated with the environment account connection.</p>
    pub fn set_environment_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.environment_name = input;
        self
    }
    /// <p>The time when the environment account connection request was made.</p>
    pub fn requested_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.requested_at = Some(input);
        self
    }
    /// <p>The time when the environment account connection request was made.</p>
    pub fn set_requested_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.requested_at = input;
        self
    }
    /// <p>The time when the environment account connection was last modified.</p>
    pub fn last_modified_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_at = Some(input);
        self
    }
    /// <p>The time when the environment account connection was last modified.</p>
    pub fn set_last_modified_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_at = input;
        self
    }
    /// <p>The status of the environment account connection.</p>
    pub fn status(mut self, input: crate::types::EnvironmentAccountConnectionStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the environment account connection.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::EnvironmentAccountConnectionStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
    /// <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>
    /// <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    pub fn component_role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.component_role_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p>
    /// <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p>
    /// <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    pub fn set_component_role_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.component_role_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`EnvironmentAccountConnectionSummary`](crate::types::EnvironmentAccountConnectionSummary).
    pub fn build(self) -> crate::types::EnvironmentAccountConnectionSummary {
        crate::types::EnvironmentAccountConnectionSummary {
            id: self.id,
            arn: self.arn,
            management_account_id: self.management_account_id,
            environment_account_id: self.environment_account_id,
            role_arn: self.role_arn,
            environment_name: self.environment_name,
            requested_at: self.requested_at,
            last_modified_at: self.last_modified_at,
            status: self.status,
            component_role_arn: self.component_role_arn,
        }
    }
}
