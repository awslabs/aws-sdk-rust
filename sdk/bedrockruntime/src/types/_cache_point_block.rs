// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines a section of content to be cached for reuse in subsequent API calls.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug, ::serde::Serialize, ::serde::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct CachePointBlock {
    /// <p>Specifies the type of cache point within the CachePointBlock.</p>
    pub r#type: crate::types::CachePointType,
}
impl CachePointBlock {
    /// <p>Specifies the type of cache point within the CachePointBlock.</p>
    pub fn r#type(&self) -> &crate::types::CachePointType {
        &self.r#type
    }
}
impl CachePointBlock {
    /// Creates a new builder-style object to manufacture [`CachePointBlock`](crate::types::CachePointBlock).
    pub fn builder() -> crate::types::builders::CachePointBlockBuilder {
        crate::types::builders::CachePointBlockBuilder::default()
    }
}

/// A builder for [`CachePointBlock`](crate::types::CachePointBlock).
#[derive(
    ::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug,
)]
#[non_exhaustive]
pub struct CachePointBlockBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::CachePointType>,
}
impl CachePointBlockBuilder {
    /// <p>Specifies the type of cache point within the CachePointBlock.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::CachePointType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the type of cache point within the CachePointBlock.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::CachePointType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>Specifies the type of cache point within the CachePointBlock.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::CachePointType> {
        &self.r#type
    }
    /// Consumes the builder and constructs a [`CachePointBlock`](crate::types::CachePointBlock).
    /// This method will fail if any of the following fields are not set:
    /// - [`r#type`](crate::types::builders::CachePointBlockBuilder::type)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::types::CachePointBlock,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::types::CachePointBlock {
            r#type: self.r#type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "r#type",
                    "r#type was not specified but it is required when building CachePointBlock",
                )
            })?,
        })
    }
}
