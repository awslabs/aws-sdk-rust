// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The word policy assessment.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug,  ::serde::Deserialize)]
pub struct GuardrailWordPolicyAssessment {
    /// <p>Custom words in the assessment.</p>
    pub custom_words: ::std::vec::Vec<crate::types::GuardrailCustomWord>,
    /// <p>Managed word lists in the assessment.</p>
    pub managed_word_lists: ::std::vec::Vec<crate::types::GuardrailManagedWord>,
}
impl GuardrailWordPolicyAssessment {
    /// <p>Custom words in the assessment.</p>
    pub fn custom_words(&self) -> &[crate::types::GuardrailCustomWord] {
        use std::ops::Deref;
        self.custom_words.deref()
    }
    /// <p>Managed word lists in the assessment.</p>
    pub fn managed_word_lists(&self) -> &[crate::types::GuardrailManagedWord] {
        use std::ops::Deref;
        self.managed_word_lists.deref()
    }
}
impl GuardrailWordPolicyAssessment {
    /// Creates a new builder-style object to manufacture [`GuardrailWordPolicyAssessment`](crate::types::GuardrailWordPolicyAssessment).
    pub fn builder() -> crate::types::builders::GuardrailWordPolicyAssessmentBuilder {
        crate::types::builders::GuardrailWordPolicyAssessmentBuilder::default()
    }
}

/// A builder for [`GuardrailWordPolicyAssessment`](crate::types::GuardrailWordPolicyAssessment).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GuardrailWordPolicyAssessmentBuilder {
    pub(crate) custom_words: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailCustomWord>>,
    pub(crate) managed_word_lists: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailManagedWord>>,
}
impl GuardrailWordPolicyAssessmentBuilder {
    /// Appends an item to `custom_words`.
    ///
    /// To override the contents of this collection use [`set_custom_words`](Self::set_custom_words).
    ///
    /// <p>Custom words in the assessment.</p>
    pub fn custom_words(mut self, input: crate::types::GuardrailCustomWord) -> Self {
        let mut v = self.custom_words.unwrap_or_default();
        v.push(input);
        self.custom_words = ::std::option::Option::Some(v);
        self
    }
    /// <p>Custom words in the assessment.</p>
    pub fn set_custom_words(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailCustomWord>>) -> Self {
        self.custom_words = input;
        self
    }
    /// <p>Custom words in the assessment.</p>
    pub fn get_custom_words(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::GuardrailCustomWord>> {
        &self.custom_words
    }
    /// Appends an item to `managed_word_lists`.
    ///
    /// To override the contents of this collection use [`set_managed_word_lists`](Self::set_managed_word_lists).
    ///
    /// <p>Managed word lists in the assessment.</p>
    pub fn managed_word_lists(mut self, input: crate::types::GuardrailManagedWord) -> Self {
        let mut v = self.managed_word_lists.unwrap_or_default();
        v.push(input);
        self.managed_word_lists = ::std::option::Option::Some(v);
        self
    }
    /// <p>Managed word lists in the assessment.</p>
    pub fn set_managed_word_lists(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailManagedWord>>) -> Self {
        self.managed_word_lists = input;
        self
    }
    /// <p>Managed word lists in the assessment.</p>
    pub fn get_managed_word_lists(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::GuardrailManagedWord>> {
        &self.managed_word_lists
    }
    /// Consumes the builder and constructs a [`GuardrailWordPolicyAssessment`](crate::types::GuardrailWordPolicyAssessment).
    /// This method will fail if any of the following fields are not set:
    /// - [`custom_words`](crate::types::builders::GuardrailWordPolicyAssessmentBuilder::custom_words)
    /// - [`managed_word_lists`](crate::types::builders::GuardrailWordPolicyAssessmentBuilder::managed_word_lists)
    pub fn build(self) -> ::std::result::Result<crate::types::GuardrailWordPolicyAssessment, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GuardrailWordPolicyAssessment {
            custom_words: self.custom_words.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "custom_words",
                    "custom_words was not specified but it is required when building GuardrailWordPolicyAssessment",
                )
            })?,
            managed_word_lists: self.managed_word_lists.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "managed_word_lists",
                    "managed_word_lists was not specified but it is required when building GuardrailWordPolicyAssessment",
                )
            })?,
        })
    }
}
