// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the parameters for DescribeTags.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeTagsInput {
    /// <p>The names of the load balancers.</p>
    pub load_balancer_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeTagsInput {
    /// <p>The names of the load balancers.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.load_balancer_names.is_none()`.
    pub fn load_balancer_names(&self) -> &[::std::string::String] {
        self.load_balancer_names.as_deref().unwrap_or_default()
    }
}
impl DescribeTagsInput {
    /// Creates a new builder-style object to manufacture [`DescribeTagsInput`](crate::operation::describe_tags::DescribeTagsInput).
    pub fn builder() -> crate::operation::describe_tags::builders::DescribeTagsInputBuilder {
        crate::operation::describe_tags::builders::DescribeTagsInputBuilder::default()
    }
}

/// A builder for [`DescribeTagsInput`](crate::operation::describe_tags::DescribeTagsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeTagsInputBuilder {
    pub(crate) load_balancer_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeTagsInputBuilder {
    /// Appends an item to `load_balancer_names`.
    ///
    /// To override the contents of this collection use [`set_load_balancer_names`](Self::set_load_balancer_names).
    ///
    /// <p>The names of the load balancers.</p>
    pub fn load_balancer_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.load_balancer_names.unwrap_or_default();
        v.push(input.into());
        self.load_balancer_names = ::std::option::Option::Some(v);
        self
    }
    /// <p>The names of the load balancers.</p>
    pub fn set_load_balancer_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.load_balancer_names = input;
        self
    }
    /// <p>The names of the load balancers.</p>
    pub fn get_load_balancer_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.load_balancer_names
    }
    /// Consumes the builder and constructs a [`DescribeTagsInput`](crate::operation::describe_tags::DescribeTagsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_tags::DescribeTagsInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::describe_tags::DescribeTagsInput {
            load_balancer_names: self.load_balancer_names,
        })
    }
}
