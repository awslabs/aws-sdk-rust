// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the parameters for ConfigureHealthCheck.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConfigureHealthCheckInput {
    /// <p>The name of the load balancer.</p>
    pub load_balancer_name: ::std::option::Option<::std::string::String>,
    /// <p>The configuration information.</p>
    pub health_check: ::std::option::Option<crate::types::HealthCheck>,
}
impl ConfigureHealthCheckInput {
    /// <p>The name of the load balancer.</p>
    pub fn load_balancer_name(&self) -> ::std::option::Option<&str> {
        self.load_balancer_name.as_deref()
    }
    /// <p>The configuration information.</p>
    pub fn health_check(&self) -> ::std::option::Option<&crate::types::HealthCheck> {
        self.health_check.as_ref()
    }
}
impl ConfigureHealthCheckInput {
    /// Creates a new builder-style object to manufacture [`ConfigureHealthCheckInput`](crate::operation::configure_health_check::ConfigureHealthCheckInput).
    pub fn builder() -> crate::operation::configure_health_check::builders::ConfigureHealthCheckInputBuilder {
        crate::operation::configure_health_check::builders::ConfigureHealthCheckInputBuilder::default()
    }
}

/// A builder for [`ConfigureHealthCheckInput`](crate::operation::configure_health_check::ConfigureHealthCheckInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConfigureHealthCheckInputBuilder {
    pub(crate) load_balancer_name: ::std::option::Option<::std::string::String>,
    pub(crate) health_check: ::std::option::Option<crate::types::HealthCheck>,
}
impl ConfigureHealthCheckInputBuilder {
    /// <p>The name of the load balancer.</p>
    /// This field is required.
    pub fn load_balancer_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.load_balancer_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the load balancer.</p>
    pub fn set_load_balancer_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.load_balancer_name = input;
        self
    }
    /// <p>The name of the load balancer.</p>
    pub fn get_load_balancer_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.load_balancer_name
    }
    /// <p>The configuration information.</p>
    /// This field is required.
    pub fn health_check(mut self, input: crate::types::HealthCheck) -> Self {
        self.health_check = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration information.</p>
    pub fn set_health_check(mut self, input: ::std::option::Option<crate::types::HealthCheck>) -> Self {
        self.health_check = input;
        self
    }
    /// <p>The configuration information.</p>
    pub fn get_health_check(&self) -> &::std::option::Option<crate::types::HealthCheck> {
        &self.health_check
    }
    /// Consumes the builder and constructs a [`ConfigureHealthCheckInput`](crate::operation::configure_health_check::ConfigureHealthCheckInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::configure_health_check::ConfigureHealthCheckInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::configure_health_check::ConfigureHealthCheckInput {
            load_balancer_name: self.load_balancer_name,
            health_check: self.health_check,
        })
    }
}
