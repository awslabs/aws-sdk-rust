// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAppCookieStickinessPolicy`](crate::client::fluent_builders::CreateAppCookieStickinessPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`load_balancer_name(impl Into<String>)`](crate::client::fluent_builders::CreateAppCookieStickinessPolicy::load_balancer_name) / [`set_load_balancer_name(Option<String>)`](crate::client::fluent_builders::CreateAppCookieStickinessPolicy::set_load_balancer_name): <p>The name of the load balancer.</p>
    ///   - [`policy_name(impl Into<String>)`](crate::client::fluent_builders::CreateAppCookieStickinessPolicy::policy_name) / [`set_policy_name(Option<String>)`](crate::client::fluent_builders::CreateAppCookieStickinessPolicy::set_policy_name): <p>The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.</p>
    ///   - [`cookie_name(impl Into<String>)`](crate::client::fluent_builders::CreateAppCookieStickinessPolicy::cookie_name) / [`set_cookie_name(Option<String>)`](crate::client::fluent_builders::CreateAppCookieStickinessPolicy::set_cookie_name): <p>The name of the application cookie used for stickiness.</p>
    /// - On success, responds with [`CreateAppCookieStickinessPolicyOutput`](crate::output::CreateAppCookieStickinessPolicyOutput)
    /// - On failure, responds with [`SdkError<CreateAppCookieStickinessPolicyError>`](crate::error::CreateAppCookieStickinessPolicyError)
    pub fn create_app_cookie_stickiness_policy(
        &self,
    ) -> crate::client::fluent_builders::CreateAppCookieStickinessPolicy {
        crate::client::fluent_builders::CreateAppCookieStickinessPolicy::new(self.handle.clone())
    }
}
