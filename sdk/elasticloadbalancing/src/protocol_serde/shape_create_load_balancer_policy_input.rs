// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_load_balancer_policy_input_input(
    input: &crate::operation::create_load_balancer_policy::CreateLoadBalancerPolicyInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "CreateLoadBalancerPolicy", "2012-06-01");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("LoadBalancerName");
    if let Some(var_2) = &input.load_balancer_name {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("PolicyName");
    if let Some(var_4) = &input.policy_name {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("PolicyTypeName");
    if let Some(var_6) = &input.policy_type_name {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("PolicyAttributes");
    if let Some(var_8) = &input.policy_attributes {
        let mut list_10 = scope_7.start_list(false, None);
        for item_9 in var_8 {
            #[allow(unused_mut)]
            let mut entry_11 = list_10.entry();
            crate::protocol_serde::shape_policy_attribute::ser_policy_attribute(entry_11, item_9)?;
        }
        list_10.finish();
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
