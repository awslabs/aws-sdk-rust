// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a policy attribute.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PolicyAttributeDescription {
    /// <p>The name of the attribute.</p>
    #[doc(hidden)]
    pub attribute_name: std::option::Option<std::string::String>,
    /// <p>The value of the attribute.</p>
    #[doc(hidden)]
    pub attribute_value: std::option::Option<std::string::String>,
}
impl PolicyAttributeDescription {
    /// <p>The name of the attribute.</p>
    pub fn attribute_name(&self) -> std::option::Option<&str> {
        self.attribute_name.as_deref()
    }
    /// <p>The value of the attribute.</p>
    pub fn attribute_value(&self) -> std::option::Option<&str> {
        self.attribute_value.as_deref()
    }
}
impl PolicyAttributeDescription {
    /// Creates a new builder-style object to manufacture [`PolicyAttributeDescription`](crate::types::PolicyAttributeDescription).
    pub fn builder() -> crate::types::builders::PolicyAttributeDescriptionBuilder {
        crate::types::builders::PolicyAttributeDescriptionBuilder::default()
    }
}

/// A builder for [`PolicyAttributeDescription`](crate::types::PolicyAttributeDescription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PolicyAttributeDescriptionBuilder {
    pub(crate) attribute_name: std::option::Option<std::string::String>,
    pub(crate) attribute_value: std::option::Option<std::string::String>,
}
impl PolicyAttributeDescriptionBuilder {
    /// <p>The name of the attribute.</p>
    pub fn attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.attribute_name = Some(input.into());
        self
    }
    /// <p>The name of the attribute.</p>
    pub fn set_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attribute_name = input;
        self
    }
    /// <p>The value of the attribute.</p>
    pub fn attribute_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.attribute_value = Some(input.into());
        self
    }
    /// <p>The value of the attribute.</p>
    pub fn set_attribute_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attribute_value = input;
        self
    }
    /// Consumes the builder and constructs a [`PolicyAttributeDescription`](crate::types::PolicyAttributeDescription).
    pub fn build(self) -> crate::types::PolicyAttributeDescription {
        crate::types::PolicyAttributeDescription {
            attribute_name: self.attribute_name,
            attribute_value: self.attribute_value,
        }
    }
}
