// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Amazon Keyspaces encrypts and decrypts the table data at rest transparently and integrates with Key Management Service for storing and managing the encryption key. You can choose one of the following KMS keys (KMS keys):</p>
/// <p>• Amazon Web Services owned key - This is the default encryption type. The key is owned by Amazon Keyspaces (no additional charge). </p>
/// <p>• Customer managed key - This key is stored in your account and is created, owned, and managed by you. You have full control over the customer managed key (KMS charges apply).</p>
/// <p>For more information about encryption at rest in Amazon Keyspaces, see <a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html">Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>
/// <p>For more information about KMS, see <a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html">KMS management service concepts</a> in the <i>Key Management Service Developer Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EncryptionSpecification {
    /// <p>The encryption option specified for the table. You can choose one of the following KMS keys (KMS keys):</p>
    /// <p>• <code>type:AWS_OWNED_KMS_KEY</code> - This key is owned by Amazon Keyspaces. </p>
    /// <p>• <code>type:CUSTOMER_MANAGED_KMS_KEY</code> - This key is stored in your account and is created, owned, and managed by you. This option requires the <code>kms_key_identifier</code> of the KMS key in Amazon Resource Name (ARN) format as input. </p>
    /// <p>The default is <code>type:AWS_OWNED_KMS_KEY</code>. </p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html">Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::EncryptionType>,
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key, for example <code>kms_key_identifier:ARN</code>.</p>
    #[doc(hidden)]
    pub kms_key_identifier: std::option::Option<std::string::String>,
}
impl EncryptionSpecification {
    /// <p>The encryption option specified for the table. You can choose one of the following KMS keys (KMS keys):</p>
    /// <p>• <code>type:AWS_OWNED_KMS_KEY</code> - This key is owned by Amazon Keyspaces. </p>
    /// <p>• <code>type:CUSTOMER_MANAGED_KMS_KEY</code> - This key is stored in your account and is created, owned, and managed by you. This option requires the <code>kms_key_identifier</code> of the KMS key in Amazon Resource Name (ARN) format as input. </p>
    /// <p>The default is <code>type:AWS_OWNED_KMS_KEY</code>. </p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html">Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::EncryptionType> {
        self.r#type.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key, for example <code>kms_key_identifier:ARN</code>.</p>
    pub fn kms_key_identifier(&self) -> std::option::Option<&str> {
        self.kms_key_identifier.as_deref()
    }
}
impl EncryptionSpecification {
    /// Creates a new builder-style object to manufacture [`EncryptionSpecification`](crate::types::EncryptionSpecification).
    pub fn builder() -> crate::types::builders::EncryptionSpecificationBuilder {
        crate::types::builders::EncryptionSpecificationBuilder::default()
    }
}

/// A builder for [`EncryptionSpecification`](crate::types::EncryptionSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EncryptionSpecificationBuilder {
    pub(crate) r#type: std::option::Option<crate::types::EncryptionType>,
    pub(crate) kms_key_identifier: std::option::Option<std::string::String>,
}
impl EncryptionSpecificationBuilder {
    /// <p>The encryption option specified for the table. You can choose one of the following KMS keys (KMS keys):</p>
    /// <p>• <code>type:AWS_OWNED_KMS_KEY</code> - This key is owned by Amazon Keyspaces. </p>
    /// <p>• <code>type:CUSTOMER_MANAGED_KMS_KEY</code> - This key is stored in your account and is created, owned, and managed by you. This option requires the <code>kms_key_identifier</code> of the KMS key in Amazon Resource Name (ARN) format as input. </p>
    /// <p>The default is <code>type:AWS_OWNED_KMS_KEY</code>. </p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html">Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>
    pub fn r#type(mut self, input: crate::types::EncryptionType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The encryption option specified for the table. You can choose one of the following KMS keys (KMS keys):</p>
    /// <p>• <code>type:AWS_OWNED_KMS_KEY</code> - This key is owned by Amazon Keyspaces. </p>
    /// <p>• <code>type:CUSTOMER_MANAGED_KMS_KEY</code> - This key is stored in your account and is created, owned, and managed by you. This option requires the <code>kms_key_identifier</code> of the KMS key in Amazon Resource Name (ARN) format as input. </p>
    /// <p>The default is <code>type:AWS_OWNED_KMS_KEY</code>. </p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html">Encryption at rest</a> in the <i>Amazon Keyspaces Developer Guide</i>.</p>
    pub fn set_type(mut self, input: std::option::Option<crate::types::EncryptionType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key, for example <code>kms_key_identifier:ARN</code>.</p>
    pub fn kms_key_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.kms_key_identifier = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key, for example <code>kms_key_identifier:ARN</code>.</p>
    pub fn set_kms_key_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.kms_key_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`EncryptionSpecification`](crate::types::EncryptionSpecification).
    pub fn build(self) -> crate::types::EncryptionSpecification {
        crate::types::EncryptionSpecification {
            r#type: self.r#type,
            kms_key_identifier: self.kms_key_identifier,
        }
    }
}
