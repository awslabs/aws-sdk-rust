// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_cancel_journal_kinesis_stream;

pub(crate) mod shape_create_ledger;

pub(crate) mod shape_delete_ledger;

pub(crate) mod shape_describe_journal_kinesis_stream;

pub(crate) mod shape_describe_journal_s3_export;

pub(crate) mod shape_describe_ledger;

pub(crate) mod shape_export_journal_to_s3;

pub(crate) mod shape_get_block;

pub(crate) mod shape_get_digest;

pub(crate) mod shape_get_revision;

pub(crate) mod shape_list_journal_kinesis_streams_for_ledger;

pub(crate) mod shape_list_journal_s3_exports;

pub(crate) mod shape_list_journal_s3_exports_for_ledger;

pub(crate) mod shape_list_ledgers;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_stream_journal_to_kinesis;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_ledger;

pub(crate) mod shape_update_ledger_permissions_mode;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_create_ledger_input;

pub(crate) mod shape_export_journal_to_s3_input;

pub(crate) mod shape_get_block_input;

pub(crate) mod shape_get_revision_input;

pub(crate) mod shape_invalid_parameter_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_resource_already_exists_exception;

pub(crate) mod shape_resource_in_use_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_resource_precondition_not_met_exception;

pub(crate) mod shape_stream_journal_to_kinesis_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_ledger_input;

pub(crate) mod shape_update_ledger_permissions_mode_input;

pub(crate) mod shape_journal_kinesis_stream_description;

pub(crate) mod shape_journal_kinesis_stream_description_list;

pub(crate) mod shape_journal_s3_export_description;

pub(crate) mod shape_journal_s3_export_list;

pub(crate) mod shape_kinesis_configuration;

pub(crate) mod shape_ledger_encryption_description;

pub(crate) mod shape_ledger_list;

pub(crate) mod shape_s3_export_configuration;

pub(crate) mod shape_tags;

pub(crate) mod shape_value_holder;

pub(crate) mod shape_ledger_summary;

pub(crate) mod shape_s3_encryption_configuration;
