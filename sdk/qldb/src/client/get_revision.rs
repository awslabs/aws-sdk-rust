// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRevision`](crate::operation::get_revision::builders::GetRevisionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::get_revision::builders::GetRevisionFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::get_revision::builders::GetRevisionFluentBuilder::set_name):<br>required: **true**<br><p>The name of the ledger.</p><br>
    ///   - [`block_address(ValueHolder)`](crate::operation::get_revision::builders::GetRevisionFluentBuilder::block_address) / [`set_block_address(Option<ValueHolder>)`](crate::operation::get_revision::builders::GetRevisionFluentBuilder::set_block_address):<br>required: **true**<br><p>The block location of the document revision to be verified. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p>  <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:14}</code>.</p><br>
    ///   - [`document_id(impl Into<String>)`](crate::operation::get_revision::builders::GetRevisionFluentBuilder::document_id) / [`set_document_id(Option<String>)`](crate::operation::get_revision::builders::GetRevisionFluentBuilder::set_document_id):<br>required: **true**<br><p>The UUID (represented in Base62-encoded text) of the document to be verified.</p><br>
    ///   - [`digest_tip_address(ValueHolder)`](crate::operation::get_revision::builders::GetRevisionFluentBuilder::digest_tip_address) / [`set_digest_tip_address(Option<ValueHolder>)`](crate::operation::get_revision::builders::GetRevisionFluentBuilder::set_digest_tip_address):<br>required: **false**<br><p>The latest block location covered by the digest for which to request a proof. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p>  <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:49}</code>.</p><br>
    /// - On success, responds with [`GetRevisionOutput`](crate::operation::get_revision::GetRevisionOutput) with field(s):
    ///   - [`proof(Option<ValueHolder>)`](crate::operation::get_revision::GetRevisionOutput::proof): <p>The proof object in Amazon Ion format returned by a <code>GetRevision</code> request. A proof contains the list of hash values that are required to recalculate the specified digest using a Merkle tree, starting with the specified document revision.</p>
    ///   - [`revision(Option<ValueHolder>)`](crate::operation::get_revision::GetRevisionOutput::revision): <p>The document revision data object in Amazon Ion format.</p>
    /// - On failure, responds with [`SdkError<GetRevisionError>`](crate::operation::get_revision::GetRevisionError)
    pub fn get_revision(&self) -> crate::operation::get_revision::builders::GetRevisionFluentBuilder {
        crate::operation::get_revision::builders::GetRevisionFluentBuilder::new(self.handle.clone())
    }
}
