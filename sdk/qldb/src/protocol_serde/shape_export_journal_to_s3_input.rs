// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_export_journal_to_s3_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::export_journal_to_s3::ExportJournalToS3Input,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.exclusive_end_time {
        object
            .key("ExclusiveEndTime")
            .date_time(var_1, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_2) = &input.inclusive_start_time {
        object
            .key("InclusiveStartTime")
            .date_time(var_2, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_3) = &input.output_format {
        object.key("OutputFormat").string(var_3.as_str());
    }
    if let Some(var_4) = &input.role_arn {
        object.key("RoleArn").string(var_4.as_str());
    }
    if let Some(var_5) = &input.s3_export_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object.key("S3ExportConfiguration").start_object();
        crate::protocol_serde::shape_s3_export_configuration::ser_s3_export_configuration(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    Ok(())
}
