// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a parameter value that is applicable to a particular node type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NodeTypeSpecificValue {
    /// <p>A node type to which the parameter value applies.</p>
    #[doc(hidden)]
    pub node_type: std::option::Option<std::string::String>,
    /// <p>The parameter value for this node type.</p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
}
impl NodeTypeSpecificValue {
    /// <p>A node type to which the parameter value applies.</p>
    pub fn node_type(&self) -> std::option::Option<&str> {
        self.node_type.as_deref()
    }
    /// <p>The parameter value for this node type.</p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
}
impl NodeTypeSpecificValue {
    /// Creates a new builder-style object to manufacture [`NodeTypeSpecificValue`](crate::types::NodeTypeSpecificValue).
    pub fn builder() -> crate::types::builders::NodeTypeSpecificValueBuilder {
        crate::types::builders::NodeTypeSpecificValueBuilder::default()
    }
}

/// A builder for [`NodeTypeSpecificValue`](crate::types::NodeTypeSpecificValue).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NodeTypeSpecificValueBuilder {
    pub(crate) node_type: std::option::Option<std::string::String>,
    pub(crate) value: std::option::Option<std::string::String>,
}
impl NodeTypeSpecificValueBuilder {
    /// <p>A node type to which the parameter value applies.</p>
    pub fn node_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.node_type = Some(input.into());
        self
    }
    /// <p>A node type to which the parameter value applies.</p>
    pub fn set_node_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.node_type = input;
        self
    }
    /// <p>The parameter value for this node type.</p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The parameter value for this node type.</p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`NodeTypeSpecificValue`](crate::types::NodeTypeSpecificValue).
    pub fn build(self) -> crate::types::NodeTypeSpecificValue {
        crate::types::NodeTypeSpecificValue {
            node_type: self.node_type,
            value: self.value,
        }
    }
}
