// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the settings used to enable server-side encryption.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SseSpecification {
    /// <p>Indicates whether server-side encryption is enabled (true) or disabled (false) on the cluster.</p>
    #[doc(hidden)]
    pub enabled: std::option::Option<bool>,
}
impl SseSpecification {
    /// <p>Indicates whether server-side encryption is enabled (true) or disabled (false) on the cluster.</p>
    pub fn enabled(&self) -> std::option::Option<bool> {
        self.enabled
    }
}
impl SseSpecification {
    /// Creates a new builder-style object to manufacture [`SseSpecification`](crate::types::SseSpecification).
    pub fn builder() -> crate::types::builders::SseSpecificationBuilder {
        crate::types::builders::SseSpecificationBuilder::default()
    }
}

/// A builder for [`SseSpecification`](crate::types::SseSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SseSpecificationBuilder {
    pub(crate) enabled: std::option::Option<bool>,
}
impl SseSpecificationBuilder {
    /// <p>Indicates whether server-side encryption is enabled (true) or disabled (false) on the cluster.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = Some(input);
        self
    }
    /// <p>Indicates whether server-side encryption is enabled (true) or disabled (false) on the cluster.</p>
    pub fn set_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// Consumes the builder and constructs a [`SseSpecification`](crate::types::SseSpecification).
    pub fn build(self) -> crate::types::SseSpecification {
        crate::types::SseSpecification {
            enabled: self.enabled,
        }
    }
}
