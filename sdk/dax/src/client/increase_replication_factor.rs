// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`IncreaseReplicationFactor`](crate::client::fluent_builders::IncreaseReplicationFactor) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::IncreaseReplicationFactor::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::IncreaseReplicationFactor::set_cluster_name): <p>The name of the DAX cluster that will receive additional nodes.</p>
    ///   - [`new_replication_factor(i32)`](crate::client::fluent_builders::IncreaseReplicationFactor::new_replication_factor) / [`set_new_replication_factor(i32)`](crate::client::fluent_builders::IncreaseReplicationFactor::set_new_replication_factor): <p>The new number of nodes for the DAX cluster.</p>
    ///   - [`availability_zones(Vec<String>)`](crate::client::fluent_builders::IncreaseReplicationFactor::availability_zones) / [`set_availability_zones(Option<Vec<String>>)`](crate::client::fluent_builders::IncreaseReplicationFactor::set_availability_zones): <p>The Availability Zones (AZs) in which the cluster nodes will be created. All nodes belonging to the cluster are placed in these Availability Zones. Use this parameter if you want to distribute the nodes across multiple AZs.</p>
    /// - On success, responds with [`IncreaseReplicationFactorOutput`](crate::output::IncreaseReplicationFactorOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::output::IncreaseReplicationFactorOutput::cluster): <p>A description of the DAX cluster. with its new replication factor.</p>
    /// - On failure, responds with [`SdkError<IncreaseReplicationFactorError>`](crate::error::IncreaseReplicationFactorError)
    pub fn increase_replication_factor(
        &self,
    ) -> crate::client::fluent_builders::IncreaseReplicationFactor {
        crate::client::fluent_builders::IncreaseReplicationFactor::new(self.handle.clone())
    }
}
