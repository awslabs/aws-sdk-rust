// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RebootNode`](crate::operation::reboot_node::builders::RebootNodeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::operation::reboot_node::builders::RebootNodeFluentBuilder::cluster_name) / [`set_cluster_name(Option<String>)`](crate::operation::reboot_node::builders::RebootNodeFluentBuilder::set_cluster_name):<br>required: **true**<br><p>The name of the DAX cluster containing the node to be rebooted.</p><br>
    ///   - [`node_id(impl Into<String>)`](crate::operation::reboot_node::builders::RebootNodeFluentBuilder::node_id) / [`set_node_id(Option<String>)`](crate::operation::reboot_node::builders::RebootNodeFluentBuilder::set_node_id):<br>required: **true**<br><p>The system-assigned ID of the node to be rebooted.</p><br>
    /// - On success, responds with [`RebootNodeOutput`](crate::operation::reboot_node::RebootNodeOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::operation::reboot_node::RebootNodeOutput::cluster): <p>A description of the DAX cluster after a node has been rebooted.</p>
    /// - On failure, responds with [`SdkError<RebootNodeError>`](crate::operation::reboot_node::RebootNodeError)
    pub fn reboot_node(&self) -> crate::operation::reboot_node::builders::RebootNodeFluentBuilder {
        crate::operation::reboot_node::builders::RebootNodeFluentBuilder::new(self.handle.clone())
    }
}
