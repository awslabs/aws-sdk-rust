// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeParameterGroupsInput {
    /// <p>The names of the parameter groups.</p>
    #[doc(hidden)]
    pub parameter_group_names: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
    /// <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl DescribeParameterGroupsInput {
    /// <p>The names of the parameter groups.</p>
    pub fn parameter_group_names(&self) -> std::option::Option<&[std::string::String]> {
        self.parameter_group_names.as_deref()
    }
    /// <p>The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
    /// <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeParameterGroupsInput {
    /// Creates a new builder-style object to manufacture [`DescribeParameterGroupsInput`](crate::operation::describe_parameter_groups::DescribeParameterGroupsInput).
    pub fn builder(
    ) -> crate::operation::describe_parameter_groups::builders::DescribeParameterGroupsInputBuilder
    {
        crate::operation::describe_parameter_groups::builders::DescribeParameterGroupsInputBuilder::default()
    }
}

/// A builder for [`DescribeParameterGroupsInput`](crate::operation::describe_parameter_groups::DescribeParameterGroupsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeParameterGroupsInputBuilder {
    pub(crate) parameter_group_names: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl DescribeParameterGroupsInputBuilder {
    /// Appends an item to `parameter_group_names`.
    ///
    /// To override the contents of this collection use [`set_parameter_group_names`](Self::set_parameter_group_names).
    ///
    /// <p>The names of the parameter groups.</p>
    pub fn parameter_group_names(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.parameter_group_names.unwrap_or_default();
        v.push(input.into());
        self.parameter_group_names = Some(v);
        self
    }
    /// <p>The names of the parameter groups.</p>
    pub fn set_parameter_group_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.parameter_group_names = input;
        self
    }
    /// <p>The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
    /// <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
    /// <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeParameterGroupsInput`](crate::operation::describe_parameter_groups::DescribeParameterGroupsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_parameter_groups::DescribeParameterGroupsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_parameter_groups::DescribeParameterGroupsInput {
                parameter_group_names: self.parameter_group_names,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
