// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn batch_get_record_output_correct_errors(
    mut builder: crate::operation::batch_get_record::builders::BatchGetRecordOutputBuilder,
) -> crate::operation::batch_get_record::builders::BatchGetRecordOutputBuilder {
    if builder.records.is_none() {
        builder.records = Some(Default::default())
    }
    if builder.errors.is_none() {
        builder.errors = Some(Default::default())
    }
    if builder.unprocessed_identifiers.is_none() {
        builder.unprocessed_identifiers = Some(Default::default())
    }
    builder
}

pub(crate) fn batch_get_record_error_correct_errors(
    mut builder: crate::types::builders::BatchGetRecordErrorBuilder,
) -> crate::types::builders::BatchGetRecordErrorBuilder {
    if builder.feature_group_name.is_none() {
        builder.feature_group_name = Some(Default::default())
    }
    if builder.record_identifier_value_as_string.is_none() {
        builder.record_identifier_value_as_string = Some(Default::default())
    }
    if builder.error_code.is_none() {
        builder.error_code = Some(Default::default())
    }
    if builder.error_message.is_none() {
        builder.error_message = Some(Default::default())
    }
    builder
}

pub(crate) fn batch_get_record_identifier_correct_errors(
    mut builder: crate::types::builders::BatchGetRecordIdentifierBuilder,
) -> crate::types::builders::BatchGetRecordIdentifierBuilder {
    if builder.feature_group_name.is_none() {
        builder.feature_group_name = Some(Default::default())
    }
    if builder.record_identifiers_value_as_string.is_none() {
        builder.record_identifiers_value_as_string = Some(Default::default())
    }
    builder
}

pub(crate) fn batch_get_record_result_detail_correct_errors(
    mut builder: crate::types::builders::BatchGetRecordResultDetailBuilder,
) -> crate::types::builders::BatchGetRecordResultDetailBuilder {
    if builder.feature_group_name.is_none() {
        builder.feature_group_name = Some(Default::default())
    }
    if builder.record_identifier_value_as_string.is_none() {
        builder.record_identifier_value_as_string = Some(Default::default())
    }
    if builder.record.is_none() {
        builder.record = Some(Default::default())
    }
    builder
}

pub(crate) fn feature_value_correct_errors(mut builder: crate::types::builders::FeatureValueBuilder) -> crate::types::builders::FeatureValueBuilder {
    if builder.feature_name.is_none() {
        builder.feature_name = Some(Default::default())
    }
    builder
}
