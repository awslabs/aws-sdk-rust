// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchGetRecordInput {
    /// <p>A list containing the name or Amazon Resource Name (ARN) of the <code>FeatureGroup</code>, the list of names of <code>Feature</code>s to be retrieved, and the corresponding <code>RecordIdentifier</code> values as strings.</p>
    pub identifiers: ::std::option::Option<::std::vec::Vec<crate::types::BatchGetRecordIdentifier>>,
    /// <p>Parameter to request <code>ExpiresAt</code> in response. If <code>Enabled</code>, <code>BatchGetRecord</code> will return the value of <code>ExpiresAt</code>, if it is not null. If <code>Disabled</code> and null, <code>BatchGetRecord</code> will return null.</p>
    pub expiration_time_response: ::std::option::Option<crate::types::ExpirationTimeResponse>,
}
impl BatchGetRecordInput {
    /// <p>A list containing the name or Amazon Resource Name (ARN) of the <code>FeatureGroup</code>, the list of names of <code>Feature</code>s to be retrieved, and the corresponding <code>RecordIdentifier</code> values as strings.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.identifiers.is_none()`.
    pub fn identifiers(&self) -> &[crate::types::BatchGetRecordIdentifier] {
        self.identifiers.as_deref().unwrap_or_default()
    }
    /// <p>Parameter to request <code>ExpiresAt</code> in response. If <code>Enabled</code>, <code>BatchGetRecord</code> will return the value of <code>ExpiresAt</code>, if it is not null. If <code>Disabled</code> and null, <code>BatchGetRecord</code> will return null.</p>
    pub fn expiration_time_response(&self) -> ::std::option::Option<&crate::types::ExpirationTimeResponse> {
        self.expiration_time_response.as_ref()
    }
}
impl BatchGetRecordInput {
    /// Creates a new builder-style object to manufacture [`BatchGetRecordInput`](crate::operation::batch_get_record::BatchGetRecordInput).
    pub fn builder() -> crate::operation::batch_get_record::builders::BatchGetRecordInputBuilder {
        crate::operation::batch_get_record::builders::BatchGetRecordInputBuilder::default()
    }
}

/// A builder for [`BatchGetRecordInput`](crate::operation::batch_get_record::BatchGetRecordInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchGetRecordInputBuilder {
    pub(crate) identifiers: ::std::option::Option<::std::vec::Vec<crate::types::BatchGetRecordIdentifier>>,
    pub(crate) expiration_time_response: ::std::option::Option<crate::types::ExpirationTimeResponse>,
}
impl BatchGetRecordInputBuilder {
    /// Appends an item to `identifiers`.
    ///
    /// To override the contents of this collection use [`set_identifiers`](Self::set_identifiers).
    ///
    /// <p>A list containing the name or Amazon Resource Name (ARN) of the <code>FeatureGroup</code>, the list of names of <code>Feature</code>s to be retrieved, and the corresponding <code>RecordIdentifier</code> values as strings.</p>
    pub fn identifiers(mut self, input: crate::types::BatchGetRecordIdentifier) -> Self {
        let mut v = self.identifiers.unwrap_or_default();
        v.push(input);
        self.identifiers = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list containing the name or Amazon Resource Name (ARN) of the <code>FeatureGroup</code>, the list of names of <code>Feature</code>s to be retrieved, and the corresponding <code>RecordIdentifier</code> values as strings.</p>
    pub fn set_identifiers(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::BatchGetRecordIdentifier>>) -> Self {
        self.identifiers = input;
        self
    }
    /// <p>A list containing the name or Amazon Resource Name (ARN) of the <code>FeatureGroup</code>, the list of names of <code>Feature</code>s to be retrieved, and the corresponding <code>RecordIdentifier</code> values as strings.</p>
    pub fn get_identifiers(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BatchGetRecordIdentifier>> {
        &self.identifiers
    }
    /// <p>Parameter to request <code>ExpiresAt</code> in response. If <code>Enabled</code>, <code>BatchGetRecord</code> will return the value of <code>ExpiresAt</code>, if it is not null. If <code>Disabled</code> and null, <code>BatchGetRecord</code> will return null.</p>
    pub fn expiration_time_response(mut self, input: crate::types::ExpirationTimeResponse) -> Self {
        self.expiration_time_response = ::std::option::Option::Some(input);
        self
    }
    /// <p>Parameter to request <code>ExpiresAt</code> in response. If <code>Enabled</code>, <code>BatchGetRecord</code> will return the value of <code>ExpiresAt</code>, if it is not null. If <code>Disabled</code> and null, <code>BatchGetRecord</code> will return null.</p>
    pub fn set_expiration_time_response(mut self, input: ::std::option::Option<crate::types::ExpirationTimeResponse>) -> Self {
        self.expiration_time_response = input;
        self
    }
    /// <p>Parameter to request <code>ExpiresAt</code> in response. If <code>Enabled</code>, <code>BatchGetRecord</code> will return the value of <code>ExpiresAt</code>, if it is not null. If <code>Disabled</code> and null, <code>BatchGetRecord</code> will return null.</p>
    pub fn get_expiration_time_response(&self) -> &::std::option::Option<crate::types::ExpirationTimeResponse> {
        &self.expiration_time_response
    }
    /// Consumes the builder and constructs a [`BatchGetRecordInput`](crate::operation::batch_get_record::BatchGetRecordInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::batch_get_record::BatchGetRecordInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::batch_get_record::BatchGetRecordInput {
            identifiers: self.identifiers,
            expiration_time_response: self.expiration_time_response,
        })
    }
}
