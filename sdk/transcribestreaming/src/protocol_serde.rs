// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_start_call_analytics_stream_transcription;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_start_medical_stream_transcription;

pub(crate) mod shape_start_stream_transcription;

pub(crate) mod shape_audio_stream;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_start_call_analytics_stream_transcription_output;

pub(crate) mod shape_start_medical_stream_transcription_output;

pub(crate) mod shape_start_stream_transcription_output;

pub fn parse_event_stream_error_metadata(
    payload: &bytes::Bytes,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    // Note: HeaderMap::new() doesn't allocate
    crate::json_errors::parse_error_metadata(payload, &http::HeaderMap::new())
}

pub(crate) mod shape_configuration_event;

pub(crate) mod shape_category_event;

pub(crate) mod shape_channel_definition;

pub(crate) mod shape_medical_transcript_event;

pub(crate) mod shape_post_call_analytics_settings;

pub(crate) mod shape_transcript_event;

pub(crate) mod shape_utterance_event;

pub(crate) mod shape_call_analytics_entity_list;

pub(crate) mod shape_call_analytics_item_list;

pub(crate) mod shape_issues_detected;

pub(crate) mod shape_matched_category_details;

pub(crate) mod shape_medical_transcript;

pub(crate) mod shape_string_list;

pub(crate) mod shape_transcript;

pub(crate) mod shape_call_analytics_entity;

pub(crate) mod shape_call_analytics_item;

pub(crate) mod shape_issue_detected;

pub(crate) mod shape_medical_result_list;

pub(crate) mod shape_points_of_interest;

pub(crate) mod shape_result_list;

pub(crate) mod shape_character_offsets;

pub(crate) mod shape_medical_result;

pub(crate) mod shape_result;

pub(crate) mod shape_timestamp_ranges;

pub(crate) mod shape_alternative_list;

pub(crate) mod shape_language_identification;

pub(crate) mod shape_medical_alternative_list;

pub(crate) mod shape_timestamp_range;

pub(crate) mod shape_alternative;

pub(crate) mod shape_language_with_score;

pub(crate) mod shape_medical_alternative;

pub(crate) mod shape_entity_list;

pub(crate) mod shape_item_list;

pub(crate) mod shape_medical_entity_list;

pub(crate) mod shape_medical_item_list;

pub(crate) mod shape_entity;

pub(crate) mod shape_item;

pub(crate) mod shape_medical_entity;

pub(crate) mod shape_medical_item;
