// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListWhatIfForecasts`](crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder::set_next_token): <p>If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next  request. Tokens expire after 24 hours.</p>
    ///   - [`max_results(i32)`](crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder::set_max_results): <p>The number of items to return in the response.</p>
    ///   - [`filters(Vec<Filter>)`](crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder::set_filters): <p>An array of filters. For each filter, you provide a condition and a match statement. The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether to include or exclude the what-if forecast export jobs that match the statement from the list, respectively. The match statement consists of a key and a value.</p>  <p> <b>Filter properties</b> </p>  <ul>   <li> <p> <code>Condition</code> - The condition to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>. To include the forecast export jobs that match the statement, specify <code>IS</code>. To exclude matching forecast export jobs, specify <code>IS_NOT</code>.</p> </li>   <li> <p> <code>Key</code> - The name of the parameter to filter on. Valid values are <code>WhatIfForecastArn</code> and <code>Status</code>.</p> </li>   <li> <p> <code>Value</code> - The value to match.</p> </li>  </ul>  <p>For example, to list all jobs that export a forecast named <i>electricityWhatIfForecast</i>, specify the following filter:</p>  <p> <code>"Filters": [ { "Condition": "IS", "Key": "WhatIfForecastArn", "Value": "arn:aws:forecast:us-west-2:   <acct-id>    :forecast/electricityWhatIfForecast" } ]   </acct-id></code> </p>
    /// - On success, responds with [`ListWhatIfForecastsOutput`](crate::operation::list_what_if_forecasts::ListWhatIfForecastsOutput) with field(s):
    ///   - [`what_if_forecasts(Option<Vec<WhatIfForecastSummary>>)`](crate::operation::list_what_if_forecasts::ListWhatIfForecastsOutput::what_if_forecasts): <p>An array of <code>WhatIfForecasts</code> objects that describe the matched forecasts.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_what_if_forecasts::ListWhatIfForecastsOutput::next_token): <p>If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next  request. Tokens expire after 24 hours.</p>
    /// - On failure, responds with [`SdkError<ListWhatIfForecastsError>`](crate::operation::list_what_if_forecasts::ListWhatIfForecastsError)
    pub fn list_what_if_forecasts(
        &self,
    ) -> crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder {
        crate::operation::list_what_if_forecasts::builders::ListWhatIfForecastsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
