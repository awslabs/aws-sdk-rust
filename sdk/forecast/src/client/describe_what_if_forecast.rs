// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeWhatIfForecast`](crate::client::fluent_builders::DescribeWhatIfForecast) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`what_if_forecast_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeWhatIfForecast::what_if_forecast_arn) / [`set_what_if_forecast_arn(Option<String>)`](crate::client::fluent_builders::DescribeWhatIfForecast::set_what_if_forecast_arn): <p>The Amazon Resource Name (ARN) of the what-if forecast that you are interested in.</p>
    /// - On success, responds with [`DescribeWhatIfForecastOutput`](crate::output::DescribeWhatIfForecastOutput) with field(s):
    ///   - [`what_if_forecast_name(Option<String>)`](crate::output::DescribeWhatIfForecastOutput::what_if_forecast_name): <p>The name of the what-if forecast.</p>
    ///   - [`what_if_forecast_arn(Option<String>)`](crate::output::DescribeWhatIfForecastOutput::what_if_forecast_arn): <p>The Amazon Resource Name (ARN) of the what-if forecast.</p>
    ///   - [`what_if_analysis_arn(Option<String>)`](crate::output::DescribeWhatIfForecastOutput::what_if_analysis_arn): <p>The Amazon Resource Name (ARN) of the what-if analysis that contains this forecast.</p>
    ///   - [`estimated_time_remaining_in_minutes(Option<i64>)`](crate::output::DescribeWhatIfForecastOutput::estimated_time_remaining_in_minutes): <p>The approximate time remaining to complete the what-if forecast, in minutes.</p>
    ///   - [`status(Option<String>)`](crate::output::DescribeWhatIfForecastOutput::status): <p>The status of the what-if forecast. States include:</p>  <ul>   <li> <p> <code>ACTIVE</code> </p> </li>   <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>   <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code> </p> </li>   <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li>  </ul> <note>   <p>The <code>Status</code> of the what-if forecast must be <code>ACTIVE</code> before you can access the forecast.</p>  </note>
    ///   - [`message(Option<String>)`](crate::output::DescribeWhatIfForecastOutput::message): <p>If an error occurred, an informational message about the error.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::DescribeWhatIfForecastOutput::creation_time): <p>When the what-if forecast was created.</p>
    ///   - [`last_modification_time(Option<DateTime>)`](crate::output::DescribeWhatIfForecastOutput::last_modification_time): <p>The last time the resource was modified. The timestamp depends on the status of the job:</p>  <ul>   <li> <p> <code>CREATE_PENDING</code> - The <code>CreationTime</code>.</p> </li>   <li> <p> <code>CREATE_IN_PROGRESS</code> - The current timestamp.</p> </li>   <li> <p> <code>CREATE_STOPPING</code> - The current timestamp.</p> </li>   <li> <p> <code>CREATE_STOPPED</code> - When the job stopped.</p> </li>   <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code> - When the job finished or failed.</p> </li>  </ul>
    ///   - [`time_series_transformations(Option<Vec<TimeSeriesTransformation>>)`](crate::output::DescribeWhatIfForecastOutput::time_series_transformations): <p>An array of <code>Action</code> and <code>TimeSeriesConditions</code> elements that describe what transformations were applied to which time series.</p>
    ///   - [`time_series_replacements_data_source(Option<TimeSeriesReplacementsDataSource>)`](crate::output::DescribeWhatIfForecastOutput::time_series_replacements_data_source): <p>An array of <code>S3Config</code>, <code>Schema</code>, and <code>Format</code> elements that describe the replacement time series.</p>
    ///   - [`forecast_types(Option<Vec<String>>)`](crate::output::DescribeWhatIfForecastOutput::forecast_types): <p>The quantiles at which probabilistic forecasts are generated. You can specify up to 5 quantiles per what-if forecast in the <code>CreateWhatIfForecast</code> operation. If you didn't specify quantiles, the default values are <code>["0.1", "0.5", "0.9"]</code>. </p>
    /// - On failure, responds with [`SdkError<DescribeWhatIfForecastError>`](crate::error::DescribeWhatIfForecastError)
    pub fn describe_what_if_forecast(
        &self,
    ) -> crate::client::fluent_builders::DescribeWhatIfForecast {
        crate::client::fluent_builders::DescribeWhatIfForecast::new(self.handle.clone())
    }
}
