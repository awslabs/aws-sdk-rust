// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListWhatIfAnalyses`](crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder::set_next_token):<br>required: **false**<br><p>If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder::set_max_results):<br>required: **false**<br><p>The number of items to return in the response.</p><br>
    ///   - [`filters(Filter)`](crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder::set_filters):<br>required: **false**<br><p>An array of filters. For each filter, you provide a condition and a match statement. The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether to include or exclude the what-if analysis jobs that match the statement from the list, respectively. The match statement consists of a key and a value.</p>  <p> <b>Filter properties</b> </p>  <ul>   <li> <p> <code>Condition</code> - The condition to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>. To include the what-if analysis jobs that match the statement, specify <code>IS</code>. To exclude matching what-if analysis jobs, specify <code>IS_NOT</code>.</p> </li>   <li> <p> <code>Key</code> - The name of the parameter to filter on. Valid values are <code>WhatIfAnalysisArn</code> and <code>Status</code>.</p> </li>   <li> <p> <code>Value</code> - The value to match.</p> </li>  </ul>  <p>For example, to list all jobs that export a forecast named <i>electricityWhatIf</i>, specify the following filter:</p>  <p> <code>"Filters": [ { "Condition": "IS", "Key": "WhatIfAnalysisArn", "Value": "arn:aws:forecast:us-west-2:   <acct-id>    :forecast/electricityWhatIf" } ]   </acct-id></code> </p><br>
    /// - On success, responds with [`ListWhatIfAnalysesOutput`](crate::operation::list_what_if_analyses::ListWhatIfAnalysesOutput) with field(s):
    ///   - [`what_if_analyses(Option<Vec::<WhatIfAnalysisSummary>>)`](crate::operation::list_what_if_analyses::ListWhatIfAnalysesOutput::what_if_analyses): <p>An array of <code>WhatIfAnalysisSummary</code> objects that describe the matched analyses.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_what_if_analyses::ListWhatIfAnalysesOutput::next_token): <p>If the response is truncated, Forecast returns this token. To retrieve the next set of results, use the token in the next request.</p>
    /// - On failure, responds with [`SdkError<ListWhatIfAnalysesError>`](crate::operation::list_what_if_analyses::ListWhatIfAnalysesError)
    pub fn list_what_if_analyses(&self) -> crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder {
        crate::operation::list_what_if_analyses::builders::ListWhatIfAnalysesFluentBuilder::new(self.handle.clone())
    }
}
