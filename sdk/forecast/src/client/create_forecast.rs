// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateForecast`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`forecast_name(impl Into<String>)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::forecast_name) / [`set_forecast_name(Option<String>)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::set_forecast_name):<br>required: **true**<br><p>A name for the forecast.</p><br>
    ///   - [`predictor_arn(impl Into<String>)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::predictor_arn) / [`set_predictor_arn(Option<String>)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::set_predictor_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the predictor to use to generate the forecast.</p><br>
    ///   - [`forecast_types(impl Into<String>)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::forecast_types) / [`set_forecast_types(Option<Vec::<String>>)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::set_forecast_types):<br>required: **false**<br><p>The quantiles at which probabilistic forecasts are generated. <b>You can currently specify up to 5 quantiles per forecast</b>. Accepted values include <code>0.01 to 0.99</code> (increments of .01 only) and <code>mean</code>. The mean forecast is different from the median (0.50) when the distribution is not symmetric (for example, Beta and Negative Binomial). </p>  <p>The default quantiles are the quantiles you specified during predictor creation. If you didn't specify quantiles, the default values are <code>["0.1", "0.5", "0.9"]</code>. </p><br>
    ///   - [`tags(Tag)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::set_tags):<br>required: **false**<br><p>The optional metadata that you apply to the forecast to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p>  <p>The following basic restrictions apply to tags:</p>  <ul>   <li> <p>Maximum number of tags per resource - 50.</p> </li>   <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li>   <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p> </li>   <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p> </li>   <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li>   <li> <p>Tag keys and values are case sensitive.</p> </li>   <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for keys as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit.</p> </li>  </ul><br>
    ///   - [`time_series_selector(TimeSeriesSelector)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::time_series_selector) / [`set_time_series_selector(Option<TimeSeriesSelector>)`](crate::operation::create_forecast::builders::CreateForecastFluentBuilder::set_time_series_selector):<br>required: **false**<br><p>Defines the set of time series that are used to create the forecasts in a <code>TimeSeriesIdentifiers</code> object.</p>  <p>The <code>TimeSeriesIdentifiers</code> object needs the following information:</p>  <ul>   <li> <p> <code>DataSource</code> </p> </li>   <li> <p> <code>Format</code> </p> </li>   <li> <p> <code>Schema</code> </p> </li>  </ul><br>
    /// - On success, responds with [`CreateForecastOutput`](crate::operation::create_forecast::CreateForecastOutput) with field(s):
    ///   - [`forecast_arn(Option<String>)`](crate::operation::create_forecast::CreateForecastOutput::forecast_arn): <p>The Amazon Resource Name (ARN) of the forecast.</p>
    /// - On failure, responds with [`SdkError<CreateForecastError>`](crate::operation::create_forecast::CreateForecastError)
    pub fn create_forecast(&self) -> crate::operation::create_forecast::builders::CreateForecastFluentBuilder {
        crate::operation::create_forecast::builders::CreateForecastFluentBuilder::new(self.handle.clone())
    }
}
