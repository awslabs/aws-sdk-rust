// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAutoPredictor`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`predictor_name(impl Into<String>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::predictor_name) / [`set_predictor_name(Option<String>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_predictor_name):<br>required: **true**<br><p>A unique name for the predictor</p><br>
    ///   - [`forecast_horizon(i32)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::forecast_horizon) / [`set_forecast_horizon(Option<i32>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_forecast_horizon):<br>required: **false**<br><p>The number of time-steps that the model predicts. The forecast horizon is also called the prediction length.</p>  <p>The maximum forecast horizon is the lesser of 500 time-steps or 1/4 of the TARGET_TIME_SERIES dataset length. If you are retraining an existing AutoPredictor, then the maximum forecast horizon is the lesser of 500 time-steps or 1/3 of the TARGET_TIME_SERIES dataset length.</p>  <p>If you are upgrading to an AutoPredictor or retraining an existing AutoPredictor, you cannot update the forecast horizon parameter. You can meet this requirement by providing longer time-series in the dataset.</p><br>
    ///   - [`forecast_types(impl Into<String>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::forecast_types) / [`set_forecast_types(Option<Vec::<String>>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_forecast_types):<br>required: **false**<br><p>The forecast types used to train a predictor. You can specify up to five forecast types. Forecast types can be quantiles from 0.01 to 0.99, by increments of 0.01 or higher. You can also specify the mean forecast with <code>mean</code>.</p><br>
    ///   - [`forecast_dimensions(impl Into<String>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::forecast_dimensions) / [`set_forecast_dimensions(Option<Vec::<String>>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_forecast_dimensions):<br>required: **false**<br><p>An array of dimension (field) names that specify how to group the generated forecast.</p>  <p>For example, if you are generating forecasts for item sales across all your stores, and your dataset contains a <code>store_id</code> field, you would specify <code>store_id</code> as a dimension to group sales forecasts for each store.</p><br>
    ///   - [`forecast_frequency(impl Into<String>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::forecast_frequency) / [`set_forecast_frequency(Option<String>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_forecast_frequency):<br>required: **false**<br><p>The frequency of predictions in a forecast.</p>  <p>Valid intervals are an integer followed by Y (Year), M (Month), W (Week), D (Day), H (Hour), and min (Minute). For example, "1D" indicates every day and "15min" indicates every 15 minutes. You cannot specify a value that would overlap with the next larger frequency. That means, for example, you cannot specify a frequency of 60 minutes, because that is equivalent to 1 hour. The valid values for each frequency are the following:</p>  <ul>   <li> <p>Minute - 1-59</p> </li>   <li> <p>Hour - 1-23</p> </li>   <li> <p>Day - 1-6</p> </li>   <li> <p>Week - 1-4</p> </li>   <li> <p>Month - 1-11</p> </li>   <li> <p>Year - 1</p> </li>  </ul>  <p>Thus, if you want every other week forecasts, specify "2W". Or, if you want quarterly forecasts, you specify "3M".</p>  <p>The frequency must be greater than or equal to the TARGET_TIME_SERIES dataset frequency.</p>  <p>When a RELATED_TIME_SERIES dataset is provided, the frequency must be equal to the RELATED_TIME_SERIES dataset frequency.</p><br>
    ///   - [`data_config(DataConfig)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::data_config) / [`set_data_config(Option<DataConfig>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_data_config):<br>required: **false**<br><p>The data configuration for your dataset group and any additional datasets.</p><br>
    ///   - [`encryption_config(EncryptionConfig)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::encryption_config) / [`set_encryption_config(Option<EncryptionConfig>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_encryption_config):<br>required: **false**<br><p>An Key Management Service (KMS) key and an Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key. You can specify this optional object in the <code>CreateDataset</code> and <code>CreatePredictor</code> requests.</p><br>
    ///   - [`reference_predictor_arn(impl Into<String>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::reference_predictor_arn) / [`set_reference_predictor_arn(Option<String>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_reference_predictor_arn):<br>required: **false**<br><p>The ARN of the predictor to retrain or upgrade. This parameter is only used when retraining or upgrading a predictor. When creating a new predictor, do not specify a value for this parameter.</p>  <p>When upgrading or retraining a predictor, only specify values for the <code>ReferencePredictorArn</code> and <code>PredictorName</code>. The value for <code>PredictorName</code> must be a unique predictor name.</p><br>
    ///   - [`optimization_metric(OptimizationMetric)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::optimization_metric) / [`set_optimization_metric(Option<OptimizationMetric>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_optimization_metric):<br>required: **false**<br><p>The accuracy metric used to optimize the predictor.</p><br>
    ///   - [`explain_predictor(bool)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::explain_predictor) / [`set_explain_predictor(Option<bool>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_explain_predictor):<br>required: **false**<br><p>Create an Explainability resource for the predictor.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_tags):<br>required: **false**<br><p>Optional metadata to help you categorize and organize your predictors. Each tag consists of a key and an optional value, both of which you define. Tag keys and values are case sensitive.</p>  <p>The following restrictions apply to tags:</p>  <ul>   <li> <p>For each resource, each tag key must be unique and each tag key must have one value.</p> </li>   <li> <p>Maximum number of tags per resource: 50.</p> </li>   <li> <p>Maximum key length: 128 Unicode characters in UTF-8.</p> </li>   <li> <p>Maximum value length: 256 Unicode characters in UTF-8.</p> </li>   <li> <p>Accepted characters: all letters and numbers, spaces representable in UTF-8, and + - = . _ : / @. If your tagging schema is used across other services and resources, the character restrictions of those services also apply. </p> </li>   <li> <p>Key prefixes cannot include any upper or lowercase combination of <code>aws:</code> or <code>AWS:</code>. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit. You cannot edit or delete tag keys with this prefix.</p> </li>  </ul><br>
    ///   - [`monitor_config(MonitorConfig)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::monitor_config) / [`set_monitor_config(Option<MonitorConfig>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_monitor_config):<br>required: **false**<br><p>The configuration details for predictor monitoring. Provide a name for the monitor resource to enable predictor monitoring.</p>  <p>Predictor monitoring allows you to see how your predictor's performance changes over time. For more information, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring.html">Predictor Monitoring</a>.</p><br>
    ///   - [`time_alignment_boundary(TimeAlignmentBoundary)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::time_alignment_boundary) / [`set_time_alignment_boundary(Option<TimeAlignmentBoundary>)`](crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::set_time_alignment_boundary):<br>required: **false**<br><p>The time boundary Forecast uses to align and aggregate any data that doesn't align with your forecast frequency. Provide the unit of time and the time boundary as a key value pair. For more information on specifying a time boundary, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html#specifying-time-boundary">Specifying a Time Boundary</a>. If you don't provide a time boundary, Forecast uses a set of <a href="https://docs.aws.amazon.com/forecast/latest/dg/data-aggregation.html#default-time-boundaries">Default Time Boundaries</a>.</p><br>
    /// - On success, responds with [`CreateAutoPredictorOutput`](crate::operation::create_auto_predictor::CreateAutoPredictorOutput) with field(s):
    ///   - [`predictor_arn(Option<String>)`](crate::operation::create_auto_predictor::CreateAutoPredictorOutput::predictor_arn): <p>The Amazon Resource Name (ARN) of the predictor.</p>
    /// - On failure, responds with [`SdkError<CreateAutoPredictorError>`](crate::operation::create_auto_predictor::CreateAutoPredictorError)
    pub fn create_auto_predictor(&self) -> crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder {
        crate::operation::create_auto_predictor::builders::CreateAutoPredictorFluentBuilder::new(self.handle.clone())
    }
}
