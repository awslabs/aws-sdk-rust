// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeForecast`](crate::operation::describe_forecast::builders::DescribeForecastFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`forecast_arn(impl Into<String>)`](crate::operation::describe_forecast::builders::DescribeForecastFluentBuilder::forecast_arn) / [`set_forecast_arn(Option<String>)`](crate::operation::describe_forecast::builders::DescribeForecastFluentBuilder::set_forecast_arn): <p>The Amazon Resource Name (ARN) of the forecast.</p>
    /// - On success, responds with [`DescribeForecastOutput`](crate::operation::describe_forecast::DescribeForecastOutput) with field(s):
    ///   - [`forecast_arn(Option<String>)`](crate::operation::describe_forecast::DescribeForecastOutput::forecast_arn): <p>The forecast ARN as specified in the request.</p>
    ///   - [`forecast_name(Option<String>)`](crate::operation::describe_forecast::DescribeForecastOutput::forecast_name): <p>The name of the forecast.</p>
    ///   - [`forecast_types(Option<Vec<String>>)`](crate::operation::describe_forecast::DescribeForecastOutput::forecast_types): <p>The quantiles at which probabilistic forecasts were generated.</p>
    ///   - [`predictor_arn(Option<String>)`](crate::operation::describe_forecast::DescribeForecastOutput::predictor_arn): <p>The ARN of the predictor used to generate the forecast.</p>
    ///   - [`dataset_group_arn(Option<String>)`](crate::operation::describe_forecast::DescribeForecastOutput::dataset_group_arn): <p>The ARN of the dataset group that provided the data used to train the predictor.</p>
    ///   - [`estimated_time_remaining_in_minutes(Option<i64>)`](crate::operation::describe_forecast::DescribeForecastOutput::estimated_time_remaining_in_minutes): <p>The estimated time remaining in minutes for the forecast job to complete.</p>
    ///   - [`status(Option<String>)`](crate::operation::describe_forecast::DescribeForecastOutput::status): <p>The status of the forecast. States include:</p>  <ul>   <li> <p> <code>ACTIVE</code> </p> </li>   <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>   <li> <p> <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code> </p> </li>   <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li>  </ul> <note>   <p>The <code>Status</code> of the forecast must be <code>ACTIVE</code> before you can query or export the forecast.</p>  </note>
    ///   - [`message(Option<String>)`](crate::operation::describe_forecast::DescribeForecastOutput::message): <p>If an error occurred, an informational message about the error.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::describe_forecast::DescribeForecastOutput::creation_time): <p>When the forecast creation task was created.</p>
    ///   - [`last_modification_time(Option<DateTime>)`](crate::operation::describe_forecast::DescribeForecastOutput::last_modification_time): <p>The last time the resource was modified. The timestamp depends on the status of the job:</p>  <ul>   <li> <p> <code>CREATE_PENDING</code> - The <code>CreationTime</code>.</p> </li>   <li> <p> <code>CREATE_IN_PROGRESS</code> - The current timestamp.</p> </li>   <li> <p> <code>CREATE_STOPPING</code> - The current timestamp.</p> </li>   <li> <p> <code>CREATE_STOPPED</code> - When the job stopped.</p> </li>   <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code> - When the job finished or failed.</p> </li>  </ul>
    ///   - [`time_series_selector(Option<TimeSeriesSelector>)`](crate::operation::describe_forecast::DescribeForecastOutput::time_series_selector): <p>The time series to include in the forecast.</p>
    /// - On failure, responds with [`SdkError<DescribeForecastError>`](crate::operation::describe_forecast::DescribeForecastError)
    pub fn describe_forecast(
        &self,
    ) -> crate::operation::describe_forecast::builders::DescribeForecastFluentBuilder {
        crate::operation::describe_forecast::builders::DescribeForecastFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
