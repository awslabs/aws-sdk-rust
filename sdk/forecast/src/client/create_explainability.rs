// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateExplainability`](crate::client::fluent_builders::CreateExplainability) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`explainability_name(impl Into<String>)`](crate::client::fluent_builders::CreateExplainability::explainability_name) / [`set_explainability_name(Option<String>)`](crate::client::fluent_builders::CreateExplainability::set_explainability_name): <p>A unique name for the Explainability.</p>
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::CreateExplainability::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::CreateExplainability::set_resource_arn): <p>The Amazon Resource Name (ARN) of the Predictor or Forecast used to create the Explainability.</p>
    ///   - [`explainability_config(ExplainabilityConfig)`](crate::client::fluent_builders::CreateExplainability::explainability_config) / [`set_explainability_config(Option<ExplainabilityConfig>)`](crate::client::fluent_builders::CreateExplainability::set_explainability_config): <p>The configuration settings that define the granularity of time series and time points for the Explainability.</p>
    ///   - [`data_source(DataSource)`](crate::client::fluent_builders::CreateExplainability::data_source) / [`set_data_source(Option<DataSource>)`](crate::client::fluent_builders::CreateExplainability::set_data_source): <p>The source of your data, an AWS Identity and Access Management (IAM) role that allows Amazon Forecast to access the data and, optionally, an AWS Key Management Service (KMS) key.</p>
    ///   - [`schema(Schema)`](crate::client::fluent_builders::CreateExplainability::schema) / [`set_schema(Option<Schema>)`](crate::client::fluent_builders::CreateExplainability::set_schema): <p>Defines the fields of a dataset.</p>
    ///   - [`enable_visualization(bool)`](crate::client::fluent_builders::CreateExplainability::enable_visualization) / [`set_enable_visualization(Option<bool>)`](crate::client::fluent_builders::CreateExplainability::set_enable_visualization): <p>Create an Explainability visualization that is viewable within the AWS console.</p>
    ///   - [`start_date_time(impl Into<String>)`](crate::client::fluent_builders::CreateExplainability::start_date_time) / [`set_start_date_time(Option<String>)`](crate::client::fluent_builders::CreateExplainability::set_start_date_time): <p>If <code>TimePointGranularity</code> is set to <code>SPECIFIC</code>, define the first point for the Explainability.</p>  <p>Use the following timestamp format: yyyy-MM-ddTHH:mm:ss (example: 2015-01-01T20:00:00)</p>
    ///   - [`end_date_time(impl Into<String>)`](crate::client::fluent_builders::CreateExplainability::end_date_time) / [`set_end_date_time(Option<String>)`](crate::client::fluent_builders::CreateExplainability::set_end_date_time): <p>If <code>TimePointGranularity</code> is set to <code>SPECIFIC</code>, define the last time point for the Explainability.</p>  <p>Use the following timestamp format: yyyy-MM-ddTHH:mm:ss (example: 2015-01-01T20:00:00)</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateExplainability::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateExplainability::set_tags): <p>Optional metadata to help you categorize and organize your resources. Each tag consists of a key and an optional value, both of which you define. Tag keys and values are case sensitive.</p>  <p>The following restrictions apply to tags:</p>  <ul>   <li> <p>For each resource, each tag key must be unique and each tag key must have one value.</p> </li>   <li> <p>Maximum number of tags per resource: 50.</p> </li>   <li> <p>Maximum key length: 128 Unicode characters in UTF-8.</p> </li>   <li> <p>Maximum value length: 256 Unicode characters in UTF-8.</p> </li>   <li> <p>Accepted characters: all letters and numbers, spaces representable in UTF-8, and + - = . _ : / @. If your tagging schema is used across other services and resources, the character restrictions of those services also apply. </p> </li>   <li> <p>Key prefixes cannot include any upper or lowercase combination of <code>aws:</code> or <code>AWS:</code>. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit. You cannot edit or delete tag keys with this prefix.</p> </li>  </ul>
    /// - On success, responds with [`CreateExplainabilityOutput`](crate::output::CreateExplainabilityOutput) with field(s):
    ///   - [`explainability_arn(Option<String>)`](crate::output::CreateExplainabilityOutput::explainability_arn): <p>The Amazon Resource Name (ARN) of the Explainability.</p>
    /// - On failure, responds with [`SdkError<CreateExplainabilityError>`](crate::error::CreateExplainabilityError)
    pub fn create_explainability(&self) -> crate::client::fluent_builders::CreateExplainability {
        crate::client::fluent_builders::CreateExplainability::new(self.handle.clone())
    }
}
