// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateForecastExportJob`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`forecast_export_job_name(impl Into<String>)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::forecast_export_job_name) / [`set_forecast_export_job_name(Option<String>)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::set_forecast_export_job_name):<br>required: **true**<br><p>The name for the forecast export job.</p><br>
    ///   - [`forecast_arn(impl Into<String>)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::forecast_arn) / [`set_forecast_arn(Option<String>)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::set_forecast_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the forecast that you want to export.</p><br>
    ///   - [`destination(DataDestination)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::destination) / [`set_destination(Option<DataDestination>)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::set_destination):<br>required: **true**<br><p>The location where you want to save the forecast and an Identity and Access Management (IAM) role that Amazon Forecast can assume to access the location. The forecast must be exported to an Amazon S3 bucket.</p>  <p>If encryption is used, <code>Destination</code> must include an Key Management Service (KMS) key. The IAM role must allow Amazon Forecast permission to access the key.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::set_tags):<br>required: **false**<br><p>The optional metadata that you apply to the forecast export job to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p>  <p>The following basic restrictions apply to tags:</p>  <ul>   <li> <p>Maximum number of tags per resource - 50.</p> </li>   <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li>   <li> <p>Maximum key length - 128 Unicode characters in UTF-8.</p> </li>   <li> <p>Maximum value length - 256 Unicode characters in UTF-8.</p> </li>   <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li>   <li> <p>Tag keys and values are case sensitive.</p> </li>   <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for keys as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit.</p> </li>  </ul><br>
    ///   - [`format(impl Into<String>)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::format) / [`set_format(Option<String>)`](crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::set_format):<br>required: **false**<br><p>The format of the exported data, CSV or PARQUET. The default value is CSV.</p><br>
    /// - On success, responds with [`CreateForecastExportJobOutput`](crate::operation::create_forecast_export_job::CreateForecastExportJobOutput) with field(s):
    ///   - [`forecast_export_job_arn(Option<String>)`](crate::operation::create_forecast_export_job::CreateForecastExportJobOutput::forecast_export_job_arn): <p>The Amazon Resource Name (ARN) of the export job.</p>
    /// - On failure, responds with [`SdkError<CreateForecastExportJobError>`](crate::operation::create_forecast_export_job::CreateForecastExportJobError)
    pub fn create_forecast_export_job(&self) -> crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder {
        crate::operation::create_forecast_export_job::builders::CreateForecastExportJobFluentBuilder::new(self.handle.clone())
    }
}
