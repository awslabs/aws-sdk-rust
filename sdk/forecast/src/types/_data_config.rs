// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The data configuration for your dataset group and any additional datasets.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DataConfig {
    /// <p>The ARN of the dataset group used to train the predictor.</p>
    #[doc(hidden)]
    pub dataset_group_arn: std::option::Option<std::string::String>,
    /// <p>Aggregation and filling options for attributes in your dataset group.</p>
    #[doc(hidden)]
    pub attribute_configs: std::option::Option<std::vec::Vec<crate::types::AttributeConfig>>,
    /// <p>Additional built-in datasets like Holidays and the Weather Index.</p>
    #[doc(hidden)]
    pub additional_datasets: std::option::Option<std::vec::Vec<crate::types::AdditionalDataset>>,
}
impl DataConfig {
    /// <p>The ARN of the dataset group used to train the predictor.</p>
    pub fn dataset_group_arn(&self) -> std::option::Option<&str> {
        self.dataset_group_arn.as_deref()
    }
    /// <p>Aggregation and filling options for attributes in your dataset group.</p>
    pub fn attribute_configs(&self) -> std::option::Option<&[crate::types::AttributeConfig]> {
        self.attribute_configs.as_deref()
    }
    /// <p>Additional built-in datasets like Holidays and the Weather Index.</p>
    pub fn additional_datasets(&self) -> std::option::Option<&[crate::types::AdditionalDataset]> {
        self.additional_datasets.as_deref()
    }
}
impl DataConfig {
    /// Creates a new builder-style object to manufacture [`DataConfig`](crate::types::DataConfig).
    pub fn builder() -> crate::types::builders::DataConfigBuilder {
        crate::types::builders::DataConfigBuilder::default()
    }
}

/// A builder for [`DataConfig`](crate::types::DataConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DataConfigBuilder {
    pub(crate) dataset_group_arn: std::option::Option<std::string::String>,
    pub(crate) attribute_configs: std::option::Option<std::vec::Vec<crate::types::AttributeConfig>>,
    pub(crate) additional_datasets:
        std::option::Option<std::vec::Vec<crate::types::AdditionalDataset>>,
}
impl DataConfigBuilder {
    /// <p>The ARN of the dataset group used to train the predictor.</p>
    pub fn dataset_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.dataset_group_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the dataset group used to train the predictor.</p>
    pub fn set_dataset_group_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.dataset_group_arn = input;
        self
    }
    /// Appends an item to `attribute_configs`.
    ///
    /// To override the contents of this collection use [`set_attribute_configs`](Self::set_attribute_configs).
    ///
    /// <p>Aggregation and filling options for attributes in your dataset group.</p>
    pub fn attribute_configs(mut self, input: crate::types::AttributeConfig) -> Self {
        let mut v = self.attribute_configs.unwrap_or_default();
        v.push(input);
        self.attribute_configs = Some(v);
        self
    }
    /// <p>Aggregation and filling options for attributes in your dataset group.</p>
    pub fn set_attribute_configs(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AttributeConfig>>,
    ) -> Self {
        self.attribute_configs = input;
        self
    }
    /// Appends an item to `additional_datasets`.
    ///
    /// To override the contents of this collection use [`set_additional_datasets`](Self::set_additional_datasets).
    ///
    /// <p>Additional built-in datasets like Holidays and the Weather Index.</p>
    pub fn additional_datasets(mut self, input: crate::types::AdditionalDataset) -> Self {
        let mut v = self.additional_datasets.unwrap_or_default();
        v.push(input);
        self.additional_datasets = Some(v);
        self
    }
    /// <p>Additional built-in datasets like Holidays and the Weather Index.</p>
    pub fn set_additional_datasets(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AdditionalDataset>>,
    ) -> Self {
        self.additional_datasets = input;
        self
    }
    /// Consumes the builder and constructs a [`DataConfig`](crate::types::DataConfig).
    pub fn build(self) -> crate::types::DataConfig {
        crate::types::DataConfig {
            dataset_group_arn: self.dataset_group_arn,
            attribute_configs: self.attribute_configs,
            additional_datasets: self.additional_datasets,
        }
    }
}
