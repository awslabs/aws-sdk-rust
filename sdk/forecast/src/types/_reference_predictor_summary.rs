// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides a summary of the reference predictor used when retraining or upgrading a predictor.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReferencePredictorSummary {
    /// <p>The ARN of the reference predictor.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>Whether the reference predictor is <code>Active</code> or <code>Deleted</code>.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::State>,
}
impl ReferencePredictorSummary {
    /// <p>The ARN of the reference predictor.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>Whether the reference predictor is <code>Active</code> or <code>Deleted</code>.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::State> {
        self.state.as_ref()
    }
}
impl ReferencePredictorSummary {
    /// Creates a new builder-style object to manufacture [`ReferencePredictorSummary`](crate::types::ReferencePredictorSummary).
    pub fn builder() -> crate::types::builders::ReferencePredictorSummaryBuilder {
        crate::types::builders::ReferencePredictorSummaryBuilder::default()
    }
}

/// A builder for [`ReferencePredictorSummary`](crate::types::ReferencePredictorSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReferencePredictorSummaryBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) state: std::option::Option<crate::types::State>,
}
impl ReferencePredictorSummaryBuilder {
    /// <p>The ARN of the reference predictor.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The ARN of the reference predictor.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>Whether the reference predictor is <code>Active</code> or <code>Deleted</code>.</p>
    pub fn state(mut self, input: crate::types::State) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>Whether the reference predictor is <code>Active</code> or <code>Deleted</code>.</p>
    pub fn set_state(mut self, input: std::option::Option<crate::types::State>) -> Self {
        self.state = input;
        self
    }
    /// Consumes the builder and constructs a [`ReferencePredictorSummary`](crate::types::ReferencePredictorSummary).
    pub fn build(self) -> crate::types::ReferencePredictorSummary {
        crate::types::ReferencePredictorSummary {
            arn: self.arn,
            state: self.state,
        }
    }
}
