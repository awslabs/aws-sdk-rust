// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details on the backtests performed to evaluate the accuracy of the predictor. The tests are returned in descending order of accuracy, with the most accurate backtest appearing first. You specify the number of backtests to perform when you call the operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PredictorExecutionDetails {
    /// <p>An array of the backtests performed to evaluate the accuracy of the predictor against a particular algorithm. The <code>NumberOfBacktestWindows</code> from the object determines the number of windows in the array.</p>
    #[doc(hidden)]
    pub predictor_executions: std::option::Option<std::vec::Vec<crate::types::PredictorExecution>>,
}
impl PredictorExecutionDetails {
    /// <p>An array of the backtests performed to evaluate the accuracy of the predictor against a particular algorithm. The <code>NumberOfBacktestWindows</code> from the object determines the number of windows in the array.</p>
    pub fn predictor_executions(&self) -> std::option::Option<&[crate::types::PredictorExecution]> {
        self.predictor_executions.as_deref()
    }
}
impl PredictorExecutionDetails {
    /// Creates a new builder-style object to manufacture [`PredictorExecutionDetails`](crate::types::PredictorExecutionDetails).
    pub fn builder() -> crate::types::builders::PredictorExecutionDetailsBuilder {
        crate::types::builders::PredictorExecutionDetailsBuilder::default()
    }
}

/// A builder for [`PredictorExecutionDetails`](crate::types::PredictorExecutionDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PredictorExecutionDetailsBuilder {
    pub(crate) predictor_executions:
        std::option::Option<std::vec::Vec<crate::types::PredictorExecution>>,
}
impl PredictorExecutionDetailsBuilder {
    /// Appends an item to `predictor_executions`.
    ///
    /// To override the contents of this collection use [`set_predictor_executions`](Self::set_predictor_executions).
    ///
    /// <p>An array of the backtests performed to evaluate the accuracy of the predictor against a particular algorithm. The <code>NumberOfBacktestWindows</code> from the object determines the number of windows in the array.</p>
    pub fn predictor_executions(mut self, input: crate::types::PredictorExecution) -> Self {
        let mut v = self.predictor_executions.unwrap_or_default();
        v.push(input);
        self.predictor_executions = Some(v);
        self
    }
    /// <p>An array of the backtests performed to evaluate the accuracy of the predictor against a particular algorithm. The <code>NumberOfBacktestWindows</code> from the object determines the number of windows in the array.</p>
    pub fn set_predictor_executions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PredictorExecution>>,
    ) -> Self {
        self.predictor_executions = input;
        self
    }
    /// Consumes the builder and constructs a [`PredictorExecutionDetails`](crate::types::PredictorExecutionDetails).
    pub fn build(self) -> crate::types::PredictorExecutionDetails {
        crate::types::PredictorExecutionDetails {
            predictor_executions: self.predictor_executions,
        }
    }
}
