// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an additional dataset. This object is part of the <code>DataConfig</code> object. Forecast supports the Weather Index and Holidays additional datasets.</p>
/// <p> <b>Weather Index</b> </p>
/// <p>The Amazon Forecast Weather Index is a built-in dataset that incorporates historical and projected weather information into your model. The Weather Index supplements your datasets with over two years of historical weather data and up to 14 days of projected weather data. For more information, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/weather.html">Amazon Forecast Weather Index</a>.</p>
/// <p> <b>Holidays</b> </p>
/// <p>Holidays is a built-in dataset that incorporates national holiday information into your model. It provides native support for the holiday calendars of 66 countries. To view the holiday calendars, refer to the <a href="http://jollyday.sourceforge.net/data.html">Jollyday</a> library. For more information, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/holidays.html">Holidays Featurization</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AdditionalDataset {
    /// <p>The name of the additional dataset. Valid names: <code>"holiday"</code> and <code>"weather"</code>.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p> <b>Weather Index</b> </p>
    /// <p>To enable the Weather Index, do not specify a value for <code>Configuration</code>.</p>
    /// <p> <b>Holidays</b> </p>
    /// <p> <b>Holidays</b> </p>
    /// <p>To enable Holidays, set <code>CountryCode</code> to one of the following two-letter country codes:</p>
    /// <ul>
    /// <li> <p>"AL" - ALBANIA</p> </li>
    /// <li> <p>"AR" - ARGENTINA</p> </li>
    /// <li> <p>"AT" - AUSTRIA</p> </li>
    /// <li> <p>"AU" - AUSTRALIA</p> </li>
    /// <li> <p>"BA" - BOSNIA HERZEGOVINA</p> </li>
    /// <li> <p>"BE" - BELGIUM</p> </li>
    /// <li> <p>"BG" - BULGARIA</p> </li>
    /// <li> <p>"BO" - BOLIVIA</p> </li>
    /// <li> <p>"BR" - BRAZIL</p> </li>
    /// <li> <p>"BY" - BELARUS</p> </li>
    /// <li> <p>"CA" - CANADA</p> </li>
    /// <li> <p>"CL" - CHILE</p> </li>
    /// <li> <p>"CO" - COLOMBIA</p> </li>
    /// <li> <p>"CR" - COSTA RICA</p> </li>
    /// <li> <p>"HR" - CROATIA</p> </li>
    /// <li> <p>"CZ" - CZECH REPUBLIC</p> </li>
    /// <li> <p>"DK" - DENMARK</p> </li>
    /// <li> <p>"EC" - ECUADOR</p> </li>
    /// <li> <p>"EE" - ESTONIA</p> </li>
    /// <li> <p>"ET" - ETHIOPIA</p> </li>
    /// <li> <p>"FI" - FINLAND</p> </li>
    /// <li> <p>"FR" - FRANCE</p> </li>
    /// <li> <p>"DE" - GERMANY</p> </li>
    /// <li> <p>"GR" - GREECE</p> </li>
    /// <li> <p>"HU" - HUNGARY</p> </li>
    /// <li> <p>"IS" - ICELAND</p> </li>
    /// <li> <p>"IN" - INDIA</p> </li>
    /// <li> <p>"IE" - IRELAND</p> </li>
    /// <li> <p>"IT" - ITALY</p> </li>
    /// <li> <p>"JP" - JAPAN</p> </li>
    /// <li> <p>"KZ" - KAZAKHSTAN</p> </li>
    /// <li> <p>"KR" - KOREA</p> </li>
    /// <li> <p>"LV" - LATVIA</p> </li>
    /// <li> <p>"LI" - LIECHTENSTEIN</p> </li>
    /// <li> <p>"LT" - LITHUANIA</p> </li>
    /// <li> <p>"LU" - LUXEMBOURG</p> </li>
    /// <li> <p>"MK" - MACEDONIA</p> </li>
    /// <li> <p>"MT" - MALTA</p> </li>
    /// <li> <p>"MX" - MEXICO</p> </li>
    /// <li> <p>"MD" - MOLDOVA</p> </li>
    /// <li> <p>"ME" - MONTENEGRO</p> </li>
    /// <li> <p>"NL" - NETHERLANDS</p> </li>
    /// <li> <p>"NZ" - NEW ZEALAND</p> </li>
    /// <li> <p>"NI" - NICARAGUA</p> </li>
    /// <li> <p>"NG" - NIGERIA</p> </li>
    /// <li> <p>"NO" - NORWAY</p> </li>
    /// <li> <p>"PA" - PANAMA</p> </li>
    /// <li> <p>"PY" - PARAGUAY</p> </li>
    /// <li> <p>"PE" - PERU</p> </li>
    /// <li> <p>"PL" - POLAND</p> </li>
    /// <li> <p>"PT" - PORTUGAL</p> </li>
    /// <li> <p>"RO" - ROMANIA</p> </li>
    /// <li> <p>"RU" - RUSSIA</p> </li>
    /// <li> <p>"RS" - SERBIA</p> </li>
    /// <li> <p>"SK" - SLOVAKIA</p> </li>
    /// <li> <p>"SI" - SLOVENIA</p> </li>
    /// <li> <p>"ZA" - SOUTH AFRICA</p> </li>
    /// <li> <p>"ES" - SPAIN</p> </li>
    /// <li> <p>"SE" - SWEDEN</p> </li>
    /// <li> <p>"CH" - SWITZERLAND</p> </li>
    /// <li> <p>"UA" - UKRAINE</p> </li>
    /// <li> <p>"AE" - UNITED ARAB EMIRATES</p> </li>
    /// <li> <p>"US" - UNITED STATES</p> </li>
    /// <li> <p>"UK" - UNITED KINGDOM</p> </li>
    /// <li> <p>"UY" - URUGUAY</p> </li>
    /// <li> <p>"VE" - VENEZUELA</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub configuration: std::option::Option<
        std::collections::HashMap<std::string::String, std::vec::Vec<std::string::String>>,
    >,
}
impl AdditionalDataset {
    /// <p>The name of the additional dataset. Valid names: <code>"holiday"</code> and <code>"weather"</code>.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p> <b>Weather Index</b> </p>
    /// <p>To enable the Weather Index, do not specify a value for <code>Configuration</code>.</p>
    /// <p> <b>Holidays</b> </p>
    /// <p> <b>Holidays</b> </p>
    /// <p>To enable Holidays, set <code>CountryCode</code> to one of the following two-letter country codes:</p>
    /// <ul>
    /// <li> <p>"AL" - ALBANIA</p> </li>
    /// <li> <p>"AR" - ARGENTINA</p> </li>
    /// <li> <p>"AT" - AUSTRIA</p> </li>
    /// <li> <p>"AU" - AUSTRALIA</p> </li>
    /// <li> <p>"BA" - BOSNIA HERZEGOVINA</p> </li>
    /// <li> <p>"BE" - BELGIUM</p> </li>
    /// <li> <p>"BG" - BULGARIA</p> </li>
    /// <li> <p>"BO" - BOLIVIA</p> </li>
    /// <li> <p>"BR" - BRAZIL</p> </li>
    /// <li> <p>"BY" - BELARUS</p> </li>
    /// <li> <p>"CA" - CANADA</p> </li>
    /// <li> <p>"CL" - CHILE</p> </li>
    /// <li> <p>"CO" - COLOMBIA</p> </li>
    /// <li> <p>"CR" - COSTA RICA</p> </li>
    /// <li> <p>"HR" - CROATIA</p> </li>
    /// <li> <p>"CZ" - CZECH REPUBLIC</p> </li>
    /// <li> <p>"DK" - DENMARK</p> </li>
    /// <li> <p>"EC" - ECUADOR</p> </li>
    /// <li> <p>"EE" - ESTONIA</p> </li>
    /// <li> <p>"ET" - ETHIOPIA</p> </li>
    /// <li> <p>"FI" - FINLAND</p> </li>
    /// <li> <p>"FR" - FRANCE</p> </li>
    /// <li> <p>"DE" - GERMANY</p> </li>
    /// <li> <p>"GR" - GREECE</p> </li>
    /// <li> <p>"HU" - HUNGARY</p> </li>
    /// <li> <p>"IS" - ICELAND</p> </li>
    /// <li> <p>"IN" - INDIA</p> </li>
    /// <li> <p>"IE" - IRELAND</p> </li>
    /// <li> <p>"IT" - ITALY</p> </li>
    /// <li> <p>"JP" - JAPAN</p> </li>
    /// <li> <p>"KZ" - KAZAKHSTAN</p> </li>
    /// <li> <p>"KR" - KOREA</p> </li>
    /// <li> <p>"LV" - LATVIA</p> </li>
    /// <li> <p>"LI" - LIECHTENSTEIN</p> </li>
    /// <li> <p>"LT" - LITHUANIA</p> </li>
    /// <li> <p>"LU" - LUXEMBOURG</p> </li>
    /// <li> <p>"MK" - MACEDONIA</p> </li>
    /// <li> <p>"MT" - MALTA</p> </li>
    /// <li> <p>"MX" - MEXICO</p> </li>
    /// <li> <p>"MD" - MOLDOVA</p> </li>
    /// <li> <p>"ME" - MONTENEGRO</p> </li>
    /// <li> <p>"NL" - NETHERLANDS</p> </li>
    /// <li> <p>"NZ" - NEW ZEALAND</p> </li>
    /// <li> <p>"NI" - NICARAGUA</p> </li>
    /// <li> <p>"NG" - NIGERIA</p> </li>
    /// <li> <p>"NO" - NORWAY</p> </li>
    /// <li> <p>"PA" - PANAMA</p> </li>
    /// <li> <p>"PY" - PARAGUAY</p> </li>
    /// <li> <p>"PE" - PERU</p> </li>
    /// <li> <p>"PL" - POLAND</p> </li>
    /// <li> <p>"PT" - PORTUGAL</p> </li>
    /// <li> <p>"RO" - ROMANIA</p> </li>
    /// <li> <p>"RU" - RUSSIA</p> </li>
    /// <li> <p>"RS" - SERBIA</p> </li>
    /// <li> <p>"SK" - SLOVAKIA</p> </li>
    /// <li> <p>"SI" - SLOVENIA</p> </li>
    /// <li> <p>"ZA" - SOUTH AFRICA</p> </li>
    /// <li> <p>"ES" - SPAIN</p> </li>
    /// <li> <p>"SE" - SWEDEN</p> </li>
    /// <li> <p>"CH" - SWITZERLAND</p> </li>
    /// <li> <p>"UA" - UKRAINE</p> </li>
    /// <li> <p>"AE" - UNITED ARAB EMIRATES</p> </li>
    /// <li> <p>"US" - UNITED STATES</p> </li>
    /// <li> <p>"UK" - UNITED KINGDOM</p> </li>
    /// <li> <p>"UY" - URUGUAY</p> </li>
    /// <li> <p>"VE" - VENEZUELA</p> </li>
    /// </ul>
    pub fn configuration(
        &self,
    ) -> std::option::Option<
        &std::collections::HashMap<std::string::String, std::vec::Vec<std::string::String>>,
    > {
        self.configuration.as_ref()
    }
}
impl AdditionalDataset {
    /// Creates a new builder-style object to manufacture [`AdditionalDataset`](crate::types::AdditionalDataset).
    pub fn builder() -> crate::types::builders::AdditionalDatasetBuilder {
        crate::types::builders::AdditionalDatasetBuilder::default()
    }
}

/// A builder for [`AdditionalDataset`](crate::types::AdditionalDataset).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AdditionalDatasetBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) configuration: std::option::Option<
        std::collections::HashMap<std::string::String, std::vec::Vec<std::string::String>>,
    >,
}
impl AdditionalDatasetBuilder {
    /// <p>The name of the additional dataset. Valid names: <code>"holiday"</code> and <code>"weather"</code>.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the additional dataset. Valid names: <code>"holiday"</code> and <code>"weather"</code>.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Adds a key-value pair to `configuration`.
    ///
    /// To override the contents of this collection use [`set_configuration`](Self::set_configuration).
    ///
    /// <p> <b>Weather Index</b> </p>
    /// <p>To enable the Weather Index, do not specify a value for <code>Configuration</code>.</p>
    /// <p> <b>Holidays</b> </p>
    /// <p> <b>Holidays</b> </p>
    /// <p>To enable Holidays, set <code>CountryCode</code> to one of the following two-letter country codes:</p>
    /// <ul>
    /// <li> <p>"AL" - ALBANIA</p> </li>
    /// <li> <p>"AR" - ARGENTINA</p> </li>
    /// <li> <p>"AT" - AUSTRIA</p> </li>
    /// <li> <p>"AU" - AUSTRALIA</p> </li>
    /// <li> <p>"BA" - BOSNIA HERZEGOVINA</p> </li>
    /// <li> <p>"BE" - BELGIUM</p> </li>
    /// <li> <p>"BG" - BULGARIA</p> </li>
    /// <li> <p>"BO" - BOLIVIA</p> </li>
    /// <li> <p>"BR" - BRAZIL</p> </li>
    /// <li> <p>"BY" - BELARUS</p> </li>
    /// <li> <p>"CA" - CANADA</p> </li>
    /// <li> <p>"CL" - CHILE</p> </li>
    /// <li> <p>"CO" - COLOMBIA</p> </li>
    /// <li> <p>"CR" - COSTA RICA</p> </li>
    /// <li> <p>"HR" - CROATIA</p> </li>
    /// <li> <p>"CZ" - CZECH REPUBLIC</p> </li>
    /// <li> <p>"DK" - DENMARK</p> </li>
    /// <li> <p>"EC" - ECUADOR</p> </li>
    /// <li> <p>"EE" - ESTONIA</p> </li>
    /// <li> <p>"ET" - ETHIOPIA</p> </li>
    /// <li> <p>"FI" - FINLAND</p> </li>
    /// <li> <p>"FR" - FRANCE</p> </li>
    /// <li> <p>"DE" - GERMANY</p> </li>
    /// <li> <p>"GR" - GREECE</p> </li>
    /// <li> <p>"HU" - HUNGARY</p> </li>
    /// <li> <p>"IS" - ICELAND</p> </li>
    /// <li> <p>"IN" - INDIA</p> </li>
    /// <li> <p>"IE" - IRELAND</p> </li>
    /// <li> <p>"IT" - ITALY</p> </li>
    /// <li> <p>"JP" - JAPAN</p> </li>
    /// <li> <p>"KZ" - KAZAKHSTAN</p> </li>
    /// <li> <p>"KR" - KOREA</p> </li>
    /// <li> <p>"LV" - LATVIA</p> </li>
    /// <li> <p>"LI" - LIECHTENSTEIN</p> </li>
    /// <li> <p>"LT" - LITHUANIA</p> </li>
    /// <li> <p>"LU" - LUXEMBOURG</p> </li>
    /// <li> <p>"MK" - MACEDONIA</p> </li>
    /// <li> <p>"MT" - MALTA</p> </li>
    /// <li> <p>"MX" - MEXICO</p> </li>
    /// <li> <p>"MD" - MOLDOVA</p> </li>
    /// <li> <p>"ME" - MONTENEGRO</p> </li>
    /// <li> <p>"NL" - NETHERLANDS</p> </li>
    /// <li> <p>"NZ" - NEW ZEALAND</p> </li>
    /// <li> <p>"NI" - NICARAGUA</p> </li>
    /// <li> <p>"NG" - NIGERIA</p> </li>
    /// <li> <p>"NO" - NORWAY</p> </li>
    /// <li> <p>"PA" - PANAMA</p> </li>
    /// <li> <p>"PY" - PARAGUAY</p> </li>
    /// <li> <p>"PE" - PERU</p> </li>
    /// <li> <p>"PL" - POLAND</p> </li>
    /// <li> <p>"PT" - PORTUGAL</p> </li>
    /// <li> <p>"RO" - ROMANIA</p> </li>
    /// <li> <p>"RU" - RUSSIA</p> </li>
    /// <li> <p>"RS" - SERBIA</p> </li>
    /// <li> <p>"SK" - SLOVAKIA</p> </li>
    /// <li> <p>"SI" - SLOVENIA</p> </li>
    /// <li> <p>"ZA" - SOUTH AFRICA</p> </li>
    /// <li> <p>"ES" - SPAIN</p> </li>
    /// <li> <p>"SE" - SWEDEN</p> </li>
    /// <li> <p>"CH" - SWITZERLAND</p> </li>
    /// <li> <p>"UA" - UKRAINE</p> </li>
    /// <li> <p>"AE" - UNITED ARAB EMIRATES</p> </li>
    /// <li> <p>"US" - UNITED STATES</p> </li>
    /// <li> <p>"UK" - UNITED KINGDOM</p> </li>
    /// <li> <p>"UY" - URUGUAY</p> </li>
    /// <li> <p>"VE" - VENEZUELA</p> </li>
    /// </ul>
    pub fn configuration(
        mut self,
        k: impl Into<std::string::String>,
        v: std::vec::Vec<std::string::String>,
    ) -> Self {
        let mut hash_map = self.configuration.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.configuration = Some(hash_map);
        self
    }
    /// <p> <b>Weather Index</b> </p>
    /// <p>To enable the Weather Index, do not specify a value for <code>Configuration</code>.</p>
    /// <p> <b>Holidays</b> </p>
    /// <p> <b>Holidays</b> </p>
    /// <p>To enable Holidays, set <code>CountryCode</code> to one of the following two-letter country codes:</p>
    /// <ul>
    /// <li> <p>"AL" - ALBANIA</p> </li>
    /// <li> <p>"AR" - ARGENTINA</p> </li>
    /// <li> <p>"AT" - AUSTRIA</p> </li>
    /// <li> <p>"AU" - AUSTRALIA</p> </li>
    /// <li> <p>"BA" - BOSNIA HERZEGOVINA</p> </li>
    /// <li> <p>"BE" - BELGIUM</p> </li>
    /// <li> <p>"BG" - BULGARIA</p> </li>
    /// <li> <p>"BO" - BOLIVIA</p> </li>
    /// <li> <p>"BR" - BRAZIL</p> </li>
    /// <li> <p>"BY" - BELARUS</p> </li>
    /// <li> <p>"CA" - CANADA</p> </li>
    /// <li> <p>"CL" - CHILE</p> </li>
    /// <li> <p>"CO" - COLOMBIA</p> </li>
    /// <li> <p>"CR" - COSTA RICA</p> </li>
    /// <li> <p>"HR" - CROATIA</p> </li>
    /// <li> <p>"CZ" - CZECH REPUBLIC</p> </li>
    /// <li> <p>"DK" - DENMARK</p> </li>
    /// <li> <p>"EC" - ECUADOR</p> </li>
    /// <li> <p>"EE" - ESTONIA</p> </li>
    /// <li> <p>"ET" - ETHIOPIA</p> </li>
    /// <li> <p>"FI" - FINLAND</p> </li>
    /// <li> <p>"FR" - FRANCE</p> </li>
    /// <li> <p>"DE" - GERMANY</p> </li>
    /// <li> <p>"GR" - GREECE</p> </li>
    /// <li> <p>"HU" - HUNGARY</p> </li>
    /// <li> <p>"IS" - ICELAND</p> </li>
    /// <li> <p>"IN" - INDIA</p> </li>
    /// <li> <p>"IE" - IRELAND</p> </li>
    /// <li> <p>"IT" - ITALY</p> </li>
    /// <li> <p>"JP" - JAPAN</p> </li>
    /// <li> <p>"KZ" - KAZAKHSTAN</p> </li>
    /// <li> <p>"KR" - KOREA</p> </li>
    /// <li> <p>"LV" - LATVIA</p> </li>
    /// <li> <p>"LI" - LIECHTENSTEIN</p> </li>
    /// <li> <p>"LT" - LITHUANIA</p> </li>
    /// <li> <p>"LU" - LUXEMBOURG</p> </li>
    /// <li> <p>"MK" - MACEDONIA</p> </li>
    /// <li> <p>"MT" - MALTA</p> </li>
    /// <li> <p>"MX" - MEXICO</p> </li>
    /// <li> <p>"MD" - MOLDOVA</p> </li>
    /// <li> <p>"ME" - MONTENEGRO</p> </li>
    /// <li> <p>"NL" - NETHERLANDS</p> </li>
    /// <li> <p>"NZ" - NEW ZEALAND</p> </li>
    /// <li> <p>"NI" - NICARAGUA</p> </li>
    /// <li> <p>"NG" - NIGERIA</p> </li>
    /// <li> <p>"NO" - NORWAY</p> </li>
    /// <li> <p>"PA" - PANAMA</p> </li>
    /// <li> <p>"PY" - PARAGUAY</p> </li>
    /// <li> <p>"PE" - PERU</p> </li>
    /// <li> <p>"PL" - POLAND</p> </li>
    /// <li> <p>"PT" - PORTUGAL</p> </li>
    /// <li> <p>"RO" - ROMANIA</p> </li>
    /// <li> <p>"RU" - RUSSIA</p> </li>
    /// <li> <p>"RS" - SERBIA</p> </li>
    /// <li> <p>"SK" - SLOVAKIA</p> </li>
    /// <li> <p>"SI" - SLOVENIA</p> </li>
    /// <li> <p>"ZA" - SOUTH AFRICA</p> </li>
    /// <li> <p>"ES" - SPAIN</p> </li>
    /// <li> <p>"SE" - SWEDEN</p> </li>
    /// <li> <p>"CH" - SWITZERLAND</p> </li>
    /// <li> <p>"UA" - UKRAINE</p> </li>
    /// <li> <p>"AE" - UNITED ARAB EMIRATES</p> </li>
    /// <li> <p>"US" - UNITED STATES</p> </li>
    /// <li> <p>"UK" - UNITED KINGDOM</p> </li>
    /// <li> <p>"UY" - URUGUAY</p> </li>
    /// <li> <p>"VE" - VENEZUELA</p> </li>
    /// </ul>
    pub fn set_configuration(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::vec::Vec<std::string::String>>,
        >,
    ) -> Self {
        self.configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`AdditionalDataset`](crate::types::AdditionalDataset).
    pub fn build(self) -> crate::types::AdditionalDataset {
        crate::types::AdditionalDataset {
            name: self.name,
            configuration: self.configuration,
        }
    }
}
