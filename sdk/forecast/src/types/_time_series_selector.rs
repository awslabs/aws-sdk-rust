// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the set of time series that are used to create the forecasts in a <code>TimeSeriesIdentifiers</code> object.</p>
/// <p>The <code>TimeSeriesIdentifiers</code> object needs the following information:</p>
/// <ul>
/// <li> <p> <code>DataSource</code> </p> </li>
/// <li> <p> <code>Format</code> </p> </li>
/// <li> <p> <code>Schema</code> </p> </li>
/// </ul>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TimeSeriesSelector {
    /// <p>Details about the import file that contains the time series for which you want to create forecasts.</p>
    #[doc(hidden)]
    pub time_series_identifiers: std::option::Option<crate::types::TimeSeriesIdentifiers>,
}
impl TimeSeriesSelector {
    /// <p>Details about the import file that contains the time series for which you want to create forecasts.</p>
    pub fn time_series_identifiers(
        &self,
    ) -> std::option::Option<&crate::types::TimeSeriesIdentifiers> {
        self.time_series_identifiers.as_ref()
    }
}
impl TimeSeriesSelector {
    /// Creates a new builder-style object to manufacture [`TimeSeriesSelector`](crate::types::TimeSeriesSelector).
    pub fn builder() -> crate::types::builders::TimeSeriesSelectorBuilder {
        crate::types::builders::TimeSeriesSelectorBuilder::default()
    }
}

/// A builder for [`TimeSeriesSelector`](crate::types::TimeSeriesSelector).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TimeSeriesSelectorBuilder {
    pub(crate) time_series_identifiers: std::option::Option<crate::types::TimeSeriesIdentifiers>,
}
impl TimeSeriesSelectorBuilder {
    /// <p>Details about the import file that contains the time series for which you want to create forecasts.</p>
    pub fn time_series_identifiers(mut self, input: crate::types::TimeSeriesIdentifiers) -> Self {
        self.time_series_identifiers = Some(input);
        self
    }
    /// <p>Details about the import file that contains the time series for which you want to create forecasts.</p>
    pub fn set_time_series_identifiers(
        mut self,
        input: std::option::Option<crate::types::TimeSeriesIdentifiers>,
    ) -> Self {
        self.time_series_identifiers = input;
        self
    }
    /// Consumes the builder and constructs a [`TimeSeriesSelector`](crate::types::TimeSeriesSelector).
    pub fn build(self) -> crate::types::TimeSeriesSelector {
        crate::types::TimeSeriesSelector {
            time_series_identifiers: self.time_series_identifiers,
        }
    }
}
