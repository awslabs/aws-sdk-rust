// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <note>
/// <p>This object belongs to the <code>CreatePredictor</code> operation. If you created your predictor with <code>CreateAutoPredictor</code>, see <code>AdditionalDataset</code>.</p>
/// </note>
/// <p>Describes a supplementary feature of a dataset group. This object is part of the <code>InputDataConfig</code> object. Forecast supports the Weather Index and Holidays built-in featurizations.</p>
/// <p> <b>Weather Index</b> </p>
/// <p>The Amazon Forecast Weather Index is a built-in featurization that incorporates historical and projected weather information into your model. The Weather Index supplements your datasets with over two years of historical weather data and up to 14 days of projected weather data. For more information, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/weather.html">Amazon Forecast Weather Index</a>.</p>
/// <p> <b>Holidays</b> </p>
/// <p>Holidays is a built-in featurization that incorporates a feature-engineered dataset of national holiday information into your model. It provides native support for the holiday calendars of 66 countries. To view the holiday calendars, refer to the <a href="http://jollyday.sourceforge.net/data.html">Jollyday</a> library. For more information, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/holidays.html">Holidays Featurization</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SupplementaryFeature {
    /// <p>The name of the feature. Valid values: <code>"holiday"</code> and <code>"weather"</code>.</p>
    pub name: ::std::string::String,
    /// <p> <b>Weather Index</b> </p>
    /// <p>To enable the Weather Index, set the value to <code>"true"</code> </p>
    /// <p> <b>Holidays</b> </p>
    /// <p>To enable Holidays, specify a country with one of the following two-letter country codes:</p>
    /// <ul>
    /// <li> <p>"AL" - ALBANIA</p> </li>
    /// <li> <p>"AR" - ARGENTINA</p> </li>
    /// <li> <p>"AT" - AUSTRIA</p> </li>
    /// <li> <p>"AU" - AUSTRALIA</p> </li>
    /// <li> <p>"BA" - BOSNIA HERZEGOVINA</p> </li>
    /// <li> <p>"BE" - BELGIUM</p> </li>
    /// <li> <p>"BG" - BULGARIA</p> </li>
    /// <li> <p>"BO" - BOLIVIA</p> </li>
    /// <li> <p>"BR" - BRAZIL</p> </li>
    /// <li> <p>"BY" - BELARUS</p> </li>
    /// <li> <p>"CA" - CANADA</p> </li>
    /// <li> <p>"CL" - CHILE</p> </li>
    /// <li> <p>"CO" - COLOMBIA</p> </li>
    /// <li> <p>"CR" - COSTA RICA</p> </li>
    /// <li> <p>"HR" - CROATIA</p> </li>
    /// <li> <p>"CZ" - CZECH REPUBLIC</p> </li>
    /// <li> <p>"DK" - DENMARK</p> </li>
    /// <li> <p>"EC" - ECUADOR</p> </li>
    /// <li> <p>"EE" - ESTONIA</p> </li>
    /// <li> <p>"ET" - ETHIOPIA</p> </li>
    /// <li> <p>"FI" - FINLAND</p> </li>
    /// <li> <p>"FR" - FRANCE</p> </li>
    /// <li> <p>"DE" - GERMANY</p> </li>
    /// <li> <p>"GR" - GREECE</p> </li>
    /// <li> <p>"HU" - HUNGARY</p> </li>
    /// <li> <p>"IS" - ICELAND</p> </li>
    /// <li> <p>"IN" - INDIA</p> </li>
    /// <li> <p>"IE" - IRELAND</p> </li>
    /// <li> <p>"IT" - ITALY</p> </li>
    /// <li> <p>"JP" - JAPAN</p> </li>
    /// <li> <p>"KZ" - KAZAKHSTAN</p> </li>
    /// <li> <p>"KR" - KOREA</p> </li>
    /// <li> <p>"LV" - LATVIA</p> </li>
    /// <li> <p>"LI" - LIECHTENSTEIN</p> </li>
    /// <li> <p>"LT" - LITHUANIA</p> </li>
    /// <li> <p>"LU" - LUXEMBOURG</p> </li>
    /// <li> <p>"MK" - MACEDONIA</p> </li>
    /// <li> <p>"MT" - MALTA</p> </li>
    /// <li> <p>"MX" - MEXICO</p> </li>
    /// <li> <p>"MD" - MOLDOVA</p> </li>
    /// <li> <p>"ME" - MONTENEGRO</p> </li>
    /// <li> <p>"NL" - NETHERLANDS</p> </li>
    /// <li> <p>"NZ" - NEW ZEALAND</p> </li>
    /// <li> <p>"NI" - NICARAGUA</p> </li>
    /// <li> <p>"NG" - NIGERIA</p> </li>
    /// <li> <p>"NO" - NORWAY</p> </li>
    /// <li> <p>"PA" - PANAMA</p> </li>
    /// <li> <p>"PY" - PARAGUAY</p> </li>
    /// <li> <p>"PE" - PERU</p> </li>
    /// <li> <p>"PL" - POLAND</p> </li>
    /// <li> <p>"PT" - PORTUGAL</p> </li>
    /// <li> <p>"RO" - ROMANIA</p> </li>
    /// <li> <p>"RU" - RUSSIA</p> </li>
    /// <li> <p>"RS" - SERBIA</p> </li>
    /// <li> <p>"SK" - SLOVAKIA</p> </li>
    /// <li> <p>"SI" - SLOVENIA</p> </li>
    /// <li> <p>"ZA" - SOUTH AFRICA</p> </li>
    /// <li> <p>"ES" - SPAIN</p> </li>
    /// <li> <p>"SE" - SWEDEN</p> </li>
    /// <li> <p>"CH" - SWITZERLAND</p> </li>
    /// <li> <p>"UA" - UKRAINE</p> </li>
    /// <li> <p>"AE" - UNITED ARAB EMIRATES</p> </li>
    /// <li> <p>"US" - UNITED STATES</p> </li>
    /// <li> <p>"UK" - UNITED KINGDOM</p> </li>
    /// <li> <p>"UY" - URUGUAY</p> </li>
    /// <li> <p>"VE" - VENEZUELA</p> </li>
    /// </ul>
    pub value: ::std::string::String,
}
impl SupplementaryFeature {
    /// <p>The name of the feature. Valid values: <code>"holiday"</code> and <code>"weather"</code>.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p> <b>Weather Index</b> </p>
    /// <p>To enable the Weather Index, set the value to <code>"true"</code> </p>
    /// <p> <b>Holidays</b> </p>
    /// <p>To enable Holidays, specify a country with one of the following two-letter country codes:</p>
    /// <ul>
    /// <li> <p>"AL" - ALBANIA</p> </li>
    /// <li> <p>"AR" - ARGENTINA</p> </li>
    /// <li> <p>"AT" - AUSTRIA</p> </li>
    /// <li> <p>"AU" - AUSTRALIA</p> </li>
    /// <li> <p>"BA" - BOSNIA HERZEGOVINA</p> </li>
    /// <li> <p>"BE" - BELGIUM</p> </li>
    /// <li> <p>"BG" - BULGARIA</p> </li>
    /// <li> <p>"BO" - BOLIVIA</p> </li>
    /// <li> <p>"BR" - BRAZIL</p> </li>
    /// <li> <p>"BY" - BELARUS</p> </li>
    /// <li> <p>"CA" - CANADA</p> </li>
    /// <li> <p>"CL" - CHILE</p> </li>
    /// <li> <p>"CO" - COLOMBIA</p> </li>
    /// <li> <p>"CR" - COSTA RICA</p> </li>
    /// <li> <p>"HR" - CROATIA</p> </li>
    /// <li> <p>"CZ" - CZECH REPUBLIC</p> </li>
    /// <li> <p>"DK" - DENMARK</p> </li>
    /// <li> <p>"EC" - ECUADOR</p> </li>
    /// <li> <p>"EE" - ESTONIA</p> </li>
    /// <li> <p>"ET" - ETHIOPIA</p> </li>
    /// <li> <p>"FI" - FINLAND</p> </li>
    /// <li> <p>"FR" - FRANCE</p> </li>
    /// <li> <p>"DE" - GERMANY</p> </li>
    /// <li> <p>"GR" - GREECE</p> </li>
    /// <li> <p>"HU" - HUNGARY</p> </li>
    /// <li> <p>"IS" - ICELAND</p> </li>
    /// <li> <p>"IN" - INDIA</p> </li>
    /// <li> <p>"IE" - IRELAND</p> </li>
    /// <li> <p>"IT" - ITALY</p> </li>
    /// <li> <p>"JP" - JAPAN</p> </li>
    /// <li> <p>"KZ" - KAZAKHSTAN</p> </li>
    /// <li> <p>"KR" - KOREA</p> </li>
    /// <li> <p>"LV" - LATVIA</p> </li>
    /// <li> <p>"LI" - LIECHTENSTEIN</p> </li>
    /// <li> <p>"LT" - LITHUANIA</p> </li>
    /// <li> <p>"LU" - LUXEMBOURG</p> </li>
    /// <li> <p>"MK" - MACEDONIA</p> </li>
    /// <li> <p>"MT" - MALTA</p> </li>
    /// <li> <p>"MX" - MEXICO</p> </li>
    /// <li> <p>"MD" - MOLDOVA</p> </li>
    /// <li> <p>"ME" - MONTENEGRO</p> </li>
    /// <li> <p>"NL" - NETHERLANDS</p> </li>
    /// <li> <p>"NZ" - NEW ZEALAND</p> </li>
    /// <li> <p>"NI" - NICARAGUA</p> </li>
    /// <li> <p>"NG" - NIGERIA</p> </li>
    /// <li> <p>"NO" - NORWAY</p> </li>
    /// <li> <p>"PA" - PANAMA</p> </li>
    /// <li> <p>"PY" - PARAGUAY</p> </li>
    /// <li> <p>"PE" - PERU</p> </li>
    /// <li> <p>"PL" - POLAND</p> </li>
    /// <li> <p>"PT" - PORTUGAL</p> </li>
    /// <li> <p>"RO" - ROMANIA</p> </li>
    /// <li> <p>"RU" - RUSSIA</p> </li>
    /// <li> <p>"RS" - SERBIA</p> </li>
    /// <li> <p>"SK" - SLOVAKIA</p> </li>
    /// <li> <p>"SI" - SLOVENIA</p> </li>
    /// <li> <p>"ZA" - SOUTH AFRICA</p> </li>
    /// <li> <p>"ES" - SPAIN</p> </li>
    /// <li> <p>"SE" - SWEDEN</p> </li>
    /// <li> <p>"CH" - SWITZERLAND</p> </li>
    /// <li> <p>"UA" - UKRAINE</p> </li>
    /// <li> <p>"AE" - UNITED ARAB EMIRATES</p> </li>
    /// <li> <p>"US" - UNITED STATES</p> </li>
    /// <li> <p>"UK" - UNITED KINGDOM</p> </li>
    /// <li> <p>"UY" - URUGUAY</p> </li>
    /// <li> <p>"VE" - VENEZUELA</p> </li>
    /// </ul>
    pub fn value(&self) -> &str {
        use std::ops::Deref;
        self.value.deref()
    }
}
impl SupplementaryFeature {
    /// Creates a new builder-style object to manufacture [`SupplementaryFeature`](crate::types::SupplementaryFeature).
    pub fn builder() -> crate::types::builders::SupplementaryFeatureBuilder {
        crate::types::builders::SupplementaryFeatureBuilder::default()
    }
}

/// A builder for [`SupplementaryFeature`](crate::types::SupplementaryFeature).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SupplementaryFeatureBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) value: ::std::option::Option<::std::string::String>,
}
impl SupplementaryFeatureBuilder {
    /// <p>The name of the feature. Valid values: <code>"holiday"</code> and <code>"weather"</code>.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the feature. Valid values: <code>"holiday"</code> and <code>"weather"</code>.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the feature. Valid values: <code>"holiday"</code> and <code>"weather"</code>.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p> <b>Weather Index</b> </p>
    /// <p>To enable the Weather Index, set the value to <code>"true"</code> </p>
    /// <p> <b>Holidays</b> </p>
    /// <p>To enable Holidays, specify a country with one of the following two-letter country codes:</p>
    /// <ul>
    /// <li> <p>"AL" - ALBANIA</p> </li>
    /// <li> <p>"AR" - ARGENTINA</p> </li>
    /// <li> <p>"AT" - AUSTRIA</p> </li>
    /// <li> <p>"AU" - AUSTRALIA</p> </li>
    /// <li> <p>"BA" - BOSNIA HERZEGOVINA</p> </li>
    /// <li> <p>"BE" - BELGIUM</p> </li>
    /// <li> <p>"BG" - BULGARIA</p> </li>
    /// <li> <p>"BO" - BOLIVIA</p> </li>
    /// <li> <p>"BR" - BRAZIL</p> </li>
    /// <li> <p>"BY" - BELARUS</p> </li>
    /// <li> <p>"CA" - CANADA</p> </li>
    /// <li> <p>"CL" - CHILE</p> </li>
    /// <li> <p>"CO" - COLOMBIA</p> </li>
    /// <li> <p>"CR" - COSTA RICA</p> </li>
    /// <li> <p>"HR" - CROATIA</p> </li>
    /// <li> <p>"CZ" - CZECH REPUBLIC</p> </li>
    /// <li> <p>"DK" - DENMARK</p> </li>
    /// <li> <p>"EC" - ECUADOR</p> </li>
    /// <li> <p>"EE" - ESTONIA</p> </li>
    /// <li> <p>"ET" - ETHIOPIA</p> </li>
    /// <li> <p>"FI" - FINLAND</p> </li>
    /// <li> <p>"FR" - FRANCE</p> </li>
    /// <li> <p>"DE" - GERMANY</p> </li>
    /// <li> <p>"GR" - GREECE</p> </li>
    /// <li> <p>"HU" - HUNGARY</p> </li>
    /// <li> <p>"IS" - ICELAND</p> </li>
    /// <li> <p>"IN" - INDIA</p> </li>
    /// <li> <p>"IE" - IRELAND</p> </li>
    /// <li> <p>"IT" - ITALY</p> </li>
    /// <li> <p>"JP" - JAPAN</p> </li>
    /// <li> <p>"KZ" - KAZAKHSTAN</p> </li>
    /// <li> <p>"KR" - KOREA</p> </li>
    /// <li> <p>"LV" - LATVIA</p> </li>
    /// <li> <p>"LI" - LIECHTENSTEIN</p> </li>
    /// <li> <p>"LT" - LITHUANIA</p> </li>
    /// <li> <p>"LU" - LUXEMBOURG</p> </li>
    /// <li> <p>"MK" - MACEDONIA</p> </li>
    /// <li> <p>"MT" - MALTA</p> </li>
    /// <li> <p>"MX" - MEXICO</p> </li>
    /// <li> <p>"MD" - MOLDOVA</p> </li>
    /// <li> <p>"ME" - MONTENEGRO</p> </li>
    /// <li> <p>"NL" - NETHERLANDS</p> </li>
    /// <li> <p>"NZ" - NEW ZEALAND</p> </li>
    /// <li> <p>"NI" - NICARAGUA</p> </li>
    /// <li> <p>"NG" - NIGERIA</p> </li>
    /// <li> <p>"NO" - NORWAY</p> </li>
    /// <li> <p>"PA" - PANAMA</p> </li>
    /// <li> <p>"PY" - PARAGUAY</p> </li>
    /// <li> <p>"PE" - PERU</p> </li>
    /// <li> <p>"PL" - POLAND</p> </li>
    /// <li> <p>"PT" - PORTUGAL</p> </li>
    /// <li> <p>"RO" - ROMANIA</p> </li>
    /// <li> <p>"RU" - RUSSIA</p> </li>
    /// <li> <p>"RS" - SERBIA</p> </li>
    /// <li> <p>"SK" - SLOVAKIA</p> </li>
    /// <li> <p>"SI" - SLOVENIA</p> </li>
    /// <li> <p>"ZA" - SOUTH AFRICA</p> </li>
    /// <li> <p>"ES" - SPAIN</p> </li>
    /// <li> <p>"SE" - SWEDEN</p> </li>
    /// <li> <p>"CH" - SWITZERLAND</p> </li>
    /// <li> <p>"UA" - UKRAINE</p> </li>
    /// <li> <p>"AE" - UNITED ARAB EMIRATES</p> </li>
    /// <li> <p>"US" - UNITED STATES</p> </li>
    /// <li> <p>"UK" - UNITED KINGDOM</p> </li>
    /// <li> <p>"UY" - URUGUAY</p> </li>
    /// <li> <p>"VE" - VENEZUELA</p> </li>
    /// </ul>
    /// This field is required.
    pub fn value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> <b>Weather Index</b> </p>
    /// <p>To enable the Weather Index, set the value to <code>"true"</code> </p>
    /// <p> <b>Holidays</b> </p>
    /// <p>To enable Holidays, specify a country with one of the following two-letter country codes:</p>
    /// <ul>
    /// <li> <p>"AL" - ALBANIA</p> </li>
    /// <li> <p>"AR" - ARGENTINA</p> </li>
    /// <li> <p>"AT" - AUSTRIA</p> </li>
    /// <li> <p>"AU" - AUSTRALIA</p> </li>
    /// <li> <p>"BA" - BOSNIA HERZEGOVINA</p> </li>
    /// <li> <p>"BE" - BELGIUM</p> </li>
    /// <li> <p>"BG" - BULGARIA</p> </li>
    /// <li> <p>"BO" - BOLIVIA</p> </li>
    /// <li> <p>"BR" - BRAZIL</p> </li>
    /// <li> <p>"BY" - BELARUS</p> </li>
    /// <li> <p>"CA" - CANADA</p> </li>
    /// <li> <p>"CL" - CHILE</p> </li>
    /// <li> <p>"CO" - COLOMBIA</p> </li>
    /// <li> <p>"CR" - COSTA RICA</p> </li>
    /// <li> <p>"HR" - CROATIA</p> </li>
    /// <li> <p>"CZ" - CZECH REPUBLIC</p> </li>
    /// <li> <p>"DK" - DENMARK</p> </li>
    /// <li> <p>"EC" - ECUADOR</p> </li>
    /// <li> <p>"EE" - ESTONIA</p> </li>
    /// <li> <p>"ET" - ETHIOPIA</p> </li>
    /// <li> <p>"FI" - FINLAND</p> </li>
    /// <li> <p>"FR" - FRANCE</p> </li>
    /// <li> <p>"DE" - GERMANY</p> </li>
    /// <li> <p>"GR" - GREECE</p> </li>
    /// <li> <p>"HU" - HUNGARY</p> </li>
    /// <li> <p>"IS" - ICELAND</p> </li>
    /// <li> <p>"IN" - INDIA</p> </li>
    /// <li> <p>"IE" - IRELAND</p> </li>
    /// <li> <p>"IT" - ITALY</p> </li>
    /// <li> <p>"JP" - JAPAN</p> </li>
    /// <li> <p>"KZ" - KAZAKHSTAN</p> </li>
    /// <li> <p>"KR" - KOREA</p> </li>
    /// <li> <p>"LV" - LATVIA</p> </li>
    /// <li> <p>"LI" - LIECHTENSTEIN</p> </li>
    /// <li> <p>"LT" - LITHUANIA</p> </li>
    /// <li> <p>"LU" - LUXEMBOURG</p> </li>
    /// <li> <p>"MK" - MACEDONIA</p> </li>
    /// <li> <p>"MT" - MALTA</p> </li>
    /// <li> <p>"MX" - MEXICO</p> </li>
    /// <li> <p>"MD" - MOLDOVA</p> </li>
    /// <li> <p>"ME" - MONTENEGRO</p> </li>
    /// <li> <p>"NL" - NETHERLANDS</p> </li>
    /// <li> <p>"NZ" - NEW ZEALAND</p> </li>
    /// <li> <p>"NI" - NICARAGUA</p> </li>
    /// <li> <p>"NG" - NIGERIA</p> </li>
    /// <li> <p>"NO" - NORWAY</p> </li>
    /// <li> <p>"PA" - PANAMA</p> </li>
    /// <li> <p>"PY" - PARAGUAY</p> </li>
    /// <li> <p>"PE" - PERU</p> </li>
    /// <li> <p>"PL" - POLAND</p> </li>
    /// <li> <p>"PT" - PORTUGAL</p> </li>
    /// <li> <p>"RO" - ROMANIA</p> </li>
    /// <li> <p>"RU" - RUSSIA</p> </li>
    /// <li> <p>"RS" - SERBIA</p> </li>
    /// <li> <p>"SK" - SLOVAKIA</p> </li>
    /// <li> <p>"SI" - SLOVENIA</p> </li>
    /// <li> <p>"ZA" - SOUTH AFRICA</p> </li>
    /// <li> <p>"ES" - SPAIN</p> </li>
    /// <li> <p>"SE" - SWEDEN</p> </li>
    /// <li> <p>"CH" - SWITZERLAND</p> </li>
    /// <li> <p>"UA" - UKRAINE</p> </li>
    /// <li> <p>"AE" - UNITED ARAB EMIRATES</p> </li>
    /// <li> <p>"US" - UNITED STATES</p> </li>
    /// <li> <p>"UK" - UNITED KINGDOM</p> </li>
    /// <li> <p>"UY" - URUGUAY</p> </li>
    /// <li> <p>"VE" - VENEZUELA</p> </li>
    /// </ul>
    pub fn set_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// <p> <b>Weather Index</b> </p>
    /// <p>To enable the Weather Index, set the value to <code>"true"</code> </p>
    /// <p> <b>Holidays</b> </p>
    /// <p>To enable Holidays, specify a country with one of the following two-letter country codes:</p>
    /// <ul>
    /// <li> <p>"AL" - ALBANIA</p> </li>
    /// <li> <p>"AR" - ARGENTINA</p> </li>
    /// <li> <p>"AT" - AUSTRIA</p> </li>
    /// <li> <p>"AU" - AUSTRALIA</p> </li>
    /// <li> <p>"BA" - BOSNIA HERZEGOVINA</p> </li>
    /// <li> <p>"BE" - BELGIUM</p> </li>
    /// <li> <p>"BG" - BULGARIA</p> </li>
    /// <li> <p>"BO" - BOLIVIA</p> </li>
    /// <li> <p>"BR" - BRAZIL</p> </li>
    /// <li> <p>"BY" - BELARUS</p> </li>
    /// <li> <p>"CA" - CANADA</p> </li>
    /// <li> <p>"CL" - CHILE</p> </li>
    /// <li> <p>"CO" - COLOMBIA</p> </li>
    /// <li> <p>"CR" - COSTA RICA</p> </li>
    /// <li> <p>"HR" - CROATIA</p> </li>
    /// <li> <p>"CZ" - CZECH REPUBLIC</p> </li>
    /// <li> <p>"DK" - DENMARK</p> </li>
    /// <li> <p>"EC" - ECUADOR</p> </li>
    /// <li> <p>"EE" - ESTONIA</p> </li>
    /// <li> <p>"ET" - ETHIOPIA</p> </li>
    /// <li> <p>"FI" - FINLAND</p> </li>
    /// <li> <p>"FR" - FRANCE</p> </li>
    /// <li> <p>"DE" - GERMANY</p> </li>
    /// <li> <p>"GR" - GREECE</p> </li>
    /// <li> <p>"HU" - HUNGARY</p> </li>
    /// <li> <p>"IS" - ICELAND</p> </li>
    /// <li> <p>"IN" - INDIA</p> </li>
    /// <li> <p>"IE" - IRELAND</p> </li>
    /// <li> <p>"IT" - ITALY</p> </li>
    /// <li> <p>"JP" - JAPAN</p> </li>
    /// <li> <p>"KZ" - KAZAKHSTAN</p> </li>
    /// <li> <p>"KR" - KOREA</p> </li>
    /// <li> <p>"LV" - LATVIA</p> </li>
    /// <li> <p>"LI" - LIECHTENSTEIN</p> </li>
    /// <li> <p>"LT" - LITHUANIA</p> </li>
    /// <li> <p>"LU" - LUXEMBOURG</p> </li>
    /// <li> <p>"MK" - MACEDONIA</p> </li>
    /// <li> <p>"MT" - MALTA</p> </li>
    /// <li> <p>"MX" - MEXICO</p> </li>
    /// <li> <p>"MD" - MOLDOVA</p> </li>
    /// <li> <p>"ME" - MONTENEGRO</p> </li>
    /// <li> <p>"NL" - NETHERLANDS</p> </li>
    /// <li> <p>"NZ" - NEW ZEALAND</p> </li>
    /// <li> <p>"NI" - NICARAGUA</p> </li>
    /// <li> <p>"NG" - NIGERIA</p> </li>
    /// <li> <p>"NO" - NORWAY</p> </li>
    /// <li> <p>"PA" - PANAMA</p> </li>
    /// <li> <p>"PY" - PARAGUAY</p> </li>
    /// <li> <p>"PE" - PERU</p> </li>
    /// <li> <p>"PL" - POLAND</p> </li>
    /// <li> <p>"PT" - PORTUGAL</p> </li>
    /// <li> <p>"RO" - ROMANIA</p> </li>
    /// <li> <p>"RU" - RUSSIA</p> </li>
    /// <li> <p>"RS" - SERBIA</p> </li>
    /// <li> <p>"SK" - SLOVAKIA</p> </li>
    /// <li> <p>"SI" - SLOVENIA</p> </li>
    /// <li> <p>"ZA" - SOUTH AFRICA</p> </li>
    /// <li> <p>"ES" - SPAIN</p> </li>
    /// <li> <p>"SE" - SWEDEN</p> </li>
    /// <li> <p>"CH" - SWITZERLAND</p> </li>
    /// <li> <p>"UA" - UKRAINE</p> </li>
    /// <li> <p>"AE" - UNITED ARAB EMIRATES</p> </li>
    /// <li> <p>"US" - UNITED STATES</p> </li>
    /// <li> <p>"UK" - UNITED KINGDOM</p> </li>
    /// <li> <p>"UY" - URUGUAY</p> </li>
    /// <li> <p>"VE" - VENEZUELA</p> </li>
    /// </ul>
    pub fn get_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.value
    }
    /// Consumes the builder and constructs a [`SupplementaryFeature`](crate::types::SupplementaryFeature).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::SupplementaryFeatureBuilder::name)
    /// - [`value`](crate::types::builders::SupplementaryFeatureBuilder::value)
    pub fn build(self) -> ::std::result::Result<crate::types::SupplementaryFeature, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SupplementaryFeature {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building SupplementaryFeature",
                )
            })?,
            value: self.value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "value",
                    "value was not specified but it is required when building SupplementaryFeature",
                )
            })?,
        })
    }
}
