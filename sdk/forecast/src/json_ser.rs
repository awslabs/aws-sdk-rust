// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_create_dataset_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateDatasetInput,
) {
    if let Some(var_1) = &input.dataset_name {
        object.key("DatasetName").string(var_1);
    }
    if let Some(var_2) = &input.domain {
        object.key("Domain").string(var_2.as_str());
    }
    if let Some(var_3) = &input.dataset_type {
        object.key("DatasetType").string(var_3.as_str());
    }
    if let Some(var_4) = &input.data_frequency {
        object.key("DataFrequency").string(var_4);
    }
    if let Some(var_5) = &input.schema {
        let mut object_6 = object.key("Schema").start_object();
        crate::json_ser::serialize_structure_crate_model_schema(&mut object_6, var_5);
        object_6.finish();
    }
    if let Some(var_7) = &input.encryption_config {
        let mut object_8 = object.key("EncryptionConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_encryption_config(&mut object_8, var_7);
        object_8.finish();
    }
    if let Some(var_9) = &input.tags {
        let mut array_10 = object.key("Tags").start_array();
        for item_11 in var_9 {
            {
                let mut object_12 = array_10.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_12, item_11);
                object_12.finish();
            }
        }
        array_10.finish();
    }
}

pub fn serialize_structure_crate_input_create_dataset_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateDatasetGroupInput,
) {
    if let Some(var_13) = &input.dataset_group_name {
        object.key("DatasetGroupName").string(var_13);
    }
    if let Some(var_14) = &input.domain {
        object.key("Domain").string(var_14.as_str());
    }
    if let Some(var_15) = &input.dataset_arns {
        let mut array_16 = object.key("DatasetArns").start_array();
        for item_17 in var_15 {
            {
                array_16.value().string(item_17);
            }
        }
        array_16.finish();
    }
    if let Some(var_18) = &input.tags {
        let mut array_19 = object.key("Tags").start_array();
        for item_20 in var_18 {
            {
                let mut object_21 = array_19.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_21, item_20);
                object_21.finish();
            }
        }
        array_19.finish();
    }
}

pub fn serialize_structure_crate_input_create_dataset_import_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateDatasetImportJobInput,
) {
    if let Some(var_22) = &input.dataset_import_job_name {
        object.key("DatasetImportJobName").string(var_22);
    }
    if let Some(var_23) = &input.dataset_arn {
        object.key("DatasetArn").string(var_23);
    }
    if let Some(var_24) = &input.data_source {
        let mut object_25 = object.key("DataSource").start_object();
        crate::json_ser::serialize_structure_crate_model_data_source(&mut object_25, var_24);
        object_25.finish();
    }
    if let Some(var_26) = &input.timestamp_format {
        object.key("TimestampFormat").string(var_26);
    }
    if let Some(var_27) = &input.time_zone {
        object.key("TimeZone").string(var_27);
    }
    if input.use_geolocation_for_time_zone {
        object
            .key("UseGeolocationForTimeZone")
            .boolean(input.use_geolocation_for_time_zone);
    }
    if let Some(var_28) = &input.geolocation_format {
        object.key("GeolocationFormat").string(var_28);
    }
    if let Some(var_29) = &input.tags {
        let mut array_30 = object.key("Tags").start_array();
        for item_31 in var_29 {
            {
                let mut object_32 = array_30.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_32, item_31);
                object_32.finish();
            }
        }
        array_30.finish();
    }
}

pub fn serialize_structure_crate_input_create_forecast_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateForecastInput,
) {
    if let Some(var_33) = &input.forecast_name {
        object.key("ForecastName").string(var_33);
    }
    if let Some(var_34) = &input.predictor_arn {
        object.key("PredictorArn").string(var_34);
    }
    if let Some(var_35) = &input.forecast_types {
        let mut array_36 = object.key("ForecastTypes").start_array();
        for item_37 in var_35 {
            {
                array_36.value().string(item_37);
            }
        }
        array_36.finish();
    }
    if let Some(var_38) = &input.tags {
        let mut array_39 = object.key("Tags").start_array();
        for item_40 in var_38 {
            {
                let mut object_41 = array_39.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_41, item_40);
                object_41.finish();
            }
        }
        array_39.finish();
    }
}

pub fn serialize_structure_crate_input_create_forecast_export_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateForecastExportJobInput,
) {
    if let Some(var_42) = &input.forecast_export_job_name {
        object.key("ForecastExportJobName").string(var_42);
    }
    if let Some(var_43) = &input.forecast_arn {
        object.key("ForecastArn").string(var_43);
    }
    if let Some(var_44) = &input.destination {
        let mut object_45 = object.key("Destination").start_object();
        crate::json_ser::serialize_structure_crate_model_data_destination(&mut object_45, var_44);
        object_45.finish();
    }
    if let Some(var_46) = &input.tags {
        let mut array_47 = object.key("Tags").start_array();
        for item_48 in var_46 {
            {
                let mut object_49 = array_47.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_49, item_48);
                object_49.finish();
            }
        }
        array_47.finish();
    }
}

pub fn serialize_structure_crate_input_create_predictor_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreatePredictorInput,
) {
    if let Some(var_50) = &input.predictor_name {
        object.key("PredictorName").string(var_50);
    }
    if let Some(var_51) = &input.algorithm_arn {
        object.key("AlgorithmArn").string(var_51);
    }
    if let Some(var_52) = &input.forecast_horizon {
        object.key("ForecastHorizon").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_52).into()),
        );
    }
    if let Some(var_53) = &input.forecast_types {
        let mut array_54 = object.key("ForecastTypes").start_array();
        for item_55 in var_53 {
            {
                array_54.value().string(item_55);
            }
        }
        array_54.finish();
    }
    if let Some(var_56) = &input.perform_auto_ml {
        object.key("PerformAutoML").boolean(*var_56);
    }
    if let Some(var_57) = &input.auto_ml_override_strategy {
        object.key("AutoMLOverrideStrategy").string(var_57.as_str());
    }
    if let Some(var_58) = &input.perform_hpo {
        object.key("PerformHPO").boolean(*var_58);
    }
    if let Some(var_59) = &input.training_parameters {
        let mut object_60 = object.key("TrainingParameters").start_object();
        for (key_61, value_62) in var_59 {
            {
                object_60.key(key_61).string(value_62);
            }
        }
        object_60.finish();
    }
    if let Some(var_63) = &input.evaluation_parameters {
        let mut object_64 = object.key("EvaluationParameters").start_object();
        crate::json_ser::serialize_structure_crate_model_evaluation_parameters(
            &mut object_64,
            var_63,
        );
        object_64.finish();
    }
    if let Some(var_65) = &input.hpo_config {
        let mut object_66 = object.key("HPOConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_hyper_parameter_tuning_job_config(
            &mut object_66,
            var_65,
        );
        object_66.finish();
    }
    if let Some(var_67) = &input.input_data_config {
        let mut object_68 = object.key("InputDataConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_input_data_config(&mut object_68, var_67);
        object_68.finish();
    }
    if let Some(var_69) = &input.featurization_config {
        let mut object_70 = object.key("FeaturizationConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_featurization_config(
            &mut object_70,
            var_69,
        );
        object_70.finish();
    }
    if let Some(var_71) = &input.encryption_config {
        let mut object_72 = object.key("EncryptionConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_encryption_config(&mut object_72, var_71);
        object_72.finish();
    }
    if let Some(var_73) = &input.tags {
        let mut array_74 = object.key("Tags").start_array();
        for item_75 in var_73 {
            {
                let mut object_76 = array_74.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_76, item_75);
                object_76.finish();
            }
        }
        array_74.finish();
    }
    if let Some(var_77) = &input.optimization_metric {
        object.key("OptimizationMetric").string(var_77.as_str());
    }
}

pub fn serialize_structure_crate_input_create_predictor_backtest_export_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreatePredictorBacktestExportJobInput,
) {
    if let Some(var_78) = &input.predictor_backtest_export_job_name {
        object.key("PredictorBacktestExportJobName").string(var_78);
    }
    if let Some(var_79) = &input.predictor_arn {
        object.key("PredictorArn").string(var_79);
    }
    if let Some(var_80) = &input.destination {
        let mut object_81 = object.key("Destination").start_object();
        crate::json_ser::serialize_structure_crate_model_data_destination(&mut object_81, var_80);
        object_81.finish();
    }
    if let Some(var_82) = &input.tags {
        let mut array_83 = object.key("Tags").start_array();
        for item_84 in var_82 {
            {
                let mut object_85 = array_83.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_85, item_84);
                object_85.finish();
            }
        }
        array_83.finish();
    }
}

pub fn serialize_structure_crate_input_delete_dataset_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteDatasetInput,
) {
    if let Some(var_86) = &input.dataset_arn {
        object.key("DatasetArn").string(var_86);
    }
}

pub fn serialize_structure_crate_input_delete_dataset_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteDatasetGroupInput,
) {
    if let Some(var_87) = &input.dataset_group_arn {
        object.key("DatasetGroupArn").string(var_87);
    }
}

pub fn serialize_structure_crate_input_delete_dataset_import_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteDatasetImportJobInput,
) {
    if let Some(var_88) = &input.dataset_import_job_arn {
        object.key("DatasetImportJobArn").string(var_88);
    }
}

pub fn serialize_structure_crate_input_delete_forecast_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteForecastInput,
) {
    if let Some(var_89) = &input.forecast_arn {
        object.key("ForecastArn").string(var_89);
    }
}

pub fn serialize_structure_crate_input_delete_forecast_export_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteForecastExportJobInput,
) {
    if let Some(var_90) = &input.forecast_export_job_arn {
        object.key("ForecastExportJobArn").string(var_90);
    }
}

pub fn serialize_structure_crate_input_delete_predictor_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeletePredictorInput,
) {
    if let Some(var_91) = &input.predictor_arn {
        object.key("PredictorArn").string(var_91);
    }
}

pub fn serialize_structure_crate_input_delete_predictor_backtest_export_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeletePredictorBacktestExportJobInput,
) {
    if let Some(var_92) = &input.predictor_backtest_export_job_arn {
        object.key("PredictorBacktestExportJobArn").string(var_92);
    }
}

pub fn serialize_structure_crate_input_delete_resource_tree_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteResourceTreeInput,
) {
    if let Some(var_93) = &input.resource_arn {
        object.key("ResourceArn").string(var_93);
    }
}

pub fn serialize_structure_crate_input_describe_dataset_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeDatasetInput,
) {
    if let Some(var_94) = &input.dataset_arn {
        object.key("DatasetArn").string(var_94);
    }
}

pub fn serialize_structure_crate_input_describe_dataset_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeDatasetGroupInput,
) {
    if let Some(var_95) = &input.dataset_group_arn {
        object.key("DatasetGroupArn").string(var_95);
    }
}

pub fn serialize_structure_crate_input_describe_dataset_import_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeDatasetImportJobInput,
) {
    if let Some(var_96) = &input.dataset_import_job_arn {
        object.key("DatasetImportJobArn").string(var_96);
    }
}

pub fn serialize_structure_crate_input_describe_forecast_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeForecastInput,
) {
    if let Some(var_97) = &input.forecast_arn {
        object.key("ForecastArn").string(var_97);
    }
}

pub fn serialize_structure_crate_input_describe_forecast_export_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeForecastExportJobInput,
) {
    if let Some(var_98) = &input.forecast_export_job_arn {
        object.key("ForecastExportJobArn").string(var_98);
    }
}

pub fn serialize_structure_crate_input_describe_predictor_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribePredictorInput,
) {
    if let Some(var_99) = &input.predictor_arn {
        object.key("PredictorArn").string(var_99);
    }
}

pub fn serialize_structure_crate_input_describe_predictor_backtest_export_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribePredictorBacktestExportJobInput,
) {
    if let Some(var_100) = &input.predictor_backtest_export_job_arn {
        object.key("PredictorBacktestExportJobArn").string(var_100);
    }
}

pub fn serialize_structure_crate_input_get_accuracy_metrics_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetAccuracyMetricsInput,
) {
    if let Some(var_101) = &input.predictor_arn {
        object.key("PredictorArn").string(var_101);
    }
}

pub fn serialize_structure_crate_input_list_dataset_groups_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListDatasetGroupsInput,
) {
    if let Some(var_102) = &input.next_token {
        object.key("NextToken").string(var_102);
    }
    if let Some(var_103) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_103).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_dataset_import_jobs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListDatasetImportJobsInput,
) {
    if let Some(var_104) = &input.next_token {
        object.key("NextToken").string(var_104);
    }
    if let Some(var_105) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_105).into()),
        );
    }
    if let Some(var_106) = &input.filters {
        let mut array_107 = object.key("Filters").start_array();
        for item_108 in var_106 {
            {
                let mut object_109 = array_107.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_109, item_108);
                object_109.finish();
            }
        }
        array_107.finish();
    }
}

pub fn serialize_structure_crate_input_list_datasets_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListDatasetsInput,
) {
    if let Some(var_110) = &input.next_token {
        object.key("NextToken").string(var_110);
    }
    if let Some(var_111) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_111).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_forecast_export_jobs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListForecastExportJobsInput,
) {
    if let Some(var_112) = &input.next_token {
        object.key("NextToken").string(var_112);
    }
    if let Some(var_113) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_113).into()),
        );
    }
    if let Some(var_114) = &input.filters {
        let mut array_115 = object.key("Filters").start_array();
        for item_116 in var_114 {
            {
                let mut object_117 = array_115.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_117, item_116);
                object_117.finish();
            }
        }
        array_115.finish();
    }
}

pub fn serialize_structure_crate_input_list_forecasts_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListForecastsInput,
) {
    if let Some(var_118) = &input.next_token {
        object.key("NextToken").string(var_118);
    }
    if let Some(var_119) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_119).into()),
        );
    }
    if let Some(var_120) = &input.filters {
        let mut array_121 = object.key("Filters").start_array();
        for item_122 in var_120 {
            {
                let mut object_123 = array_121.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_123, item_122);
                object_123.finish();
            }
        }
        array_121.finish();
    }
}

pub fn serialize_structure_crate_input_list_predictor_backtest_export_jobs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListPredictorBacktestExportJobsInput,
) {
    if let Some(var_124) = &input.next_token {
        object.key("NextToken").string(var_124);
    }
    if let Some(var_125) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_125).into()),
        );
    }
    if let Some(var_126) = &input.filters {
        let mut array_127 = object.key("Filters").start_array();
        for item_128 in var_126 {
            {
                let mut object_129 = array_127.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_129, item_128);
                object_129.finish();
            }
        }
        array_127.finish();
    }
}

pub fn serialize_structure_crate_input_list_predictors_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListPredictorsInput,
) {
    if let Some(var_130) = &input.next_token {
        object.key("NextToken").string(var_130);
    }
    if let Some(var_131) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_131).into()),
        );
    }
    if let Some(var_132) = &input.filters {
        let mut array_133 = object.key("Filters").start_array();
        for item_134 in var_132 {
            {
                let mut object_135 = array_133.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_135, item_134);
                object_135.finish();
            }
        }
        array_133.finish();
    }
}

pub fn serialize_structure_crate_input_list_tags_for_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListTagsForResourceInput,
) {
    if let Some(var_136) = &input.resource_arn {
        object.key("ResourceArn").string(var_136);
    }
}

pub fn serialize_structure_crate_input_stop_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StopResourceInput,
) {
    if let Some(var_137) = &input.resource_arn {
        object.key("ResourceArn").string(var_137);
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_138) = &input.resource_arn {
        object.key("ResourceArn").string(var_138);
    }
    if let Some(var_139) = &input.tags {
        let mut array_140 = object.key("Tags").start_array();
        for item_141 in var_139 {
            {
                let mut object_142 = array_140.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_142, item_141);
                object_142.finish();
            }
        }
        array_140.finish();
    }
}

pub fn serialize_structure_crate_input_untag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagResourceInput,
) {
    if let Some(var_143) = &input.resource_arn {
        object.key("ResourceArn").string(var_143);
    }
    if let Some(var_144) = &input.tag_keys {
        let mut array_145 = object.key("TagKeys").start_array();
        for item_146 in var_144 {
            {
                array_145.value().string(item_146);
            }
        }
        array_145.finish();
    }
}

pub fn serialize_structure_crate_input_update_dataset_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateDatasetGroupInput,
) {
    if let Some(var_147) = &input.dataset_group_arn {
        object.key("DatasetGroupArn").string(var_147);
    }
    if let Some(var_148) = &input.dataset_arns {
        let mut array_149 = object.key("DatasetArns").start_array();
        for item_150 in var_148 {
            {
                array_149.value().string(item_150);
            }
        }
        array_149.finish();
    }
}

pub fn serialize_structure_crate_model_schema(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Schema,
) {
    if let Some(var_151) = &input.attributes {
        let mut array_152 = object.key("Attributes").start_array();
        for item_153 in var_151 {
            {
                let mut object_154 = array_152.value().start_object();
                crate::json_ser::serialize_structure_crate_model_schema_attribute(
                    &mut object_154,
                    item_153,
                );
                object_154.finish();
            }
        }
        array_152.finish();
    }
}

pub fn serialize_structure_crate_model_encryption_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::EncryptionConfig,
) {
    if let Some(var_155) = &input.role_arn {
        object.key("RoleArn").string(var_155);
    }
    if let Some(var_156) = &input.kms_key_arn {
        object.key("KMSKeyArn").string(var_156);
    }
}

pub fn serialize_structure_crate_model_tag(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) {
    if let Some(var_157) = &input.key {
        object.key("Key").string(var_157);
    }
    if let Some(var_158) = &input.value {
        object.key("Value").string(var_158);
    }
}

pub fn serialize_structure_crate_model_data_source(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DataSource,
) {
    if let Some(var_159) = &input.s3_config {
        let mut object_160 = object.key("S3Config").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_config(&mut object_160, var_159);
        object_160.finish();
    }
}

pub fn serialize_structure_crate_model_data_destination(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DataDestination,
) {
    if let Some(var_161) = &input.s3_config {
        let mut object_162 = object.key("S3Config").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_config(&mut object_162, var_161);
        object_162.finish();
    }
}

pub fn serialize_structure_crate_model_evaluation_parameters(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::EvaluationParameters,
) {
    if let Some(var_163) = &input.number_of_backtest_windows {
        object.key("NumberOfBacktestWindows").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_163).into()),
        );
    }
    if let Some(var_164) = &input.back_test_window_offset {
        object.key("BackTestWindowOffset").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_164).into()),
        );
    }
}

pub fn serialize_structure_crate_model_hyper_parameter_tuning_job_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HyperParameterTuningJobConfig,
) {
    if let Some(var_165) = &input.parameter_ranges {
        let mut object_166 = object.key("ParameterRanges").start_object();
        crate::json_ser::serialize_structure_crate_model_parameter_ranges(&mut object_166, var_165);
        object_166.finish();
    }
}

pub fn serialize_structure_crate_model_input_data_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::InputDataConfig,
) {
    if let Some(var_167) = &input.dataset_group_arn {
        object.key("DatasetGroupArn").string(var_167);
    }
    if let Some(var_168) = &input.supplementary_features {
        let mut array_169 = object.key("SupplementaryFeatures").start_array();
        for item_170 in var_168 {
            {
                let mut object_171 = array_169.value().start_object();
                crate::json_ser::serialize_structure_crate_model_supplementary_feature(
                    &mut object_171,
                    item_170,
                );
                object_171.finish();
            }
        }
        array_169.finish();
    }
}

pub fn serialize_structure_crate_model_featurization_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::FeaturizationConfig,
) {
    if let Some(var_172) = &input.forecast_frequency {
        object.key("ForecastFrequency").string(var_172);
    }
    if let Some(var_173) = &input.forecast_dimensions {
        let mut array_174 = object.key("ForecastDimensions").start_array();
        for item_175 in var_173 {
            {
                array_174.value().string(item_175);
            }
        }
        array_174.finish();
    }
    if let Some(var_176) = &input.featurizations {
        let mut array_177 = object.key("Featurizations").start_array();
        for item_178 in var_176 {
            {
                let mut object_179 = array_177.value().start_object();
                crate::json_ser::serialize_structure_crate_model_featurization(
                    &mut object_179,
                    item_178,
                );
                object_179.finish();
            }
        }
        array_177.finish();
    }
}

pub fn serialize_structure_crate_model_filter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Filter,
) {
    if let Some(var_180) = &input.key {
        object.key("Key").string(var_180);
    }
    if let Some(var_181) = &input.value {
        object.key("Value").string(var_181);
    }
    if let Some(var_182) = &input.condition {
        object.key("Condition").string(var_182.as_str());
    }
}

pub fn serialize_structure_crate_model_schema_attribute(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SchemaAttribute,
) {
    if let Some(var_183) = &input.attribute_name {
        object.key("AttributeName").string(var_183);
    }
    if let Some(var_184) = &input.attribute_type {
        object.key("AttributeType").string(var_184.as_str());
    }
}

pub fn serialize_structure_crate_model_s3_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3Config,
) {
    if let Some(var_185) = &input.path {
        object.key("Path").string(var_185);
    }
    if let Some(var_186) = &input.role_arn {
        object.key("RoleArn").string(var_186);
    }
    if let Some(var_187) = &input.kms_key_arn {
        object.key("KMSKeyArn").string(var_187);
    }
}

pub fn serialize_structure_crate_model_parameter_ranges(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ParameterRanges,
) {
    if let Some(var_188) = &input.categorical_parameter_ranges {
        let mut array_189 = object.key("CategoricalParameterRanges").start_array();
        for item_190 in var_188 {
            {
                let mut object_191 = array_189.value().start_object();
                crate::json_ser::serialize_structure_crate_model_categorical_parameter_range(
                    &mut object_191,
                    item_190,
                );
                object_191.finish();
            }
        }
        array_189.finish();
    }
    if let Some(var_192) = &input.continuous_parameter_ranges {
        let mut array_193 = object.key("ContinuousParameterRanges").start_array();
        for item_194 in var_192 {
            {
                let mut object_195 = array_193.value().start_object();
                crate::json_ser::serialize_structure_crate_model_continuous_parameter_range(
                    &mut object_195,
                    item_194,
                );
                object_195.finish();
            }
        }
        array_193.finish();
    }
    if let Some(var_196) = &input.integer_parameter_ranges {
        let mut array_197 = object.key("IntegerParameterRanges").start_array();
        for item_198 in var_196 {
            {
                let mut object_199 = array_197.value().start_object();
                crate::json_ser::serialize_structure_crate_model_integer_parameter_range(
                    &mut object_199,
                    item_198,
                );
                object_199.finish();
            }
        }
        array_197.finish();
    }
}

pub fn serialize_structure_crate_model_supplementary_feature(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SupplementaryFeature,
) {
    if let Some(var_200) = &input.name {
        object.key("Name").string(var_200);
    }
    if let Some(var_201) = &input.value {
        object.key("Value").string(var_201);
    }
}

pub fn serialize_structure_crate_model_featurization(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Featurization,
) {
    if let Some(var_202) = &input.attribute_name {
        object.key("AttributeName").string(var_202);
    }
    if let Some(var_203) = &input.featurization_pipeline {
        let mut array_204 = object.key("FeaturizationPipeline").start_array();
        for item_205 in var_203 {
            {
                let mut object_206 = array_204.value().start_object();
                crate::json_ser::serialize_structure_crate_model_featurization_method(
                    &mut object_206,
                    item_205,
                );
                object_206.finish();
            }
        }
        array_204.finish();
    }
}

pub fn serialize_structure_crate_model_categorical_parameter_range(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CategoricalParameterRange,
) {
    if let Some(var_207) = &input.name {
        object.key("Name").string(var_207);
    }
    if let Some(var_208) = &input.values {
        let mut array_209 = object.key("Values").start_array();
        for item_210 in var_208 {
            {
                array_209.value().string(item_210);
            }
        }
        array_209.finish();
    }
}

pub fn serialize_structure_crate_model_continuous_parameter_range(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ContinuousParameterRange,
) {
    if let Some(var_211) = &input.name {
        object.key("Name").string(var_211);
    }
    if let Some(var_212) = &input.max_value {
        object.key("MaxValue").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_212).into()),
        );
    }
    if let Some(var_213) = &input.min_value {
        object.key("MinValue").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_213).into()),
        );
    }
    if let Some(var_214) = &input.scaling_type {
        object.key("ScalingType").string(var_214.as_str());
    }
}

pub fn serialize_structure_crate_model_integer_parameter_range(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::IntegerParameterRange,
) {
    if let Some(var_215) = &input.name {
        object.key("Name").string(var_215);
    }
    if let Some(var_216) = &input.max_value {
        object.key("MaxValue").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_216).into()),
        );
    }
    if let Some(var_217) = &input.min_value {
        object.key("MinValue").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_217).into()),
        );
    }
    if let Some(var_218) = &input.scaling_type {
        object.key("ScalingType").string(var_218.as_str());
    }
}

pub fn serialize_structure_crate_model_featurization_method(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::FeaturizationMethod,
) {
    if let Some(var_219) = &input.featurization_method_name {
        object
            .key("FeaturizationMethodName")
            .string(var_219.as_str());
    }
    if let Some(var_220) = &input.featurization_method_parameters {
        let mut object_221 = object.key("FeaturizationMethodParameters").start_object();
        for (key_222, value_223) in var_220 {
            {
                object_221.key(key_222).string(value_223);
            }
        }
        object_221.finish();
    }
}
