// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListMonitorEvaluationsOutput {
    /// <p>If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The monitoring results and predictor events collected by the monitor resource during different windows of time.</p>
    /// <p>For information about monitoring see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing Monitoring Results</a>. For more information about retrieving monitoring results see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing Monitoring Results</a>.</p>
    #[doc(hidden)]
    pub predictor_monitor_evaluations:
        std::option::Option<std::vec::Vec<crate::types::PredictorMonitorEvaluation>>,
    _request_id: Option<String>,
}
impl ListMonitorEvaluationsOutput {
    /// <p>If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The monitoring results and predictor events collected by the monitor resource during different windows of time.</p>
    /// <p>For information about monitoring see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing Monitoring Results</a>. For more information about retrieving monitoring results see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing Monitoring Results</a>.</p>
    pub fn predictor_monitor_evaluations(
        &self,
    ) -> std::option::Option<&[crate::types::PredictorMonitorEvaluation]> {
        self.predictor_monitor_evaluations.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListMonitorEvaluationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListMonitorEvaluationsOutput {
    /// Creates a new builder-style object to manufacture [`ListMonitorEvaluationsOutput`](crate::operation::list_monitor_evaluations::ListMonitorEvaluationsOutput).
    pub fn builder(
    ) -> crate::operation::list_monitor_evaluations::builders::ListMonitorEvaluationsOutputBuilder
    {
        crate::operation::list_monitor_evaluations::builders::ListMonitorEvaluationsOutputBuilder::default()
    }
}

/// A builder for [`ListMonitorEvaluationsOutput`](crate::operation::list_monitor_evaluations::ListMonitorEvaluationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListMonitorEvaluationsOutputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) predictor_monitor_evaluations:
        std::option::Option<std::vec::Vec<crate::types::PredictorMonitorEvaluation>>,
    _request_id: Option<String>,
}
impl ListMonitorEvaluationsOutputBuilder {
    /// <p>If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Appends an item to `predictor_monitor_evaluations`.
    ///
    /// To override the contents of this collection use [`set_predictor_monitor_evaluations`](Self::set_predictor_monitor_evaluations).
    ///
    /// <p>The monitoring results and predictor events collected by the monitor resource during different windows of time.</p>
    /// <p>For information about monitoring see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing Monitoring Results</a>. For more information about retrieving monitoring results see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing Monitoring Results</a>.</p>
    pub fn predictor_monitor_evaluations(
        mut self,
        input: crate::types::PredictorMonitorEvaluation,
    ) -> Self {
        let mut v = self.predictor_monitor_evaluations.unwrap_or_default();
        v.push(input);
        self.predictor_monitor_evaluations = Some(v);
        self
    }
    /// <p>The monitoring results and predictor events collected by the monitor resource during different windows of time.</p>
    /// <p>For information about monitoring see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing Monitoring Results</a>. For more information about retrieving monitoring results see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing Monitoring Results</a>.</p>
    pub fn set_predictor_monitor_evaluations(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PredictorMonitorEvaluation>>,
    ) -> Self {
        self.predictor_monitor_evaluations = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListMonitorEvaluationsOutput`](crate::operation::list_monitor_evaluations::ListMonitorEvaluationsOutput).
    pub fn build(self) -> crate::operation::list_monitor_evaluations::ListMonitorEvaluationsOutput {
        crate::operation::list_monitor_evaluations::ListMonitorEvaluationsOutput {
            next_token: self.next_token,
            predictor_monitor_evaluations: self.predictor_monitor_evaluations,
            _request_id: self._request_id,
        }
    }
}
