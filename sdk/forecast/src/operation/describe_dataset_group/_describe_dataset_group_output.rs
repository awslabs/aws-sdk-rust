// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeDatasetGroupOutput {
    /// <p>The name of the dataset group.</p>
    #[doc(hidden)]
    pub dataset_group_name: std::option::Option<std::string::String>,
    /// <p>The ARN of the dataset group.</p>
    #[doc(hidden)]
    pub dataset_group_arn: std::option::Option<std::string::String>,
    /// <p>An array of Amazon Resource Names (ARNs) of the datasets contained in the dataset group.</p>
    #[doc(hidden)]
    pub dataset_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The domain associated with the dataset group.</p>
    #[doc(hidden)]
    pub domain: std::option::Option<crate::types::Domain>,
    /// <p>The status of the dataset group. States include:</p>
    /// <ul>
    /// <li> <p> <code>ACTIVE</code> </p> </li>
    /// <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>
    /// <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li>
    /// <li> <p> <code>UPDATE_PENDING</code>, <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li>
    /// </ul>
    /// <p>The <code>UPDATE</code> states apply when you call the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a> operation.</p> <note>
    /// <p>The <code>Status</code> of the dataset group must be <code>ACTIVE</code> before you can use the dataset group to create a predictor.</p>
    /// </note>
    #[doc(hidden)]
    pub status: std::option::Option<std::string::String>,
    /// <p>When the dataset group was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>When the dataset group was created or last updated from a call to the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a> operation. While the dataset group is being updated, <code>LastModificationTime</code> is the current time of the <code>DescribeDatasetGroup</code> call.</p>
    #[doc(hidden)]
    pub last_modification_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl DescribeDatasetGroupOutput {
    /// <p>The name of the dataset group.</p>
    pub fn dataset_group_name(&self) -> std::option::Option<&str> {
        self.dataset_group_name.as_deref()
    }
    /// <p>The ARN of the dataset group.</p>
    pub fn dataset_group_arn(&self) -> std::option::Option<&str> {
        self.dataset_group_arn.as_deref()
    }
    /// <p>An array of Amazon Resource Names (ARNs) of the datasets contained in the dataset group.</p>
    pub fn dataset_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.dataset_arns.as_deref()
    }
    /// <p>The domain associated with the dataset group.</p>
    pub fn domain(&self) -> std::option::Option<&crate::types::Domain> {
        self.domain.as_ref()
    }
    /// <p>The status of the dataset group. States include:</p>
    /// <ul>
    /// <li> <p> <code>ACTIVE</code> </p> </li>
    /// <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>
    /// <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li>
    /// <li> <p> <code>UPDATE_PENDING</code>, <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li>
    /// </ul>
    /// <p>The <code>UPDATE</code> states apply when you call the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a> operation.</p> <note>
    /// <p>The <code>Status</code> of the dataset group must be <code>ACTIVE</code> before you can use the dataset group to create a predictor.</p>
    /// </note>
    pub fn status(&self) -> std::option::Option<&str> {
        self.status.as_deref()
    }
    /// <p>When the dataset group was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>When the dataset group was created or last updated from a call to the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a> operation. While the dataset group is being updated, <code>LastModificationTime</code> is the current time of the <code>DescribeDatasetGroup</code> call.</p>
    pub fn last_modification_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modification_time.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeDatasetGroupOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeDatasetGroupOutput {
    /// Creates a new builder-style object to manufacture [`DescribeDatasetGroupOutput`](crate::operation::describe_dataset_group::DescribeDatasetGroupOutput).
    pub fn builder(
    ) -> crate::operation::describe_dataset_group::builders::DescribeDatasetGroupOutputBuilder {
        crate::operation::describe_dataset_group::builders::DescribeDatasetGroupOutputBuilder::default()
    }
}

/// A builder for [`DescribeDatasetGroupOutput`](crate::operation::describe_dataset_group::DescribeDatasetGroupOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeDatasetGroupOutputBuilder {
    pub(crate) dataset_group_name: std::option::Option<std::string::String>,
    pub(crate) dataset_group_arn: std::option::Option<std::string::String>,
    pub(crate) dataset_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) domain: std::option::Option<crate::types::Domain>,
    pub(crate) status: std::option::Option<std::string::String>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modification_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl DescribeDatasetGroupOutputBuilder {
    /// <p>The name of the dataset group.</p>
    pub fn dataset_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.dataset_group_name = Some(input.into());
        self
    }
    /// <p>The name of the dataset group.</p>
    pub fn set_dataset_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.dataset_group_name = input;
        self
    }
    /// <p>The ARN of the dataset group.</p>
    pub fn dataset_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.dataset_group_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the dataset group.</p>
    pub fn set_dataset_group_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.dataset_group_arn = input;
        self
    }
    /// Appends an item to `dataset_arns`.
    ///
    /// To override the contents of this collection use [`set_dataset_arns`](Self::set_dataset_arns).
    ///
    /// <p>An array of Amazon Resource Names (ARNs) of the datasets contained in the dataset group.</p>
    pub fn dataset_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.dataset_arns.unwrap_or_default();
        v.push(input.into());
        self.dataset_arns = Some(v);
        self
    }
    /// <p>An array of Amazon Resource Names (ARNs) of the datasets contained in the dataset group.</p>
    pub fn set_dataset_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.dataset_arns = input;
        self
    }
    /// <p>The domain associated with the dataset group.</p>
    pub fn domain(mut self, input: crate::types::Domain) -> Self {
        self.domain = Some(input);
        self
    }
    /// <p>The domain associated with the dataset group.</p>
    pub fn set_domain(mut self, input: std::option::Option<crate::types::Domain>) -> Self {
        self.domain = input;
        self
    }
    /// <p>The status of the dataset group. States include:</p>
    /// <ul>
    /// <li> <p> <code>ACTIVE</code> </p> </li>
    /// <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>
    /// <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li>
    /// <li> <p> <code>UPDATE_PENDING</code>, <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li>
    /// </ul>
    /// <p>The <code>UPDATE</code> states apply when you call the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a> operation.</p> <note>
    /// <p>The <code>Status</code> of the dataset group must be <code>ACTIVE</code> before you can use the dataset group to create a predictor.</p>
    /// </note>
    pub fn status(mut self, input: impl Into<std::string::String>) -> Self {
        self.status = Some(input.into());
        self
    }
    /// <p>The status of the dataset group. States include:</p>
    /// <ul>
    /// <li> <p> <code>ACTIVE</code> </p> </li>
    /// <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li>
    /// <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li>
    /// <li> <p> <code>UPDATE_PENDING</code>, <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li>
    /// </ul>
    /// <p>The <code>UPDATE</code> states apply when you call the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a> operation.</p> <note>
    /// <p>The <code>Status</code> of the dataset group must be <code>ACTIVE</code> before you can use the dataset group to create a predictor.</p>
    /// </note>
    pub fn set_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>When the dataset group was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>When the dataset group was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>When the dataset group was created or last updated from a call to the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a> operation. While the dataset group is being updated, <code>LastModificationTime</code> is the current time of the <code>DescribeDatasetGroup</code> call.</p>
    pub fn last_modification_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modification_time = Some(input);
        self
    }
    /// <p>When the dataset group was created or last updated from a call to the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a> operation. While the dataset group is being updated, <code>LastModificationTime</code> is the current time of the <code>DescribeDatasetGroup</code> call.</p>
    pub fn set_last_modification_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modification_time = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDatasetGroupOutput`](crate::operation::describe_dataset_group::DescribeDatasetGroupOutput).
    pub fn build(self) -> crate::operation::describe_dataset_group::DescribeDatasetGroupOutput {
        crate::operation::describe_dataset_group::DescribeDatasetGroupOutput {
            dataset_group_name: self.dataset_group_name,
            dataset_group_arn: self.dataset_group_arn,
            dataset_arns: self.dataset_arns,
            domain: self.domain,
            status: self.status,
            creation_time: self.creation_time,
            last_modification_time: self.last_modification_time,
            _request_id: self._request_id,
        }
    }
}
