// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_what_if_forecast_export_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_what_if_forecast_export::CreateWhatIfForecastExportInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.what_if_forecast_export_name {
        object
            .key("WhatIfForecastExportName")
            .string(var_1.as_str());
    }
    if let Some(var_2) = &input.what_if_forecast_arns {
        let mut array_3 = object.key("WhatIfForecastArns").start_array();
        for item_4 in var_2 {
            {
                array_3.value().string(item_4.as_str());
            }
        }
        array_3.finish();
    }
    if let Some(var_5) = &input.destination {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Destination").start_object();
        crate::protocol_serde::shape_data_destination::ser_data_destination(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.tags {
        let mut array_8 = object.key("Tags").start_array();
        for item_9 in var_7 {
            {
                #[allow(unused_mut)]
                let mut object_10 = array_8.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_10, item_9)?;
                object_10.finish();
            }
        }
        array_8.finish();
    }
    if let Some(var_11) = &input.format {
        object.key("Format").string(var_11.as_str());
    }
    Ok(())
}
