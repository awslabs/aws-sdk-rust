// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_what_if_forecast_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_what_if_forecast::CreateWhatIfForecastInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.what_if_forecast_name {
        object.key("WhatIfForecastName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.what_if_analysis_arn {
        object.key("WhatIfAnalysisArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.time_series_transformations {
        let mut array_4 = object.key("TimeSeriesTransformations").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_time_series_transformation::ser_time_series_transformation(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if let Some(var_7) = &input.time_series_replacements_data_source {
        #[allow(unused_mut)]
        let mut object_8 = object.key("TimeSeriesReplacementsDataSource").start_object();
        crate::protocol_serde::shape_time_series_replacements_data_source::ser_time_series_replacements_data_source(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.tags {
        let mut array_10 = object.key("Tags").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_12, item_11)?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    Ok(())
}
