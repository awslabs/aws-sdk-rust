// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RestoreFromRecoveryPointOutput {
    /// <p>The unique identifier of the recovery point used for the restore.</p>
    #[doc(hidden)]
    pub recovery_point_id: std::option::Option<std::string::String>,
    /// <p>The namespace that data was restored into.</p>
    #[doc(hidden)]
    pub namespace: std::option::Option<crate::types::Namespace>,
    _request_id: Option<String>,
}
impl RestoreFromRecoveryPointOutput {
    /// <p>The unique identifier of the recovery point used for the restore.</p>
    pub fn recovery_point_id(&self) -> std::option::Option<&str> {
        self.recovery_point_id.as_deref()
    }
    /// <p>The namespace that data was restored into.</p>
    pub fn namespace(&self) -> std::option::Option<&crate::types::Namespace> {
        self.namespace.as_ref()
    }
}
impl aws_http::request_id::RequestId for RestoreFromRecoveryPointOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RestoreFromRecoveryPointOutput {
    /// Creates a new builder-style object to manufacture [`RestoreFromRecoveryPointOutput`](crate::operation::restore_from_recovery_point::RestoreFromRecoveryPointOutput).
    pub fn builder() -> crate::operation::restore_from_recovery_point::builders::RestoreFromRecoveryPointOutputBuilder{
        crate::operation::restore_from_recovery_point::builders::RestoreFromRecoveryPointOutputBuilder::default()
    }
}

/// A builder for [`RestoreFromRecoveryPointOutput`](crate::operation::restore_from_recovery_point::RestoreFromRecoveryPointOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RestoreFromRecoveryPointOutputBuilder {
    pub(crate) recovery_point_id: std::option::Option<std::string::String>,
    pub(crate) namespace: std::option::Option<crate::types::Namespace>,
    _request_id: Option<String>,
}
impl RestoreFromRecoveryPointOutputBuilder {
    /// <p>The unique identifier of the recovery point used for the restore.</p>
    pub fn recovery_point_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.recovery_point_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the recovery point used for the restore.</p>
    pub fn set_recovery_point_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.recovery_point_id = input;
        self
    }
    /// <p>The namespace that data was restored into.</p>
    pub fn namespace(mut self, input: crate::types::Namespace) -> Self {
        self.namespace = Some(input);
        self
    }
    /// <p>The namespace that data was restored into.</p>
    pub fn set_namespace(mut self, input: std::option::Option<crate::types::Namespace>) -> Self {
        self.namespace = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RestoreFromRecoveryPointOutput`](crate::operation::restore_from_recovery_point::RestoreFromRecoveryPointOutput).
    pub fn build(
        self,
    ) -> crate::operation::restore_from_recovery_point::RestoreFromRecoveryPointOutput {
        crate::operation::restore_from_recovery_point::RestoreFromRecoveryPointOutput {
            recovery_point_id: self.recovery_point_id,
            namespace: self.namespace,
            _request_id: self._request_id,
        }
    }
}
