// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_workgroup_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_workgroup::UpdateWorkgroupInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.workgroup_name {
        object.key("workgroupName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.base_capacity {
        object.key("baseCapacity").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    if let Some(var_3) = &input.enhanced_vpc_routing {
        object.key("enhancedVpcRouting").boolean(*var_3);
    }
    if let Some(var_4) = &input.config_parameters {
        let mut array_5 = object.key("configParameters").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_config_parameter::ser_config_parameter(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    if let Some(var_8) = &input.publicly_accessible {
        object.key("publiclyAccessible").boolean(*var_8);
    }
    if let Some(var_9) = &input.subnet_ids {
        let mut array_10 = object.key("subnetIds").start_array();
        for item_11 in var_9 {
            {
                array_10.value().string(item_11.as_str());
            }
        }
        array_10.finish();
    }
    if let Some(var_12) = &input.security_group_ids {
        let mut array_13 = object.key("securityGroupIds").start_array();
        for item_14 in var_12 {
            {
                array_13.value().string(item_14.as_str());
            }
        }
        array_13.finish();
    }
    if let Some(var_15) = &input.port {
        object.key("port").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_15).into()),
        );
    }
    Ok(())
}
