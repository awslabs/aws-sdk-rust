// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_restore_table_from_snapshot_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::restore_table_from_snapshot::RestoreTableFromSnapshotInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.namespace_name {
        object.key("namespaceName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.workgroup_name {
        object.key("workgroupName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.snapshot_name {
        object.key("snapshotName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.source_database_name {
        object.key("sourceDatabaseName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.source_schema_name {
        object.key("sourceSchemaName").string(var_5.as_str());
    }
    if let Some(var_6) = &input.source_table_name {
        object.key("sourceTableName").string(var_6.as_str());
    }
    if let Some(var_7) = &input.target_database_name {
        object.key("targetDatabaseName").string(var_7.as_str());
    }
    if let Some(var_8) = &input.target_schema_name {
        object.key("targetSchemaName").string(var_8.as_str());
    }
    if let Some(var_9) = &input.new_table_name {
        object.key("newTableName").string(var_9.as_str());
    }
    if let Some(var_10) = &input.activate_case_sensitive_identifier {
        object.key("activateCaseSensitiveIdentifier").boolean(*var_10);
    }
    Ok(())
}
