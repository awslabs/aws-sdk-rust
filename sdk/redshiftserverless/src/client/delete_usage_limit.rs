// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteUsageLimit`](crate::operation::delete_usage_limit::builders::DeleteUsageLimitFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`usage_limit_id(impl Into<String>)`](crate::operation::delete_usage_limit::builders::DeleteUsageLimitFluentBuilder::usage_limit_id) / [`set_usage_limit_id(Option<String>)`](crate::operation::delete_usage_limit::builders::DeleteUsageLimitFluentBuilder::set_usage_limit_id):<br>required: **true**<br><p>The unique identifier of the usage limit to delete.</p><br>
    /// - On success, responds with [`DeleteUsageLimitOutput`](crate::operation::delete_usage_limit::DeleteUsageLimitOutput) with field(s):
    ///   - [`usage_limit(Option<UsageLimit>)`](crate::operation::delete_usage_limit::DeleteUsageLimitOutput::usage_limit): <p>The deleted usage limit object.</p>
    /// - On failure, responds with [`SdkError<DeleteUsageLimitError>`](crate::operation::delete_usage_limit::DeleteUsageLimitError)
    pub fn delete_usage_limit(&self) -> crate::operation::delete_usage_limit::builders::DeleteUsageLimitFluentBuilder {
        crate::operation::delete_usage_limit::builders::DeleteUsageLimitFluentBuilder::new(self.handle.clone())
    }
}
