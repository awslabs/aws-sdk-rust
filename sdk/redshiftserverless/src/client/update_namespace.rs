// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateNamespace`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`namespace_name(impl Into<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::namespace_name) / [`set_namespace_name(Option<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::set_namespace_name):<br>required: **true**<br><p>The name of the namespace to update. You can't update the name of a namespace once it is created.</p><br>
    ///   - [`admin_user_password(impl Into<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::admin_user_password) / [`set_admin_user_password(Option<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::set_admin_user_password):<br>required: **false**<br><p>The password of the administrator for the first database created in the namespace. This parameter must be updated together with <code>adminUsername</code>.</p>  <p>You can't use <code>adminUserPassword</code> if <code>manageAdminPassword</code> is true. </p><br>
    ///   - [`admin_username(impl Into<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::admin_username) / [`set_admin_username(Option<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::set_admin_username):<br>required: **false**<br><p>The username of the administrator for the first database created in the namespace. This parameter must be updated together with <code>adminUserPassword</code>.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The ID of the Amazon Web Services Key Management Service key used to encrypt your data.</p><br>
    ///   - [`default_iam_role_arn(impl Into<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::default_iam_role_arn) / [`set_default_iam_role_arn(Option<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::set_default_iam_role_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the IAM role to set as a default in the namespace. This parameter must be updated together with <code>iamRoles</code>.</p><br>
    ///   - [`iam_roles(impl Into<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::iam_roles) / [`set_iam_roles(Option<Vec::<String>>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::set_iam_roles):<br>required: **false**<br><p>A list of IAM roles to associate with the namespace. This parameter must be updated together with <code>defaultIamRoleArn</code>.</p><br>
    ///   - [`log_exports(LogExport)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::log_exports) / [`set_log_exports(Option<Vec::<LogExport>>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::set_log_exports):<br>required: **false**<br><p>The types of logs the namespace can export. The export types are <code>userlog</code>, <code>connectionlog</code>, and <code>useractivitylog</code>.</p><br>
    ///   - [`manage_admin_password(bool)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::manage_admin_password) / [`set_manage_admin_password(Option<bool>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::set_manage_admin_password):<br>required: **false**<br><p>If <code>true</code>, Amazon Redshift uses Secrets Manager to manage the namespace's admin credentials. You can't use <code>adminUserPassword</code> if <code>manageAdminPassword</code> is true. If <code>manageAdminPassword</code> is false or not set, Amazon Redshift uses <code>adminUserPassword</code> for the admin user account's password. </p><br>
    ///   - [`admin_password_secret_kms_key_id(impl Into<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::admin_password_secret_kms_key_id) / [`set_admin_password_secret_kms_key_id(Option<String>)`](crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::set_admin_password_secret_kms_key_id):<br>required: **false**<br><p>The ID of the Key Management Service (KMS) key used to encrypt and store the namespace's admin credentials secret. You can only use this parameter if <code>manageAdminPassword</code> is true.</p><br>
    /// - On success, responds with [`UpdateNamespaceOutput`](crate::operation::update_namespace::UpdateNamespaceOutput) with field(s):
    ///   - [`namespace(Option<Namespace>)`](crate::operation::update_namespace::UpdateNamespaceOutput::namespace): <p>A list of tag instances.</p>
    /// - On failure, responds with [`SdkError<UpdateNamespaceError>`](crate::operation::update_namespace::UpdateNamespaceError)
    pub fn update_namespace(&self) -> crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder {
        crate::operation::update_namespace::builders::UpdateNamespaceFluentBuilder::new(self.handle.clone())
    }
}
