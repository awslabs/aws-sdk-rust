// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetUsageLimit`](crate::client::fluent_builders::GetUsageLimit) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`usage_limit_id(impl Into<String>)`](crate::client::fluent_builders::GetUsageLimit::usage_limit_id) / [`set_usage_limit_id(Option<String>)`](crate::client::fluent_builders::GetUsageLimit::set_usage_limit_id): <p>The unique identifier of the usage limit to return information for.</p>
    /// - On success, responds with [`GetUsageLimitOutput`](crate::output::GetUsageLimitOutput) with field(s):
    ///   - [`usage_limit(Option<UsageLimit>)`](crate::output::GetUsageLimitOutput::usage_limit): <p>The returned usage limit object.</p>
    /// - On failure, responds with [`SdkError<GetUsageLimitError>`](crate::error::GetUsageLimitError)
    pub fn get_usage_limit(&self) -> crate::client::fluent_builders::GetUsageLimit {
        crate::client::fluent_builders::GetUsageLimit::new(self.handle.clone())
    }
}
