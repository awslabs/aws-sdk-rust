// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetUsageLimit`](crate::operation::get_usage_limit::builders::GetUsageLimitFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`usage_limit_id(impl Into<String>)`](crate::operation::get_usage_limit::builders::GetUsageLimitFluentBuilder::usage_limit_id) / [`set_usage_limit_id(Option<String>)`](crate::operation::get_usage_limit::builders::GetUsageLimitFluentBuilder::set_usage_limit_id): <p>The unique identifier of the usage limit to return information for.</p>
    /// - On success, responds with [`GetUsageLimitOutput`](crate::operation::get_usage_limit::GetUsageLimitOutput) with field(s):
    ///   - [`usage_limit(Option<UsageLimit>)`](crate::operation::get_usage_limit::GetUsageLimitOutput::usage_limit): <p>The returned usage limit object.</p>
    /// - On failure, responds with [`SdkError<GetUsageLimitError>`](crate::operation::get_usage_limit::GetUsageLimitError)
    pub fn get_usage_limit(
        &self,
    ) -> crate::operation::get_usage_limit::builders::GetUsageLimitFluentBuilder {
        crate::operation::get_usage_limit::builders::GetUsageLimitFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
