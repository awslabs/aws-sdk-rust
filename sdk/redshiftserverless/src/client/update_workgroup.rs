// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateWorkgroup`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workgroup_name(impl Into<String>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::workgroup_name) / [`set_workgroup_name(Option<String>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::set_workgroup_name): <p>The name of the workgroup to update.</p>
    ///   - [`base_capacity(i32)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::base_capacity) / [`set_base_capacity(Option<i32>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::set_base_capacity): <p>The new base data warehouse capacity in Redshift Processing Units (RPUs).</p>
    ///   - [`enhanced_vpc_routing(bool)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::enhanced_vpc_routing) / [`set_enhanced_vpc_routing(Option<bool>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::set_enhanced_vpc_routing): <p>The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.</p>
    ///   - [`config_parameters(Vec<ConfigParameter>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::config_parameters) / [`set_config_parameters(Option<Vec<ConfigParameter>>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::set_config_parameters): <p>An array of parameters to set for advanced control over a database. The options are <code>datestyle</code>, <code>enable_user_activity_logging</code>, <code>query_group</code>, <code>search_path</code>, and <code>max_query_execution_time</code>.</p>
    ///   - [`publicly_accessible(bool)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::publicly_accessible) / [`set_publicly_accessible(Option<bool>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::set_publicly_accessible): <p>A value that specifies whether the workgroup can be accessible from a public network.</p>
    ///   - [`subnet_ids(Vec<String>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::subnet_ids) / [`set_subnet_ids(Option<Vec<String>>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::set_subnet_ids): <p>An array of VPC subnet IDs to associate with the workgroup.</p>
    ///   - [`security_group_ids(Vec<String>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec<String>>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::set_security_group_ids): <p>An array of security group IDs to associate with the workgroup.</p>
    ///   - [`port(i32)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::set_port): <p>The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439.</p>
    /// - On success, responds with [`UpdateWorkgroupOutput`](crate::operation::update_workgroup::UpdateWorkgroupOutput) with field(s):
    ///   - [`workgroup(Option<Workgroup>)`](crate::operation::update_workgroup::UpdateWorkgroupOutput::workgroup): <p>The updated workgroup object.</p>
    /// - On failure, responds with [`SdkError<UpdateWorkgroupError>`](crate::operation::update_workgroup::UpdateWorkgroupError)
    pub fn update_workgroup(
        &self,
    ) -> crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder {
        crate::operation::update_workgroup::builders::UpdateWorkgroupFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
