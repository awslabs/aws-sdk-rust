// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSnapshot`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`namespace_name(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::namespace_name) / [`set_namespace_name(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_namespace_name): <p>The namespace to create a snapshot for.</p>
    ///   - [`snapshot_name(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::snapshot_name) / [`set_snapshot_name(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_snapshot_name): <p>The name of the snapshot.</p>
    ///   - [`retention_period(i32)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::retention_period) / [`set_retention_period(Option<i32>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_retention_period): <p>How long to retain the created snapshot.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_tags): <p>An array of <a href="https://docs.aws.amazon.com/redshift-serverless/latest/APIReference/API_Tag.html">Tag objects</a> to associate with the snapshot.</p>
    /// - On success, responds with [`CreateSnapshotOutput`](crate::operation::create_snapshot::CreateSnapshotOutput) with field(s):
    ///   - [`snapshot(Option<Snapshot>)`](crate::operation::create_snapshot::CreateSnapshotOutput::snapshot): <p>The created snapshot object.</p>
    /// - On failure, responds with [`SdkError<CreateSnapshotError>`](crate::operation::create_snapshot::CreateSnapshotError)
    pub fn create_snapshot(
        &self,
    ) -> crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder {
        crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
