// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateScheduledAction`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`scheduled_action_name(impl Into<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::scheduled_action_name) / [`set_scheduled_action_name(Option<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_scheduled_action_name):<br>required: **true**<br><p>The name of the scheduled action to update to.</p><br>
    ///   - [`target_action(TargetAction)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::target_action) / [`set_target_action(Option<TargetAction>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_target_action):<br>required: **false**<br><p>A JSON format string of the Amazon Redshift Serverless API operation with input parameters. The following is an example of a target action.</p> <p><code>"{"CreateSnapshot": {"NamespaceName": "sampleNamespace","SnapshotName": "sampleSnapshot", "retentionPeriod": "1"}}"</code></p><br>
    ///   - [`schedule(Schedule)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::schedule) / [`set_schedule(Option<Schedule>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_schedule):<br>required: **false**<br><p>The schedule for a one-time (at timestamp format) or recurring (cron format) scheduled action. Schedule invocations must be separated by at least one hour. Times are in UTC.</p> <ul>  <li>   <p>Format of at timestamp is <code>yyyy-mm-ddThh:mm:ss</code>. For example, <code>2016-03-04T17:27:00</code>.</p></li>  <li>   <p>Format of cron expression is <code>(Minutes Hours Day-of-month Month Day-of-week Year)</code>. For example, <code>"(0 10 ? * MON *)"</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions">Cron Expressions</a> in the <i>Amazon CloudWatch Events User Guide</i>.</p></li> </ul><br>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_role_arn):<br>required: **false**<br><p>The ARN of the IAM role to assume to run the scheduled action. This IAM role must have permission to run the Amazon Redshift Serverless API operation in the scheduled action. This IAM role must allow the Amazon Redshift scheduler to schedule creating snapshots (Principal scheduler.redshift.amazonaws.com) to assume permissions on your behalf. For more information about the IAM role to use with the Amazon Redshift scheduler, see <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html">Using Identity-Based Policies for Amazon Redshift</a> in the Amazon Redshift Cluster Management Guide</p><br>
    ///   - [`enabled(bool)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::enabled) / [`set_enabled(Option<bool>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_enabled):<br>required: **false**<br><p>Specifies whether to enable the scheduled action.</p><br>
    ///   - [`scheduled_action_description(impl Into<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::scheduled_action_description) / [`set_scheduled_action_description(Option<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_scheduled_action_description):<br>required: **false**<br><p>The descripion of the scheduled action to update to.</p><br>
    ///   - [`start_time(DateTime)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_start_time):<br>required: **false**<br><p>The start time in UTC of the scheduled action to update to.</p><br>
    ///   - [`end_time(DateTime)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_end_time):<br>required: **false**<br><p>The end time in UTC of the scheduled action to update.</p><br>
    /// - On success, responds with [`UpdateScheduledActionOutput`](crate::operation::update_scheduled_action::UpdateScheduledActionOutput) with field(s):
    ///   - [`scheduled_action(Option<ScheduledActionResponse>)`](crate::operation::update_scheduled_action::UpdateScheduledActionOutput::scheduled_action): <p>The ScheduledAction object that was updated.</p>
    /// - On failure, responds with [`SdkError<UpdateScheduledActionError>`](crate::operation::update_scheduled_action::UpdateScheduledActionError)
    pub fn update_scheduled_action(&self) -> crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder {
        crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::new(self.handle.clone())
    }
}
