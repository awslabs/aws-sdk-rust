// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_convert_recovery_point_to_snapshot;

pub(crate) mod shape_create_custom_domain_association;

pub(crate) mod shape_create_endpoint_access;

pub(crate) mod shape_create_namespace;

pub(crate) mod shape_create_snapshot;

pub(crate) mod shape_create_usage_limit;

pub(crate) mod shape_create_workgroup;

pub(crate) mod shape_delete_custom_domain_association;

pub(crate) mod shape_delete_endpoint_access;

pub(crate) mod shape_delete_namespace;

pub(crate) mod shape_delete_resource_policy;

pub(crate) mod shape_delete_snapshot;

pub(crate) mod shape_delete_usage_limit;

pub(crate) mod shape_delete_workgroup;

pub(crate) mod shape_get_credentials;

pub(crate) mod shape_get_custom_domain_association;

pub(crate) mod shape_get_endpoint_access;

pub(crate) mod shape_get_namespace;

pub(crate) mod shape_get_recovery_point;

pub(crate) mod shape_get_resource_policy;

pub(crate) mod shape_get_snapshot;

pub(crate) mod shape_get_table_restore_status;

pub(crate) mod shape_get_usage_limit;

pub(crate) mod shape_get_workgroup;

pub(crate) mod shape_list_custom_domain_associations;

pub(crate) mod shape_list_endpoint_access;

pub(crate) mod shape_list_namespaces;

pub(crate) mod shape_list_recovery_points;

pub(crate) mod shape_list_snapshots;

pub(crate) mod shape_list_table_restore_status;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_usage_limits;

pub(crate) mod shape_list_workgroups;

pub(crate) mod shape_put_resource_policy;

pub(crate) mod shape_restore_from_recovery_point;

pub(crate) mod shape_restore_from_snapshot;

pub(crate) mod shape_restore_table_from_snapshot;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_custom_domain_association;

pub(crate) mod shape_update_endpoint_access;

pub(crate) mod shape_update_namespace;

pub(crate) mod shape_update_snapshot;

pub(crate) mod shape_update_usage_limit;

pub(crate) mod shape_update_workgroup;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_convert_recovery_point_to_snapshot_input;

pub(crate) mod shape_create_custom_domain_association_input;

pub(crate) mod shape_create_endpoint_access_input;

pub(crate) mod shape_create_namespace_input;

pub(crate) mod shape_create_snapshot_input;

pub(crate) mod shape_create_usage_limit_input;

pub(crate) mod shape_create_workgroup_input;

pub(crate) mod shape_delete_custom_domain_association_input;

pub(crate) mod shape_delete_endpoint_access_input;

pub(crate) mod shape_delete_namespace_input;

pub(crate) mod shape_delete_resource_policy_input;

pub(crate) mod shape_delete_snapshot_input;

pub(crate) mod shape_delete_usage_limit_input;

pub(crate) mod shape_delete_workgroup_input;

pub(crate) mod shape_get_credentials_input;

pub(crate) mod shape_get_custom_domain_association_input;

pub(crate) mod shape_get_endpoint_access_input;

pub(crate) mod shape_get_namespace_input;

pub(crate) mod shape_get_recovery_point_input;

pub(crate) mod shape_get_resource_policy_input;

pub(crate) mod shape_get_snapshot_input;

pub(crate) mod shape_get_table_restore_status_input;

pub(crate) mod shape_get_usage_limit_input;

pub(crate) mod shape_get_workgroup_input;

pub(crate) mod shape_insufficient_capacity_exception;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_invalid_pagination_exception;

pub(crate) mod shape_list_custom_domain_associations_input;

pub(crate) mod shape_list_endpoint_access_input;

pub(crate) mod shape_list_namespaces_input;

pub(crate) mod shape_list_recovery_points_input;

pub(crate) mod shape_list_snapshots_input;

pub(crate) mod shape_list_table_restore_status_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_list_usage_limits_input;

pub(crate) mod shape_list_workgroups_input;

pub(crate) mod shape_put_resource_policy_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_restore_from_recovery_point_input;

pub(crate) mod shape_restore_from_snapshot_input;

pub(crate) mod shape_restore_table_from_snapshot_input;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_too_many_tags_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_custom_domain_association_input;

pub(crate) mod shape_update_endpoint_access_input;

pub(crate) mod shape_update_namespace_input;

pub(crate) mod shape_update_snapshot_input;

pub(crate) mod shape_update_usage_limit_input;

pub(crate) mod shape_update_workgroup_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_association_list;

pub(crate) mod shape_config_parameter;

pub(crate) mod shape_endpoint_access;

pub(crate) mod shape_endpoint_access_list;

pub(crate) mod shape_namespace;

pub(crate) mod shape_namespace_list;

pub(crate) mod shape_recovery_point;

pub(crate) mod shape_recovery_point_list;

pub(crate) mod shape_resource_policy;

pub(crate) mod shape_snapshot;

pub(crate) mod shape_snapshot_list;

pub(crate) mod shape_table_restore_status;

pub(crate) mod shape_table_restore_status_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_usage_limit;

pub(crate) mod shape_usage_limits;

pub(crate) mod shape_workgroup;

pub(crate) mod shape_workgroup_list;

pub(crate) mod shape_account_id_list;

pub(crate) mod shape_association;

pub(crate) mod shape_config_parameter_list;

pub(crate) mod shape_endpoint;

pub(crate) mod shape_iam_role_arn_list;

pub(crate) mod shape_log_export_list;

pub(crate) mod shape_security_group_id_list;

pub(crate) mod shape_subnet_id_list;

pub(crate) mod shape_vpc_endpoint;

pub(crate) mod shape_vpc_security_group_membership_list;

pub(crate) mod shape_network_interface_list;

pub(crate) mod shape_vpc_endpoint_list;

pub(crate) mod shape_vpc_security_group_membership;

pub(crate) mod shape_network_interface;
