// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// ESAM ManifestConfirmConditionNotification defined by OC-SP-ESAM-API-I03-131025.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EsamManifestConfirmConditionNotification {
    /// Provide your ESAM ManifestConfirmConditionNotification XML document inside your JSON job settings. Form the XML document as per OC-SP-ESAM-API-I03-131025. The transcoder will use the Manifest Conditioning instructions in the message that you supply.
    #[doc(hidden)]
    pub mcc_xml: std::option::Option<std::string::String>,
}
impl EsamManifestConfirmConditionNotification {
    /// Provide your ESAM ManifestConfirmConditionNotification XML document inside your JSON job settings. Form the XML document as per OC-SP-ESAM-API-I03-131025. The transcoder will use the Manifest Conditioning instructions in the message that you supply.
    pub fn mcc_xml(&self) -> std::option::Option<&str> {
        self.mcc_xml.as_deref()
    }
}
impl EsamManifestConfirmConditionNotification {
    /// Creates a new builder-style object to manufacture [`EsamManifestConfirmConditionNotification`](crate::types::EsamManifestConfirmConditionNotification).
    pub fn builder() -> crate::types::builders::EsamManifestConfirmConditionNotificationBuilder {
        crate::types::builders::EsamManifestConfirmConditionNotificationBuilder::default()
    }
}

/// A builder for [`EsamManifestConfirmConditionNotification`](crate::types::EsamManifestConfirmConditionNotification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EsamManifestConfirmConditionNotificationBuilder {
    pub(crate) mcc_xml: std::option::Option<std::string::String>,
}
impl EsamManifestConfirmConditionNotificationBuilder {
    /// Provide your ESAM ManifestConfirmConditionNotification XML document inside your JSON job settings. Form the XML document as per OC-SP-ESAM-API-I03-131025. The transcoder will use the Manifest Conditioning instructions in the message that you supply.
    pub fn mcc_xml(mut self, input: impl Into<std::string::String>) -> Self {
        self.mcc_xml = Some(input.into());
        self
    }
    /// Provide your ESAM ManifestConfirmConditionNotification XML document inside your JSON job settings. Form the XML document as per OC-SP-ESAM-API-I03-131025. The transcoder will use the Manifest Conditioning instructions in the message that you supply.
    pub fn set_mcc_xml(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.mcc_xml = input;
        self
    }
    /// Consumes the builder and constructs a [`EsamManifestConfirmConditionNotification`](crate::types::EsamManifestConfirmConditionNotification).
    pub fn build(self) -> crate::types::EsamManifestConfirmConditionNotification {
        crate::types::EsamManifestConfirmConditionNotification {
            mcc_xml: self.mcc_xml,
        }
    }
}
