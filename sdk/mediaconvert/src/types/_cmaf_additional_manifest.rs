// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Specify the details for each pair of HLS and DASH additional manifests that you want the service to generate for this CMAF output group. Each pair of manifests can reference a different subset of outputs in the group.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CmafAdditionalManifest {
    /// Specify a name modifier that the service adds to the name of this manifest to make it different from the file names of the other main manifests in the output group. For example, say that the default main manifest for your HLS group is film-name.m3u8. If you enter "-no-premium" for this setting, then the file name the service generates for this top-level manifest is film-name-no-premium.m3u8. For HLS output groups, specify a manifestNameModifier that is different from the nameModifier of the output. The service uses the output name modifier to create unique names for the individual variant manifests.
    #[doc(hidden)]
    pub manifest_name_modifier: std::option::Option<std::string::String>,
    /// Specify the outputs that you want this additional top-level manifest to reference.
    #[doc(hidden)]
    pub selected_outputs: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl CmafAdditionalManifest {
    /// Specify a name modifier that the service adds to the name of this manifest to make it different from the file names of the other main manifests in the output group. For example, say that the default main manifest for your HLS group is film-name.m3u8. If you enter "-no-premium" for this setting, then the file name the service generates for this top-level manifest is film-name-no-premium.m3u8. For HLS output groups, specify a manifestNameModifier that is different from the nameModifier of the output. The service uses the output name modifier to create unique names for the individual variant manifests.
    pub fn manifest_name_modifier(&self) -> std::option::Option<&str> {
        self.manifest_name_modifier.as_deref()
    }
    /// Specify the outputs that you want this additional top-level manifest to reference.
    pub fn selected_outputs(&self) -> std::option::Option<&[std::string::String]> {
        self.selected_outputs.as_deref()
    }
}
impl CmafAdditionalManifest {
    /// Creates a new builder-style object to manufacture [`CmafAdditionalManifest`](crate::types::CmafAdditionalManifest).
    pub fn builder() -> crate::types::builders::CmafAdditionalManifestBuilder {
        crate::types::builders::CmafAdditionalManifestBuilder::default()
    }
}

/// A builder for [`CmafAdditionalManifest`](crate::types::CmafAdditionalManifest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CmafAdditionalManifestBuilder {
    pub(crate) manifest_name_modifier: std::option::Option<std::string::String>,
    pub(crate) selected_outputs: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl CmafAdditionalManifestBuilder {
    /// Specify a name modifier that the service adds to the name of this manifest to make it different from the file names of the other main manifests in the output group. For example, say that the default main manifest for your HLS group is film-name.m3u8. If you enter "-no-premium" for this setting, then the file name the service generates for this top-level manifest is film-name-no-premium.m3u8. For HLS output groups, specify a manifestNameModifier that is different from the nameModifier of the output. The service uses the output name modifier to create unique names for the individual variant manifests.
    pub fn manifest_name_modifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.manifest_name_modifier = Some(input.into());
        self
    }
    /// Specify a name modifier that the service adds to the name of this manifest to make it different from the file names of the other main manifests in the output group. For example, say that the default main manifest for your HLS group is film-name.m3u8. If you enter "-no-premium" for this setting, then the file name the service generates for this top-level manifest is film-name-no-premium.m3u8. For HLS output groups, specify a manifestNameModifier that is different from the nameModifier of the output. The service uses the output name modifier to create unique names for the individual variant manifests.
    pub fn set_manifest_name_modifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.manifest_name_modifier = input;
        self
    }
    /// Appends an item to `selected_outputs`.
    ///
    /// To override the contents of this collection use [`set_selected_outputs`](Self::set_selected_outputs).
    ///
    /// Specify the outputs that you want this additional top-level manifest to reference.
    pub fn selected_outputs(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.selected_outputs.unwrap_or_default();
        v.push(input.into());
        self.selected_outputs = Some(v);
        self
    }
    /// Specify the outputs that you want this additional top-level manifest to reference.
    pub fn set_selected_outputs(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.selected_outputs = input;
        self
    }
    /// Consumes the builder and constructs a [`CmafAdditionalManifest`](crate::types::CmafAdditionalManifest).
    pub fn build(self) -> crate::types::CmafAdditionalManifest {
        crate::types::CmafAdditionalManifest {
            manifest_name_modifier: self.manifest_name_modifier,
            selected_outputs: self.selected_outputs,
        }
    }
}
