// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Contains details about the output's video stream
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VideoDetail {
    /// Height in pixels for the output
    #[doc(hidden)]
    pub height_in_px: i32,
    /// Width in pixels for the output
    #[doc(hidden)]
    pub width_in_px: i32,
}
impl VideoDetail {
    /// Height in pixels for the output
    pub fn height_in_px(&self) -> i32 {
        self.height_in_px
    }
    /// Width in pixels for the output
    pub fn width_in_px(&self) -> i32 {
        self.width_in_px
    }
}
impl VideoDetail {
    /// Creates a new builder-style object to manufacture [`VideoDetail`](crate::types::VideoDetail).
    pub fn builder() -> crate::types::builders::VideoDetailBuilder {
        crate::types::builders::VideoDetailBuilder::default()
    }
}

/// A builder for [`VideoDetail`](crate::types::VideoDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VideoDetailBuilder {
    pub(crate) height_in_px: std::option::Option<i32>,
    pub(crate) width_in_px: std::option::Option<i32>,
}
impl VideoDetailBuilder {
    /// Height in pixels for the output
    pub fn height_in_px(mut self, input: i32) -> Self {
        self.height_in_px = Some(input);
        self
    }
    /// Height in pixels for the output
    pub fn set_height_in_px(mut self, input: std::option::Option<i32>) -> Self {
        self.height_in_px = input;
        self
    }
    /// Width in pixels for the output
    pub fn width_in_px(mut self, input: i32) -> Self {
        self.width_in_px = Some(input);
        self
    }
    /// Width in pixels for the output
    pub fn set_width_in_px(mut self, input: std::option::Option<i32>) -> Self {
        self.width_in_px = input;
        self
    }
    /// Consumes the builder and constructs a [`VideoDetail`](crate::types::VideoDetail).
    pub fn build(self) -> crate::types::VideoDetail {
        crate::types::VideoDetail {
            height_in_px: self.height_in_px.unwrap_or_default(),
            width_in_px: self.width_in_px.unwrap_or_default(),
        }
    }
}
