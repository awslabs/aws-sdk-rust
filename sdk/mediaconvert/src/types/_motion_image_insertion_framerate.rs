// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// For motion overlays that don't have a built-in frame rate, specify the frame rate of the overlay in frames per second, as a fraction. For example, specify 24 fps as 24/1. The overlay frame rate doesn't need to match the frame rate of the underlying video.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MotionImageInsertionFramerate {
    /// The bottom of the fraction that expresses your overlay frame rate. For example, if your frame rate is 24 fps, set this value to 1.
    #[doc(hidden)]
    pub framerate_denominator: i32,
    /// The top of the fraction that expresses your overlay frame rate. For example, if your frame rate is 24 fps, set this value to 24.
    #[doc(hidden)]
    pub framerate_numerator: i32,
}
impl MotionImageInsertionFramerate {
    /// The bottom of the fraction that expresses your overlay frame rate. For example, if your frame rate is 24 fps, set this value to 1.
    pub fn framerate_denominator(&self) -> i32 {
        self.framerate_denominator
    }
    /// The top of the fraction that expresses your overlay frame rate. For example, if your frame rate is 24 fps, set this value to 24.
    pub fn framerate_numerator(&self) -> i32 {
        self.framerate_numerator
    }
}
impl MotionImageInsertionFramerate {
    /// Creates a new builder-style object to manufacture [`MotionImageInsertionFramerate`](crate::types::MotionImageInsertionFramerate).
    pub fn builder() -> crate::types::builders::MotionImageInsertionFramerateBuilder {
        crate::types::builders::MotionImageInsertionFramerateBuilder::default()
    }
}

/// A builder for [`MotionImageInsertionFramerate`](crate::types::MotionImageInsertionFramerate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MotionImageInsertionFramerateBuilder {
    pub(crate) framerate_denominator: std::option::Option<i32>,
    pub(crate) framerate_numerator: std::option::Option<i32>,
}
impl MotionImageInsertionFramerateBuilder {
    /// The bottom of the fraction that expresses your overlay frame rate. For example, if your frame rate is 24 fps, set this value to 1.
    pub fn framerate_denominator(mut self, input: i32) -> Self {
        self.framerate_denominator = Some(input);
        self
    }
    /// The bottom of the fraction that expresses your overlay frame rate. For example, if your frame rate is 24 fps, set this value to 1.
    pub fn set_framerate_denominator(mut self, input: std::option::Option<i32>) -> Self {
        self.framerate_denominator = input;
        self
    }
    /// The top of the fraction that expresses your overlay frame rate. For example, if your frame rate is 24 fps, set this value to 24.
    pub fn framerate_numerator(mut self, input: i32) -> Self {
        self.framerate_numerator = Some(input);
        self
    }
    /// The top of the fraction that expresses your overlay frame rate. For example, if your frame rate is 24 fps, set this value to 24.
    pub fn set_framerate_numerator(mut self, input: std::option::Option<i32>) -> Self {
        self.framerate_numerator = input;
        self
    }
    /// Consumes the builder and constructs a [`MotionImageInsertionFramerate`](crate::types::MotionImageInsertionFramerate).
    pub fn build(self) -> crate::types::MotionImageInsertionFramerate {
        crate::types::MotionImageInsertionFramerate {
            framerate_denominator: self.framerate_denominator.unwrap_or_default(),
            framerate_numerator: self.framerate_numerator.unwrap_or_default(),
        }
    }
}
