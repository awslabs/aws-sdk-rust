// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Required when you set (Codec) under (AudioDescriptions)&gt;(CodecSettings) to the value AIFF.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AiffSettings {
    /// Specify Bit depth (BitDepth), in bits per sample, to choose the encoding quality for this audio track.
    #[doc(hidden)]
    pub bit_depth: i32,
    /// Specify the number of channels in this output audio track. Valid values are 1 and even numbers up to 64. For example, 1, 2, 4, 6, and so on, up to 64.
    #[doc(hidden)]
    pub channels: i32,
    /// Sample rate in hz.
    #[doc(hidden)]
    pub sample_rate: i32,
}
impl AiffSettings {
    /// Specify Bit depth (BitDepth), in bits per sample, to choose the encoding quality for this audio track.
    pub fn bit_depth(&self) -> i32 {
        self.bit_depth
    }
    /// Specify the number of channels in this output audio track. Valid values are 1 and even numbers up to 64. For example, 1, 2, 4, 6, and so on, up to 64.
    pub fn channels(&self) -> i32 {
        self.channels
    }
    /// Sample rate in hz.
    pub fn sample_rate(&self) -> i32 {
        self.sample_rate
    }
}
impl AiffSettings {
    /// Creates a new builder-style object to manufacture [`AiffSettings`](crate::types::AiffSettings).
    pub fn builder() -> crate::types::builders::AiffSettingsBuilder {
        crate::types::builders::AiffSettingsBuilder::default()
    }
}

/// A builder for [`AiffSettings`](crate::types::AiffSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AiffSettingsBuilder {
    pub(crate) bit_depth: std::option::Option<i32>,
    pub(crate) channels: std::option::Option<i32>,
    pub(crate) sample_rate: std::option::Option<i32>,
}
impl AiffSettingsBuilder {
    /// Specify Bit depth (BitDepth), in bits per sample, to choose the encoding quality for this audio track.
    pub fn bit_depth(mut self, input: i32) -> Self {
        self.bit_depth = Some(input);
        self
    }
    /// Specify Bit depth (BitDepth), in bits per sample, to choose the encoding quality for this audio track.
    pub fn set_bit_depth(mut self, input: std::option::Option<i32>) -> Self {
        self.bit_depth = input;
        self
    }
    /// Specify the number of channels in this output audio track. Valid values are 1 and even numbers up to 64. For example, 1, 2, 4, 6, and so on, up to 64.
    pub fn channels(mut self, input: i32) -> Self {
        self.channels = Some(input);
        self
    }
    /// Specify the number of channels in this output audio track. Valid values are 1 and even numbers up to 64. For example, 1, 2, 4, 6, and so on, up to 64.
    pub fn set_channels(mut self, input: std::option::Option<i32>) -> Self {
        self.channels = input;
        self
    }
    /// Sample rate in hz.
    pub fn sample_rate(mut self, input: i32) -> Self {
        self.sample_rate = Some(input);
        self
    }
    /// Sample rate in hz.
    pub fn set_sample_rate(mut self, input: std::option::Option<i32>) -> Self {
        self.sample_rate = input;
        self
    }
    /// Consumes the builder and constructs a [`AiffSettings`](crate::types::AiffSettings).
    pub fn build(self) -> crate::types::AiffSettings {
        crate::types::AiffSettings {
            bit_depth: self.bit_depth.unwrap_or_default(),
            channels: self.channels.unwrap_or_default(),
            sample_rate: self.sample_rate.unwrap_or_default(),
        }
    }
}
