// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// When writing a match expression against `LanguageCode`, it is important to ensure
/// your code is forward-compatible. That is, if a match arm handles a case for a
/// feature that is supported by the service but has not been represented as an enum
/// variant in a current version of SDK, your code should continue to work when you
/// upgrade SDK to a future version in which the enum does include a variant for that
/// feature.
///
/// Here is an example of how you can make a match expression forward-compatible:
///
/// ```text
/// # let languagecode = unimplemented!();
/// match languagecode {
///     LanguageCode::Aar => { /* ... */ },
///     LanguageCode::Abk => { /* ... */ },
///     LanguageCode::Afr => { /* ... */ },
///     LanguageCode::Aka => { /* ... */ },
///     LanguageCode::Amh => { /* ... */ },
///     LanguageCode::Ara => { /* ... */ },
///     LanguageCode::Arg => { /* ... */ },
///     LanguageCode::Asm => { /* ... */ },
///     LanguageCode::Ava => { /* ... */ },
///     LanguageCode::Ave => { /* ... */ },
///     LanguageCode::Aym => { /* ... */ },
///     LanguageCode::Aze => { /* ... */ },
///     LanguageCode::Bak => { /* ... */ },
///     LanguageCode::Bam => { /* ... */ },
///     LanguageCode::Bel => { /* ... */ },
///     LanguageCode::Ben => { /* ... */ },
///     LanguageCode::Bih => { /* ... */ },
///     LanguageCode::Bis => { /* ... */ },
///     LanguageCode::Bod => { /* ... */ },
///     LanguageCode::Bos => { /* ... */ },
///     LanguageCode::Bre => { /* ... */ },
///     LanguageCode::Bul => { /* ... */ },
///     LanguageCode::Cat => { /* ... */ },
///     LanguageCode::Ces => { /* ... */ },
///     LanguageCode::Cha => { /* ... */ },
///     LanguageCode::Che => { /* ... */ },
///     LanguageCode::Chu => { /* ... */ },
///     LanguageCode::Chv => { /* ... */ },
///     LanguageCode::Cor => { /* ... */ },
///     LanguageCode::Cos => { /* ... */ },
///     LanguageCode::Cre => { /* ... */ },
///     LanguageCode::Cym => { /* ... */ },
///     LanguageCode::Dan => { /* ... */ },
///     LanguageCode::Deu => { /* ... */ },
///     LanguageCode::Div => { /* ... */ },
///     LanguageCode::Dzo => { /* ... */ },
///     LanguageCode::Ell => { /* ... */ },
///     LanguageCode::Eng => { /* ... */ },
///     LanguageCode::Enm => { /* ... */ },
///     LanguageCode::Epo => { /* ... */ },
///     LanguageCode::Est => { /* ... */ },
///     LanguageCode::Eus => { /* ... */ },
///     LanguageCode::Ewe => { /* ... */ },
///     LanguageCode::Fao => { /* ... */ },
///     LanguageCode::Fas => { /* ... */ },
///     LanguageCode::Fij => { /* ... */ },
///     LanguageCode::Fin => { /* ... */ },
///     LanguageCode::Fra => { /* ... */ },
///     LanguageCode::Frm => { /* ... */ },
///     LanguageCode::Fry => { /* ... */ },
///     LanguageCode::Ful => { /* ... */ },
///     LanguageCode::Ger => { /* ... */ },
///     LanguageCode::Gla => { /* ... */ },
///     LanguageCode::Gle => { /* ... */ },
///     LanguageCode::Glg => { /* ... */ },
///     LanguageCode::Glv => { /* ... */ },
///     LanguageCode::Grn => { /* ... */ },
///     LanguageCode::Guj => { /* ... */ },
///     LanguageCode::Hat => { /* ... */ },
///     LanguageCode::Hau => { /* ... */ },
///     LanguageCode::Heb => { /* ... */ },
///     LanguageCode::Her => { /* ... */ },
///     LanguageCode::Hin => { /* ... */ },
///     LanguageCode::Hmo => { /* ... */ },
///     LanguageCode::Hrv => { /* ... */ },
///     LanguageCode::Hun => { /* ... */ },
///     LanguageCode::Hye => { /* ... */ },
///     LanguageCode::Ibo => { /* ... */ },
///     LanguageCode::Ido => { /* ... */ },
///     LanguageCode::Iii => { /* ... */ },
///     LanguageCode::Iku => { /* ... */ },
///     LanguageCode::Ile => { /* ... */ },
///     LanguageCode::Ina => { /* ... */ },
///     LanguageCode::Ind => { /* ... */ },
///     LanguageCode::Ipk => { /* ... */ },
///     LanguageCode::Isl => { /* ... */ },
///     LanguageCode::Ita => { /* ... */ },
///     LanguageCode::Jav => { /* ... */ },
///     LanguageCode::Jpn => { /* ... */ },
///     LanguageCode::Kal => { /* ... */ },
///     LanguageCode::Kan => { /* ... */ },
///     LanguageCode::Kas => { /* ... */ },
///     LanguageCode::Kat => { /* ... */ },
///     LanguageCode::Kau => { /* ... */ },
///     LanguageCode::Kaz => { /* ... */ },
///     LanguageCode::Khm => { /* ... */ },
///     LanguageCode::Kik => { /* ... */ },
///     LanguageCode::Kin => { /* ... */ },
///     LanguageCode::Kir => { /* ... */ },
///     LanguageCode::Kom => { /* ... */ },
///     LanguageCode::Kon => { /* ... */ },
///     LanguageCode::Kor => { /* ... */ },
///     LanguageCode::Kua => { /* ... */ },
///     LanguageCode::Kur => { /* ... */ },
///     LanguageCode::Lao => { /* ... */ },
///     LanguageCode::Lat => { /* ... */ },
///     LanguageCode::Lav => { /* ... */ },
///     LanguageCode::Lim => { /* ... */ },
///     LanguageCode::Lin => { /* ... */ },
///     LanguageCode::Lit => { /* ... */ },
///     LanguageCode::Ltz => { /* ... */ },
///     LanguageCode::Lub => { /* ... */ },
///     LanguageCode::Lug => { /* ... */ },
///     LanguageCode::Mah => { /* ... */ },
///     LanguageCode::Mal => { /* ... */ },
///     LanguageCode::Mar => { /* ... */ },
///     LanguageCode::Mkd => { /* ... */ },
///     LanguageCode::Mlg => { /* ... */ },
///     LanguageCode::Mlt => { /* ... */ },
///     LanguageCode::Mon => { /* ... */ },
///     LanguageCode::Mri => { /* ... */ },
///     LanguageCode::Msa => { /* ... */ },
///     LanguageCode::Mya => { /* ... */ },
///     LanguageCode::Nau => { /* ... */ },
///     LanguageCode::Nav => { /* ... */ },
///     LanguageCode::Nbl => { /* ... */ },
///     LanguageCode::Nde => { /* ... */ },
///     LanguageCode::Ndo => { /* ... */ },
///     LanguageCode::Nep => { /* ... */ },
///     LanguageCode::Nld => { /* ... */ },
///     LanguageCode::Nno => { /* ... */ },
///     LanguageCode::Nob => { /* ... */ },
///     LanguageCode::Nor => { /* ... */ },
///     LanguageCode::Nya => { /* ... */ },
///     LanguageCode::Oci => { /* ... */ },
///     LanguageCode::Oji => { /* ... */ },
///     LanguageCode::Ori => { /* ... */ },
///     LanguageCode::Orj => { /* ... */ },
///     LanguageCode::Orm => { /* ... */ },
///     LanguageCode::Oss => { /* ... */ },
///     LanguageCode::Pan => { /* ... */ },
///     LanguageCode::Pli => { /* ... */ },
///     LanguageCode::Pol => { /* ... */ },
///     LanguageCode::Por => { /* ... */ },
///     LanguageCode::Pus => { /* ... */ },
///     LanguageCode::Qaa => { /* ... */ },
///     LanguageCode::Qpc => { /* ... */ },
///     LanguageCode::Que => { /* ... */ },
///     LanguageCode::Roh => { /* ... */ },
///     LanguageCode::Ron => { /* ... */ },
///     LanguageCode::Run => { /* ... */ },
///     LanguageCode::Rus => { /* ... */ },
///     LanguageCode::Sag => { /* ... */ },
///     LanguageCode::San => { /* ... */ },
///     LanguageCode::Sin => { /* ... */ },
///     LanguageCode::Slk => { /* ... */ },
///     LanguageCode::Slv => { /* ... */ },
///     LanguageCode::Sme => { /* ... */ },
///     LanguageCode::Smo => { /* ... */ },
///     LanguageCode::Sna => { /* ... */ },
///     LanguageCode::Snd => { /* ... */ },
///     LanguageCode::Som => { /* ... */ },
///     LanguageCode::Sot => { /* ... */ },
///     LanguageCode::Spa => { /* ... */ },
///     LanguageCode::Sqi => { /* ... */ },
///     LanguageCode::Srb => { /* ... */ },
///     LanguageCode::Srd => { /* ... */ },
///     LanguageCode::Srp => { /* ... */ },
///     LanguageCode::Ssw => { /* ... */ },
///     LanguageCode::Sun => { /* ... */ },
///     LanguageCode::Swa => { /* ... */ },
///     LanguageCode::Swe => { /* ... */ },
///     LanguageCode::Tah => { /* ... */ },
///     LanguageCode::Tam => { /* ... */ },
///     LanguageCode::Tat => { /* ... */ },
///     LanguageCode::Tel => { /* ... */ },
///     LanguageCode::Tgk => { /* ... */ },
///     LanguageCode::Tgl => { /* ... */ },
///     LanguageCode::Tha => { /* ... */ },
///     LanguageCode::Tir => { /* ... */ },
///     LanguageCode::Tng => { /* ... */ },
///     LanguageCode::Ton => { /* ... */ },
///     LanguageCode::Tsn => { /* ... */ },
///     LanguageCode::Tso => { /* ... */ },
///     LanguageCode::Tuk => { /* ... */ },
///     LanguageCode::Tur => { /* ... */ },
///     LanguageCode::Twi => { /* ... */ },
///     LanguageCode::Uig => { /* ... */ },
///     LanguageCode::Ukr => { /* ... */ },
///     LanguageCode::Urd => { /* ... */ },
///     LanguageCode::Uzb => { /* ... */ },
///     LanguageCode::Ven => { /* ... */ },
///     LanguageCode::Vie => { /* ... */ },
///     LanguageCode::Vol => { /* ... */ },
///     LanguageCode::Wln => { /* ... */ },
///     LanguageCode::Wol => { /* ... */ },
///     LanguageCode::Xho => { /* ... */ },
///     LanguageCode::Yid => { /* ... */ },
///     LanguageCode::Yor => { /* ... */ },
///     LanguageCode::Zha => { /* ... */ },
///     LanguageCode::Zho => { /* ... */ },
///     LanguageCode::Zul => { /* ... */ },
///     other @ _ if other.as_str() == "NewFeature" => { /* handles a case for `NewFeature` */ },
///     _ => { /* ... */ },
/// }
/// ```
/// The above code demonstrates that when `languagecode` represents
/// `NewFeature`, the execution path will lead to the second last match arm,
/// even though the enum does not contain a variant `LanguageCode::NewFeature`
/// in the current version of SDK. The reason is that the variable `other`,
/// created by the `@` operator, is bound to
/// `LanguageCode::Unknown(UnknownVariantValue("NewFeature".to_owned()))`
/// and calling `as_str` on it yields `"NewFeature"`.
/// This match expression is forward-compatible when executed with a newer
/// version of SDK where the variant `LanguageCode::NewFeature` is defined.
/// Specifically, when `languagecode` represents `NewFeature`,
/// the execution path will hit the second last match arm as before by virtue of
/// calling `as_str` on `LanguageCode::NewFeature` also yielding `"NewFeature"`.
///
/// Explicitly matching on the `Unknown` variant should
/// be avoided for two reasons:
/// - The inner data `UnknownVariantValue` is opaque, and no further information can be extracted.
/// - It might inadvertently shadow other intended match arms.
/// Specify the language, using the ISO 639-2 three-letter code listed at https://www.loc.gov/standards/iso639-2/php/code_list.php.
#[non_exhaustive]
#[derive(
    std::clone::Clone,
    std::cmp::Eq,
    std::cmp::Ord,
    std::cmp::PartialEq,
    std::cmp::PartialOrd,
    std::fmt::Debug,
    std::hash::Hash,
)]
pub enum LanguageCode {
    #[allow(missing_docs)] // documentation missing in model
    Aar,
    #[allow(missing_docs)] // documentation missing in model
    Abk,
    #[allow(missing_docs)] // documentation missing in model
    Afr,
    #[allow(missing_docs)] // documentation missing in model
    Aka,
    #[allow(missing_docs)] // documentation missing in model
    Amh,
    #[allow(missing_docs)] // documentation missing in model
    Ara,
    #[allow(missing_docs)] // documentation missing in model
    Arg,
    #[allow(missing_docs)] // documentation missing in model
    Asm,
    #[allow(missing_docs)] // documentation missing in model
    Ava,
    #[allow(missing_docs)] // documentation missing in model
    Ave,
    #[allow(missing_docs)] // documentation missing in model
    Aym,
    #[allow(missing_docs)] // documentation missing in model
    Aze,
    #[allow(missing_docs)] // documentation missing in model
    Bak,
    #[allow(missing_docs)] // documentation missing in model
    Bam,
    #[allow(missing_docs)] // documentation missing in model
    Bel,
    #[allow(missing_docs)] // documentation missing in model
    Ben,
    #[allow(missing_docs)] // documentation missing in model
    Bih,
    #[allow(missing_docs)] // documentation missing in model
    Bis,
    #[allow(missing_docs)] // documentation missing in model
    Bod,
    #[allow(missing_docs)] // documentation missing in model
    Bos,
    #[allow(missing_docs)] // documentation missing in model
    Bre,
    #[allow(missing_docs)] // documentation missing in model
    Bul,
    #[allow(missing_docs)] // documentation missing in model
    Cat,
    #[allow(missing_docs)] // documentation missing in model
    Ces,
    #[allow(missing_docs)] // documentation missing in model
    Cha,
    #[allow(missing_docs)] // documentation missing in model
    Che,
    #[allow(missing_docs)] // documentation missing in model
    Chu,
    #[allow(missing_docs)] // documentation missing in model
    Chv,
    #[allow(missing_docs)] // documentation missing in model
    Cor,
    #[allow(missing_docs)] // documentation missing in model
    Cos,
    #[allow(missing_docs)] // documentation missing in model
    Cre,
    #[allow(missing_docs)] // documentation missing in model
    Cym,
    #[allow(missing_docs)] // documentation missing in model
    Dan,
    #[allow(missing_docs)] // documentation missing in model
    Deu,
    #[allow(missing_docs)] // documentation missing in model
    Div,
    #[allow(missing_docs)] // documentation missing in model
    Dzo,
    #[allow(missing_docs)] // documentation missing in model
    Ell,
    #[allow(missing_docs)] // documentation missing in model
    Eng,
    #[allow(missing_docs)] // documentation missing in model
    Enm,
    #[allow(missing_docs)] // documentation missing in model
    Epo,
    #[allow(missing_docs)] // documentation missing in model
    Est,
    #[allow(missing_docs)] // documentation missing in model
    Eus,
    #[allow(missing_docs)] // documentation missing in model
    Ewe,
    #[allow(missing_docs)] // documentation missing in model
    Fao,
    #[allow(missing_docs)] // documentation missing in model
    Fas,
    #[allow(missing_docs)] // documentation missing in model
    Fij,
    #[allow(missing_docs)] // documentation missing in model
    Fin,
    #[allow(missing_docs)] // documentation missing in model
    Fra,
    #[allow(missing_docs)] // documentation missing in model
    Frm,
    #[allow(missing_docs)] // documentation missing in model
    Fry,
    #[allow(missing_docs)] // documentation missing in model
    Ful,
    #[allow(missing_docs)] // documentation missing in model
    Ger,
    #[allow(missing_docs)] // documentation missing in model
    Gla,
    #[allow(missing_docs)] // documentation missing in model
    Gle,
    #[allow(missing_docs)] // documentation missing in model
    Glg,
    #[allow(missing_docs)] // documentation missing in model
    Glv,
    #[allow(missing_docs)] // documentation missing in model
    Grn,
    #[allow(missing_docs)] // documentation missing in model
    Guj,
    #[allow(missing_docs)] // documentation missing in model
    Hat,
    #[allow(missing_docs)] // documentation missing in model
    Hau,
    #[allow(missing_docs)] // documentation missing in model
    Heb,
    #[allow(missing_docs)] // documentation missing in model
    Her,
    #[allow(missing_docs)] // documentation missing in model
    Hin,
    #[allow(missing_docs)] // documentation missing in model
    Hmo,
    #[allow(missing_docs)] // documentation missing in model
    Hrv,
    #[allow(missing_docs)] // documentation missing in model
    Hun,
    #[allow(missing_docs)] // documentation missing in model
    Hye,
    #[allow(missing_docs)] // documentation missing in model
    Ibo,
    #[allow(missing_docs)] // documentation missing in model
    Ido,
    #[allow(missing_docs)] // documentation missing in model
    Iii,
    #[allow(missing_docs)] // documentation missing in model
    Iku,
    #[allow(missing_docs)] // documentation missing in model
    Ile,
    #[allow(missing_docs)] // documentation missing in model
    Ina,
    #[allow(missing_docs)] // documentation missing in model
    Ind,
    #[allow(missing_docs)] // documentation missing in model
    Ipk,
    #[allow(missing_docs)] // documentation missing in model
    Isl,
    #[allow(missing_docs)] // documentation missing in model
    Ita,
    #[allow(missing_docs)] // documentation missing in model
    Jav,
    #[allow(missing_docs)] // documentation missing in model
    Jpn,
    #[allow(missing_docs)] // documentation missing in model
    Kal,
    #[allow(missing_docs)] // documentation missing in model
    Kan,
    #[allow(missing_docs)] // documentation missing in model
    Kas,
    #[allow(missing_docs)] // documentation missing in model
    Kat,
    #[allow(missing_docs)] // documentation missing in model
    Kau,
    #[allow(missing_docs)] // documentation missing in model
    Kaz,
    #[allow(missing_docs)] // documentation missing in model
    Khm,
    #[allow(missing_docs)] // documentation missing in model
    Kik,
    #[allow(missing_docs)] // documentation missing in model
    Kin,
    #[allow(missing_docs)] // documentation missing in model
    Kir,
    #[allow(missing_docs)] // documentation missing in model
    Kom,
    #[allow(missing_docs)] // documentation missing in model
    Kon,
    #[allow(missing_docs)] // documentation missing in model
    Kor,
    #[allow(missing_docs)] // documentation missing in model
    Kua,
    #[allow(missing_docs)] // documentation missing in model
    Kur,
    #[allow(missing_docs)] // documentation missing in model
    Lao,
    #[allow(missing_docs)] // documentation missing in model
    Lat,
    #[allow(missing_docs)] // documentation missing in model
    Lav,
    #[allow(missing_docs)] // documentation missing in model
    Lim,
    #[allow(missing_docs)] // documentation missing in model
    Lin,
    #[allow(missing_docs)] // documentation missing in model
    Lit,
    #[allow(missing_docs)] // documentation missing in model
    Ltz,
    #[allow(missing_docs)] // documentation missing in model
    Lub,
    #[allow(missing_docs)] // documentation missing in model
    Lug,
    #[allow(missing_docs)] // documentation missing in model
    Mah,
    #[allow(missing_docs)] // documentation missing in model
    Mal,
    #[allow(missing_docs)] // documentation missing in model
    Mar,
    #[allow(missing_docs)] // documentation missing in model
    Mkd,
    #[allow(missing_docs)] // documentation missing in model
    Mlg,
    #[allow(missing_docs)] // documentation missing in model
    Mlt,
    #[allow(missing_docs)] // documentation missing in model
    Mon,
    #[allow(missing_docs)] // documentation missing in model
    Mri,
    #[allow(missing_docs)] // documentation missing in model
    Msa,
    #[allow(missing_docs)] // documentation missing in model
    Mya,
    #[allow(missing_docs)] // documentation missing in model
    Nau,
    #[allow(missing_docs)] // documentation missing in model
    Nav,
    #[allow(missing_docs)] // documentation missing in model
    Nbl,
    #[allow(missing_docs)] // documentation missing in model
    Nde,
    #[allow(missing_docs)] // documentation missing in model
    Ndo,
    #[allow(missing_docs)] // documentation missing in model
    Nep,
    #[allow(missing_docs)] // documentation missing in model
    Nld,
    #[allow(missing_docs)] // documentation missing in model
    Nno,
    #[allow(missing_docs)] // documentation missing in model
    Nob,
    #[allow(missing_docs)] // documentation missing in model
    Nor,
    #[allow(missing_docs)] // documentation missing in model
    Nya,
    #[allow(missing_docs)] // documentation missing in model
    Oci,
    #[allow(missing_docs)] // documentation missing in model
    Oji,
    #[allow(missing_docs)] // documentation missing in model
    Ori,
    #[allow(missing_docs)] // documentation missing in model
    Orj,
    #[allow(missing_docs)] // documentation missing in model
    Orm,
    #[allow(missing_docs)] // documentation missing in model
    Oss,
    #[allow(missing_docs)] // documentation missing in model
    Pan,
    #[allow(missing_docs)] // documentation missing in model
    Pli,
    #[allow(missing_docs)] // documentation missing in model
    Pol,
    #[allow(missing_docs)] // documentation missing in model
    Por,
    #[allow(missing_docs)] // documentation missing in model
    Pus,
    #[allow(missing_docs)] // documentation missing in model
    Qaa,
    #[allow(missing_docs)] // documentation missing in model
    Qpc,
    #[allow(missing_docs)] // documentation missing in model
    Que,
    #[allow(missing_docs)] // documentation missing in model
    Roh,
    #[allow(missing_docs)] // documentation missing in model
    Ron,
    #[allow(missing_docs)] // documentation missing in model
    Run,
    #[allow(missing_docs)] // documentation missing in model
    Rus,
    #[allow(missing_docs)] // documentation missing in model
    Sag,
    #[allow(missing_docs)] // documentation missing in model
    San,
    #[allow(missing_docs)] // documentation missing in model
    Sin,
    #[allow(missing_docs)] // documentation missing in model
    Slk,
    #[allow(missing_docs)] // documentation missing in model
    Slv,
    #[allow(missing_docs)] // documentation missing in model
    Sme,
    #[allow(missing_docs)] // documentation missing in model
    Smo,
    #[allow(missing_docs)] // documentation missing in model
    Sna,
    #[allow(missing_docs)] // documentation missing in model
    Snd,
    #[allow(missing_docs)] // documentation missing in model
    Som,
    #[allow(missing_docs)] // documentation missing in model
    Sot,
    #[allow(missing_docs)] // documentation missing in model
    Spa,
    #[allow(missing_docs)] // documentation missing in model
    Sqi,
    #[allow(missing_docs)] // documentation missing in model
    Srb,
    #[allow(missing_docs)] // documentation missing in model
    Srd,
    #[allow(missing_docs)] // documentation missing in model
    Srp,
    #[allow(missing_docs)] // documentation missing in model
    Ssw,
    #[allow(missing_docs)] // documentation missing in model
    Sun,
    #[allow(missing_docs)] // documentation missing in model
    Swa,
    #[allow(missing_docs)] // documentation missing in model
    Swe,
    #[allow(missing_docs)] // documentation missing in model
    Tah,
    #[allow(missing_docs)] // documentation missing in model
    Tam,
    #[allow(missing_docs)] // documentation missing in model
    Tat,
    #[allow(missing_docs)] // documentation missing in model
    Tel,
    #[allow(missing_docs)] // documentation missing in model
    Tgk,
    #[allow(missing_docs)] // documentation missing in model
    Tgl,
    #[allow(missing_docs)] // documentation missing in model
    Tha,
    #[allow(missing_docs)] // documentation missing in model
    Tir,
    #[allow(missing_docs)] // documentation missing in model
    Tng,
    #[allow(missing_docs)] // documentation missing in model
    Ton,
    #[allow(missing_docs)] // documentation missing in model
    Tsn,
    #[allow(missing_docs)] // documentation missing in model
    Tso,
    #[allow(missing_docs)] // documentation missing in model
    Tuk,
    #[allow(missing_docs)] // documentation missing in model
    Tur,
    #[allow(missing_docs)] // documentation missing in model
    Twi,
    #[allow(missing_docs)] // documentation missing in model
    Uig,
    #[allow(missing_docs)] // documentation missing in model
    Ukr,
    #[allow(missing_docs)] // documentation missing in model
    Urd,
    #[allow(missing_docs)] // documentation missing in model
    Uzb,
    #[allow(missing_docs)] // documentation missing in model
    Ven,
    #[allow(missing_docs)] // documentation missing in model
    Vie,
    #[allow(missing_docs)] // documentation missing in model
    Vol,
    #[allow(missing_docs)] // documentation missing in model
    Wln,
    #[allow(missing_docs)] // documentation missing in model
    Wol,
    #[allow(missing_docs)] // documentation missing in model
    Xho,
    #[allow(missing_docs)] // documentation missing in model
    Yid,
    #[allow(missing_docs)] // documentation missing in model
    Yor,
    #[allow(missing_docs)] // documentation missing in model
    Zha,
    #[allow(missing_docs)] // documentation missing in model
    Zho,
    #[allow(missing_docs)] // documentation missing in model
    Zul,
    /// `Unknown` contains new variants that have been added since this code was generated.
    Unknown(crate::primitives::UnknownVariantValue),
}
impl std::convert::From<&str> for LanguageCode {
    fn from(s: &str) -> Self {
        match s {
            "AAR" => LanguageCode::Aar,
            "ABK" => LanguageCode::Abk,
            "AFR" => LanguageCode::Afr,
            "AKA" => LanguageCode::Aka,
            "AMH" => LanguageCode::Amh,
            "ARA" => LanguageCode::Ara,
            "ARG" => LanguageCode::Arg,
            "ASM" => LanguageCode::Asm,
            "AVA" => LanguageCode::Ava,
            "AVE" => LanguageCode::Ave,
            "AYM" => LanguageCode::Aym,
            "AZE" => LanguageCode::Aze,
            "BAK" => LanguageCode::Bak,
            "BAM" => LanguageCode::Bam,
            "BEL" => LanguageCode::Bel,
            "BEN" => LanguageCode::Ben,
            "BIH" => LanguageCode::Bih,
            "BIS" => LanguageCode::Bis,
            "BOD" => LanguageCode::Bod,
            "BOS" => LanguageCode::Bos,
            "BRE" => LanguageCode::Bre,
            "BUL" => LanguageCode::Bul,
            "CAT" => LanguageCode::Cat,
            "CES" => LanguageCode::Ces,
            "CHA" => LanguageCode::Cha,
            "CHE" => LanguageCode::Che,
            "CHU" => LanguageCode::Chu,
            "CHV" => LanguageCode::Chv,
            "COR" => LanguageCode::Cor,
            "COS" => LanguageCode::Cos,
            "CRE" => LanguageCode::Cre,
            "CYM" => LanguageCode::Cym,
            "DAN" => LanguageCode::Dan,
            "DEU" => LanguageCode::Deu,
            "DIV" => LanguageCode::Div,
            "DZO" => LanguageCode::Dzo,
            "ELL" => LanguageCode::Ell,
            "ENG" => LanguageCode::Eng,
            "ENM" => LanguageCode::Enm,
            "EPO" => LanguageCode::Epo,
            "EST" => LanguageCode::Est,
            "EUS" => LanguageCode::Eus,
            "EWE" => LanguageCode::Ewe,
            "FAO" => LanguageCode::Fao,
            "FAS" => LanguageCode::Fas,
            "FIJ" => LanguageCode::Fij,
            "FIN" => LanguageCode::Fin,
            "FRA" => LanguageCode::Fra,
            "FRM" => LanguageCode::Frm,
            "FRY" => LanguageCode::Fry,
            "FUL" => LanguageCode::Ful,
            "GER" => LanguageCode::Ger,
            "GLA" => LanguageCode::Gla,
            "GLE" => LanguageCode::Gle,
            "GLG" => LanguageCode::Glg,
            "GLV" => LanguageCode::Glv,
            "GRN" => LanguageCode::Grn,
            "GUJ" => LanguageCode::Guj,
            "HAT" => LanguageCode::Hat,
            "HAU" => LanguageCode::Hau,
            "HEB" => LanguageCode::Heb,
            "HER" => LanguageCode::Her,
            "HIN" => LanguageCode::Hin,
            "HMO" => LanguageCode::Hmo,
            "HRV" => LanguageCode::Hrv,
            "HUN" => LanguageCode::Hun,
            "HYE" => LanguageCode::Hye,
            "IBO" => LanguageCode::Ibo,
            "IDO" => LanguageCode::Ido,
            "III" => LanguageCode::Iii,
            "IKU" => LanguageCode::Iku,
            "ILE" => LanguageCode::Ile,
            "INA" => LanguageCode::Ina,
            "IND" => LanguageCode::Ind,
            "IPK" => LanguageCode::Ipk,
            "ISL" => LanguageCode::Isl,
            "ITA" => LanguageCode::Ita,
            "JAV" => LanguageCode::Jav,
            "JPN" => LanguageCode::Jpn,
            "KAL" => LanguageCode::Kal,
            "KAN" => LanguageCode::Kan,
            "KAS" => LanguageCode::Kas,
            "KAT" => LanguageCode::Kat,
            "KAU" => LanguageCode::Kau,
            "KAZ" => LanguageCode::Kaz,
            "KHM" => LanguageCode::Khm,
            "KIK" => LanguageCode::Kik,
            "KIN" => LanguageCode::Kin,
            "KIR" => LanguageCode::Kir,
            "KOM" => LanguageCode::Kom,
            "KON" => LanguageCode::Kon,
            "KOR" => LanguageCode::Kor,
            "KUA" => LanguageCode::Kua,
            "KUR" => LanguageCode::Kur,
            "LAO" => LanguageCode::Lao,
            "LAT" => LanguageCode::Lat,
            "LAV" => LanguageCode::Lav,
            "LIM" => LanguageCode::Lim,
            "LIN" => LanguageCode::Lin,
            "LIT" => LanguageCode::Lit,
            "LTZ" => LanguageCode::Ltz,
            "LUB" => LanguageCode::Lub,
            "LUG" => LanguageCode::Lug,
            "MAH" => LanguageCode::Mah,
            "MAL" => LanguageCode::Mal,
            "MAR" => LanguageCode::Mar,
            "MKD" => LanguageCode::Mkd,
            "MLG" => LanguageCode::Mlg,
            "MLT" => LanguageCode::Mlt,
            "MON" => LanguageCode::Mon,
            "MRI" => LanguageCode::Mri,
            "MSA" => LanguageCode::Msa,
            "MYA" => LanguageCode::Mya,
            "NAU" => LanguageCode::Nau,
            "NAV" => LanguageCode::Nav,
            "NBL" => LanguageCode::Nbl,
            "NDE" => LanguageCode::Nde,
            "NDO" => LanguageCode::Ndo,
            "NEP" => LanguageCode::Nep,
            "NLD" => LanguageCode::Nld,
            "NNO" => LanguageCode::Nno,
            "NOB" => LanguageCode::Nob,
            "NOR" => LanguageCode::Nor,
            "NYA" => LanguageCode::Nya,
            "OCI" => LanguageCode::Oci,
            "OJI" => LanguageCode::Oji,
            "ORI" => LanguageCode::Ori,
            "ORJ" => LanguageCode::Orj,
            "ORM" => LanguageCode::Orm,
            "OSS" => LanguageCode::Oss,
            "PAN" => LanguageCode::Pan,
            "PLI" => LanguageCode::Pli,
            "POL" => LanguageCode::Pol,
            "POR" => LanguageCode::Por,
            "PUS" => LanguageCode::Pus,
            "QAA" => LanguageCode::Qaa,
            "QPC" => LanguageCode::Qpc,
            "QUE" => LanguageCode::Que,
            "ROH" => LanguageCode::Roh,
            "RON" => LanguageCode::Ron,
            "RUN" => LanguageCode::Run,
            "RUS" => LanguageCode::Rus,
            "SAG" => LanguageCode::Sag,
            "SAN" => LanguageCode::San,
            "SIN" => LanguageCode::Sin,
            "SLK" => LanguageCode::Slk,
            "SLV" => LanguageCode::Slv,
            "SME" => LanguageCode::Sme,
            "SMO" => LanguageCode::Smo,
            "SNA" => LanguageCode::Sna,
            "SND" => LanguageCode::Snd,
            "SOM" => LanguageCode::Som,
            "SOT" => LanguageCode::Sot,
            "SPA" => LanguageCode::Spa,
            "SQI" => LanguageCode::Sqi,
            "SRB" => LanguageCode::Srb,
            "SRD" => LanguageCode::Srd,
            "SRP" => LanguageCode::Srp,
            "SSW" => LanguageCode::Ssw,
            "SUN" => LanguageCode::Sun,
            "SWA" => LanguageCode::Swa,
            "SWE" => LanguageCode::Swe,
            "TAH" => LanguageCode::Tah,
            "TAM" => LanguageCode::Tam,
            "TAT" => LanguageCode::Tat,
            "TEL" => LanguageCode::Tel,
            "TGK" => LanguageCode::Tgk,
            "TGL" => LanguageCode::Tgl,
            "THA" => LanguageCode::Tha,
            "TIR" => LanguageCode::Tir,
            "TNG" => LanguageCode::Tng,
            "TON" => LanguageCode::Ton,
            "TSN" => LanguageCode::Tsn,
            "TSO" => LanguageCode::Tso,
            "TUK" => LanguageCode::Tuk,
            "TUR" => LanguageCode::Tur,
            "TWI" => LanguageCode::Twi,
            "UIG" => LanguageCode::Uig,
            "UKR" => LanguageCode::Ukr,
            "URD" => LanguageCode::Urd,
            "UZB" => LanguageCode::Uzb,
            "VEN" => LanguageCode::Ven,
            "VIE" => LanguageCode::Vie,
            "VOL" => LanguageCode::Vol,
            "WLN" => LanguageCode::Wln,
            "WOL" => LanguageCode::Wol,
            "XHO" => LanguageCode::Xho,
            "YID" => LanguageCode::Yid,
            "YOR" => LanguageCode::Yor,
            "ZHA" => LanguageCode::Zha,
            "ZHO" => LanguageCode::Zho,
            "ZUL" => LanguageCode::Zul,
            other => {
                LanguageCode::Unknown(crate::primitives::UnknownVariantValue(other.to_owned()))
            }
        }
    }
}
impl std::str::FromStr for LanguageCode {
    type Err = std::convert::Infallible;

    fn from_str(s: &str) -> std::result::Result<Self, Self::Err> {
        Ok(LanguageCode::from(s))
    }
}
impl LanguageCode {
    /// Returns the `&str` value of the enum member.
    pub fn as_str(&self) -> &str {
        match self {
            LanguageCode::Aar => "AAR",
            LanguageCode::Abk => "ABK",
            LanguageCode::Afr => "AFR",
            LanguageCode::Aka => "AKA",
            LanguageCode::Amh => "AMH",
            LanguageCode::Ara => "ARA",
            LanguageCode::Arg => "ARG",
            LanguageCode::Asm => "ASM",
            LanguageCode::Ava => "AVA",
            LanguageCode::Ave => "AVE",
            LanguageCode::Aym => "AYM",
            LanguageCode::Aze => "AZE",
            LanguageCode::Bak => "BAK",
            LanguageCode::Bam => "BAM",
            LanguageCode::Bel => "BEL",
            LanguageCode::Ben => "BEN",
            LanguageCode::Bih => "BIH",
            LanguageCode::Bis => "BIS",
            LanguageCode::Bod => "BOD",
            LanguageCode::Bos => "BOS",
            LanguageCode::Bre => "BRE",
            LanguageCode::Bul => "BUL",
            LanguageCode::Cat => "CAT",
            LanguageCode::Ces => "CES",
            LanguageCode::Cha => "CHA",
            LanguageCode::Che => "CHE",
            LanguageCode::Chu => "CHU",
            LanguageCode::Chv => "CHV",
            LanguageCode::Cor => "COR",
            LanguageCode::Cos => "COS",
            LanguageCode::Cre => "CRE",
            LanguageCode::Cym => "CYM",
            LanguageCode::Dan => "DAN",
            LanguageCode::Deu => "DEU",
            LanguageCode::Div => "DIV",
            LanguageCode::Dzo => "DZO",
            LanguageCode::Ell => "ELL",
            LanguageCode::Eng => "ENG",
            LanguageCode::Enm => "ENM",
            LanguageCode::Epo => "EPO",
            LanguageCode::Est => "EST",
            LanguageCode::Eus => "EUS",
            LanguageCode::Ewe => "EWE",
            LanguageCode::Fao => "FAO",
            LanguageCode::Fas => "FAS",
            LanguageCode::Fij => "FIJ",
            LanguageCode::Fin => "FIN",
            LanguageCode::Fra => "FRA",
            LanguageCode::Frm => "FRM",
            LanguageCode::Fry => "FRY",
            LanguageCode::Ful => "FUL",
            LanguageCode::Ger => "GER",
            LanguageCode::Gla => "GLA",
            LanguageCode::Gle => "GLE",
            LanguageCode::Glg => "GLG",
            LanguageCode::Glv => "GLV",
            LanguageCode::Grn => "GRN",
            LanguageCode::Guj => "GUJ",
            LanguageCode::Hat => "HAT",
            LanguageCode::Hau => "HAU",
            LanguageCode::Heb => "HEB",
            LanguageCode::Her => "HER",
            LanguageCode::Hin => "HIN",
            LanguageCode::Hmo => "HMO",
            LanguageCode::Hrv => "HRV",
            LanguageCode::Hun => "HUN",
            LanguageCode::Hye => "HYE",
            LanguageCode::Ibo => "IBO",
            LanguageCode::Ido => "IDO",
            LanguageCode::Iii => "III",
            LanguageCode::Iku => "IKU",
            LanguageCode::Ile => "ILE",
            LanguageCode::Ina => "INA",
            LanguageCode::Ind => "IND",
            LanguageCode::Ipk => "IPK",
            LanguageCode::Isl => "ISL",
            LanguageCode::Ita => "ITA",
            LanguageCode::Jav => "JAV",
            LanguageCode::Jpn => "JPN",
            LanguageCode::Kal => "KAL",
            LanguageCode::Kan => "KAN",
            LanguageCode::Kas => "KAS",
            LanguageCode::Kat => "KAT",
            LanguageCode::Kau => "KAU",
            LanguageCode::Kaz => "KAZ",
            LanguageCode::Khm => "KHM",
            LanguageCode::Kik => "KIK",
            LanguageCode::Kin => "KIN",
            LanguageCode::Kir => "KIR",
            LanguageCode::Kom => "KOM",
            LanguageCode::Kon => "KON",
            LanguageCode::Kor => "KOR",
            LanguageCode::Kua => "KUA",
            LanguageCode::Kur => "KUR",
            LanguageCode::Lao => "LAO",
            LanguageCode::Lat => "LAT",
            LanguageCode::Lav => "LAV",
            LanguageCode::Lim => "LIM",
            LanguageCode::Lin => "LIN",
            LanguageCode::Lit => "LIT",
            LanguageCode::Ltz => "LTZ",
            LanguageCode::Lub => "LUB",
            LanguageCode::Lug => "LUG",
            LanguageCode::Mah => "MAH",
            LanguageCode::Mal => "MAL",
            LanguageCode::Mar => "MAR",
            LanguageCode::Mkd => "MKD",
            LanguageCode::Mlg => "MLG",
            LanguageCode::Mlt => "MLT",
            LanguageCode::Mon => "MON",
            LanguageCode::Mri => "MRI",
            LanguageCode::Msa => "MSA",
            LanguageCode::Mya => "MYA",
            LanguageCode::Nau => "NAU",
            LanguageCode::Nav => "NAV",
            LanguageCode::Nbl => "NBL",
            LanguageCode::Nde => "NDE",
            LanguageCode::Ndo => "NDO",
            LanguageCode::Nep => "NEP",
            LanguageCode::Nld => "NLD",
            LanguageCode::Nno => "NNO",
            LanguageCode::Nob => "NOB",
            LanguageCode::Nor => "NOR",
            LanguageCode::Nya => "NYA",
            LanguageCode::Oci => "OCI",
            LanguageCode::Oji => "OJI",
            LanguageCode::Ori => "ORI",
            LanguageCode::Orj => "ORJ",
            LanguageCode::Orm => "ORM",
            LanguageCode::Oss => "OSS",
            LanguageCode::Pan => "PAN",
            LanguageCode::Pli => "PLI",
            LanguageCode::Pol => "POL",
            LanguageCode::Por => "POR",
            LanguageCode::Pus => "PUS",
            LanguageCode::Qaa => "QAA",
            LanguageCode::Qpc => "QPC",
            LanguageCode::Que => "QUE",
            LanguageCode::Roh => "ROH",
            LanguageCode::Ron => "RON",
            LanguageCode::Run => "RUN",
            LanguageCode::Rus => "RUS",
            LanguageCode::Sag => "SAG",
            LanguageCode::San => "SAN",
            LanguageCode::Sin => "SIN",
            LanguageCode::Slk => "SLK",
            LanguageCode::Slv => "SLV",
            LanguageCode::Sme => "SME",
            LanguageCode::Smo => "SMO",
            LanguageCode::Sna => "SNA",
            LanguageCode::Snd => "SND",
            LanguageCode::Som => "SOM",
            LanguageCode::Sot => "SOT",
            LanguageCode::Spa => "SPA",
            LanguageCode::Sqi => "SQI",
            LanguageCode::Srb => "SRB",
            LanguageCode::Srd => "SRD",
            LanguageCode::Srp => "SRP",
            LanguageCode::Ssw => "SSW",
            LanguageCode::Sun => "SUN",
            LanguageCode::Swa => "SWA",
            LanguageCode::Swe => "SWE",
            LanguageCode::Tah => "TAH",
            LanguageCode::Tam => "TAM",
            LanguageCode::Tat => "TAT",
            LanguageCode::Tel => "TEL",
            LanguageCode::Tgk => "TGK",
            LanguageCode::Tgl => "TGL",
            LanguageCode::Tha => "THA",
            LanguageCode::Tir => "TIR",
            LanguageCode::Tng => "TNG",
            LanguageCode::Ton => "TON",
            LanguageCode::Tsn => "TSN",
            LanguageCode::Tso => "TSO",
            LanguageCode::Tuk => "TUK",
            LanguageCode::Tur => "TUR",
            LanguageCode::Twi => "TWI",
            LanguageCode::Uig => "UIG",
            LanguageCode::Ukr => "UKR",
            LanguageCode::Urd => "URD",
            LanguageCode::Uzb => "UZB",
            LanguageCode::Ven => "VEN",
            LanguageCode::Vie => "VIE",
            LanguageCode::Vol => "VOL",
            LanguageCode::Wln => "WLN",
            LanguageCode::Wol => "WOL",
            LanguageCode::Xho => "XHO",
            LanguageCode::Yid => "YID",
            LanguageCode::Yor => "YOR",
            LanguageCode::Zha => "ZHA",
            LanguageCode::Zho => "ZHO",
            LanguageCode::Zul => "ZUL",
            LanguageCode::Unknown(value) => value.as_str(),
        }
    }
    /// Returns all the `&str` representations of the enum members.
    pub const fn values() -> &'static [&'static str] {
        &[
            "AAR", "ABK", "AFR", "AKA", "AMH", "ARA", "ARG", "ASM", "AVA", "AVE", "AYM", "AZE",
            "BAK", "BAM", "BEL", "BEN", "BIH", "BIS", "BOD", "BOS", "BRE", "BUL", "CAT", "CES",
            "CHA", "CHE", "CHU", "CHV", "COR", "COS", "CRE", "CYM", "DAN", "DEU", "DIV", "DZO",
            "ELL", "ENG", "ENM", "EPO", "EST", "EUS", "EWE", "FAO", "FAS", "FIJ", "FIN", "FRA",
            "FRM", "FRY", "FUL", "GER", "GLA", "GLE", "GLG", "GLV", "GRN", "GUJ", "HAT", "HAU",
            "HEB", "HER", "HIN", "HMO", "HRV", "HUN", "HYE", "IBO", "IDO", "III", "IKU", "ILE",
            "INA", "IND", "IPK", "ISL", "ITA", "JAV", "JPN", "KAL", "KAN", "KAS", "KAT", "KAU",
            "KAZ", "KHM", "KIK", "KIN", "KIR", "KOM", "KON", "KOR", "KUA", "KUR", "LAO", "LAT",
            "LAV", "LIM", "LIN", "LIT", "LTZ", "LUB", "LUG", "MAH", "MAL", "MAR", "MKD", "MLG",
            "MLT", "MON", "MRI", "MSA", "MYA", "NAU", "NAV", "NBL", "NDE", "NDO", "NEP", "NLD",
            "NNO", "NOB", "NOR", "NYA", "OCI", "OJI", "ORI", "ORJ", "ORM", "OSS", "PAN", "PLI",
            "POL", "POR", "PUS", "QAA", "QPC", "QUE", "ROH", "RON", "RUN", "RUS", "SAG", "SAN",
            "SIN", "SLK", "SLV", "SME", "SMO", "SNA", "SND", "SOM", "SOT", "SPA", "SQI", "SRB",
            "SRD", "SRP", "SSW", "SUN", "SWA", "SWE", "TAH", "TAM", "TAT", "TEL", "TGK", "TGL",
            "THA", "TIR", "TNG", "TON", "TSN", "TSO", "TUK", "TUR", "TWI", "UIG", "UKR", "URD",
            "UZB", "VEN", "VIE", "VOL", "WLN", "WOL", "XHO", "YID", "YOR", "ZHA", "ZHO", "ZUL",
        ]
    }
}
impl AsRef<str> for LanguageCode {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}
