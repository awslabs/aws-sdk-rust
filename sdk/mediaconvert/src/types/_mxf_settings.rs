// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// These settings relate to your MXF output container.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MxfSettings {
    /// Optional. When you have AFD signaling set up in your output video stream, use this setting to choose whether to also include it in the MXF wrapper. Choose Don't copy (NO_COPY) to exclude AFD signaling from the MXF wrapper. Choose Copy from video stream (COPY_FROM_VIDEO) to copy the AFD values from the video stream for this output to the MXF wrapper. Regardless of which option you choose, the AFD values remain in the video stream. Related settings: To set up your output to include or exclude AFD values, see AfdSignaling, under VideoDescription. On the console, find AFD signaling under the output's video encoding settings.
    #[doc(hidden)]
    pub afd_signaling: std::option::Option<crate::types::MxfAfdSignaling>,
    /// Specify the MXF profile, also called shim, for this output. When you choose Auto, MediaConvert chooses a profile based on the video codec and resolution. For a list of codecs supported with each MXF profile, see https://docs.aws.amazon.com/mediaconvert/latest/ug/codecs-supported-with-each-mxf-profile.html. For more information about the automatic selection behavior, see https://docs.aws.amazon.com/mediaconvert/latest/ug/default-automatic-selection-of-mxf-profiles.html.
    #[doc(hidden)]
    pub profile: std::option::Option<crate::types::MxfProfile>,
    /// Specify the XAVC profile settings for MXF outputs when you set your MXF profile to XAVC.
    #[doc(hidden)]
    pub xavc_profile_settings: std::option::Option<crate::types::MxfXavcProfileSettings>,
}
impl MxfSettings {
    /// Optional. When you have AFD signaling set up in your output video stream, use this setting to choose whether to also include it in the MXF wrapper. Choose Don't copy (NO_COPY) to exclude AFD signaling from the MXF wrapper. Choose Copy from video stream (COPY_FROM_VIDEO) to copy the AFD values from the video stream for this output to the MXF wrapper. Regardless of which option you choose, the AFD values remain in the video stream. Related settings: To set up your output to include or exclude AFD values, see AfdSignaling, under VideoDescription. On the console, find AFD signaling under the output's video encoding settings.
    pub fn afd_signaling(&self) -> std::option::Option<&crate::types::MxfAfdSignaling> {
        self.afd_signaling.as_ref()
    }
    /// Specify the MXF profile, also called shim, for this output. When you choose Auto, MediaConvert chooses a profile based on the video codec and resolution. For a list of codecs supported with each MXF profile, see https://docs.aws.amazon.com/mediaconvert/latest/ug/codecs-supported-with-each-mxf-profile.html. For more information about the automatic selection behavior, see https://docs.aws.amazon.com/mediaconvert/latest/ug/default-automatic-selection-of-mxf-profiles.html.
    pub fn profile(&self) -> std::option::Option<&crate::types::MxfProfile> {
        self.profile.as_ref()
    }
    /// Specify the XAVC profile settings for MXF outputs when you set your MXF profile to XAVC.
    pub fn xavc_profile_settings(
        &self,
    ) -> std::option::Option<&crate::types::MxfXavcProfileSettings> {
        self.xavc_profile_settings.as_ref()
    }
}
impl MxfSettings {
    /// Creates a new builder-style object to manufacture [`MxfSettings`](crate::types::MxfSettings).
    pub fn builder() -> crate::types::builders::MxfSettingsBuilder {
        crate::types::builders::MxfSettingsBuilder::default()
    }
}

/// A builder for [`MxfSettings`](crate::types::MxfSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MxfSettingsBuilder {
    pub(crate) afd_signaling: std::option::Option<crate::types::MxfAfdSignaling>,
    pub(crate) profile: std::option::Option<crate::types::MxfProfile>,
    pub(crate) xavc_profile_settings: std::option::Option<crate::types::MxfXavcProfileSettings>,
}
impl MxfSettingsBuilder {
    /// Optional. When you have AFD signaling set up in your output video stream, use this setting to choose whether to also include it in the MXF wrapper. Choose Don't copy (NO_COPY) to exclude AFD signaling from the MXF wrapper. Choose Copy from video stream (COPY_FROM_VIDEO) to copy the AFD values from the video stream for this output to the MXF wrapper. Regardless of which option you choose, the AFD values remain in the video stream. Related settings: To set up your output to include or exclude AFD values, see AfdSignaling, under VideoDescription. On the console, find AFD signaling under the output's video encoding settings.
    pub fn afd_signaling(mut self, input: crate::types::MxfAfdSignaling) -> Self {
        self.afd_signaling = Some(input);
        self
    }
    /// Optional. When you have AFD signaling set up in your output video stream, use this setting to choose whether to also include it in the MXF wrapper. Choose Don't copy (NO_COPY) to exclude AFD signaling from the MXF wrapper. Choose Copy from video stream (COPY_FROM_VIDEO) to copy the AFD values from the video stream for this output to the MXF wrapper. Regardless of which option you choose, the AFD values remain in the video stream. Related settings: To set up your output to include or exclude AFD values, see AfdSignaling, under VideoDescription. On the console, find AFD signaling under the output's video encoding settings.
    pub fn set_afd_signaling(
        mut self,
        input: std::option::Option<crate::types::MxfAfdSignaling>,
    ) -> Self {
        self.afd_signaling = input;
        self
    }
    /// Specify the MXF profile, also called shim, for this output. When you choose Auto, MediaConvert chooses a profile based on the video codec and resolution. For a list of codecs supported with each MXF profile, see https://docs.aws.amazon.com/mediaconvert/latest/ug/codecs-supported-with-each-mxf-profile.html. For more information about the automatic selection behavior, see https://docs.aws.amazon.com/mediaconvert/latest/ug/default-automatic-selection-of-mxf-profiles.html.
    pub fn profile(mut self, input: crate::types::MxfProfile) -> Self {
        self.profile = Some(input);
        self
    }
    /// Specify the MXF profile, also called shim, for this output. When you choose Auto, MediaConvert chooses a profile based on the video codec and resolution. For a list of codecs supported with each MXF profile, see https://docs.aws.amazon.com/mediaconvert/latest/ug/codecs-supported-with-each-mxf-profile.html. For more information about the automatic selection behavior, see https://docs.aws.amazon.com/mediaconvert/latest/ug/default-automatic-selection-of-mxf-profiles.html.
    pub fn set_profile(mut self, input: std::option::Option<crate::types::MxfProfile>) -> Self {
        self.profile = input;
        self
    }
    /// Specify the XAVC profile settings for MXF outputs when you set your MXF profile to XAVC.
    pub fn xavc_profile_settings(mut self, input: crate::types::MxfXavcProfileSettings) -> Self {
        self.xavc_profile_settings = Some(input);
        self
    }
    /// Specify the XAVC profile settings for MXF outputs when you set your MXF profile to XAVC.
    pub fn set_xavc_profile_settings(
        mut self,
        input: std::option::Option<crate::types::MxfXavcProfileSettings>,
    ) -> Self {
        self.xavc_profile_settings = input;
        self
    }
    /// Consumes the builder and constructs a [`MxfSettings`](crate::types::MxfSettings).
    pub fn build(self) -> crate::types::MxfSettings {
        crate::types::MxfSettings {
            afd_signaling: self.afd_signaling,
            profile: self.profile,
            xavc_profile_settings: self.xavc_profile_settings,
        }
    }
}
