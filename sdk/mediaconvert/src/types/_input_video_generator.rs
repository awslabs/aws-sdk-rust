// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// When you include Video generator, MediaConvert creates a video input with black frames. Use this setting if you do not have a video input or if you want to add black video frames before, or after, other inputs. You can specify Video generator, or you can specify an Input file, but you cannot specify both. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/video-generator.html
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InputVideoGenerator {
    /// Specify the number of audio channels to include in your video generator input. MediaConvert creates these audio channels as silent audio within a single audio track. Enter an integer from 1 to 32.
    pub channels: ::std::option::Option<i32>,
    /// Specify the duration, in milliseconds, for your video generator input. Enter an integer from 50 to 86400000.
    pub duration: ::std::option::Option<i32>,
    /// Specify the denominator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate numerator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub framerate_denominator: ::std::option::Option<i32>,
    /// Specify the numerator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate denominator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub framerate_numerator: ::std::option::Option<i32>,
    /// Specify the height, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a height: Enter an even integer from 32 to 8192. When you do, you must also specify a value for width.
    pub height: ::std::option::Option<i32>,
    /// Specify the audio sample rate, in Hz, for the silent audio in your video generator input. Enter an integer from 32000 to 48000.
    pub sample_rate: ::std::option::Option<i32>,
    /// Specify the width, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a width: Enter an even integer from 32 to 8192. When you do, you must also specify a value for height.
    pub width: ::std::option::Option<i32>,
}
impl InputVideoGenerator {
    /// Specify the number of audio channels to include in your video generator input. MediaConvert creates these audio channels as silent audio within a single audio track. Enter an integer from 1 to 32.
    pub fn channels(&self) -> ::std::option::Option<i32> {
        self.channels
    }
    /// Specify the duration, in milliseconds, for your video generator input. Enter an integer from 50 to 86400000.
    pub fn duration(&self) -> ::std::option::Option<i32> {
        self.duration
    }
    /// Specify the denominator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate numerator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub fn framerate_denominator(&self) -> ::std::option::Option<i32> {
        self.framerate_denominator
    }
    /// Specify the numerator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate denominator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub fn framerate_numerator(&self) -> ::std::option::Option<i32> {
        self.framerate_numerator
    }
    /// Specify the height, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a height: Enter an even integer from 32 to 8192. When you do, you must also specify a value for width.
    pub fn height(&self) -> ::std::option::Option<i32> {
        self.height
    }
    /// Specify the audio sample rate, in Hz, for the silent audio in your video generator input. Enter an integer from 32000 to 48000.
    pub fn sample_rate(&self) -> ::std::option::Option<i32> {
        self.sample_rate
    }
    /// Specify the width, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a width: Enter an even integer from 32 to 8192. When you do, you must also specify a value for height.
    pub fn width(&self) -> ::std::option::Option<i32> {
        self.width
    }
}
impl InputVideoGenerator {
    /// Creates a new builder-style object to manufacture [`InputVideoGenerator`](crate::types::InputVideoGenerator).
    pub fn builder() -> crate::types::builders::InputVideoGeneratorBuilder {
        crate::types::builders::InputVideoGeneratorBuilder::default()
    }
}

/// A builder for [`InputVideoGenerator`](crate::types::InputVideoGenerator).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InputVideoGeneratorBuilder {
    pub(crate) channels: ::std::option::Option<i32>,
    pub(crate) duration: ::std::option::Option<i32>,
    pub(crate) framerate_denominator: ::std::option::Option<i32>,
    pub(crate) framerate_numerator: ::std::option::Option<i32>,
    pub(crate) height: ::std::option::Option<i32>,
    pub(crate) sample_rate: ::std::option::Option<i32>,
    pub(crate) width: ::std::option::Option<i32>,
}
impl InputVideoGeneratorBuilder {
    /// Specify the number of audio channels to include in your video generator input. MediaConvert creates these audio channels as silent audio within a single audio track. Enter an integer from 1 to 32.
    pub fn channels(mut self, input: i32) -> Self {
        self.channels = ::std::option::Option::Some(input);
        self
    }
    /// Specify the number of audio channels to include in your video generator input. MediaConvert creates these audio channels as silent audio within a single audio track. Enter an integer from 1 to 32.
    pub fn set_channels(mut self, input: ::std::option::Option<i32>) -> Self {
        self.channels = input;
        self
    }
    /// Specify the number of audio channels to include in your video generator input. MediaConvert creates these audio channels as silent audio within a single audio track. Enter an integer from 1 to 32.
    pub fn get_channels(&self) -> &::std::option::Option<i32> {
        &self.channels
    }
    /// Specify the duration, in milliseconds, for your video generator input. Enter an integer from 50 to 86400000.
    pub fn duration(mut self, input: i32) -> Self {
        self.duration = ::std::option::Option::Some(input);
        self
    }
    /// Specify the duration, in milliseconds, for your video generator input. Enter an integer from 50 to 86400000.
    pub fn set_duration(mut self, input: ::std::option::Option<i32>) -> Self {
        self.duration = input;
        self
    }
    /// Specify the duration, in milliseconds, for your video generator input. Enter an integer from 50 to 86400000.
    pub fn get_duration(&self) -> &::std::option::Option<i32> {
        &self.duration
    }
    /// Specify the denominator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate numerator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub fn framerate_denominator(mut self, input: i32) -> Self {
        self.framerate_denominator = ::std::option::Option::Some(input);
        self
    }
    /// Specify the denominator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate numerator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub fn set_framerate_denominator(mut self, input: ::std::option::Option<i32>) -> Self {
        self.framerate_denominator = input;
        self
    }
    /// Specify the denominator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate numerator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub fn get_framerate_denominator(&self) -> &::std::option::Option<i32> {
        &self.framerate_denominator
    }
    /// Specify the numerator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate denominator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub fn framerate_numerator(mut self, input: i32) -> Self {
        self.framerate_numerator = ::std::option::Option::Some(input);
        self
    }
    /// Specify the numerator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate denominator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub fn set_framerate_numerator(mut self, input: ::std::option::Option<i32>) -> Self {
        self.framerate_numerator = input;
        self
    }
    /// Specify the numerator of the fraction that represents the frame rate for your video generator input. When you do, you must also specify a value for Frame rate denominator. MediaConvert uses a default frame rate of 29.97 when you leave Frame rate numerator and Frame rate denominator blank.
    pub fn get_framerate_numerator(&self) -> &::std::option::Option<i32> {
        &self.framerate_numerator
    }
    /// Specify the height, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a height: Enter an even integer from 32 to 8192. When you do, you must also specify a value for width.
    pub fn height(mut self, input: i32) -> Self {
        self.height = ::std::option::Option::Some(input);
        self
    }
    /// Specify the height, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a height: Enter an even integer from 32 to 8192. When you do, you must also specify a value for width.
    pub fn set_height(mut self, input: ::std::option::Option<i32>) -> Self {
        self.height = input;
        self
    }
    /// Specify the height, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a height: Enter an even integer from 32 to 8192. When you do, you must also specify a value for width.
    pub fn get_height(&self) -> &::std::option::Option<i32> {
        &self.height
    }
    /// Specify the audio sample rate, in Hz, for the silent audio in your video generator input. Enter an integer from 32000 to 48000.
    pub fn sample_rate(mut self, input: i32) -> Self {
        self.sample_rate = ::std::option::Option::Some(input);
        self
    }
    /// Specify the audio sample rate, in Hz, for the silent audio in your video generator input. Enter an integer from 32000 to 48000.
    pub fn set_sample_rate(mut self, input: ::std::option::Option<i32>) -> Self {
        self.sample_rate = input;
        self
    }
    /// Specify the audio sample rate, in Hz, for the silent audio in your video generator input. Enter an integer from 32000 to 48000.
    pub fn get_sample_rate(&self) -> &::std::option::Option<i32> {
        &self.sample_rate
    }
    /// Specify the width, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a width: Enter an even integer from 32 to 8192. When you do, you must also specify a value for height.
    pub fn width(mut self, input: i32) -> Self {
        self.width = ::std::option::Option::Some(input);
        self
    }
    /// Specify the width, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a width: Enter an even integer from 32 to 8192. When you do, you must also specify a value for height.
    pub fn set_width(mut self, input: ::std::option::Option<i32>) -> Self {
        self.width = input;
        self
    }
    /// Specify the width, in pixels, for your video generator input. This is useful for positioning when you include one or more video overlays for this input. To use the default resolution 540x360: Leave both width and height blank. To specify a width: Enter an even integer from 32 to 8192. When you do, you must also specify a value for height.
    pub fn get_width(&self) -> &::std::option::Option<i32> {
        &self.width
    }
    /// Consumes the builder and constructs a [`InputVideoGenerator`](crate::types::InputVideoGenerator).
    pub fn build(self) -> crate::types::InputVideoGenerator {
        crate::types::InputVideoGenerator {
            channels: self.channels,
            duration: self.duration,
            framerate_denominator: self.framerate_denominator,
            framerate_numerator: self.framerate_numerator,
            height: self.height,
            sample_rate: self.sample_rate,
            width: self.width,
        }
    }
}
