// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Settings for audio pitch correction during framerate conversion.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AudioPitchCorrectionSettings {
    /// Use Slow PAL pitch correction to compensate for audio pitch changes during slow PAL frame rate conversion. This setting only applies when Slow PAL is enabled in your output video codec settings. To automatically apply audio pitch correction: Choose Enabled. MediaConvert automatically applies a pitch correction to your output to match the original content's audio pitch. To not apply audio pitch correction: Keep the default value, Disabled.
    pub slow_pal_pitch_correction: ::std::option::Option<crate::types::SlowPalPitchCorrection>,
}
impl AudioPitchCorrectionSettings {
    /// Use Slow PAL pitch correction to compensate for audio pitch changes during slow PAL frame rate conversion. This setting only applies when Slow PAL is enabled in your output video codec settings. To automatically apply audio pitch correction: Choose Enabled. MediaConvert automatically applies a pitch correction to your output to match the original content's audio pitch. To not apply audio pitch correction: Keep the default value, Disabled.
    pub fn slow_pal_pitch_correction(&self) -> ::std::option::Option<&crate::types::SlowPalPitchCorrection> {
        self.slow_pal_pitch_correction.as_ref()
    }
}
impl AudioPitchCorrectionSettings {
    /// Creates a new builder-style object to manufacture [`AudioPitchCorrectionSettings`](crate::types::AudioPitchCorrectionSettings).
    pub fn builder() -> crate::types::builders::AudioPitchCorrectionSettingsBuilder {
        crate::types::builders::AudioPitchCorrectionSettingsBuilder::default()
    }
}

/// A builder for [`AudioPitchCorrectionSettings`](crate::types::AudioPitchCorrectionSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AudioPitchCorrectionSettingsBuilder {
    pub(crate) slow_pal_pitch_correction: ::std::option::Option<crate::types::SlowPalPitchCorrection>,
}
impl AudioPitchCorrectionSettingsBuilder {
    /// Use Slow PAL pitch correction to compensate for audio pitch changes during slow PAL frame rate conversion. This setting only applies when Slow PAL is enabled in your output video codec settings. To automatically apply audio pitch correction: Choose Enabled. MediaConvert automatically applies a pitch correction to your output to match the original content's audio pitch. To not apply audio pitch correction: Keep the default value, Disabled.
    pub fn slow_pal_pitch_correction(mut self, input: crate::types::SlowPalPitchCorrection) -> Self {
        self.slow_pal_pitch_correction = ::std::option::Option::Some(input);
        self
    }
    /// Use Slow PAL pitch correction to compensate for audio pitch changes during slow PAL frame rate conversion. This setting only applies when Slow PAL is enabled in your output video codec settings. To automatically apply audio pitch correction: Choose Enabled. MediaConvert automatically applies a pitch correction to your output to match the original content's audio pitch. To not apply audio pitch correction: Keep the default value, Disabled.
    pub fn set_slow_pal_pitch_correction(mut self, input: ::std::option::Option<crate::types::SlowPalPitchCorrection>) -> Self {
        self.slow_pal_pitch_correction = input;
        self
    }
    /// Use Slow PAL pitch correction to compensate for audio pitch changes during slow PAL frame rate conversion. This setting only applies when Slow PAL is enabled in your output video codec settings. To automatically apply audio pitch correction: Choose Enabled. MediaConvert automatically applies a pitch correction to your output to match the original content's audio pitch. To not apply audio pitch correction: Keep the default value, Disabled.
    pub fn get_slow_pal_pitch_correction(&self) -> &::std::option::Option<crate::types::SlowPalPitchCorrection> {
        &self.slow_pal_pitch_correction
    }
    /// Consumes the builder and constructs a [`AudioPitchCorrectionSettings`](crate::types::AudioPitchCorrectionSettings).
    pub fn build(self) -> crate::types::AudioPitchCorrectionSettings {
        crate::types::AudioPitchCorrectionSettings {
            slow_pal_pitch_correction: self.slow_pal_pitch_correction,
        }
    }
}
