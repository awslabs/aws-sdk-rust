// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Noise reducer filter settings for spatial filter.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NoiseReducerSpatialFilterSettings {
    /// Specify strength of post noise reduction sharpening filter, with 0 disabling the filter and 3 enabling it at maximum strength.
    #[doc(hidden)]
    pub post_filter_sharpen_strength: i32,
    /// The speed of the filter, from -2 (lower speed) to 3 (higher speed), with 0 being the nominal value.
    #[doc(hidden)]
    pub speed: i32,
    /// Relative strength of noise reducing filter. Higher values produce stronger filtering.
    #[doc(hidden)]
    pub strength: i32,
}
impl NoiseReducerSpatialFilterSettings {
    /// Specify strength of post noise reduction sharpening filter, with 0 disabling the filter and 3 enabling it at maximum strength.
    pub fn post_filter_sharpen_strength(&self) -> i32 {
        self.post_filter_sharpen_strength
    }
    /// The speed of the filter, from -2 (lower speed) to 3 (higher speed), with 0 being the nominal value.
    pub fn speed(&self) -> i32 {
        self.speed
    }
    /// Relative strength of noise reducing filter. Higher values produce stronger filtering.
    pub fn strength(&self) -> i32 {
        self.strength
    }
}
impl NoiseReducerSpatialFilterSettings {
    /// Creates a new builder-style object to manufacture [`NoiseReducerSpatialFilterSettings`](crate::types::NoiseReducerSpatialFilterSettings).
    pub fn builder() -> crate::types::builders::NoiseReducerSpatialFilterSettingsBuilder {
        crate::types::builders::NoiseReducerSpatialFilterSettingsBuilder::default()
    }
}

/// A builder for [`NoiseReducerSpatialFilterSettings`](crate::types::NoiseReducerSpatialFilterSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NoiseReducerSpatialFilterSettingsBuilder {
    pub(crate) post_filter_sharpen_strength: std::option::Option<i32>,
    pub(crate) speed: std::option::Option<i32>,
    pub(crate) strength: std::option::Option<i32>,
}
impl NoiseReducerSpatialFilterSettingsBuilder {
    /// Specify strength of post noise reduction sharpening filter, with 0 disabling the filter and 3 enabling it at maximum strength.
    pub fn post_filter_sharpen_strength(mut self, input: i32) -> Self {
        self.post_filter_sharpen_strength = Some(input);
        self
    }
    /// Specify strength of post noise reduction sharpening filter, with 0 disabling the filter and 3 enabling it at maximum strength.
    pub fn set_post_filter_sharpen_strength(mut self, input: std::option::Option<i32>) -> Self {
        self.post_filter_sharpen_strength = input;
        self
    }
    /// The speed of the filter, from -2 (lower speed) to 3 (higher speed), with 0 being the nominal value.
    pub fn speed(mut self, input: i32) -> Self {
        self.speed = Some(input);
        self
    }
    /// The speed of the filter, from -2 (lower speed) to 3 (higher speed), with 0 being the nominal value.
    pub fn set_speed(mut self, input: std::option::Option<i32>) -> Self {
        self.speed = input;
        self
    }
    /// Relative strength of noise reducing filter. Higher values produce stronger filtering.
    pub fn strength(mut self, input: i32) -> Self {
        self.strength = Some(input);
        self
    }
    /// Relative strength of noise reducing filter. Higher values produce stronger filtering.
    pub fn set_strength(mut self, input: std::option::Option<i32>) -> Self {
        self.strength = input;
        self
    }
    /// Consumes the builder and constructs a [`NoiseReducerSpatialFilterSettings`](crate::types::NoiseReducerSpatialFilterSettings).
    pub fn build(self) -> crate::types::NoiseReducerSpatialFilterSettings {
        crate::types::NoiseReducerSpatialFilterSettings {
            post_filter_sharpen_strength: self.post_filter_sharpen_strength.unwrap_or_default(),
            speed: self.speed.unwrap_or_default(),
            strength: self.strength.unwrap_or_default(),
        }
    }
}
