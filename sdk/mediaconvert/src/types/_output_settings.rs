// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Specific settings for this type of output.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OutputSettings {
    /// Settings for HLS output groups
    #[doc(hidden)]
    pub hls_settings: std::option::Option<crate::types::HlsSettings>,
}
impl OutputSettings {
    /// Settings for HLS output groups
    pub fn hls_settings(&self) -> std::option::Option<&crate::types::HlsSettings> {
        self.hls_settings.as_ref()
    }
}
impl OutputSettings {
    /// Creates a new builder-style object to manufacture [`OutputSettings`](crate::types::OutputSettings).
    pub fn builder() -> crate::types::builders::OutputSettingsBuilder {
        crate::types::builders::OutputSettingsBuilder::default()
    }
}

/// A builder for [`OutputSettings`](crate::types::OutputSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OutputSettingsBuilder {
    pub(crate) hls_settings: std::option::Option<crate::types::HlsSettings>,
}
impl OutputSettingsBuilder {
    /// Settings for HLS output groups
    pub fn hls_settings(mut self, input: crate::types::HlsSettings) -> Self {
        self.hls_settings = Some(input);
        self
    }
    /// Settings for HLS output groups
    pub fn set_hls_settings(
        mut self,
        input: std::option::Option<crate::types::HlsSettings>,
    ) -> Self {
        self.hls_settings = input;
        self
    }
    /// Consumes the builder and constructs a [`OutputSettings`](crate::types::OutputSettings).
    pub fn build(self) -> crate::types::OutputSettings {
        crate::types::OutputSettings {
            hls_settings: self.hls_settings,
        }
    }
}
