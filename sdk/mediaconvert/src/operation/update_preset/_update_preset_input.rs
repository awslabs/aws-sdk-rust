// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdatePresetInput {
    /// The new category for the preset, if you are changing it.
    #[doc(hidden)]
    pub category: std::option::Option<std::string::String>,
    /// The new description for the preset, if you are changing it.
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// The name of the preset you are modifying.
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// Settings for preset
    #[doc(hidden)]
    pub settings: std::option::Option<crate::types::PresetSettings>,
}
impl UpdatePresetInput {
    /// The new category for the preset, if you are changing it.
    pub fn category(&self) -> std::option::Option<&str> {
        self.category.as_deref()
    }
    /// The new description for the preset, if you are changing it.
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// The name of the preset you are modifying.
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// Settings for preset
    pub fn settings(&self) -> std::option::Option<&crate::types::PresetSettings> {
        self.settings.as_ref()
    }
}
impl UpdatePresetInput {
    /// Creates a new builder-style object to manufacture [`UpdatePresetInput`](crate::operation::update_preset::UpdatePresetInput).
    pub fn builder() -> crate::operation::update_preset::builders::UpdatePresetInputBuilder {
        crate::operation::update_preset::builders::UpdatePresetInputBuilder::default()
    }
}

/// A builder for [`UpdatePresetInput`](crate::operation::update_preset::UpdatePresetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdatePresetInputBuilder {
    pub(crate) category: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) settings: std::option::Option<crate::types::PresetSettings>,
}
impl UpdatePresetInputBuilder {
    /// The new category for the preset, if you are changing it.
    pub fn category(mut self, input: impl Into<std::string::String>) -> Self {
        self.category = Some(input.into());
        self
    }
    /// The new category for the preset, if you are changing it.
    pub fn set_category(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.category = input;
        self
    }
    /// The new description for the preset, if you are changing it.
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// The new description for the preset, if you are changing it.
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// The name of the preset you are modifying.
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// The name of the preset you are modifying.
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Settings for preset
    pub fn settings(mut self, input: crate::types::PresetSettings) -> Self {
        self.settings = Some(input);
        self
    }
    /// Settings for preset
    pub fn set_settings(
        mut self,
        input: std::option::Option<crate::types::PresetSettings>,
    ) -> Self {
        self.settings = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdatePresetInput`](crate::operation::update_preset::UpdatePresetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_preset::UpdatePresetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::update_preset::UpdatePresetInput {
            category: self.category,
            description: self.description,
            name: self.name,
            settings: self.settings,
        })
    }
}
