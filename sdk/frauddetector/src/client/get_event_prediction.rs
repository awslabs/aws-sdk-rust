// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetEventPrediction`](crate::client::fluent_builders::GetEventPrediction) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`detector_id(impl Into<String>)`](crate::client::fluent_builders::GetEventPrediction::detector_id) / [`set_detector_id(Option<String>)`](crate::client::fluent_builders::GetEventPrediction::set_detector_id): <p>The detector ID.</p>
    ///   - [`detector_version_id(impl Into<String>)`](crate::client::fluent_builders::GetEventPrediction::detector_version_id) / [`set_detector_version_id(Option<String>)`](crate::client::fluent_builders::GetEventPrediction::set_detector_version_id): <p>The detector version ID.</p>
    ///   - [`event_id(impl Into<String>)`](crate::client::fluent_builders::GetEventPrediction::event_id) / [`set_event_id(Option<String>)`](crate::client::fluent_builders::GetEventPrediction::set_event_id): <p>The unique ID used to identify the event.</p>
    ///   - [`event_type_name(impl Into<String>)`](crate::client::fluent_builders::GetEventPrediction::event_type_name) / [`set_event_type_name(Option<String>)`](crate::client::fluent_builders::GetEventPrediction::set_event_type_name): <p>The event type associated with the detector specified for the prediction.</p>
    ///   - [`entities(Vec<Entity>)`](crate::client::fluent_builders::GetEventPrediction::entities) / [`set_entities(Option<Vec<Entity>>)`](crate::client::fluent_builders::GetEventPrediction::set_entities): <p>The entity type (associated with the detector's event type) and specific entity ID representing who performed the event. If an entity id is not available, use "UNKNOWN."</p>
    ///   - [`event_timestamp(impl Into<String>)`](crate::client::fluent_builders::GetEventPrediction::event_timestamp) / [`set_event_timestamp(Option<String>)`](crate::client::fluent_builders::GetEventPrediction::set_event_timestamp): <p>Timestamp that defines when the event under evaluation occurred. The timestamp must be specified using ISO 8601 standard in UTC.</p>
    ///   - [`event_variables(HashMap<String, String>)`](crate::client::fluent_builders::GetEventPrediction::event_variables) / [`set_event_variables(Option<HashMap<String, String>>)`](crate::client::fluent_builders::GetEventPrediction::set_event_variables): <p>Names of the event type's variables you defined in Amazon Fraud Detector to represent data elements and their corresponding values for the event you are sending for evaluation.</p> <important>   <p>You must provide at least one eventVariable</p>  </important>  <p>To ensure most accurate fraud prediction and to simplify your data preparation, Amazon Fraud Detector will replace all missing variables or values as follows:</p>  <p> <b>For Amazon Fraud Detector trained models:</b> </p>  <p>If a null value is provided explicitly for a variable or if a variable is missing, model will replace the null value or the missing variable (no variable name in the eventVariables map) with calculated default mean/medians for numeric variables and with special values for categorical variables.</p>  <p> <b>For imported SageMaker models:</b> </p>  <p>If a null value is provided explicitly for a variable, the model and rules will use “null” as the value. If a variable is not provided (no variable name in the eventVariables map), model and rules will use the default value that is provided for the variable. </p>
    ///   - [`external_model_endpoint_data_blobs(HashMap<String, ModelEndpointDataBlob>)`](crate::client::fluent_builders::GetEventPrediction::external_model_endpoint_data_blobs) / [`set_external_model_endpoint_data_blobs(Option<HashMap<String, ModelEndpointDataBlob>>)`](crate::client::fluent_builders::GetEventPrediction::set_external_model_endpoint_data_blobs): <p>The Amazon SageMaker model endpoint input data blobs.</p>
    /// - On success, responds with [`GetEventPredictionOutput`](crate::output::GetEventPredictionOutput) with field(s):
    ///   - [`model_scores(Option<Vec<ModelScores>>)`](crate::output::GetEventPredictionOutput::model_scores): <p>The model scores. Amazon Fraud Detector generates model scores between 0 and 1000, where 0 is low fraud risk and 1000 is high fraud risk. Model scores are directly related to the false positive rate (FPR). For example, a score of 600 corresponds to an estimated 10% false positive rate whereas a score of 900 corresponds to an estimated 2% false positive rate.</p>
    ///   - [`rule_results(Option<Vec<RuleResult>>)`](crate::output::GetEventPredictionOutput::rule_results): <p>The results from the rules.</p>
    ///   - [`external_model_outputs(Option<Vec<ExternalModelOutputs>>)`](crate::output::GetEventPredictionOutput::external_model_outputs): <p>The model scores for Amazon SageMaker models.</p>
    /// - On failure, responds with [`SdkError<GetEventPredictionError>`](crate::error::GetEventPredictionError)
    pub fn get_event_prediction(&self) -> crate::client::fluent_builders::GetEventPrediction {
        crate::client::fluent_builders::GetEventPrediction::new(self.handle.clone())
    }
}
