// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetBatchPredictionJobs`](crate::client::fluent_builders::GetBatchPredictionJobs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetBatchPredictionJobs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_id(impl Into<String>)`](crate::client::fluent_builders::GetBatchPredictionJobs::job_id) / [`set_job_id(Option<String>)`](crate::client::fluent_builders::GetBatchPredictionJobs::set_job_id): <p>The batch prediction job for which to get the details.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetBatchPredictionJobs::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetBatchPredictionJobs::set_max_results): <p>The maximum number of objects to return for the request.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetBatchPredictionJobs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetBatchPredictionJobs::set_next_token): <p>The next token from the previous request.</p>
    /// - On success, responds with [`GetBatchPredictionJobsOutput`](crate::output::GetBatchPredictionJobsOutput) with field(s):
    ///   - [`batch_predictions(Option<Vec<BatchPrediction>>)`](crate::output::GetBatchPredictionJobsOutput::batch_predictions): <p>An array containing the details of each batch prediction job.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetBatchPredictionJobsOutput::next_token): <p>The next token for the subsequent request.</p>
    /// - On failure, responds with [`SdkError<GetBatchPredictionJobsError>`](crate::error::GetBatchPredictionJobsError)
    pub fn get_batch_prediction_jobs(
        &self,
    ) -> crate::client::fluent_builders::GetBatchPredictionJobs {
        crate::client::fluent_builders::GetBatchPredictionJobs::new(self.handle.clone())
    }
}
