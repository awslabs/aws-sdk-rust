// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutEventType`](crate::client::fluent_builders::PutEventType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::PutEventType::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::PutEventType::set_name): <p>The name.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::PutEventType::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::PutEventType::set_description): <p>The description of the event type.</p>
    ///   - [`event_variables(Vec<String>)`](crate::client::fluent_builders::PutEventType::event_variables) / [`set_event_variables(Option<Vec<String>>)`](crate::client::fluent_builders::PutEventType::set_event_variables): <p>The event type variables.</p>
    ///   - [`labels(Vec<String>)`](crate::client::fluent_builders::PutEventType::labels) / [`set_labels(Option<Vec<String>>)`](crate::client::fluent_builders::PutEventType::set_labels): <p>The event type labels.</p>
    ///   - [`entity_types(Vec<String>)`](crate::client::fluent_builders::PutEventType::entity_types) / [`set_entity_types(Option<Vec<String>>)`](crate::client::fluent_builders::PutEventType::set_entity_types): <p>The entity type for the event type. Example entity types: customer, merchant, account.</p>
    ///   - [`event_ingestion(EventIngestion)`](crate::client::fluent_builders::PutEventType::event_ingestion) / [`set_event_ingestion(Option<EventIngestion>)`](crate::client::fluent_builders::PutEventType::set_event_ingestion): <p>Specifies if ingenstion is enabled or disabled.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::PutEventType::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::PutEventType::set_tags): <p>A collection of key and value pairs.</p>
    /// - On success, responds with [`PutEventTypeOutput`](crate::output::PutEventTypeOutput)
    /// - On failure, responds with [`SdkError<PutEventTypeError>`](crate::error::PutEventTypeError)
    pub fn put_event_type(&self) -> crate::client::fluent_builders::PutEventType {
        crate::client::fluent_builders::PutEventType::new(self.handle.clone())
    }
}
