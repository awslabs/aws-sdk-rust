// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDetectorVersion`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`detector_id(impl Into<String>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::detector_id) / [`set_detector_id(Option<String>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::set_detector_id):<br>required: **true**<br><p>The parent detector ID for the detector version you want to update.</p><br>
    ///   - [`detector_version_id(impl Into<String>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::detector_version_id) / [`set_detector_version_id(Option<String>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::set_detector_version_id):<br>required: **true**<br><p>The detector version ID. </p><br>
    ///   - [`external_model_endpoints(impl Into<String>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::external_model_endpoints) / [`set_external_model_endpoints(Option<Vec::<String>>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::set_external_model_endpoints):<br>required: **true**<br><p>The Amazon SageMaker model endpoints to include in the detector version.</p><br>
    ///   - [`rules(Rule)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::rules) / [`set_rules(Option<Vec::<Rule>>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::set_rules):<br>required: **true**<br><p>The rules to include in the detector version.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::set_description):<br>required: **false**<br><p>The detector version description. </p><br>
    ///   - [`model_versions(ModelVersion)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::model_versions) / [`set_model_versions(Option<Vec::<ModelVersion>>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::set_model_versions):<br>required: **false**<br><p>The model versions to include in the detector version.</p><br>
    ///   - [`rule_execution_mode(RuleExecutionMode)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::rule_execution_mode) / [`set_rule_execution_mode(Option<RuleExecutionMode>)`](crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::set_rule_execution_mode):<br>required: **false**<br><p>The rule execution mode to add to the detector.</p>  <p>If you specify <code>FIRST_MATCHED</code>, Amazon Fraud Detector evaluates rules sequentially, first to last, stopping at the first matched rule. Amazon Fraud dectector then provides the outcomes for that single rule.</p>  <p>If you specifiy <code>ALL_MATCHED</code>, Amazon Fraud Detector evaluates all rules and returns the outcomes for all matched rules. You can define and edit the rule mode at the detector version level, when it is in draft status.</p>  <p>The default behavior is <code>FIRST_MATCHED</code>.</p><br>
    /// - On success, responds with [`UpdateDetectorVersionOutput`](crate::operation::update_detector_version::UpdateDetectorVersionOutput)
    /// - On failure, responds with [`SdkError<UpdateDetectorVersionError>`](crate::operation::update_detector_version::UpdateDetectorVersionError)
    pub fn update_detector_version(&self) -> crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder {
        crate::operation::update_detector_version::builders::UpdateDetectorVersionFluentBuilder::new(self.handle.clone())
    }
}
