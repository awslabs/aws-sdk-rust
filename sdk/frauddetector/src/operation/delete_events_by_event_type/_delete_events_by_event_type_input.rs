// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteEventsByEventTypeInput {
    /// <p>The name of the event type.</p>
    pub event_type_name: ::std::option::Option<::std::string::String>,
}
impl DeleteEventsByEventTypeInput {
    /// <p>The name of the event type.</p>
    pub fn event_type_name(&self) -> ::std::option::Option<&str> {
        self.event_type_name.as_deref()
    }
}
impl DeleteEventsByEventTypeInput {
    /// Creates a new builder-style object to manufacture [`DeleteEventsByEventTypeInput`](crate::operation::delete_events_by_event_type::DeleteEventsByEventTypeInput).
    pub fn builder() -> crate::operation::delete_events_by_event_type::builders::DeleteEventsByEventTypeInputBuilder {
        crate::operation::delete_events_by_event_type::builders::DeleteEventsByEventTypeInputBuilder::default()
    }
}

/// A builder for [`DeleteEventsByEventTypeInput`](crate::operation::delete_events_by_event_type::DeleteEventsByEventTypeInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteEventsByEventTypeInputBuilder {
    pub(crate) event_type_name: ::std::option::Option<::std::string::String>,
}
impl DeleteEventsByEventTypeInputBuilder {
    /// <p>The name of the event type.</p>
    /// This field is required.
    pub fn event_type_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_type_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the event type.</p>
    pub fn set_event_type_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_type_name = input;
        self
    }
    /// <p>The name of the event type.</p>
    pub fn get_event_type_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_type_name
    }
    /// Consumes the builder and constructs a [`DeleteEventsByEventTypeInput`](crate::operation::delete_events_by_event_type::DeleteEventsByEventTypeInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_events_by_event_type::DeleteEventsByEventTypeInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_events_by_event_type::DeleteEventsByEventTypeInput {
            event_type_name: self.event_type_name,
        })
    }
}
