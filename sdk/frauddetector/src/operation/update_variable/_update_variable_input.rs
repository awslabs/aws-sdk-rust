// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateVariableInput {
    /// <p>The name of the variable.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The new default value of the variable.</p>
    pub default_value: ::std::option::Option<::std::string::String>,
    /// <p>The new description.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The variable type. For more information see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types">Variable types</a>.</p>
    pub variable_type: ::std::option::Option<::std::string::String>,
}
impl UpdateVariableInput {
    /// <p>The name of the variable.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The new default value of the variable.</p>
    pub fn default_value(&self) -> ::std::option::Option<&str> {
        self.default_value.as_deref()
    }
    /// <p>The new description.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The variable type. For more information see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types">Variable types</a>.</p>
    pub fn variable_type(&self) -> ::std::option::Option<&str> {
        self.variable_type.as_deref()
    }
}
impl UpdateVariableInput {
    /// Creates a new builder-style object to manufacture [`UpdateVariableInput`](crate::operation::update_variable::UpdateVariableInput).
    pub fn builder() -> crate::operation::update_variable::builders::UpdateVariableInputBuilder {
        crate::operation::update_variable::builders::UpdateVariableInputBuilder::default()
    }
}

/// A builder for [`UpdateVariableInput`](crate::operation::update_variable::UpdateVariableInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateVariableInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) default_value: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) variable_type: ::std::option::Option<::std::string::String>,
}
impl UpdateVariableInputBuilder {
    /// <p>The name of the variable.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the variable.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the variable.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The new default value of the variable.</p>
    pub fn default_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.default_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The new default value of the variable.</p>
    pub fn set_default_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.default_value = input;
        self
    }
    /// <p>The new default value of the variable.</p>
    pub fn get_default_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.default_value
    }
    /// <p>The new description.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The new description.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The new description.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The variable type. For more information see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types">Variable types</a>.</p>
    pub fn variable_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.variable_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The variable type. For more information see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types">Variable types</a>.</p>
    pub fn set_variable_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.variable_type = input;
        self
    }
    /// <p>The variable type. For more information see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types">Variable types</a>.</p>
    pub fn get_variable_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.variable_type
    }
    /// Consumes the builder and constructs a [`UpdateVariableInput`](crate::operation::update_variable::UpdateVariableInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_variable::UpdateVariableInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_variable::UpdateVariableInput {
            name: self.name,
            default_value: self.default_value,
            description: self.description,
            variable_type: self.variable_type,
        })
    }
}
