// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The model version evalutions. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModelVersionEvaluation {
    /// <p> The output variable name. </p>
    #[doc(hidden)]
    pub output_variable_name: std::option::Option<std::string::String>,
    /// <p> The evaluation score generated for the model version. </p>
    #[doc(hidden)]
    pub evaluation_score: std::option::Option<std::string::String>,
    /// <p> The prediction explanations generated for the model version. </p>
    #[doc(hidden)]
    pub prediction_explanations: std::option::Option<crate::types::PredictionExplanations>,
}
impl ModelVersionEvaluation {
    /// <p> The output variable name. </p>
    pub fn output_variable_name(&self) -> std::option::Option<&str> {
        self.output_variable_name.as_deref()
    }
    /// <p> The evaluation score generated for the model version. </p>
    pub fn evaluation_score(&self) -> std::option::Option<&str> {
        self.evaluation_score.as_deref()
    }
    /// <p> The prediction explanations generated for the model version. </p>
    pub fn prediction_explanations(
        &self,
    ) -> std::option::Option<&crate::types::PredictionExplanations> {
        self.prediction_explanations.as_ref()
    }
}
impl ModelVersionEvaluation {
    /// Creates a new builder-style object to manufacture [`ModelVersionEvaluation`](crate::types::ModelVersionEvaluation).
    pub fn builder() -> crate::types::builders::ModelVersionEvaluationBuilder {
        crate::types::builders::ModelVersionEvaluationBuilder::default()
    }
}

/// A builder for [`ModelVersionEvaluation`](crate::types::ModelVersionEvaluation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModelVersionEvaluationBuilder {
    pub(crate) output_variable_name: std::option::Option<std::string::String>,
    pub(crate) evaluation_score: std::option::Option<std::string::String>,
    pub(crate) prediction_explanations: std::option::Option<crate::types::PredictionExplanations>,
}
impl ModelVersionEvaluationBuilder {
    /// <p> The output variable name. </p>
    pub fn output_variable_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.output_variable_name = Some(input.into());
        self
    }
    /// <p> The output variable name. </p>
    pub fn set_output_variable_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.output_variable_name = input;
        self
    }
    /// <p> The evaluation score generated for the model version. </p>
    pub fn evaluation_score(mut self, input: impl Into<std::string::String>) -> Self {
        self.evaluation_score = Some(input.into());
        self
    }
    /// <p> The evaluation score generated for the model version. </p>
    pub fn set_evaluation_score(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.evaluation_score = input;
        self
    }
    /// <p> The prediction explanations generated for the model version. </p>
    pub fn prediction_explanations(mut self, input: crate::types::PredictionExplanations) -> Self {
        self.prediction_explanations = Some(input);
        self
    }
    /// <p> The prediction explanations generated for the model version. </p>
    pub fn set_prediction_explanations(
        mut self,
        input: std::option::Option<crate::types::PredictionExplanations>,
    ) -> Self {
        self.prediction_explanations = input;
        self
    }
    /// Consumes the builder and constructs a [`ModelVersionEvaluation`](crate::types::ModelVersionEvaluation).
    pub fn build(self) -> crate::types::ModelVersionEvaluation {
        crate::types::ModelVersionEvaluation {
            output_variable_name: self.output_variable_name,
            evaluation_score: self.evaluation_score,
            prediction_explanations: self.prediction_explanations,
        }
    }
}
