// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of the relative importance of the aggregated variables.</p>
/// <p>Account Takeover Insights (ATI) model uses event variables from the login data you provide to continuously calculate a set of variables (aggregated variables) based on historical events. For example, your ATI model might calculate the number of times an user has logged in using the same IP address. In this case, event variables used to derive the aggregated variables are <code>IP address</code> and <code>user</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AggregatedVariablesImportanceMetrics {
    /// <p> List of variables' metrics. </p>
    #[doc(hidden)]
    pub log_odds_metrics: std::option::Option<std::vec::Vec<crate::types::AggregatedLogOddsMetric>>,
}
impl AggregatedVariablesImportanceMetrics {
    /// <p> List of variables' metrics. </p>
    pub fn log_odds_metrics(
        &self,
    ) -> std::option::Option<&[crate::types::AggregatedLogOddsMetric]> {
        self.log_odds_metrics.as_deref()
    }
}
impl AggregatedVariablesImportanceMetrics {
    /// Creates a new builder-style object to manufacture [`AggregatedVariablesImportanceMetrics`](crate::types::AggregatedVariablesImportanceMetrics).
    pub fn builder() -> crate::types::builders::AggregatedVariablesImportanceMetricsBuilder {
        crate::types::builders::AggregatedVariablesImportanceMetricsBuilder::default()
    }
}

/// A builder for [`AggregatedVariablesImportanceMetrics`](crate::types::AggregatedVariablesImportanceMetrics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AggregatedVariablesImportanceMetricsBuilder {
    pub(crate) log_odds_metrics:
        std::option::Option<std::vec::Vec<crate::types::AggregatedLogOddsMetric>>,
}
impl AggregatedVariablesImportanceMetricsBuilder {
    /// Appends an item to `log_odds_metrics`.
    ///
    /// To override the contents of this collection use [`set_log_odds_metrics`](Self::set_log_odds_metrics).
    ///
    /// <p> List of variables' metrics. </p>
    pub fn log_odds_metrics(mut self, input: crate::types::AggregatedLogOddsMetric) -> Self {
        let mut v = self.log_odds_metrics.unwrap_or_default();
        v.push(input);
        self.log_odds_metrics = Some(v);
        self
    }
    /// <p> List of variables' metrics. </p>
    pub fn set_log_odds_metrics(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AggregatedLogOddsMetric>>,
    ) -> Self {
        self.log_odds_metrics = input;
        self
    }
    /// Consumes the builder and constructs a [`AggregatedVariablesImportanceMetrics`](crate::types::AggregatedVariablesImportanceMetrics).
    pub fn build(self) -> crate::types::AggregatedVariablesImportanceMetrics {
        crate::types::AggregatedVariablesImportanceMetrics {
            log_odds_metrics: self.log_odds_metrics,
        }
    }
}
