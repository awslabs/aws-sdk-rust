// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The Transaction Fraud Insights (TFI) model performance score. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TfiModelPerformance {
    /// <p> The area under the curve (auc). This summarizes the total positive rate (tpr) and false positive rate (FPR) across all possible model score thresholds. </p>
    #[doc(hidden)]
    pub auc: std::option::Option<f32>,
}
impl TfiModelPerformance {
    /// <p> The area under the curve (auc). This summarizes the total positive rate (tpr) and false positive rate (FPR) across all possible model score thresholds. </p>
    pub fn auc(&self) -> std::option::Option<f32> {
        self.auc
    }
}
impl TfiModelPerformance {
    /// Creates a new builder-style object to manufacture [`TfiModelPerformance`](crate::types::TfiModelPerformance).
    pub fn builder() -> crate::types::builders::TfiModelPerformanceBuilder {
        crate::types::builders::TfiModelPerformanceBuilder::default()
    }
}

/// A builder for [`TfiModelPerformance`](crate::types::TfiModelPerformance).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TfiModelPerformanceBuilder {
    pub(crate) auc: std::option::Option<f32>,
}
impl TfiModelPerformanceBuilder {
    /// <p> The area under the curve (auc). This summarizes the total positive rate (tpr) and false positive rate (FPR) across all possible model score thresholds. </p>
    pub fn auc(mut self, input: f32) -> Self {
        self.auc = Some(input);
        self
    }
    /// <p> The area under the curve (auc). This summarizes the total positive rate (tpr) and false positive rate (FPR) across all possible model score thresholds. </p>
    pub fn set_auc(mut self, input: std::option::Option<f32>) -> Self {
        self.auc = input;
        self
    }
    /// Consumes the builder and constructs a [`TfiModelPerformance`](crate::types::TfiModelPerformance).
    pub fn build(self) -> crate::types::TfiModelPerformance {
        crate::types::TfiModelPerformance { auc: self.auc }
    }
}
