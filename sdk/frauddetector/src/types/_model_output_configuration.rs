// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the Amazon Sagemaker model output configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModelOutputConfiguration {
    /// <p>The format of the model output configuration.</p>
    pub format: crate::types::ModelOutputDataFormat,
    /// <p>A map of JSON keys in response from SageMaker to the Amazon Fraud Detector variables. </p>
    pub json_key_to_variable_map: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    /// <p>A map of CSV index values in the SageMaker response to the Amazon Fraud Detector variables. </p>
    pub csv_index_to_variable_map: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl ModelOutputConfiguration {
    /// <p>The format of the model output configuration.</p>
    pub fn format(&self) -> &crate::types::ModelOutputDataFormat {
        &self.format
    }
    /// <p>A map of JSON keys in response from SageMaker to the Amazon Fraud Detector variables. </p>
    pub fn json_key_to_variable_map(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.json_key_to_variable_map.as_ref()
    }
    /// <p>A map of CSV index values in the SageMaker response to the Amazon Fraud Detector variables. </p>
    pub fn csv_index_to_variable_map(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.csv_index_to_variable_map.as_ref()
    }
}
impl ModelOutputConfiguration {
    /// Creates a new builder-style object to manufacture [`ModelOutputConfiguration`](crate::types::ModelOutputConfiguration).
    pub fn builder() -> crate::types::builders::ModelOutputConfigurationBuilder {
        crate::types::builders::ModelOutputConfigurationBuilder::default()
    }
}

/// A builder for [`ModelOutputConfiguration`](crate::types::ModelOutputConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ModelOutputConfigurationBuilder {
    pub(crate) format: ::std::option::Option<crate::types::ModelOutputDataFormat>,
    pub(crate) json_key_to_variable_map: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    pub(crate) csv_index_to_variable_map: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl ModelOutputConfigurationBuilder {
    /// <p>The format of the model output configuration.</p>
    /// This field is required.
    pub fn format(mut self, input: crate::types::ModelOutputDataFormat) -> Self {
        self.format = ::std::option::Option::Some(input);
        self
    }
    /// <p>The format of the model output configuration.</p>
    pub fn set_format(mut self, input: ::std::option::Option<crate::types::ModelOutputDataFormat>) -> Self {
        self.format = input;
        self
    }
    /// <p>The format of the model output configuration.</p>
    pub fn get_format(&self) -> &::std::option::Option<crate::types::ModelOutputDataFormat> {
        &self.format
    }
    /// Adds a key-value pair to `json_key_to_variable_map`.
    ///
    /// To override the contents of this collection use [`set_json_key_to_variable_map`](Self::set_json_key_to_variable_map).
    ///
    /// <p>A map of JSON keys in response from SageMaker to the Amazon Fraud Detector variables. </p>
    pub fn json_key_to_variable_map(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        let mut hash_map = self.json_key_to_variable_map.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.json_key_to_variable_map = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A map of JSON keys in response from SageMaker to the Amazon Fraud Detector variables. </p>
    pub fn set_json_key_to_variable_map(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    ) -> Self {
        self.json_key_to_variable_map = input;
        self
    }
    /// <p>A map of JSON keys in response from SageMaker to the Amazon Fraud Detector variables. </p>
    pub fn get_json_key_to_variable_map(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.json_key_to_variable_map
    }
    /// Adds a key-value pair to `csv_index_to_variable_map`.
    ///
    /// To override the contents of this collection use [`set_csv_index_to_variable_map`](Self::set_csv_index_to_variable_map).
    ///
    /// <p>A map of CSV index values in the SageMaker response to the Amazon Fraud Detector variables. </p>
    pub fn csv_index_to_variable_map(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        let mut hash_map = self.csv_index_to_variable_map.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.csv_index_to_variable_map = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A map of CSV index values in the SageMaker response to the Amazon Fraud Detector variables. </p>
    pub fn set_csv_index_to_variable_map(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    ) -> Self {
        self.csv_index_to_variable_map = input;
        self
    }
    /// <p>A map of CSV index values in the SageMaker response to the Amazon Fraud Detector variables. </p>
    pub fn get_csv_index_to_variable_map(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.csv_index_to_variable_map
    }
    /// Consumes the builder and constructs a [`ModelOutputConfiguration`](crate::types::ModelOutputConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`format`](crate::types::builders::ModelOutputConfigurationBuilder::format)
    pub fn build(self) -> ::std::result::Result<crate::types::ModelOutputConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ModelOutputConfiguration {
            format: self.format.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "format",
                    "format was not specified but it is required when building ModelOutputConfiguration",
                )
            })?,
            json_key_to_variable_map: self.json_key_to_variable_map,
            csv_index_to_variable_map: self.csv_index_to_variable_map,
        })
    }
}
