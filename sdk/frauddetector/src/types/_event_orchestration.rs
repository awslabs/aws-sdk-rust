// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The event orchestration status. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EventOrchestration {
    /// <p>Specifies if event orchestration is enabled through Amazon EventBridge.</p>
    pub event_bridge_enabled: bool,
}
impl EventOrchestration {
    /// <p>Specifies if event orchestration is enabled through Amazon EventBridge.</p>
    pub fn event_bridge_enabled(&self) -> bool {
        self.event_bridge_enabled
    }
}
impl EventOrchestration {
    /// Creates a new builder-style object to manufacture [`EventOrchestration`](crate::types::EventOrchestration).
    pub fn builder() -> crate::types::builders::EventOrchestrationBuilder {
        crate::types::builders::EventOrchestrationBuilder::default()
    }
}

/// A builder for [`EventOrchestration`](crate::types::EventOrchestration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EventOrchestrationBuilder {
    pub(crate) event_bridge_enabled: ::std::option::Option<bool>,
}
impl EventOrchestrationBuilder {
    /// <p>Specifies if event orchestration is enabled through Amazon EventBridge.</p>
    /// This field is required.
    pub fn event_bridge_enabled(mut self, input: bool) -> Self {
        self.event_bridge_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies if event orchestration is enabled through Amazon EventBridge.</p>
    pub fn set_event_bridge_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.event_bridge_enabled = input;
        self
    }
    /// <p>Specifies if event orchestration is enabled through Amazon EventBridge.</p>
    pub fn get_event_bridge_enabled(&self) -> &::std::option::Option<bool> {
        &self.event_bridge_enabled
    }
    /// Consumes the builder and constructs a [`EventOrchestration`](crate::types::EventOrchestration).
    /// This method will fail if any of the following fields are not set:
    /// - [`event_bridge_enabled`](crate::types::builders::EventOrchestrationBuilder::event_bridge_enabled)
    pub fn build(self) -> ::std::result::Result<crate::types::EventOrchestration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::EventOrchestration {
            event_bridge_enabled: self.event_bridge_enabled.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "event_bridge_enabled",
                    "event_bridge_enabled was not specified but it is required when building EventOrchestration",
                )
            })?,
        })
    }
}
