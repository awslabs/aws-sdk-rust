// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The log odds metric details.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LogOddsMetric {
    /// <p>The name of the variable.</p>
    #[doc(hidden)]
    pub variable_name: std::option::Option<std::string::String>,
    /// <p>The type of variable.</p>
    #[doc(hidden)]
    pub variable_type: std::option::Option<std::string::String>,
    /// <p>The relative importance of the variable. For more information, see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/model-variable-importance.html">Model variable importance</a>.</p>
    #[doc(hidden)]
    pub variable_importance: std::option::Option<f32>,
}
impl LogOddsMetric {
    /// <p>The name of the variable.</p>
    pub fn variable_name(&self) -> std::option::Option<&str> {
        self.variable_name.as_deref()
    }
    /// <p>The type of variable.</p>
    pub fn variable_type(&self) -> std::option::Option<&str> {
        self.variable_type.as_deref()
    }
    /// <p>The relative importance of the variable. For more information, see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/model-variable-importance.html">Model variable importance</a>.</p>
    pub fn variable_importance(&self) -> std::option::Option<f32> {
        self.variable_importance
    }
}
impl LogOddsMetric {
    /// Creates a new builder-style object to manufacture [`LogOddsMetric`](crate::types::LogOddsMetric).
    pub fn builder() -> crate::types::builders::LogOddsMetricBuilder {
        crate::types::builders::LogOddsMetricBuilder::default()
    }
}

/// A builder for [`LogOddsMetric`](crate::types::LogOddsMetric).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LogOddsMetricBuilder {
    pub(crate) variable_name: std::option::Option<std::string::String>,
    pub(crate) variable_type: std::option::Option<std::string::String>,
    pub(crate) variable_importance: std::option::Option<f32>,
}
impl LogOddsMetricBuilder {
    /// <p>The name of the variable.</p>
    pub fn variable_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.variable_name = Some(input.into());
        self
    }
    /// <p>The name of the variable.</p>
    pub fn set_variable_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.variable_name = input;
        self
    }
    /// <p>The type of variable.</p>
    pub fn variable_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.variable_type = Some(input.into());
        self
    }
    /// <p>The type of variable.</p>
    pub fn set_variable_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.variable_type = input;
        self
    }
    /// <p>The relative importance of the variable. For more information, see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/model-variable-importance.html">Model variable importance</a>.</p>
    pub fn variable_importance(mut self, input: f32) -> Self {
        self.variable_importance = Some(input);
        self
    }
    /// <p>The relative importance of the variable. For more information, see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/model-variable-importance.html">Model variable importance</a>.</p>
    pub fn set_variable_importance(mut self, input: std::option::Option<f32>) -> Self {
        self.variable_importance = input;
        self
    }
    /// Consumes the builder and constructs a [`LogOddsMetric`](crate::types::LogOddsMetric).
    pub fn build(self) -> crate::types::LogOddsMetric {
        crate::types::LogOddsMetric {
            variable_name: self.variable_name,
            variable_type: self.variable_type,
            variable_importance: self.variable_importance,
        }
    }
}
