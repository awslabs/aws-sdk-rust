// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The log odds metric details.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LogOddsMetric {
    /// <p>The name of the variable.</p>
    pub variable_name: ::std::string::String,
    /// <p>The type of variable.</p>
    pub variable_type: ::std::string::String,
    /// <p>The relative importance of the variable. For more information, see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/model-variable-importance.html">Model variable importance</a>.</p>
    pub variable_importance: f32,
}
impl LogOddsMetric {
    /// <p>The name of the variable.</p>
    pub fn variable_name(&self) -> &str {
        use std::ops::Deref;
        self.variable_name.deref()
    }
    /// <p>The type of variable.</p>
    pub fn variable_type(&self) -> &str {
        use std::ops::Deref;
        self.variable_type.deref()
    }
    /// <p>The relative importance of the variable. For more information, see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/model-variable-importance.html">Model variable importance</a>.</p>
    pub fn variable_importance(&self) -> f32 {
        self.variable_importance
    }
}
impl LogOddsMetric {
    /// Creates a new builder-style object to manufacture [`LogOddsMetric`](crate::types::LogOddsMetric).
    pub fn builder() -> crate::types::builders::LogOddsMetricBuilder {
        crate::types::builders::LogOddsMetricBuilder::default()
    }
}

/// A builder for [`LogOddsMetric`](crate::types::LogOddsMetric).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LogOddsMetricBuilder {
    pub(crate) variable_name: ::std::option::Option<::std::string::String>,
    pub(crate) variable_type: ::std::option::Option<::std::string::String>,
    pub(crate) variable_importance: ::std::option::Option<f32>,
}
impl LogOddsMetricBuilder {
    /// <p>The name of the variable.</p>
    /// This field is required.
    pub fn variable_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.variable_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the variable.</p>
    pub fn set_variable_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.variable_name = input;
        self
    }
    /// <p>The name of the variable.</p>
    pub fn get_variable_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.variable_name
    }
    /// <p>The type of variable.</p>
    /// This field is required.
    pub fn variable_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.variable_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The type of variable.</p>
    pub fn set_variable_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.variable_type = input;
        self
    }
    /// <p>The type of variable.</p>
    pub fn get_variable_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.variable_type
    }
    /// <p>The relative importance of the variable. For more information, see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/model-variable-importance.html">Model variable importance</a>.</p>
    /// This field is required.
    pub fn variable_importance(mut self, input: f32) -> Self {
        self.variable_importance = ::std::option::Option::Some(input);
        self
    }
    /// <p>The relative importance of the variable. For more information, see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/model-variable-importance.html">Model variable importance</a>.</p>
    pub fn set_variable_importance(mut self, input: ::std::option::Option<f32>) -> Self {
        self.variable_importance = input;
        self
    }
    /// <p>The relative importance of the variable. For more information, see <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/model-variable-importance.html">Model variable importance</a>.</p>
    pub fn get_variable_importance(&self) -> &::std::option::Option<f32> {
        &self.variable_importance
    }
    /// Consumes the builder and constructs a [`LogOddsMetric`](crate::types::LogOddsMetric).
    /// This method will fail if any of the following fields are not set:
    /// - [`variable_name`](crate::types::builders::LogOddsMetricBuilder::variable_name)
    /// - [`variable_type`](crate::types::builders::LogOddsMetricBuilder::variable_type)
    /// - [`variable_importance`](crate::types::builders::LogOddsMetricBuilder::variable_importance)
    pub fn build(self) -> ::std::result::Result<crate::types::LogOddsMetric, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::LogOddsMetric {
            variable_name: self.variable_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "variable_name",
                    "variable_name was not specified but it is required when building LogOddsMetric",
                )
            })?,
            variable_type: self.variable_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "variable_type",
                    "variable_type was not specified but it is required when building LogOddsMetric",
                )
            })?,
            variable_importance: self.variable_importance.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "variable_importance",
                    "variable_importance was not specified but it is required when building LogOddsMetric",
                )
            })?,
        })
    }
}
