// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_put_external_model_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::put_external_model::PutExternalModelInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.model_endpoint {
        object.key("modelEndpoint").string(var_1.as_str());
    }
    if let Some(var_2) = &input.model_source {
        object.key("modelSource").string(var_2.as_str());
    }
    if let Some(var_3) = &input.invoke_model_endpoint_role_arn {
        object
            .key("invokeModelEndpointRoleArn")
            .string(var_3.as_str());
    }
    if let Some(var_4) = &input.input_configuration {
        #[allow(unused_mut)]
        let mut object_5 = object.key("inputConfiguration").start_object();
        crate::protocol_serde::shape_model_input_configuration::ser_model_input_configuration(
            &mut object_5,
            var_4,
        )?;
        object_5.finish();
    }
    if let Some(var_6) = &input.output_configuration {
        #[allow(unused_mut)]
        let mut object_7 = object.key("outputConfiguration").start_object();
        crate::protocol_serde::shape_model_output_configuration::ser_model_output_configuration(
            &mut object_7,
            var_6,
        )?;
        object_7.finish();
    }
    if let Some(var_8) = &input.model_endpoint_status {
        object.key("modelEndpointStatus").string(var_8.as_str());
    }
    if let Some(var_9) = &input.tags {
        let mut array_10 = object.key("tags").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_12, item_11)?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    Ok(())
}
