// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_event_prediction_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_event_prediction::GetEventPredictionInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.detector_id {
        object.key("detectorId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.detector_version_id {
        object.key("detectorVersionId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.event_id {
        object.key("eventId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.event_type_name {
        object.key("eventTypeName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.entities {
        let mut array_6 = object.key("entities").start_array();
        for item_7 in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_8 = array_6.value().start_object();
                crate::protocol_serde::shape_entity::ser_entity(&mut object_8, item_7)?;
                object_8.finish();
            }
        }
        array_6.finish();
    }
    if let Some(var_9) = &input.event_timestamp {
        object.key("eventTimestamp").string(var_9.as_str());
    }
    if let Some(var_10) = &input.event_variables {
        #[allow(unused_mut)]
        let mut object_11 = object.key("eventVariables").start_object();
        for (key_12, value_13) in var_10 {
            {
                object_11.key(key_12.as_str()).string(value_13.as_str());
            }
        }
        object_11.finish();
    }
    if let Some(var_14) = &input.external_model_endpoint_data_blobs {
        #[allow(unused_mut)]
        let mut object_15 = object.key("externalModelEndpointDataBlobs").start_object();
        for (key_16, value_17) in var_14 {
            {
                #[allow(unused_mut)]
                let mut object_18 = object_15.key(key_16.as_str()).start_object();
                crate::protocol_serde::shape_model_endpoint_data_blob::ser_model_endpoint_data_blob(&mut object_18, value_17)?;
                object_18.finish();
            }
        }
        object_15.finish();
    }
    Ok(())
}
