// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_encoder_configuration;

pub(crate) mod shape_create_ingest_configuration;

pub(crate) mod shape_create_participant_token;

pub(crate) mod shape_create_stage;

pub(crate) mod shape_create_storage_configuration;

pub(crate) mod shape_delete_encoder_configuration;

pub(crate) mod shape_delete_ingest_configuration;

pub(crate) mod shape_delete_public_key;

pub(crate) mod shape_delete_stage;

pub(crate) mod shape_delete_storage_configuration;

pub(crate) mod shape_disconnect_participant;

pub(crate) mod shape_get_composition;

pub(crate) mod shape_get_encoder_configuration;

pub(crate) mod shape_get_ingest_configuration;

pub(crate) mod shape_get_participant;

pub(crate) mod shape_get_public_key;

pub(crate) mod shape_get_stage;

pub(crate) mod shape_get_stage_session;

pub(crate) mod shape_get_storage_configuration;

pub(crate) mod shape_import_public_key;

pub(crate) mod shape_list_compositions;

pub(crate) mod shape_list_encoder_configurations;

pub(crate) mod shape_list_ingest_configurations;

pub(crate) mod shape_list_participant_events;

pub(crate) mod shape_list_participants;

pub(crate) mod shape_list_public_keys;

pub(crate) mod shape_list_stage_sessions;

pub(crate) mod shape_list_stages;

pub(crate) mod shape_list_storage_configurations;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_start_composition;

pub(crate) mod shape_stop_composition;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_ingest_configuration;

pub(crate) mod shape_update_stage;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_encoder_configuration_input;

pub(crate) mod shape_create_ingest_configuration_input;

pub(crate) mod shape_create_participant_token_input;

pub(crate) mod shape_create_stage_input;

pub(crate) mod shape_create_storage_configuration_input;

pub(crate) mod shape_delete_encoder_configuration_input;

pub(crate) mod shape_delete_ingest_configuration_input;

pub(crate) mod shape_delete_public_key_input;

pub(crate) mod shape_delete_stage_input;

pub(crate) mod shape_delete_storage_configuration_input;

pub(crate) mod shape_disconnect_participant_input;

pub(crate) mod shape_get_composition_input;

pub(crate) mod shape_get_encoder_configuration_input;

pub(crate) mod shape_get_ingest_configuration_input;

pub(crate) mod shape_get_participant_input;

pub(crate) mod shape_get_public_key_input;

pub(crate) mod shape_get_stage_input;

pub(crate) mod shape_get_stage_session_input;

pub(crate) mod shape_get_storage_configuration_input;

pub(crate) mod shape_import_public_key_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_compositions_input;

pub(crate) mod shape_list_encoder_configurations_input;

pub(crate) mod shape_list_ingest_configurations_input;

pub(crate) mod shape_list_participant_events_input;

pub(crate) mod shape_list_participants_input;

pub(crate) mod shape_list_public_keys_input;

pub(crate) mod shape_list_stage_sessions_input;

pub(crate) mod shape_list_stages_input;

pub(crate) mod shape_list_storage_configurations_input;

pub(crate) mod shape_pending_verification;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_composition_input;

pub(crate) mod shape_stop_composition_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_ingest_configuration_input;

pub(crate) mod shape_update_stage_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_auto_participant_recording_configuration;

pub(crate) mod shape_composition;

pub(crate) mod shape_composition_summary_list;

pub(crate) mod shape_destination_configuration;

pub(crate) mod shape_encoder_configuration;

pub(crate) mod shape_encoder_configuration_summary_list;

pub(crate) mod shape_event_list;

pub(crate) mod shape_ingest_configuration;

pub(crate) mod shape_ingest_configuration_list;

pub(crate) mod shape_layout_configuration;

pub(crate) mod shape_participant;

pub(crate) mod shape_participant_list;

pub(crate) mod shape_participant_token;

pub(crate) mod shape_participant_token_configuration;

pub(crate) mod shape_participant_token_list;

pub(crate) mod shape_public_key;

pub(crate) mod shape_public_key_list;

pub(crate) mod shape_s3_storage_configuration;

pub(crate) mod shape_stage;

pub(crate) mod shape_stage_session;

pub(crate) mod shape_stage_session_list;

pub(crate) mod shape_stage_summary_list;

pub(crate) mod shape_storage_configuration;

pub(crate) mod shape_storage_configuration_summary_list;

pub(crate) mod shape_tags;

pub(crate) mod shape_video;

pub(crate) mod shape_channel_destination_configuration;

pub(crate) mod shape_composition_summary;

pub(crate) mod shape_destination_list;

pub(crate) mod shape_encoder_configuration_summary;

pub(crate) mod shape_event;

pub(crate) mod shape_grid_configuration;

pub(crate) mod shape_ingest_configuration_summary;

pub(crate) mod shape_participant_attributes;

pub(crate) mod shape_participant_summary;

pub(crate) mod shape_participant_token_attributes;

pub(crate) mod shape_participant_token_capabilities;

pub(crate) mod shape_pip_configuration;

pub(crate) mod shape_public_key_summary;

pub(crate) mod shape_s3_destination_configuration;

pub(crate) mod shape_stage_endpoints;

pub(crate) mod shape_stage_session_summary;

pub(crate) mod shape_stage_summary;

pub(crate) mod shape_storage_configuration_summary;

pub(crate) mod shape_destination;

pub(crate) mod shape_destination_summary_list;

pub(crate) mod shape_participant_recording_media_type_list;

pub(crate) mod shape_recording_configuration;

pub(crate) mod shape_destination_detail;

pub(crate) mod shape_destination_summary;

pub(crate) mod shape_s3_detail;

pub(crate) mod shape_encoder_configuration_arn_list;
