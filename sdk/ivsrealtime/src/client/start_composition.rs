// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartComposition`](crate::operation::start_composition::builders::StartCompositionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stage_arn(impl Into<String>)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::stage_arn) / [`set_stage_arn(Option<String>)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::set_stage_arn):<br>required: **true**<br><p>ARN of the stage to be used for compositing.</p><br>
    ///   - [`idempotency_token(impl Into<String>)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::idempotency_token) / [`set_idempotency_token(Option<String>)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::set_idempotency_token):<br>required: **false**<br><p>Idempotency token.</p><br>
    ///   - [`layout(LayoutConfiguration)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::layout) / [`set_layout(Option<LayoutConfiguration>)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::set_layout):<br>required: **false**<br><p>Layout object to configure composition parameters.</p><br>
    ///   - [`destinations(DestinationConfiguration)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::destinations) / [`set_destinations(Option<Vec::<DestinationConfiguration>>)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::set_destinations):<br>required: **true**<br><p>Array of destination configuration.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::start_composition::builders::StartCompositionFluentBuilder::set_tags):<br>required: **false**<br><p>Tags attached to the resource. Array of maps, each of the form <code>string:string (key:value)</code>. See <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/best-practices-and-strats.html">Best practices and strategies</a> in <i>Tagging AWS Resources and Tag Editor</i> for details, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS has no constraints on tags beyond what is documented there.</p><br>
    /// - On success, responds with [`StartCompositionOutput`](crate::operation::start_composition::StartCompositionOutput) with field(s):
    ///   - [`composition(Option<Composition>)`](crate::operation::start_composition::StartCompositionOutput::composition): <p>The Composition that was created.</p>
    /// - On failure, responds with [`SdkError<StartCompositionError>`](crate::operation::start_composition::StartCompositionError)
    pub fn start_composition(&self) -> crate::operation::start_composition::builders::StartCompositionFluentBuilder {
        crate::operation::start_composition::builders::StartCompositionFluentBuilder::new(self.handle.clone())
    }
}
