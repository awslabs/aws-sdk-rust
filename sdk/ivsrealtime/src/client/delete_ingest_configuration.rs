// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteIngestConfiguration`](crate::operation::delete_ingest_configuration::builders::DeleteIngestConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::operation::delete_ingest_configuration::builders::DeleteIngestConfigurationFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::delete_ingest_configuration::builders::DeleteIngestConfigurationFluentBuilder::set_arn):<br>required: **true**<br><p>ARN of the IngestConfiguration.</p><br>
    ///   - [`force(bool)`](crate::operation::delete_ingest_configuration::builders::DeleteIngestConfigurationFluentBuilder::force) / [`set_force(Option<bool>)`](crate::operation::delete_ingest_configuration::builders::DeleteIngestConfigurationFluentBuilder::set_force):<br>required: **false**<br><p>Optional field to force deletion of the IngestConfiguration. If this is set to <code>true</code> when a participant is actively publishing, the participant is disconnected from the stage, followed by deletion of the IngestConfiguration. Default: <code>false</code>.</p><br>
    /// - On success, responds with [`DeleteIngestConfigurationOutput`](crate::operation::delete_ingest_configuration::DeleteIngestConfigurationOutput)
    /// - On failure, responds with [`SdkError<DeleteIngestConfigurationError>`](crate::operation::delete_ingest_configuration::DeleteIngestConfigurationError)
    pub fn delete_ingest_configuration(&self) -> crate::operation::delete_ingest_configuration::builders::DeleteIngestConfigurationFluentBuilder {
        crate::operation::delete_ingest_configuration::builders::DeleteIngestConfigurationFluentBuilder::new(self.handle.clone())
    }
}
