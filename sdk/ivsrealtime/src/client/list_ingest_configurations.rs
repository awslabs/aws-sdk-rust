// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListIngestConfigurations`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter_by_stage_arn(impl Into<String>)`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::filter_by_stage_arn) / [`set_filter_by_stage_arn(Option<String>)`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::set_filter_by_stage_arn):<br>required: **false**<br><p>Filters the response list to match the specified stage ARN. Only one filter (by stage ARN or by state) can be used at a time.</p><br>
    ///   - [`filter_by_state(IngestConfigurationState)`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::filter_by_state) / [`set_filter_by_state(Option<IngestConfigurationState>)`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::set_filter_by_state):<br>required: **false**<br><p>Filters the response list to match the specified state. Only one filter (by stage ARN or by state) can be used at a time.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::set_next_token):<br>required: **false**<br><p>The first IngestConfiguration to retrieve. This is used for pagination; see the <code>nextToken</code> response field.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::set_max_results):<br>required: **false**<br><p>Maximum number of results to return. Default: 50.</p><br>
    /// - On success, responds with [`ListIngestConfigurationsOutput`](crate::operation::list_ingest_configurations::ListIngestConfigurationsOutput) with field(s):
    ///   - [`ingest_configurations(Vec::<IngestConfigurationSummary>)`](crate::operation::list_ingest_configurations::ListIngestConfigurationsOutput::ingest_configurations): <p>List of the matching ingest configurations (summary information only).</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_ingest_configurations::ListIngestConfigurationsOutput::next_token): <p>If there are more IngestConfigurations than <code>maxResults</code>, use <code>nextToken</code> in the request to get the next set.</p>
    /// - On failure, responds with [`SdkError<ListIngestConfigurationsError>`](crate::operation::list_ingest_configurations::ListIngestConfigurationsError)
    pub fn list_ingest_configurations(&self) -> crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder {
        crate::operation::list_ingest_configurations::builders::ListIngestConfigurationsFluentBuilder::new(self.handle.clone())
    }
}
