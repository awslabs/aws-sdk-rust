// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the complete configuration for how services are grouped and organized in Application Signals.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GroupingConfiguration {
    /// <p>An array of grouping attribute definitions that specify the rules for organizing services into groups.</p>
    pub grouping_attribute_definitions: ::std::vec::Vec<crate::types::GroupingAttributeDefinition>,
    /// <p>The timestamp when the grouping configuration was last updated, expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    pub updated_at: ::aws_smithy_types::DateTime,
}
impl GroupingConfiguration {
    /// <p>An array of grouping attribute definitions that specify the rules for organizing services into groups.</p>
    pub fn grouping_attribute_definitions(&self) -> &[crate::types::GroupingAttributeDefinition] {
        use std::ops::Deref;
        self.grouping_attribute_definitions.deref()
    }
    /// <p>The timestamp when the grouping configuration was last updated, expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    pub fn updated_at(&self) -> &::aws_smithy_types::DateTime {
        &self.updated_at
    }
}
impl GroupingConfiguration {
    /// Creates a new builder-style object to manufacture [`GroupingConfiguration`](crate::types::GroupingConfiguration).
    pub fn builder() -> crate::types::builders::GroupingConfigurationBuilder {
        crate::types::builders::GroupingConfigurationBuilder::default()
    }
}

/// A builder for [`GroupingConfiguration`](crate::types::GroupingConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GroupingConfigurationBuilder {
    pub(crate) grouping_attribute_definitions: ::std::option::Option<::std::vec::Vec<crate::types::GroupingAttributeDefinition>>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl GroupingConfigurationBuilder {
    /// Appends an item to `grouping_attribute_definitions`.
    ///
    /// To override the contents of this collection use [`set_grouping_attribute_definitions`](Self::set_grouping_attribute_definitions).
    ///
    /// <p>An array of grouping attribute definitions that specify the rules for organizing services into groups.</p>
    pub fn grouping_attribute_definitions(mut self, input: crate::types::GroupingAttributeDefinition) -> Self {
        let mut v = self.grouping_attribute_definitions.unwrap_or_default();
        v.push(input);
        self.grouping_attribute_definitions = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of grouping attribute definitions that specify the rules for organizing services into groups.</p>
    pub fn set_grouping_attribute_definitions(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::GroupingAttributeDefinition>>,
    ) -> Self {
        self.grouping_attribute_definitions = input;
        self
    }
    /// <p>An array of grouping attribute definitions that specify the rules for organizing services into groups.</p>
    pub fn get_grouping_attribute_definitions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::GroupingAttributeDefinition>> {
        &self.grouping_attribute_definitions
    }
    /// <p>The timestamp when the grouping configuration was last updated, expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    /// This field is required.
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the grouping configuration was last updated, expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The timestamp when the grouping configuration was last updated, expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`GroupingConfiguration`](crate::types::GroupingConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`grouping_attribute_definitions`](crate::types::builders::GroupingConfigurationBuilder::grouping_attribute_definitions)
    /// - [`updated_at`](crate::types::builders::GroupingConfigurationBuilder::updated_at)
    pub fn build(self) -> ::std::result::Result<crate::types::GroupingConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GroupingConfiguration {
            grouping_attribute_definitions: self.grouping_attribute_definitions.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "grouping_attribute_definitions",
                    "grouping_attribute_definitions was not specified but it is required when building GroupingConfiguration",
                )
            })?,
            updated_at: self.updated_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "updated_at",
                    "updated_at was not specified but it is required when building GroupingConfiguration",
                )
            })?,
        })
    }
}
