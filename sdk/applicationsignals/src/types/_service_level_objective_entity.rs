// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a Service Level Objective (SLO) entity that can be audited for compliance and performance.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServiceLevelObjectiveEntity {
    /// <p>The name of the Service Level Objective.</p>
    pub slo_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the Service Level Objective.</p>
    pub slo_arn: ::std::option::Option<::std::string::String>,
}
impl ServiceLevelObjectiveEntity {
    /// <p>The name of the Service Level Objective.</p>
    pub fn slo_name(&self) -> ::std::option::Option<&str> {
        self.slo_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the Service Level Objective.</p>
    pub fn slo_arn(&self) -> ::std::option::Option<&str> {
        self.slo_arn.as_deref()
    }
}
impl ServiceLevelObjectiveEntity {
    /// Creates a new builder-style object to manufacture [`ServiceLevelObjectiveEntity`](crate::types::ServiceLevelObjectiveEntity).
    pub fn builder() -> crate::types::builders::ServiceLevelObjectiveEntityBuilder {
        crate::types::builders::ServiceLevelObjectiveEntityBuilder::default()
    }
}

/// A builder for [`ServiceLevelObjectiveEntity`](crate::types::ServiceLevelObjectiveEntity).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ServiceLevelObjectiveEntityBuilder {
    pub(crate) slo_name: ::std::option::Option<::std::string::String>,
    pub(crate) slo_arn: ::std::option::Option<::std::string::String>,
}
impl ServiceLevelObjectiveEntityBuilder {
    /// <p>The name of the Service Level Objective.</p>
    pub fn slo_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.slo_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Service Level Objective.</p>
    pub fn set_slo_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.slo_name = input;
        self
    }
    /// <p>The name of the Service Level Objective.</p>
    pub fn get_slo_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.slo_name
    }
    /// <p>The Amazon Resource Name (ARN) of the Service Level Objective.</p>
    pub fn slo_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.slo_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Service Level Objective.</p>
    pub fn set_slo_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.slo_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Service Level Objective.</p>
    pub fn get_slo_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.slo_arn
    }
    /// Consumes the builder and constructs a [`ServiceLevelObjectiveEntity`](crate::types::ServiceLevelObjectiveEntity).
    pub fn build(self) -> crate::types::ServiceLevelObjectiveEntity {
        crate::types::ServiceLevelObjectiveEntity {
            slo_name: self.slo_name,
            slo_arn: self.slo_arn,
        }
    }
}
