// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a CloudWatch Synthetics canary that can be audited for performance and configuration issues.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CanaryEntity {
    /// <p>The name of the CloudWatch Synthetics canary.</p>
    pub canary_name: ::std::string::String,
}
impl CanaryEntity {
    /// <p>The name of the CloudWatch Synthetics canary.</p>
    pub fn canary_name(&self) -> &str {
        use std::ops::Deref;
        self.canary_name.deref()
    }
}
impl CanaryEntity {
    /// Creates a new builder-style object to manufacture [`CanaryEntity`](crate::types::CanaryEntity).
    pub fn builder() -> crate::types::builders::CanaryEntityBuilder {
        crate::types::builders::CanaryEntityBuilder::default()
    }
}

/// A builder for [`CanaryEntity`](crate::types::CanaryEntity).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CanaryEntityBuilder {
    pub(crate) canary_name: ::std::option::Option<::std::string::String>,
}
impl CanaryEntityBuilder {
    /// <p>The name of the CloudWatch Synthetics canary.</p>
    /// This field is required.
    pub fn canary_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.canary_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the CloudWatch Synthetics canary.</p>
    pub fn set_canary_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.canary_name = input;
        self
    }
    /// <p>The name of the CloudWatch Synthetics canary.</p>
    pub fn get_canary_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.canary_name
    }
    /// Consumes the builder and constructs a [`CanaryEntity`](crate::types::CanaryEntity).
    /// This method will fail if any of the following fields are not set:
    /// - [`canary_name`](crate::types::builders::CanaryEntityBuilder::canary_name)
    pub fn build(self) -> ::std::result::Result<crate::types::CanaryEntity, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CanaryEntity {
            canary_name: self.canary_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "canary_name",
                    "canary_name was not specified but it is required when building CanaryEntity",
                )
            })?,
        })
    }
}
