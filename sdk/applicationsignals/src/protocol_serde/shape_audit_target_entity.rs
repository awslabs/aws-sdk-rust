// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_audit_target_entity(
    object_2: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AuditTargetEntity,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::AuditTargetEntity::Service(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_2.key("Service").start_object();
            crate::protocol_serde::shape_service_entity::ser_service_entity(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::AuditTargetEntity::Slo(inner) => {
            #[allow(unused_mut)]
            let mut object_2 = object_2.key("Slo").start_object();
            crate::protocol_serde::shape_service_level_objective_entity::ser_service_level_objective_entity(&mut object_2, inner)?;
            object_2.finish();
        }
        crate::types::AuditTargetEntity::ServiceOperation(inner) => {
            #[allow(unused_mut)]
            let mut object_3 = object_2.key("ServiceOperation").start_object();
            crate::protocol_serde::shape_service_operation_entity::ser_service_operation_entity(&mut object_3, inner)?;
            object_3.finish();
        }
        crate::types::AuditTargetEntity::Canary(inner) => {
            #[allow(unused_mut)]
            let mut object_4 = object_2.key("Canary").start_object();
            crate::protocol_serde::shape_canary_entity::ser_canary_entity(&mut object_4, inner)?;
            object_4.finish();
        }
        crate::types::AuditTargetEntity::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "AuditTargetEntity",
            ))
        }
    }
    Ok(())
}
