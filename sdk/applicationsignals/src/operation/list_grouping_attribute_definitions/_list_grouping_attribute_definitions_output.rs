// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListGroupingAttributeDefinitionsOutput {
    /// <p>An array of available grouping attribute definitions that can be used to create grouping configurations.</p>
    pub grouping_attribute_definitions: ::std::vec::Vec<crate::types::GroupingAttributeDefinition>,
    /// <p>The timestamp when the grouping attribute definitions were last updated. Expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    pub updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The token to use for retrieving the next page of results. This value is present only if there are more results available than were returned in the current response.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListGroupingAttributeDefinitionsOutput {
    /// <p>An array of available grouping attribute definitions that can be used to create grouping configurations.</p>
    pub fn grouping_attribute_definitions(&self) -> &[crate::types::GroupingAttributeDefinition] {
        use std::ops::Deref;
        self.grouping_attribute_definitions.deref()
    }
    /// <p>The timestamp when the grouping attribute definitions were last updated. Expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    pub fn updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
    /// <p>The token to use for retrieving the next page of results. This value is present only if there are more results available than were returned in the current response.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListGroupingAttributeDefinitionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListGroupingAttributeDefinitionsOutput {
    /// Creates a new builder-style object to manufacture [`ListGroupingAttributeDefinitionsOutput`](crate::operation::list_grouping_attribute_definitions::ListGroupingAttributeDefinitionsOutput).
    pub fn builder() -> crate::operation::list_grouping_attribute_definitions::builders::ListGroupingAttributeDefinitionsOutputBuilder {
        crate::operation::list_grouping_attribute_definitions::builders::ListGroupingAttributeDefinitionsOutputBuilder::default()
    }
}

/// A builder for [`ListGroupingAttributeDefinitionsOutput`](crate::operation::list_grouping_attribute_definitions::ListGroupingAttributeDefinitionsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListGroupingAttributeDefinitionsOutputBuilder {
    pub(crate) grouping_attribute_definitions: ::std::option::Option<::std::vec::Vec<crate::types::GroupingAttributeDefinition>>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListGroupingAttributeDefinitionsOutputBuilder {
    /// Appends an item to `grouping_attribute_definitions`.
    ///
    /// To override the contents of this collection use [`set_grouping_attribute_definitions`](Self::set_grouping_attribute_definitions).
    ///
    /// <p>An array of available grouping attribute definitions that can be used to create grouping configurations.</p>
    pub fn grouping_attribute_definitions(mut self, input: crate::types::GroupingAttributeDefinition) -> Self {
        let mut v = self.grouping_attribute_definitions.unwrap_or_default();
        v.push(input);
        self.grouping_attribute_definitions = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of available grouping attribute definitions that can be used to create grouping configurations.</p>
    pub fn set_grouping_attribute_definitions(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::GroupingAttributeDefinition>>,
    ) -> Self {
        self.grouping_attribute_definitions = input;
        self
    }
    /// <p>An array of available grouping attribute definitions that can be used to create grouping configurations.</p>
    pub fn get_grouping_attribute_definitions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::GroupingAttributeDefinition>> {
        &self.grouping_attribute_definitions
    }
    /// <p>The timestamp when the grouping attribute definitions were last updated. Expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the grouping attribute definitions were last updated. Expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The timestamp when the grouping attribute definitions were last updated. Expressed as the number of milliseconds since January 1, 1970, 00:00:00 UTC.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// <p>The token to use for retrieving the next page of results. This value is present only if there are more results available than were returned in the current response.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token to use for retrieving the next page of results. This value is present only if there are more results available than were returned in the current response.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token to use for retrieving the next page of results. This value is present only if there are more results available than were returned in the current response.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListGroupingAttributeDefinitionsOutput`](crate::operation::list_grouping_attribute_definitions::ListGroupingAttributeDefinitionsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`grouping_attribute_definitions`](crate::operation::list_grouping_attribute_definitions::builders::ListGroupingAttributeDefinitionsOutputBuilder::grouping_attribute_definitions)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_grouping_attribute_definitions::ListGroupingAttributeDefinitionsOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_grouping_attribute_definitions::ListGroupingAttributeDefinitionsOutput {
                grouping_attribute_definitions: self.grouping_attribute_definitions.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "grouping_attribute_definitions",
                        "grouping_attribute_definitions was not specified but it is required when building ListGroupingAttributeDefinitionsOutput",
                    )
                })?,
                updated_at: self.updated_at,
                next_token: self.next_token,
                _request_id: self._request_id,
            },
        )
    }
}
