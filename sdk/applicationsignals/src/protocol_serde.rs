// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> ::std::result::Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_batch_get_service_level_objective_budget_report;

pub(crate) mod shape_batch_update_exclusion_windows;

pub(crate) mod shape_create_service_level_objective;

pub(crate) mod shape_delete_grouping_configuration;

pub(crate) mod shape_delete_service_level_objective;

pub(crate) mod shape_get_service;

pub(crate) mod shape_get_service_level_objective;

pub(crate) mod shape_list_audit_findings;

pub(crate) mod shape_list_grouping_attribute_definitions;

pub(crate) mod shape_list_service_dependencies;

pub(crate) mod shape_list_service_dependents;

pub(crate) mod shape_list_service_level_objective_exclusion_windows;

pub(crate) mod shape_list_service_level_objectives;

pub(crate) mod shape_list_service_operations;

pub(crate) mod shape_list_service_states;

pub(crate) mod shape_list_services;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_grouping_configuration;

pub(crate) mod shape_start_discovery;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_service_level_objective;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_batch_get_service_level_objective_budget_report_input;

pub(crate) mod shape_batch_update_exclusion_windows_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_service_level_objective_input;

pub(crate) mod shape_get_service_input;

pub(crate) mod shape_list_audit_findings_input;

pub(crate) mod shape_list_service_dependencies_input;

pub(crate) mod shape_list_service_dependents_input;

pub(crate) mod shape_list_service_level_objectives_input;

pub(crate) mod shape_list_service_operations_input;

pub(crate) mod shape_list_service_states_input;

pub(crate) mod shape_put_grouping_configuration_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_service_level_objective_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_attribute_filter;

pub(crate) mod shape_audit_findings;

pub(crate) mod shape_audit_target;

pub(crate) mod shape_batch_update_exclusion_windows_errors;

pub(crate) mod shape_burn_rate_configuration;

pub(crate) mod shape_dependency_config;

pub(crate) mod shape_exclusion_window;

pub(crate) mod shape_exclusion_windows;

pub(crate) mod shape_goal;

pub(crate) mod shape_grouping_attribute_definition;

pub(crate) mod shape_grouping_attribute_definitions;

pub(crate) mod shape_grouping_configuration;

pub(crate) mod shape_log_group_references;

pub(crate) mod shape_request_based_service_level_indicator_config;

pub(crate) mod shape_service;

pub(crate) mod shape_service_dependencies;

pub(crate) mod shape_service_dependents;

pub(crate) mod shape_service_level_indicator_config;

pub(crate) mod shape_service_level_objective;

pub(crate) mod shape_service_level_objective_budget_report_errors;

pub(crate) mod shape_service_level_objective_budget_reports;

pub(crate) mod shape_service_level_objective_ids;

pub(crate) mod shape_service_level_objective_summaries;

pub(crate) mod shape_service_operations;

pub(crate) mod shape_service_states;

pub(crate) mod shape_service_summaries;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_attribute_maps;

pub(crate) mod shape_attributes;

pub(crate) mod shape_audit_finding;

pub(crate) mod shape_audit_target_entity;

pub(crate) mod shape_batch_update_exclusion_windows_error;

pub(crate) mod shape_burn_rate_configurations;

pub(crate) mod shape_interval;

pub(crate) mod shape_metric_references;

pub(crate) mod shape_recurrence_rule;

pub(crate) mod shape_request_based_service_level_indicator;

pub(crate) mod shape_request_based_service_level_indicator_metric_config;

pub(crate) mod shape_service_dependency;

pub(crate) mod shape_service_dependent;

pub(crate) mod shape_service_groups;

pub(crate) mod shape_service_level_indicator;

pub(crate) mod shape_service_level_indicator_metric_config;

pub(crate) mod shape_service_level_objective_budget_report;

pub(crate) mod shape_service_level_objective_budget_report_error;

pub(crate) mod shape_service_level_objective_summary;

pub(crate) mod shape_service_operation;

pub(crate) mod shape_service_state;

pub(crate) mod shape_service_summary;

pub(crate) mod shape_window;

pub(crate) mod shape_attribute_filters;

pub(crate) mod shape_attribute_map;

pub(crate) mod shape_auditor_results;

pub(crate) mod shape_calendar_interval;

pub(crate) mod shape_canary_entity;

pub(crate) mod shape_dependency_graph;

pub(crate) mod shape_grouping_source_key_string_list;

pub(crate) mod shape_latest_change_events;

pub(crate) mod shape_metric_data_query;

pub(crate) mod shape_metric_graph;

pub(crate) mod shape_metric_reference;

pub(crate) mod shape_monitored_request_count_metric_data_queries;

pub(crate) mod shape_request_based_service_level_indicator_metric;

pub(crate) mod shape_rolling_interval;

pub(crate) mod shape_service_entity;

pub(crate) mod shape_service_group;

pub(crate) mod shape_service_level_indicator_metric;

pub(crate) mod shape_service_level_objective_entity;

pub(crate) mod shape_service_operation_entity;

pub(crate) mod shape_auditor_result;

pub(crate) mod shape_change_event;

pub(crate) mod shape_dimensions;

pub(crate) mod shape_edges;

pub(crate) mod shape_metric_data_queries;

pub(crate) mod shape_metric_stat;

pub(crate) mod shape_nodes;

pub(crate) mod shape_attribute_filter_values;

pub(crate) mod shape_dimension;

pub(crate) mod shape_edge;

pub(crate) mod shape_metric;

pub(crate) mod shape_node;
