// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_verify_pin_data_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::verify_pin_data::VerifyPinDataInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.dukpt_attributes {
        #[allow(unused_mut)]
        let mut object_2 = object.key("DukptAttributes").start_object();
        crate::protocol_serde::shape_dukpt_attributes::ser_dukpt_attributes(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.encrypted_pin_block {
        object.key("EncryptedPinBlock").string(var_3.as_str());
    }
    if let Some(var_4) = &input.encryption_key_identifier {
        object.key("EncryptionKeyIdentifier").string(var_4.as_str());
    }
    if let Some(var_5) = &input.pin_block_format {
        object.key("PinBlockFormat").string(var_5.as_str());
    }
    if let Some(var_6) = &input.pin_data_length {
        object.key("PinDataLength").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    if let Some(var_7) = &input.primary_account_number {
        object.key("PrimaryAccountNumber").string(var_7.as_str());
    }
    if let Some(var_8) = &input.verification_attributes {
        #[allow(unused_mut)]
        let mut object_9 = object.key("VerificationAttributes").start_object();
        crate::protocol_serde::shape_pin_verification_attributes::ser_pin_verification_attributes(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.verification_key_identifier {
        object.key("VerificationKeyIdentifier").string(var_10.as_str());
    }
    Ok(())
}
