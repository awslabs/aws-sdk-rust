// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ReEncryptData`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`incoming_key_identifier(impl Into<String>)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::incoming_key_identifier) / [`set_incoming_key_identifier(Option<String>)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::set_incoming_key_identifier):<br>required: **true**<br><p>The <code>keyARN</code> of the encryption key of incoming ciphertext data.</p><br>
    ///   - [`outgoing_key_identifier(impl Into<String>)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::outgoing_key_identifier) / [`set_outgoing_key_identifier(Option<String>)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::set_outgoing_key_identifier):<br>required: **true**<br><p>The <code>keyARN</code> of the encryption key of outgoing ciphertext data after encryption by Amazon Web Services Payment Cryptography.</p><br>
    ///   - [`cipher_text(impl Into<String>)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::cipher_text) / [`set_cipher_text(Option<String>)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::set_cipher_text):<br>required: **true**<br><p>Ciphertext to be encrypted. The minimum allowed length is 16 bytes and maximum allowed length is 4096 bytes.</p><br>
    ///   - [`incoming_encryption_attributes(ReEncryptionAttributes)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::incoming_encryption_attributes) / [`set_incoming_encryption_attributes(Option<ReEncryptionAttributes>)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::set_incoming_encryption_attributes):<br>required: **true**<br><p>The attributes and values for incoming ciphertext.</p><br>
    ///   - [`outgoing_encryption_attributes(ReEncryptionAttributes)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::outgoing_encryption_attributes) / [`set_outgoing_encryption_attributes(Option<ReEncryptionAttributes>)`](crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::set_outgoing_encryption_attributes):<br>required: **true**<br><p>The attributes and values for outgoing ciphertext data after encryption by Amazon Web Services Payment Cryptography.</p><br>
    /// - On success, responds with [`ReEncryptDataOutput`](crate::operation::re_encrypt_data::ReEncryptDataOutput) with field(s):
    ///   - [`key_arn(String)`](crate::operation::re_encrypt_data::ReEncryptDataOutput::key_arn): <p>The keyARN (Amazon Resource Name) of the encryption key that Amazon Web Services Payment Cryptography uses for plaintext encryption.</p>
    ///   - [`key_check_value(String)`](crate::operation::re_encrypt_data::ReEncryptDataOutput::key_check_value): <p>The key check value (KCV) of the encryption key. The KCV is used to check if all parties holding a given key have the same key or to detect that a key has changed. Amazon Web Services Payment Cryptography calculates the KCV by using standard algorithms, typically by encrypting 8 or 16 bytes or "00" or "01" and then truncating the result to the first 3 bytes, or 6 hex digits, of the resulting cryptogram.</p>
    ///   - [`cipher_text(String)`](crate::operation::re_encrypt_data::ReEncryptDataOutput::cipher_text): <p>The encrypted ciphertext.</p>
    /// - On failure, responds with [`SdkError<ReEncryptDataError>`](crate::operation::re_encrypt_data::ReEncryptDataError)
    pub fn re_encrypt_data(&self) -> crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder {
        crate::operation::re_encrypt_data::builders::ReEncryptDataFluentBuilder::new(self.handle.clone())
    }
}
