// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DecryptData`](crate::operation::decrypt_data::builders::DecryptDataFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`key_identifier(impl Into<String>)`](crate::operation::decrypt_data::builders::DecryptDataFluentBuilder::key_identifier) / [`set_key_identifier(Option<String>)`](crate::operation::decrypt_data::builders::DecryptDataFluentBuilder::set_key_identifier):<br>required: **true**<br><p>The <code>keyARN</code> of the encryption key that Amazon Web Services Payment Cryptography uses for ciphertext decryption.</p><br>
    ///   - [`cipher_text(impl Into<String>)`](crate::operation::decrypt_data::builders::DecryptDataFluentBuilder::cipher_text) / [`set_cipher_text(Option<String>)`](crate::operation::decrypt_data::builders::DecryptDataFluentBuilder::set_cipher_text):<br>required: **true**<br><p>The ciphertext to decrypt.</p><br>
    ///   - [`decryption_attributes(EncryptionDecryptionAttributes)`](crate::operation::decrypt_data::builders::DecryptDataFluentBuilder::decryption_attributes) / [`set_decryption_attributes(Option<EncryptionDecryptionAttributes>)`](crate::operation::decrypt_data::builders::DecryptDataFluentBuilder::set_decryption_attributes):<br>required: **true**<br><p>The encryption key type and attributes for ciphertext decryption.</p><br>
    /// - On success, responds with [`DecryptDataOutput`](crate::operation::decrypt_data::DecryptDataOutput) with field(s):
    ///   - [`key_arn(String)`](crate::operation::decrypt_data::DecryptDataOutput::key_arn): <p>The <code>keyARN</code> of the encryption key that Amazon Web Services Payment Cryptography uses for ciphertext decryption.</p>
    ///   - [`key_check_value(String)`](crate::operation::decrypt_data::DecryptDataOutput::key_check_value): <p>The key check value (KCV) of the encryption key. The KCV is used to check if all parties holding a given key have the same key or to detect that a key has changed. Amazon Web Services Payment Cryptography calculates the KCV by using standard algorithms, typically by encrypting 8 or 16 bytes or "00" or "01" and then truncating the result to the first 3 bytes, or 6 hex digits, of the resulting cryptogram.</p>
    ///   - [`plain_text(String)`](crate::operation::decrypt_data::DecryptDataOutput::plain_text): <p>The decrypted plaintext data.</p>
    /// - On failure, responds with [`SdkError<DecryptDataError>`](crate::operation::decrypt_data::DecryptDataError)
    pub fn decrypt_data(&self) -> crate::operation::decrypt_data::builders::DecryptDataFluentBuilder {
        crate::operation::decrypt_data::builders::DecryptDataFluentBuilder::new(self.handle.clone())
    }
}
