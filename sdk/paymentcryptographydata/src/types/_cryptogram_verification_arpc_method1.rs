// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Parameters that are required for ARPC response generation using method1 after ARQC verification is successful.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CryptogramVerificationArpcMethod1 {
    /// <p>The auth code used to calculate APRC after ARQC verification is successful. This is the same auth code used for ARQC generation outside of Amazon Web Services Payment Cryptography.</p>
    pub auth_response_code: ::std::string::String,
}
impl CryptogramVerificationArpcMethod1 {
    /// <p>The auth code used to calculate APRC after ARQC verification is successful. This is the same auth code used for ARQC generation outside of Amazon Web Services Payment Cryptography.</p>
    pub fn auth_response_code(&self) -> &str {
        use std::ops::Deref;
        self.auth_response_code.deref()
    }
}
impl CryptogramVerificationArpcMethod1 {
    /// Creates a new builder-style object to manufacture [`CryptogramVerificationArpcMethod1`](crate::types::CryptogramVerificationArpcMethod1).
    pub fn builder() -> crate::types::builders::CryptogramVerificationArpcMethod1Builder {
        crate::types::builders::CryptogramVerificationArpcMethod1Builder::default()
    }
}

/// A builder for [`CryptogramVerificationArpcMethod1`](crate::types::CryptogramVerificationArpcMethod1).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CryptogramVerificationArpcMethod1Builder {
    pub(crate) auth_response_code: ::std::option::Option<::std::string::String>,
}
impl CryptogramVerificationArpcMethod1Builder {
    /// <p>The auth code used to calculate APRC after ARQC verification is successful. This is the same auth code used for ARQC generation outside of Amazon Web Services Payment Cryptography.</p>
    /// This field is required.
    pub fn auth_response_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.auth_response_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The auth code used to calculate APRC after ARQC verification is successful. This is the same auth code used for ARQC generation outside of Amazon Web Services Payment Cryptography.</p>
    pub fn set_auth_response_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.auth_response_code = input;
        self
    }
    /// <p>The auth code used to calculate APRC after ARQC verification is successful. This is the same auth code used for ARQC generation outside of Amazon Web Services Payment Cryptography.</p>
    pub fn get_auth_response_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.auth_response_code
    }
    /// Consumes the builder and constructs a [`CryptogramVerificationArpcMethod1`](crate::types::CryptogramVerificationArpcMethod1).
    /// This method will fail if any of the following fields are not set:
    /// - [`auth_response_code`](crate::types::builders::CryptogramVerificationArpcMethod1Builder::auth_response_code)
    pub fn build(self) -> ::std::result::Result<crate::types::CryptogramVerificationArpcMethod1, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CryptogramVerificationArpcMethod1 {
            auth_response_code: self.auth_response_code.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "auth_response_code",
                    "auth_response_code was not specified but it is required when building CryptogramVerificationArpcMethod1",
                )
            })?,
        })
    }
}
