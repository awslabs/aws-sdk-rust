// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for AWS Health APIs and Notifications
///
/// Client for invoking operations on AWS Health APIs and Notifications. Each operation on AWS Health APIs and Notifications is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_health::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_health::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_health::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`DescribeAffectedAccountsForOrganization`](crate::client::fluent_builders::DescribeAffectedAccountsForOrganization) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeAffectedAccountsForOrganization::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`event_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeAffectedAccountsForOrganization::event_arn) / [`set_event_arn(Option<String>)`](crate::client::fluent_builders::DescribeAffectedAccountsForOrganization::set_event_arn): <p>The unique identifier for the event. The event ARN has the <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code> format.</p>  <p>For example, an event ARN might look like the following:</p>  <p> <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeAffectedAccountsForOrganization::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeAffectedAccountsForOrganization::set_next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeAffectedAccountsForOrganization::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeAffectedAccountsForOrganization::set_max_results): <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
    /// - On success, responds with [`DescribeAffectedAccountsForOrganizationOutput`](crate::output::DescribeAffectedAccountsForOrganizationOutput) with field(s):
    ///   - [`affected_accounts(Option<Vec<String>>)`](crate::output::DescribeAffectedAccountsForOrganizationOutput::affected_accounts): <p>A JSON set of elements of the affected accounts.</p>
    ///   - [`event_scope_code(Option<EventScopeCode>)`](crate::output::DescribeAffectedAccountsForOrganizationOutput::event_scope_code): <p>This parameter specifies if the Health event is a public Amazon Web Services service event or an account-specific event.</p>  <ul>   <li> <p>If the <code>eventScopeCode</code> value is <code>PUBLIC</code>, then the <code>affectedAccounts</code> value is always empty.</p> </li>   <li> <p>If the <code>eventScopeCode</code> value is <code>ACCOUNT_SPECIFIC</code>, then the <code>affectedAccounts</code> value lists the affected Amazon Web Services accounts in your organization. For example, if an event affects a service such as Amazon Elastic Compute Cloud and you have Amazon Web Services accounts that use that service, those account IDs appear in the response.</p> </li>   <li> <p>If the <code>eventScopeCode</code> value is <code>NONE</code>, then the <code>eventArn</code> that you specified in the request is invalid or doesn't exist.</p> </li>  </ul>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeAffectedAccountsForOrganizationOutput::next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    /// - On failure, responds with [`SdkError<DescribeAffectedAccountsForOrganizationError>`](crate::error::DescribeAffectedAccountsForOrganizationError)
    pub fn describe_affected_accounts_for_organization(
        &self,
    ) -> crate::client::fluent_builders::DescribeAffectedAccountsForOrganization {
        crate::client::fluent_builders::DescribeAffectedAccountsForOrganization::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DescribeAffectedEntities`](crate::client::fluent_builders::DescribeAffectedEntities) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeAffectedEntities::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(EntityFilter)`](crate::client::fluent_builders::DescribeAffectedEntities::filter) / [`set_filter(Option<EntityFilter>)`](crate::client::fluent_builders::DescribeAffectedEntities::set_filter): <p>Values to narrow the results returned. At least one event ARN is required.</p>
    ///   - [`locale(impl Into<String>)`](crate::client::fluent_builders::DescribeAffectedEntities::locale) / [`set_locale(Option<String>)`](crate::client::fluent_builders::DescribeAffectedEntities::set_locale): <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeAffectedEntities::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeAffectedEntities::set_next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeAffectedEntities::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeAffectedEntities::set_max_results): <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
    /// - On success, responds with [`DescribeAffectedEntitiesOutput`](crate::output::DescribeAffectedEntitiesOutput) with field(s):
    ///   - [`entities(Option<Vec<AffectedEntity>>)`](crate::output::DescribeAffectedEntitiesOutput::entities): <p>The entities that match the filter criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeAffectedEntitiesOutput::next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    /// - On failure, responds with [`SdkError<DescribeAffectedEntitiesError>`](crate::error::DescribeAffectedEntitiesError)
    pub fn describe_affected_entities(
        &self,
    ) -> crate::client::fluent_builders::DescribeAffectedEntities {
        crate::client::fluent_builders::DescribeAffectedEntities::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAffectedEntitiesForOrganization`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_entity_filters(Vec<EventAccountFilter>)`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::organization_entity_filters) / [`set_organization_entity_filters(Option<Vec<EventAccountFilter>>)`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::set_organization_entity_filters): <p>A JSON set of elements including the <code>awsAccountId</code> and the <code>eventArn</code>.</p>
    ///   - [`locale(impl Into<String>)`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::locale) / [`set_locale(Option<String>)`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::set_locale): <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::set_next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::set_max_results): <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
    /// - On success, responds with [`DescribeAffectedEntitiesForOrganizationOutput`](crate::output::DescribeAffectedEntitiesForOrganizationOutput) with field(s):
    ///   - [`entities(Option<Vec<AffectedEntity>>)`](crate::output::DescribeAffectedEntitiesForOrganizationOutput::entities): <p>A JSON set of elements including the <code>awsAccountId</code> and its <code>entityArn</code>, <code>entityValue</code> and its <code>entityArn</code>, <code>lastUpdatedTime</code>, and <code>statusCode</code>.</p>
    ///   - [`failed_set(Option<Vec<OrganizationAffectedEntitiesErrorItem>>)`](crate::output::DescribeAffectedEntitiesForOrganizationOutput::failed_set): <p>A JSON set of elements of the failed response, including the <code>awsAccountId</code>, <code>errorMessage</code>, <code>errorName</code>, and <code>eventArn</code>.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeAffectedEntitiesForOrganizationOutput::next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    /// - On failure, responds with [`SdkError<DescribeAffectedEntitiesForOrganizationError>`](crate::error::DescribeAffectedEntitiesForOrganizationError)
    pub fn describe_affected_entities_for_organization(
        &self,
    ) -> crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization {
        crate::client::fluent_builders::DescribeAffectedEntitiesForOrganization::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DescribeEntityAggregates`](crate::client::fluent_builders::DescribeEntityAggregates) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`event_arns(Vec<String>)`](crate::client::fluent_builders::DescribeEntityAggregates::event_arns) / [`set_event_arns(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeEntityAggregates::set_event_arns): <p>A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> </p>
    /// - On success, responds with [`DescribeEntityAggregatesOutput`](crate::output::DescribeEntityAggregatesOutput) with field(s):
    ///   - [`entity_aggregates(Option<Vec<EntityAggregate>>)`](crate::output::DescribeEntityAggregatesOutput::entity_aggregates): <p>The number of entities that are affected by each of the specified events.</p>
    /// - On failure, responds with [`SdkError<DescribeEntityAggregatesError>`](crate::error::DescribeEntityAggregatesError)
    pub fn describe_entity_aggregates(
        &self,
    ) -> crate::client::fluent_builders::DescribeEntityAggregates {
        crate::client::fluent_builders::DescribeEntityAggregates::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeEventAggregates`](crate::client::fluent_builders::DescribeEventAggregates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeEventAggregates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(EventFilter)`](crate::client::fluent_builders::DescribeEventAggregates::filter) / [`set_filter(Option<EventFilter>)`](crate::client::fluent_builders::DescribeEventAggregates::set_filter): <p>Values to narrow the results returned.</p>
    ///   - [`aggregate_field(EventAggregateField)`](crate::client::fluent_builders::DescribeEventAggregates::aggregate_field) / [`set_aggregate_field(Option<EventAggregateField>)`](crate::client::fluent_builders::DescribeEventAggregates::set_aggregate_field): <p>The only currently supported value is <code>eventTypeCategory</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeEventAggregates::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeEventAggregates::set_max_results): <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeEventAggregates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeEventAggregates::set_next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    /// - On success, responds with [`DescribeEventAggregatesOutput`](crate::output::DescribeEventAggregatesOutput) with field(s):
    ///   - [`event_aggregates(Option<Vec<EventAggregate>>)`](crate::output::DescribeEventAggregatesOutput::event_aggregates): <p>The number of events in each category that meet the optional filter criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeEventAggregatesOutput::next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    /// - On failure, responds with [`SdkError<DescribeEventAggregatesError>`](crate::error::DescribeEventAggregatesError)
    pub fn describe_event_aggregates(
        &self,
    ) -> crate::client::fluent_builders::DescribeEventAggregates {
        crate::client::fluent_builders::DescribeEventAggregates::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeEventDetails`](crate::client::fluent_builders::DescribeEventDetails) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`event_arns(Vec<String>)`](crate::client::fluent_builders::DescribeEventDetails::event_arns) / [`set_event_arns(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeEventDetails::set_event_arns): <p>A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> </p>
    ///   - [`locale(impl Into<String>)`](crate::client::fluent_builders::DescribeEventDetails::locale) / [`set_locale(Option<String>)`](crate::client::fluent_builders::DescribeEventDetails::set_locale): <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    /// - On success, responds with [`DescribeEventDetailsOutput`](crate::output::DescribeEventDetailsOutput) with field(s):
    ///   - [`successful_set(Option<Vec<EventDetails>>)`](crate::output::DescribeEventDetailsOutput::successful_set): <p>Information about the events that could be retrieved.</p>
    ///   - [`failed_set(Option<Vec<EventDetailsErrorItem>>)`](crate::output::DescribeEventDetailsOutput::failed_set): <p>Error messages for any events that could not be retrieved.</p>
    /// - On failure, responds with [`SdkError<DescribeEventDetailsError>`](crate::error::DescribeEventDetailsError)
    pub fn describe_event_details(&self) -> crate::client::fluent_builders::DescribeEventDetails {
        crate::client::fluent_builders::DescribeEventDetails::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeEventDetailsForOrganization`](crate::client::fluent_builders::DescribeEventDetailsForOrganization) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_event_detail_filters(Vec<EventAccountFilter>)`](crate::client::fluent_builders::DescribeEventDetailsForOrganization::organization_event_detail_filters) / [`set_organization_event_detail_filters(Option<Vec<EventAccountFilter>>)`](crate::client::fluent_builders::DescribeEventDetailsForOrganization::set_organization_event_detail_filters): <p>A set of JSON elements that includes the <code>awsAccountId</code> and the <code>eventArn</code>.</p>
    ///   - [`locale(impl Into<String>)`](crate::client::fluent_builders::DescribeEventDetailsForOrganization::locale) / [`set_locale(Option<String>)`](crate::client::fluent_builders::DescribeEventDetailsForOrganization::set_locale): <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    /// - On success, responds with [`DescribeEventDetailsForOrganizationOutput`](crate::output::DescribeEventDetailsForOrganizationOutput) with field(s):
    ///   - [`successful_set(Option<Vec<OrganizationEventDetails>>)`](crate::output::DescribeEventDetailsForOrganizationOutput::successful_set): <p>Information about the events that could be retrieved.</p>
    ///   - [`failed_set(Option<Vec<OrganizationEventDetailsErrorItem>>)`](crate::output::DescribeEventDetailsForOrganizationOutput::failed_set): <p>Error messages for any events that could not be retrieved.</p>
    /// - On failure, responds with [`SdkError<DescribeEventDetailsForOrganizationError>`](crate::error::DescribeEventDetailsForOrganizationError)
    pub fn describe_event_details_for_organization(
        &self,
    ) -> crate::client::fluent_builders::DescribeEventDetailsForOrganization {
        crate::client::fluent_builders::DescribeEventDetailsForOrganization::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DescribeEvents`](crate::client::fluent_builders::DescribeEvents) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeEvents::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(EventFilter)`](crate::client::fluent_builders::DescribeEvents::filter) / [`set_filter(Option<EventFilter>)`](crate::client::fluent_builders::DescribeEvents::set_filter): <p>Values to narrow the results returned.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeEvents::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeEvents::set_next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeEvents::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeEvents::set_max_results): <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
    ///   - [`locale(impl Into<String>)`](crate::client::fluent_builders::DescribeEvents::locale) / [`set_locale(Option<String>)`](crate::client::fluent_builders::DescribeEvents::set_locale): <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    /// - On success, responds with [`DescribeEventsOutput`](crate::output::DescribeEventsOutput) with field(s):
    ///   - [`events(Option<Vec<Event>>)`](crate::output::DescribeEventsOutput::events): <p>The events that match the specified filter criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeEventsOutput::next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    /// - On failure, responds with [`SdkError<DescribeEventsError>`](crate::error::DescribeEventsError)
    pub fn describe_events(&self) -> crate::client::fluent_builders::DescribeEvents {
        crate::client::fluent_builders::DescribeEvents::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeEventsForOrganization`](crate::client::fluent_builders::DescribeEventsForOrganization) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeEventsForOrganization::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(OrganizationEventFilter)`](crate::client::fluent_builders::DescribeEventsForOrganization::filter) / [`set_filter(Option<OrganizationEventFilter>)`](crate::client::fluent_builders::DescribeEventsForOrganization::set_filter): <p>Values to narrow the results returned.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeEventsForOrganization::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeEventsForOrganization::set_next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeEventsForOrganization::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeEventsForOrganization::set_max_results): <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
    ///   - [`locale(impl Into<String>)`](crate::client::fluent_builders::DescribeEventsForOrganization::locale) / [`set_locale(Option<String>)`](crate::client::fluent_builders::DescribeEventsForOrganization::set_locale): <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    /// - On success, responds with [`DescribeEventsForOrganizationOutput`](crate::output::DescribeEventsForOrganizationOutput) with field(s):
    ///   - [`events(Option<Vec<OrganizationEvent>>)`](crate::output::DescribeEventsForOrganizationOutput::events): <p>The events that match the specified filter criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeEventsForOrganizationOutput::next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    /// - On failure, responds with [`SdkError<DescribeEventsForOrganizationError>`](crate::error::DescribeEventsForOrganizationError)
    pub fn describe_events_for_organization(
        &self,
    ) -> crate::client::fluent_builders::DescribeEventsForOrganization {
        crate::client::fluent_builders::DescribeEventsForOrganization::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeEventTypes`](crate::client::fluent_builders::DescribeEventTypes) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeEventTypes::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(EventTypeFilter)`](crate::client::fluent_builders::DescribeEventTypes::filter) / [`set_filter(Option<EventTypeFilter>)`](crate::client::fluent_builders::DescribeEventTypes::set_filter): <p>Values to narrow the results returned.</p>
    ///   - [`locale(impl Into<String>)`](crate::client::fluent_builders::DescribeEventTypes::locale) / [`set_locale(Option<String>)`](crate::client::fluent_builders::DescribeEventTypes::set_locale): <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeEventTypes::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeEventTypes::set_next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeEventTypes::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeEventTypes::set_max_results): <p>The maximum number of items to return in one batch, between 10 and 100, inclusive.</p>
    /// - On success, responds with [`DescribeEventTypesOutput`](crate::output::DescribeEventTypesOutput) with field(s):
    ///   - [`event_types(Option<Vec<EventType>>)`](crate::output::DescribeEventTypesOutput::event_types): <p>A list of event types that match the filter criteria. Event types have a category (<code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>), a service (for example, <code>EC2</code>, <code>RDS</code>, <code>DATAPIPELINE</code>, <code>BILLING</code>), and a code (in the format <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i> </code>; for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>).</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeEventTypesOutput::next_token): <p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>
    /// - On failure, responds with [`SdkError<DescribeEventTypesError>`](crate::error::DescribeEventTypesError)
    pub fn describe_event_types(&self) -> crate::client::fluent_builders::DescribeEventTypes {
        crate::client::fluent_builders::DescribeEventTypes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeHealthServiceStatusForOrganization`](crate::client::fluent_builders::DescribeHealthServiceStatusForOrganization) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DescribeHealthServiceStatusForOrganization::send) it.

    /// - On success, responds with [`DescribeHealthServiceStatusForOrganizationOutput`](crate::output::DescribeHealthServiceStatusForOrganizationOutput) with field(s):
    ///   - [`health_service_access_status_for_organization(Option<String>)`](crate::output::DescribeHealthServiceStatusForOrganizationOutput::health_service_access_status_for_organization): <p>Information about the status of enabling or disabling the Health organizational view feature in your organization.</p>  <p>Valid values are <code>ENABLED | DISABLED | PENDING</code>. </p>
    /// - On failure, responds with [`SdkError<DescribeHealthServiceStatusForOrganizationError>`](crate::error::DescribeHealthServiceStatusForOrganizationError)
    pub fn describe_health_service_status_for_organization(
        &self,
    ) -> crate::client::fluent_builders::DescribeHealthServiceStatusForOrganization {
        crate::client::fluent_builders::DescribeHealthServiceStatusForOrganization::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DisableHealthServiceAccessForOrganization`](crate::client::fluent_builders::DisableHealthServiceAccessForOrganization) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DisableHealthServiceAccessForOrganization::send) it.

    /// - On success, responds with [`DisableHealthServiceAccessForOrganizationOutput`](crate::output::DisableHealthServiceAccessForOrganizationOutput)

    /// - On failure, responds with [`SdkError<DisableHealthServiceAccessForOrganizationError>`](crate::error::DisableHealthServiceAccessForOrganizationError)
    pub fn disable_health_service_access_for_organization(
        &self,
    ) -> crate::client::fluent_builders::DisableHealthServiceAccessForOrganization {
        crate::client::fluent_builders::DisableHealthServiceAccessForOrganization::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`EnableHealthServiceAccessForOrganization`](crate::client::fluent_builders::EnableHealthServiceAccessForOrganization) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::EnableHealthServiceAccessForOrganization::send) it.

    /// - On success, responds with [`EnableHealthServiceAccessForOrganizationOutput`](crate::output::EnableHealthServiceAccessForOrganizationOutput)

    /// - On failure, responds with [`SdkError<EnableHealthServiceAccessForOrganizationError>`](crate::error::EnableHealthServiceAccessForOrganizationError)
    pub fn enable_health_service_access_for_organization(
        &self,
    ) -> crate::client::fluent_builders::EnableHealthServiceAccessForOrganization {
        crate::client::fluent_builders::EnableHealthServiceAccessForOrganization::new(
            self.handle.clone(),
        )
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
