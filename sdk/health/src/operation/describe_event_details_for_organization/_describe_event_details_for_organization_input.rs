// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeEventDetailsForOrganizationInput {
    /// <p>A set of JSON elements that includes the <code>awsAccountId</code> and the <code>eventArn</code>.</p>
    pub organization_event_detail_filters: ::std::option::Option<::std::vec::Vec<crate::types::EventAccountFilter>>,
    /// <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    pub locale: ::std::option::Option<::std::string::String>,
}
impl DescribeEventDetailsForOrganizationInput {
    /// <p>A set of JSON elements that includes the <code>awsAccountId</code> and the <code>eventArn</code>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.organization_event_detail_filters.is_none()`.
    pub fn organization_event_detail_filters(&self) -> &[crate::types::EventAccountFilter] {
        self.organization_event_detail_filters.as_deref().unwrap_or_default()
    }
    /// <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    pub fn locale(&self) -> ::std::option::Option<&str> {
        self.locale.as_deref()
    }
}
impl DescribeEventDetailsForOrganizationInput {
    /// Creates a new builder-style object to manufacture [`DescribeEventDetailsForOrganizationInput`](crate::operation::describe_event_details_for_organization::DescribeEventDetailsForOrganizationInput).
    pub fn builder() -> crate::operation::describe_event_details_for_organization::builders::DescribeEventDetailsForOrganizationInputBuilder {
        crate::operation::describe_event_details_for_organization::builders::DescribeEventDetailsForOrganizationInputBuilder::default()
    }
}

/// A builder for [`DescribeEventDetailsForOrganizationInput`](crate::operation::describe_event_details_for_organization::DescribeEventDetailsForOrganizationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeEventDetailsForOrganizationInputBuilder {
    pub(crate) organization_event_detail_filters: ::std::option::Option<::std::vec::Vec<crate::types::EventAccountFilter>>,
    pub(crate) locale: ::std::option::Option<::std::string::String>,
}
impl DescribeEventDetailsForOrganizationInputBuilder {
    /// Appends an item to `organization_event_detail_filters`.
    ///
    /// To override the contents of this collection use [`set_organization_event_detail_filters`](Self::set_organization_event_detail_filters).
    ///
    /// <p>A set of JSON elements that includes the <code>awsAccountId</code> and the <code>eventArn</code>.</p>
    pub fn organization_event_detail_filters(mut self, input: crate::types::EventAccountFilter) -> Self {
        let mut v = self.organization_event_detail_filters.unwrap_or_default();
        v.push(input);
        self.organization_event_detail_filters = ::std::option::Option::Some(v);
        self
    }
    /// <p>A set of JSON elements that includes the <code>awsAccountId</code> and the <code>eventArn</code>.</p>
    pub fn set_organization_event_detail_filters(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::EventAccountFilter>>) -> Self {
        self.organization_event_detail_filters = input;
        self
    }
    /// <p>A set of JSON elements that includes the <code>awsAccountId</code> and the <code>eventArn</code>.</p>
    pub fn get_organization_event_detail_filters(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::EventAccountFilter>> {
        &self.organization_event_detail_filters
    }
    /// <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    pub fn locale(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.locale = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    pub fn set_locale(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.locale = input;
        self
    }
    /// <p>The locale (language) to return information in. English (en) is the default and the only supported value at this time.</p>
    pub fn get_locale(&self) -> &::std::option::Option<::std::string::String> {
        &self.locale
    }
    /// Consumes the builder and constructs a [`DescribeEventDetailsForOrganizationInput`](crate::operation::describe_event_details_for_organization::DescribeEventDetailsForOrganizationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_event_details_for_organization::DescribeEventDetailsForOrganizationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::describe_event_details_for_organization::DescribeEventDetailsForOrganizationInput {
                organization_event_detail_filters: self.organization_event_detail_filters,
                locale: self.locale,
            },
        )
    }
}
