// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the details of a receipt rule.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeReceiptRuleOutput {
    /// <p>A data structure that contains the specified receipt rule's name, actions, recipients, domains, enabled status, scan status, and Transport Layer Security (TLS) policy.</p>
    #[doc(hidden)]
    pub rule: std::option::Option<crate::types::ReceiptRule>,
    _request_id: Option<String>,
}
impl DescribeReceiptRuleOutput {
    /// <p>A data structure that contains the specified receipt rule's name, actions, recipients, domains, enabled status, scan status, and Transport Layer Security (TLS) policy.</p>
    pub fn rule(&self) -> std::option::Option<&crate::types::ReceiptRule> {
        self.rule.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeReceiptRuleOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeReceiptRuleOutput {
    /// Creates a new builder-style object to manufacture [`DescribeReceiptRuleOutput`](crate::operation::describe_receipt_rule::DescribeReceiptRuleOutput).
    pub fn builder(
    ) -> crate::operation::describe_receipt_rule::builders::DescribeReceiptRuleOutputBuilder {
        crate::operation::describe_receipt_rule::builders::DescribeReceiptRuleOutputBuilder::default(
        )
    }
}

/// A builder for [`DescribeReceiptRuleOutput`](crate::operation::describe_receipt_rule::DescribeReceiptRuleOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeReceiptRuleOutputBuilder {
    pub(crate) rule: std::option::Option<crate::types::ReceiptRule>,
    _request_id: Option<String>,
}
impl DescribeReceiptRuleOutputBuilder {
    /// <p>A data structure that contains the specified receipt rule's name, actions, recipients, domains, enabled status, scan status, and Transport Layer Security (TLS) policy.</p>
    pub fn rule(mut self, input: crate::types::ReceiptRule) -> Self {
        self.rule = Some(input);
        self
    }
    /// <p>A data structure that contains the specified receipt rule's name, actions, recipients, domains, enabled status, scan status, and Transport Layer Security (TLS) policy.</p>
    pub fn set_rule(mut self, input: std::option::Option<crate::types::ReceiptRule>) -> Self {
        self.rule = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeReceiptRuleOutput`](crate::operation::describe_receipt_rule::DescribeReceiptRuleOutput).
    pub fn build(self) -> crate::operation::describe_receipt_rule::DescribeReceiptRuleOutput {
        crate::operation::describe_receipt_rule::DescribeReceiptRuleOutput {
            rule: self.rule,
            _request_id: self._request_id,
        }
    }
}
