// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the notification attributes for a list of identities.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetIdentityNotificationAttributesOutput {
    /// <p>A map of Identity to IdentityNotificationAttributes.</p>
    pub notification_attributes: ::std::collections::HashMap<::std::string::String, crate::types::IdentityNotificationAttributes>,
    _request_id: Option<String>,
}
impl GetIdentityNotificationAttributesOutput {
    /// <p>A map of Identity to IdentityNotificationAttributes.</p>
    pub fn notification_attributes(&self) -> &::std::collections::HashMap<::std::string::String, crate::types::IdentityNotificationAttributes> {
        &self.notification_attributes
    }
}
impl ::aws_http::request_id::RequestId for GetIdentityNotificationAttributesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetIdentityNotificationAttributesOutput {
    /// Creates a new builder-style object to manufacture [`GetIdentityNotificationAttributesOutput`](crate::operation::get_identity_notification_attributes::GetIdentityNotificationAttributesOutput).
    pub fn builder() -> crate::operation::get_identity_notification_attributes::builders::GetIdentityNotificationAttributesOutputBuilder {
        crate::operation::get_identity_notification_attributes::builders::GetIdentityNotificationAttributesOutputBuilder::default()
    }
}

/// A builder for [`GetIdentityNotificationAttributesOutput`](crate::operation::get_identity_notification_attributes::GetIdentityNotificationAttributesOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetIdentityNotificationAttributesOutputBuilder {
    pub(crate) notification_attributes:
        ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::IdentityNotificationAttributes>>,
    _request_id: Option<String>,
}
impl GetIdentityNotificationAttributesOutputBuilder {
    /// Adds a key-value pair to `notification_attributes`.
    ///
    /// To override the contents of this collection use [`set_notification_attributes`](Self::set_notification_attributes).
    ///
    /// <p>A map of Identity to IdentityNotificationAttributes.</p>
    pub fn notification_attributes(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: crate::types::IdentityNotificationAttributes,
    ) -> Self {
        let mut hash_map = self.notification_attributes.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.notification_attributes = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>A map of Identity to IdentityNotificationAttributes.</p>
    pub fn set_notification_attributes(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::IdentityNotificationAttributes>>,
    ) -> Self {
        self.notification_attributes = input;
        self
    }
    /// <p>A map of Identity to IdentityNotificationAttributes.</p>
    pub fn get_notification_attributes(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::IdentityNotificationAttributes>> {
        &self.notification_attributes
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetIdentityNotificationAttributesOutput`](crate::operation::get_identity_notification_attributes::GetIdentityNotificationAttributesOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`notification_attributes`](crate::operation::get_identity_notification_attributes::builders::GetIdentityNotificationAttributesOutputBuilder::notification_attributes)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_identity_notification_attributes::GetIdentityNotificationAttributesOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_identity_notification_attributes::GetIdentityNotificationAttributesOutput {
                notification_attributes: self.notification_attributes.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "notification_attributes",
                        "notification_attributes was not specified but it is required when building GetIdentityNotificationAttributesOutput",
                    )
                })?,
                _request_id: self._request_id,
            },
        )
    }
}
