// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a request to enable or disable Amazon SES Easy DKIM signing for an identity. For more information about setting up Easy DKIM, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon SES Developer Guide</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SetIdentityDkimEnabledInput {
    /// <p>The identity for which DKIM signing should be enabled or disabled.</p>
    #[doc(hidden)]
    pub identity: std::option::Option<std::string::String>,
    /// <p>Sets whether DKIM signing is enabled for an identity. Set to <code>true</code> to enable DKIM signing for this identity; <code>false</code> to disable it. </p>
    #[doc(hidden)]
    pub dkim_enabled: bool,
}
impl SetIdentityDkimEnabledInput {
    /// <p>The identity for which DKIM signing should be enabled or disabled.</p>
    pub fn identity(&self) -> std::option::Option<&str> {
        self.identity.as_deref()
    }
    /// <p>Sets whether DKIM signing is enabled for an identity. Set to <code>true</code> to enable DKIM signing for this identity; <code>false</code> to disable it. </p>
    pub fn dkim_enabled(&self) -> bool {
        self.dkim_enabled
    }
}
impl SetIdentityDkimEnabledInput {
    /// Creates a new builder-style object to manufacture [`SetIdentityDkimEnabledInput`](crate::operation::set_identity_dkim_enabled::SetIdentityDkimEnabledInput).
    pub fn builder(
    ) -> crate::operation::set_identity_dkim_enabled::builders::SetIdentityDkimEnabledInputBuilder
    {
        crate::operation::set_identity_dkim_enabled::builders::SetIdentityDkimEnabledInputBuilder::default()
    }
}

/// A builder for [`SetIdentityDkimEnabledInput`](crate::operation::set_identity_dkim_enabled::SetIdentityDkimEnabledInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SetIdentityDkimEnabledInputBuilder {
    pub(crate) identity: std::option::Option<std::string::String>,
    pub(crate) dkim_enabled: std::option::Option<bool>,
}
impl SetIdentityDkimEnabledInputBuilder {
    /// <p>The identity for which DKIM signing should be enabled or disabled.</p>
    pub fn identity(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity = Some(input.into());
        self
    }
    /// <p>The identity for which DKIM signing should be enabled or disabled.</p>
    pub fn set_identity(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identity = input;
        self
    }
    /// <p>Sets whether DKIM signing is enabled for an identity. Set to <code>true</code> to enable DKIM signing for this identity; <code>false</code> to disable it. </p>
    pub fn dkim_enabled(mut self, input: bool) -> Self {
        self.dkim_enabled = Some(input);
        self
    }
    /// <p>Sets whether DKIM signing is enabled for an identity. Set to <code>true</code> to enable DKIM signing for this identity; <code>false</code> to disable it. </p>
    pub fn set_dkim_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.dkim_enabled = input;
        self
    }
    /// Consumes the builder and constructs a [`SetIdentityDkimEnabledInput`](crate::operation::set_identity_dkim_enabled::SetIdentityDkimEnabledInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::set_identity_dkim_enabled::SetIdentityDkimEnabledInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::set_identity_dkim_enabled::SetIdentityDkimEnabledInput {
                identity: self.identity,
                dkim_enabled: self.dkim_enabled.unwrap_or_default(),
            },
        )
    }
}
