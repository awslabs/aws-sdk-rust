// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateTemplateInput {
    /// <p>The content of the email, composed of a subject line, an HTML part, and a text-only part.</p>
    #[doc(hidden)]
    pub template: std::option::Option<crate::types::Template>,
}
impl UpdateTemplateInput {
    /// <p>The content of the email, composed of a subject line, an HTML part, and a text-only part.</p>
    pub fn template(&self) -> std::option::Option<&crate::types::Template> {
        self.template.as_ref()
    }
}
impl UpdateTemplateInput {
    /// Creates a new builder-style object to manufacture [`UpdateTemplateInput`](crate::operation::update_template::UpdateTemplateInput).
    pub fn builder() -> crate::operation::update_template::builders::UpdateTemplateInputBuilder {
        crate::operation::update_template::builders::UpdateTemplateInputBuilder::default()
    }
}

/// A builder for [`UpdateTemplateInput`](crate::operation::update_template::UpdateTemplateInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateTemplateInputBuilder {
    pub(crate) template: std::option::Option<crate::types::Template>,
}
impl UpdateTemplateInputBuilder {
    /// <p>The content of the email, composed of a subject line, an HTML part, and a text-only part.</p>
    pub fn template(mut self, input: crate::types::Template) -> Self {
        self.template = Some(input);
        self
    }
    /// <p>The content of the email, composed of a subject line, an HTML part, and a text-only part.</p>
    pub fn set_template(mut self, input: std::option::Option<crate::types::Template>) -> Self {
        self.template = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateTemplateInput`](crate::operation::update_template::UpdateTemplateInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_template::UpdateTemplateInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::update_template::UpdateTemplateInput {
            template: self.template,
        })
    }
}
