// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A domain that is used to redirect email recipients to an Amazon SES-operated domain. This domain captures open and click events generated by Amazon SES emails.</p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/configure-custom-open-click-domains.html">Configuring Custom Domains to Handle Open and Click Tracking</a> in the <i>Amazon SES Developer Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TrackingOptions {
    /// <p>The custom subdomain that will be used to redirect email recipients to the Amazon SES event tracking domain.</p>
    #[doc(hidden)]
    pub custom_redirect_domain: std::option::Option<std::string::String>,
}
impl TrackingOptions {
    /// <p>The custom subdomain that will be used to redirect email recipients to the Amazon SES event tracking domain.</p>
    pub fn custom_redirect_domain(&self) -> std::option::Option<&str> {
        self.custom_redirect_domain.as_deref()
    }
}
impl TrackingOptions {
    /// Creates a new builder-style object to manufacture [`TrackingOptions`](crate::types::TrackingOptions).
    pub fn builder() -> crate::types::builders::TrackingOptionsBuilder {
        crate::types::builders::TrackingOptionsBuilder::default()
    }
}

/// A builder for [`TrackingOptions`](crate::types::TrackingOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TrackingOptionsBuilder {
    pub(crate) custom_redirect_domain: std::option::Option<std::string::String>,
}
impl TrackingOptionsBuilder {
    /// <p>The custom subdomain that will be used to redirect email recipients to the Amazon SES event tracking domain.</p>
    pub fn custom_redirect_domain(mut self, input: impl Into<std::string::String>) -> Self {
        self.custom_redirect_domain = Some(input.into());
        self
    }
    /// <p>The custom subdomain that will be used to redirect email recipients to the Amazon SES event tracking domain.</p>
    pub fn set_custom_redirect_domain(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.custom_redirect_domain = input;
        self
    }
    /// Consumes the builder and constructs a [`TrackingOptions`](crate::types::TrackingOptions).
    pub fn build(self) -> crate::types::TrackingOptions {
        crate::types::TrackingOptions {
            custom_redirect_domain: self.custom_redirect_domain,
        }
    }
}
