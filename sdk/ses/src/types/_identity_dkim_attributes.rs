// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the DKIM attributes of a verified email address or a domain.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IdentityDkimAttributes {
    /// <p>Is true if DKIM signing is enabled for email sent from the identity. It's false otherwise. The default value is true.</p>
    #[doc(hidden)]
    pub dkim_enabled: bool,
    /// <p>Describes whether Amazon SES has successfully verified the DKIM DNS records (tokens) published in the domain name's DNS. (This only applies to domain identities, not email address identities.)</p>
    #[doc(hidden)]
    pub dkim_verification_status: std::option::Option<crate::types::VerificationStatus>,
    /// <p>A set of character strings that represent the domain's identity. Using these tokens, you need to create DNS CNAME records that point to DKIM public keys that are hosted by Amazon SES. Amazon Web Services eventually detects that you've updated your DNS records. This detection process might take up to 72 hours. After successful detection, Amazon SES is able to DKIM-sign email originating from that domain. (This only applies to domain identities, not email address identities.)</p>
    /// <p>For more information about creating DNS records using DKIM tokens, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon SES Developer Guide</a>.</p>
    #[doc(hidden)]
    pub dkim_tokens: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl IdentityDkimAttributes {
    /// <p>Is true if DKIM signing is enabled for email sent from the identity. It's false otherwise. The default value is true.</p>
    pub fn dkim_enabled(&self) -> bool {
        self.dkim_enabled
    }
    /// <p>Describes whether Amazon SES has successfully verified the DKIM DNS records (tokens) published in the domain name's DNS. (This only applies to domain identities, not email address identities.)</p>
    pub fn dkim_verification_status(
        &self,
    ) -> std::option::Option<&crate::types::VerificationStatus> {
        self.dkim_verification_status.as_ref()
    }
    /// <p>A set of character strings that represent the domain's identity. Using these tokens, you need to create DNS CNAME records that point to DKIM public keys that are hosted by Amazon SES. Amazon Web Services eventually detects that you've updated your DNS records. This detection process might take up to 72 hours. After successful detection, Amazon SES is able to DKIM-sign email originating from that domain. (This only applies to domain identities, not email address identities.)</p>
    /// <p>For more information about creating DNS records using DKIM tokens, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon SES Developer Guide</a>.</p>
    pub fn dkim_tokens(&self) -> std::option::Option<&[std::string::String]> {
        self.dkim_tokens.as_deref()
    }
}
impl IdentityDkimAttributes {
    /// Creates a new builder-style object to manufacture [`IdentityDkimAttributes`](crate::types::IdentityDkimAttributes).
    pub fn builder() -> crate::types::builders::IdentityDkimAttributesBuilder {
        crate::types::builders::IdentityDkimAttributesBuilder::default()
    }
}

/// A builder for [`IdentityDkimAttributes`](crate::types::IdentityDkimAttributes).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IdentityDkimAttributesBuilder {
    pub(crate) dkim_enabled: std::option::Option<bool>,
    pub(crate) dkim_verification_status: std::option::Option<crate::types::VerificationStatus>,
    pub(crate) dkim_tokens: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl IdentityDkimAttributesBuilder {
    /// <p>Is true if DKIM signing is enabled for email sent from the identity. It's false otherwise. The default value is true.</p>
    pub fn dkim_enabled(mut self, input: bool) -> Self {
        self.dkim_enabled = Some(input);
        self
    }
    /// <p>Is true if DKIM signing is enabled for email sent from the identity. It's false otherwise. The default value is true.</p>
    pub fn set_dkim_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.dkim_enabled = input;
        self
    }
    /// <p>Describes whether Amazon SES has successfully verified the DKIM DNS records (tokens) published in the domain name's DNS. (This only applies to domain identities, not email address identities.)</p>
    pub fn dkim_verification_status(mut self, input: crate::types::VerificationStatus) -> Self {
        self.dkim_verification_status = Some(input);
        self
    }
    /// <p>Describes whether Amazon SES has successfully verified the DKIM DNS records (tokens) published in the domain name's DNS. (This only applies to domain identities, not email address identities.)</p>
    pub fn set_dkim_verification_status(
        mut self,
        input: std::option::Option<crate::types::VerificationStatus>,
    ) -> Self {
        self.dkim_verification_status = input;
        self
    }
    /// Appends an item to `dkim_tokens`.
    ///
    /// To override the contents of this collection use [`set_dkim_tokens`](Self::set_dkim_tokens).
    ///
    /// <p>A set of character strings that represent the domain's identity. Using these tokens, you need to create DNS CNAME records that point to DKIM public keys that are hosted by Amazon SES. Amazon Web Services eventually detects that you've updated your DNS records. This detection process might take up to 72 hours. After successful detection, Amazon SES is able to DKIM-sign email originating from that domain. (This only applies to domain identities, not email address identities.)</p>
    /// <p>For more information about creating DNS records using DKIM tokens, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon SES Developer Guide</a>.</p>
    pub fn dkim_tokens(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.dkim_tokens.unwrap_or_default();
        v.push(input.into());
        self.dkim_tokens = Some(v);
        self
    }
    /// <p>A set of character strings that represent the domain's identity. Using these tokens, you need to create DNS CNAME records that point to DKIM public keys that are hosted by Amazon SES. Amazon Web Services eventually detects that you've updated your DNS records. This detection process might take up to 72 hours. After successful detection, Amazon SES is able to DKIM-sign email originating from that domain. (This only applies to domain identities, not email address identities.)</p>
    /// <p>For more information about creating DNS records using DKIM tokens, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon SES Developer Guide</a>.</p>
    pub fn set_dkim_tokens(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.dkim_tokens = input;
        self
    }
    /// Consumes the builder and constructs a [`IdentityDkimAttributes`](crate::types::IdentityDkimAttributes).
    pub fn build(self) -> crate::types::IdentityDkimAttributes {
        crate::types::IdentityDkimAttributes {
            dkim_enabled: self.dkim_enabled.unwrap_or_default(),
            dkim_verification_status: self.dkim_verification_status,
            dkim_tokens: self.dkim_tokens,
        }
    }
}
