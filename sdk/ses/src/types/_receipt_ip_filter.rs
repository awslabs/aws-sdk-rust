// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A receipt IP address filter enables you to specify whether to accept or reject mail originating from an IP address or range of IP addresses.</p>
/// <p>For information about setting up IP address filters, see the <a href="https://docs.aws.amazon.com/ses/latest/dg/receiving-email-ip-filtering-console-walkthrough.html">Amazon SES Developer Guide</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReceiptIpFilter {
    /// <p>Indicates whether to block or allow incoming mail from the specified IP addresses.</p>
    pub policy: crate::types::ReceiptFilterPolicy,
    /// <p>A single IP address or a range of IP addresses to block or allow, specified in Classless Inter-Domain Routing (CIDR) notation. An example of a single email address is 10.0.0.1. An example of a range of IP addresses is 10.0.0.1/24. For more information about CIDR notation, see <a href="https://tools.ietf.org/html/rfc2317">RFC 2317</a>.</p>
    pub cidr: ::std::string::String,
}
impl ReceiptIpFilter {
    /// <p>Indicates whether to block or allow incoming mail from the specified IP addresses.</p>
    pub fn policy(&self) -> &crate::types::ReceiptFilterPolicy {
        &self.policy
    }
    /// <p>A single IP address or a range of IP addresses to block or allow, specified in Classless Inter-Domain Routing (CIDR) notation. An example of a single email address is 10.0.0.1. An example of a range of IP addresses is 10.0.0.1/24. For more information about CIDR notation, see <a href="https://tools.ietf.org/html/rfc2317">RFC 2317</a>.</p>
    pub fn cidr(&self) -> &str {
        use std::ops::Deref;
        self.cidr.deref()
    }
}
impl ReceiptIpFilter {
    /// Creates a new builder-style object to manufacture [`ReceiptIpFilter`](crate::types::ReceiptIpFilter).
    pub fn builder() -> crate::types::builders::ReceiptIpFilterBuilder {
        crate::types::builders::ReceiptIpFilterBuilder::default()
    }
}

/// A builder for [`ReceiptIpFilter`](crate::types::ReceiptIpFilter).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReceiptIpFilterBuilder {
    pub(crate) policy: ::std::option::Option<crate::types::ReceiptFilterPolicy>,
    pub(crate) cidr: ::std::option::Option<::std::string::String>,
}
impl ReceiptIpFilterBuilder {
    /// <p>Indicates whether to block or allow incoming mail from the specified IP addresses.</p>
    /// This field is required.
    pub fn policy(mut self, input: crate::types::ReceiptFilterPolicy) -> Self {
        self.policy = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether to block or allow incoming mail from the specified IP addresses.</p>
    pub fn set_policy(mut self, input: ::std::option::Option<crate::types::ReceiptFilterPolicy>) -> Self {
        self.policy = input;
        self
    }
    /// <p>Indicates whether to block or allow incoming mail from the specified IP addresses.</p>
    pub fn get_policy(&self) -> &::std::option::Option<crate::types::ReceiptFilterPolicy> {
        &self.policy
    }
    /// <p>A single IP address or a range of IP addresses to block or allow, specified in Classless Inter-Domain Routing (CIDR) notation. An example of a single email address is 10.0.0.1. An example of a range of IP addresses is 10.0.0.1/24. For more information about CIDR notation, see <a href="https://tools.ietf.org/html/rfc2317">RFC 2317</a>.</p>
    /// This field is required.
    pub fn cidr(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cidr = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A single IP address or a range of IP addresses to block or allow, specified in Classless Inter-Domain Routing (CIDR) notation. An example of a single email address is 10.0.0.1. An example of a range of IP addresses is 10.0.0.1/24. For more information about CIDR notation, see <a href="https://tools.ietf.org/html/rfc2317">RFC 2317</a>.</p>
    pub fn set_cidr(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cidr = input;
        self
    }
    /// <p>A single IP address or a range of IP addresses to block or allow, specified in Classless Inter-Domain Routing (CIDR) notation. An example of a single email address is 10.0.0.1. An example of a range of IP addresses is 10.0.0.1/24. For more information about CIDR notation, see <a href="https://tools.ietf.org/html/rfc2317">RFC 2317</a>.</p>
    pub fn get_cidr(&self) -> &::std::option::Option<::std::string::String> {
        &self.cidr
    }
    /// Consumes the builder and constructs a [`ReceiptIpFilter`](crate::types::ReceiptIpFilter).
    /// This method will fail if any of the following fields are not set:
    /// - [`policy`](crate::types::builders::ReceiptIpFilterBuilder::policy)
    /// - [`cidr`](crate::types::builders::ReceiptIpFilterBuilder::cidr)
    pub fn build(self) -> ::std::result::Result<crate::types::ReceiptIpFilter, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ReceiptIpFilter {
            policy: self.policy.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "policy",
                    "policy was not specified but it is required when building ReceiptIpFilter",
                )
            })?,
            cidr: self.cidr.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "cidr",
                    "cidr was not specified but it is required when building ReceiptIpFilter",
                )
            })?,
        })
    }
}
