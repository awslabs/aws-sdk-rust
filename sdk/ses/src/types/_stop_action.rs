// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>When included in a receipt rule, this action terminates the evaluation of the receipt rule set and, optionally, publishes a notification to Amazon Simple Notification Service (Amazon SNS).</p>
/// <p>For information about setting a stop action in a receipt rule, see the <a href="https://docs.aws.amazon.com/ses/latest/dg/receiving-email-action-stop.html">Amazon SES Developer Guide</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StopAction {
    /// <p>The scope of the StopAction. The only acceptable value is <code>RuleSet</code>.</p>
    pub scope: crate::types::StopScope,
    /// <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the stop action is taken. You can find the ARN of a topic by using the <a href="https://docs.aws.amazon.com/sns/latest/api/API_ListTopics.html">ListTopics</a> Amazon SNS operation.</p>
    /// <p>For more information about Amazon SNS topics, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon SNS Developer Guide</a>.</p>
    pub topic_arn: ::std::option::Option<::std::string::String>,
}
impl StopAction {
    /// <p>The scope of the StopAction. The only acceptable value is <code>RuleSet</code>.</p>
    pub fn scope(&self) -> &crate::types::StopScope {
        &self.scope
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the stop action is taken. You can find the ARN of a topic by using the <a href="https://docs.aws.amazon.com/sns/latest/api/API_ListTopics.html">ListTopics</a> Amazon SNS operation.</p>
    /// <p>For more information about Amazon SNS topics, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon SNS Developer Guide</a>.</p>
    pub fn topic_arn(&self) -> ::std::option::Option<&str> {
        self.topic_arn.as_deref()
    }
}
impl StopAction {
    /// Creates a new builder-style object to manufacture [`StopAction`](crate::types::StopAction).
    pub fn builder() -> crate::types::builders::StopActionBuilder {
        crate::types::builders::StopActionBuilder::default()
    }
}

/// A builder for [`StopAction`](crate::types::StopAction).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StopActionBuilder {
    pub(crate) scope: ::std::option::Option<crate::types::StopScope>,
    pub(crate) topic_arn: ::std::option::Option<::std::string::String>,
}
impl StopActionBuilder {
    /// <p>The scope of the StopAction. The only acceptable value is <code>RuleSet</code>.</p>
    /// This field is required.
    pub fn scope(mut self, input: crate::types::StopScope) -> Self {
        self.scope = ::std::option::Option::Some(input);
        self
    }
    /// <p>The scope of the StopAction. The only acceptable value is <code>RuleSet</code>.</p>
    pub fn set_scope(mut self, input: ::std::option::Option<crate::types::StopScope>) -> Self {
        self.scope = input;
        self
    }
    /// <p>The scope of the StopAction. The only acceptable value is <code>RuleSet</code>.</p>
    pub fn get_scope(&self) -> &::std::option::Option<crate::types::StopScope> {
        &self.scope
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the stop action is taken. You can find the ARN of a topic by using the <a href="https://docs.aws.amazon.com/sns/latest/api/API_ListTopics.html">ListTopics</a> Amazon SNS operation.</p>
    /// <p>For more information about Amazon SNS topics, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon SNS Developer Guide</a>.</p>
    pub fn topic_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.topic_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the stop action is taken. You can find the ARN of a topic by using the <a href="https://docs.aws.amazon.com/sns/latest/api/API_ListTopics.html">ListTopics</a> Amazon SNS operation.</p>
    /// <p>For more information about Amazon SNS topics, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon SNS Developer Guide</a>.</p>
    pub fn set_topic_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.topic_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the stop action is taken. You can find the ARN of a topic by using the <a href="https://docs.aws.amazon.com/sns/latest/api/API_ListTopics.html">ListTopics</a> Amazon SNS operation.</p>
    /// <p>For more information about Amazon SNS topics, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon SNS Developer Guide</a>.</p>
    pub fn get_topic_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.topic_arn
    }
    /// Consumes the builder and constructs a [`StopAction`](crate::types::StopAction).
    /// This method will fail if any of the following fields are not set:
    /// - [`scope`](crate::types::builders::StopActionBuilder::scope)
    pub fn build(self) -> ::std::result::Result<crate::types::StopAction, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::StopAction {
            scope: self.scope.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "scope",
                    "scope was not specified but it is required when building StopAction",
                )
            })?,
            topic_arn: self.topic_arn,
        })
    }
}
