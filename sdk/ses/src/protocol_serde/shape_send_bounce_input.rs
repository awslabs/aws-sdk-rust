// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_send_bounce_input_input(
    input: &crate::operation::send_bounce::SendBounceInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "SendBounce", "2010-12-01");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("OriginalMessageId");
    if let Some(var_2) = &input.original_message_id {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("BounceSender");
    if let Some(var_4) = &input.bounce_sender {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("Explanation");
    if let Some(var_6) = &input.explanation {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("MessageDsn");
    if let Some(var_8) = &input.message_dsn {
        crate::protocol_serde::shape_message_dsn::ser_message_dsn(scope_7, var_8)?;
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("BouncedRecipientInfoList");
    if let Some(var_10) = &input.bounced_recipient_info_list {
        let mut list_12 = scope_9.start_list(false, None);
        for item_11 in var_10 {
            #[allow(unused_mut)]
            let mut entry_13 = list_12.entry();
            crate::protocol_serde::shape_bounced_recipient_info::ser_bounced_recipient_info(entry_13, item_11)?;
        }
        list_12.finish();
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("BounceSenderArn");
    if let Some(var_15) = &input.bounce_sender_arn {
        scope_14.string(var_15);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
