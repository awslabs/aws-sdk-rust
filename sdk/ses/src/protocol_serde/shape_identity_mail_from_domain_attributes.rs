// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_identity_mail_from_domain_attributes(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::IdentityMailFromDomainAttributes, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::IdentityMailFromDomainAttributes::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("MailFromDomain") /* MailFromDomain com.amazonaws.ses#IdentityMailFromDomainAttributes$MailFromDomain */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_mail_from_domain(var_1);
            }
            ,
            s if s.matches("MailFromDomainStatus") /* MailFromDomainStatus com.amazonaws.ses#IdentityMailFromDomainAttributes$MailFromDomainStatus */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::CustomMailFromStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::CustomMailFromStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_mail_from_domain_status(var_2);
            }
            ,
            s if s.matches("BehaviorOnMXFailure") /* BehaviorOnMXFailure com.amazonaws.ses#IdentityMailFromDomainAttributes$BehaviorOnMXFailure */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::BehaviorOnMxFailure, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::BehaviorOnMxFailure::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_behavior_on_mx_failure(var_3);
            }
            ,
            _ => {}
        }
    }
    Ok(crate::serde_util::identity_mail_from_domain_attributes_correct_errors(builder)
        .build()
        .map_err(|_| ::aws_smithy_xml::decode::XmlDecodeError::custom("missing field"))?)
}
