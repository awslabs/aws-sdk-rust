// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_add_header_action(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::AddHeaderAction,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("HeaderName");
    {
        scope_1.string(&input.header_name);
    }
    #[allow(unused_mut)]
    let mut scope_2 = writer.prefix("HeaderValue");
    {
        scope_2.string(&input.header_value);
    }
    Ok(())
}

#[allow(clippy::needless_question_mark)]
pub fn de_add_header_action(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::AddHeaderAction, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::AddHeaderAction::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("HeaderName") /* HeaderName com.amazonaws.ses#AddHeaderAction$HeaderName */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_header_name(var_3);
            }
            ,
            s if s.matches("HeaderValue") /* HeaderValue com.amazonaws.ses#AddHeaderAction$HeaderValue */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_header_value(var_4);
            }
            ,
            _ => {}
        }
    }
    Ok(crate::serde_util::add_header_action_correct_errors(builder)
        .build()
        .map_err(|_| ::aws_smithy_xml::decode::XmlDecodeError::custom("missing field"))?)
}
