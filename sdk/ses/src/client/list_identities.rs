// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListIdentities`](crate::client::fluent_builders::ListIdentities) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListIdentities::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`identity_type(IdentityType)`](crate::client::fluent_builders::ListIdentities::identity_type) / [`set_identity_type(Option<IdentityType>)`](crate::client::fluent_builders::ListIdentities::set_identity_type): <p>The type of the identities to list. Possible values are "EmailAddress" and "Domain". If this parameter is omitted, then all identities will be listed.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListIdentities::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListIdentities::set_next_token): <p>The token to use for pagination.</p>
    ///   - [`max_items(i32)`](crate::client::fluent_builders::ListIdentities::max_items) / [`set_max_items(Option<i32>)`](crate::client::fluent_builders::ListIdentities::set_max_items): <p>The maximum number of identities per page. Possible values are 1-1000 inclusive.</p>
    /// - On success, responds with [`ListIdentitiesOutput`](crate::output::ListIdentitiesOutput) with field(s):
    ///   - [`identities(Option<Vec<String>>)`](crate::output::ListIdentitiesOutput::identities): <p>A list of identities.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListIdentitiesOutput::next_token): <p>The token used for pagination.</p>
    /// - On failure, responds with [`SdkError<ListIdentitiesError>`](crate::error::ListIdentitiesError)
    pub fn list_identities(&self) -> crate::client::fluent_builders::ListIdentities {
        crate::client::fluent_builders::ListIdentities::new(self.handle.clone())
    }
}
