// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetIdentityHeadersInNotificationsEnabled`](crate::client::fluent_builders::SetIdentityHeadersInNotificationsEnabled) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identity(impl Into<String>)`](crate::client::fluent_builders::SetIdentityHeadersInNotificationsEnabled::identity) / [`set_identity(Option<String>)`](crate::client::fluent_builders::SetIdentityHeadersInNotificationsEnabled::set_identity): <p>The identity for which to enable or disable headers in notifications. Examples: <code>user@example.com</code>, <code>example.com</code>.</p>
    ///   - [`notification_type(NotificationType)`](crate::client::fluent_builders::SetIdentityHeadersInNotificationsEnabled::notification_type) / [`set_notification_type(Option<NotificationType>)`](crate::client::fluent_builders::SetIdentityHeadersInNotificationsEnabled::set_notification_type): <p>The notification type for which to enable or disable headers in notifications. </p>
    ///   - [`enabled(bool)`](crate::client::fluent_builders::SetIdentityHeadersInNotificationsEnabled::enabled) / [`set_enabled(bool)`](crate::client::fluent_builders::SetIdentityHeadersInNotificationsEnabled::set_enabled): <p>Sets whether Amazon SES includes the original email headers in Amazon SNS notifications of the specified notification type. A value of <code>true</code> specifies that Amazon SES will include headers in notifications, and a value of <code>false</code> specifies that Amazon SES will not include headers in notifications.</p>  <p>This value can only be set when <code>NotificationType</code> is already set to use a particular Amazon SNS topic.</p>
    /// - On success, responds with [`SetIdentityHeadersInNotificationsEnabledOutput`](crate::output::SetIdentityHeadersInNotificationsEnabledOutput)
    /// - On failure, responds with [`SdkError<SetIdentityHeadersInNotificationsEnabledError>`](crate::error::SetIdentityHeadersInNotificationsEnabledError)
    pub fn set_identity_headers_in_notifications_enabled(
        &self,
    ) -> crate::client::fluent_builders::SetIdentityHeadersInNotificationsEnabled {
        crate::client::fluent_builders::SetIdentityHeadersInNotificationsEnabled::new(
            self.handle.clone(),
        )
    }
}
