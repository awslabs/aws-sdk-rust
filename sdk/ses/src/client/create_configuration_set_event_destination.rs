// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateConfigurationSetEventDestination`](crate::operation::create_configuration_set_event_destination::builders::CreateConfigurationSetEventDestinationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::operation::create_configuration_set_event_destination::builders::CreateConfigurationSetEventDestinationFluentBuilder::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::operation::create_configuration_set_event_destination::builders::CreateConfigurationSetEventDestinationFluentBuilder::set_configuration_set_name):<br>required: **true**<br><p>The name of the configuration set that the event destination should be associated with.</p><br>
    ///   - [`event_destination(EventDestination)`](crate::operation::create_configuration_set_event_destination::builders::CreateConfigurationSetEventDestinationFluentBuilder::event_destination) / [`set_event_destination(Option<EventDestination>)`](crate::operation::create_configuration_set_event_destination::builders::CreateConfigurationSetEventDestinationFluentBuilder::set_event_destination):<br>required: **true**<br><p>An object that describes the Amazon Web Services service that email sending event where information is published.</p><br>
    /// - On success, responds with [`CreateConfigurationSetEventDestinationOutput`](crate::operation::create_configuration_set_event_destination::CreateConfigurationSetEventDestinationOutput)
    /// - On failure, responds with [`SdkError<CreateConfigurationSetEventDestinationError>`](crate::operation::create_configuration_set_event_destination::CreateConfigurationSetEventDestinationError)
    pub fn create_configuration_set_event_destination(
        &self,
    ) -> crate::operation::create_configuration_set_event_destination::builders::CreateConfigurationSetEventDestinationFluentBuilder {
        crate::operation::create_configuration_set_event_destination::builders::CreateConfigurationSetEventDestinationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
