// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetIdentityNotificationTopic`](crate::client::fluent_builders::SetIdentityNotificationTopic) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identity(impl Into<String>)`](crate::client::fluent_builders::SetIdentityNotificationTopic::identity) / [`set_identity(Option<String>)`](crate::client::fluent_builders::SetIdentityNotificationTopic::set_identity): <p>The identity (email address or domain) that you want to set the Amazon SNS topic for.</p> <important>   <p>You can only specify a verified identity for this parameter.</p>  </important>  <p>You can specify an identity by using its name or by using its Amazon Resource Name (ARN). The following examples are all valid identities: <code>sender@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p>
    ///   - [`notification_type(NotificationType)`](crate::client::fluent_builders::SetIdentityNotificationTopic::notification_type) / [`set_notification_type(Option<NotificationType>)`](crate::client::fluent_builders::SetIdentityNotificationTopic::set_notification_type): <p>The type of notifications that will be published to the specified Amazon SNS topic.</p>
    ///   - [`sns_topic(impl Into<String>)`](crate::client::fluent_builders::SetIdentityNotificationTopic::sns_topic) / [`set_sns_topic(Option<String>)`](crate::client::fluent_builders::SetIdentityNotificationTopic::set_sns_topic): <p>The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is omitted from the request or a null value is passed, <code>SnsTopic</code> is cleared and publishing is disabled.</p>
    /// - On success, responds with [`SetIdentityNotificationTopicOutput`](crate::output::SetIdentityNotificationTopicOutput)
    /// - On failure, responds with [`SdkError<SetIdentityNotificationTopicError>`](crate::error::SetIdentityNotificationTopicError)
    pub fn set_identity_notification_topic(
        &self,
    ) -> crate::client::fluent_builders::SetIdentityNotificationTopic {
        crate::client::fluent_builders::SetIdentityNotificationTopic::new(self.handle.clone())
    }
}
