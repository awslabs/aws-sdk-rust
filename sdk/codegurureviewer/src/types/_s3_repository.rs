// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a repository in an S3 bucket.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3Repository {
    /// <p>The name of the repository in the S3 bucket.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The name of the S3 bucket used for associating a new S3 repository. It must begin with <code>codeguru-reviewer-</code>. </p>
    #[doc(hidden)]
    pub bucket_name: std::option::Option<std::string::String>,
}
impl S3Repository {
    /// <p>The name of the repository in the S3 bucket.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The name of the S3 bucket used for associating a new S3 repository. It must begin with <code>codeguru-reviewer-</code>. </p>
    pub fn bucket_name(&self) -> std::option::Option<&str> {
        self.bucket_name.as_deref()
    }
}
impl S3Repository {
    /// Creates a new builder-style object to manufacture [`S3Repository`](crate::types::S3Repository).
    pub fn builder() -> crate::types::builders::S3RepositoryBuilder {
        crate::types::builders::S3RepositoryBuilder::default()
    }
}

/// A builder for [`S3Repository`](crate::types::S3Repository).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3RepositoryBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) bucket_name: std::option::Option<std::string::String>,
}
impl S3RepositoryBuilder {
    /// <p>The name of the repository in the S3 bucket.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the repository in the S3 bucket.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the S3 bucket used for associating a new S3 repository. It must begin with <code>codeguru-reviewer-</code>. </p>
    pub fn bucket_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_name = Some(input.into());
        self
    }
    /// <p>The name of the S3 bucket used for associating a new S3 repository. It must begin with <code>codeguru-reviewer-</code>. </p>
    pub fn set_bucket_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket_name = input;
        self
    }
    /// Consumes the builder and constructs a [`S3Repository`](crate::types::S3Repository).
    pub fn build(self) -> crate::types::S3Repository {
        crate::types::S3Repository {
            name: self.name,
            bucket_name: self.bucket_name,
        }
    }
}
