// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType">SourceCodeType</a> that specifies the tip of a branch in an associated repository.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RepositoryHeadSourceCodeType {
    /// <p>The name of the branch in an associated repository. The <code>RepositoryHeadSourceCodeType</code> specifies the tip of this branch.</p>
    pub branch_name: ::std::string::String,
}
impl RepositoryHeadSourceCodeType {
    /// <p>The name of the branch in an associated repository. The <code>RepositoryHeadSourceCodeType</code> specifies the tip of this branch.</p>
    pub fn branch_name(&self) -> &str {
        use std::ops::Deref;
        self.branch_name.deref()
    }
}
impl RepositoryHeadSourceCodeType {
    /// Creates a new builder-style object to manufacture [`RepositoryHeadSourceCodeType`](crate::types::RepositoryHeadSourceCodeType).
    pub fn builder() -> crate::types::builders::RepositoryHeadSourceCodeTypeBuilder {
        crate::types::builders::RepositoryHeadSourceCodeTypeBuilder::default()
    }
}

/// A builder for [`RepositoryHeadSourceCodeType`](crate::types::RepositoryHeadSourceCodeType).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RepositoryHeadSourceCodeTypeBuilder {
    pub(crate) branch_name: ::std::option::Option<::std::string::String>,
}
impl RepositoryHeadSourceCodeTypeBuilder {
    /// <p>The name of the branch in an associated repository. The <code>RepositoryHeadSourceCodeType</code> specifies the tip of this branch.</p>
    /// This field is required.
    pub fn branch_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.branch_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the branch in an associated repository. The <code>RepositoryHeadSourceCodeType</code> specifies the tip of this branch.</p>
    pub fn set_branch_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.branch_name = input;
        self
    }
    /// <p>The name of the branch in an associated repository. The <code>RepositoryHeadSourceCodeType</code> specifies the tip of this branch.</p>
    pub fn get_branch_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.branch_name
    }
    /// Consumes the builder and constructs a [`RepositoryHeadSourceCodeType`](crate::types::RepositoryHeadSourceCodeType).
    /// This method will fail if any of the following fields are not set:
    /// - [`branch_name`](crate::types::builders::RepositoryHeadSourceCodeTypeBuilder::branch_name)
    pub fn build(self) -> ::std::result::Result<crate::types::RepositoryHeadSourceCodeType, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RepositoryHeadSourceCodeType {
            branch_name: self.branch_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "branch_name",
                    "branch_name was not specified but it is required when building RepositoryHeadSourceCodeType",
                )
            })?,
        })
    }
}
