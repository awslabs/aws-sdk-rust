// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A type of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType">SourceCodeType</a> that specifies a code diff between a source and destination branch in an associated repository.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BranchDiffSourceCodeType {
    /// <p>The source branch for a diff in an associated repository.</p>
    #[doc(hidden)]
    pub source_branch_name: std::option::Option<std::string::String>,
    /// <p>The destination branch for a diff in an associated repository.</p>
    #[doc(hidden)]
    pub destination_branch_name: std::option::Option<std::string::String>,
}
impl BranchDiffSourceCodeType {
    /// <p>The source branch for a diff in an associated repository.</p>
    pub fn source_branch_name(&self) -> std::option::Option<&str> {
        self.source_branch_name.as_deref()
    }
    /// <p>The destination branch for a diff in an associated repository.</p>
    pub fn destination_branch_name(&self) -> std::option::Option<&str> {
        self.destination_branch_name.as_deref()
    }
}
impl BranchDiffSourceCodeType {
    /// Creates a new builder-style object to manufacture [`BranchDiffSourceCodeType`](crate::types::BranchDiffSourceCodeType).
    pub fn builder() -> crate::types::builders::BranchDiffSourceCodeTypeBuilder {
        crate::types::builders::BranchDiffSourceCodeTypeBuilder::default()
    }
}

/// A builder for [`BranchDiffSourceCodeType`](crate::types::BranchDiffSourceCodeType).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BranchDiffSourceCodeTypeBuilder {
    pub(crate) source_branch_name: std::option::Option<std::string::String>,
    pub(crate) destination_branch_name: std::option::Option<std::string::String>,
}
impl BranchDiffSourceCodeTypeBuilder {
    /// <p>The source branch for a diff in an associated repository.</p>
    pub fn source_branch_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_branch_name = Some(input.into());
        self
    }
    /// <p>The source branch for a diff in an associated repository.</p>
    pub fn set_source_branch_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_branch_name = input;
        self
    }
    /// <p>The destination branch for a diff in an associated repository.</p>
    pub fn destination_branch_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.destination_branch_name = Some(input.into());
        self
    }
    /// <p>The destination branch for a diff in an associated repository.</p>
    pub fn set_destination_branch_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.destination_branch_name = input;
        self
    }
    /// Consumes the builder and constructs a [`BranchDiffSourceCodeType`](crate::types::BranchDiffSourceCodeType).
    pub fn build(self) -> crate::types::BranchDiffSourceCodeType {
        crate::types::BranchDiffSourceCodeType {
            source_branch_name: self.source_branch_name,
            destination_branch_name: self.destination_branch_name,
        }
    }
}
