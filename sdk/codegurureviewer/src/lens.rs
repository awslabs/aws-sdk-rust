// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_code_reviews_output_next_token(
    input: &crate::operation::list_code_reviews::ListCodeReviewsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_recommendation_feedback_output_next_token(
    input: &crate::operation::list_recommendation_feedback::ListRecommendationFeedbackOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_recommendations_output_next_token(
    input: &crate::operation::list_recommendations::ListRecommendationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_repository_associations_output_next_token(
    input: &crate::operation::list_repository_associations::ListRepositoryAssociationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_repository_associations_output_repository_association_summaries(
    input: crate::operation::list_repository_associations::ListRepositoryAssociationsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::RepositoryAssociationSummary>> {
    let input = match input.repository_association_summaries {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
