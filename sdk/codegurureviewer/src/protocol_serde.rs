// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_associate_repository;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_code_review;

pub(crate) mod shape_describe_code_review;

pub(crate) mod shape_describe_recommendation_feedback;

pub(crate) mod shape_describe_repository_association;

pub(crate) mod shape_disassociate_repository;

pub(crate) mod shape_list_code_reviews;

pub(crate) mod shape_list_recommendation_feedback;

pub(crate) mod shape_list_recommendations;

pub(crate) mod shape_list_repository_associations;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_recommendation_feedback;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_associate_repository_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_code_review_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_put_recommendation_feedback_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_code_review;

pub(crate) mod shape_code_review_summaries;

pub(crate) mod shape_code_review_type;

pub(crate) mod shape_kms_key_details;

pub(crate) mod shape_recommendation_feedback;

pub(crate) mod shape_recommendation_feedback_summaries;

pub(crate) mod shape_recommendation_summaries;

pub(crate) mod shape_repository;

pub(crate) mod shape_repository_association;

pub(crate) mod shape_repository_association_summaries;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_analysis_types;

pub(crate) mod shape_code_commit_repository;

pub(crate) mod shape_code_review_summary;

pub(crate) mod shape_metrics;

pub(crate) mod shape_reactions;

pub(crate) mod shape_recommendation_feedback_summary;

pub(crate) mod shape_recommendation_summary;

pub(crate) mod shape_repository_analysis;

pub(crate) mod shape_repository_association_summary;

pub(crate) mod shape_s3_repository;

pub(crate) mod shape_s3_repository_details;

pub(crate) mod shape_source_code_type;

pub(crate) mod shape_third_party_source_repository;

pub(crate) mod shape_branch_diff_source_code_type;

pub(crate) mod shape_code_artifacts;

pub(crate) mod shape_commit_diff_source_code_type;

pub(crate) mod shape_metrics_summary;

pub(crate) mod shape_repository_head_source_code_type;

pub(crate) mod shape_request_metadata;

pub(crate) mod shape_rule_metadata;

pub(crate) mod shape_s3_bucket_repository;

pub(crate) mod shape_event_info;

pub(crate) mod shape_rule_tags;
