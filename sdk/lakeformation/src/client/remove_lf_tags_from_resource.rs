// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RemoveLFTagsFromResource`](crate::operation::remove_lf_tags_from_resource::builders::RemoveLFTagsFromResourceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::remove_lf_tags_from_resource::builders::RemoveLFTagsFromResourceFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::remove_lf_tags_from_resource::builders::RemoveLFTagsFromResourceFluentBuilder::set_catalog_id): <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    ///   - [`resource(Resource)`](crate::operation::remove_lf_tags_from_resource::builders::RemoveLFTagsFromResourceFluentBuilder::resource) / [`set_resource(Option<Resource>)`](crate::operation::remove_lf_tags_from_resource::builders::RemoveLFTagsFromResourceFluentBuilder::set_resource): <p>The database, table, or column resource where you want to remove an LF-tag.</p>
    ///   - [`lf_tags(Vec<LfTagPair>)`](crate::operation::remove_lf_tags_from_resource::builders::RemoveLFTagsFromResourceFluentBuilder::lf_tags) / [`set_lf_tags(Option<Vec<LfTagPair>>)`](crate::operation::remove_lf_tags_from_resource::builders::RemoveLFTagsFromResourceFluentBuilder::set_lf_tags): <p>The LF-tags to be removed from the resource.</p>
    /// - On success, responds with [`RemoveLfTagsFromResourceOutput`](crate::operation::remove_lf_tags_from_resource::RemoveLfTagsFromResourceOutput) with field(s):
    ///   - [`failures(Option<Vec<LfTagError>>)`](crate::operation::remove_lf_tags_from_resource::RemoveLfTagsFromResourceOutput::failures): <p>A list of failures to untag a resource.</p>
    /// - On failure, responds with [`SdkError<RemoveLFTagsFromResourceError>`](crate::operation::remove_lf_tags_from_resource::RemoveLFTagsFromResourceError)
    pub fn remove_lf_tags_from_resource(&self) -> crate::operation::remove_lf_tags_from_resource::builders::RemoveLFTagsFromResourceFluentBuilder{
        crate::operation::remove_lf_tags_from_resource::builders::RemoveLFTagsFromResourceFluentBuilder::new(self.handle.clone())
    }
}
