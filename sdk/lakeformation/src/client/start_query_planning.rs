// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartQueryPlanning`](crate::operation::start_query_planning::builders::StartQueryPlanningFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`query_planning_context(QueryPlanningContext)`](crate::operation::start_query_planning::builders::StartQueryPlanningFluentBuilder::query_planning_context) / [`set_query_planning_context(Option<QueryPlanningContext>)`](crate::operation::start_query_planning::builders::StartQueryPlanningFluentBuilder::set_query_planning_context):<br>required: **true**<br><p>A structure containing information about the query plan.</p><br>
    ///   - [`query_string(impl Into<String>)`](crate::operation::start_query_planning::builders::StartQueryPlanningFluentBuilder::query_string) / [`set_query_string(Option<String>)`](crate::operation::start_query_planning::builders::StartQueryPlanningFluentBuilder::set_query_string):<br>required: **true**<br><p>A PartiQL query statement used as an input to the planner service.</p><br>
    /// - On success, responds with [`StartQueryPlanningOutput`](crate::operation::start_query_planning::StartQueryPlanningOutput) with field(s):
    ///   - [`query_id(String)`](crate::operation::start_query_planning::StartQueryPlanningOutput::query_id): <p>The ID of the plan query operation can be used to fetch the actual work unit descriptors that are produced as the result of the operation. The ID is also used to get the query state and as an input to the <code>Execute</code> operation.</p>
    /// - On failure, responds with [`SdkError<StartQueryPlanningError>`](crate::operation::start_query_planning::StartQueryPlanningError)
    pub fn start_query_planning(&self) -> crate::operation::start_query_planning::builders::StartQueryPlanningFluentBuilder {
        crate::operation::start_query_planning::builders::StartQueryPlanningFluentBuilder::new(self.handle.clone())
    }
}
