// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateResource`](crate::operation::update_resource::builders::UpdateResourceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`role_arn(impl Into<String>)`](crate::operation::update_resource::builders::UpdateResourceFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::update_resource::builders::UpdateResourceFluentBuilder::set_role_arn):<br>required: **true**<br><p>The new role to use for the given resource registered in Lake Formation.</p><br>
    ///   - [`resource_arn(impl Into<String>)`](crate::operation::update_resource::builders::UpdateResourceFluentBuilder::resource_arn) / [`set_resource_arn(Option<String>)`](crate::operation::update_resource::builders::UpdateResourceFluentBuilder::set_resource_arn):<br>required: **true**<br><p>The resource ARN.</p><br>
    ///   - [`with_federation(bool)`](crate::operation::update_resource::builders::UpdateResourceFluentBuilder::with_federation) / [`set_with_federation(Option<bool>)`](crate::operation::update_resource::builders::UpdateResourceFluentBuilder::set_with_federation):<br>required: **false**<br><p>Whether or not the resource is a federated resource.</p><br>
    ///   - [`hybrid_access_enabled(bool)`](crate::operation::update_resource::builders::UpdateResourceFluentBuilder::hybrid_access_enabled) / [`set_hybrid_access_enabled(Option<bool>)`](crate::operation::update_resource::builders::UpdateResourceFluentBuilder::set_hybrid_access_enabled):<br>required: **false**<br><p> Specifies whether the data access of tables pointing to the location can be managed by both Lake Formation permissions as well as Amazon S3 bucket policies. </p><br>
    /// - On success, responds with [`UpdateResourceOutput`](crate::operation::update_resource::UpdateResourceOutput)
    /// - On failure, responds with [`SdkError<UpdateResourceError>`](crate::operation::update_resource::UpdateResourceError)
    pub fn update_resource(&self) -> crate::operation::update_resource::builders::UpdateResourceFluentBuilder {
        crate::operation::update_resource::builders::UpdateResourceFluentBuilder::new(self.handle.clone())
    }
}
