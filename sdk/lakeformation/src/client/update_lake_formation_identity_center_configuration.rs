// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLakeFormationIdentityCenterConfiguration`](crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder::set_catalog_id):<br>required: **false**<br><p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, view definitions, and other control information to manage your Lake Formation environment.</p><br>
    ///   - [`share_recipients(DataLakePrincipal)`](crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder::share_recipients) / [`set_share_recipients(Option<Vec::<DataLakePrincipal>>)`](crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder::set_share_recipients):<br>required: **false**<br><p>A list of Amazon Web Services account IDs or Amazon Web Services organization/organizational unit ARNs that are allowed to access to access data managed by Lake Formation.</p> <p>If the <code>ShareRecipients</code> list includes valid values, then the resource share is updated with the principals you want to have access to the resources.</p> <p>If the <code>ShareRecipients</code> value is null, both the list of share recipients and the resource share remain unchanged.</p> <p>If the <code>ShareRecipients</code> value is an empty list, then the existing share recipients list will be cleared, and the resource share will be deleted.</p><br>
    ///   - [`application_status(ApplicationStatus)`](crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder::application_status) / [`set_application_status(Option<ApplicationStatus>)`](crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder::set_application_status):<br>required: **false**<br><p>Allows to enable or disable the IAM Identity Center connection.</p><br>
    ///   - [`external_filtering(ExternalFilteringConfiguration)`](crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder::external_filtering) / [`set_external_filtering(Option<ExternalFilteringConfiguration>)`](crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder::set_external_filtering):<br>required: **false**<br><p>A list of the account IDs of Amazon Web Services accounts of third-party applications that are allowed to access data managed by Lake Formation.</p><br>
    /// - On success, responds with [`UpdateLakeFormationIdentityCenterConfigurationOutput`](crate::operation::update_lake_formation_identity_center_configuration::UpdateLakeFormationIdentityCenterConfigurationOutput)
    /// - On failure, responds with [`SdkError<UpdateLakeFormationIdentityCenterConfigurationError>`](crate::operation::update_lake_formation_identity_center_configuration::UpdateLakeFormationIdentityCenterConfigurationError)
    pub fn update_lake_formation_identity_center_configuration(
        &self,
    ) -> crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder
    {
        crate::operation::update_lake_formation_identity_center_configuration::builders::UpdateLakeFormationIdentityCenterConfigurationFluentBuilder::new(self.handle.clone())
    }
}
