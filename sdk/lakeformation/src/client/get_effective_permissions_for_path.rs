// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetEffectivePermissionsForPath`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::set_catalog_id): <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    ///   - [`resource_arn(impl Into<String>)`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::resource_arn) / [`set_resource_arn(Option<String>)`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource for which you want to get permissions.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::set_next_token): <p>A continuation token, if this is not the first call to retrieve this list.</p>
    ///   - [`max_results(i32)`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::set_max_results): <p>The maximum number of results to return.</p>
    /// - On success, responds with [`GetEffectivePermissionsForPathOutput`](crate::operation::get_effective_permissions_for_path::GetEffectivePermissionsForPathOutput) with field(s):
    ///   - [`permissions(Option<Vec<PrincipalResourcePermissions>>)`](crate::operation::get_effective_permissions_for_path::GetEffectivePermissionsForPathOutput::permissions): <p>A list of the permissions for the specified table or database resource located at the path in Amazon S3.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_effective_permissions_for_path::GetEffectivePermissionsForPathOutput::next_token): <p>A continuation token, if this is not the first call to retrieve this list.</p>
    /// - On failure, responds with [`SdkError<GetEffectivePermissionsForPathError>`](crate::operation::get_effective_permissions_for_path::GetEffectivePermissionsForPathError)
    pub fn get_effective_permissions_for_path(&self) -> crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder{
        crate::operation::get_effective_permissions_for_path::builders::GetEffectivePermissionsForPathFluentBuilder::new(self.handle.clone())
    }
}
