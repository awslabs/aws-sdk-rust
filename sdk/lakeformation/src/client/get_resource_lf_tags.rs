// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetResourceLFTags`](crate::operation::get_resource_lf_tags::builders::GetResourceLFTagsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog_id(impl Into<String>)`](crate::operation::get_resource_lf_tags::builders::GetResourceLFTagsFluentBuilder::catalog_id) / [`set_catalog_id(Option<String>)`](crate::operation::get_resource_lf_tags::builders::GetResourceLFTagsFluentBuilder::set_catalog_id): <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    ///   - [`resource(Resource)`](crate::operation::get_resource_lf_tags::builders::GetResourceLFTagsFluentBuilder::resource) / [`set_resource(Option<Resource>)`](crate::operation::get_resource_lf_tags::builders::GetResourceLFTagsFluentBuilder::set_resource): <p>The database, table, or column resource for which you want to return LF-tags.</p>
    ///   - [`show_assigned_lf_tags(bool)`](crate::operation::get_resource_lf_tags::builders::GetResourceLFTagsFluentBuilder::show_assigned_lf_tags) / [`set_show_assigned_lf_tags(Option<bool>)`](crate::operation::get_resource_lf_tags::builders::GetResourceLFTagsFluentBuilder::set_show_assigned_lf_tags): <p>Indicates whether to show the assigned LF-tags.</p>
    /// - On success, responds with [`GetResourceLfTagsOutput`](crate::operation::get_resource_lf_tags::GetResourceLfTagsOutput) with field(s):
    ///   - [`lf_tag_on_database(Option<Vec<LfTagPair>>)`](crate::operation::get_resource_lf_tags::GetResourceLfTagsOutput::lf_tag_on_database): <p>A list of LF-tags applied to a database resource.</p>
    ///   - [`lf_tags_on_table(Option<Vec<LfTagPair>>)`](crate::operation::get_resource_lf_tags::GetResourceLfTagsOutput::lf_tags_on_table): <p>A list of LF-tags applied to a table resource.</p>
    ///   - [`lf_tags_on_columns(Option<Vec<ColumnLfTag>>)`](crate::operation::get_resource_lf_tags::GetResourceLfTagsOutput::lf_tags_on_columns): <p>A list of LF-tags applied to a column resource.</p>
    /// - On failure, responds with [`SdkError<GetResourceLFTagsError>`](crate::operation::get_resource_lf_tags::GetResourceLFTagsError)
    pub fn get_resource_lf_tags(
        &self,
    ) -> crate::operation::get_resource_lf_tags::builders::GetResourceLFTagsFluentBuilder {
        crate::operation::get_resource_lf_tags::builders::GetResourceLFTagsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
