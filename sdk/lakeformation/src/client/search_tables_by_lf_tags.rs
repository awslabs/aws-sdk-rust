// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchTablesByLFTags`](crate::client::fluent_builders::SearchTablesByLFTags) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::SearchTablesByLFTags::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::SearchTablesByLFTags::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::SearchTablesByLFTags::set_next_token): <p>A continuation token, if this is not the first call to retrieve this list.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::SearchTablesByLFTags::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::SearchTablesByLFTags::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`catalog_id(impl Into<String>)`](crate::client::fluent_builders::SearchTablesByLFTags::catalog_id) / [`set_catalog_id(Option<String>)`](crate::client::fluent_builders::SearchTablesByLFTags::set_catalog_id): <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    ///   - [`expression(Vec<LfTag>)`](crate::client::fluent_builders::SearchTablesByLFTags::expression) / [`set_expression(Option<Vec<LfTag>>)`](crate::client::fluent_builders::SearchTablesByLFTags::set_expression): <p>A list of conditions (<code>LFTag</code> structures) to search for in table resources.</p>
    /// - On success, responds with [`SearchTablesByLfTagsOutput`](crate::output::SearchTablesByLfTagsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::SearchTablesByLfTagsOutput::next_token): <p>A continuation token, present if the current list segment is not the last.</p>
    ///   - [`table_list(Option<Vec<TaggedTable>>)`](crate::output::SearchTablesByLfTagsOutput::table_list): <p>A list of tables that meet the LF-tag conditions.</p>
    /// - On failure, responds with [`SdkError<SearchTablesByLFTagsError>`](crate::error::SearchTablesByLFTagsError)
    pub fn search_tables_by_lf_tags(&self) -> crate::client::fluent_builders::SearchTablesByLFTags {
        crate::client::fluent_builders::SearchTablesByLFTags::new(self.handle.clone())
    }
}
