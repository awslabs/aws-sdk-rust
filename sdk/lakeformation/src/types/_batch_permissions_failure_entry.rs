// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of failures when performing a batch grant or batch revoke operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchPermissionsFailureEntry {
    /// <p>An identifier for an entry of the batch request.</p>
    #[doc(hidden)]
    pub request_entry: std::option::Option<crate::types::BatchPermissionsRequestEntry>,
    /// <p>An error message that applies to the failure of the entry.</p>
    #[doc(hidden)]
    pub error: std::option::Option<crate::types::ErrorDetail>,
}
impl BatchPermissionsFailureEntry {
    /// <p>An identifier for an entry of the batch request.</p>
    pub fn request_entry(
        &self,
    ) -> std::option::Option<&crate::types::BatchPermissionsRequestEntry> {
        self.request_entry.as_ref()
    }
    /// <p>An error message that applies to the failure of the entry.</p>
    pub fn error(&self) -> std::option::Option<&crate::types::ErrorDetail> {
        self.error.as_ref()
    }
}
impl BatchPermissionsFailureEntry {
    /// Creates a new builder-style object to manufacture [`BatchPermissionsFailureEntry`](crate::types::BatchPermissionsFailureEntry).
    pub fn builder() -> crate::types::builders::BatchPermissionsFailureEntryBuilder {
        crate::types::builders::BatchPermissionsFailureEntryBuilder::default()
    }
}

/// A builder for [`BatchPermissionsFailureEntry`](crate::types::BatchPermissionsFailureEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchPermissionsFailureEntryBuilder {
    pub(crate) request_entry: std::option::Option<crate::types::BatchPermissionsRequestEntry>,
    pub(crate) error: std::option::Option<crate::types::ErrorDetail>,
}
impl BatchPermissionsFailureEntryBuilder {
    /// <p>An identifier for an entry of the batch request.</p>
    pub fn request_entry(mut self, input: crate::types::BatchPermissionsRequestEntry) -> Self {
        self.request_entry = Some(input);
        self
    }
    /// <p>An identifier for an entry of the batch request.</p>
    pub fn set_request_entry(
        mut self,
        input: std::option::Option<crate::types::BatchPermissionsRequestEntry>,
    ) -> Self {
        self.request_entry = input;
        self
    }
    /// <p>An error message that applies to the failure of the entry.</p>
    pub fn error(mut self, input: crate::types::ErrorDetail) -> Self {
        self.error = Some(input);
        self
    }
    /// <p>An error message that applies to the failure of the entry.</p>
    pub fn set_error(mut self, input: std::option::Option<crate::types::ErrorDetail>) -> Self {
        self.error = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchPermissionsFailureEntry`](crate::types::BatchPermissionsFailureEntry).
    pub fn build(self) -> crate::types::BatchPermissionsFailureEntry {
        crate::types::BatchPermissionsFailureEntry {
            request_entry: self.request_entry,
            error: self.error,
        }
    }
}
