// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines an object to add to or delete from a governed table.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct WriteOperation {
    /// <p>A new object to add to the governed table.</p>
    #[doc(hidden)]
    pub add_object: std::option::Option<crate::types::AddObjectInput>,
    /// <p>An object to delete from the governed table.</p>
    #[doc(hidden)]
    pub delete_object: std::option::Option<crate::types::DeleteObjectInput>,
}
impl WriteOperation {
    /// <p>A new object to add to the governed table.</p>
    pub fn add_object(&self) -> std::option::Option<&crate::types::AddObjectInput> {
        self.add_object.as_ref()
    }
    /// <p>An object to delete from the governed table.</p>
    pub fn delete_object(&self) -> std::option::Option<&crate::types::DeleteObjectInput> {
        self.delete_object.as_ref()
    }
}
impl WriteOperation {
    /// Creates a new builder-style object to manufacture [`WriteOperation`](crate::types::WriteOperation).
    pub fn builder() -> crate::types::builders::WriteOperationBuilder {
        crate::types::builders::WriteOperationBuilder::default()
    }
}

/// A builder for [`WriteOperation`](crate::types::WriteOperation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct WriteOperationBuilder {
    pub(crate) add_object: std::option::Option<crate::types::AddObjectInput>,
    pub(crate) delete_object: std::option::Option<crate::types::DeleteObjectInput>,
}
impl WriteOperationBuilder {
    /// <p>A new object to add to the governed table.</p>
    pub fn add_object(mut self, input: crate::types::AddObjectInput) -> Self {
        self.add_object = Some(input);
        self
    }
    /// <p>A new object to add to the governed table.</p>
    pub fn set_add_object(
        mut self,
        input: std::option::Option<crate::types::AddObjectInput>,
    ) -> Self {
        self.add_object = input;
        self
    }
    /// <p>An object to delete from the governed table.</p>
    pub fn delete_object(mut self, input: crate::types::DeleteObjectInput) -> Self {
        self.delete_object = Some(input);
        self
    }
    /// <p>An object to delete from the governed table.</p>
    pub fn set_delete_object(
        mut self,
        input: std::option::Option<crate::types::DeleteObjectInput>,
    ) -> Self {
        self.delete_object = input;
        self
    }
    /// Consumes the builder and constructs a [`WriteOperation`](crate::types::WriteOperation).
    pub fn build(self) -> crate::types::WriteOperation {
        crate::types::WriteOperation {
            add_object: self.add_object,
            delete_object: self.delete_object,
        }
    }
}
