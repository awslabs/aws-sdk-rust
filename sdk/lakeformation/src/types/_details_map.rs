// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure containing the additional details to be returned in the <code>AdditionalDetails</code> attribute of <code>PrincipalResourcePermissions</code>.</p>
/// <p>If a catalog resource is shared through Resource Access Manager (RAM), then there will exist a corresponding RAM resource share ARN.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DetailsMap {
    /// <p>A resource share ARN for a catalog resource shared through RAM.</p>
    #[doc(hidden)]
    pub resource_share: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl DetailsMap {
    /// <p>A resource share ARN for a catalog resource shared through RAM.</p>
    pub fn resource_share(&self) -> std::option::Option<&[std::string::String]> {
        self.resource_share.as_deref()
    }
}
impl DetailsMap {
    /// Creates a new builder-style object to manufacture [`DetailsMap`](crate::types::DetailsMap).
    pub fn builder() -> crate::types::builders::DetailsMapBuilder {
        crate::types::builders::DetailsMapBuilder::default()
    }
}

/// A builder for [`DetailsMap`](crate::types::DetailsMap).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DetailsMapBuilder {
    pub(crate) resource_share: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl DetailsMapBuilder {
    /// Appends an item to `resource_share`.
    ///
    /// To override the contents of this collection use [`set_resource_share`](Self::set_resource_share).
    ///
    /// <p>A resource share ARN for a catalog resource shared through RAM.</p>
    pub fn resource_share(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.resource_share.unwrap_or_default();
        v.push(input.into());
        self.resource_share = Some(v);
        self
    }
    /// <p>A resource share ARN for a catalog resource shared through RAM.</p>
    pub fn set_resource_share(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.resource_share = input;
        self
    }
    /// Consumes the builder and constructs a [`DetailsMap`](crate::types::DetailsMap).
    pub fn build(self) -> crate::types::DetailsMap {
        crate::types::DetailsMap {
            resource_share: self.resource_share,
        }
    }
}
