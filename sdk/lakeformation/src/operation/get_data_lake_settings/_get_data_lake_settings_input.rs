// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetDataLakeSettingsInput {
    /// <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    pub catalog_id: ::std::option::Option<::std::string::String>,
}
impl GetDataLakeSettingsInput {
    /// <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    pub fn catalog_id(&self) -> ::std::option::Option<&str> {
        self.catalog_id.as_deref()
    }
}
impl GetDataLakeSettingsInput {
    /// Creates a new builder-style object to manufacture [`GetDataLakeSettingsInput`](crate::operation::get_data_lake_settings::GetDataLakeSettingsInput).
    pub fn builder() -> crate::operation::get_data_lake_settings::builders::GetDataLakeSettingsInputBuilder {
        crate::operation::get_data_lake_settings::builders::GetDataLakeSettingsInputBuilder::default()
    }
}

/// A builder for [`GetDataLakeSettingsInput`](crate::operation::get_data_lake_settings::GetDataLakeSettingsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetDataLakeSettingsInputBuilder {
    pub(crate) catalog_id: ::std::option::Option<::std::string::String>,
}
impl GetDataLakeSettingsInputBuilder {
    /// <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    pub fn catalog_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.catalog_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    pub fn set_catalog_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.catalog_id = input;
        self
    }
    /// <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    pub fn get_catalog_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.catalog_id
    }
    /// Consumes the builder and constructs a [`GetDataLakeSettingsInput`](crate::operation::get_data_lake_settings::GetDataLakeSettingsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_data_lake_settings::GetDataLakeSettingsInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::get_data_lake_settings::GetDataLakeSettingsInput { catalog_id: self.catalog_id })
    }
}
