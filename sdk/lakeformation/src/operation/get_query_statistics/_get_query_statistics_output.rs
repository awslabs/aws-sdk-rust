// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetQueryStatisticsOutput {
    /// <p>An <code>ExecutionStatistics</code> structure containing execution statistics.</p>
    #[doc(hidden)]
    pub execution_statistics: std::option::Option<crate::types::ExecutionStatistics>,
    /// <p>A <code>PlanningStatistics</code> structure containing query planning statistics.</p>
    #[doc(hidden)]
    pub planning_statistics: std::option::Option<crate::types::PlanningStatistics>,
    /// <p>The time that the query was submitted.</p>
    #[doc(hidden)]
    pub query_submission_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetQueryStatisticsOutput {
    /// <p>An <code>ExecutionStatistics</code> structure containing execution statistics.</p>
    pub fn execution_statistics(&self) -> std::option::Option<&crate::types::ExecutionStatistics> {
        self.execution_statistics.as_ref()
    }
    /// <p>A <code>PlanningStatistics</code> structure containing query planning statistics.</p>
    pub fn planning_statistics(&self) -> std::option::Option<&crate::types::PlanningStatistics> {
        self.planning_statistics.as_ref()
    }
    /// <p>The time that the query was submitted.</p>
    pub fn query_submission_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.query_submission_time.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetQueryStatisticsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetQueryStatisticsOutput {
    /// Creates a new builder-style object to manufacture [`GetQueryStatisticsOutput`](crate::operation::get_query_statistics::GetQueryStatisticsOutput).
    pub fn builder(
    ) -> crate::operation::get_query_statistics::builders::GetQueryStatisticsOutputBuilder {
        crate::operation::get_query_statistics::builders::GetQueryStatisticsOutputBuilder::default()
    }
}

/// A builder for [`GetQueryStatisticsOutput`](crate::operation::get_query_statistics::GetQueryStatisticsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetQueryStatisticsOutputBuilder {
    pub(crate) execution_statistics: std::option::Option<crate::types::ExecutionStatistics>,
    pub(crate) planning_statistics: std::option::Option<crate::types::PlanningStatistics>,
    pub(crate) query_submission_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetQueryStatisticsOutputBuilder {
    /// <p>An <code>ExecutionStatistics</code> structure containing execution statistics.</p>
    pub fn execution_statistics(mut self, input: crate::types::ExecutionStatistics) -> Self {
        self.execution_statistics = Some(input);
        self
    }
    /// <p>An <code>ExecutionStatistics</code> structure containing execution statistics.</p>
    pub fn set_execution_statistics(
        mut self,
        input: std::option::Option<crate::types::ExecutionStatistics>,
    ) -> Self {
        self.execution_statistics = input;
        self
    }
    /// <p>A <code>PlanningStatistics</code> structure containing query planning statistics.</p>
    pub fn planning_statistics(mut self, input: crate::types::PlanningStatistics) -> Self {
        self.planning_statistics = Some(input);
        self
    }
    /// <p>A <code>PlanningStatistics</code> structure containing query planning statistics.</p>
    pub fn set_planning_statistics(
        mut self,
        input: std::option::Option<crate::types::PlanningStatistics>,
    ) -> Self {
        self.planning_statistics = input;
        self
    }
    /// <p>The time that the query was submitted.</p>
    pub fn query_submission_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.query_submission_time = Some(input);
        self
    }
    /// <p>The time that the query was submitted.</p>
    pub fn set_query_submission_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.query_submission_time = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetQueryStatisticsOutput`](crate::operation::get_query_statistics::GetQueryStatisticsOutput).
    pub fn build(self) -> crate::operation::get_query_statistics::GetQueryStatisticsOutput {
        crate::operation::get_query_statistics::GetQueryStatisticsOutput {
            execution_statistics: self.execution_statistics,
            planning_statistics: self.planning_statistics,
            query_submission_time: self.query_submission_time,
            _request_id: self._request_id,
        }
    }
}
