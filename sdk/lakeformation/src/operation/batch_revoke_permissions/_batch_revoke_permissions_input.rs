// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchRevokePermissionsInput {
    /// <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    #[doc(hidden)]
    pub catalog_id: std::option::Option<std::string::String>,
    /// <p>A list of up to 20 entries for resource permissions to be revoked by batch operation to the principal.</p>
    #[doc(hidden)]
    pub entries: std::option::Option<std::vec::Vec<crate::types::BatchPermissionsRequestEntry>>,
}
impl BatchRevokePermissionsInput {
    /// <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    pub fn catalog_id(&self) -> std::option::Option<&str> {
        self.catalog_id.as_deref()
    }
    /// <p>A list of up to 20 entries for resource permissions to be revoked by batch operation to the principal.</p>
    pub fn entries(&self) -> std::option::Option<&[crate::types::BatchPermissionsRequestEntry]> {
        self.entries.as_deref()
    }
}
impl BatchRevokePermissionsInput {
    /// Creates a new builder-style object to manufacture [`BatchRevokePermissionsInput`](crate::operation::batch_revoke_permissions::BatchRevokePermissionsInput).
    pub fn builder(
    ) -> crate::operation::batch_revoke_permissions::builders::BatchRevokePermissionsInputBuilder
    {
        crate::operation::batch_revoke_permissions::builders::BatchRevokePermissionsInputBuilder::default()
    }
}

/// A builder for [`BatchRevokePermissionsInput`](crate::operation::batch_revoke_permissions::BatchRevokePermissionsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchRevokePermissionsInputBuilder {
    pub(crate) catalog_id: std::option::Option<std::string::String>,
    pub(crate) entries:
        std::option::Option<std::vec::Vec<crate::types::BatchPermissionsRequestEntry>>,
}
impl BatchRevokePermissionsInputBuilder {
    /// <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    pub fn catalog_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.catalog_id = Some(input.into());
        self
    }
    /// <p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>
    pub fn set_catalog_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.catalog_id = input;
        self
    }
    /// Appends an item to `entries`.
    ///
    /// To override the contents of this collection use [`set_entries`](Self::set_entries).
    ///
    /// <p>A list of up to 20 entries for resource permissions to be revoked by batch operation to the principal.</p>
    pub fn entries(mut self, input: crate::types::BatchPermissionsRequestEntry) -> Self {
        let mut v = self.entries.unwrap_or_default();
        v.push(input);
        self.entries = Some(v);
        self
    }
    /// <p>A list of up to 20 entries for resource permissions to be revoked by batch operation to the principal.</p>
    pub fn set_entries(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::BatchPermissionsRequestEntry>>,
    ) -> Self {
        self.entries = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchRevokePermissionsInput`](crate::operation::batch_revoke_permissions::BatchRevokePermissionsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_revoke_permissions::BatchRevokePermissionsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::batch_revoke_permissions::BatchRevokePermissionsInput {
                catalog_id: self.catalog_id,
                entries: self.entries,
            },
        )
    }
}
