// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateDataCellsFilterInput {
    /// <p>A <code>DataCellsFilter</code> structure containing information about the data cells filter.</p>
    pub table_data: ::std::option::Option<crate::types::DataCellsFilter>,
}
impl UpdateDataCellsFilterInput {
    /// <p>A <code>DataCellsFilter</code> structure containing information about the data cells filter.</p>
    pub fn table_data(&self) -> ::std::option::Option<&crate::types::DataCellsFilter> {
        self.table_data.as_ref()
    }
}
impl UpdateDataCellsFilterInput {
    /// Creates a new builder-style object to manufacture [`UpdateDataCellsFilterInput`](crate::operation::update_data_cells_filter::UpdateDataCellsFilterInput).
    pub fn builder() -> crate::operation::update_data_cells_filter::builders::UpdateDataCellsFilterInputBuilder {
        crate::operation::update_data_cells_filter::builders::UpdateDataCellsFilterInputBuilder::default()
    }
}

/// A builder for [`UpdateDataCellsFilterInput`](crate::operation::update_data_cells_filter::UpdateDataCellsFilterInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateDataCellsFilterInputBuilder {
    pub(crate) table_data: ::std::option::Option<crate::types::DataCellsFilter>,
}
impl UpdateDataCellsFilterInputBuilder {
    /// <p>A <code>DataCellsFilter</code> structure containing information about the data cells filter.</p>
    /// This field is required.
    pub fn table_data(mut self, input: crate::types::DataCellsFilter) -> Self {
        self.table_data = ::std::option::Option::Some(input);
        self
    }
    /// <p>A <code>DataCellsFilter</code> structure containing information about the data cells filter.</p>
    pub fn set_table_data(mut self, input: ::std::option::Option<crate::types::DataCellsFilter>) -> Self {
        self.table_data = input;
        self
    }
    /// <p>A <code>DataCellsFilter</code> structure containing information about the data cells filter.</p>
    pub fn get_table_data(&self) -> &::std::option::Option<crate::types::DataCellsFilter> {
        &self.table_data
    }
    /// Consumes the builder and constructs a [`UpdateDataCellsFilterInput`](crate::operation::update_data_cells_filter::UpdateDataCellsFilterInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_data_cells_filter::UpdateDataCellsFilterInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_data_cells_filter::UpdateDataCellsFilterInput { table_data: self.table_data })
    }
}
