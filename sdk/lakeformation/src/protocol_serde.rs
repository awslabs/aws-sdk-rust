// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_add_lf_tags_to_resource;

pub(crate) mod shape_assume_decorated_role_with_saml;

pub(crate) mod shape_batch_grant_permissions;

pub(crate) mod shape_batch_revoke_permissions;

pub(crate) mod shape_cancel_transaction;

pub(crate) mod shape_commit_transaction;

pub(crate) mod shape_create_data_cells_filter;

pub(crate) mod shape_create_lake_formation_identity_center_configuration;

pub(crate) mod shape_create_lake_formation_opt_in;

pub(crate) mod shape_create_lf_tag;

pub(crate) mod shape_delete_data_cells_filter;

pub(crate) mod shape_delete_lake_formation_identity_center_configuration;

pub(crate) mod shape_delete_lake_formation_opt_in;

pub(crate) mod shape_delete_lf_tag;

pub(crate) mod shape_delete_objects_on_cancel;

pub(crate) mod shape_deregister_resource;

pub(crate) mod shape_describe_lake_formation_identity_center_configuration;

pub(crate) mod shape_describe_resource;

pub(crate) mod shape_describe_transaction;

pub(crate) mod shape_extend_transaction;

pub(crate) mod shape_get_data_cells_filter;

pub(crate) mod shape_get_data_lake_settings;

pub(crate) mod shape_get_effective_permissions_for_path;

pub(crate) mod shape_get_lf_tag;

pub(crate) mod shape_get_query_state;

pub(crate) mod shape_get_query_statistics;

pub(crate) mod shape_get_resource_lf_tags;

pub(crate) mod shape_get_table_objects;

pub(crate) mod shape_get_temporary_glue_partition_credentials;

pub(crate) mod shape_get_temporary_glue_table_credentials;

pub(crate) mod shape_get_work_unit_results;

pub(crate) mod shape_get_work_units;

pub(crate) mod shape_grant_permissions;

pub(crate) mod shape_list_data_cells_filter;

pub(crate) mod shape_list_lake_formation_opt_ins;

pub(crate) mod shape_list_lf_tags;

pub(crate) mod shape_list_permissions;

pub(crate) mod shape_list_resources;

pub(crate) mod shape_list_table_storage_optimizers;

pub(crate) mod shape_list_transactions;

pub(crate) mod shape_put_data_lake_settings;

pub(crate) mod shape_register_resource;

pub(crate) mod shape_remove_lf_tags_from_resource;

pub(crate) mod shape_revoke_permissions;

pub(crate) mod shape_search_databases_by_lf_tags;

pub(crate) mod shape_search_tables_by_lf_tags;

pub(crate) mod shape_start_query_planning;

pub(crate) mod shape_start_transaction;

pub(crate) mod shape_update_data_cells_filter;

pub(crate) mod shape_update_lake_formation_identity_center_configuration;

pub(crate) mod shape_update_lf_tag;

pub(crate) mod shape_update_resource;

pub(crate) mod shape_update_table_objects;

pub(crate) mod shape_update_table_storage_optimizer;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_add_lf_tags_to_resource_input;

pub(crate) mod shape_already_exists_exception;

pub(crate) mod shape_assume_decorated_role_with_saml_input;

pub(crate) mod shape_batch_grant_permissions_input;

pub(crate) mod shape_batch_revoke_permissions_input;

pub(crate) mod shape_cancel_transaction_input;

pub(crate) mod shape_commit_transaction_input;

pub(crate) mod shape_concurrent_modification_exception;

pub(crate) mod shape_create_data_cells_filter_input;

pub(crate) mod shape_create_lake_formation_identity_center_configuration_input;

pub(crate) mod shape_create_lake_formation_opt_in_input;

pub(crate) mod shape_create_lf_tag_input;

pub(crate) mod shape_delete_data_cells_filter_input;

pub(crate) mod shape_delete_lake_formation_identity_center_configuration_input;

pub(crate) mod shape_delete_lake_formation_opt_in_input;

pub(crate) mod shape_delete_lf_tag_input;

pub(crate) mod shape_delete_objects_on_cancel_input;

pub(crate) mod shape_deregister_resource_input;

pub(crate) mod shape_describe_lake_formation_identity_center_configuration_input;

pub(crate) mod shape_describe_resource_input;

pub(crate) mod shape_describe_transaction_input;

pub(crate) mod shape_entity_not_found_exception;

pub(crate) mod shape_expired_exception;

pub(crate) mod shape_extend_transaction_input;

pub(crate) mod shape_get_data_cells_filter_input;

pub(crate) mod shape_get_data_lake_settings_input;

pub(crate) mod shape_get_effective_permissions_for_path_input;

pub(crate) mod shape_get_lf_tag_input;

pub(crate) mod shape_get_query_state_input;

pub(crate) mod shape_get_query_statistics_input;

pub(crate) mod shape_get_resource_lf_tags_input;

pub(crate) mod shape_get_table_objects_input;

pub(crate) mod shape_get_temporary_glue_partition_credentials_input;

pub(crate) mod shape_get_temporary_glue_table_credentials_input;

pub(crate) mod shape_get_work_unit_results_input;

pub(crate) mod shape_get_work_unit_results_output;

pub(crate) mod shape_get_work_units_input;

pub(crate) mod shape_glue_encryption_exception;

pub(crate) mod shape_grant_permissions_input;

pub(crate) mod shape_internal_service_exception;

pub(crate) mod shape_invalid_input_exception;

pub(crate) mod shape_list_data_cells_filter_input;

pub(crate) mod shape_list_lake_formation_opt_ins_input;

pub(crate) mod shape_list_lf_tags_input;

pub(crate) mod shape_list_permissions_input;

pub(crate) mod shape_list_resources_input;

pub(crate) mod shape_list_table_storage_optimizers_input;

pub(crate) mod shape_list_transactions_input;

pub(crate) mod shape_operation_timeout_exception;

pub(crate) mod shape_permission_type_mismatch_exception;

pub(crate) mod shape_put_data_lake_settings_input;

pub(crate) mod shape_register_resource_input;

pub(crate) mod shape_remove_lf_tags_from_resource_input;

pub(crate) mod shape_resource_not_ready_exception;

pub(crate) mod shape_resource_number_limit_exceeded_exception;

pub(crate) mod shape_revoke_permissions_input;

pub(crate) mod shape_search_databases_by_lf_tags_input;

pub(crate) mod shape_search_tables_by_lf_tags_input;

pub(crate) mod shape_start_query_planning_input;

pub(crate) mod shape_start_transaction_input;

pub(crate) mod shape_statistics_not_ready_yet_exception;

pub(crate) mod shape_throttled_exception;

pub(crate) mod shape_transaction_canceled_exception;

pub(crate) mod shape_transaction_commit_in_progress_exception;

pub(crate) mod shape_transaction_committed_exception;

pub(crate) mod shape_update_data_cells_filter_input;

pub(crate) mod shape_update_lake_formation_identity_center_configuration_input;

pub(crate) mod shape_update_lf_tag_input;

pub(crate) mod shape_update_resource_input;

pub(crate) mod shape_update_table_objects_input;

pub(crate) mod shape_update_table_storage_optimizer_input;

pub(crate) mod shape_work_units_not_ready_yet_exception;

pub(crate) mod shape_audit_context;

pub(crate) mod shape_batch_permissions_failure_list;

pub(crate) mod shape_batch_permissions_request_entry;

pub(crate) mod shape_column_lf_tags_list;

pub(crate) mod shape_data_cells_filter;

pub(crate) mod shape_data_cells_filter_list;

pub(crate) mod shape_data_lake_principal;

pub(crate) mod shape_data_lake_principal_list;

pub(crate) mod shape_data_lake_settings;

pub(crate) mod shape_database_lf_tags_list;

pub(crate) mod shape_execution_statistics;

pub(crate) mod shape_external_filtering_configuration;

pub(crate) mod shape_filter_condition;

pub(crate) mod shape_lake_formation_opt_ins_info_list;

pub(crate) mod shape_lf_tag;

pub(crate) mod shape_lf_tag_errors;

pub(crate) mod shape_lf_tag_pair;

pub(crate) mod shape_lf_tags_list;

pub(crate) mod shape_partition_value_list;

pub(crate) mod shape_partitioned_table_objects_list;

pub(crate) mod shape_path_string_list;

pub(crate) mod shape_planning_statistics;

pub(crate) mod shape_principal_resource_permissions_list;

pub(crate) mod shape_query_planning_context;

pub(crate) mod shape_query_session_context;

pub(crate) mod shape_resource;

pub(crate) mod shape_resource_info;

pub(crate) mod shape_resource_info_list;

pub(crate) mod shape_storage_optimizer_list;

pub(crate) mod shape_table_lf_tags_list;

pub(crate) mod shape_table_resource;

pub(crate) mod shape_tag_value_list;

pub(crate) mod shape_transaction_description;

pub(crate) mod shape_transaction_description_list;

pub(crate) mod shape_virtual_object;

pub(crate) mod shape_work_unit_range_list;

pub(crate) mod shape_write_operation;

pub(crate) mod shape_add_object_input;

pub(crate) mod shape_authorized_session_tag_value_list;

pub(crate) mod shape_batch_permissions_failure_entry;

pub(crate) mod shape_catalog_resource;

pub(crate) mod shape_column_lf_tag;

pub(crate) mod shape_column_names;

pub(crate) mod shape_column_wildcard;

pub(crate) mod shape_data_cells_filter_resource;

pub(crate) mod shape_data_location_resource;

pub(crate) mod shape_database_resource;

pub(crate) mod shape_delete_object_input;

pub(crate) mod shape_lake_formation_opt_ins_info;

pub(crate) mod shape_lf_tag_error;

pub(crate) mod shape_lf_tag_key_resource;

pub(crate) mod shape_lf_tag_policy_resource;

pub(crate) mod shape_parameters_map;

pub(crate) mod shape_partition_objects;

pub(crate) mod shape_principal_permissions;

pub(crate) mod shape_principal_permissions_list;

pub(crate) mod shape_principal_resource_permissions;

pub(crate) mod shape_row_filter;

pub(crate) mod shape_scope_targets;

pub(crate) mod shape_storage_optimizer;

pub(crate) mod shape_table_wildcard;

pub(crate) mod shape_table_with_columns_resource;

pub(crate) mod shape_tagged_database;

pub(crate) mod shape_tagged_table;

pub(crate) mod shape_trusted_resource_owners;

pub(crate) mod shape_work_unit_range;

pub(crate) mod shape_all_rows_wildcard;

pub(crate) mod shape_details_map;

pub(crate) mod shape_error_detail;

pub(crate) mod shape_partition_values_list;

pub(crate) mod shape_permission_list;

pub(crate) mod shape_storage_optimizer_config;

pub(crate) mod shape_table_object_list;

pub(crate) mod shape_resource_share_list;

pub(crate) mod shape_table_object;

pub(crate) mod shape_expression;
