// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeConfigurationsOutput {
    /// <p>A key in the response map. The value is an array of data.</p>
    #[doc(hidden)]
    pub configurations: std::option::Option<
        std::vec::Vec<std::collections::HashMap<std::string::String, std::string::String>>,
    >,
    _request_id: Option<String>,
}
impl DescribeConfigurationsOutput {
    /// <p>A key in the response map. The value is an array of data.</p>
    pub fn configurations(
        &self,
    ) -> std::option::Option<&[std::collections::HashMap<std::string::String, std::string::String>]>
    {
        self.configurations.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeConfigurationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeConfigurationsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeConfigurationsOutput`](crate::operation::describe_configurations::DescribeConfigurationsOutput).
    pub fn builder(
    ) -> crate::operation::describe_configurations::builders::DescribeConfigurationsOutputBuilder
    {
        crate::operation::describe_configurations::builders::DescribeConfigurationsOutputBuilder::default()
    }
}

/// A builder for [`DescribeConfigurationsOutput`](crate::operation::describe_configurations::DescribeConfigurationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeConfigurationsOutputBuilder {
    pub(crate) configurations: std::option::Option<
        std::vec::Vec<std::collections::HashMap<std::string::String, std::string::String>>,
    >,
    _request_id: Option<String>,
}
impl DescribeConfigurationsOutputBuilder {
    /// Appends an item to `configurations`.
    ///
    /// To override the contents of this collection use [`set_configurations`](Self::set_configurations).
    ///
    /// <p>A key in the response map. The value is an array of data.</p>
    pub fn configurations(
        mut self,
        input: std::collections::HashMap<std::string::String, std::string::String>,
    ) -> Self {
        let mut v = self.configurations.unwrap_or_default();
        v.push(input);
        self.configurations = Some(v);
        self
    }
    /// <p>A key in the response map. The value is an array of data.</p>
    pub fn set_configurations(
        mut self,
        input: std::option::Option<
            std::vec::Vec<std::collections::HashMap<std::string::String, std::string::String>>,
        >,
    ) -> Self {
        self.configurations = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeConfigurationsOutput`](crate::operation::describe_configurations::DescribeConfigurationsOutput).
    pub fn build(self) -> crate::operation::describe_configurations::DescribeConfigurationsOutput {
        crate::operation::describe_configurations::DescribeConfigurationsOutput {
            configurations: self.configurations,
            _request_id: self._request_id,
        }
    }
}
