// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchDeleteImportDataInput {
    /// <p>The IDs for the import tasks that you want to delete.</p>
    #[doc(hidden)]
    pub import_task_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl BatchDeleteImportDataInput {
    /// <p>The IDs for the import tasks that you want to delete.</p>
    pub fn import_task_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.import_task_ids.as_deref()
    }
}
impl BatchDeleteImportDataInput {
    /// Creates a new builder-style object to manufacture [`BatchDeleteImportDataInput`](crate::operation::batch_delete_import_data::BatchDeleteImportDataInput).
    pub fn builder(
    ) -> crate::operation::batch_delete_import_data::builders::BatchDeleteImportDataInputBuilder
    {
        crate::operation::batch_delete_import_data::builders::BatchDeleteImportDataInputBuilder::default()
    }
}

/// A builder for [`BatchDeleteImportDataInput`](crate::operation::batch_delete_import_data::BatchDeleteImportDataInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchDeleteImportDataInputBuilder {
    pub(crate) import_task_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl BatchDeleteImportDataInputBuilder {
    /// Appends an item to `import_task_ids`.
    ///
    /// To override the contents of this collection use [`set_import_task_ids`](Self::set_import_task_ids).
    ///
    /// <p>The IDs for the import tasks that you want to delete.</p>
    pub fn import_task_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.import_task_ids.unwrap_or_default();
        v.push(input.into());
        self.import_task_ids = Some(v);
        self
    }
    /// <p>The IDs for the import tasks that you want to delete.</p>
    pub fn set_import_task_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.import_task_ids = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchDeleteImportDataInput`](crate::operation::batch_delete_import_data::BatchDeleteImportDataInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_delete_import_data::BatchDeleteImportDataInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::batch_delete_import_data::BatchDeleteImportDataInput {
                import_task_ids: self.import_task_ids,
            },
        )
    }
}
