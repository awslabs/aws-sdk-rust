// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartImportTask`](crate::operation::start_import_task::builders::StartImportTaskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::start_import_task::builders::StartImportTaskFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::start_import_task::builders::StartImportTaskFluentBuilder::set_client_request_token):<br>required: **false**<br><p>Optional. A unique token that you can provide to prevent the same import request from occurring more than once. If you don't provide a token, a token is automatically generated.</p>  <p>Sending more than one <code>StartImportTask</code> request with the same client request token will return information about the original import task with that client request token.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::start_import_task::builders::StartImportTaskFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::start_import_task::builders::StartImportTaskFluentBuilder::set_name):<br>required: **true**<br><p>A descriptive name for this request. You can use this name to filter future requests related to this import task, such as identifying applications and servers that were included in this import task. We recommend that you use a meaningful name for each import task.</p><br>
    ///   - [`import_url(impl Into<String>)`](crate::operation::start_import_task::builders::StartImportTaskFluentBuilder::import_url) / [`set_import_url(Option<String>)`](crate::operation::start_import_task::builders::StartImportTaskFluentBuilder::set_import_url):<br>required: **true**<br><p>The URL for your import file that you've uploaded to Amazon S3.</p> <note>   <p>If you're using the Amazon Web Services CLI, this URL is structured as follows: <code>s3://BucketName/ImportFileName.CSV</code> </p>  </note><br>
    /// - On success, responds with [`StartImportTaskOutput`](crate::operation::start_import_task::StartImportTaskOutput) with field(s):
    ///   - [`task(Option<ImportTask>)`](crate::operation::start_import_task::StartImportTaskOutput::task): <p>An array of information related to the import task request including status information, times, IDs, the Amazon S3 Object URL for the import file, and more. </p>
    /// - On failure, responds with [`SdkError<StartImportTaskError>`](crate::operation::start_import_task::StartImportTaskError)
    pub fn start_import_task(&self) -> crate::operation::start_import_task::builders::StartImportTaskFluentBuilder {
        crate::operation::start_import_task::builders::StartImportTaskFluentBuilder::new(self.handle.clone())
    }
}
