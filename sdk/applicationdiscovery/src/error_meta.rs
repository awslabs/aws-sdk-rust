// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// All possible error types for this service.
#[non_exhaustive]
#[derive(::std::fmt::Debug)]
pub enum Error {
    /// <p>The user does not have permission to perform the action. Check the IAM policy associated with this user.</p>
    AuthorizationErrorException(crate::types::error::AuthorizationErrorException),
    /// <p>Conflict error.</p>
    ConflictErrorException(crate::types::error::ConflictErrorException),
    /// <p>The home Region is not set. Set the home Region to continue.</p>
    HomeRegionNotSetException(crate::types::error::HomeRegionNotSetException),
    /// <p>One or more parameters are not valid. Verify the parameters and try again.</p>
    InvalidParameterException(crate::types::error::InvalidParameterException),
    /// <p>The value of one or more parameters are either invalid or out of range. Verify the parameter values and try again.</p>
    InvalidParameterValueException(crate::types::error::InvalidParameterValueException),
    /// <p> The limit of 200 configuration IDs per request has been exceeded. </p>
    LimitExceededException(crate::types::error::LimitExceededException),
    /// <p>This operation is not permitted.</p>
    OperationNotPermittedException(crate::types::error::OperationNotPermittedException),
    /// <p>This issue occurs when the same <code>clientRequestToken</code> is used with the <code>StartImportTask</code> action, but with different parameters. For example, you use the same request token but have two different import URLs, you can encounter this issue. If the import tasks are meant to be different, use a different <code>clientRequestToken</code>, and try again.</p>
    ResourceInUseException(crate::types::error::ResourceInUseException),
    /// <p>The specified configuration ID was not located. Verify the configuration ID and try again.</p>
    ResourceNotFoundException(crate::types::error::ResourceNotFoundException),
    /// <p>The server experienced an internal error. Try again.</p>
    ServerInternalErrorException(crate::types::error::ServerInternalErrorException),
    /// An unexpected error occurred (e.g., invalid JSON returned by the service or an unknown error code).
    Unhandled(::aws_smithy_types::error::Unhandled),
}
impl ::std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::AuthorizationErrorException(inner) => inner.fmt(f),
            Error::ConflictErrorException(inner) => inner.fmt(f),
            Error::HomeRegionNotSetException(inner) => inner.fmt(f),
            Error::InvalidParameterException(inner) => inner.fmt(f),
            Error::InvalidParameterValueException(inner) => inner.fmt(f),
            Error::LimitExceededException(inner) => inner.fmt(f),
            Error::OperationNotPermittedException(inner) => inner.fmt(f),
            Error::ResourceInUseException(inner) => inner.fmt(f),
            Error::ResourceNotFoundException(inner) => inner.fmt(f),
            Error::ServerInternalErrorException(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError> for Error {
    fn from(err: crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError) -> Self {
        match err {
            crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError::AuthorizationErrorException(inner) => Error::AuthorizationErrorException(inner),
            crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
            crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError::ServerInternalErrorException(inner) => Error::ServerInternalErrorException(inner),
            crate::operation::associate_configuration_items_to_application::AssociateConfigurationItemsToApplicationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::batch_delete_agents::BatchDeleteAgentsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::batch_delete_agents::BatchDeleteAgentsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::batch_delete_agents::BatchDeleteAgentsError> for Error {
    fn from(err: crate::operation::batch_delete_agents::BatchDeleteAgentsError) -> Self {
        match err {
            crate::operation::batch_delete_agents::BatchDeleteAgentsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::batch_delete_agents::BatchDeleteAgentsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::batch_delete_agents::BatchDeleteAgentsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::batch_delete_agents::BatchDeleteAgentsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::batch_delete_agents::BatchDeleteAgentsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::batch_delete_import_data::BatchDeleteImportDataError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::batch_delete_import_data::BatchDeleteImportDataError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::batch_delete_import_data::BatchDeleteImportDataError> for Error {
    fn from(err: crate::operation::batch_delete_import_data::BatchDeleteImportDataError) -> Self {
        match err {
            crate::operation::batch_delete_import_data::BatchDeleteImportDataError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::batch_delete_import_data::BatchDeleteImportDataError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::batch_delete_import_data::BatchDeleteImportDataError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::batch_delete_import_data::BatchDeleteImportDataError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::batch_delete_import_data::BatchDeleteImportDataError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::batch_delete_import_data::BatchDeleteImportDataError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_application::CreateApplicationError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_application::CreateApplicationError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_application::CreateApplicationError> for Error {
    fn from(err: crate::operation::create_application::CreateApplicationError) -> Self {
        match err {
            crate::operation::create_application::CreateApplicationError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::create_application::CreateApplicationError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::create_application::CreateApplicationError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::create_application::CreateApplicationError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::create_application::CreateApplicationError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::create_application::CreateApplicationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_tags::CreateTagsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_tags::CreateTagsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_tags::CreateTagsError> for Error {
    fn from(err: crate::operation::create_tags::CreateTagsError) -> Self {
        match err {
            crate::operation::create_tags::CreateTagsError::AuthorizationErrorException(inner) => Error::AuthorizationErrorException(inner),
            crate::operation::create_tags::CreateTagsError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::create_tags::CreateTagsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::create_tags::CreateTagsError::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
            crate::operation::create_tags::CreateTagsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_tags::CreateTagsError::ServerInternalErrorException(inner) => Error::ServerInternalErrorException(inner),
            crate::operation::create_tags::CreateTagsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_applications::DeleteApplicationsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_applications::DeleteApplicationsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_applications::DeleteApplicationsError> for Error {
    fn from(err: crate::operation::delete_applications::DeleteApplicationsError) -> Self {
        match err {
            crate::operation::delete_applications::DeleteApplicationsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::delete_applications::DeleteApplicationsError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::delete_applications::DeleteApplicationsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_applications::DeleteApplicationsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::delete_applications::DeleteApplicationsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::delete_applications::DeleteApplicationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_tags::DeleteTagsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_tags::DeleteTagsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_tags::DeleteTagsError> for Error {
    fn from(err: crate::operation::delete_tags::DeleteTagsError) -> Self {
        match err {
            crate::operation::delete_tags::DeleteTagsError::AuthorizationErrorException(inner) => Error::AuthorizationErrorException(inner),
            crate::operation::delete_tags::DeleteTagsError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::delete_tags::DeleteTagsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::delete_tags::DeleteTagsError::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
            crate::operation::delete_tags::DeleteTagsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_tags::DeleteTagsError::ServerInternalErrorException(inner) => Error::ServerInternalErrorException(inner),
            crate::operation::delete_tags::DeleteTagsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_agents::DescribeAgentsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_agents::DescribeAgentsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_agents::DescribeAgentsError> for Error {
    fn from(err: crate::operation::describe_agents::DescribeAgentsError) -> Self {
        match err {
            crate::operation::describe_agents::DescribeAgentsError::AuthorizationErrorException(inner) => Error::AuthorizationErrorException(inner),
            crate::operation::describe_agents::DescribeAgentsError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::describe_agents::DescribeAgentsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::describe_agents::DescribeAgentsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::describe_agents::DescribeAgentsError::ServerInternalErrorException(inner) => Error::ServerInternalErrorException(inner),
            crate::operation::describe_agents::DescribeAgentsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_batch_delete_configuration_task::DescribeBatchDeleteConfigurationTaskError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_batch_delete_configuration_task::DescribeBatchDeleteConfigurationTaskError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_batch_delete_configuration_task::DescribeBatchDeleteConfigurationTaskError> for Error {
    fn from(err: crate::operation::describe_batch_delete_configuration_task::DescribeBatchDeleteConfigurationTaskError) -> Self {
        match err {
            crate::operation::describe_batch_delete_configuration_task::DescribeBatchDeleteConfigurationTaskError::AuthorizationErrorException(
                inner,
            ) => Error::AuthorizationErrorException(inner),
            crate::operation::describe_batch_delete_configuration_task::DescribeBatchDeleteConfigurationTaskError::HomeRegionNotSetException(
                inner,
            ) => Error::HomeRegionNotSetException(inner),
            crate::operation::describe_batch_delete_configuration_task::DescribeBatchDeleteConfigurationTaskError::InvalidParameterValueException(
                inner,
            ) => Error::InvalidParameterValueException(inner),
            crate::operation::describe_batch_delete_configuration_task::DescribeBatchDeleteConfigurationTaskError::ServerInternalErrorException(
                inner,
            ) => Error::ServerInternalErrorException(inner),
            crate::operation::describe_batch_delete_configuration_task::DescribeBatchDeleteConfigurationTaskError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_configurations::DescribeConfigurationsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_configurations::DescribeConfigurationsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_configurations::DescribeConfigurationsError> for Error {
    fn from(err: crate::operation::describe_configurations::DescribeConfigurationsError) -> Self {
        match err {
            crate::operation::describe_configurations::DescribeConfigurationsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::describe_configurations::DescribeConfigurationsError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::describe_configurations::DescribeConfigurationsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_configurations::DescribeConfigurationsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::describe_configurations::DescribeConfigurationsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::describe_configurations::DescribeConfigurationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_continuous_exports::DescribeContinuousExportsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_continuous_exports::DescribeContinuousExportsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_continuous_exports::DescribeContinuousExportsError> for Error {
    fn from(err: crate::operation::describe_continuous_exports::DescribeContinuousExportsError) -> Self {
        match err {
            crate::operation::describe_continuous_exports::DescribeContinuousExportsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::describe_continuous_exports::DescribeContinuousExportsError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::describe_continuous_exports::DescribeContinuousExportsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_continuous_exports::DescribeContinuousExportsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::describe_continuous_exports::DescribeContinuousExportsError::OperationNotPermittedException(inner) => {
                Error::OperationNotPermittedException(inner)
            }
            crate::operation::describe_continuous_exports::DescribeContinuousExportsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_continuous_exports::DescribeContinuousExportsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::describe_continuous_exports::DescribeContinuousExportsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_export_configurations::DescribeExportConfigurationsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_export_configurations::DescribeExportConfigurationsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_export_configurations::DescribeExportConfigurationsError> for Error {
    fn from(err: crate::operation::describe_export_configurations::DescribeExportConfigurationsError) -> Self {
        match err {
            crate::operation::describe_export_configurations::DescribeExportConfigurationsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::describe_export_configurations::DescribeExportConfigurationsError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::describe_export_configurations::DescribeExportConfigurationsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_export_configurations::DescribeExportConfigurationsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::describe_export_configurations::DescribeExportConfigurationsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_export_configurations::DescribeExportConfigurationsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::describe_export_configurations::DescribeExportConfigurationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_export_tasks::DescribeExportTasksError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_export_tasks::DescribeExportTasksError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_export_tasks::DescribeExportTasksError> for Error {
    fn from(err: crate::operation::describe_export_tasks::DescribeExportTasksError) -> Self {
        match err {
            crate::operation::describe_export_tasks::DescribeExportTasksError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::describe_export_tasks::DescribeExportTasksError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::describe_export_tasks::DescribeExportTasksError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_export_tasks::DescribeExportTasksError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::describe_export_tasks::DescribeExportTasksError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::describe_export_tasks::DescribeExportTasksError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_import_tasks::DescribeImportTasksError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_import_tasks::DescribeImportTasksError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_import_tasks::DescribeImportTasksError> for Error {
    fn from(err: crate::operation::describe_import_tasks::DescribeImportTasksError) -> Self {
        match err {
            crate::operation::describe_import_tasks::DescribeImportTasksError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::describe_import_tasks::DescribeImportTasksError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::describe_import_tasks::DescribeImportTasksError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_import_tasks::DescribeImportTasksError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::describe_import_tasks::DescribeImportTasksError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::describe_import_tasks::DescribeImportTasksError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_tags::DescribeTagsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_tags::DescribeTagsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_tags::DescribeTagsError> for Error {
    fn from(err: crate::operation::describe_tags::DescribeTagsError) -> Self {
        match err {
            crate::operation::describe_tags::DescribeTagsError::AuthorizationErrorException(inner) => Error::AuthorizationErrorException(inner),
            crate::operation::describe_tags::DescribeTagsError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::describe_tags::DescribeTagsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::describe_tags::DescribeTagsError::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
            crate::operation::describe_tags::DescribeTagsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::describe_tags::DescribeTagsError::ServerInternalErrorException(inner) => Error::ServerInternalErrorException(inner),
            crate::operation::describe_tags::DescribeTagsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError> for Error {
    fn from(err: crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError) -> Self {
        match err {
            crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError::AuthorizationErrorException(inner) => Error::AuthorizationErrorException(inner),
            crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
            crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError::ServerInternalErrorException(inner) => Error::ServerInternalErrorException(inner),
            crate::operation::disassociate_configuration_items_from_application::DisassociateConfigurationItemsFromApplicationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::export_configurations::ExportConfigurationsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::export_configurations::ExportConfigurationsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::export_configurations::ExportConfigurationsError> for Error {
    fn from(err: crate::operation::export_configurations::ExportConfigurationsError) -> Self {
        match err {
            crate::operation::export_configurations::ExportConfigurationsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::export_configurations::ExportConfigurationsError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::export_configurations::ExportConfigurationsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::export_configurations::ExportConfigurationsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::export_configurations::ExportConfigurationsError::OperationNotPermittedException(inner) => {
                Error::OperationNotPermittedException(inner)
            }
            crate::operation::export_configurations::ExportConfigurationsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::export_configurations::ExportConfigurationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_discovery_summary::GetDiscoverySummaryError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_discovery_summary::GetDiscoverySummaryError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_discovery_summary::GetDiscoverySummaryError> for Error {
    fn from(err: crate::operation::get_discovery_summary::GetDiscoverySummaryError) -> Self {
        match err {
            crate::operation::get_discovery_summary::GetDiscoverySummaryError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::get_discovery_summary::GetDiscoverySummaryError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::get_discovery_summary::GetDiscoverySummaryError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::get_discovery_summary::GetDiscoverySummaryError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::get_discovery_summary::GetDiscoverySummaryError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::get_discovery_summary::GetDiscoverySummaryError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_configurations::ListConfigurationsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_configurations::ListConfigurationsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_configurations::ListConfigurationsError> for Error {
    fn from(err: crate::operation::list_configurations::ListConfigurationsError) -> Self {
        match err {
            crate::operation::list_configurations::ListConfigurationsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::list_configurations::ListConfigurationsError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::list_configurations::ListConfigurationsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_configurations::ListConfigurationsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::list_configurations::ListConfigurationsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_configurations::ListConfigurationsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::list_configurations::ListConfigurationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_server_neighbors::ListServerNeighborsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_server_neighbors::ListServerNeighborsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_server_neighbors::ListServerNeighborsError> for Error {
    fn from(err: crate::operation::list_server_neighbors::ListServerNeighborsError) -> Self {
        match err {
            crate::operation::list_server_neighbors::ListServerNeighborsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::list_server_neighbors::ListServerNeighborsError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::list_server_neighbors::ListServerNeighborsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_server_neighbors::ListServerNeighborsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::list_server_neighbors::ListServerNeighborsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::list_server_neighbors::ListServerNeighborsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError> for Error {
    fn from(err: crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError) -> Self {
        match err {
            crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError::InvalidParameterValueException(
                inner,
            ) => Error::InvalidParameterValueException(inner),
            crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError::OperationNotPermittedException(
                inner,
            ) => Error::OperationNotPermittedException(inner),
            crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::start_batch_delete_configuration_task::StartBatchDeleteConfigurationTaskError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_continuous_export::StartContinuousExportError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_continuous_export::StartContinuousExportError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_continuous_export::StartContinuousExportError> for Error {
    fn from(err: crate::operation::start_continuous_export::StartContinuousExportError) -> Self {
        match err {
            crate::operation::start_continuous_export::StartContinuousExportError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::start_continuous_export::StartContinuousExportError::ConflictErrorException(inner) => {
                Error::ConflictErrorException(inner)
            }
            crate::operation::start_continuous_export::StartContinuousExportError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::start_continuous_export::StartContinuousExportError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::start_continuous_export::StartContinuousExportError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::start_continuous_export::StartContinuousExportError::OperationNotPermittedException(inner) => {
                Error::OperationNotPermittedException(inner)
            }
            crate::operation::start_continuous_export::StartContinuousExportError::ResourceInUseException(inner) => {
                Error::ResourceInUseException(inner)
            }
            crate::operation::start_continuous_export::StartContinuousExportError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::start_continuous_export::StartContinuousExportError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError> for Error {
    fn from(err: crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError) -> Self {
        match err {
            crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::start_data_collection_by_agent_ids::StartDataCollectionByAgentIdsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_export_task::StartExportTaskError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_export_task::StartExportTaskError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_export_task::StartExportTaskError> for Error {
    fn from(err: crate::operation::start_export_task::StartExportTaskError) -> Self {
        match err {
            crate::operation::start_export_task::StartExportTaskError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::start_export_task::StartExportTaskError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::start_export_task::StartExportTaskError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::start_export_task::StartExportTaskError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::start_export_task::StartExportTaskError::OperationNotPermittedException(inner) => {
                Error::OperationNotPermittedException(inner)
            }
            crate::operation::start_export_task::StartExportTaskError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::start_export_task::StartExportTaskError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_import_task::StartImportTaskError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_import_task::StartImportTaskError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_import_task::StartImportTaskError> for Error {
    fn from(err: crate::operation::start_import_task::StartImportTaskError) -> Self {
        match err {
            crate::operation::start_import_task::StartImportTaskError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::start_import_task::StartImportTaskError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::start_import_task::StartImportTaskError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::start_import_task::StartImportTaskError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::start_import_task::StartImportTaskError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::start_import_task::StartImportTaskError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::start_import_task::StartImportTaskError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_continuous_export::StopContinuousExportError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_continuous_export::StopContinuousExportError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::stop_continuous_export::StopContinuousExportError> for Error {
    fn from(err: crate::operation::stop_continuous_export::StopContinuousExportError) -> Self {
        match err {
            crate::operation::stop_continuous_export::StopContinuousExportError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::stop_continuous_export::StopContinuousExportError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::stop_continuous_export::StopContinuousExportError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::stop_continuous_export::StopContinuousExportError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::stop_continuous_export::StopContinuousExportError::OperationNotPermittedException(inner) => {
                Error::OperationNotPermittedException(inner)
            }
            crate::operation::stop_continuous_export::StopContinuousExportError::ResourceInUseException(inner) => {
                Error::ResourceInUseException(inner)
            }
            crate::operation::stop_continuous_export::StopContinuousExportError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::stop_continuous_export::StopContinuousExportError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::stop_continuous_export::StopContinuousExportError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError, R>,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError> for Error {
    fn from(err: crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError) -> Self {
        match err {
            crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError::HomeRegionNotSetException(inner) => {
                Error::HomeRegionNotSetException(inner)
            }
            crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::stop_data_collection_by_agent_ids::StopDataCollectionByAgentIdsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_application::UpdateApplicationError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_application::UpdateApplicationError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_application::UpdateApplicationError> for Error {
    fn from(err: crate::operation::update_application::UpdateApplicationError) -> Self {
        match err {
            crate::operation::update_application::UpdateApplicationError::AuthorizationErrorException(inner) => {
                Error::AuthorizationErrorException(inner)
            }
            crate::operation::update_application::UpdateApplicationError::HomeRegionNotSetException(inner) => Error::HomeRegionNotSetException(inner),
            crate::operation::update_application::UpdateApplicationError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::update_application::UpdateApplicationError::InvalidParameterValueException(inner) => {
                Error::InvalidParameterValueException(inner)
            }
            crate::operation::update_application::UpdateApplicationError::ServerInternalErrorException(inner) => {
                Error::ServerInternalErrorException(inner)
            }
            crate::operation::update_application::UpdateApplicationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl ::std::error::Error for Error {
    fn source(&self) -> std::option::Option<&(dyn ::std::error::Error + 'static)> {
        match self {
            Error::AuthorizationErrorException(inner) => inner.source(),
            Error::ConflictErrorException(inner) => inner.source(),
            Error::HomeRegionNotSetException(inner) => inner.source(),
            Error::InvalidParameterException(inner) => inner.source(),
            Error::InvalidParameterValueException(inner) => inner.source(),
            Error::LimitExceededException(inner) => inner.source(),
            Error::OperationNotPermittedException(inner) => inner.source(),
            Error::ResourceInUseException(inner) => inner.source(),
            Error::ResourceNotFoundException(inner) => inner.source(),
            Error::ServerInternalErrorException(inner) => inner.source(),
            Error::Unhandled(inner) => inner.source(),
        }
    }
}
impl ::aws_http::request_id::RequestId for Error {
    fn request_id(&self) -> Option<&str> {
        match self {
            Self::AuthorizationErrorException(e) => e.request_id(),
            Self::ConflictErrorException(e) => e.request_id(),
            Self::HomeRegionNotSetException(e) => e.request_id(),
            Self::InvalidParameterException(e) => e.request_id(),
            Self::InvalidParameterValueException(e) => e.request_id(),
            Self::LimitExceededException(e) => e.request_id(),
            Self::OperationNotPermittedException(e) => e.request_id(),
            Self::ResourceInUseException(e) => e.request_id(),
            Self::ResourceNotFoundException(e) => e.request_id(),
            Self::ServerInternalErrorException(e) => e.request_id(),
            Self::Unhandled(e) => e.request_id(),
        }
    }
}
