// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CustomerAgentlessCollectorInfo {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub active_agentless_collectors: i32,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub healthy_agentless_collectors: i32,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub deny_listed_agentless_collectors: i32,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub shutdown_agentless_collectors: i32,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub unhealthy_agentless_collectors: i32,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub total_agentless_collectors: i32,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub unknown_agentless_collectors: i32,
}
impl CustomerAgentlessCollectorInfo {
    #[allow(missing_docs)] // documentation missing in model
    pub fn active_agentless_collectors(&self) -> i32 {
        self.active_agentless_collectors
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn healthy_agentless_collectors(&self) -> i32 {
        self.healthy_agentless_collectors
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn deny_listed_agentless_collectors(&self) -> i32 {
        self.deny_listed_agentless_collectors
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn shutdown_agentless_collectors(&self) -> i32 {
        self.shutdown_agentless_collectors
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn unhealthy_agentless_collectors(&self) -> i32 {
        self.unhealthy_agentless_collectors
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn total_agentless_collectors(&self) -> i32 {
        self.total_agentless_collectors
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn unknown_agentless_collectors(&self) -> i32 {
        self.unknown_agentless_collectors
    }
}
impl CustomerAgentlessCollectorInfo {
    /// Creates a new builder-style object to manufacture [`CustomerAgentlessCollectorInfo`](crate::types::CustomerAgentlessCollectorInfo).
    pub fn builder() -> crate::types::builders::CustomerAgentlessCollectorInfoBuilder {
        crate::types::builders::CustomerAgentlessCollectorInfoBuilder::default()
    }
}

/// A builder for [`CustomerAgentlessCollectorInfo`](crate::types::CustomerAgentlessCollectorInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CustomerAgentlessCollectorInfoBuilder {
    pub(crate) active_agentless_collectors: std::option::Option<i32>,
    pub(crate) healthy_agentless_collectors: std::option::Option<i32>,
    pub(crate) deny_listed_agentless_collectors: std::option::Option<i32>,
    pub(crate) shutdown_agentless_collectors: std::option::Option<i32>,
    pub(crate) unhealthy_agentless_collectors: std::option::Option<i32>,
    pub(crate) total_agentless_collectors: std::option::Option<i32>,
    pub(crate) unknown_agentless_collectors: std::option::Option<i32>,
}
impl CustomerAgentlessCollectorInfoBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn active_agentless_collectors(mut self, input: i32) -> Self {
        self.active_agentless_collectors = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_active_agentless_collectors(mut self, input: std::option::Option<i32>) -> Self {
        self.active_agentless_collectors = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn healthy_agentless_collectors(mut self, input: i32) -> Self {
        self.healthy_agentless_collectors = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_healthy_agentless_collectors(mut self, input: std::option::Option<i32>) -> Self {
        self.healthy_agentless_collectors = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn deny_listed_agentless_collectors(mut self, input: i32) -> Self {
        self.deny_listed_agentless_collectors = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_deny_listed_agentless_collectors(mut self, input: std::option::Option<i32>) -> Self {
        self.deny_listed_agentless_collectors = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn shutdown_agentless_collectors(mut self, input: i32) -> Self {
        self.shutdown_agentless_collectors = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_shutdown_agentless_collectors(mut self, input: std::option::Option<i32>) -> Self {
        self.shutdown_agentless_collectors = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn unhealthy_agentless_collectors(mut self, input: i32) -> Self {
        self.unhealthy_agentless_collectors = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_unhealthy_agentless_collectors(mut self, input: std::option::Option<i32>) -> Self {
        self.unhealthy_agentless_collectors = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn total_agentless_collectors(mut self, input: i32) -> Self {
        self.total_agentless_collectors = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_total_agentless_collectors(mut self, input: std::option::Option<i32>) -> Self {
        self.total_agentless_collectors = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn unknown_agentless_collectors(mut self, input: i32) -> Self {
        self.unknown_agentless_collectors = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_unknown_agentless_collectors(mut self, input: std::option::Option<i32>) -> Self {
        self.unknown_agentless_collectors = input;
        self
    }
    /// Consumes the builder and constructs a [`CustomerAgentlessCollectorInfo`](crate::types::CustomerAgentlessCollectorInfo).
    pub fn build(self) -> crate::types::CustomerAgentlessCollectorInfo {
        crate::types::CustomerAgentlessCollectorInfo {
            active_agentless_collectors: self.active_agentless_collectors.unwrap_or_default(),
            healthy_agentless_collectors: self.healthy_agentless_collectors.unwrap_or_default(),
            deny_listed_agentless_collectors: self
                .deny_listed_agentless_collectors
                .unwrap_or_default(),
            shutdown_agentless_collectors: self.shutdown_agentless_collectors.unwrap_or_default(),
            unhealthy_agentless_collectors: self.unhealthy_agentless_collectors.unwrap_or_default(),
            total_agentless_collectors: self.total_agentless_collectors.unwrap_or_default(),
            unknown_agentless_collectors: self.unknown_agentless_collectors.unwrap_or_default(),
        }
    }
}
