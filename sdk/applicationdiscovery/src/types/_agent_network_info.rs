// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Network details about the host where the agent/connector resides.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AgentNetworkInfo {
    /// <p>The IP address for the host where the agent/connector resides.</p>
    #[doc(hidden)]
    pub ip_address: std::option::Option<std::string::String>,
    /// <p>The MAC address for the host where the agent/connector resides.</p>
    #[doc(hidden)]
    pub mac_address: std::option::Option<std::string::String>,
}
impl AgentNetworkInfo {
    /// <p>The IP address for the host where the agent/connector resides.</p>
    pub fn ip_address(&self) -> std::option::Option<&str> {
        self.ip_address.as_deref()
    }
    /// <p>The MAC address for the host where the agent/connector resides.</p>
    pub fn mac_address(&self) -> std::option::Option<&str> {
        self.mac_address.as_deref()
    }
}
impl AgentNetworkInfo {
    /// Creates a new builder-style object to manufacture [`AgentNetworkInfo`](crate::types::AgentNetworkInfo).
    pub fn builder() -> crate::types::builders::AgentNetworkInfoBuilder {
        crate::types::builders::AgentNetworkInfoBuilder::default()
    }
}

/// A builder for [`AgentNetworkInfo`](crate::types::AgentNetworkInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AgentNetworkInfoBuilder {
    pub(crate) ip_address: std::option::Option<std::string::String>,
    pub(crate) mac_address: std::option::Option<std::string::String>,
}
impl AgentNetworkInfoBuilder {
    /// <p>The IP address for the host where the agent/connector resides.</p>
    pub fn ip_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.ip_address = Some(input.into());
        self
    }
    /// <p>The IP address for the host where the agent/connector resides.</p>
    pub fn set_ip_address(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ip_address = input;
        self
    }
    /// <p>The MAC address for the host where the agent/connector resides.</p>
    pub fn mac_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.mac_address = Some(input.into());
        self
    }
    /// <p>The MAC address for the host where the agent/connector resides.</p>
    pub fn set_mac_address(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.mac_address = input;
        self
    }
    /// Consumes the builder and constructs a [`AgentNetworkInfo`](crate::types::AgentNetworkInfo).
    pub fn build(self) -> crate::types::AgentNetworkInfo {
        crate::types::AgentNetworkInfo {
            ip_address: self.ip_address,
            mac_address: self.mac_address,
        }
    }
}
