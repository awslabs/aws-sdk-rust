// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_vector_enrichment_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_vector_enrichment_job::StartVectorEnrichmentJobInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("ClientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.execution_role_arn {
        object.key("ExecutionRoleArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.input_config {
        #[allow(unused_mut)]
        let mut object_4 = object.key("InputConfig").start_object();
        crate::protocol_serde::shape_vector_enrichment_job_input_config::ser_vector_enrichment_job_input_config(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.job_config {
        #[allow(unused_mut)]
        let mut object_6 = object.key("JobConfig").start_object();
        crate::protocol_serde::shape_vector_enrichment_job_config::ser_vector_enrichment_job_config(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.kms_key_id {
        object.key("KmsKeyId").string(var_7.as_str());
    }
    if let Some(var_8) = &input.name {
        object.key("Name").string(var_8.as_str());
    }
    if let Some(var_9) = &input.tags {
        #[allow(unused_mut)]
        let mut object_10 = object.key("Tags").start_object();
        for (key_11, value_12) in var_9 {
            {
                object_10.key(key_11.as_str()).string(value_12.as_str());
            }
        }
        object_10.finish();
    }
    Ok(())
}
