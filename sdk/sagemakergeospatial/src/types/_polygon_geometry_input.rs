// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PolygonGeometryInput {
    /// <p></p>
    #[doc(hidden)]
    pub coordinates: std::option::Option<std::vec::Vec<std::vec::Vec<std::vec::Vec<f64>>>>,
}
impl PolygonGeometryInput {
    /// <p></p>
    pub fn coordinates(&self) -> std::option::Option<&[std::vec::Vec<std::vec::Vec<f64>>]> {
        self.coordinates.as_deref()
    }
}
impl PolygonGeometryInput {
    /// Creates a new builder-style object to manufacture [`PolygonGeometryInput`](crate::types::PolygonGeometryInput).
    pub fn builder() -> crate::types::builders::PolygonGeometryInputBuilder {
        crate::types::builders::PolygonGeometryInputBuilder::default()
    }
}

/// A builder for [`PolygonGeometryInput`](crate::types::PolygonGeometryInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PolygonGeometryInputBuilder {
    pub(crate) coordinates: std::option::Option<std::vec::Vec<std::vec::Vec<std::vec::Vec<f64>>>>,
}
impl PolygonGeometryInputBuilder {
    /// Appends an item to `coordinates`.
    ///
    /// To override the contents of this collection use [`set_coordinates`](Self::set_coordinates).
    ///
    /// <p></p>
    pub fn coordinates(mut self, input: std::vec::Vec<std::vec::Vec<f64>>) -> Self {
        let mut v = self.coordinates.unwrap_or_default();
        v.push(input);
        self.coordinates = Some(v);
        self
    }
    /// <p></p>
    pub fn set_coordinates(
        mut self,
        input: std::option::Option<std::vec::Vec<std::vec::Vec<std::vec::Vec<f64>>>>,
    ) -> Self {
        self.coordinates = input;
        self
    }
    /// Consumes the builder and constructs a [`PolygonGeometryInput`](crate::types::PolygonGeometryInput).
    pub fn build(self) -> crate::types::PolygonGeometryInput {
        crate::types::PolygonGeometryInput {
            coordinates: self.coordinates,
        }
    }
}
