// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OutputResolutionStackInput {
    /// <p></p>
    #[doc(hidden)]
    pub predefined: std::option::Option<crate::types::PredefinedResolution>,
    /// <p></p>
    #[doc(hidden)]
    pub user_defined: std::option::Option<crate::types::UserDefined>,
}
impl OutputResolutionStackInput {
    /// <p></p>
    pub fn predefined(&self) -> std::option::Option<&crate::types::PredefinedResolution> {
        self.predefined.as_ref()
    }
    /// <p></p>
    pub fn user_defined(&self) -> std::option::Option<&crate::types::UserDefined> {
        self.user_defined.as_ref()
    }
}
impl OutputResolutionStackInput {
    /// Creates a new builder-style object to manufacture [`OutputResolutionStackInput`](crate::types::OutputResolutionStackInput).
    pub fn builder() -> crate::types::builders::OutputResolutionStackInputBuilder {
        crate::types::builders::OutputResolutionStackInputBuilder::default()
    }
}

/// A builder for [`OutputResolutionStackInput`](crate::types::OutputResolutionStackInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OutputResolutionStackInputBuilder {
    pub(crate) predefined: std::option::Option<crate::types::PredefinedResolution>,
    pub(crate) user_defined: std::option::Option<crate::types::UserDefined>,
}
impl OutputResolutionStackInputBuilder {
    /// <p></p>
    pub fn predefined(mut self, input: crate::types::PredefinedResolution) -> Self {
        self.predefined = Some(input);
        self
    }
    /// <p></p>
    pub fn set_predefined(
        mut self,
        input: std::option::Option<crate::types::PredefinedResolution>,
    ) -> Self {
        self.predefined = input;
        self
    }
    /// <p></p>
    pub fn user_defined(mut self, input: crate::types::UserDefined) -> Self {
        self.user_defined = Some(input);
        self
    }
    /// <p></p>
    pub fn set_user_defined(
        mut self,
        input: std::option::Option<crate::types::UserDefined>,
    ) -> Self {
        self.user_defined = input;
        self
    }
    /// Consumes the builder and constructs a [`OutputResolutionStackInput`](crate::types::OutputResolutionStackInput).
    pub fn build(self) -> crate::types::OutputResolutionStackInput {
        crate::types::OutputResolutionStackInput {
            predefined: self.predefined,
            user_defined: self.user_defined,
        }
    }
}
