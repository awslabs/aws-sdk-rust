// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input structure for specifying ViewSunAzimuth property filter. ViewSunAzimuth refers to the Sun azimuth angle. From the scene center point on the ground, this is the angle between truth north and the sun. Measured clockwise in degrees (0-360).</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ViewSunAzimuthInput {
    /// <p>The minimum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth greater than or equal to this value.</p>
    pub lower_bound: f32,
    /// <p>The maximum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth lesser than or equal to this value.</p>
    pub upper_bound: f32,
}
impl ViewSunAzimuthInput {
    /// <p>The minimum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth greater than or equal to this value.</p>
    pub fn lower_bound(&self) -> f32 {
        self.lower_bound
    }
    /// <p>The maximum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth lesser than or equal to this value.</p>
    pub fn upper_bound(&self) -> f32 {
        self.upper_bound
    }
}
impl ViewSunAzimuthInput {
    /// Creates a new builder-style object to manufacture [`ViewSunAzimuthInput`](crate::types::ViewSunAzimuthInput).
    pub fn builder() -> crate::types::builders::ViewSunAzimuthInputBuilder {
        crate::types::builders::ViewSunAzimuthInputBuilder::default()
    }
}

/// A builder for [`ViewSunAzimuthInput`](crate::types::ViewSunAzimuthInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ViewSunAzimuthInputBuilder {
    pub(crate) lower_bound: ::std::option::Option<f32>,
    pub(crate) upper_bound: ::std::option::Option<f32>,
}
impl ViewSunAzimuthInputBuilder {
    /// <p>The minimum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth greater than or equal to this value.</p>
    /// This field is required.
    pub fn lower_bound(mut self, input: f32) -> Self {
        self.lower_bound = ::std::option::Option::Some(input);
        self
    }
    /// <p>The minimum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth greater than or equal to this value.</p>
    pub fn set_lower_bound(mut self, input: ::std::option::Option<f32>) -> Self {
        self.lower_bound = input;
        self
    }
    /// <p>The minimum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth greater than or equal to this value.</p>
    pub fn get_lower_bound(&self) -> &::std::option::Option<f32> {
        &self.lower_bound
    }
    /// <p>The maximum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth lesser than or equal to this value.</p>
    /// This field is required.
    pub fn upper_bound(mut self, input: f32) -> Self {
        self.upper_bound = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth lesser than or equal to this value.</p>
    pub fn set_upper_bound(mut self, input: ::std::option::Option<f32>) -> Self {
        self.upper_bound = input;
        self
    }
    /// <p>The maximum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth lesser than or equal to this value.</p>
    pub fn get_upper_bound(&self) -> &::std::option::Option<f32> {
        &self.upper_bound
    }
    /// Consumes the builder and constructs a [`ViewSunAzimuthInput`](crate::types::ViewSunAzimuthInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`lower_bound`](crate::types::builders::ViewSunAzimuthInputBuilder::lower_bound)
    /// - [`upper_bound`](crate::types::builders::ViewSunAzimuthInputBuilder::upper_bound)
    pub fn build(self) -> ::std::result::Result<crate::types::ViewSunAzimuthInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ViewSunAzimuthInput {
            lower_bound: self.lower_bound.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "lower_bound",
                    "lower_bound was not specified but it is required when building ViewSunAzimuthInput",
                )
            })?,
            upper_bound: self.upper_bound.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "upper_bound",
                    "upper_bound was not specified but it is required when building ViewSunAzimuthInput",
                )
            })?,
        })
    }
}
