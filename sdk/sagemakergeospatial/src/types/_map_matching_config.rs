// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MapMatchingConfig {
    /// <p></p>
    #[doc(hidden)]
    pub id_attribute_name: std::option::Option<std::string::String>,
    /// <p>The name of the Y-attribute</p>
    #[doc(hidden)]
    pub y_attribute_name: std::option::Option<std::string::String>,
    /// <p>The name of the X-attribute</p>
    #[doc(hidden)]
    pub x_attribute_name: std::option::Option<std::string::String>,
    /// <p>The name of the timestamp attribute.</p>
    #[doc(hidden)]
    pub timestamp_attribute_name: std::option::Option<std::string::String>,
}
impl MapMatchingConfig {
    /// <p></p>
    pub fn id_attribute_name(&self) -> std::option::Option<&str> {
        self.id_attribute_name.as_deref()
    }
    /// <p>The name of the Y-attribute</p>
    pub fn y_attribute_name(&self) -> std::option::Option<&str> {
        self.y_attribute_name.as_deref()
    }
    /// <p>The name of the X-attribute</p>
    pub fn x_attribute_name(&self) -> std::option::Option<&str> {
        self.x_attribute_name.as_deref()
    }
    /// <p>The name of the timestamp attribute.</p>
    pub fn timestamp_attribute_name(&self) -> std::option::Option<&str> {
        self.timestamp_attribute_name.as_deref()
    }
}
impl MapMatchingConfig {
    /// Creates a new builder-style object to manufacture [`MapMatchingConfig`](crate::types::MapMatchingConfig).
    pub fn builder() -> crate::types::builders::MapMatchingConfigBuilder {
        crate::types::builders::MapMatchingConfigBuilder::default()
    }
}

/// A builder for [`MapMatchingConfig`](crate::types::MapMatchingConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MapMatchingConfigBuilder {
    pub(crate) id_attribute_name: std::option::Option<std::string::String>,
    pub(crate) y_attribute_name: std::option::Option<std::string::String>,
    pub(crate) x_attribute_name: std::option::Option<std::string::String>,
    pub(crate) timestamp_attribute_name: std::option::Option<std::string::String>,
}
impl MapMatchingConfigBuilder {
    /// <p></p>
    pub fn id_attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.id_attribute_name = Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_id_attribute_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.id_attribute_name = input;
        self
    }
    /// <p>The name of the Y-attribute</p>
    pub fn y_attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.y_attribute_name = Some(input.into());
        self
    }
    /// <p>The name of the Y-attribute</p>
    pub fn set_y_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.y_attribute_name = input;
        self
    }
    /// <p>The name of the X-attribute</p>
    pub fn x_attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.x_attribute_name = Some(input.into());
        self
    }
    /// <p>The name of the X-attribute</p>
    pub fn set_x_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.x_attribute_name = input;
        self
    }
    /// <p>The name of the timestamp attribute.</p>
    pub fn timestamp_attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.timestamp_attribute_name = Some(input.into());
        self
    }
    /// <p>The name of the timestamp attribute.</p>
    pub fn set_timestamp_attribute_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.timestamp_attribute_name = input;
        self
    }
    /// Consumes the builder and constructs a [`MapMatchingConfig`](crate::types::MapMatchingConfig).
    pub fn build(self) -> crate::types::MapMatchingConfig {
        crate::types::MapMatchingConfig {
            id_attribute_name: self.id_attribute_name,
            y_attribute_name: self.y_attribute_name,
            x_attribute_name: self.x_attribute_name,
            timestamp_attribute_name: self.timestamp_attribute_name,
        }
    }
}
