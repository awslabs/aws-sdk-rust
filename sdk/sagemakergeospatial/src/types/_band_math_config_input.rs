// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BandMathConfigInput {
    /// <p></p>
    #[doc(hidden)]
    pub predefined_indices: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p></p>
    #[doc(hidden)]
    pub custom_indices: std::option::Option<crate::types::CustomIndicesInput>,
}
impl BandMathConfigInput {
    /// <p></p>
    pub fn predefined_indices(&self) -> std::option::Option<&[std::string::String]> {
        self.predefined_indices.as_deref()
    }
    /// <p></p>
    pub fn custom_indices(&self) -> std::option::Option<&crate::types::CustomIndicesInput> {
        self.custom_indices.as_ref()
    }
}
impl BandMathConfigInput {
    /// Creates a new builder-style object to manufacture [`BandMathConfigInput`](crate::types::BandMathConfigInput).
    pub fn builder() -> crate::types::builders::BandMathConfigInputBuilder {
        crate::types::builders::BandMathConfigInputBuilder::default()
    }
}

/// A builder for [`BandMathConfigInput`](crate::types::BandMathConfigInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BandMathConfigInputBuilder {
    pub(crate) predefined_indices: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) custom_indices: std::option::Option<crate::types::CustomIndicesInput>,
}
impl BandMathConfigInputBuilder {
    /// Appends an item to `predefined_indices`.
    ///
    /// To override the contents of this collection use [`set_predefined_indices`](Self::set_predefined_indices).
    ///
    /// <p></p>
    pub fn predefined_indices(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.predefined_indices.unwrap_or_default();
        v.push(input.into());
        self.predefined_indices = Some(v);
        self
    }
    /// <p></p>
    pub fn set_predefined_indices(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.predefined_indices = input;
        self
    }
    /// <p></p>
    pub fn custom_indices(mut self, input: crate::types::CustomIndicesInput) -> Self {
        self.custom_indices = Some(input);
        self
    }
    /// <p></p>
    pub fn set_custom_indices(
        mut self,
        input: std::option::Option<crate::types::CustomIndicesInput>,
    ) -> Self {
        self.custom_indices = input;
        self
    }
    /// Consumes the builder and constructs a [`BandMathConfigInput`](crate::types::BandMathConfigInput).
    pub fn build(self) -> crate::types::BandMathConfigInput {
        crate::types::BandMathConfigInput {
            predefined_indices: self.predefined_indices,
            custom_indices: self.custom_indices,
        }
    }
}
