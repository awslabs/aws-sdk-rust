// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExportS3DataInput {
    /// <p>The URL to the Amazon S3 data input.</p>
    #[doc(hidden)]
    pub s3_uri: std::option::Option<std::string::String>,
    /// <p>The Amazon Key Management Service (KMS) key ID for server-side encryption.</p>
    #[doc(hidden)]
    pub kms_key_id: std::option::Option<std::string::String>,
}
impl ExportS3DataInput {
    /// <p>The URL to the Amazon S3 data input.</p>
    pub fn s3_uri(&self) -> std::option::Option<&str> {
        self.s3_uri.as_deref()
    }
    /// <p>The Amazon Key Management Service (KMS) key ID for server-side encryption.</p>
    pub fn kms_key_id(&self) -> std::option::Option<&str> {
        self.kms_key_id.as_deref()
    }
}
impl ExportS3DataInput {
    /// Creates a new builder-style object to manufacture [`ExportS3DataInput`](crate::types::ExportS3DataInput).
    pub fn builder() -> crate::types::builders::ExportS3DataInputBuilder {
        crate::types::builders::ExportS3DataInputBuilder::default()
    }
}

/// A builder for [`ExportS3DataInput`](crate::types::ExportS3DataInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExportS3DataInputBuilder {
    pub(crate) s3_uri: std::option::Option<std::string::String>,
    pub(crate) kms_key_id: std::option::Option<std::string::String>,
}
impl ExportS3DataInputBuilder {
    /// <p>The URL to the Amazon S3 data input.</p>
    pub fn s3_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_uri = Some(input.into());
        self
    }
    /// <p>The URL to the Amazon S3 data input.</p>
    pub fn set_s3_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_uri = input;
        self
    }
    /// <p>The Amazon Key Management Service (KMS) key ID for server-side encryption.</p>
    pub fn kms_key_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.kms_key_id = Some(input.into());
        self
    }
    /// <p>The Amazon Key Management Service (KMS) key ID for server-side encryption.</p>
    pub fn set_kms_key_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.kms_key_id = input;
        self
    }
    /// Consumes the builder and constructs a [`ExportS3DataInput`](crate::types::ExportS3DataInput).
    pub fn build(self) -> crate::types::ExportS3DataInput {
        crate::types::ExportS3DataInput {
            s3_uri: self.s3_uri,
            kms_key_id: self.kms_key_id,
        }
    }
}
