// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TemporalStatisticsConfigInput {
    /// <p></p>
    #[doc(hidden)]
    pub group_by: std::option::Option<crate::types::GroupBy>,
    /// <p></p>
    #[doc(hidden)]
    pub statistics: std::option::Option<std::vec::Vec<crate::types::TemporalStatistics>>,
    /// <p></p>
    #[doc(hidden)]
    pub target_bands: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl TemporalStatisticsConfigInput {
    /// <p></p>
    pub fn group_by(&self) -> std::option::Option<&crate::types::GroupBy> {
        self.group_by.as_ref()
    }
    /// <p></p>
    pub fn statistics(&self) -> std::option::Option<&[crate::types::TemporalStatistics]> {
        self.statistics.as_deref()
    }
    /// <p></p>
    pub fn target_bands(&self) -> std::option::Option<&[std::string::String]> {
        self.target_bands.as_deref()
    }
}
impl TemporalStatisticsConfigInput {
    /// Creates a new builder-style object to manufacture [`TemporalStatisticsConfigInput`](crate::types::TemporalStatisticsConfigInput).
    pub fn builder() -> crate::types::builders::TemporalStatisticsConfigInputBuilder {
        crate::types::builders::TemporalStatisticsConfigInputBuilder::default()
    }
}

/// A builder for [`TemporalStatisticsConfigInput`](crate::types::TemporalStatisticsConfigInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TemporalStatisticsConfigInputBuilder {
    pub(crate) group_by: std::option::Option<crate::types::GroupBy>,
    pub(crate) statistics: std::option::Option<std::vec::Vec<crate::types::TemporalStatistics>>,
    pub(crate) target_bands: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl TemporalStatisticsConfigInputBuilder {
    /// <p></p>
    pub fn group_by(mut self, input: crate::types::GroupBy) -> Self {
        self.group_by = Some(input);
        self
    }
    /// <p></p>
    pub fn set_group_by(mut self, input: std::option::Option<crate::types::GroupBy>) -> Self {
        self.group_by = input;
        self
    }
    /// Appends an item to `statistics`.
    ///
    /// To override the contents of this collection use [`set_statistics`](Self::set_statistics).
    ///
    /// <p></p>
    pub fn statistics(mut self, input: crate::types::TemporalStatistics) -> Self {
        let mut v = self.statistics.unwrap_or_default();
        v.push(input);
        self.statistics = Some(v);
        self
    }
    /// <p></p>
    pub fn set_statistics(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TemporalStatistics>>,
    ) -> Self {
        self.statistics = input;
        self
    }
    /// Appends an item to `target_bands`.
    ///
    /// To override the contents of this collection use [`set_target_bands`](Self::set_target_bands).
    ///
    /// <p></p>
    pub fn target_bands(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.target_bands.unwrap_or_default();
        v.push(input.into());
        self.target_bands = Some(v);
        self
    }
    /// <p></p>
    pub fn set_target_bands(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.target_bands = input;
        self
    }
    /// Consumes the builder and constructs a [`TemporalStatisticsConfigInput`](crate::types::TemporalStatisticsConfigInput).
    pub fn build(self) -> crate::types::TemporalStatisticsConfigInput {
        crate::types::TemporalStatisticsConfigInput {
            group_by: self.group_by,
            statistics: self.statistics,
            target_bands: self.target_bands,
        }
    }
}
