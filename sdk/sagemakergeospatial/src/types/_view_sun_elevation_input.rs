// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ViewSunElevationInput {
    /// <p>The lower bound to view the sun elevation.</p>
    #[doc(hidden)]
    pub lower_bound: std::option::Option<f32>,
    /// <p>The upper bound to view the sun elevation.</p>
    #[doc(hidden)]
    pub upper_bound: std::option::Option<f32>,
}
impl ViewSunElevationInput {
    /// <p>The lower bound to view the sun elevation.</p>
    pub fn lower_bound(&self) -> std::option::Option<f32> {
        self.lower_bound
    }
    /// <p>The upper bound to view the sun elevation.</p>
    pub fn upper_bound(&self) -> std::option::Option<f32> {
        self.upper_bound
    }
}
impl ViewSunElevationInput {
    /// Creates a new builder-style object to manufacture [`ViewSunElevationInput`](crate::types::ViewSunElevationInput).
    pub fn builder() -> crate::types::builders::ViewSunElevationInputBuilder {
        crate::types::builders::ViewSunElevationInputBuilder::default()
    }
}

/// A builder for [`ViewSunElevationInput`](crate::types::ViewSunElevationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ViewSunElevationInputBuilder {
    pub(crate) lower_bound: std::option::Option<f32>,
    pub(crate) upper_bound: std::option::Option<f32>,
}
impl ViewSunElevationInputBuilder {
    /// <p>The lower bound to view the sun elevation.</p>
    pub fn lower_bound(mut self, input: f32) -> Self {
        self.lower_bound = Some(input);
        self
    }
    /// <p>The lower bound to view the sun elevation.</p>
    pub fn set_lower_bound(mut self, input: std::option::Option<f32>) -> Self {
        self.lower_bound = input;
        self
    }
    /// <p>The upper bound to view the sun elevation.</p>
    pub fn upper_bound(mut self, input: f32) -> Self {
        self.upper_bound = Some(input);
        self
    }
    /// <p>The upper bound to view the sun elevation.</p>
    pub fn set_upper_bound(mut self, input: std::option::Option<f32>) -> Self {
        self.upper_bound = input;
        self
    }
    /// Consumes the builder and constructs a [`ViewSunElevationInput`](crate::types::ViewSunElevationInput).
    pub fn build(self) -> crate::types::ViewSunElevationInput {
        crate::types::ViewSunElevationInput {
            lower_bound: self.lower_bound,
            upper_bound: self.upper_bound,
        }
    }
}
