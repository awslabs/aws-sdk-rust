// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object containing information about the output file.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExportVectorEnrichmentJobOutputConfig {
    /// <p></p>
    #[doc(hidden)]
    pub s3_data: std::option::Option<crate::types::VectorEnrichmentJobS3Data>,
}
impl ExportVectorEnrichmentJobOutputConfig {
    /// <p></p>
    pub fn s3_data(&self) -> std::option::Option<&crate::types::VectorEnrichmentJobS3Data> {
        self.s3_data.as_ref()
    }
}
impl ExportVectorEnrichmentJobOutputConfig {
    /// Creates a new builder-style object to manufacture [`ExportVectorEnrichmentJobOutputConfig`](crate::types::ExportVectorEnrichmentJobOutputConfig).
    pub fn builder() -> crate::types::builders::ExportVectorEnrichmentJobOutputConfigBuilder {
        crate::types::builders::ExportVectorEnrichmentJobOutputConfigBuilder::default()
    }
}

/// A builder for [`ExportVectorEnrichmentJobOutputConfig`](crate::types::ExportVectorEnrichmentJobOutputConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExportVectorEnrichmentJobOutputConfigBuilder {
    pub(crate) s3_data: std::option::Option<crate::types::VectorEnrichmentJobS3Data>,
}
impl ExportVectorEnrichmentJobOutputConfigBuilder {
    /// <p></p>
    pub fn s3_data(mut self, input: crate::types::VectorEnrichmentJobS3Data) -> Self {
        self.s3_data = Some(input);
        self
    }
    /// <p></p>
    pub fn set_s3_data(
        mut self,
        input: std::option::Option<crate::types::VectorEnrichmentJobS3Data>,
    ) -> Self {
        self.s3_data = input;
        self
    }
    /// Consumes the builder and constructs a [`ExportVectorEnrichmentJobOutputConfig`](crate::types::ExportVectorEnrichmentJobOutputConfig).
    pub fn build(self) -> crate::types::ExportVectorEnrichmentJobOutputConfig {
        crate::types::ExportVectorEnrichmentJobOutputConfig {
            s3_data: self.s3_data,
        }
    }
}
