// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UserDefined {
    /// <p></p>
    #[doc(hidden)]
    pub value: std::option::Option<f32>,
    /// <p></p>
    #[doc(hidden)]
    pub unit: std::option::Option<crate::types::Unit>,
}
impl UserDefined {
    /// <p></p>
    pub fn value(&self) -> std::option::Option<f32> {
        self.value
    }
    /// <p></p>
    pub fn unit(&self) -> std::option::Option<&crate::types::Unit> {
        self.unit.as_ref()
    }
}
impl UserDefined {
    /// Creates a new builder-style object to manufacture [`UserDefined`](crate::types::UserDefined).
    pub fn builder() -> crate::types::builders::UserDefinedBuilder {
        crate::types::builders::UserDefinedBuilder::default()
    }
}

/// A builder for [`UserDefined`](crate::types::UserDefined).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UserDefinedBuilder {
    pub(crate) value: std::option::Option<f32>,
    pub(crate) unit: std::option::Option<crate::types::Unit>,
}
impl UserDefinedBuilder {
    /// <p></p>
    pub fn value(mut self, input: f32) -> Self {
        self.value = Some(input);
        self
    }
    /// <p></p>
    pub fn set_value(mut self, input: std::option::Option<f32>) -> Self {
        self.value = input;
        self
    }
    /// <p></p>
    pub fn unit(mut self, input: crate::types::Unit) -> Self {
        self.unit = Some(input);
        self
    }
    /// <p></p>
    pub fn set_unit(mut self, input: std::option::Option<crate::types::Unit>) -> Self {
        self.unit = input;
        self
    }
    /// Consumes the builder and constructs a [`UserDefined`](crate::types::UserDefined).
    pub fn build(self) -> crate::types::UserDefined {
        crate::types::UserDefined {
            value: self.value,
            unit: self.unit,
        }
    }
}
