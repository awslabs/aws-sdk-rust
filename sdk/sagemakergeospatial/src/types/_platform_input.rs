// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PlatformInput {
    /// <p>The value of the platform.</p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
    /// <p></p>
    #[doc(hidden)]
    pub comparison_operator: std::option::Option<crate::types::ComparisonOperator>,
}
impl PlatformInput {
    /// <p>The value of the platform.</p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
    /// <p></p>
    pub fn comparison_operator(&self) -> std::option::Option<&crate::types::ComparisonOperator> {
        self.comparison_operator.as_ref()
    }
}
impl PlatformInput {
    /// Creates a new builder-style object to manufacture [`PlatformInput`](crate::types::PlatformInput).
    pub fn builder() -> crate::types::builders::PlatformInputBuilder {
        crate::types::builders::PlatformInputBuilder::default()
    }
}

/// A builder for [`PlatformInput`](crate::types::PlatformInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PlatformInputBuilder {
    pub(crate) value: std::option::Option<std::string::String>,
    pub(crate) comparison_operator: std::option::Option<crate::types::ComparisonOperator>,
}
impl PlatformInputBuilder {
    /// <p>The value of the platform.</p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value of the platform.</p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// <p></p>
    pub fn comparison_operator(mut self, input: crate::types::ComparisonOperator) -> Self {
        self.comparison_operator = Some(input);
        self
    }
    /// <p></p>
    pub fn set_comparison_operator(
        mut self,
        input: std::option::Option<crate::types::ComparisonOperator>,
    ) -> Self {
        self.comparison_operator = input;
        self
    }
    /// Consumes the builder and constructs a [`PlatformInput`](crate::types::PlatformInput).
    pub fn build(self) -> crate::types::PlatformInput {
        crate::types::PlatformInput {
            value: self.value,
            comparison_operator: self.comparison_operator,
        }
    }
}
