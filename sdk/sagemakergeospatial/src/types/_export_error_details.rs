// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The structure for returning the export error details in a GetEarthObservationJob.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExportErrorDetails {
    /// <p></p>
    #[doc(hidden)]
    pub export_results: std::option::Option<crate::types::ExportErrorDetailsOutput>,
    /// <p></p>
    #[doc(hidden)]
    pub export_source_images: std::option::Option<crate::types::ExportErrorDetailsOutput>,
}
impl ExportErrorDetails {
    /// <p></p>
    pub fn export_results(&self) -> std::option::Option<&crate::types::ExportErrorDetailsOutput> {
        self.export_results.as_ref()
    }
    /// <p></p>
    pub fn export_source_images(
        &self,
    ) -> std::option::Option<&crate::types::ExportErrorDetailsOutput> {
        self.export_source_images.as_ref()
    }
}
impl ExportErrorDetails {
    /// Creates a new builder-style object to manufacture [`ExportErrorDetails`](crate::types::ExportErrorDetails).
    pub fn builder() -> crate::types::builders::ExportErrorDetailsBuilder {
        crate::types::builders::ExportErrorDetailsBuilder::default()
    }
}

/// A builder for [`ExportErrorDetails`](crate::types::ExportErrorDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExportErrorDetailsBuilder {
    pub(crate) export_results: std::option::Option<crate::types::ExportErrorDetailsOutput>,
    pub(crate) export_source_images: std::option::Option<crate::types::ExportErrorDetailsOutput>,
}
impl ExportErrorDetailsBuilder {
    /// <p></p>
    pub fn export_results(mut self, input: crate::types::ExportErrorDetailsOutput) -> Self {
        self.export_results = Some(input);
        self
    }
    /// <p></p>
    pub fn set_export_results(
        mut self,
        input: std::option::Option<crate::types::ExportErrorDetailsOutput>,
    ) -> Self {
        self.export_results = input;
        self
    }
    /// <p></p>
    pub fn export_source_images(mut self, input: crate::types::ExportErrorDetailsOutput) -> Self {
        self.export_source_images = Some(input);
        self
    }
    /// <p></p>
    pub fn set_export_source_images(
        mut self,
        input: std::option::Option<crate::types::ExportErrorDetailsOutput>,
    ) -> Self {
        self.export_source_images = input;
        self
    }
    /// Consumes the builder and constructs a [`ExportErrorDetails`](crate::types::ExportErrorDetails).
    pub fn build(self) -> crate::types::ExportErrorDetails {
        crate::types::ExportErrorDetails {
            export_results: self.export_results,
            export_source_images: self.export_source_images,
        }
    }
}
