// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExportVectorEnrichmentJobOutput {
    /// <p>The Amazon Resource Name (ARN) of the Vector Enrichment job being exported.</p>
    pub arn: ::std::string::String,
    /// <p>The creation time.</p>
    pub creation_time: ::aws_smithy_types::DateTime,
    /// <p>The Amazon Resource Name (ARN) of the IAM role with permission to upload to the location in OutputConfig.</p>
    pub execution_role_arn: ::std::string::String,
    /// <p>The status of the results the Vector Enrichment job being exported.</p>
    pub export_status: crate::types::VectorEnrichmentJobExportStatus,
    /// <p>Output location information for exporting Vector Enrichment Job results. </p>
    pub output_config: ::std::option::Option<crate::types::ExportVectorEnrichmentJobOutputConfig>,
    _request_id: Option<String>,
}
impl ExportVectorEnrichmentJobOutput {
    /// <p>The Amazon Resource Name (ARN) of the Vector Enrichment job being exported.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The creation time.</p>
    pub fn creation_time(&self) -> &::aws_smithy_types::DateTime {
        &self.creation_time
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role with permission to upload to the location in OutputConfig.</p>
    pub fn execution_role_arn(&self) -> &str {
        use std::ops::Deref;
        self.execution_role_arn.deref()
    }
    /// <p>The status of the results the Vector Enrichment job being exported.</p>
    pub fn export_status(&self) -> &crate::types::VectorEnrichmentJobExportStatus {
        &self.export_status
    }
    /// <p>Output location information for exporting Vector Enrichment Job results. </p>
    pub fn output_config(&self) -> ::std::option::Option<&crate::types::ExportVectorEnrichmentJobOutputConfig> {
        self.output_config.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for ExportVectorEnrichmentJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ExportVectorEnrichmentJobOutput {
    /// Creates a new builder-style object to manufacture [`ExportVectorEnrichmentJobOutput`](crate::operation::export_vector_enrichment_job::ExportVectorEnrichmentJobOutput).
    pub fn builder() -> crate::operation::export_vector_enrichment_job::builders::ExportVectorEnrichmentJobOutputBuilder {
        crate::operation::export_vector_enrichment_job::builders::ExportVectorEnrichmentJobOutputBuilder::default()
    }
}

/// A builder for [`ExportVectorEnrichmentJobOutput`](crate::operation::export_vector_enrichment_job::ExportVectorEnrichmentJobOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExportVectorEnrichmentJobOutputBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) execution_role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) export_status: ::std::option::Option<crate::types::VectorEnrichmentJobExportStatus>,
    pub(crate) output_config: ::std::option::Option<crate::types::ExportVectorEnrichmentJobOutputConfig>,
    _request_id: Option<String>,
}
impl ExportVectorEnrichmentJobOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Vector Enrichment job being exported.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Vector Enrichment job being exported.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Vector Enrichment job being exported.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The creation time.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The creation time.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The creation time.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role with permission to upload to the location in OutputConfig.</p>
    /// This field is required.
    pub fn execution_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.execution_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role with permission to upload to the location in OutputConfig.</p>
    pub fn set_execution_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.execution_role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role with permission to upload to the location in OutputConfig.</p>
    pub fn get_execution_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.execution_role_arn
    }
    /// <p>The status of the results the Vector Enrichment job being exported.</p>
    /// This field is required.
    pub fn export_status(mut self, input: crate::types::VectorEnrichmentJobExportStatus) -> Self {
        self.export_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the results the Vector Enrichment job being exported.</p>
    pub fn set_export_status(mut self, input: ::std::option::Option<crate::types::VectorEnrichmentJobExportStatus>) -> Self {
        self.export_status = input;
        self
    }
    /// <p>The status of the results the Vector Enrichment job being exported.</p>
    pub fn get_export_status(&self) -> &::std::option::Option<crate::types::VectorEnrichmentJobExportStatus> {
        &self.export_status
    }
    /// <p>Output location information for exporting Vector Enrichment Job results. </p>
    /// This field is required.
    pub fn output_config(mut self, input: crate::types::ExportVectorEnrichmentJobOutputConfig) -> Self {
        self.output_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Output location information for exporting Vector Enrichment Job results. </p>
    pub fn set_output_config(mut self, input: ::std::option::Option<crate::types::ExportVectorEnrichmentJobOutputConfig>) -> Self {
        self.output_config = input;
        self
    }
    /// <p>Output location information for exporting Vector Enrichment Job results. </p>
    pub fn get_output_config(&self) -> &::std::option::Option<crate::types::ExportVectorEnrichmentJobOutputConfig> {
        &self.output_config
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ExportVectorEnrichmentJobOutput`](crate::operation::export_vector_enrichment_job::ExportVectorEnrichmentJobOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`arn`](crate::operation::export_vector_enrichment_job::builders::ExportVectorEnrichmentJobOutputBuilder::arn)
    /// - [`creation_time`](crate::operation::export_vector_enrichment_job::builders::ExportVectorEnrichmentJobOutputBuilder::creation_time)
    /// - [`execution_role_arn`](crate::operation::export_vector_enrichment_job::builders::ExportVectorEnrichmentJobOutputBuilder::execution_role_arn)
    /// - [`export_status`](crate::operation::export_vector_enrichment_job::builders::ExportVectorEnrichmentJobOutputBuilder::export_status)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::export_vector_enrichment_job::ExportVectorEnrichmentJobOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::export_vector_enrichment_job::ExportVectorEnrichmentJobOutput {
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building ExportVectorEnrichmentJobOutput",
                )
            })?,
            creation_time: self.creation_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "creation_time",
                    "creation_time was not specified but it is required when building ExportVectorEnrichmentJobOutput",
                )
            })?,
            execution_role_arn: self.execution_role_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "execution_role_arn",
                    "execution_role_arn was not specified but it is required when building ExportVectorEnrichmentJobOutput",
                )
            })?,
            export_status: self.export_status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "export_status",
                    "export_status was not specified but it is required when building ExportVectorEnrichmentJobOutput",
                )
            })?,
            output_config: self.output_config,
            _request_id: self._request_id,
        })
    }
}
