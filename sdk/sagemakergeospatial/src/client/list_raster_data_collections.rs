// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListRasterDataCollections`](crate::client::fluent_builders::ListRasterDataCollections) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListRasterDataCollections::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListRasterDataCollections::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListRasterDataCollections::set_next_token): <p>If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListRasterDataCollections::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListRasterDataCollections::set_max_results): <p>The total number of items to return.</p>
    /// - On success, responds with [`ListRasterDataCollectionsOutput`](crate::output::ListRasterDataCollectionsOutput) with field(s):
    ///   - [`raster_data_collection_summaries(Option<Vec<RasterDataCollectionMetadata>>)`](crate::output::ListRasterDataCollectionsOutput::raster_data_collection_summaries): <p>Contains summary information about the raster data collection.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListRasterDataCollectionsOutput::next_token): <p>If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListRasterDataCollectionsError>`](crate::error::ListRasterDataCollectionsError)
    pub fn list_raster_data_collections(
        &self,
    ) -> crate::client::fluent_builders::ListRasterDataCollections {
        crate::client::fluent_builders::ListRasterDataCollections::new(self.handle.clone())
    }
}
