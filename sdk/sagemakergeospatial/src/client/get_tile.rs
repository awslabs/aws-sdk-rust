// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetTile`](crate::operation::get_tile::builders::GetTileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`x(i32)`](crate::operation::get_tile::builders::GetTileFluentBuilder::x) / [`set_x(Option<i32>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_x): <p>The x coordinate of the tile input.</p>
    ///   - [`y(i32)`](crate::operation::get_tile::builders::GetTileFluentBuilder::y) / [`set_y(Option<i32>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_y): <p>The y coordinate of the tile input.</p>
    ///   - [`z(i32)`](crate::operation::get_tile::builders::GetTileFluentBuilder::z) / [`set_z(Option<i32>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_z): <p>The z coordinate of the tile input.</p>
    ///   - [`image_assets(Vec<String>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::image_assets) / [`set_image_assets(Option<Vec<String>>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_image_assets): <p>The particular assets or bands to tile.</p>
    ///   - [`target(TargetOptions)`](crate::operation::get_tile::builders::GetTileFluentBuilder::target) / [`set_target(Option<TargetOptions>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_target): <p>Determines what part of the Earth Observation job to tile. 'INPUT' or 'OUTPUT' are the valid options.</p>
    ///   - [`arn(impl Into<String>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_arn): <p>The Amazon Resource Name (ARN) of the tile operation.</p>
    ///   - [`image_mask(bool)`](crate::operation::get_tile::builders::GetTileFluentBuilder::image_mask) / [`set_image_mask(Option<bool>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_image_mask): <p>Determines whether or not to return a valid data mask.</p>
    ///   - [`output_format(impl Into<String>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::output_format) / [`set_output_format(Option<String>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_output_format): <p>The data format of the output tile. The formats include .npy, .png and .jpg.</p>
    ///   - [`time_range_filter(impl Into<String>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::time_range_filter) / [`set_time_range_filter(Option<String>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_time_range_filter): <p>Time range filter applied to imagery to find the images to tile.</p>
    ///   - [`property_filters(impl Into<String>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::property_filters) / [`set_property_filters(Option<String>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_property_filters): <p>Property filters for the imagery to tile.</p>
    ///   - [`output_data_type(OutputType)`](crate::operation::get_tile::builders::GetTileFluentBuilder::output_data_type) / [`set_output_data_type(Option<OutputType>)`](crate::operation::get_tile::builders::GetTileFluentBuilder::set_output_data_type): <p>The output data type of the tile operation.</p>
    /// - On success, responds with [`GetTileOutput`](crate::operation::get_tile::GetTileOutput) with field(s):
    ///   - [`binary_file(ByteStream)`](crate::operation::get_tile::GetTileOutput::binary_file): <p>The output binary file.</p>
    /// - On failure, responds with [`SdkError<GetTileError>`](crate::operation::get_tile::GetTileError)
    pub fn get_tile(&self) -> crate::operation::get_tile::builders::GetTileFluentBuilder {
        crate::operation::get_tile::builders::GetTileFluentBuilder::new(self.handle.clone())
    }
}
