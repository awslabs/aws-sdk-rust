# Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
[package]
name = "aws-sdk-gamelift"
version = "0.0.13-alpha"
description = "<fullname>Amazon GameLift Service</fullname>\n        <p>GameLift provides solutions for hosting session-based multiplayer game servers in the\n            cloud, including tools for deploying, operating, and scaling game servers. Built on AWS\n            global computing infrastructure, GameLift helps you deliver high-performance,\n            high-reliability, low-cost game servers while dynamically scaling your resource usage to\n            meet player demand. </p>\n        <p>\n            <b>About GameLift solutions</b>\n         </p>\n        <p>Get more information on these GameLift solutions in the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/\">GameLift Developer Guide</a>.</p>        \n        <ul>\n            <li>\n               <p>GameLift managed hosting -- GameLift offers a fully managed service to set up and maintain\n                    computing machines for hosting, manage game session and player session life\n                    cycle, and handle security, storage, and performance tracking. You can use\n                    automatic scaling tools to balance player demand and hosting costs, configure\n                    your game session management to minimize player latency, and add FlexMatch for\n                    matchmaking.</p>\n            </li>\n            <li>\n               <p>Managed hosting with Realtime Servers -- With GameLift Realtime Servers, you can quickly configure and set up\n                    ready-to-go game servers for your game. Realtime Servers provides a game server framework\n                    with core GameLift infrastructure already built in. Then use the full range of\n                    GameLift managed hosting features, including FlexMatch, for your game.</p>\n            </li>\n            <li>\n               <p>GameLift FleetIQ -- Use GameLift FleetIQ as a standalone service while hosting your games using EC2 instances and\n                    Auto Scaling groups. GameLift FleetIQ provides optimizations for game hosting, including\n                    boosting the viability of low-cost Spot Instances gaming. For a complete\n                    solution, pair the GameLift FleetIQ and FlexMatch standalone services.</p>\n            </li>\n            <li>\n                <p>GameLift FlexMatch -- Add matchmaking to your game hosting solution. FlexMatch is a\n                    customizable matchmaking service for multiplayer games. Use FlexMatch as\n                    integrated with GameLift managed hosting or incorporate FlexMatch as a standalone\n                    service into your own hosting solution.</p>\n            </li>\n         </ul>\n        <p>\n            <b>About this API Reference</b>\n         </p>\n        <p>This reference guide describes the low-level service API for Amazon GameLift. With each topic\n            in this guide, you can find links to language-specific SDK guides and the AWS CLI\n            reference. Useful links:</p>\n        <ul>\n            <li>\n                <p>\n                  <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html\">GameLift API\n                    operations listed by tasks</a>\n               </p>\n            </li>\n            <li>\n                <p>\n                  <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-components.html\"> GameLift tools\n                    and resources</a>\n               </p>\n            </li>\n         </ul>"
authors = ["AWS Rust SDK Team <aws-sdk-rust@amazon.com>", "Russell Cohen <rcoh@amazon.com>"]
license = "Apache-2.0"
edition = "2018"
[dependencies.aws-endpoint]
path = "..//aws-endpoint"
[dependencies.aws-hyper]
path = "..//aws-hyper"
optional = true
[dependencies.smithy-http]
path = "..//smithy-http"
[dependencies.aws-types]
path = "..//aws-types"
[dependencies.aws-auth]
path = "..//aws-auth"
[dependencies.smithy-types]
path = "..//smithy-types"
[dependencies.aws-http]
path = "..//aws-http"
[dependencies.aws-sig-auth]
path = "..//aws-sig-auth"
[dependencies.http]
version = "0.2"
[dependencies.bytes]
version = "1"
[dependencies.smithy-json]
path = "..//smithy-json"
[features]
client = ["aws-hyper"]
rustls = ["aws-hyper/rustls"]
native-tls = ["aws-hyper/native-tls"]
default = ["client", "rustls"]


