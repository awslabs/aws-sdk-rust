// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_fleet_attributes_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_fleet_attributes::UpdateFleetAttributesInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.fleet_id {
        object.key("FleetId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.name {
        object.key("Name").string(var_2.as_str());
    }
    if let Some(var_3) = &input.description {
        object.key("Description").string(var_3.as_str());
    }
    if let Some(var_4) = &input.new_game_session_protection_policy {
        object.key("NewGameSessionProtectionPolicy").string(var_4.as_str());
    }
    if let Some(var_5) = &input.resource_creation_limit_policy {
        #[allow(unused_mut)]
        let mut object_6 = object.key("ResourceCreationLimitPolicy").start_object();
        crate::protocol_serde::shape_resource_creation_limit_policy::ser_resource_creation_limit_policy(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.metric_groups {
        let mut array_8 = object.key("MetricGroups").start_array();
        for item_9 in var_7 {
            {
                array_8.value().string(item_9.as_str());
            }
        }
        array_8.finish();
    }
    if let Some(var_10) = &input.anywhere_configuration {
        #[allow(unused_mut)]
        let mut object_11 = object.key("AnywhereConfiguration").start_object();
        crate::protocol_serde::shape_anywhere_configuration::ser_anywhere_configuration(&mut object_11, var_10)?;
        object_11.finish();
    }
    Ok(())
}
