// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLocation`](crate::operation::create_location::builders::CreateLocationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`location_name(impl Into<String>)`](crate::operation::create_location::builders::CreateLocationFluentBuilder::location_name) / [`set_location_name(Option<String>)`](crate::operation::create_location::builders::CreateLocationFluentBuilder::set_location_name):<br>required: **true**<br><p>A descriptive name for the custom location.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_location::builders::CreateLocationFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_location::builders::CreateLocationFluentBuilder::set_tags):<br>required: **false**<br><p>A list of labels to assign to the new matchmaking configuration resource. Tags are developer-defined key-value pairs. Tagging Amazon Web Services resources are useful for resource management, access management and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"> Tagging Amazon Web Services Resources</a> in the <i>Amazon Web Services General Rareference</i>.</p><br>
    /// - On success, responds with [`CreateLocationOutput`](crate::operation::create_location::CreateLocationOutput) with field(s):
    ///   - [`location(Option<LocationModel>)`](crate::operation::create_location::CreateLocationOutput::location): <p>The details of the custom location you created.</p>
    /// - On failure, responds with [`SdkError<CreateLocationError>`](crate::operation::create_location::CreateLocationError)
    pub fn create_location(&self) -> crate::operation::create_location::builders::CreateLocationFluentBuilder {
        crate::operation::create_location::builders::CreateLocationFluentBuilder::new(self.handle.clone())
    }
}
