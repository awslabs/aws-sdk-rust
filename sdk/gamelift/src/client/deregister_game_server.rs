// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeregisterGameServer`](crate::operation::deregister_game_server::builders::DeregisterGameServerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`game_server_group_name(impl Into<String>)`](crate::operation::deregister_game_server::builders::DeregisterGameServerFluentBuilder::game_server_group_name) / [`set_game_server_group_name(Option<String>)`](crate::operation::deregister_game_server::builders::DeregisterGameServerFluentBuilder::set_game_server_group_name):<br>required: **true**<br><p>A unique identifier for the game server group where the game server is running.</p><br>
    ///   - [`game_server_id(impl Into<String>)`](crate::operation::deregister_game_server::builders::DeregisterGameServerFluentBuilder::game_server_id) / [`set_game_server_id(Option<String>)`](crate::operation::deregister_game_server::builders::DeregisterGameServerFluentBuilder::set_game_server_id):<br>required: **true**<br><p>A custom string that uniquely identifies the game server to deregister.</p><br>
    /// - On success, responds with [`DeregisterGameServerOutput`](crate::operation::deregister_game_server::DeregisterGameServerOutput)
    /// - On failure, responds with [`SdkError<DeregisterGameServerError>`](crate::operation::deregister_game_server::DeregisterGameServerError)
    pub fn deregister_game_server(&self) -> crate::operation::deregister_game_server::builders::DeregisterGameServerFluentBuilder {
        crate::operation::deregister_game_server::builders::DeregisterGameServerFluentBuilder::new(self.handle.clone())
    }
}
