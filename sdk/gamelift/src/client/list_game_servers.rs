// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListGameServers`](crate::client::fluent_builders::ListGameServers) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListGameServers::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`game_server_group_name(impl Into<String>)`](crate::client::fluent_builders::ListGameServers::game_server_group_name) / [`set_game_server_group_name(Option<String>)`](crate::client::fluent_builders::ListGameServers::set_game_server_group_name): <p>An identifier for the game server group to retrieve a list of game servers from. Use either the name or ARN value.</p>
    ///   - [`sort_order(SortOrder)`](crate::client::fluent_builders::ListGameServers::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::client::fluent_builders::ListGameServers::set_sort_order): <p>Indicates how to sort the returned data based on game server registration timestamp. Use <code>ASCENDING</code> to retrieve oldest game servers first, or use <code>DESCENDING</code> to retrieve newest game servers first. If this parameter is left empty, game servers are returned in no particular order.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::ListGameServers::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::ListGameServers::set_limit): <p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListGameServers::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListGameServers::set_next_token): <p>A token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value.</p>
    /// - On success, responds with [`ListGameServersOutput`](crate::output::ListGameServersOutput) with field(s):
    ///   - [`game_servers(Option<Vec<GameServer>>)`](crate::output::ListGameServersOutput::game_servers): <p>A collection of game server objects that match the request.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListGameServersOutput::next_token): <p>A token that indicates where to resume retrieving results on the next call to this operation. If no token is returned, these results represent the end of the list.</p>
    /// - On failure, responds with [`SdkError<ListGameServersError>`](crate::error::ListGameServersError)
    pub fn list_game_servers(&self) -> crate::client::fluent_builders::ListGameServers {
        crate::client::fluent_builders::ListGameServers::new(self.handle.clone())
    }
}
