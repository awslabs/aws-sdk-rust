// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeGameServerInstances`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`game_server_group_name(impl Into<String>)`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::game_server_group_name) / [`set_game_server_group_name(Option<String>)`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::set_game_server_group_name):<br>required: **true**<br><p>A unique identifier for the game server group. Use either the name or ARN value.</p><br>
    ///   - [`instance_ids(impl Into<String>)`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::instance_ids) / [`set_instance_ids(Option<Vec::<String>>)`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::set_instance_ids):<br>required: **false**<br><p>The Amazon EC2 instance IDs that you want to retrieve status on. Amazon EC2 instance IDs use a 17-character format, for example: <code>i-1234567890abcdef0</code>. To retrieve all instances in the game server group, leave this parameter empty. </p><br>
    ///   - [`limit(i32)`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::limit) / [`set_limit(Option<i32>)`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::set_limit):<br>required: **false**<br><p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::set_next_token):<br>required: **false**<br><p>A token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value.</p><br>
    /// - On success, responds with [`DescribeGameServerInstancesOutput`](crate::operation::describe_game_server_instances::DescribeGameServerInstancesOutput) with field(s):
    ///   - [`game_server_instances(Option<Vec::<GameServerInstance>>)`](crate::operation::describe_game_server_instances::DescribeGameServerInstancesOutput::game_server_instances): <p>The collection of requested game server instances.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_game_server_instances::DescribeGameServerInstancesOutput::next_token): <p>A token that indicates where to resume retrieving results on the next call to this operation. If no token is returned, these results represent the end of the list.</p>
    /// - On failure, responds with [`SdkError<DescribeGameServerInstancesError>`](crate::operation::describe_game_server_instances::DescribeGameServerInstancesError)
    pub fn describe_game_server_instances(
        &self,
    ) -> crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder {
        crate::operation::describe_game_server_instances::builders::DescribeGameServerInstancesFluentBuilder::new(self.handle.clone())
    }
}
