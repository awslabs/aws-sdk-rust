// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RequestUploadCredentials`](crate::client::fluent_builders::RequestUploadCredentials) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`build_id(impl Into<String>)`](crate::client::fluent_builders::RequestUploadCredentials::build_id) / [`set_build_id(Option<String>)`](crate::client::fluent_builders::RequestUploadCredentials::set_build_id): <p>A unique identifier for the build to get credentials for. You can use either the build ID or ARN value. </p>
    /// - On success, responds with [`RequestUploadCredentialsOutput`](crate::output::RequestUploadCredentialsOutput) with field(s):
    ///   - [`upload_credentials(Option<AwsCredentials>)`](crate::output::RequestUploadCredentialsOutput::upload_credentials): <p>Amazon Web Services credentials required when uploading a game build to the storage location. These credentials have a limited lifespan and are valid only for the build they were issued for.</p>
    ///   - [`storage_location(Option<S3Location>)`](crate::output::RequestUploadCredentialsOutput::storage_location): <p>Amazon S3 path and key, identifying where the game build files are stored.</p>
    /// - On failure, responds with [`SdkError<RequestUploadCredentialsError>`](crate::error::RequestUploadCredentialsError)
    pub fn request_upload_credentials(
        &self,
    ) -> crate::client::fluent_builders::RequestUploadCredentials {
        crate::client::fluent_builders::RequestUploadCredentials::new(self.handle.clone())
    }
}
