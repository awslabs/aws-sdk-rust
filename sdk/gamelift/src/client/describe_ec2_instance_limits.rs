// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeEC2InstanceLimits`](crate::client::fluent_builders::DescribeEC2InstanceLimits) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ec2_instance_type(Ec2InstanceType)`](crate::client::fluent_builders::DescribeEC2InstanceLimits::ec2_instance_type) / [`set_ec2_instance_type(Option<Ec2InstanceType>)`](crate::client::fluent_builders::DescribeEC2InstanceLimits::set_ec2_instance_type): <p>Name of an Amazon EC2 instance type that is supported in GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Do not specify a value for this parameter to retrieve limits for all instance types.</p>
    ///   - [`location(impl Into<String>)`](crate::client::fluent_builders::DescribeEC2InstanceLimits::location) / [`set_location(Option<String>)`](crate::client::fluent_builders::DescribeEC2InstanceLimits::set_location): <p>The name of a remote location to request instance limits for, in the form of an Amazon Web Services Region code such as <code>us-west-2</code>.</p>
    /// - On success, responds with [`DescribeEc2InstanceLimitsOutput`](crate::output::DescribeEc2InstanceLimitsOutput) with field(s):
    ///   - [`ec2_instance_limits(Option<Vec<Ec2InstanceLimit>>)`](crate::output::DescribeEc2InstanceLimitsOutput::ec2_instance_limits): <p>The maximum number of instances for the specified instance type.</p>
    /// - On failure, responds with [`SdkError<DescribeEC2InstanceLimitsError>`](crate::error::DescribeEC2InstanceLimitsError)
    pub fn describe_ec2_instance_limits(
        &self,
    ) -> crate::client::fluent_builders::DescribeEC2InstanceLimits {
        crate::client::fluent_builders::DescribeEC2InstanceLimits::new(self.handle.clone())
    }
}
