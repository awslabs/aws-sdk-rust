// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeEC2InstanceLimits`](crate::operation::describe_ec2_instance_limits::builders::DescribeEC2InstanceLimitsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ec2_instance_type(Ec2InstanceType)`](crate::operation::describe_ec2_instance_limits::builders::DescribeEC2InstanceLimitsFluentBuilder::ec2_instance_type) / [`set_ec2_instance_type(Option<Ec2InstanceType>)`](crate::operation::describe_ec2_instance_limits::builders::DescribeEC2InstanceLimitsFluentBuilder::set_ec2_instance_type):<br>required: **false**<br><p>Name of an Amazon EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Do not specify a value for this parameter to retrieve limits for all instance types.</p><br>
    ///   - [`location(impl Into<String>)`](crate::operation::describe_ec2_instance_limits::builders::DescribeEC2InstanceLimitsFluentBuilder::location) / [`set_location(Option<String>)`](crate::operation::describe_ec2_instance_limits::builders::DescribeEC2InstanceLimitsFluentBuilder::set_location):<br>required: **false**<br><p>The name of a remote location to request instance limits for, in the form of an Amazon Web Services Region code such as <code>us-west-2</code>.</p><br>
    /// - On success, responds with [`DescribeEc2InstanceLimitsOutput`](crate::operation::describe_ec2_instance_limits::DescribeEc2InstanceLimitsOutput) with field(s):
    ///   - [`ec2_instance_limits(Option<Vec::<Ec2InstanceLimit>>)`](crate::operation::describe_ec2_instance_limits::DescribeEc2InstanceLimitsOutput::ec2_instance_limits): <p>The maximum number of instances for the specified instance type.</p>
    /// - On failure, responds with [`SdkError<DescribeEC2InstanceLimitsError>`](crate::operation::describe_ec2_instance_limits::DescribeEC2InstanceLimitsError)
    pub fn describe_ec2_instance_limits(&self) -> crate::operation::describe_ec2_instance_limits::builders::DescribeEC2InstanceLimitsFluentBuilder {
        crate::operation::describe_ec2_instance_limits::builders::DescribeEC2InstanceLimitsFluentBuilder::new(self.handle.clone())
    }
}
