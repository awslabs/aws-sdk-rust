// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetComputeAuthToken`](crate::operation::get_compute_auth_token::builders::GetComputeAuthTokenFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`fleet_id(impl Into<String>)`](crate::operation::get_compute_auth_token::builders::GetComputeAuthTokenFluentBuilder::fleet_id) / [`set_fleet_id(Option<String>)`](crate::operation::get_compute_auth_token::builders::GetComputeAuthTokenFluentBuilder::set_fleet_id): <p>A unique identifier for the fleet that the compute is registered to.</p>
    ///   - [`compute_name(impl Into<String>)`](crate::operation::get_compute_auth_token::builders::GetComputeAuthTokenFluentBuilder::compute_name) / [`set_compute_name(Option<String>)`](crate::operation::get_compute_auth_token::builders::GetComputeAuthTokenFluentBuilder::set_compute_name): <p>The name of the compute resource you are requesting the authorization token for.</p>
    /// - On success, responds with [`GetComputeAuthTokenOutput`](crate::operation::get_compute_auth_token::GetComputeAuthTokenOutput) with field(s):
    ///   - [`fleet_id(Option<String>)`](crate::operation::get_compute_auth_token::GetComputeAuthTokenOutput::fleet_id): <p>A unique identifier for the fleet that the compute is registered to.</p>
    ///   - [`fleet_arn(Option<String>)`](crate::operation::get_compute_auth_token::GetComputeAuthTokenOutput::fleet_arn): <p>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>) that is assigned to a GameLift fleet resource and uniquely identifies it. ARNs are unique across all Regions. Format is <code>arn:aws:gamelift:   <region>    ::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912   </region></code>.</p>
    ///   - [`compute_name(Option<String>)`](crate::operation::get_compute_auth_token::GetComputeAuthTokenOutput::compute_name): <p>The name of the compute resource you are requesting the authorization token for.</p>
    ///   - [`compute_arn(Option<String>)`](crate::operation::get_compute_auth_token::GetComputeAuthTokenOutput::compute_arn): <p>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>) that is assigned to a GameLift compute resource and uniquely identifies it. ARNs are unique across all Regions. Format is <code>arn:aws:gamelift:   <region>    ::compute/compute-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912   </region></code> </p>
    ///   - [`auth_token(Option<String>)`](crate::operation::get_compute_auth_token::GetComputeAuthTokenOutput::auth_token): <p>The authorization token that your game server uses to authenticate with GameLift.</p>
    ///   - [`expiration_timestamp(Option<DateTime>)`](crate::operation::get_compute_auth_token::GetComputeAuthTokenOutput::expiration_timestamp): <p>The amount of time until the authorization token is no longer valid. To continue using the compute resource for game server hosting, renew the authorization token by using this operation again.</p>
    /// - On failure, responds with [`SdkError<GetComputeAuthTokenError>`](crate::operation::get_compute_auth_token::GetComputeAuthTokenError)
    pub fn get_compute_auth_token(
        &self,
    ) -> crate::operation::get_compute_auth_token::builders::GetComputeAuthTokenFluentBuilder {
        crate::operation::get_compute_auth_token::builders::GetComputeAuthTokenFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
