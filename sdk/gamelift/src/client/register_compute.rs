// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterCompute`](crate::client::fluent_builders::RegisterCompute) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`fleet_id(impl Into<String>)`](crate::client::fluent_builders::RegisterCompute::fleet_id) / [`set_fleet_id(Option<String>)`](crate::client::fluent_builders::RegisterCompute::set_fleet_id): <p>A unique identifier for the fleet to register the compute to. You can use either the fleet ID or ARN value.</p>
    ///   - [`compute_name(impl Into<String>)`](crate::client::fluent_builders::RegisterCompute::compute_name) / [`set_compute_name(Option<String>)`](crate::client::fluent_builders::RegisterCompute::set_compute_name): <p>A descriptive label that is associated with the compute resource registered to your fleet.</p>
    ///   - [`certificate_path(impl Into<String>)`](crate::client::fluent_builders::RegisterCompute::certificate_path) / [`set_certificate_path(Option<String>)`](crate::client::fluent_builders::RegisterCompute::set_certificate_path): <p>The path to the TLS certificate on your compute resource. The path and certificate are not validated by GameLift.</p>
    ///   - [`dns_name(impl Into<String>)`](crate::client::fluent_builders::RegisterCompute::dns_name) / [`set_dns_name(Option<String>)`](crate::client::fluent_builders::RegisterCompute::set_dns_name): <p>The DNS name of the compute resource. GameLift requires the DNS name or IP address to manage your compute resource.</p>
    ///   - [`ip_address(impl Into<String>)`](crate::client::fluent_builders::RegisterCompute::ip_address) / [`set_ip_address(Option<String>)`](crate::client::fluent_builders::RegisterCompute::set_ip_address): <p>The IP address of the compute resource. GameLift requires the DNS name or IP address to manage your compute resource.</p>
    ///   - [`location(impl Into<String>)`](crate::client::fluent_builders::RegisterCompute::location) / [`set_location(Option<String>)`](crate::client::fluent_builders::RegisterCompute::set_location): <p>The name of the custom location you added to the fleet you are registering this compute resource to.</p>
    /// - On success, responds with [`RegisterComputeOutput`](crate::output::RegisterComputeOutput) with field(s):
    ///   - [`compute(Option<Compute>)`](crate::output::RegisterComputeOutput::compute): <p>The details of the compute resource you registered to the specified fleet.</p>
    /// - On failure, responds with [`SdkError<RegisterComputeError>`](crate::error::RegisterComputeError)
    pub fn register_compute(&self) -> crate::client::fluent_builders::RegisterCompute {
        crate::client::fluent_builders::RegisterCompute::new(self.handle.clone())
    }
}
