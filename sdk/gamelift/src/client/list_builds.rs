// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListBuilds`](crate::operation::list_builds::builders::ListBuildsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_builds::builders::ListBuildsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`status(BuildStatus)`](crate::operation::list_builds::builders::ListBuildsFluentBuilder::status) / [`set_status(Option<BuildStatus>)`](crate::operation::list_builds::builders::ListBuildsFluentBuilder::set_status):<br>required: **false**<br><p>Build status to filter results by. To retrieve all builds, leave this parameter empty.</p>  <p>Possible build statuses include the following:</p>  <ul>   <li> <p> <b>INITIALIZED</b> -- A new build has been defined, but no files have been uploaded. You cannot create fleets for builds that are in this status. When a build is successfully created, the build status is set to this value. </p> </li>   <li> <p> <b>READY</b> -- The game build has been successfully uploaded. You can now create new fleets for this build.</p> </li>   <li> <p> <b>FAILED</b> -- The game build upload failed. You cannot create new fleets for this build. </p> </li>  </ul><br>
    ///   - [`limit(i32)`](crate::operation::list_builds::builders::ListBuildsFluentBuilder::limit) / [`set_limit(Option<i32>)`](crate::operation::list_builds::builders::ListBuildsFluentBuilder::set_limit):<br>required: **false**<br><p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_builds::builders::ListBuildsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_builds::builders::ListBuildsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, don't specify a value.</p><br>
    /// - On success, responds with [`ListBuildsOutput`](crate::operation::list_builds::ListBuildsOutput) with field(s):
    ///   - [`builds(Option<Vec::<Build>>)`](crate::operation::list_builds::ListBuildsOutput::builds): <p>A collection of build resources that match the request.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_builds::ListBuildsOutput::next_token): <p>A token that indicates where to resume retrieving results on the next call to this operation. If no token is returned, these results represent the end of the list.</p>
    /// - On failure, responds with [`SdkError<ListBuildsError>`](crate::operation::list_builds::ListBuildsError)
    pub fn list_builds(&self) -> crate::operation::list_builds::builders::ListBuildsFluentBuilder {
        crate::operation::list_builds::builders::ListBuildsFluentBuilder::new(self.handle.clone())
    }
}
