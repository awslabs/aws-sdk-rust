// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreatePlayerSessions`](crate::operation::create_player_sessions::builders::CreatePlayerSessionsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`game_session_id(impl Into<String>)`](crate::operation::create_player_sessions::builders::CreatePlayerSessionsFluentBuilder::game_session_id) / [`set_game_session_id(Option<String>)`](crate::operation::create_player_sessions::builders::CreatePlayerSessionsFluentBuilder::set_game_session_id):<br>required: **true**<br><p>A unique identifier for the game session to add players to.</p><br>
    ///   - [`player_ids(impl Into<String>)`](crate::operation::create_player_sessions::builders::CreatePlayerSessionsFluentBuilder::player_ids) / [`set_player_ids(Option<Vec::<String>>)`](crate::operation::create_player_sessions::builders::CreatePlayerSessionsFluentBuilder::set_player_ids):<br>required: **true**<br><p>List of unique identifiers for the players to be added.</p><br>
    ///   - [`player_data_map(impl Into<String>, impl Into<String>)`](crate::operation::create_player_sessions::builders::CreatePlayerSessionsFluentBuilder::player_data_map) / [`set_player_data_map(Option<HashMap::<String, String>>)`](crate::operation::create_player_sessions::builders::CreatePlayerSessionsFluentBuilder::set_player_data_map):<br>required: **false**<br><p>Map of string pairs, each specifying a player ID and a set of developer-defined information related to the player. Amazon GameLift does not use this data, so it can be formatted as needed for use in the game. Any player data strings for player IDs that are not included in the <code>PlayerIds</code> parameter are ignored. </p><br>
    /// - On success, responds with [`CreatePlayerSessionsOutput`](crate::operation::create_player_sessions::CreatePlayerSessionsOutput) with field(s):
    ///   - [`player_sessions(Option<Vec::<PlayerSession>>)`](crate::operation::create_player_sessions::CreatePlayerSessionsOutput::player_sessions): <p>A collection of player session objects created for the added players.</p>
    /// - On failure, responds with [`SdkError<CreatePlayerSessionsError>`](crate::operation::create_player_sessions::CreatePlayerSessionsError)
    pub fn create_player_sessions(&self) -> crate::operation::create_player_sessions::builders::CreatePlayerSessionsFluentBuilder {
        crate::operation::create_player_sessions::builders::CreatePlayerSessionsFluentBuilder::new(self.handle.clone())
    }
}
