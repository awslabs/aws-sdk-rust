// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateGameServer`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`game_server_group_name(impl Into<String>)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::game_server_group_name) / [`set_game_server_group_name(Option<String>)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::set_game_server_group_name):<br>required: **true**<br><p>A unique identifier for the game server group where the game server is running.</p><br>
    ///   - [`game_server_id(impl Into<String>)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::game_server_id) / [`set_game_server_id(Option<String>)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::set_game_server_id):<br>required: **true**<br><p>A custom string that uniquely identifies the game server to update.</p><br>
    ///   - [`game_server_data(impl Into<String>)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::game_server_data) / [`set_game_server_data(Option<String>)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::set_game_server_data):<br>required: **false**<br><p>A set of custom game server properties, formatted as a single string value. This data is passed to a game client or service when it requests information on game servers. </p><br>
    ///   - [`utilization_status(GameServerUtilizationStatus)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::utilization_status) / [`set_utilization_status(Option<GameServerUtilizationStatus>)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::set_utilization_status):<br>required: **false**<br><p>Indicates if the game server is available or is currently hosting gameplay. You can update a game server status from <code>AVAILABLE</code> to <code>UTILIZED</code>, but you can't change a the status from <code>UTILIZED</code> to <code>AVAILABLE</code>.</p><br>
    ///   - [`health_check(GameServerHealthCheck)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::health_check) / [`set_health_check(Option<GameServerHealthCheck>)`](crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::set_health_check):<br>required: **false**<br><p>Indicates health status of the game server. A request that includes this parameter updates the game server's <i>LastHealthCheckTime</i> timestamp. </p><br>
    /// - On success, responds with [`UpdateGameServerOutput`](crate::operation::update_game_server::UpdateGameServerOutput) with field(s):
    ///   - [`game_server(Option<GameServer>)`](crate::operation::update_game_server::UpdateGameServerOutput::game_server): <p>Object that describes the newly updated game server.</p>
    /// - On failure, responds with [`SdkError<UpdateGameServerError>`](crate::operation::update_game_server::UpdateGameServerError)
    pub fn update_game_server(&self) -> crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder {
        crate::operation::update_game_server::builders::UpdateGameServerFluentBuilder::new(self.handle.clone())
    }
}
