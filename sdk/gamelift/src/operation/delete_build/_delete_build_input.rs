// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteBuildInput {
    /// <p>A unique identifier for the build to delete. You can use either the build ID or ARN value. </p>
    pub build_id: ::std::option::Option<::std::string::String>,
}
impl DeleteBuildInput {
    /// <p>A unique identifier for the build to delete. You can use either the build ID or ARN value. </p>
    pub fn build_id(&self) -> ::std::option::Option<&str> {
        self.build_id.as_deref()
    }
}
impl DeleteBuildInput {
    /// Creates a new builder-style object to manufacture [`DeleteBuildInput`](crate::operation::delete_build::DeleteBuildInput).
    pub fn builder() -> crate::operation::delete_build::builders::DeleteBuildInputBuilder {
        crate::operation::delete_build::builders::DeleteBuildInputBuilder::default()
    }
}

/// A builder for [`DeleteBuildInput`](crate::operation::delete_build::DeleteBuildInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteBuildInputBuilder {
    pub(crate) build_id: ::std::option::Option<::std::string::String>,
}
impl DeleteBuildInputBuilder {
    /// <p>A unique identifier for the build to delete. You can use either the build ID or ARN value. </p>
    /// This field is required.
    pub fn build_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.build_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the build to delete. You can use either the build ID or ARN value. </p>
    pub fn set_build_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.build_id = input;
        self
    }
    /// <p>A unique identifier for the build to delete. You can use either the build ID or ARN value. </p>
    pub fn get_build_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.build_id
    }
    /// Consumes the builder and constructs a [`DeleteBuildInput`](crate::operation::delete_build::DeleteBuildInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::delete_build::DeleteBuildInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_build::DeleteBuildInput { build_id: self.build_id })
    }
}
