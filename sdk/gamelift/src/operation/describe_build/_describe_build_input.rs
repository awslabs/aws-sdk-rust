// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeBuildInput {
    /// <p>A unique identifier for the build to retrieve properties for. You can use either the build ID or ARN value. </p>
    #[doc(hidden)]
    pub build_id: std::option::Option<std::string::String>,
}
impl DescribeBuildInput {
    /// <p>A unique identifier for the build to retrieve properties for. You can use either the build ID or ARN value. </p>
    pub fn build_id(&self) -> std::option::Option<&str> {
        self.build_id.as_deref()
    }
}
impl DescribeBuildInput {
    /// Creates a new builder-style object to manufacture [`DescribeBuildInput`](crate::operation::describe_build::DescribeBuildInput).
    pub fn builder() -> crate::operation::describe_build::builders::DescribeBuildInputBuilder {
        crate::operation::describe_build::builders::DescribeBuildInputBuilder::default()
    }
}

/// A builder for [`DescribeBuildInput`](crate::operation::describe_build::DescribeBuildInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeBuildInputBuilder {
    pub(crate) build_id: std::option::Option<std::string::String>,
}
impl DescribeBuildInputBuilder {
    /// <p>A unique identifier for the build to retrieve properties for. You can use either the build ID or ARN value. </p>
    pub fn build_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.build_id = Some(input.into());
        self
    }
    /// <p>A unique identifier for the build to retrieve properties for. You can use either the build ID or ARN value. </p>
    pub fn set_build_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.build_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeBuildInput`](crate::operation::describe_build::DescribeBuildInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_build::DescribeBuildInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_build::DescribeBuildInput {
            build_id: self.build_id,
        })
    }
}
