// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeVpcPeeringConnectionsOutput {
    /// <p>A collection of VPC peering connection records that match the request.</p>
    #[doc(hidden)]
    pub vpc_peering_connections:
        std::option::Option<std::vec::Vec<crate::types::VpcPeeringConnection>>,
    _request_id: Option<String>,
}
impl DescribeVpcPeeringConnectionsOutput {
    /// <p>A collection of VPC peering connection records that match the request.</p>
    pub fn vpc_peering_connections(
        &self,
    ) -> std::option::Option<&[crate::types::VpcPeeringConnection]> {
        self.vpc_peering_connections.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeVpcPeeringConnectionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeVpcPeeringConnectionsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeVpcPeeringConnectionsOutput`](crate::operation::describe_vpc_peering_connections::DescribeVpcPeeringConnectionsOutput).
    pub fn builder() -> crate::operation::describe_vpc_peering_connections::builders::DescribeVpcPeeringConnectionsOutputBuilder{
        crate::operation::describe_vpc_peering_connections::builders::DescribeVpcPeeringConnectionsOutputBuilder::default()
    }
}

/// A builder for [`DescribeVpcPeeringConnectionsOutput`](crate::operation::describe_vpc_peering_connections::DescribeVpcPeeringConnectionsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeVpcPeeringConnectionsOutputBuilder {
    pub(crate) vpc_peering_connections:
        std::option::Option<std::vec::Vec<crate::types::VpcPeeringConnection>>,
    _request_id: Option<String>,
}
impl DescribeVpcPeeringConnectionsOutputBuilder {
    /// Appends an item to `vpc_peering_connections`.
    ///
    /// To override the contents of this collection use [`set_vpc_peering_connections`](Self::set_vpc_peering_connections).
    ///
    /// <p>A collection of VPC peering connection records that match the request.</p>
    pub fn vpc_peering_connections(mut self, input: crate::types::VpcPeeringConnection) -> Self {
        let mut v = self.vpc_peering_connections.unwrap_or_default();
        v.push(input);
        self.vpc_peering_connections = Some(v);
        self
    }
    /// <p>A collection of VPC peering connection records that match the request.</p>
    pub fn set_vpc_peering_connections(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::VpcPeeringConnection>>,
    ) -> Self {
        self.vpc_peering_connections = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeVpcPeeringConnectionsOutput`](crate::operation::describe_vpc_peering_connections::DescribeVpcPeeringConnectionsOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_vpc_peering_connections::DescribeVpcPeeringConnectionsOutput
    {
        crate::operation::describe_vpc_peering_connections::DescribeVpcPeeringConnectionsOutput {
            vpc_peering_connections: self.vpc_peering_connections,
            _request_id: self._request_id,
        }
    }
}
