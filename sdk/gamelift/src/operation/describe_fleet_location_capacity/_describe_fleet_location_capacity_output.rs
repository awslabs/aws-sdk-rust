// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeFleetLocationCapacityOutput {
    /// <p>Resource capacity information for the requested fleet location. Capacity objects are returned only for fleets and locations that currently exist.</p>
    #[doc(hidden)]
    pub fleet_capacity: std::option::Option<crate::types::FleetCapacity>,
    _request_id: Option<String>,
}
impl DescribeFleetLocationCapacityOutput {
    /// <p>Resource capacity information for the requested fleet location. Capacity objects are returned only for fleets and locations that currently exist.</p>
    pub fn fleet_capacity(&self) -> std::option::Option<&crate::types::FleetCapacity> {
        self.fleet_capacity.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeFleetLocationCapacityOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeFleetLocationCapacityOutput {
    /// Creates a new builder-style object to manufacture [`DescribeFleetLocationCapacityOutput`](crate::operation::describe_fleet_location_capacity::DescribeFleetLocationCapacityOutput).
    pub fn builder() -> crate::operation::describe_fleet_location_capacity::builders::DescribeFleetLocationCapacityOutputBuilder{
        crate::operation::describe_fleet_location_capacity::builders::DescribeFleetLocationCapacityOutputBuilder::default()
    }
}

/// A builder for [`DescribeFleetLocationCapacityOutput`](crate::operation::describe_fleet_location_capacity::DescribeFleetLocationCapacityOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeFleetLocationCapacityOutputBuilder {
    pub(crate) fleet_capacity: std::option::Option<crate::types::FleetCapacity>,
    _request_id: Option<String>,
}
impl DescribeFleetLocationCapacityOutputBuilder {
    /// <p>Resource capacity information for the requested fleet location. Capacity objects are returned only for fleets and locations that currently exist.</p>
    pub fn fleet_capacity(mut self, input: crate::types::FleetCapacity) -> Self {
        self.fleet_capacity = Some(input);
        self
    }
    /// <p>Resource capacity information for the requested fleet location. Capacity objects are returned only for fleets and locations that currently exist.</p>
    pub fn set_fleet_capacity(
        mut self,
        input: std::option::Option<crate::types::FleetCapacity>,
    ) -> Self {
        self.fleet_capacity = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeFleetLocationCapacityOutput`](crate::operation::describe_fleet_location_capacity::DescribeFleetLocationCapacityOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_fleet_location_capacity::DescribeFleetLocationCapacityOutput
    {
        crate::operation::describe_fleet_location_capacity::DescribeFleetLocationCapacityOutput {
            fleet_capacity: self.fleet_capacity,
            _request_id: self._request_id,
        }
    }
}
