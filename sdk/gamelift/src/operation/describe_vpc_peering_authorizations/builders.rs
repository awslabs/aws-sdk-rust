// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_vpc_peering_authorizations::_describe_vpc_peering_authorizations_output::DescribeVpcPeeringAuthorizationsOutputBuilder;

pub use crate::operation::describe_vpc_peering_authorizations::_describe_vpc_peering_authorizations_input::DescribeVpcPeeringAuthorizationsInputBuilder;

impl DescribeVpcPeeringAuthorizationsInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.describe_vpc_peering_authorizations();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `DescribeVpcPeeringAuthorizations`.
///
/// <p>Retrieves valid VPC peering authorizations that are pending for the Amazon Web Services account. This operation returns all VPC peering authorizations and requests for peering. This includes those initiated and received by this account. </p>
/// <p> <b>Related actions</b> </p>
/// <p> <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct DescribeVpcPeeringAuthorizationsFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::describe_vpc_peering_authorizations::builders::DescribeVpcPeeringAuthorizationsInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsOutput,
        crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsError,
    > for DescribeVpcPeeringAuthorizationsFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsOutput,
            crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl DescribeVpcPeeringAuthorizationsFluentBuilder {
    /// Creates a new `DescribeVpcPeeringAuthorizations`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the DescribeVpcPeeringAuthorizations as a reference.
    pub fn as_input(&self) -> &crate::operation::describe_vpc_peering_authorizations::builders::DescribeVpcPeeringAuthorizationsInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizations::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizations::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsOutput,
        crate::operation::describe_vpc_peering_authorizations::DescribeVpcPeeringAuthorizationsError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl Into<crate::config::Builder>) -> Self {
        self.set_config_override(Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
}
