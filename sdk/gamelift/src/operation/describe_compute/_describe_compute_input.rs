// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeComputeInput {
    /// <p>A unique identifier for the fleet the compute is registered to.</p>
    #[doc(hidden)]
    pub fleet_id: std::option::Option<std::string::String>,
    /// <p>A descriptive label that is associated with the compute resource registered to your fleet.</p>
    #[doc(hidden)]
    pub compute_name: std::option::Option<std::string::String>,
}
impl DescribeComputeInput {
    /// <p>A unique identifier for the fleet the compute is registered to.</p>
    pub fn fleet_id(&self) -> std::option::Option<&str> {
        self.fleet_id.as_deref()
    }
    /// <p>A descriptive label that is associated with the compute resource registered to your fleet.</p>
    pub fn compute_name(&self) -> std::option::Option<&str> {
        self.compute_name.as_deref()
    }
}
impl DescribeComputeInput {
    /// Creates a new builder-style object to manufacture [`DescribeComputeInput`](crate::operation::describe_compute::DescribeComputeInput).
    pub fn builder() -> crate::operation::describe_compute::builders::DescribeComputeInputBuilder {
        crate::operation::describe_compute::builders::DescribeComputeInputBuilder::default()
    }
}

/// A builder for [`DescribeComputeInput`](crate::operation::describe_compute::DescribeComputeInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeComputeInputBuilder {
    pub(crate) fleet_id: std::option::Option<std::string::String>,
    pub(crate) compute_name: std::option::Option<std::string::String>,
}
impl DescribeComputeInputBuilder {
    /// <p>A unique identifier for the fleet the compute is registered to.</p>
    pub fn fleet_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.fleet_id = Some(input.into());
        self
    }
    /// <p>A unique identifier for the fleet the compute is registered to.</p>
    pub fn set_fleet_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.fleet_id = input;
        self
    }
    /// <p>A descriptive label that is associated with the compute resource registered to your fleet.</p>
    pub fn compute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.compute_name = Some(input.into());
        self
    }
    /// <p>A descriptive label that is associated with the compute resource registered to your fleet.</p>
    pub fn set_compute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.compute_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeComputeInput`](crate::operation::describe_compute::DescribeComputeInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_compute::DescribeComputeInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_compute::DescribeComputeInput {
            fleet_id: self.fleet_id,
            compute_name: self.compute_name,
        })
    }
}
