// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeFleetCapacityOutput {
    /// <p>A collection of objects that contains capacity information for each requested fleet ID. Capacity objects are returned only for fleets that currently exist. Changes in desired instance value can take up to 1 minute to be reflected.</p>
    pub fleet_capacity: ::std::option::Option<::std::vec::Vec<crate::types::FleetCapacity>>,
    /// <p>A token that indicates where to resume retrieving results on the next call to this operation. If no token is returned, these results represent the end of the list.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeFleetCapacityOutput {
    /// <p>A collection of objects that contains capacity information for each requested fleet ID. Capacity objects are returned only for fleets that currently exist. Changes in desired instance value can take up to 1 minute to be reflected.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.fleet_capacity.is_none()`.
    pub fn fleet_capacity(&self) -> &[crate::types::FleetCapacity] {
        self.fleet_capacity.as_deref().unwrap_or_default()
    }
    /// <p>A token that indicates where to resume retrieving results on the next call to this operation. If no token is returned, these results represent the end of the list.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for DescribeFleetCapacityOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeFleetCapacityOutput {
    /// Creates a new builder-style object to manufacture [`DescribeFleetCapacityOutput`](crate::operation::describe_fleet_capacity::DescribeFleetCapacityOutput).
    pub fn builder() -> crate::operation::describe_fleet_capacity::builders::DescribeFleetCapacityOutputBuilder {
        crate::operation::describe_fleet_capacity::builders::DescribeFleetCapacityOutputBuilder::default()
    }
}

/// A builder for [`DescribeFleetCapacityOutput`](crate::operation::describe_fleet_capacity::DescribeFleetCapacityOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeFleetCapacityOutputBuilder {
    pub(crate) fleet_capacity: ::std::option::Option<::std::vec::Vec<crate::types::FleetCapacity>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeFleetCapacityOutputBuilder {
    /// Appends an item to `fleet_capacity`.
    ///
    /// To override the contents of this collection use [`set_fleet_capacity`](Self::set_fleet_capacity).
    ///
    /// <p>A collection of objects that contains capacity information for each requested fleet ID. Capacity objects are returned only for fleets that currently exist. Changes in desired instance value can take up to 1 minute to be reflected.</p>
    pub fn fleet_capacity(mut self, input: crate::types::FleetCapacity) -> Self {
        let mut v = self.fleet_capacity.unwrap_or_default();
        v.push(input);
        self.fleet_capacity = ::std::option::Option::Some(v);
        self
    }
    /// <p>A collection of objects that contains capacity information for each requested fleet ID. Capacity objects are returned only for fleets that currently exist. Changes in desired instance value can take up to 1 minute to be reflected.</p>
    pub fn set_fleet_capacity(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::FleetCapacity>>) -> Self {
        self.fleet_capacity = input;
        self
    }
    /// <p>A collection of objects that contains capacity information for each requested fleet ID. Capacity objects are returned only for fleets that currently exist. Changes in desired instance value can take up to 1 minute to be reflected.</p>
    pub fn get_fleet_capacity(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::FleetCapacity>> {
        &self.fleet_capacity
    }
    /// <p>A token that indicates where to resume retrieving results on the next call to this operation. If no token is returned, these results represent the end of the list.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A token that indicates where to resume retrieving results on the next call to this operation. If no token is returned, these results represent the end of the list.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>A token that indicates where to resume retrieving results on the next call to this operation. If no token is returned, these results represent the end of the list.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeFleetCapacityOutput`](crate::operation::describe_fleet_capacity::DescribeFleetCapacityOutput).
    pub fn build(self) -> crate::operation::describe_fleet_capacity::DescribeFleetCapacityOutput {
        crate::operation::describe_fleet_capacity::DescribeFleetCapacityOutput {
            fleet_capacity: self.fleet_capacity,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
