// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// When writing a match expression against `Ec2InstanceType`, it is important to ensure
/// your code is forward-compatible. That is, if a match arm handles a case for a
/// feature that is supported by the service but has not been represented as an enum
/// variant in a current version of SDK, your code should continue to work when you
/// upgrade SDK to a future version in which the enum does include a variant for that
/// feature.
///
/// Here is an example of how you can make a match expression forward-compatible:
///
/// ```text
/// # let ec2instancetype = unimplemented!();
/// match ec2instancetype {
///     Ec2InstanceType::C32xlarge => { /* ... */ },
///     Ec2InstanceType::C34xlarge => { /* ... */ },
///     Ec2InstanceType::C38xlarge => { /* ... */ },
///     Ec2InstanceType::C3Large => { /* ... */ },
///     Ec2InstanceType::C3Xlarge => { /* ... */ },
///     Ec2InstanceType::C42xlarge => { /* ... */ },
///     Ec2InstanceType::C44xlarge => { /* ... */ },
///     Ec2InstanceType::C48xlarge => { /* ... */ },
///     Ec2InstanceType::C4Large => { /* ... */ },
///     Ec2InstanceType::C4Xlarge => { /* ... */ },
///     Ec2InstanceType::C512xlarge => { /* ... */ },
///     Ec2InstanceType::C518xlarge => { /* ... */ },
///     Ec2InstanceType::C524xlarge => { /* ... */ },
///     Ec2InstanceType::C52xlarge => { /* ... */ },
///     Ec2InstanceType::C54xlarge => { /* ... */ },
///     Ec2InstanceType::C59xlarge => { /* ... */ },
///     Ec2InstanceType::C5Large => { /* ... */ },
///     Ec2InstanceType::C5Xlarge => { /* ... */ },
///     Ec2InstanceType::C5a12xlarge => { /* ... */ },
///     Ec2InstanceType::C5a16xlarge => { /* ... */ },
///     Ec2InstanceType::C5a24xlarge => { /* ... */ },
///     Ec2InstanceType::C5a2xlarge => { /* ... */ },
///     Ec2InstanceType::C5a4xlarge => { /* ... */ },
///     Ec2InstanceType::C5a8xlarge => { /* ... */ },
///     Ec2InstanceType::C5aLarge => { /* ... */ },
///     Ec2InstanceType::C5aXlarge => { /* ... */ },
///     Ec2InstanceType::C5d12xlarge => { /* ... */ },
///     Ec2InstanceType::C5d18xlarge => { /* ... */ },
///     Ec2InstanceType::C5d24xlarge => { /* ... */ },
///     Ec2InstanceType::C5d2xlarge => { /* ... */ },
///     Ec2InstanceType::C5d4xlarge => { /* ... */ },
///     Ec2InstanceType::C5d9xlarge => { /* ... */ },
///     Ec2InstanceType::C5dLarge => { /* ... */ },
///     Ec2InstanceType::C5dXlarge => { /* ... */ },
///     Ec2InstanceType::C6a12xlarge => { /* ... */ },
///     Ec2InstanceType::C6a16xlarge => { /* ... */ },
///     Ec2InstanceType::C6a24xlarge => { /* ... */ },
///     Ec2InstanceType::C6a2xlarge => { /* ... */ },
///     Ec2InstanceType::C6a4xlarge => { /* ... */ },
///     Ec2InstanceType::C6a8xlarge => { /* ... */ },
///     Ec2InstanceType::C6aLarge => { /* ... */ },
///     Ec2InstanceType::C6aXlarge => { /* ... */ },
///     Ec2InstanceType::C6i12xlarge => { /* ... */ },
///     Ec2InstanceType::C6i16xlarge => { /* ... */ },
///     Ec2InstanceType::C6i24xlarge => { /* ... */ },
///     Ec2InstanceType::C6i2xlarge => { /* ... */ },
///     Ec2InstanceType::C6i4xlarge => { /* ... */ },
///     Ec2InstanceType::C6i8xlarge => { /* ... */ },
///     Ec2InstanceType::C6iLarge => { /* ... */ },
///     Ec2InstanceType::C6iXlarge => { /* ... */ },
///     Ec2InstanceType::M32xlarge => { /* ... */ },
///     Ec2InstanceType::M3Large => { /* ... */ },
///     Ec2InstanceType::M3Medium => { /* ... */ },
///     Ec2InstanceType::M3Xlarge => { /* ... */ },
///     Ec2InstanceType::M410xlarge => { /* ... */ },
///     Ec2InstanceType::M42xlarge => { /* ... */ },
///     Ec2InstanceType::M44xlarge => { /* ... */ },
///     Ec2InstanceType::M4Large => { /* ... */ },
///     Ec2InstanceType::M4Xlarge => { /* ... */ },
///     Ec2InstanceType::M512xlarge => { /* ... */ },
///     Ec2InstanceType::M516xlarge => { /* ... */ },
///     Ec2InstanceType::M524xlarge => { /* ... */ },
///     Ec2InstanceType::M52xlarge => { /* ... */ },
///     Ec2InstanceType::M54xlarge => { /* ... */ },
///     Ec2InstanceType::M58xlarge => { /* ... */ },
///     Ec2InstanceType::M5Large => { /* ... */ },
///     Ec2InstanceType::M5Xlarge => { /* ... */ },
///     Ec2InstanceType::M5a12xlarge => { /* ... */ },
///     Ec2InstanceType::M5a16xlarge => { /* ... */ },
///     Ec2InstanceType::M5a24xlarge => { /* ... */ },
///     Ec2InstanceType::M5a2xlarge => { /* ... */ },
///     Ec2InstanceType::M5a4xlarge => { /* ... */ },
///     Ec2InstanceType::M5a8xlarge => { /* ... */ },
///     Ec2InstanceType::M5aLarge => { /* ... */ },
///     Ec2InstanceType::M5aXlarge => { /* ... */ },
///     Ec2InstanceType::R32xlarge => { /* ... */ },
///     Ec2InstanceType::R34xlarge => { /* ... */ },
///     Ec2InstanceType::R38xlarge => { /* ... */ },
///     Ec2InstanceType::R3Large => { /* ... */ },
///     Ec2InstanceType::R3Xlarge => { /* ... */ },
///     Ec2InstanceType::R416xlarge => { /* ... */ },
///     Ec2InstanceType::R42xlarge => { /* ... */ },
///     Ec2InstanceType::R44xlarge => { /* ... */ },
///     Ec2InstanceType::R48xlarge => { /* ... */ },
///     Ec2InstanceType::R4Large => { /* ... */ },
///     Ec2InstanceType::R4Xlarge => { /* ... */ },
///     Ec2InstanceType::R512xlarge => { /* ... */ },
///     Ec2InstanceType::R516xlarge => { /* ... */ },
///     Ec2InstanceType::R524xlarge => { /* ... */ },
///     Ec2InstanceType::R52xlarge => { /* ... */ },
///     Ec2InstanceType::R54xlarge => { /* ... */ },
///     Ec2InstanceType::R58xlarge => { /* ... */ },
///     Ec2InstanceType::R5Large => { /* ... */ },
///     Ec2InstanceType::R5Xlarge => { /* ... */ },
///     Ec2InstanceType::R5a12xlarge => { /* ... */ },
///     Ec2InstanceType::R5a16xlarge => { /* ... */ },
///     Ec2InstanceType::R5a24xlarge => { /* ... */ },
///     Ec2InstanceType::R5a2xlarge => { /* ... */ },
///     Ec2InstanceType::R5a4xlarge => { /* ... */ },
///     Ec2InstanceType::R5a8xlarge => { /* ... */ },
///     Ec2InstanceType::R5aLarge => { /* ... */ },
///     Ec2InstanceType::R5aXlarge => { /* ... */ },
///     Ec2InstanceType::R5d12xlarge => { /* ... */ },
///     Ec2InstanceType::R5d16xlarge => { /* ... */ },
///     Ec2InstanceType::R5d24xlarge => { /* ... */ },
///     Ec2InstanceType::R5d2xlarge => { /* ... */ },
///     Ec2InstanceType::R5d4xlarge => { /* ... */ },
///     Ec2InstanceType::R5d8xlarge => { /* ... */ },
///     Ec2InstanceType::R5dLarge => { /* ... */ },
///     Ec2InstanceType::R5dXlarge => { /* ... */ },
///     Ec2InstanceType::T2Large => { /* ... */ },
///     Ec2InstanceType::T2Medium => { /* ... */ },
///     Ec2InstanceType::T2Micro => { /* ... */ },
///     Ec2InstanceType::T2Small => { /* ... */ },
///     other @ _ if other.as_str() == "NewFeature" => { /* handles a case for `NewFeature` */ },
///     _ => { /* ... */ },
/// }
/// ```
/// The above code demonstrates that when `ec2instancetype` represents
/// `NewFeature`, the execution path will lead to the second last match arm,
/// even though the enum does not contain a variant `Ec2InstanceType::NewFeature`
/// in the current version of SDK. The reason is that the variable `other`,
/// created by the `@` operator, is bound to
/// `Ec2InstanceType::Unknown(UnknownVariantValue("NewFeature".to_owned()))`
/// and calling `as_str` on it yields `"NewFeature"`.
/// This match expression is forward-compatible when executed with a newer
/// version of SDK where the variant `Ec2InstanceType::NewFeature` is defined.
/// Specifically, when `ec2instancetype` represents `NewFeature`,
/// the execution path will hit the second last match arm as before by virtue of
/// calling `as_str` on `Ec2InstanceType::NewFeature` also yielding `"NewFeature"`.
///
/// Explicitly matching on the `Unknown` variant should
/// be avoided for two reasons:
/// - The inner data `UnknownVariantValue` is opaque, and no further information can be extracted.
/// - It might inadvertently shadow other intended match arms.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(
    std::clone::Clone,
    std::cmp::Eq,
    std::cmp::Ord,
    std::cmp::PartialEq,
    std::cmp::PartialOrd,
    std::fmt::Debug,
    std::hash::Hash,
)]
pub enum Ec2InstanceType {
    #[allow(missing_docs)] // documentation missing in model
    C32xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C34xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C38xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C3Large,
    #[allow(missing_docs)] // documentation missing in model
    C3Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C42xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C44xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C48xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C4Large,
    #[allow(missing_docs)] // documentation missing in model
    C4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C512xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C518xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C524xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C52xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C54xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C59xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5Large,
    #[allow(missing_docs)] // documentation missing in model
    C5Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5a12xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5a16xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5a24xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5a2xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5a4xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5a8xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5aLarge,
    #[allow(missing_docs)] // documentation missing in model
    C5aXlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5d12xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5d18xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5d24xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5d2xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5d4xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5d9xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C5dLarge,
    #[allow(missing_docs)] // documentation missing in model
    C5dXlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6a12xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6a16xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6a24xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6a2xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6a4xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6a8xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6aLarge,
    #[allow(missing_docs)] // documentation missing in model
    C6aXlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6i12xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6i16xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6i24xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6i2xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6i4xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6i8xlarge,
    #[allow(missing_docs)] // documentation missing in model
    C6iLarge,
    #[allow(missing_docs)] // documentation missing in model
    C6iXlarge,
    #[allow(missing_docs)] // documentation missing in model
    M32xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M3Large,
    #[allow(missing_docs)] // documentation missing in model
    M3Medium,
    #[allow(missing_docs)] // documentation missing in model
    M3Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M410xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M42xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M44xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M4Large,
    #[allow(missing_docs)] // documentation missing in model
    M4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M512xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M516xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M524xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M52xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M54xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M58xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M5Large,
    #[allow(missing_docs)] // documentation missing in model
    M5Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M5a12xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M5a16xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M5a24xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M5a2xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M5a4xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M5a8xlarge,
    #[allow(missing_docs)] // documentation missing in model
    M5aLarge,
    #[allow(missing_docs)] // documentation missing in model
    M5aXlarge,
    #[allow(missing_docs)] // documentation missing in model
    R32xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R34xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R38xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R3Large,
    #[allow(missing_docs)] // documentation missing in model
    R3Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R416xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R42xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R44xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R48xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R4Large,
    #[allow(missing_docs)] // documentation missing in model
    R4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R512xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R516xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R524xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R52xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R54xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R58xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5Large,
    #[allow(missing_docs)] // documentation missing in model
    R5Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5a12xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5a16xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5a24xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5a2xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5a4xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5a8xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5aLarge,
    #[allow(missing_docs)] // documentation missing in model
    R5aXlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5d12xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5d16xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5d24xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5d2xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5d4xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5d8xlarge,
    #[allow(missing_docs)] // documentation missing in model
    R5dLarge,
    #[allow(missing_docs)] // documentation missing in model
    R5dXlarge,
    #[allow(missing_docs)] // documentation missing in model
    T2Large,
    #[allow(missing_docs)] // documentation missing in model
    T2Medium,
    #[allow(missing_docs)] // documentation missing in model
    T2Micro,
    #[allow(missing_docs)] // documentation missing in model
    T2Small,
    /// `Unknown` contains new variants that have been added since this code was generated.
    Unknown(crate::primitives::UnknownVariantValue),
}
impl std::convert::From<&str> for Ec2InstanceType {
    fn from(s: &str) -> Self {
        match s {
            "c3.2xlarge" => Ec2InstanceType::C32xlarge,
            "c3.4xlarge" => Ec2InstanceType::C34xlarge,
            "c3.8xlarge" => Ec2InstanceType::C38xlarge,
            "c3.large" => Ec2InstanceType::C3Large,
            "c3.xlarge" => Ec2InstanceType::C3Xlarge,
            "c4.2xlarge" => Ec2InstanceType::C42xlarge,
            "c4.4xlarge" => Ec2InstanceType::C44xlarge,
            "c4.8xlarge" => Ec2InstanceType::C48xlarge,
            "c4.large" => Ec2InstanceType::C4Large,
            "c4.xlarge" => Ec2InstanceType::C4Xlarge,
            "c5.12xlarge" => Ec2InstanceType::C512xlarge,
            "c5.18xlarge" => Ec2InstanceType::C518xlarge,
            "c5.24xlarge" => Ec2InstanceType::C524xlarge,
            "c5.2xlarge" => Ec2InstanceType::C52xlarge,
            "c5.4xlarge" => Ec2InstanceType::C54xlarge,
            "c5.9xlarge" => Ec2InstanceType::C59xlarge,
            "c5.large" => Ec2InstanceType::C5Large,
            "c5.xlarge" => Ec2InstanceType::C5Xlarge,
            "c5a.12xlarge" => Ec2InstanceType::C5a12xlarge,
            "c5a.16xlarge" => Ec2InstanceType::C5a16xlarge,
            "c5a.24xlarge" => Ec2InstanceType::C5a24xlarge,
            "c5a.2xlarge" => Ec2InstanceType::C5a2xlarge,
            "c5a.4xlarge" => Ec2InstanceType::C5a4xlarge,
            "c5a.8xlarge" => Ec2InstanceType::C5a8xlarge,
            "c5a.large" => Ec2InstanceType::C5aLarge,
            "c5a.xlarge" => Ec2InstanceType::C5aXlarge,
            "c5d.12xlarge" => Ec2InstanceType::C5d12xlarge,
            "c5d.18xlarge" => Ec2InstanceType::C5d18xlarge,
            "c5d.24xlarge" => Ec2InstanceType::C5d24xlarge,
            "c5d.2xlarge" => Ec2InstanceType::C5d2xlarge,
            "c5d.4xlarge" => Ec2InstanceType::C5d4xlarge,
            "c5d.9xlarge" => Ec2InstanceType::C5d9xlarge,
            "c5d.large" => Ec2InstanceType::C5dLarge,
            "c5d.xlarge" => Ec2InstanceType::C5dXlarge,
            "c6a.12xlarge" => Ec2InstanceType::C6a12xlarge,
            "c6a.16xlarge" => Ec2InstanceType::C6a16xlarge,
            "c6a.24xlarge" => Ec2InstanceType::C6a24xlarge,
            "c6a.2xlarge" => Ec2InstanceType::C6a2xlarge,
            "c6a.4xlarge" => Ec2InstanceType::C6a4xlarge,
            "c6a.8xlarge" => Ec2InstanceType::C6a8xlarge,
            "c6a.large" => Ec2InstanceType::C6aLarge,
            "c6a.xlarge" => Ec2InstanceType::C6aXlarge,
            "c6i.12xlarge" => Ec2InstanceType::C6i12xlarge,
            "c6i.16xlarge" => Ec2InstanceType::C6i16xlarge,
            "c6i.24xlarge" => Ec2InstanceType::C6i24xlarge,
            "c6i.2xlarge" => Ec2InstanceType::C6i2xlarge,
            "c6i.4xlarge" => Ec2InstanceType::C6i4xlarge,
            "c6i.8xlarge" => Ec2InstanceType::C6i8xlarge,
            "c6i.large" => Ec2InstanceType::C6iLarge,
            "c6i.xlarge" => Ec2InstanceType::C6iXlarge,
            "m3.2xlarge" => Ec2InstanceType::M32xlarge,
            "m3.large" => Ec2InstanceType::M3Large,
            "m3.medium" => Ec2InstanceType::M3Medium,
            "m3.xlarge" => Ec2InstanceType::M3Xlarge,
            "m4.10xlarge" => Ec2InstanceType::M410xlarge,
            "m4.2xlarge" => Ec2InstanceType::M42xlarge,
            "m4.4xlarge" => Ec2InstanceType::M44xlarge,
            "m4.large" => Ec2InstanceType::M4Large,
            "m4.xlarge" => Ec2InstanceType::M4Xlarge,
            "m5.12xlarge" => Ec2InstanceType::M512xlarge,
            "m5.16xlarge" => Ec2InstanceType::M516xlarge,
            "m5.24xlarge" => Ec2InstanceType::M524xlarge,
            "m5.2xlarge" => Ec2InstanceType::M52xlarge,
            "m5.4xlarge" => Ec2InstanceType::M54xlarge,
            "m5.8xlarge" => Ec2InstanceType::M58xlarge,
            "m5.large" => Ec2InstanceType::M5Large,
            "m5.xlarge" => Ec2InstanceType::M5Xlarge,
            "m5a.12xlarge" => Ec2InstanceType::M5a12xlarge,
            "m5a.16xlarge" => Ec2InstanceType::M5a16xlarge,
            "m5a.24xlarge" => Ec2InstanceType::M5a24xlarge,
            "m5a.2xlarge" => Ec2InstanceType::M5a2xlarge,
            "m5a.4xlarge" => Ec2InstanceType::M5a4xlarge,
            "m5a.8xlarge" => Ec2InstanceType::M5a8xlarge,
            "m5a.large" => Ec2InstanceType::M5aLarge,
            "m5a.xlarge" => Ec2InstanceType::M5aXlarge,
            "r3.2xlarge" => Ec2InstanceType::R32xlarge,
            "r3.4xlarge" => Ec2InstanceType::R34xlarge,
            "r3.8xlarge" => Ec2InstanceType::R38xlarge,
            "r3.large" => Ec2InstanceType::R3Large,
            "r3.xlarge" => Ec2InstanceType::R3Xlarge,
            "r4.16xlarge" => Ec2InstanceType::R416xlarge,
            "r4.2xlarge" => Ec2InstanceType::R42xlarge,
            "r4.4xlarge" => Ec2InstanceType::R44xlarge,
            "r4.8xlarge" => Ec2InstanceType::R48xlarge,
            "r4.large" => Ec2InstanceType::R4Large,
            "r4.xlarge" => Ec2InstanceType::R4Xlarge,
            "r5.12xlarge" => Ec2InstanceType::R512xlarge,
            "r5.16xlarge" => Ec2InstanceType::R516xlarge,
            "r5.24xlarge" => Ec2InstanceType::R524xlarge,
            "r5.2xlarge" => Ec2InstanceType::R52xlarge,
            "r5.4xlarge" => Ec2InstanceType::R54xlarge,
            "r5.8xlarge" => Ec2InstanceType::R58xlarge,
            "r5.large" => Ec2InstanceType::R5Large,
            "r5.xlarge" => Ec2InstanceType::R5Xlarge,
            "r5a.12xlarge" => Ec2InstanceType::R5a12xlarge,
            "r5a.16xlarge" => Ec2InstanceType::R5a16xlarge,
            "r5a.24xlarge" => Ec2InstanceType::R5a24xlarge,
            "r5a.2xlarge" => Ec2InstanceType::R5a2xlarge,
            "r5a.4xlarge" => Ec2InstanceType::R5a4xlarge,
            "r5a.8xlarge" => Ec2InstanceType::R5a8xlarge,
            "r5a.large" => Ec2InstanceType::R5aLarge,
            "r5a.xlarge" => Ec2InstanceType::R5aXlarge,
            "r5d.12xlarge" => Ec2InstanceType::R5d12xlarge,
            "r5d.16xlarge" => Ec2InstanceType::R5d16xlarge,
            "r5d.24xlarge" => Ec2InstanceType::R5d24xlarge,
            "r5d.2xlarge" => Ec2InstanceType::R5d2xlarge,
            "r5d.4xlarge" => Ec2InstanceType::R5d4xlarge,
            "r5d.8xlarge" => Ec2InstanceType::R5d8xlarge,
            "r5d.large" => Ec2InstanceType::R5dLarge,
            "r5d.xlarge" => Ec2InstanceType::R5dXlarge,
            "t2.large" => Ec2InstanceType::T2Large,
            "t2.medium" => Ec2InstanceType::T2Medium,
            "t2.micro" => Ec2InstanceType::T2Micro,
            "t2.small" => Ec2InstanceType::T2Small,
            other => {
                Ec2InstanceType::Unknown(crate::primitives::UnknownVariantValue(other.to_owned()))
            }
        }
    }
}
impl std::str::FromStr for Ec2InstanceType {
    type Err = std::convert::Infallible;

    fn from_str(s: &str) -> std::result::Result<Self, Self::Err> {
        Ok(Ec2InstanceType::from(s))
    }
}
impl Ec2InstanceType {
    /// Returns the `&str` value of the enum member.
    pub fn as_str(&self) -> &str {
        match self {
            Ec2InstanceType::C32xlarge => "c3.2xlarge",
            Ec2InstanceType::C34xlarge => "c3.4xlarge",
            Ec2InstanceType::C38xlarge => "c3.8xlarge",
            Ec2InstanceType::C3Large => "c3.large",
            Ec2InstanceType::C3Xlarge => "c3.xlarge",
            Ec2InstanceType::C42xlarge => "c4.2xlarge",
            Ec2InstanceType::C44xlarge => "c4.4xlarge",
            Ec2InstanceType::C48xlarge => "c4.8xlarge",
            Ec2InstanceType::C4Large => "c4.large",
            Ec2InstanceType::C4Xlarge => "c4.xlarge",
            Ec2InstanceType::C512xlarge => "c5.12xlarge",
            Ec2InstanceType::C518xlarge => "c5.18xlarge",
            Ec2InstanceType::C524xlarge => "c5.24xlarge",
            Ec2InstanceType::C52xlarge => "c5.2xlarge",
            Ec2InstanceType::C54xlarge => "c5.4xlarge",
            Ec2InstanceType::C59xlarge => "c5.9xlarge",
            Ec2InstanceType::C5Large => "c5.large",
            Ec2InstanceType::C5Xlarge => "c5.xlarge",
            Ec2InstanceType::C5a12xlarge => "c5a.12xlarge",
            Ec2InstanceType::C5a16xlarge => "c5a.16xlarge",
            Ec2InstanceType::C5a24xlarge => "c5a.24xlarge",
            Ec2InstanceType::C5a2xlarge => "c5a.2xlarge",
            Ec2InstanceType::C5a4xlarge => "c5a.4xlarge",
            Ec2InstanceType::C5a8xlarge => "c5a.8xlarge",
            Ec2InstanceType::C5aLarge => "c5a.large",
            Ec2InstanceType::C5aXlarge => "c5a.xlarge",
            Ec2InstanceType::C5d12xlarge => "c5d.12xlarge",
            Ec2InstanceType::C5d18xlarge => "c5d.18xlarge",
            Ec2InstanceType::C5d24xlarge => "c5d.24xlarge",
            Ec2InstanceType::C5d2xlarge => "c5d.2xlarge",
            Ec2InstanceType::C5d4xlarge => "c5d.4xlarge",
            Ec2InstanceType::C5d9xlarge => "c5d.9xlarge",
            Ec2InstanceType::C5dLarge => "c5d.large",
            Ec2InstanceType::C5dXlarge => "c5d.xlarge",
            Ec2InstanceType::C6a12xlarge => "c6a.12xlarge",
            Ec2InstanceType::C6a16xlarge => "c6a.16xlarge",
            Ec2InstanceType::C6a24xlarge => "c6a.24xlarge",
            Ec2InstanceType::C6a2xlarge => "c6a.2xlarge",
            Ec2InstanceType::C6a4xlarge => "c6a.4xlarge",
            Ec2InstanceType::C6a8xlarge => "c6a.8xlarge",
            Ec2InstanceType::C6aLarge => "c6a.large",
            Ec2InstanceType::C6aXlarge => "c6a.xlarge",
            Ec2InstanceType::C6i12xlarge => "c6i.12xlarge",
            Ec2InstanceType::C6i16xlarge => "c6i.16xlarge",
            Ec2InstanceType::C6i24xlarge => "c6i.24xlarge",
            Ec2InstanceType::C6i2xlarge => "c6i.2xlarge",
            Ec2InstanceType::C6i4xlarge => "c6i.4xlarge",
            Ec2InstanceType::C6i8xlarge => "c6i.8xlarge",
            Ec2InstanceType::C6iLarge => "c6i.large",
            Ec2InstanceType::C6iXlarge => "c6i.xlarge",
            Ec2InstanceType::M32xlarge => "m3.2xlarge",
            Ec2InstanceType::M3Large => "m3.large",
            Ec2InstanceType::M3Medium => "m3.medium",
            Ec2InstanceType::M3Xlarge => "m3.xlarge",
            Ec2InstanceType::M410xlarge => "m4.10xlarge",
            Ec2InstanceType::M42xlarge => "m4.2xlarge",
            Ec2InstanceType::M44xlarge => "m4.4xlarge",
            Ec2InstanceType::M4Large => "m4.large",
            Ec2InstanceType::M4Xlarge => "m4.xlarge",
            Ec2InstanceType::M512xlarge => "m5.12xlarge",
            Ec2InstanceType::M516xlarge => "m5.16xlarge",
            Ec2InstanceType::M524xlarge => "m5.24xlarge",
            Ec2InstanceType::M52xlarge => "m5.2xlarge",
            Ec2InstanceType::M54xlarge => "m5.4xlarge",
            Ec2InstanceType::M58xlarge => "m5.8xlarge",
            Ec2InstanceType::M5Large => "m5.large",
            Ec2InstanceType::M5Xlarge => "m5.xlarge",
            Ec2InstanceType::M5a12xlarge => "m5a.12xlarge",
            Ec2InstanceType::M5a16xlarge => "m5a.16xlarge",
            Ec2InstanceType::M5a24xlarge => "m5a.24xlarge",
            Ec2InstanceType::M5a2xlarge => "m5a.2xlarge",
            Ec2InstanceType::M5a4xlarge => "m5a.4xlarge",
            Ec2InstanceType::M5a8xlarge => "m5a.8xlarge",
            Ec2InstanceType::M5aLarge => "m5a.large",
            Ec2InstanceType::M5aXlarge => "m5a.xlarge",
            Ec2InstanceType::R32xlarge => "r3.2xlarge",
            Ec2InstanceType::R34xlarge => "r3.4xlarge",
            Ec2InstanceType::R38xlarge => "r3.8xlarge",
            Ec2InstanceType::R3Large => "r3.large",
            Ec2InstanceType::R3Xlarge => "r3.xlarge",
            Ec2InstanceType::R416xlarge => "r4.16xlarge",
            Ec2InstanceType::R42xlarge => "r4.2xlarge",
            Ec2InstanceType::R44xlarge => "r4.4xlarge",
            Ec2InstanceType::R48xlarge => "r4.8xlarge",
            Ec2InstanceType::R4Large => "r4.large",
            Ec2InstanceType::R4Xlarge => "r4.xlarge",
            Ec2InstanceType::R512xlarge => "r5.12xlarge",
            Ec2InstanceType::R516xlarge => "r5.16xlarge",
            Ec2InstanceType::R524xlarge => "r5.24xlarge",
            Ec2InstanceType::R52xlarge => "r5.2xlarge",
            Ec2InstanceType::R54xlarge => "r5.4xlarge",
            Ec2InstanceType::R58xlarge => "r5.8xlarge",
            Ec2InstanceType::R5Large => "r5.large",
            Ec2InstanceType::R5Xlarge => "r5.xlarge",
            Ec2InstanceType::R5a12xlarge => "r5a.12xlarge",
            Ec2InstanceType::R5a16xlarge => "r5a.16xlarge",
            Ec2InstanceType::R5a24xlarge => "r5a.24xlarge",
            Ec2InstanceType::R5a2xlarge => "r5a.2xlarge",
            Ec2InstanceType::R5a4xlarge => "r5a.4xlarge",
            Ec2InstanceType::R5a8xlarge => "r5a.8xlarge",
            Ec2InstanceType::R5aLarge => "r5a.large",
            Ec2InstanceType::R5aXlarge => "r5a.xlarge",
            Ec2InstanceType::R5d12xlarge => "r5d.12xlarge",
            Ec2InstanceType::R5d16xlarge => "r5d.16xlarge",
            Ec2InstanceType::R5d24xlarge => "r5d.24xlarge",
            Ec2InstanceType::R5d2xlarge => "r5d.2xlarge",
            Ec2InstanceType::R5d4xlarge => "r5d.4xlarge",
            Ec2InstanceType::R5d8xlarge => "r5d.8xlarge",
            Ec2InstanceType::R5dLarge => "r5d.large",
            Ec2InstanceType::R5dXlarge => "r5d.xlarge",
            Ec2InstanceType::T2Large => "t2.large",
            Ec2InstanceType::T2Medium => "t2.medium",
            Ec2InstanceType::T2Micro => "t2.micro",
            Ec2InstanceType::T2Small => "t2.small",
            Ec2InstanceType::Unknown(value) => value.as_str(),
        }
    }
    /// Returns all the `&str` representations of the enum members.
    pub const fn values() -> &'static [&'static str] {
        &[
            "c3.2xlarge",
            "c3.4xlarge",
            "c3.8xlarge",
            "c3.large",
            "c3.xlarge",
            "c4.2xlarge",
            "c4.4xlarge",
            "c4.8xlarge",
            "c4.large",
            "c4.xlarge",
            "c5.12xlarge",
            "c5.18xlarge",
            "c5.24xlarge",
            "c5.2xlarge",
            "c5.4xlarge",
            "c5.9xlarge",
            "c5.large",
            "c5.xlarge",
            "c5a.12xlarge",
            "c5a.16xlarge",
            "c5a.24xlarge",
            "c5a.2xlarge",
            "c5a.4xlarge",
            "c5a.8xlarge",
            "c5a.large",
            "c5a.xlarge",
            "c5d.12xlarge",
            "c5d.18xlarge",
            "c5d.24xlarge",
            "c5d.2xlarge",
            "c5d.4xlarge",
            "c5d.9xlarge",
            "c5d.large",
            "c5d.xlarge",
            "c6a.12xlarge",
            "c6a.16xlarge",
            "c6a.24xlarge",
            "c6a.2xlarge",
            "c6a.4xlarge",
            "c6a.8xlarge",
            "c6a.large",
            "c6a.xlarge",
            "c6i.12xlarge",
            "c6i.16xlarge",
            "c6i.24xlarge",
            "c6i.2xlarge",
            "c6i.4xlarge",
            "c6i.8xlarge",
            "c6i.large",
            "c6i.xlarge",
            "m3.2xlarge",
            "m3.large",
            "m3.medium",
            "m3.xlarge",
            "m4.10xlarge",
            "m4.2xlarge",
            "m4.4xlarge",
            "m4.large",
            "m4.xlarge",
            "m5.12xlarge",
            "m5.16xlarge",
            "m5.24xlarge",
            "m5.2xlarge",
            "m5.4xlarge",
            "m5.8xlarge",
            "m5.large",
            "m5.xlarge",
            "m5a.12xlarge",
            "m5a.16xlarge",
            "m5a.24xlarge",
            "m5a.2xlarge",
            "m5a.4xlarge",
            "m5a.8xlarge",
            "m5a.large",
            "m5a.xlarge",
            "r3.2xlarge",
            "r3.4xlarge",
            "r3.8xlarge",
            "r3.large",
            "r3.xlarge",
            "r4.16xlarge",
            "r4.2xlarge",
            "r4.4xlarge",
            "r4.8xlarge",
            "r4.large",
            "r4.xlarge",
            "r5.12xlarge",
            "r5.16xlarge",
            "r5.24xlarge",
            "r5.2xlarge",
            "r5.4xlarge",
            "r5.8xlarge",
            "r5.large",
            "r5.xlarge",
            "r5a.12xlarge",
            "r5a.16xlarge",
            "r5a.24xlarge",
            "r5a.2xlarge",
            "r5a.4xlarge",
            "r5a.8xlarge",
            "r5a.large",
            "r5a.xlarge",
            "r5d.12xlarge",
            "r5d.16xlarge",
            "r5d.24xlarge",
            "r5d.2xlarge",
            "r5d.4xlarge",
            "r5d.8xlarge",
            "r5d.large",
            "r5d.xlarge",
            "t2.large",
            "t2.medium",
            "t2.micro",
            "t2.small",
        ]
    }
}
impl AsRef<str> for Ec2InstanceType {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}
