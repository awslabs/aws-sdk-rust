// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p>
/// <p>An allowed instance type for a game server group. All game server groups must have at least two instance types defined for it. GameLift FleetIQ periodically evaluates each defined instance type for viability. It then updates the Auto Scaling group with the list of viable instance types.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InstanceDefinition {
    /// <p>An Amazon EC2 instance type designation.</p>
    #[doc(hidden)]
    pub instance_type: std::option::Option<crate::types::GameServerGroupInstanceType>,
    /// <p>Instance weighting that indicates how much this instance type contributes to the total capacity of a game server group. Instance weights are used by GameLift FleetIQ to calculate the instance type's cost per unit hour and better identify the most cost-effective options. For detailed information on weighting instance capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-weighting.html">Instance Weighting</a> in the <i>Amazon Elastic Compute Cloud Auto Scaling User Guide</i>. Default value is "1".</p>
    #[doc(hidden)]
    pub weighted_capacity: std::option::Option<std::string::String>,
}
impl InstanceDefinition {
    /// <p>An Amazon EC2 instance type designation.</p>
    pub fn instance_type(&self) -> std::option::Option<&crate::types::GameServerGroupInstanceType> {
        self.instance_type.as_ref()
    }
    /// <p>Instance weighting that indicates how much this instance type contributes to the total capacity of a game server group. Instance weights are used by GameLift FleetIQ to calculate the instance type's cost per unit hour and better identify the most cost-effective options. For detailed information on weighting instance capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-weighting.html">Instance Weighting</a> in the <i>Amazon Elastic Compute Cloud Auto Scaling User Guide</i>. Default value is "1".</p>
    pub fn weighted_capacity(&self) -> std::option::Option<&str> {
        self.weighted_capacity.as_deref()
    }
}
impl InstanceDefinition {
    /// Creates a new builder-style object to manufacture [`InstanceDefinition`](crate::types::InstanceDefinition).
    pub fn builder() -> crate::types::builders::InstanceDefinitionBuilder {
        crate::types::builders::InstanceDefinitionBuilder::default()
    }
}

/// A builder for [`InstanceDefinition`](crate::types::InstanceDefinition).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InstanceDefinitionBuilder {
    pub(crate) instance_type: std::option::Option<crate::types::GameServerGroupInstanceType>,
    pub(crate) weighted_capacity: std::option::Option<std::string::String>,
}
impl InstanceDefinitionBuilder {
    /// <p>An Amazon EC2 instance type designation.</p>
    pub fn instance_type(mut self, input: crate::types::GameServerGroupInstanceType) -> Self {
        self.instance_type = Some(input);
        self
    }
    /// <p>An Amazon EC2 instance type designation.</p>
    pub fn set_instance_type(
        mut self,
        input: std::option::Option<crate::types::GameServerGroupInstanceType>,
    ) -> Self {
        self.instance_type = input;
        self
    }
    /// <p>Instance weighting that indicates how much this instance type contributes to the total capacity of a game server group. Instance weights are used by GameLift FleetIQ to calculate the instance type's cost per unit hour and better identify the most cost-effective options. For detailed information on weighting instance capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-weighting.html">Instance Weighting</a> in the <i>Amazon Elastic Compute Cloud Auto Scaling User Guide</i>. Default value is "1".</p>
    pub fn weighted_capacity(mut self, input: impl Into<std::string::String>) -> Self {
        self.weighted_capacity = Some(input.into());
        self
    }
    /// <p>Instance weighting that indicates how much this instance type contributes to the total capacity of a game server group. Instance weights are used by GameLift FleetIQ to calculate the instance type's cost per unit hour and better identify the most cost-effective options. For detailed information on weighting instance capacity, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-weighting.html">Instance Weighting</a> in the <i>Amazon Elastic Compute Cloud Auto Scaling User Guide</i>. Default value is "1".</p>
    pub fn set_weighted_capacity(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.weighted_capacity = input;
        self
    }
    /// Consumes the builder and constructs a [`InstanceDefinition`](crate::types::InstanceDefinition).
    pub fn build(self) -> crate::types::InstanceDefinition {
        crate::types::InstanceDefinition {
            instance_type: self.instance_type,
            weighted_capacity: self.weighted_capacity,
        }
    }
}
