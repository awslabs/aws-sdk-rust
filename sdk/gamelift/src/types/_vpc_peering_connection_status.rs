// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents status information for a VPC peering connection. Status codes and messages are provided from EC2 (see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_VpcPeeringConnectionStateReason.html">VpcPeeringConnectionStateReason</a>). Connection status information is also communicated as a fleet event.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VpcPeeringConnectionStatus {
    /// <p>Code indicating the status of a VPC peering connection.</p>
    #[doc(hidden)]
    pub code: std::option::Option<std::string::String>,
    /// <p>Additional messaging associated with the connection status. </p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl VpcPeeringConnectionStatus {
    /// <p>Code indicating the status of a VPC peering connection.</p>
    pub fn code(&self) -> std::option::Option<&str> {
        self.code.as_deref()
    }
    /// <p>Additional messaging associated with the connection status. </p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl VpcPeeringConnectionStatus {
    /// Creates a new builder-style object to manufacture [`VpcPeeringConnectionStatus`](crate::types::VpcPeeringConnectionStatus).
    pub fn builder() -> crate::types::builders::VpcPeeringConnectionStatusBuilder {
        crate::types::builders::VpcPeeringConnectionStatusBuilder::default()
    }
}

/// A builder for [`VpcPeeringConnectionStatus`](crate::types::VpcPeeringConnectionStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VpcPeeringConnectionStatusBuilder {
    pub(crate) code: std::option::Option<std::string::String>,
    pub(crate) message: std::option::Option<std::string::String>,
}
impl VpcPeeringConnectionStatusBuilder {
    /// <p>Code indicating the status of a VPC peering connection.</p>
    pub fn code(mut self, input: impl Into<std::string::String>) -> Self {
        self.code = Some(input.into());
        self
    }
    /// <p>Code indicating the status of a VPC peering connection.</p>
    pub fn set_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.code = input;
        self
    }
    /// <p>Additional messaging associated with the connection status. </p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>Additional messaging associated with the connection status. </p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`VpcPeeringConnectionStatus`](crate::types::VpcPeeringConnectionStatus).
    pub fn build(self) -> crate::types::VpcPeeringConnectionStatus {
        crate::types::VpcPeeringConnectionStatus {
            code: self.code,
            message: self.message,
        }
    }
}
