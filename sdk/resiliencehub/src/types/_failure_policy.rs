// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines a failure policy.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FailurePolicy {
    /// <p>The Recovery Time Objective (RTO), in seconds.</p>
    #[doc(hidden)]
    pub rto_in_secs: i32,
    /// <p>The Recovery Point Objective (RPO), in seconds.</p>
    #[doc(hidden)]
    pub rpo_in_secs: i32,
}
impl FailurePolicy {
    /// <p>The Recovery Time Objective (RTO), in seconds.</p>
    pub fn rto_in_secs(&self) -> i32 {
        self.rto_in_secs
    }
    /// <p>The Recovery Point Objective (RPO), in seconds.</p>
    pub fn rpo_in_secs(&self) -> i32 {
        self.rpo_in_secs
    }
}
impl FailurePolicy {
    /// Creates a new builder-style object to manufacture [`FailurePolicy`](crate::types::FailurePolicy).
    pub fn builder() -> crate::types::builders::FailurePolicyBuilder {
        crate::types::builders::FailurePolicyBuilder::default()
    }
}

/// A builder for [`FailurePolicy`](crate::types::FailurePolicy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FailurePolicyBuilder {
    pub(crate) rto_in_secs: std::option::Option<i32>,
    pub(crate) rpo_in_secs: std::option::Option<i32>,
}
impl FailurePolicyBuilder {
    /// <p>The Recovery Time Objective (RTO), in seconds.</p>
    pub fn rto_in_secs(mut self, input: i32) -> Self {
        self.rto_in_secs = Some(input);
        self
    }
    /// <p>The Recovery Time Objective (RTO), in seconds.</p>
    pub fn set_rto_in_secs(mut self, input: std::option::Option<i32>) -> Self {
        self.rto_in_secs = input;
        self
    }
    /// <p>The Recovery Point Objective (RPO), in seconds.</p>
    pub fn rpo_in_secs(mut self, input: i32) -> Self {
        self.rpo_in_secs = Some(input);
        self
    }
    /// <p>The Recovery Point Objective (RPO), in seconds.</p>
    pub fn set_rpo_in_secs(mut self, input: std::option::Option<i32>) -> Self {
        self.rpo_in_secs = input;
        self
    }
    /// Consumes the builder and constructs a [`FailurePolicy`](crate::types::FailurePolicy).
    pub fn build(self) -> crate::types::FailurePolicy {
        crate::types::FailurePolicy {
            rto_in_secs: self.rto_in_secs.unwrap_or_default(),
            rpo_in_secs: self.rpo_in_secs.unwrap_or_default(),
        }
    }
}
