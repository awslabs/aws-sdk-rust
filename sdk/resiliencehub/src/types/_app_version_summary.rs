// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Version of an application.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AppVersionSummary {
    /// <p>Version of an application.</p>
    pub app_version: ::std::string::String,
    /// <p>Identifier of the application version.</p>
    pub identifier: ::std::option::Option<i64>,
    /// <p>Creation time of the application version.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Name of the application version.</p>
    pub version_name: ::std::option::Option<::std::string::String>,
}
impl AppVersionSummary {
    /// <p>Version of an application.</p>
    pub fn app_version(&self) -> &str {
        use std::ops::Deref;
        self.app_version.deref()
    }
    /// <p>Identifier of the application version.</p>
    pub fn identifier(&self) -> ::std::option::Option<i64> {
        self.identifier
    }
    /// <p>Creation time of the application version.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>Name of the application version.</p>
    pub fn version_name(&self) -> ::std::option::Option<&str> {
        self.version_name.as_deref()
    }
}
impl AppVersionSummary {
    /// Creates a new builder-style object to manufacture [`AppVersionSummary`](crate::types::AppVersionSummary).
    pub fn builder() -> crate::types::builders::AppVersionSummaryBuilder {
        crate::types::builders::AppVersionSummaryBuilder::default()
    }
}

/// A builder for [`AppVersionSummary`](crate::types::AppVersionSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AppVersionSummaryBuilder {
    pub(crate) app_version: ::std::option::Option<::std::string::String>,
    pub(crate) identifier: ::std::option::Option<i64>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) version_name: ::std::option::Option<::std::string::String>,
}
impl AppVersionSummaryBuilder {
    /// <p>Version of an application.</p>
    /// This field is required.
    pub fn app_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Version of an application.</p>
    pub fn set_app_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_version = input;
        self
    }
    /// <p>Version of an application.</p>
    pub fn get_app_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_version
    }
    /// <p>Identifier of the application version.</p>
    pub fn identifier(mut self, input: i64) -> Self {
        self.identifier = ::std::option::Option::Some(input);
        self
    }
    /// <p>Identifier of the application version.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<i64>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>Identifier of the application version.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<i64> {
        &self.identifier
    }
    /// <p>Creation time of the application version.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Creation time of the application version.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>Creation time of the application version.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>Name of the application version.</p>
    pub fn version_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Name of the application version.</p>
    pub fn set_version_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version_name = input;
        self
    }
    /// <p>Name of the application version.</p>
    pub fn get_version_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.version_name
    }
    /// Consumes the builder and constructs a [`AppVersionSummary`](crate::types::AppVersionSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`app_version`](crate::types::builders::AppVersionSummaryBuilder::app_version)
    pub fn build(self) -> ::std::result::Result<crate::types::AppVersionSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AppVersionSummary {
            app_version: self.app_version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "app_version",
                    "app_version was not specified but it is required when building AppVersionSummary",
                )
            })?,
            identifier: self.identifier,
            creation_time: self.creation_time,
            version_name: self.version_name,
        })
    }
}
