// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The version of the application.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AppVersionSummary {
    /// <p>The version of the application.</p>
    #[doc(hidden)]
    pub app_version: std::option::Option<std::string::String>,
}
impl AppVersionSummary {
    /// <p>The version of the application.</p>
    pub fn app_version(&self) -> std::option::Option<&str> {
        self.app_version.as_deref()
    }
}
impl AppVersionSummary {
    /// Creates a new builder-style object to manufacture [`AppVersionSummary`](crate::types::AppVersionSummary).
    pub fn builder() -> crate::types::builders::AppVersionSummaryBuilder {
        crate::types::builders::AppVersionSummaryBuilder::default()
    }
}

/// A builder for [`AppVersionSummary`](crate::types::AppVersionSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AppVersionSummaryBuilder {
    pub(crate) app_version: std::option::Option<std::string::String>,
}
impl AppVersionSummaryBuilder {
    /// <p>The version of the application.</p>
    pub fn app_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.app_version = Some(input.into());
        self
    }
    /// <p>The version of the application.</p>
    pub fn set_app_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.app_version = input;
        self
    }
    /// Consumes the builder and constructs a [`AppVersionSummary`](crate::types::AppVersionSummary).
    pub fn build(self) -> crate::types::AppVersionSummary {
        crate::types::AppVersionSummary {
            app_version: self.app_version,
        }
    }
}
