// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateResiliencyPolicy`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_arn(impl Into<String>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::policy_arn) / [`set_policy_arn(Option<String>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::set_policy_arn): <p>The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    ///   - [`policy_name(impl Into<String>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::policy_name) / [`set_policy_name(Option<String>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::set_policy_name): <p>The name of the policy</p>
    ///   - [`policy_description(impl Into<String>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::policy_description) / [`set_policy_description(Option<String>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::set_policy_description): <p>The description for the policy.</p>
    ///   - [`data_location_constraint(DataLocationConstraint)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::data_location_constraint) / [`set_data_location_constraint(Option<DataLocationConstraint>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::set_data_location_constraint): <p>Specifies a high-level geographical location constraint for where your resilience policy data can be stored.</p>
    ///   - [`tier(ResiliencyPolicyTier)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::tier) / [`set_tier(Option<ResiliencyPolicyTier>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::set_tier): <p>The tier for this resiliency policy, ranging from the highest severity (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).</p>
    ///   - [`policy(HashMap<DisruptionType, FailurePolicy>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::policy) / [`set_policy(Option<HashMap<DisruptionType, FailurePolicy>>)`](crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::set_policy): <p>The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds.</p>
    /// - On success, responds with [`UpdateResiliencyPolicyOutput`](crate::operation::update_resiliency_policy::UpdateResiliencyPolicyOutput) with field(s):
    ///   - [`policy(Option<ResiliencyPolicy>)`](crate::operation::update_resiliency_policy::UpdateResiliencyPolicyOutput::policy): <p>The type of resiliency policy that was updated, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds.</p>
    /// - On failure, responds with [`SdkError<UpdateResiliencyPolicyError>`](crate::operation::update_resiliency_policy::UpdateResiliencyPolicyError)
    pub fn update_resiliency_policy(
        &self,
    ) -> crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder
    {
        crate::operation::update_resiliency_policy::builders::UpdateResiliencyPolicyFluentBuilder::new(self.handle.clone())
    }
}
