// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateResiliencyPolicy`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_name(impl Into<String>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::policy_name) / [`set_policy_name(Option<String>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::set_policy_name):<br>required: **true**<br><p>The name of the policy</p><br>
    ///   - [`policy_description(impl Into<String>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::policy_description) / [`set_policy_description(Option<String>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::set_policy_description):<br>required: **false**<br><p>The description for the policy.</p><br>
    ///   - [`data_location_constraint(DataLocationConstraint)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::data_location_constraint) / [`set_data_location_constraint(Option<DataLocationConstraint>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::set_data_location_constraint):<br>required: **false**<br><p>Specifies a high-level geographical location constraint for where your resilience policy data can be stored.</p><br>
    ///   - [`tier(ResiliencyPolicyTier)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::tier) / [`set_tier(Option<ResiliencyPolicyTier>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::set_tier):<br>required: **true**<br><p>The tier for this resiliency policy, ranging from the highest severity (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).</p><br>
    ///   - [`policy(DisruptionType, FailurePolicy)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::policy) / [`set_policy(Option<HashMap::<DisruptionType, FailurePolicy>>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::set_policy):<br>required: **true**<br><p>The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::set_client_token):<br>required: **false**<br><p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::set_tags):<br>required: **false**<br><p>Tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key/value pair.</p><br>
    /// - On success, responds with [`CreateResiliencyPolicyOutput`](crate::operation::create_resiliency_policy::CreateResiliencyPolicyOutput) with field(s):
    ///   - [`policy(Option<ResiliencyPolicy>)`](crate::operation::create_resiliency_policy::CreateResiliencyPolicyOutput::policy): <p>The type of resiliency policy that was created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds.</p>
    /// - On failure, responds with [`SdkError<CreateResiliencyPolicyError>`](crate::operation::create_resiliency_policy::CreateResiliencyPolicyError)
    pub fn create_resiliency_policy(&self) -> crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder {
        crate::operation::create_resiliency_policy::builders::CreateResiliencyPolicyFluentBuilder::new(self.handle.clone())
    }
}
