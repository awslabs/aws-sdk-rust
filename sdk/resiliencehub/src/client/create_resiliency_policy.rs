// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateResiliencyPolicy`](crate::client::fluent_builders::CreateResiliencyPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_name(impl Into<String>)`](crate::client::fluent_builders::CreateResiliencyPolicy::policy_name) / [`set_policy_name(Option<String>)`](crate::client::fluent_builders::CreateResiliencyPolicy::set_policy_name): <p>The name of the policy</p>
    ///   - [`policy_description(impl Into<String>)`](crate::client::fluent_builders::CreateResiliencyPolicy::policy_description) / [`set_policy_description(Option<String>)`](crate::client::fluent_builders::CreateResiliencyPolicy::set_policy_description): <p>The description for the policy.</p>
    ///   - [`data_location_constraint(DataLocationConstraint)`](crate::client::fluent_builders::CreateResiliencyPolicy::data_location_constraint) / [`set_data_location_constraint(Option<DataLocationConstraint>)`](crate::client::fluent_builders::CreateResiliencyPolicy::set_data_location_constraint): <p>Specifies a high-level geographical location constraint for where your resilience policy data can be stored.</p>
    ///   - [`tier(ResiliencyPolicyTier)`](crate::client::fluent_builders::CreateResiliencyPolicy::tier) / [`set_tier(Option<ResiliencyPolicyTier>)`](crate::client::fluent_builders::CreateResiliencyPolicy::set_tier): <p>The tier for this resiliency policy, ranging from the highest severity (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).</p>
    ///   - [`policy(HashMap<DisruptionType, FailurePolicy>)`](crate::client::fluent_builders::CreateResiliencyPolicy::policy) / [`set_policy(Option<HashMap<DisruptionType, FailurePolicy>>)`](crate::client::fluent_builders::CreateResiliencyPolicy::set_policy): <p>The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateResiliencyPolicy::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateResiliencyPolicy::set_client_token): <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateResiliencyPolicy::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateResiliencyPolicy::set_tags): <p>The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key/value pair.</p>
    /// - On success, responds with [`CreateResiliencyPolicyOutput`](crate::output::CreateResiliencyPolicyOutput) with field(s):
    ///   - [`policy(Option<ResiliencyPolicy>)`](crate::output::CreateResiliencyPolicyOutput::policy): <p>The type of resiliency policy that was created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds.</p>
    /// - On failure, responds with [`SdkError<CreateResiliencyPolicyError>`](crate::error::CreateResiliencyPolicyError)
    pub fn create_resiliency_policy(
        &self,
    ) -> crate::client::fluent_builders::CreateResiliencyPolicy {
        crate::client::fluent_builders::CreateResiliencyPolicy::new(self.handle.clone())
    }
}
