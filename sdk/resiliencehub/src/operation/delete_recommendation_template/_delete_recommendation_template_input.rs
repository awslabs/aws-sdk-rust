// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteRecommendationTemplateInput {
    /// <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
    #[doc(hidden)]
    pub recommendation_template_arn: std::option::Option<std::string::String>,
    /// <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.</p>
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
}
impl DeleteRecommendationTemplateInput {
    /// <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
    pub fn recommendation_template_arn(&self) -> std::option::Option<&str> {
        self.recommendation_template_arn.as_deref()
    }
    /// <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.</p>
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl DeleteRecommendationTemplateInput {
    /// Creates a new builder-style object to manufacture [`DeleteRecommendationTemplateInput`](crate::operation::delete_recommendation_template::DeleteRecommendationTemplateInput).
    pub fn builder() -> crate::operation::delete_recommendation_template::builders::DeleteRecommendationTemplateInputBuilder{
        crate::operation::delete_recommendation_template::builders::DeleteRecommendationTemplateInputBuilder::default()
    }
}

/// A builder for [`DeleteRecommendationTemplateInput`](crate::operation::delete_recommendation_template::DeleteRecommendationTemplateInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteRecommendationTemplateInputBuilder {
    pub(crate) recommendation_template_arn: std::option::Option<std::string::String>,
    pub(crate) client_token: std::option::Option<std::string::String>,
}
impl DeleteRecommendationTemplateInputBuilder {
    /// <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
    pub fn recommendation_template_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.recommendation_template_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
    pub fn set_recommendation_template_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.recommendation_template_arn = input;
        self
    }
    /// <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.</p>
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// <p>Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.</p>
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteRecommendationTemplateInput`](crate::operation::delete_recommendation_template::DeleteRecommendationTemplateInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_recommendation_template::DeleteRecommendationTemplateInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_recommendation_template::DeleteRecommendationTemplateInput {
                recommendation_template_arn: self.recommendation_template_arn,
                client_token: self.client_token,
            },
        )
    }
}
