// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListAlarmRecommendationsOutput {
    /// <p>The alarm recommendations for an AWS Resilience Hub application, returned as an object. This object includes application component names, descriptions, information about whether a recommendation has already been implemented or not, prerequisites, and more.</p>
    #[doc(hidden)]
    pub alarm_recommendations:
        std::option::Option<std::vec::Vec<crate::types::AlarmRecommendation>>,
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListAlarmRecommendationsOutput {
    /// <p>The alarm recommendations for an AWS Resilience Hub application, returned as an object. This object includes application component names, descriptions, information about whether a recommendation has already been implemented or not, prerequisites, and more.</p>
    pub fn alarm_recommendations(
        &self,
    ) -> std::option::Option<&[crate::types::AlarmRecommendation]> {
        self.alarm_recommendations.as_deref()
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListAlarmRecommendationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListAlarmRecommendationsOutput {
    /// Creates a new builder-style object to manufacture [`ListAlarmRecommendationsOutput`](crate::operation::list_alarm_recommendations::ListAlarmRecommendationsOutput).
    pub fn builder(
    ) -> crate::operation::list_alarm_recommendations::builders::ListAlarmRecommendationsOutputBuilder
    {
        crate::operation::list_alarm_recommendations::builders::ListAlarmRecommendationsOutputBuilder::default()
    }
}

/// A builder for [`ListAlarmRecommendationsOutput`](crate::operation::list_alarm_recommendations::ListAlarmRecommendationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListAlarmRecommendationsOutputBuilder {
    pub(crate) alarm_recommendations:
        std::option::Option<std::vec::Vec<crate::types::AlarmRecommendation>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListAlarmRecommendationsOutputBuilder {
    /// Appends an item to `alarm_recommendations`.
    ///
    /// To override the contents of this collection use [`set_alarm_recommendations`](Self::set_alarm_recommendations).
    ///
    /// <p>The alarm recommendations for an AWS Resilience Hub application, returned as an object. This object includes application component names, descriptions, information about whether a recommendation has already been implemented or not, prerequisites, and more.</p>
    pub fn alarm_recommendations(mut self, input: crate::types::AlarmRecommendation) -> Self {
        let mut v = self.alarm_recommendations.unwrap_or_default();
        v.push(input);
        self.alarm_recommendations = Some(v);
        self
    }
    /// <p>The alarm recommendations for an AWS Resilience Hub application, returned as an object. This object includes application component names, descriptions, information about whether a recommendation has already been implemented or not, prerequisites, and more.</p>
    pub fn set_alarm_recommendations(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AlarmRecommendation>>,
    ) -> Self {
        self.alarm_recommendations = input;
        self
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListAlarmRecommendationsOutput`](crate::operation::list_alarm_recommendations::ListAlarmRecommendationsOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_alarm_recommendations::ListAlarmRecommendationsOutput {
        crate::operation::list_alarm_recommendations::ListAlarmRecommendationsOutput {
            alarm_recommendations: self.alarm_recommendations,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
