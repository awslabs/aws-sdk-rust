// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResolveAppVersionResourcesInput {
    /// <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    #[doc(hidden)]
    pub app_arn: std::option::Option<std::string::String>,
    /// <p>The version of the application.</p>
    #[doc(hidden)]
    pub app_version: std::option::Option<std::string::String>,
}
impl ResolveAppVersionResourcesInput {
    /// <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    pub fn app_arn(&self) -> std::option::Option<&str> {
        self.app_arn.as_deref()
    }
    /// <p>The version of the application.</p>
    pub fn app_version(&self) -> std::option::Option<&str> {
        self.app_version.as_deref()
    }
}
impl ResolveAppVersionResourcesInput {
    /// Creates a new builder-style object to manufacture [`ResolveAppVersionResourcesInput`](crate::operation::resolve_app_version_resources::ResolveAppVersionResourcesInput).
    pub fn builder() -> crate::operation::resolve_app_version_resources::builders::ResolveAppVersionResourcesInputBuilder{
        crate::operation::resolve_app_version_resources::builders::ResolveAppVersionResourcesInputBuilder::default()
    }
}

/// A builder for [`ResolveAppVersionResourcesInput`](crate::operation::resolve_app_version_resources::ResolveAppVersionResourcesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResolveAppVersionResourcesInputBuilder {
    pub(crate) app_arn: std::option::Option<std::string::String>,
    pub(crate) app_version: std::option::Option<std::string::String>,
}
impl ResolveAppVersionResourcesInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    pub fn app_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.app_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    pub fn set_app_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.app_arn = input;
        self
    }
    /// <p>The version of the application.</p>
    pub fn app_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.app_version = Some(input.into());
        self
    }
    /// <p>The version of the application.</p>
    pub fn set_app_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.app_version = input;
        self
    }
    /// Consumes the builder and constructs a [`ResolveAppVersionResourcesInput`](crate::operation::resolve_app_version_resources::ResolveAppVersionResourcesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::resolve_app_version_resources::ResolveAppVersionResourcesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::resolve_app_version_resources::ResolveAppVersionResourcesInput {
                app_arn: self.app_arn,
                app_version: self.app_version,
            },
        )
    }
}
