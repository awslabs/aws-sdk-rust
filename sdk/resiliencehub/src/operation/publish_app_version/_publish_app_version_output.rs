// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PublishAppVersionOutput {
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub app_arn: ::std::string::String,
    /// <p>The version of the application.</p>
    pub app_version: ::std::option::Option<::std::string::String>,
    /// <p>Identifier of the application version.</p>
    pub identifier: ::std::option::Option<i64>,
    /// <p>Name of the application version.</p>
    pub version_name: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl PublishAppVersionOutput {
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub fn app_arn(&self) -> &str {
        use std::ops::Deref;
        self.app_arn.deref()
    }
    /// <p>The version of the application.</p>
    pub fn app_version(&self) -> ::std::option::Option<&str> {
        self.app_version.as_deref()
    }
    /// <p>Identifier of the application version.</p>
    pub fn identifier(&self) -> ::std::option::Option<i64> {
        self.identifier
    }
    /// <p>Name of the application version.</p>
    pub fn version_name(&self) -> ::std::option::Option<&str> {
        self.version_name.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for PublishAppVersionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PublishAppVersionOutput {
    /// Creates a new builder-style object to manufacture [`PublishAppVersionOutput`](crate::operation::publish_app_version::PublishAppVersionOutput).
    pub fn builder() -> crate::operation::publish_app_version::builders::PublishAppVersionOutputBuilder {
        crate::operation::publish_app_version::builders::PublishAppVersionOutputBuilder::default()
    }
}

/// A builder for [`PublishAppVersionOutput`](crate::operation::publish_app_version::PublishAppVersionOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PublishAppVersionOutputBuilder {
    pub(crate) app_arn: ::std::option::Option<::std::string::String>,
    pub(crate) app_version: ::std::option::Option<::std::string::String>,
    pub(crate) identifier: ::std::option::Option<i64>,
    pub(crate) version_name: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl PublishAppVersionOutputBuilder {
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    /// This field is required.
    pub fn app_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub fn set_app_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_arn = input;
        self
    }
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub fn get_app_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_arn
    }
    /// <p>The version of the application.</p>
    pub fn app_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the application.</p>
    pub fn set_app_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_version = input;
        self
    }
    /// <p>The version of the application.</p>
    pub fn get_app_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_version
    }
    /// <p>Identifier of the application version.</p>
    pub fn identifier(mut self, input: i64) -> Self {
        self.identifier = ::std::option::Option::Some(input);
        self
    }
    /// <p>Identifier of the application version.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<i64>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>Identifier of the application version.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<i64> {
        &self.identifier
    }
    /// <p>Name of the application version.</p>
    pub fn version_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Name of the application version.</p>
    pub fn set_version_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version_name = input;
        self
    }
    /// <p>Name of the application version.</p>
    pub fn get_version_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.version_name
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PublishAppVersionOutput`](crate::operation::publish_app_version::PublishAppVersionOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`app_arn`](crate::operation::publish_app_version::builders::PublishAppVersionOutputBuilder::app_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::publish_app_version::PublishAppVersionOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::publish_app_version::PublishAppVersionOutput {
            app_arn: self.app_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "app_arn",
                    "app_arn was not specified but it is required when building PublishAppVersionOutput",
                )
            })?,
            app_version: self.app_version,
            identifier: self.identifier,
            version_name: self.version_name,
            _request_id: self._request_id,
        })
    }
}
