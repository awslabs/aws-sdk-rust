// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RemoveDraftAppVersionResourceMappingsInput {
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub app_arn: ::std::option::Option<::std::string::String>,
    /// <p>The names of the resources you want to remove from the resource mappings.</p>
    pub resource_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The names of the CloudFormation stacks you want to remove from the resource mappings.</p>
    pub logical_stack_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The names of the registered applications you want to remove from the resource mappings.</p>
    pub app_registry_app_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The names of the resource groups you want to remove from the resource mappings.</p>
    pub resource_group_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The names of the Terraform sources you want to remove from the resource mappings.</p>
    pub terraform_source_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The names of the Amazon Elastic Kubernetes Service clusters and namespaces you want to remove from the resource mappings.</p> <note>
    /// <p>This parameter accepts values in "eks-cluster/namespace" format.</p>
    /// </note>
    pub eks_source_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl RemoveDraftAppVersionResourceMappingsInput {
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub fn app_arn(&self) -> ::std::option::Option<&str> {
        self.app_arn.as_deref()
    }
    /// <p>The names of the resources you want to remove from the resource mappings.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.resource_names.is_none()`.
    pub fn resource_names(&self) -> &[::std::string::String] {
        self.resource_names.as_deref().unwrap_or_default()
    }
    /// <p>The names of the CloudFormation stacks you want to remove from the resource mappings.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.logical_stack_names.is_none()`.
    pub fn logical_stack_names(&self) -> &[::std::string::String] {
        self.logical_stack_names.as_deref().unwrap_or_default()
    }
    /// <p>The names of the registered applications you want to remove from the resource mappings.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.app_registry_app_names.is_none()`.
    pub fn app_registry_app_names(&self) -> &[::std::string::String] {
        self.app_registry_app_names.as_deref().unwrap_or_default()
    }
    /// <p>The names of the resource groups you want to remove from the resource mappings.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.resource_group_names.is_none()`.
    pub fn resource_group_names(&self) -> &[::std::string::String] {
        self.resource_group_names.as_deref().unwrap_or_default()
    }
    /// <p>The names of the Terraform sources you want to remove from the resource mappings.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.terraform_source_names.is_none()`.
    pub fn terraform_source_names(&self) -> &[::std::string::String] {
        self.terraform_source_names.as_deref().unwrap_or_default()
    }
    /// <p>The names of the Amazon Elastic Kubernetes Service clusters and namespaces you want to remove from the resource mappings.</p> <note>
    /// <p>This parameter accepts values in "eks-cluster/namespace" format.</p>
    /// </note>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.eks_source_names.is_none()`.
    pub fn eks_source_names(&self) -> &[::std::string::String] {
        self.eks_source_names.as_deref().unwrap_or_default()
    }
}
impl RemoveDraftAppVersionResourceMappingsInput {
    /// Creates a new builder-style object to manufacture [`RemoveDraftAppVersionResourceMappingsInput`](crate::operation::remove_draft_app_version_resource_mappings::RemoveDraftAppVersionResourceMappingsInput).
    pub fn builder() -> crate::operation::remove_draft_app_version_resource_mappings::builders::RemoveDraftAppVersionResourceMappingsInputBuilder {
        crate::operation::remove_draft_app_version_resource_mappings::builders::RemoveDraftAppVersionResourceMappingsInputBuilder::default()
    }
}

/// A builder for [`RemoveDraftAppVersionResourceMappingsInput`](crate::operation::remove_draft_app_version_resource_mappings::RemoveDraftAppVersionResourceMappingsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RemoveDraftAppVersionResourceMappingsInputBuilder {
    pub(crate) app_arn: ::std::option::Option<::std::string::String>,
    pub(crate) resource_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) logical_stack_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) app_registry_app_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) resource_group_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) terraform_source_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) eks_source_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl RemoveDraftAppVersionResourceMappingsInputBuilder {
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    /// This field is required.
    pub fn app_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub fn set_app_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_arn = input;
        self
    }
    /// <p>Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub fn get_app_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_arn
    }
    /// Appends an item to `resource_names`.
    ///
    /// To override the contents of this collection use [`set_resource_names`](Self::set_resource_names).
    ///
    /// <p>The names of the resources you want to remove from the resource mappings.</p>
    pub fn resource_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.resource_names.unwrap_or_default();
        v.push(input.into());
        self.resource_names = ::std::option::Option::Some(v);
        self
    }
    /// <p>The names of the resources you want to remove from the resource mappings.</p>
    pub fn set_resource_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.resource_names = input;
        self
    }
    /// <p>The names of the resources you want to remove from the resource mappings.</p>
    pub fn get_resource_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.resource_names
    }
    /// Appends an item to `logical_stack_names`.
    ///
    /// To override the contents of this collection use [`set_logical_stack_names`](Self::set_logical_stack_names).
    ///
    /// <p>The names of the CloudFormation stacks you want to remove from the resource mappings.</p>
    pub fn logical_stack_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.logical_stack_names.unwrap_or_default();
        v.push(input.into());
        self.logical_stack_names = ::std::option::Option::Some(v);
        self
    }
    /// <p>The names of the CloudFormation stacks you want to remove from the resource mappings.</p>
    pub fn set_logical_stack_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.logical_stack_names = input;
        self
    }
    /// <p>The names of the CloudFormation stacks you want to remove from the resource mappings.</p>
    pub fn get_logical_stack_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.logical_stack_names
    }
    /// Appends an item to `app_registry_app_names`.
    ///
    /// To override the contents of this collection use [`set_app_registry_app_names`](Self::set_app_registry_app_names).
    ///
    /// <p>The names of the registered applications you want to remove from the resource mappings.</p>
    pub fn app_registry_app_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.app_registry_app_names.unwrap_or_default();
        v.push(input.into());
        self.app_registry_app_names = ::std::option::Option::Some(v);
        self
    }
    /// <p>The names of the registered applications you want to remove from the resource mappings.</p>
    pub fn set_app_registry_app_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.app_registry_app_names = input;
        self
    }
    /// <p>The names of the registered applications you want to remove from the resource mappings.</p>
    pub fn get_app_registry_app_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.app_registry_app_names
    }
    /// Appends an item to `resource_group_names`.
    ///
    /// To override the contents of this collection use [`set_resource_group_names`](Self::set_resource_group_names).
    ///
    /// <p>The names of the resource groups you want to remove from the resource mappings.</p>
    pub fn resource_group_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.resource_group_names.unwrap_or_default();
        v.push(input.into());
        self.resource_group_names = ::std::option::Option::Some(v);
        self
    }
    /// <p>The names of the resource groups you want to remove from the resource mappings.</p>
    pub fn set_resource_group_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.resource_group_names = input;
        self
    }
    /// <p>The names of the resource groups you want to remove from the resource mappings.</p>
    pub fn get_resource_group_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.resource_group_names
    }
    /// Appends an item to `terraform_source_names`.
    ///
    /// To override the contents of this collection use [`set_terraform_source_names`](Self::set_terraform_source_names).
    ///
    /// <p>The names of the Terraform sources you want to remove from the resource mappings.</p>
    pub fn terraform_source_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.terraform_source_names.unwrap_or_default();
        v.push(input.into());
        self.terraform_source_names = ::std::option::Option::Some(v);
        self
    }
    /// <p>The names of the Terraform sources you want to remove from the resource mappings.</p>
    pub fn set_terraform_source_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.terraform_source_names = input;
        self
    }
    /// <p>The names of the Terraform sources you want to remove from the resource mappings.</p>
    pub fn get_terraform_source_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.terraform_source_names
    }
    /// Appends an item to `eks_source_names`.
    ///
    /// To override the contents of this collection use [`set_eks_source_names`](Self::set_eks_source_names).
    ///
    /// <p>The names of the Amazon Elastic Kubernetes Service clusters and namespaces you want to remove from the resource mappings.</p> <note>
    /// <p>This parameter accepts values in "eks-cluster/namespace" format.</p>
    /// </note>
    pub fn eks_source_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.eks_source_names.unwrap_or_default();
        v.push(input.into());
        self.eks_source_names = ::std::option::Option::Some(v);
        self
    }
    /// <p>The names of the Amazon Elastic Kubernetes Service clusters and namespaces you want to remove from the resource mappings.</p> <note>
    /// <p>This parameter accepts values in "eks-cluster/namespace" format.</p>
    /// </note>
    pub fn set_eks_source_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.eks_source_names = input;
        self
    }
    /// <p>The names of the Amazon Elastic Kubernetes Service clusters and namespaces you want to remove from the resource mappings.</p> <note>
    /// <p>This parameter accepts values in "eks-cluster/namespace" format.</p>
    /// </note>
    pub fn get_eks_source_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.eks_source_names
    }
    /// Consumes the builder and constructs a [`RemoveDraftAppVersionResourceMappingsInput`](crate::operation::remove_draft_app_version_resource_mappings::RemoveDraftAppVersionResourceMappingsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::remove_draft_app_version_resource_mappings::RemoveDraftAppVersionResourceMappingsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::remove_draft_app_version_resource_mappings::RemoveDraftAppVersionResourceMappingsInput {
                app_arn: self.app_arn,
                resource_names: self.resource_names,
                logical_stack_names: self.logical_stack_names,
                app_registry_app_names: self.app_registry_app_names,
                resource_group_names: self.resource_group_names,
                terraform_source_names: self.terraform_source_names,
                eks_source_names: self.eks_source_names,
            },
        )
    }
}
