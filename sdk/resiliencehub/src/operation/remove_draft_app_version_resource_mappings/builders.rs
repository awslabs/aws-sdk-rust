// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::remove_draft_app_version_resource_mappings::_remove_draft_app_version_resource_mappings_output::RemoveDraftAppVersionResourceMappingsOutputBuilder;

pub use crate::operation::remove_draft_app_version_resource_mappings::_remove_draft_app_version_resource_mappings_input::RemoveDraftAppVersionResourceMappingsInputBuilder;

/// Fluent builder constructing a request to `RemoveDraftAppVersionResourceMappings`.
///
/// <p>Removes resource mappings from a draft application version.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct RemoveDraftAppVersionResourceMappingsFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::remove_draft_app_version_resource_mappings::builders::RemoveDraftAppVersionResourceMappingsInputBuilder
            }
impl RemoveDraftAppVersionResourceMappingsFluentBuilder {
    /// Creates a new `RemoveDraftAppVersionResourceMappings`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::remove_draft_app_version_resource_mappings::RemoveDraftAppVersionResourceMappings, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::remove_draft_app_version_resource_mappings::RemoveDraftAppVersionResourceMappingsError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::remove_draft_app_version_resource_mappings::RemoveDraftAppVersionResourceMappingsOutput, aws_smithy_http::result::SdkError<crate::operation::remove_draft_app_version_resource_mappings::RemoveDraftAppVersionResourceMappingsError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    pub fn app_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.app_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    pub fn set_app_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_app_arn(input);
        self
    }
    /// Appends an item to `resourceNames`.
    ///
    /// To override the contents of this collection use [`set_resource_names`](Self::set_resource_names).
    ///
    /// <p>The names of the resources to remove from the resource mappings.</p>
    pub fn resource_names(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.resource_names(input.into());
        self
    }
    /// <p>The names of the resources to remove from the resource mappings.</p>
    pub fn set_resource_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_resource_names(input);
        self
    }
    /// Appends an item to `logicalStackNames`.
    ///
    /// To override the contents of this collection use [`set_logical_stack_names`](Self::set_logical_stack_names).
    ///
    /// <p>The names of the CloudFormation stacks to remove from the resource mappings.</p>
    pub fn logical_stack_names(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.logical_stack_names(input.into());
        self
    }
    /// <p>The names of the CloudFormation stacks to remove from the resource mappings.</p>
    pub fn set_logical_stack_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_logical_stack_names(input);
        self
    }
    /// Appends an item to `appRegistryAppNames`.
    ///
    /// To override the contents of this collection use [`set_app_registry_app_names`](Self::set_app_registry_app_names).
    ///
    /// <p>The names of the registered applications to remove from the resource mappings.</p>
    pub fn app_registry_app_names(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.app_registry_app_names(input.into());
        self
    }
    /// <p>The names of the registered applications to remove from the resource mappings.</p>
    pub fn set_app_registry_app_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_app_registry_app_names(input);
        self
    }
    /// Appends an item to `resourceGroupNames`.
    ///
    /// To override the contents of this collection use [`set_resource_group_names`](Self::set_resource_group_names).
    ///
    /// <p>The names of the resource groups to remove from the resource mappings.</p>
    pub fn resource_group_names(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.resource_group_names(input.into());
        self
    }
    /// <p>The names of the resource groups to remove from the resource mappings.</p>
    pub fn set_resource_group_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_resource_group_names(input);
        self
    }
    /// Appends an item to `terraformSourceNames`.
    ///
    /// To override the contents of this collection use [`set_terraform_source_names`](Self::set_terraform_source_names).
    ///
    /// <p> </p>
    pub fn terraform_source_names(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.terraform_source_names(input.into());
        self
    }
    /// <p> </p>
    pub fn set_terraform_source_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_terraform_source_names(input);
        self
    }
}
