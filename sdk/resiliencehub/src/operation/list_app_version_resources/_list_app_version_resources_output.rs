// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListAppVersionResourcesOutput {
    /// <p>The physical resources in the application version.</p>
    #[doc(hidden)]
    pub physical_resources: std::option::Option<std::vec::Vec<crate::types::PhysicalResource>>,
    /// <p>The identifier for a specific resolution.</p>
    #[doc(hidden)]
    pub resolution_id: std::option::Option<std::string::String>,
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListAppVersionResourcesOutput {
    /// <p>The physical resources in the application version.</p>
    pub fn physical_resources(&self) -> std::option::Option<&[crate::types::PhysicalResource]> {
        self.physical_resources.as_deref()
    }
    /// <p>The identifier for a specific resolution.</p>
    pub fn resolution_id(&self) -> std::option::Option<&str> {
        self.resolution_id.as_deref()
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListAppVersionResourcesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListAppVersionResourcesOutput {
    /// Creates a new builder-style object to manufacture [`ListAppVersionResourcesOutput`](crate::operation::list_app_version_resources::ListAppVersionResourcesOutput).
    pub fn builder(
    ) -> crate::operation::list_app_version_resources::builders::ListAppVersionResourcesOutputBuilder
    {
        crate::operation::list_app_version_resources::builders::ListAppVersionResourcesOutputBuilder::default()
    }
}

/// A builder for [`ListAppVersionResourcesOutput`](crate::operation::list_app_version_resources::ListAppVersionResourcesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListAppVersionResourcesOutputBuilder {
    pub(crate) physical_resources:
        std::option::Option<std::vec::Vec<crate::types::PhysicalResource>>,
    pub(crate) resolution_id: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListAppVersionResourcesOutputBuilder {
    /// Appends an item to `physical_resources`.
    ///
    /// To override the contents of this collection use [`set_physical_resources`](Self::set_physical_resources).
    ///
    /// <p>The physical resources in the application version.</p>
    pub fn physical_resources(mut self, input: crate::types::PhysicalResource) -> Self {
        let mut v = self.physical_resources.unwrap_or_default();
        v.push(input);
        self.physical_resources = Some(v);
        self
    }
    /// <p>The physical resources in the application version.</p>
    pub fn set_physical_resources(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PhysicalResource>>,
    ) -> Self {
        self.physical_resources = input;
        self
    }
    /// <p>The identifier for a specific resolution.</p>
    pub fn resolution_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resolution_id = Some(input.into());
        self
    }
    /// <p>The identifier for a specific resolution.</p>
    pub fn set_resolution_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resolution_id = input;
        self
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListAppVersionResourcesOutput`](crate::operation::list_app_version_resources::ListAppVersionResourcesOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_app_version_resources::ListAppVersionResourcesOutput {
        crate::operation::list_app_version_resources::ListAppVersionResourcesOutput {
            physical_resources: self.physical_resources,
            resolution_id: self.resolution_id,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
