// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::import_resources_to_draft_app_version::_import_resources_to_draft_app_version_output::ImportResourcesToDraftAppVersionOutputBuilder;

pub use crate::operation::import_resources_to_draft_app_version::_import_resources_to_draft_app_version_input::ImportResourcesToDraftAppVersionInputBuilder;

/// Fluent builder constructing a request to `ImportResourcesToDraftAppVersion`.
///
/// <p>Imports resources from sources such as a CloudFormation stack, resource-groups, or application registry app to a draft application version.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct ImportResourcesToDraftAppVersionFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::import_resources_to_draft_app_version::builders::ImportResourcesToDraftAppVersionInputBuilder
            }
impl ImportResourcesToDraftAppVersionFluentBuilder {
    /// Creates a new `ImportResourcesToDraftAppVersion`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::import_resources_to_draft_app_version::ImportResourcesToDraftAppVersion, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::import_resources_to_draft_app_version::ImportResourcesToDraftAppVersionError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::import_resources_to_draft_app_version::ImportResourcesToDraftAppVersionOutput, aws_smithy_http::result::SdkError<crate::operation::import_resources_to_draft_app_version::ImportResourcesToDraftAppVersionError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    pub fn app_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.app_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    pub fn set_app_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_app_arn(input);
        self
    }
    /// Appends an item to `sourceArns`.
    ///
    /// To override the contents of this collection use [`set_source_arns`](Self::set_source_arns).
    ///
    /// <p>The Amazon Resource Names (ARNs) for the resources that you want to import.</p>
    pub fn source_arns(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.source_arns(input.into());
        self
    }
    /// <p>The Amazon Resource Names (ARNs) for the resources that you want to import.</p>
    pub fn set_source_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_source_arns(input);
        self
    }
    /// Appends an item to `terraformSources`.
    ///
    /// To override the contents of this collection use [`set_terraform_sources`](Self::set_terraform_sources).
    ///
    /// <p> A list of terraform file s3 URLs you need to import. </p>
    pub fn terraform_sources(mut self, input: crate::types::TerraformSource) -> Self {
        self.inner = self.inner.terraform_sources(input);
        self
    }
    /// <p> A list of terraform file s3 URLs you need to import. </p>
    pub fn set_terraform_sources(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TerraformSource>>,
    ) -> Self {
        self.inner = self.inner.set_terraform_sources(input);
        self
    }
}
