// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListRecommendationTemplatesInput {
    /// <p>Amazon Resource Name (ARN) of the assessment. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub assessment_arn: ::std::option::Option<::std::string::String>,
    /// <p>The default is to sort by ascending <b>startTime</b>. To sort by descending <b>startTime</b>, set reverseOrder to <code>true</code>.</p>
    pub reverse_order: ::std::option::Option<bool>,
    /// <p>Status of the action.</p>
    pub status: ::std::option::Option<::std::vec::Vec<crate::types::RecommendationTemplateStatus>>,
    /// <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
    pub recommendation_template_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name for one of the listed recommendation templates.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>Null, or the token from a previous call to get the next set of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>Maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub max_results: ::std::option::Option<i32>,
}
impl ListRecommendationTemplatesInput {
    /// <p>Amazon Resource Name (ARN) of the assessment. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub fn assessment_arn(&self) -> ::std::option::Option<&str> {
        self.assessment_arn.as_deref()
    }
    /// <p>The default is to sort by ascending <b>startTime</b>. To sort by descending <b>startTime</b>, set reverseOrder to <code>true</code>.</p>
    pub fn reverse_order(&self) -> ::std::option::Option<bool> {
        self.reverse_order
    }
    /// <p>Status of the action.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.status.is_none()`.
    pub fn status(&self) -> &[crate::types::RecommendationTemplateStatus] {
        self.status.as_deref().unwrap_or_default()
    }
    /// <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
    pub fn recommendation_template_arn(&self) -> ::std::option::Option<&str> {
        self.recommendation_template_arn.as_deref()
    }
    /// <p>The name for one of the listed recommendation templates.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Null, or the token from a previous call to get the next set of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>Maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
}
impl ListRecommendationTemplatesInput {
    /// Creates a new builder-style object to manufacture [`ListRecommendationTemplatesInput`](crate::operation::list_recommendation_templates::ListRecommendationTemplatesInput).
    pub fn builder() -> crate::operation::list_recommendation_templates::builders::ListRecommendationTemplatesInputBuilder {
        crate::operation::list_recommendation_templates::builders::ListRecommendationTemplatesInputBuilder::default()
    }
}

/// A builder for [`ListRecommendationTemplatesInput`](crate::operation::list_recommendation_templates::ListRecommendationTemplatesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListRecommendationTemplatesInputBuilder {
    pub(crate) assessment_arn: ::std::option::Option<::std::string::String>,
    pub(crate) reverse_order: ::std::option::Option<bool>,
    pub(crate) status: ::std::option::Option<::std::vec::Vec<crate::types::RecommendationTemplateStatus>>,
    pub(crate) recommendation_template_arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
}
impl ListRecommendationTemplatesInputBuilder {
    /// <p>Amazon Resource Name (ARN) of the assessment. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    /// This field is required.
    pub fn assessment_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.assessment_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) of the assessment. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub fn set_assessment_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.assessment_arn = input;
        self
    }
    /// <p>Amazon Resource Name (ARN) of the assessment. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i> guide.</p>
    pub fn get_assessment_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.assessment_arn
    }
    /// <p>The default is to sort by ascending <b>startTime</b>. To sort by descending <b>startTime</b>, set reverseOrder to <code>true</code>.</p>
    pub fn reverse_order(mut self, input: bool) -> Self {
        self.reverse_order = ::std::option::Option::Some(input);
        self
    }
    /// <p>The default is to sort by ascending <b>startTime</b>. To sort by descending <b>startTime</b>, set reverseOrder to <code>true</code>.</p>
    pub fn set_reverse_order(mut self, input: ::std::option::Option<bool>) -> Self {
        self.reverse_order = input;
        self
    }
    /// <p>The default is to sort by ascending <b>startTime</b>. To sort by descending <b>startTime</b>, set reverseOrder to <code>true</code>.</p>
    pub fn get_reverse_order(&self) -> &::std::option::Option<bool> {
        &self.reverse_order
    }
    /// Appends an item to `status`.
    ///
    /// To override the contents of this collection use [`set_status`](Self::set_status).
    ///
    /// <p>Status of the action.</p>
    pub fn status(mut self, input: crate::types::RecommendationTemplateStatus) -> Self {
        let mut v = self.status.unwrap_or_default();
        v.push(input);
        self.status = ::std::option::Option::Some(v);
        self
    }
    /// <p>Status of the action.</p>
    pub fn set_status(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::RecommendationTemplateStatus>>) -> Self {
        self.status = input;
        self
    }
    /// <p>Status of the action.</p>
    pub fn get_status(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::RecommendationTemplateStatus>> {
        &self.status
    }
    /// <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
    pub fn recommendation_template_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.recommendation_template_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
    pub fn set_recommendation_template_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.recommendation_template_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) for a recommendation template.</p>
    pub fn get_recommendation_template_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.recommendation_template_arn
    }
    /// <p>The name for one of the listed recommendation templates.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name for one of the listed recommendation templates.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name for one of the listed recommendation templates.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>Null, or the token from a previous call to get the next set of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Null, or the token from a previous call to get the next set of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>Null, or the token from a previous call to get the next set of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>Maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>Maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>Maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Consumes the builder and constructs a [`ListRecommendationTemplatesInput`](crate::operation::list_recommendation_templates::ListRecommendationTemplatesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_recommendation_templates::ListRecommendationTemplatesInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_recommendation_templates::ListRecommendationTemplatesInput {
            assessment_arn: self.assessment_arn,
            reverse_order: self.reverse_order,
            status: self.status,
            recommendation_template_arn: self.recommendation_template_arn,
            name: self.name,
            next_token: self.next_token,
            max_results: self.max_results,
        })
    }
}
