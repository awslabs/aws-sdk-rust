// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateRecommendationTemplateOutput {
    /// <p>The newly created recommendation template, returned as an object. This object includes the template's name, format, status, tags, Amazon S3 bucket location, and more.</p>
    #[doc(hidden)]
    pub recommendation_template: std::option::Option<crate::types::RecommendationTemplate>,
    _request_id: Option<String>,
}
impl CreateRecommendationTemplateOutput {
    /// <p>The newly created recommendation template, returned as an object. This object includes the template's name, format, status, tags, Amazon S3 bucket location, and more.</p>
    pub fn recommendation_template(
        &self,
    ) -> std::option::Option<&crate::types::RecommendationTemplate> {
        self.recommendation_template.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateRecommendationTemplateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateRecommendationTemplateOutput {
    /// Creates a new builder-style object to manufacture [`CreateRecommendationTemplateOutput`](crate::operation::create_recommendation_template::CreateRecommendationTemplateOutput).
    pub fn builder() -> crate::operation::create_recommendation_template::builders::CreateRecommendationTemplateOutputBuilder{
        crate::operation::create_recommendation_template::builders::CreateRecommendationTemplateOutputBuilder::default()
    }
}

/// A builder for [`CreateRecommendationTemplateOutput`](crate::operation::create_recommendation_template::CreateRecommendationTemplateOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateRecommendationTemplateOutputBuilder {
    pub(crate) recommendation_template: std::option::Option<crate::types::RecommendationTemplate>,
    _request_id: Option<String>,
}
impl CreateRecommendationTemplateOutputBuilder {
    /// <p>The newly created recommendation template, returned as an object. This object includes the template's name, format, status, tags, Amazon S3 bucket location, and more.</p>
    pub fn recommendation_template(mut self, input: crate::types::RecommendationTemplate) -> Self {
        self.recommendation_template = Some(input);
        self
    }
    /// <p>The newly created recommendation template, returned as an object. This object includes the template's name, format, status, tags, Amazon S3 bucket location, and more.</p>
    pub fn set_recommendation_template(
        mut self,
        input: std::option::Option<crate::types::RecommendationTemplate>,
    ) -> Self {
        self.recommendation_template = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateRecommendationTemplateOutput`](crate::operation::create_recommendation_template::CreateRecommendationTemplateOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_recommendation_template::CreateRecommendationTemplateOutput {
        crate::operation::create_recommendation_template::CreateRecommendationTemplateOutput {
            recommendation_template: self.recommendation_template,
            _request_id: self._request_id,
        }
    }
}
