// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListResourcesForWebACL`](crate::client::fluent_builders::ListResourcesForWebACL) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`web_acl_arn(impl Into<String>)`](crate::client::fluent_builders::ListResourcesForWebACL::web_acl_arn) / [`set_web_acl_arn(Option<String>)`](crate::client::fluent_builders::ListResourcesForWebACL::set_web_acl_arn): <p>The Amazon Resource Name (ARN) of the web ACL.</p>
    ///   - [`resource_type(ResourceType)`](crate::client::fluent_builders::ListResourcesForWebACL::resource_type) / [`set_resource_type(Option<ResourceType>)`](crate::client::fluent_builders::ListResourcesForWebACL::set_resource_type): <p>Used for web ACLs that are scoped for regional applications. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AppSync GraphQL API, or an Amazon Cognito user pool. </p> <note>   <p>If you don't provide a resource type, the call uses the resource type <code>APPLICATION_LOAD_BALANCER</code>. </p>  </note>  <p>Default: <code>APPLICATION_LOAD_BALANCER</code> </p>
    /// - On success, responds with [`ListResourcesForWebAclOutput`](crate::output::ListResourcesForWebAclOutput) with field(s):
    ///   - [`resource_arns(Option<Vec<String>>)`](crate::output::ListResourcesForWebAclOutput::resource_arns): <p>The array of Amazon Resource Names (ARNs) of the associated resources.</p>
    /// - On failure, responds with [`SdkError<ListResourcesForWebACLError>`](crate::error::ListResourcesForWebACLError)
    pub fn list_resources_for_web_acl(
        &self,
    ) -> crate::client::fluent_builders::ListResourcesForWebACL {
        crate::client::fluent_builders::ListResourcesForWebACL::new(self.handle.clone())
    }
}
