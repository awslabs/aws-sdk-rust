// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateWebACL`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_name): <p>The name of the web ACL. You cannot change the name of a web ACL after you create it.</p>
    ///   - [`scope(Scope)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::scope) / [`set_scope(Option<Scope>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_scope): <p>Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AppSync GraphQL API, a Amazon Cognito user pool, or an App Runner service. </p>  <p>To work with CloudFront, you must also specify the Region US East (N. Virginia) as follows: </p>  <ul>   <li> <p>CLI - Specify the Region when you use the CloudFront scope: <code>--scope=CLOUDFRONT --region=us-east-1</code>. </p> </li>   <li> <p>API and SDKs - For all calls, use the Region endpoint us-east-1. </p> </li>  </ul>
    ///   - [`default_action(DefaultAction)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::default_action) / [`set_default_action(Option<DefaultAction>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_default_action): <p>The action to perform if none of the <code>Rules</code> contained in the <code>WebACL</code> match. </p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_description): <p>A description of the web ACL that helps with identification. </p>
    ///   - [`rules(Vec<Rule>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::rules) / [`set_rules(Option<Vec<Rule>>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_rules): <p>The <code>Rule</code> statements used to identify the web requests that you want to allow, block, or count. Each rule includes one top-level statement that WAF uses to identify matching web requests, and parameters that govern how WAF handles them. </p>
    ///   - [`visibility_config(VisibilityConfig)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::visibility_config) / [`set_visibility_config(Option<VisibilityConfig>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_visibility_config): <p>Defines and enables Amazon CloudWatch metrics and web request sample collection. </p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_tags): <p>An array of key:value pairs to associate with the resource.</p>
    ///   - [`custom_response_bodies(HashMap<String, CustomResponseBody>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::custom_response_bodies) / [`set_custom_response_bodies(Option<HashMap<String, CustomResponseBody>>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_custom_response_bodies): <p>A map of custom response keys and content bodies. When you create a rule with a block action, you can send a custom response to the web request. You define these for the web ACL, and then use them in the rules and default actions that you define in the web ACL. </p>  <p>For information about customizing web requests and responses, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html">Customizing web requests and responses in WAF</a> in the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">WAF Developer Guide</a>. </p>  <p>For information about the limits on count and size for custom request and response settings, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/limits.html">WAF quotas</a> in the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">WAF Developer Guide</a>. </p>
    ///   - [`captcha_config(CaptchaConfig)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::captcha_config) / [`set_captcha_config(Option<CaptchaConfig>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_captcha_config): <p>Specifies how WAF should handle <code>CAPTCHA</code> evaluations for rules that don't have their own <code>CaptchaConfig</code> settings. If you don't specify this, WAF uses its default settings for <code>CaptchaConfig</code>. </p>
    ///   - [`challenge_config(ChallengeConfig)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::challenge_config) / [`set_challenge_config(Option<ChallengeConfig>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_challenge_config): <p>Specifies how WAF should handle challenge evaluations for rules that don't have their own <code>ChallengeConfig</code> settings. If you don't specify this, WAF uses its default settings for <code>ChallengeConfig</code>. </p>
    ///   - [`token_domains(Vec<String>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::token_domains) / [`set_token_domains(Option<Vec<String>>)`](crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::set_token_domains): <p>Specifies the domains that WAF should accept in a web request token. This enables the use of tokens across multiple protected websites. When WAF provides a token, it uses the domain of the Amazon Web Services resource that the web ACL is protecting. If you don't specify a list of token domains, WAF accepts tokens only for the domain of the protected resource. With a token domain list, WAF accepts the resource's host domain plus all domains in the token domain list, including their prefixed subdomains.</p>  <p>Example JSON: <code>"TokenDomains": { "mywebsite.com", "myotherwebsite.com" }</code> </p>  <p>Public suffixes aren't allowed. For example, you can't use <code>usa.gov</code> or <code>co.uk</code> as token domains.</p>
    /// - On success, responds with [`CreateWebAclOutput`](crate::operation::create_web_acl::CreateWebAclOutput) with field(s):
    ///   - [`summary(Option<WebAclSummary>)`](crate::operation::create_web_acl::CreateWebAclOutput::summary): <p>High-level information about a <code>WebACL</code>, returned by operations like create and list. This provides information like the ID, that you can use to retrieve and manage a <code>WebACL</code>, and the ARN, that you provide to operations like <code>AssociateWebACL</code>.</p>
    /// - On failure, responds with [`SdkError<CreateWebACLError>`](crate::operation::create_web_acl::CreateWebACLError)
    pub fn create_web_acl(
        &self,
    ) -> crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder {
        crate::operation::create_web_acl::builders::CreateWebACLFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
