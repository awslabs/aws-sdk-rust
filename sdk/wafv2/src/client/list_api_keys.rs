// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAPIKeys`](crate::operation::list_api_keys::builders::ListAPIKeysFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`scope(Scope)`](crate::operation::list_api_keys::builders::ListAPIKeysFluentBuilder::scope) / [`set_scope(Option<Scope>)`](crate::operation::list_api_keys::builders::ListAPIKeysFluentBuilder::set_scope):<br>required: **true**<br><p>Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AppSync GraphQL API, an Amazon Cognito user pool, an App Runner service, or an Amazon Web Services Verified Access instance. </p>  <p>To work with CloudFront, you must also specify the Region US East (N. Virginia) as follows: </p>  <ul>   <li> <p>CLI - Specify the Region when you use the CloudFront scope: <code>--scope=CLOUDFRONT --region=us-east-1</code>. </p> </li>   <li> <p>API and SDKs - For all calls, use the Region endpoint us-east-1. </p> </li>  </ul><br>
    ///   - [`next_marker(impl Into<String>)`](crate::operation::list_api_keys::builders::ListAPIKeysFluentBuilder::next_marker) / [`set_next_marker(Option<String>)`](crate::operation::list_api_keys::builders::ListAPIKeysFluentBuilder::set_next_marker):<br>required: **false**<br><p>When you request a list of objects with a <code>Limit</code> setting, if the number of objects that are still available for retrieval exceeds the limit, WAF returns a <code>NextMarker</code> value in the response. To retrieve the next batch of objects, provide the marker from the prior call in your next request.</p><br>
    ///   - [`limit(i32)`](crate::operation::list_api_keys::builders::ListAPIKeysFluentBuilder::limit) / [`set_limit(Option<i32>)`](crate::operation::list_api_keys::builders::ListAPIKeysFluentBuilder::set_limit):<br>required: **false**<br><p>The maximum number of objects that you want WAF to return for this request. If more objects are available, in the response, WAF provides a <code>NextMarker</code> value that you can use in a subsequent call to get the next batch of objects.</p><br>
    /// - On success, responds with [`ListApiKeysOutput`](crate::operation::list_api_keys::ListApiKeysOutput) with field(s):
    ///   - [`next_marker(Option<String>)`](crate::operation::list_api_keys::ListApiKeysOutput::next_marker): <p>When you request a list of objects with a <code>Limit</code> setting, if the number of objects that are still available for retrieval exceeds the limit, WAF returns a <code>NextMarker</code> value in the response. To retrieve the next batch of objects, provide the marker from the prior call in your next request.</p>
    ///   - [`api_key_summaries(Option<Vec::<ApiKeySummary>>)`](crate::operation::list_api_keys::ListApiKeysOutput::api_key_summaries): <p>The array of key summaries. If you specified a <code>Limit</code> in your request, this might not be the full list. </p>
    ///   - [`application_integration_url(Option<String>)`](crate::operation::list_api_keys::ListApiKeysOutput::application_integration_url): <p>The CAPTCHA application integration URL, for use in your JavaScript implementation. </p>
    /// - On failure, responds with [`SdkError<ListAPIKeysError>`](crate::operation::list_api_keys::ListAPIKeysError)
    pub fn list_api_keys(&self) -> crate::operation::list_api_keys::builders::ListAPIKeysFluentBuilder {
        crate::operation::list_api_keys::builders::ListAPIKeysFluentBuilder::new(self.handle.clone())
    }
}
