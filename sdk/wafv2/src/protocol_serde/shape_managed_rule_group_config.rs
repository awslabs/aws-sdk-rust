// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_managed_rule_group_config(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ManagedRuleGroupConfig,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.login_path {
        object.key("LoginPath").string(var_1.as_str());
    }
    if let Some(var_2) = &input.payload_type {
        object.key("PayloadType").string(var_2.as_str());
    }
    if let Some(var_3) = &input.username_field {
        #[allow(unused_mut)]
        let mut object_4 = object.key("UsernameField").start_object();
        crate::protocol_serde::shape_username_field::ser_username_field(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.password_field {
        #[allow(unused_mut)]
        let mut object_6 = object.key("PasswordField").start_object();
        crate::protocol_serde::shape_password_field::ser_password_field(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.aws_managed_rules_bot_control_rule_set {
        #[allow(unused_mut)]
        let mut object_8 = object.key("AWSManagedRulesBotControlRuleSet").start_object();
        crate::protocol_serde::shape_aws_managed_rules_bot_control_rule_set::ser_aws_managed_rules_bot_control_rule_set(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.aws_managed_rules_atp_rule_set {
        #[allow(unused_mut)]
        let mut object_10 = object.key("AWSManagedRulesATPRuleSet").start_object();
        crate::protocol_serde::shape_aws_managed_rules_atp_rule_set::ser_aws_managed_rules_atp_rule_set(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.aws_managed_rules_acfp_rule_set {
        #[allow(unused_mut)]
        let mut object_12 = object.key("AWSManagedRulesACFPRuleSet").start_object();
        crate::protocol_serde::shape_aws_managed_rules_acfp_rule_set::ser_aws_managed_rules_acfp_rule_set(&mut object_12, var_11)?;
        object_12.finish();
    }
    Ok(())
}

pub(crate) fn de_managed_rule_group_config<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::ManagedRuleGroupConfig>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::ManagedRuleGroupConfigBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "LoginPath" => {
                            builder = builder.set_login_path(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "PayloadType" => {
                            builder = builder.set_payload_type(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::PayloadType::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "UsernameField" => {
                            builder = builder.set_username_field(crate::protocol_serde::shape_username_field::de_username_field(tokens)?);
                        }
                        "PasswordField" => {
                            builder = builder.set_password_field(crate::protocol_serde::shape_password_field::de_password_field(tokens)?);
                        }
                        "AWSManagedRulesBotControlRuleSet" => {
                            builder = builder.set_aws_managed_rules_bot_control_rule_set(
                                crate::protocol_serde::shape_aws_managed_rules_bot_control_rule_set::de_aws_managed_rules_bot_control_rule_set(
                                    tokens,
                                )?,
                            );
                        }
                        "AWSManagedRulesATPRuleSet" => {
                            builder = builder.set_aws_managed_rules_atp_rule_set(
                                crate::protocol_serde::shape_aws_managed_rules_atp_rule_set::de_aws_managed_rules_atp_rule_set(tokens)?,
                            );
                        }
                        "AWSManagedRulesACFPRuleSet" => {
                            builder = builder.set_aws_managed_rules_acfp_rule_set(
                                crate::protocol_serde::shape_aws_managed_rules_acfp_rule_set::de_aws_managed_rules_acfp_rule_set(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
