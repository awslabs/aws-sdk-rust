// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies a single rule in a rule group whose action you want to override to <code>Count</code>. </p> <note>
/// <p>Instead of this option, use <code>RuleActionOverrides</code>. It accepts any valid action setting, including <code>Count</code>.</p>
/// </note>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExcludedRule {
    /// <p>The name of the rule whose action you want to override to <code>Count</code>.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl ExcludedRule {
    /// <p>The name of the rule whose action you want to override to <code>Count</code>.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl ExcludedRule {
    /// Creates a new builder-style object to manufacture [`ExcludedRule`](crate::types::ExcludedRule).
    pub fn builder() -> crate::types::builders::ExcludedRuleBuilder {
        crate::types::builders::ExcludedRuleBuilder::default()
    }
}

/// A builder for [`ExcludedRule`](crate::types::ExcludedRule).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExcludedRuleBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
}
impl ExcludedRuleBuilder {
    /// <p>The name of the rule whose action you want to override to <code>Count</code>.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the rule whose action you want to override to <code>Count</code>.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`ExcludedRule`](crate::types::ExcludedRule).
    pub fn build(self) -> crate::types::ExcludedRule {
        crate::types::ExcludedRule { name: self.name }
    }
}
