// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>List of labels used by one or more of the rules of a <code>RuleGroup</code>. This summary object is used for the following rule group lists: </p>
/// <ul>
/// <li> <p> <code>AvailableLabels</code> - Labels that rules add to matching requests. These labels are defined in the <code>RuleLabels</code> for a <code>Rule</code>. </p> </li>
/// <li> <p> <code>ConsumedLabels</code> - Labels that rules match against. These labels are defined in a <code>LabelMatchStatement</code> specification, in the <code>Statement</code> definition of a rule. </p> </li>
/// </ul>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LabelSummary {
    /// <p>An individual label specification.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl LabelSummary {
    /// <p>An individual label specification.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl LabelSummary {
    /// Creates a new builder-style object to manufacture [`LabelSummary`](crate::types::LabelSummary).
    pub fn builder() -> crate::types::builders::LabelSummaryBuilder {
        crate::types::builders::LabelSummaryBuilder::default()
    }
}

/// A builder for [`LabelSummary`](crate::types::LabelSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LabelSummaryBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
}
impl LabelSummaryBuilder {
    /// <p>An individual label specification.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>An individual label specification.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`LabelSummary`](crate::types::LabelSummary).
    pub fn build(self) -> crate::types::LabelSummary {
        crate::types::LabelSummary { name: self.name }
    }
}
