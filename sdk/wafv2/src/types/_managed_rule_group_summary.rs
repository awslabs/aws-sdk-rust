// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>High-level information about a managed rule group, returned by <code>ListAvailableManagedRuleGroups</code>. This provides information like the name and vendor name, that you provide when you add a <code>ManagedRuleGroupStatement</code> to a web ACL. Managed rule groups include Amazon Web Services Managed Rules rule groups, which are free of charge to WAF customers, and Amazon Web Services Marketplace managed rule groups, which you can subscribe to through Amazon Web Services Marketplace. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ManagedRuleGroupSummary {
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify the rule group.</p>
    #[doc(hidden)]
    pub vendor_name: std::option::Option<std::string::String>,
    /// <p>The name of the managed rule group. You use this, along with the vendor name, to identify the rule group.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>Indicates whether the managed rule group is versioned. If it is, you can retrieve the versions list by calling <code>ListAvailableManagedRuleGroupVersions</code>. </p>
    #[doc(hidden)]
    pub versioning_supported: bool,
    /// <p>The description of the managed rule group, provided by Amazon Web Services Managed Rules or the Amazon Web Services Marketplace seller who manages it.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
}
impl ManagedRuleGroupSummary {
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify the rule group.</p>
    pub fn vendor_name(&self) -> std::option::Option<&str> {
        self.vendor_name.as_deref()
    }
    /// <p>The name of the managed rule group. You use this, along with the vendor name, to identify the rule group.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Indicates whether the managed rule group is versioned. If it is, you can retrieve the versions list by calling <code>ListAvailableManagedRuleGroupVersions</code>. </p>
    pub fn versioning_supported(&self) -> bool {
        self.versioning_supported
    }
    /// <p>The description of the managed rule group, provided by Amazon Web Services Managed Rules or the Amazon Web Services Marketplace seller who manages it.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl ManagedRuleGroupSummary {
    /// Creates a new builder-style object to manufacture [`ManagedRuleGroupSummary`](crate::types::ManagedRuleGroupSummary).
    pub fn builder() -> crate::types::builders::ManagedRuleGroupSummaryBuilder {
        crate::types::builders::ManagedRuleGroupSummaryBuilder::default()
    }
}

/// A builder for [`ManagedRuleGroupSummary`](crate::types::ManagedRuleGroupSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ManagedRuleGroupSummaryBuilder {
    pub(crate) vendor_name: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) versioning_supported: std::option::Option<bool>,
    pub(crate) description: std::option::Option<std::string::String>,
}
impl ManagedRuleGroupSummaryBuilder {
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify the rule group.</p>
    pub fn vendor_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.vendor_name = Some(input.into());
        self
    }
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify the rule group.</p>
    pub fn set_vendor_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.vendor_name = input;
        self
    }
    /// <p>The name of the managed rule group. You use this, along with the vendor name, to identify the rule group.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the managed rule group. You use this, along with the vendor name, to identify the rule group.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Indicates whether the managed rule group is versioned. If it is, you can retrieve the versions list by calling <code>ListAvailableManagedRuleGroupVersions</code>. </p>
    pub fn versioning_supported(mut self, input: bool) -> Self {
        self.versioning_supported = Some(input);
        self
    }
    /// <p>Indicates whether the managed rule group is versioned. If it is, you can retrieve the versions list by calling <code>ListAvailableManagedRuleGroupVersions</code>. </p>
    pub fn set_versioning_supported(mut self, input: std::option::Option<bool>) -> Self {
        self.versioning_supported = input;
        self
    }
    /// <p>The description of the managed rule group, provided by Amazon Web Services Managed Rules or the Amazon Web Services Marketplace seller who manages it.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the managed rule group, provided by Amazon Web Services Managed Rules or the Amazon Web Services Marketplace seller who manages it.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Consumes the builder and constructs a [`ManagedRuleGroupSummary`](crate::types::ManagedRuleGroupSummary).
    pub fn build(self) -> crate::types::ManagedRuleGroupSummary {
        crate::types::ManagedRuleGroupSummary {
            vendor_name: self.vendor_name,
            name: self.name,
            versioning_supported: self.versioning_supported.unwrap_or_default(),
            description: self.description,
        }
    }
}
