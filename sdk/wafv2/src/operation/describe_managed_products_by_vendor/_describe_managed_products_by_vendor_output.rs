// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeManagedProductsByVendorOutput {
    /// <p>High-level information for the managed rule groups owned by the specified vendor. </p>
    pub managed_products: ::std::option::Option<::std::vec::Vec<crate::types::ManagedProductDescriptor>>,
    _request_id: Option<String>,
}
impl DescribeManagedProductsByVendorOutput {
    /// <p>High-level information for the managed rule groups owned by the specified vendor. </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.managed_products.is_none()`.
    pub fn managed_products(&self) -> &[crate::types::ManagedProductDescriptor] {
        self.managed_products.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for DescribeManagedProductsByVendorOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeManagedProductsByVendorOutput {
    /// Creates a new builder-style object to manufacture [`DescribeManagedProductsByVendorOutput`](crate::operation::describe_managed_products_by_vendor::DescribeManagedProductsByVendorOutput).
    pub fn builder() -> crate::operation::describe_managed_products_by_vendor::builders::DescribeManagedProductsByVendorOutputBuilder {
        crate::operation::describe_managed_products_by_vendor::builders::DescribeManagedProductsByVendorOutputBuilder::default()
    }
}

/// A builder for [`DescribeManagedProductsByVendorOutput`](crate::operation::describe_managed_products_by_vendor::DescribeManagedProductsByVendorOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeManagedProductsByVendorOutputBuilder {
    pub(crate) managed_products: ::std::option::Option<::std::vec::Vec<crate::types::ManagedProductDescriptor>>,
    _request_id: Option<String>,
}
impl DescribeManagedProductsByVendorOutputBuilder {
    /// Appends an item to `managed_products`.
    ///
    /// To override the contents of this collection use [`set_managed_products`](Self::set_managed_products).
    ///
    /// <p>High-level information for the managed rule groups owned by the specified vendor. </p>
    pub fn managed_products(mut self, input: crate::types::ManagedProductDescriptor) -> Self {
        let mut v = self.managed_products.unwrap_or_default();
        v.push(input);
        self.managed_products = ::std::option::Option::Some(v);
        self
    }
    /// <p>High-level information for the managed rule groups owned by the specified vendor. </p>
    pub fn set_managed_products(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ManagedProductDescriptor>>) -> Self {
        self.managed_products = input;
        self
    }
    /// <p>High-level information for the managed rule groups owned by the specified vendor. </p>
    pub fn get_managed_products(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ManagedProductDescriptor>> {
        &self.managed_products
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeManagedProductsByVendorOutput`](crate::operation::describe_managed_products_by_vendor::DescribeManagedProductsByVendorOutput).
    pub fn build(self) -> crate::operation::describe_managed_products_by_vendor::DescribeManagedProductsByVendorOutput {
        crate::operation::describe_managed_products_by_vendor::DescribeManagedProductsByVendorOutput {
            managed_products: self.managed_products,
            _request_id: self._request_id,
        }
    }
}
