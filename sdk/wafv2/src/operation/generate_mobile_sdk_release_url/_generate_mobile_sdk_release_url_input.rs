// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GenerateMobileSdkReleaseUrlInput {
    /// <p>The device platform.</p>
    #[doc(hidden)]
    pub platform: std::option::Option<crate::types::Platform>,
    /// <p>The release version. For the latest available version, specify <code>LATEST</code>.</p>
    #[doc(hidden)]
    pub release_version: std::option::Option<std::string::String>,
}
impl GenerateMobileSdkReleaseUrlInput {
    /// <p>The device platform.</p>
    pub fn platform(&self) -> std::option::Option<&crate::types::Platform> {
        self.platform.as_ref()
    }
    /// <p>The release version. For the latest available version, specify <code>LATEST</code>.</p>
    pub fn release_version(&self) -> std::option::Option<&str> {
        self.release_version.as_deref()
    }
}
impl GenerateMobileSdkReleaseUrlInput {
    /// Creates a new builder-style object to manufacture [`GenerateMobileSdkReleaseUrlInput`](crate::operation::generate_mobile_sdk_release_url::GenerateMobileSdkReleaseUrlInput).
    pub fn builder() -> crate::operation::generate_mobile_sdk_release_url::builders::GenerateMobileSdkReleaseUrlInputBuilder{
        crate::operation::generate_mobile_sdk_release_url::builders::GenerateMobileSdkReleaseUrlInputBuilder::default()
    }
}

/// A builder for [`GenerateMobileSdkReleaseUrlInput`](crate::operation::generate_mobile_sdk_release_url::GenerateMobileSdkReleaseUrlInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GenerateMobileSdkReleaseUrlInputBuilder {
    pub(crate) platform: std::option::Option<crate::types::Platform>,
    pub(crate) release_version: std::option::Option<std::string::String>,
}
impl GenerateMobileSdkReleaseUrlInputBuilder {
    /// <p>The device platform.</p>
    pub fn platform(mut self, input: crate::types::Platform) -> Self {
        self.platform = Some(input);
        self
    }
    /// <p>The device platform.</p>
    pub fn set_platform(mut self, input: std::option::Option<crate::types::Platform>) -> Self {
        self.platform = input;
        self
    }
    /// <p>The release version. For the latest available version, specify <code>LATEST</code>.</p>
    pub fn release_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.release_version = Some(input.into());
        self
    }
    /// <p>The release version. For the latest available version, specify <code>LATEST</code>.</p>
    pub fn set_release_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.release_version = input;
        self
    }
    /// Consumes the builder and constructs a [`GenerateMobileSdkReleaseUrlInput`](crate::operation::generate_mobile_sdk_release_url::GenerateMobileSdkReleaseUrlInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::generate_mobile_sdk_release_url::GenerateMobileSdkReleaseUrlInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::generate_mobile_sdk_release_url::GenerateMobileSdkReleaseUrlInput {
                platform: self.platform,
                release_version: self.release_version,
            },
        )
    }
}
