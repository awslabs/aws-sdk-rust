// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetSuiteRunInput {
    /// <p>Suite definition ID for the test suite run.</p>
    #[doc(hidden)]
    pub suite_definition_id: std::option::Option<std::string::String>,
    /// <p>Suite run ID for the test suite run.</p>
    #[doc(hidden)]
    pub suite_run_id: std::option::Option<std::string::String>,
}
impl GetSuiteRunInput {
    /// <p>Suite definition ID for the test suite run.</p>
    pub fn suite_definition_id(&self) -> std::option::Option<&str> {
        self.suite_definition_id.as_deref()
    }
    /// <p>Suite run ID for the test suite run.</p>
    pub fn suite_run_id(&self) -> std::option::Option<&str> {
        self.suite_run_id.as_deref()
    }
}
impl GetSuiteRunInput {
    /// Creates a new builder-style object to manufacture [`GetSuiteRunInput`](crate::operation::get_suite_run::GetSuiteRunInput).
    pub fn builder() -> crate::operation::get_suite_run::builders::GetSuiteRunInputBuilder {
        crate::operation::get_suite_run::builders::GetSuiteRunInputBuilder::default()
    }
}

/// A builder for [`GetSuiteRunInput`](crate::operation::get_suite_run::GetSuiteRunInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetSuiteRunInputBuilder {
    pub(crate) suite_definition_id: std::option::Option<std::string::String>,
    pub(crate) suite_run_id: std::option::Option<std::string::String>,
}
impl GetSuiteRunInputBuilder {
    /// <p>Suite definition ID for the test suite run.</p>
    pub fn suite_definition_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.suite_definition_id = Some(input.into());
        self
    }
    /// <p>Suite definition ID for the test suite run.</p>
    pub fn set_suite_definition_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.suite_definition_id = input;
        self
    }
    /// <p>Suite run ID for the test suite run.</p>
    pub fn suite_run_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.suite_run_id = Some(input.into());
        self
    }
    /// <p>Suite run ID for the test suite run.</p>
    pub fn set_suite_run_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.suite_run_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetSuiteRunInput`](crate::operation::get_suite_run::GetSuiteRunInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_suite_run::GetSuiteRunInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_suite_run::GetSuiteRunInput {
            suite_definition_id: self.suite_definition_id,
            suite_run_id: self.suite_run_id,
        })
    }
}
