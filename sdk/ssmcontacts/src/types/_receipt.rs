// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Records events during an engagement.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Receipt {
    /// <p>The Amazon Resource Name (ARN) of the contact channel Incident Manager engaged.</p>
    #[doc(hidden)]
    pub contact_channel_arn: std::option::Option<std::string::String>,
    /// <p>The type follows the engagement cycle, <code>SENT</code>, <code>DELIVERED</code>, and <code>READ</code>.</p>
    #[doc(hidden)]
    pub receipt_type: std::option::Option<crate::types::ReceiptType>,
    /// <p>Information provided during the page acknowledgement.</p>
    #[doc(hidden)]
    pub receipt_info: std::option::Option<std::string::String>,
    /// <p>The time receipt was <code>SENT</code>, <code>DELIVERED</code>, or <code>READ</code>.</p>
    #[doc(hidden)]
    pub receipt_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl Receipt {
    /// <p>The Amazon Resource Name (ARN) of the contact channel Incident Manager engaged.</p>
    pub fn contact_channel_arn(&self) -> std::option::Option<&str> {
        self.contact_channel_arn.as_deref()
    }
    /// <p>The type follows the engagement cycle, <code>SENT</code>, <code>DELIVERED</code>, and <code>READ</code>.</p>
    pub fn receipt_type(&self) -> std::option::Option<&crate::types::ReceiptType> {
        self.receipt_type.as_ref()
    }
    /// <p>Information provided during the page acknowledgement.</p>
    pub fn receipt_info(&self) -> std::option::Option<&str> {
        self.receipt_info.as_deref()
    }
    /// <p>The time receipt was <code>SENT</code>, <code>DELIVERED</code>, or <code>READ</code>.</p>
    pub fn receipt_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.receipt_time.as_ref()
    }
}
impl Receipt {
    /// Creates a new builder-style object to manufacture [`Receipt`](crate::types::Receipt).
    pub fn builder() -> crate::types::builders::ReceiptBuilder {
        crate::types::builders::ReceiptBuilder::default()
    }
}

/// A builder for [`Receipt`](crate::types::Receipt).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReceiptBuilder {
    pub(crate) contact_channel_arn: std::option::Option<std::string::String>,
    pub(crate) receipt_type: std::option::Option<crate::types::ReceiptType>,
    pub(crate) receipt_info: std::option::Option<std::string::String>,
    pub(crate) receipt_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ReceiptBuilder {
    /// <p>The Amazon Resource Name (ARN) of the contact channel Incident Manager engaged.</p>
    pub fn contact_channel_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.contact_channel_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the contact channel Incident Manager engaged.</p>
    pub fn set_contact_channel_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.contact_channel_arn = input;
        self
    }
    /// <p>The type follows the engagement cycle, <code>SENT</code>, <code>DELIVERED</code>, and <code>READ</code>.</p>
    pub fn receipt_type(mut self, input: crate::types::ReceiptType) -> Self {
        self.receipt_type = Some(input);
        self
    }
    /// <p>The type follows the engagement cycle, <code>SENT</code>, <code>DELIVERED</code>, and <code>READ</code>.</p>
    pub fn set_receipt_type(
        mut self,
        input: std::option::Option<crate::types::ReceiptType>,
    ) -> Self {
        self.receipt_type = input;
        self
    }
    /// <p>Information provided during the page acknowledgement.</p>
    pub fn receipt_info(mut self, input: impl Into<std::string::String>) -> Self {
        self.receipt_info = Some(input.into());
        self
    }
    /// <p>Information provided during the page acknowledgement.</p>
    pub fn set_receipt_info(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.receipt_info = input;
        self
    }
    /// <p>The time receipt was <code>SENT</code>, <code>DELIVERED</code>, or <code>READ</code>.</p>
    pub fn receipt_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.receipt_time = Some(input);
        self
    }
    /// <p>The time receipt was <code>SENT</code>, <code>DELIVERED</code>, or <code>READ</code>.</p>
    pub fn set_receipt_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.receipt_time = input;
        self
    }
    /// Consumes the builder and constructs a [`Receipt`](crate::types::Receipt).
    pub fn build(self) -> crate::types::Receipt {
        crate::types::Receipt {
            contact_channel_arn: self.contact_channel_arn,
            receipt_type: self.receipt_type,
            receipt_info: self.receipt_info,
            receipt_time: self.receipt_time,
        }
    }
}
