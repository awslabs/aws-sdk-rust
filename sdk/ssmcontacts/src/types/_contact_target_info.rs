// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The contact that Incident Manager is engaging during an incident.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ContactTargetInfo {
    /// <p>The Amazon Resource Name (ARN) of the contact.</p>
    #[doc(hidden)]
    pub contact_id: std::option::Option<std::string::String>,
    /// <p>A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.</p>
    #[doc(hidden)]
    pub is_essential: std::option::Option<bool>,
}
impl ContactTargetInfo {
    /// <p>The Amazon Resource Name (ARN) of the contact.</p>
    pub fn contact_id(&self) -> std::option::Option<&str> {
        self.contact_id.as_deref()
    }
    /// <p>A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.</p>
    pub fn is_essential(&self) -> std::option::Option<bool> {
        self.is_essential
    }
}
impl ContactTargetInfo {
    /// Creates a new builder-style object to manufacture [`ContactTargetInfo`](crate::types::ContactTargetInfo).
    pub fn builder() -> crate::types::builders::ContactTargetInfoBuilder {
        crate::types::builders::ContactTargetInfoBuilder::default()
    }
}

/// A builder for [`ContactTargetInfo`](crate::types::ContactTargetInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ContactTargetInfoBuilder {
    pub(crate) contact_id: std::option::Option<std::string::String>,
    pub(crate) is_essential: std::option::Option<bool>,
}
impl ContactTargetInfoBuilder {
    /// <p>The Amazon Resource Name (ARN) of the contact.</p>
    pub fn contact_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.contact_id = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the contact.</p>
    pub fn set_contact_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.contact_id = input;
        self
    }
    /// <p>A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.</p>
    pub fn is_essential(mut self, input: bool) -> Self {
        self.is_essential = Some(input);
        self
    }
    /// <p>A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.</p>
    pub fn set_is_essential(mut self, input: std::option::Option<bool>) -> Self {
        self.is_essential = input;
        self
    }
    /// Consumes the builder and constructs a [`ContactTargetInfo`](crate::types::ContactTargetInfo).
    pub fn build(self) -> crate::types::ContactTargetInfo {
        crate::types::ContactTargetInfo {
            contact_id: self.contact_id,
            is_essential: self.is_essential,
        }
    }
}
