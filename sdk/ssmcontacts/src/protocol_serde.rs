// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_accept_page;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_activate_contact_channel;

pub(crate) mod shape_create_contact;

pub(crate) mod shape_create_contact_channel;

pub(crate) mod shape_deactivate_contact_channel;

pub(crate) mod shape_delete_contact;

pub(crate) mod shape_delete_contact_channel;

pub(crate) mod shape_describe_engagement;

pub(crate) mod shape_describe_page;

pub(crate) mod shape_get_contact;

pub(crate) mod shape_get_contact_channel;

pub(crate) mod shape_get_contact_policy;

pub(crate) mod shape_list_contact_channels;

pub(crate) mod shape_list_contacts;

pub(crate) mod shape_list_engagements;

pub(crate) mod shape_list_page_receipts;

pub(crate) mod shape_list_pages_by_contact;

pub(crate) mod shape_list_pages_by_engagement;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_contact_policy;

pub(crate) mod shape_send_activation_code;

pub(crate) mod shape_start_engagement;

pub(crate) mod shape_stop_engagement;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_contact;

pub(crate) mod shape_update_contact_channel;

pub(crate) mod shape_accept_page_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_activate_contact_channel_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_contact_channel_input;

pub(crate) mod shape_create_contact_input;

pub(crate) mod shape_data_encryption_exception;

pub(crate) mod shape_deactivate_contact_channel_input;

pub(crate) mod shape_delete_contact_channel_input;

pub(crate) mod shape_delete_contact_input;

pub(crate) mod shape_describe_engagement_input;

pub(crate) mod shape_describe_page_input;

pub(crate) mod shape_get_contact_channel_input;

pub(crate) mod shape_get_contact_input;

pub(crate) mod shape_get_contact_policy_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_contact_channels_input;

pub(crate) mod shape_list_contacts_input;

pub(crate) mod shape_list_engagements_input;

pub(crate) mod shape_list_page_receipts_input;

pub(crate) mod shape_list_pages_by_contact_input;

pub(crate) mod shape_list_pages_by_engagement_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_put_contact_policy_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_send_activation_code_input;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_engagement_input;

pub(crate) mod shape_stop_engagement_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_contact_channel_input;

pub(crate) mod shape_update_contact_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_contact_channel_address;

pub(crate) mod shape_contact_channel_list;

pub(crate) mod shape_contacts_list;

pub(crate) mod shape_engagements_list;

pub(crate) mod shape_pages_list;

pub(crate) mod shape_plan;

pub(crate) mod shape_receipts_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tags_list;

pub(crate) mod shape_time_range;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_contact;

pub(crate) mod shape_contact_channel;

pub(crate) mod shape_engagement;

pub(crate) mod shape_page;

pub(crate) mod shape_receipt;

pub(crate) mod shape_stage;

pub(crate) mod shape_stages_list;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_target;

pub(crate) mod shape_channel_target_info;

pub(crate) mod shape_contact_target_info;

pub(crate) mod shape_targets_list;
