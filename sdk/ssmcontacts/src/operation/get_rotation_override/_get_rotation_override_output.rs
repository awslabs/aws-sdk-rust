// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetRotationOverrideOutput {
    /// <p>The Amazon Resource Name (ARN) of the override to an on-call rotation.</p>
    pub rotation_override_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the on-call rotation that was overridden.</p>
    pub rotation_arn: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Names (ARNs) of the contacts assigned to the override of the on-call rotation.</p>
    pub new_contact_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The date and time when the override goes into effect.</p>
    pub start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time when the override ends.</p>
    pub end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time when the override was created.</p>
    pub create_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetRotationOverrideOutput {
    /// <p>The Amazon Resource Name (ARN) of the override to an on-call rotation.</p>
    pub fn rotation_override_id(&self) -> ::std::option::Option<&str> {
        self.rotation_override_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the on-call rotation that was overridden.</p>
    pub fn rotation_arn(&self) -> ::std::option::Option<&str> {
        self.rotation_arn.as_deref()
    }
    /// <p>The Amazon Resource Names (ARNs) of the contacts assigned to the override of the on-call rotation.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.new_contact_ids.is_none()`.
    pub fn new_contact_ids(&self) -> &[::std::string::String] {
        self.new_contact_ids.as_deref().unwrap_or_default()
    }
    /// <p>The date and time when the override goes into effect.</p>
    pub fn start_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>The date and time when the override ends.</p>
    pub fn end_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The date and time when the override was created.</p>
    pub fn create_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.create_time.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for GetRotationOverrideOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetRotationOverrideOutput {
    /// Creates a new builder-style object to manufacture [`GetRotationOverrideOutput`](crate::operation::get_rotation_override::GetRotationOverrideOutput).
    pub fn builder() -> crate::operation::get_rotation_override::builders::GetRotationOverrideOutputBuilder {
        crate::operation::get_rotation_override::builders::GetRotationOverrideOutputBuilder::default()
    }
}

/// A builder for [`GetRotationOverrideOutput`](crate::operation::get_rotation_override::GetRotationOverrideOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetRotationOverrideOutputBuilder {
    pub(crate) rotation_override_id: ::std::option::Option<::std::string::String>,
    pub(crate) rotation_arn: ::std::option::Option<::std::string::String>,
    pub(crate) new_contact_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) create_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetRotationOverrideOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the override to an on-call rotation.</p>
    pub fn rotation_override_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.rotation_override_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the override to an on-call rotation.</p>
    pub fn set_rotation_override_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.rotation_override_id = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the override to an on-call rotation.</p>
    pub fn get_rotation_override_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.rotation_override_id
    }
    /// <p>The Amazon Resource Name (ARN) of the on-call rotation that was overridden.</p>
    pub fn rotation_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.rotation_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the on-call rotation that was overridden.</p>
    pub fn set_rotation_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.rotation_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the on-call rotation that was overridden.</p>
    pub fn get_rotation_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.rotation_arn
    }
    /// Appends an item to `new_contact_ids`.
    ///
    /// To override the contents of this collection use [`set_new_contact_ids`](Self::set_new_contact_ids).
    ///
    /// <p>The Amazon Resource Names (ARNs) of the contacts assigned to the override of the on-call rotation.</p>
    pub fn new_contact_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.new_contact_ids.unwrap_or_default();
        v.push(input.into());
        self.new_contact_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>The Amazon Resource Names (ARNs) of the contacts assigned to the override of the on-call rotation.</p>
    pub fn set_new_contact_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.new_contact_ids = input;
        self
    }
    /// <p>The Amazon Resource Names (ARNs) of the contacts assigned to the override of the on-call rotation.</p>
    pub fn get_new_contact_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.new_contact_ids
    }
    /// <p>The date and time when the override goes into effect.</p>
    pub fn start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the override goes into effect.</p>
    pub fn set_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The date and time when the override goes into effect.</p>
    pub fn get_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_time
    }
    /// <p>The date and time when the override ends.</p>
    pub fn end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the override ends.</p>
    pub fn set_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The date and time when the override ends.</p>
    pub fn get_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_time
    }
    /// <p>The date and time when the override was created.</p>
    pub fn create_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.create_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the override was created.</p>
    pub fn set_create_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.create_time = input;
        self
    }
    /// <p>The date and time when the override was created.</p>
    pub fn get_create_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.create_time
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetRotationOverrideOutput`](crate::operation::get_rotation_override::GetRotationOverrideOutput).
    pub fn build(self) -> crate::operation::get_rotation_override::GetRotationOverrideOutput {
        crate::operation::get_rotation_override::GetRotationOverrideOutput {
            rotation_override_id: self.rotation_override_id,
            rotation_arn: self.rotation_arn,
            new_contact_ids: self.new_contact_ids,
            start_time: self.start_time,
            end_time: self.end_time,
            create_time: self.create_time,
            _request_id: self._request_id,
        }
    }
}
