// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeEngagementInput {
    /// <p>The Amazon Resource Name (ARN) of the engagement you want the details of.</p>
    pub engagement_id: ::std::option::Option<::std::string::String>,
}
impl DescribeEngagementInput {
    /// <p>The Amazon Resource Name (ARN) of the engagement you want the details of.</p>
    pub fn engagement_id(&self) -> ::std::option::Option<&str> {
        self.engagement_id.as_deref()
    }
}
impl DescribeEngagementInput {
    /// Creates a new builder-style object to manufacture [`DescribeEngagementInput`](crate::operation::describe_engagement::DescribeEngagementInput).
    pub fn builder() -> crate::operation::describe_engagement::builders::DescribeEngagementInputBuilder {
        crate::operation::describe_engagement::builders::DescribeEngagementInputBuilder::default()
    }
}

/// A builder for [`DescribeEngagementInput`](crate::operation::describe_engagement::DescribeEngagementInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeEngagementInputBuilder {
    pub(crate) engagement_id: ::std::option::Option<::std::string::String>,
}
impl DescribeEngagementInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the engagement you want the details of.</p>
    /// This field is required.
    pub fn engagement_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.engagement_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the engagement you want the details of.</p>
    pub fn set_engagement_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.engagement_id = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the engagement you want the details of.</p>
    pub fn get_engagement_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.engagement_id
    }
    /// Consumes the builder and constructs a [`DescribeEngagementInput`](crate::operation::describe_engagement::DescribeEngagementInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_engagement::DescribeEngagementInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::describe_engagement::DescribeEngagementInput {
            engagement_id: self.engagement_id,
        })
    }
}
