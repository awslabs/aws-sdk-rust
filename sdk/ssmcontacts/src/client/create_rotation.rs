// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRotation`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::set_name):<br>required: **true**<br><p>The name of the rotation.</p><br>
    ///   - [`contact_ids(impl Into<String>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::contact_ids) / [`set_contact_ids(Option<Vec::<String>>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::set_contact_ids):<br>required: **true**<br><p>The Amazon Resource Names (ARNs) of the contacts to add to the rotation.</p>  <p>The order that you list the contacts in is their shift order in the rotation schedule. To change the order of the contact's shifts, use the <code>UpdateRotation</code> operation.</p><br>
    ///   - [`start_time(DateTime)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::set_start_time):<br>required: **false**<br><p>The date and time that the rotation goes into effect.</p><br>
    ///   - [`time_zone_id(impl Into<String>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::time_zone_id) / [`set_time_zone_id(Option<String>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::set_time_zone_id):<br>required: **true**<br><p>The time zone to base the rotation’s activity on in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "UTC", or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time Zone Database</a> on the IANA website.</p> <note>   <p>Designators for time zones that don’t support Daylight Savings Time rules, such as Pacific Standard Time (PST) and Pacific Daylight Time (PDT), are not supported.</p>  </note><br>
    ///   - [`recurrence(RecurrenceSettings)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::recurrence) / [`set_recurrence(Option<RecurrenceSettings>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::set_recurrence):<br>required: **true**<br><p>Information about the rule that specifies when a shift's team members rotate.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::set_tags):<br>required: **false**<br><p>Optional metadata to assign to the rotation. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/incident-manager/latest/userguide/tagging.html">Tagging Incident Manager resources</a> in the <i>Incident Manager User Guide</i>.</p><br>
    ///   - [`idempotency_token(impl Into<String>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::idempotency_token) / [`set_idempotency_token(Option<String>)`](crate::operation::create_rotation::builders::CreateRotationFluentBuilder::set_idempotency_token):<br>required: **false**<br><p>A token that ensures that the operation is called only once with the specified details.</p><br>
    /// - On success, responds with [`CreateRotationOutput`](crate::operation::create_rotation::CreateRotationOutput) with field(s):
    ///   - [`rotation_arn(String)`](crate::operation::create_rotation::CreateRotationOutput::rotation_arn): <p>The Amazon Resource Name (ARN) of the created rotation.</p>
    /// - On failure, responds with [`SdkError<CreateRotationError>`](crate::operation::create_rotation::CreateRotationError)
    pub fn create_rotation(&self) -> crate::operation::create_rotation::builders::CreateRotationFluentBuilder {
        crate::operation::create_rotation::builders::CreateRotationFluentBuilder::new(self.handle.clone())
    }
}
