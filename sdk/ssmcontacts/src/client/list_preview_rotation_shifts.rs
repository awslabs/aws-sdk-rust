// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPreviewRotationShifts`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`rotation_start_time(DateTime)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::rotation_start_time) / [`set_rotation_start_time(Option<DateTime>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::set_rotation_start_time):<br>required: **false**<br><p>The date and time a rotation would begin. The first shift is calculated from this date and time.</p><br>
    ///   - [`start_time(DateTime)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::set_start_time):<br>required: **false**<br><p>Used to filter the range of calculated shifts before sending the response back to the user. </p><br>
    ///   - [`end_time(DateTime)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::set_end_time):<br>required: **true**<br><p>The date and time a rotation shift would end.</p><br>
    ///   - [`members(impl Into<String>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::members) / [`set_members(Option<Vec::<String>>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::set_members):<br>required: **true**<br><p>The contacts that would be assigned to a rotation.</p><br>
    ///   - [`time_zone_id(impl Into<String>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::time_zone_id) / [`set_time_zone_id(Option<String>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::set_time_zone_id):<br>required: **true**<br><p>The time zone the rotationâ€™s activity would be based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "UTC", or "Asia/Seoul". </p><br>
    ///   - [`recurrence(RecurrenceSettings)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::recurrence) / [`set_recurrence(Option<RecurrenceSettings>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::set_recurrence):<br>required: **true**<br><p>Information about how long a rotation would last before restarting at the beginning of the shift order.</p><br>
    ///   - [`overrides(PreviewOverride)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::overrides) / [`set_overrides(Option<Vec::<PreviewOverride>>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::set_overrides):<br>required: **false**<br><p>Information about changes that would be made in a rotation override.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token to start the list. This token is used to get the next set of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of items to return for this call. The call also returns a token that can be specified in a subsequent call to get the next set of results.</p><br>
    /// - On success, responds with [`ListPreviewRotationShiftsOutput`](crate::operation::list_preview_rotation_shifts::ListPreviewRotationShiftsOutput) with field(s):
    ///   - [`rotation_shifts(Option<Vec::<RotationShift>>)`](crate::operation::list_preview_rotation_shifts::ListPreviewRotationShiftsOutput::rotation_shifts): <p>Details about a rotation shift, including times, types, and contacts.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_preview_rotation_shifts::ListPreviewRotationShiftsOutput::next_token): <p>The token for the next set of items to return. This token is used to get the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListPreviewRotationShiftsError>`](crate::operation::list_preview_rotation_shifts::ListPreviewRotationShiftsError)
    pub fn list_preview_rotation_shifts(&self) -> crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder {
        crate::operation::list_preview_rotation_shifts::builders::ListPreviewRotationShiftsFluentBuilder::new(self.handle.clone())
    }
}
