// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListContacts`](crate::client::fluent_builders::ListContacts) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListContacts::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListContacts::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListContacts::set_next_token): <p>The pagination token to continue to the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListContacts::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListContacts::set_max_results): <p>The maximum number of contacts and escalation plans per page of results.</p>
    ///   - [`alias_prefix(impl Into<String>)`](crate::client::fluent_builders::ListContacts::alias_prefix) / [`set_alias_prefix(Option<String>)`](crate::client::fluent_builders::ListContacts::set_alias_prefix): <p>Used to list only contacts who's aliases start with the specified prefix.</p>
    ///   - [`r#type(ContactType)`](crate::client::fluent_builders::ListContacts::type) / [`set_type(Option<ContactType>)`](crate::client::fluent_builders::ListContacts::set_type): <p>The type of contact. A contact is type <code>PERSONAL</code> and an escalation plan is type <code>ESCALATION</code>.</p>
    /// - On success, responds with [`ListContactsOutput`](crate::output::ListContactsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListContactsOutput::next_token): <p>The pagination token to continue to the next page of results.</p>
    ///   - [`contacts(Option<Vec<Contact>>)`](crate::output::ListContactsOutput::contacts): <p>A list of the contacts and escalation plans in your Incident Manager account.</p>
    /// - On failure, responds with [`SdkError<ListContactsError>`](crate::error::ListContactsError)
    pub fn list_contacts(&self) -> crate::client::fluent_builders::ListContacts {
        crate::client::fluent_builders::ListContacts::new(self.handle.clone())
    }
}
