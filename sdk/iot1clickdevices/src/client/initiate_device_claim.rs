// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`InitiateDeviceClaim`](crate::operation::initiate_device_claim::builders::InitiateDeviceClaimFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`device_id(impl Into<String>)`](crate::operation::initiate_device_claim::builders::InitiateDeviceClaimFluentBuilder::device_id) / [`set_device_id(Option<String>)`](crate::operation::initiate_device_claim::builders::InitiateDeviceClaimFluentBuilder::set_device_id):<br>required: **true**<br><p>The unique identifier of the device.</p><br>
    /// - On success, responds with [`InitiateDeviceClaimOutput`](crate::operation::initiate_device_claim::InitiateDeviceClaimOutput) with field(s):
    ///   - [`state(Option<String>)`](crate::operation::initiate_device_claim::InitiateDeviceClaimOutput::state): <p>The device's final claim state.</p>
    /// - On failure, responds with [`SdkError<InitiateDeviceClaimError>`](crate::operation::initiate_device_claim::InitiateDeviceClaimError)
    pub fn initiate_device_claim(&self) -> crate::operation::initiate_device_claim::builders::InitiateDeviceClaimFluentBuilder {
        crate::operation::initiate_device_claim::builders::InitiateDeviceClaimFluentBuilder::new(self.handle.clone())
    }
}
