// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_claim_devices_by_claim_code;

pub(crate) mod shape_describe_device;

pub(crate) mod shape_finalize_device_claim;

pub(crate) mod shape_get_device_methods;

pub(crate) mod shape_initiate_device_claim;

pub(crate) mod shape_invoke_device_method;

pub(crate) mod shape_list_device_events;

pub(crate) mod shape_list_devices;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_unclaim_device;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_device_state;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_finalize_device_claim_input;

pub(crate) mod shape_forbidden_exception;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_invoke_device_method_input;

pub(crate) mod shape_precondition_failed_exception;

pub(crate) mod shape_range_not_satisfiable_exception;

pub(crate) mod shape_resource_conflict_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_device_state_input;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_device_description;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_device_event;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_device_method;

#[allow(non_snake_case)]
pub(crate) mod shape___map_of__string;

pub(crate) mod shape_device_description;

pub(crate) mod shape_device_method;

pub(crate) mod shape_device_attributes;

pub(crate) mod shape_device_event;

pub(crate) mod shape_device;

pub(crate) mod shape_attributes;
