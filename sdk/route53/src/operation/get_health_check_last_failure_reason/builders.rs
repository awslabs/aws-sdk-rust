// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::get_health_check_last_failure_reason::_get_health_check_last_failure_reason_output::GetHealthCheckLastFailureReasonOutputBuilder;

pub use crate::operation::get_health_check_last_failure_reason::_get_health_check_last_failure_reason_input::GetHealthCheckLastFailureReasonInputBuilder;

/// Fluent builder constructing a request to `GetHealthCheckLastFailureReason`.
///
/// <p>Gets the reason that a specified health check failed most recently.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct GetHealthCheckLastFailureReasonFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::get_health_check_last_failure_reason::builders::GetHealthCheckLastFailureReasonInputBuilder
            }
impl GetHealthCheckLastFailureReasonFluentBuilder {
    /// Creates a new `GetHealthCheckLastFailureReason`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::get_health_check_last_failure_reason::GetHealthCheckLastFailureReason, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::get_health_check_last_failure_reason::GetHealthCheckLastFailureReasonError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::get_health_check_last_failure_reason::GetHealthCheckLastFailureReasonOutput, aws_smithy_http::result::SdkError<crate::operation::get_health_check_last_failure_reason::GetHealthCheckLastFailureReasonError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The ID for the health check for which you want the last failure reason. When you created the health check, <code>CreateHealthCheck</code> returned the ID in the response, in the <code>HealthCheckId</code> element.</p> <note>
    /// <p>If you want to get the last failure reason for a calculated health check, you must use the Amazon Route 53 console or the CloudWatch console. You can't use <code>GetHealthCheckLastFailureReason</code> for a calculated health check.</p>
    /// </note>
    pub fn health_check_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.health_check_id(input.into());
        self
    }
    /// <p>The ID for the health check for which you want the last failure reason. When you created the health check, <code>CreateHealthCheck</code> returned the ID in the response, in the <code>HealthCheckId</code> element.</p> <note>
    /// <p>If you want to get the last failure reason for a calculated health check, you must use the Amazon Route 53 console or the CloudWatch console. You can't use <code>GetHealthCheckLastFailureReason</code> for a calculated health check.</p>
    /// </note>
    pub fn set_health_check_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_health_check_id(input);
        self
    }
}
