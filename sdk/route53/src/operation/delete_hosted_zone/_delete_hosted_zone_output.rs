// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains the response to a <code>DeleteHostedZone</code> request.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteHostedZoneOutput {
    /// <p>A complex type that contains the ID, the status, and the date and time of a request to delete a hosted zone.</p>
    pub change_info: ::std::option::Option<crate::types::ChangeInfo>,
    _request_id: Option<String>,
}
impl DeleteHostedZoneOutput {
    /// <p>A complex type that contains the ID, the status, and the date and time of a request to delete a hosted zone.</p>
    pub fn change_info(&self) -> ::std::option::Option<&crate::types::ChangeInfo> {
        self.change_info.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for DeleteHostedZoneOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteHostedZoneOutput {
    /// Creates a new builder-style object to manufacture [`DeleteHostedZoneOutput`](crate::operation::delete_hosted_zone::DeleteHostedZoneOutput).
    pub fn builder() -> crate::operation::delete_hosted_zone::builders::DeleteHostedZoneOutputBuilder {
        crate::operation::delete_hosted_zone::builders::DeleteHostedZoneOutputBuilder::default()
    }
}

/// A builder for [`DeleteHostedZoneOutput`](crate::operation::delete_hosted_zone::DeleteHostedZoneOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteHostedZoneOutputBuilder {
    pub(crate) change_info: ::std::option::Option<crate::types::ChangeInfo>,
    _request_id: Option<String>,
}
impl DeleteHostedZoneOutputBuilder {
    /// <p>A complex type that contains the ID, the status, and the date and time of a request to delete a hosted zone.</p>
    /// This field is required.
    pub fn change_info(mut self, input: crate::types::ChangeInfo) -> Self {
        self.change_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>A complex type that contains the ID, the status, and the date and time of a request to delete a hosted zone.</p>
    pub fn set_change_info(mut self, input: ::std::option::Option<crate::types::ChangeInfo>) -> Self {
        self.change_info = input;
        self
    }
    /// <p>A complex type that contains the ID, the status, and the date and time of a request to delete a hosted zone.</p>
    pub fn get_change_info(&self) -> &::std::option::Option<crate::types::ChangeInfo> {
        &self.change_info
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteHostedZoneOutput`](crate::operation::delete_hosted_zone::DeleteHostedZoneOutput).
    pub fn build(self) -> crate::operation::delete_hosted_zone::DeleteHostedZoneOutput {
        crate::operation::delete_hosted_zone::DeleteHostedZoneOutput {
            change_info: self.change_info,
            _request_id: self._request_id,
        }
    }
}
