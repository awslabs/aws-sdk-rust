// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteKeySigningKeyInput {
    /// <p>A unique string used to identify a hosted zone.</p>
    pub hosted_zone_id: ::std::option::Option<::std::string::String>,
    /// <p>A string used to identify a key-signing key (KSK).</p>
    pub name: ::std::option::Option<::std::string::String>,
}
impl DeleteKeySigningKeyInput {
    /// <p>A unique string used to identify a hosted zone.</p>
    pub fn hosted_zone_id(&self) -> ::std::option::Option<&str> {
        self.hosted_zone_id.as_deref()
    }
    /// <p>A string used to identify a key-signing key (KSK).</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl DeleteKeySigningKeyInput {
    /// Creates a new builder-style object to manufacture [`DeleteKeySigningKeyInput`](crate::operation::delete_key_signing_key::DeleteKeySigningKeyInput).
    pub fn builder() -> crate::operation::delete_key_signing_key::builders::DeleteKeySigningKeyInputBuilder {
        crate::operation::delete_key_signing_key::builders::DeleteKeySigningKeyInputBuilder::default()
    }
}

/// A builder for [`DeleteKeySigningKeyInput`](crate::operation::delete_key_signing_key::DeleteKeySigningKeyInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteKeySigningKeyInputBuilder {
    pub(crate) hosted_zone_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
}
impl DeleteKeySigningKeyInputBuilder {
    /// <p>A unique string used to identify a hosted zone.</p>
    /// This field is required.
    pub fn hosted_zone_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.hosted_zone_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique string used to identify a hosted zone.</p>
    pub fn set_hosted_zone_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.hosted_zone_id = input;
        self
    }
    /// <p>A unique string used to identify a hosted zone.</p>
    pub fn get_hosted_zone_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.hosted_zone_id
    }
    /// <p>A string used to identify a key-signing key (KSK).</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A string used to identify a key-signing key (KSK).</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>A string used to identify a key-signing key (KSK).</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Consumes the builder and constructs a [`DeleteKeySigningKeyInput`](crate::operation::delete_key_signing_key::DeleteKeySigningKeyInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_key_signing_key::DeleteKeySigningKeyInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::delete_key_signing_key::DeleteKeySigningKeyInput {
            hosted_zone_id: self.hosted_zone_id,
            name: self.name,
        })
    }
}
