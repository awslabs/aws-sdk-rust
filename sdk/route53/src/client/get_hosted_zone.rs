// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetHostedZone`](crate::client::fluent_builders::GetHostedZone) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::GetHostedZone::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::GetHostedZone::set_id): <p>The ID of the hosted zone that you want to get information about.</p>
    /// - On success, responds with [`GetHostedZoneOutput`](crate::output::GetHostedZoneOutput) with field(s):
    ///   - [`hosted_zone(Option<HostedZone>)`](crate::output::GetHostedZoneOutput::hosted_zone): <p>A complex type that contains general information about the specified hosted zone.</p>
    ///   - [`delegation_set(Option<DelegationSet>)`](crate::output::GetHostedZoneOutput::delegation_set): <p>A complex type that lists the Amazon Route 53 name servers for the specified hosted zone.</p>
    ///   - [`vp_cs(Option<Vec<Vpc>>)`](crate::output::GetHostedZoneOutput::vp_cs): <p>A complex type that contains information about the VPCs that are associated with the specified hosted zone.</p>
    /// - On failure, responds with [`SdkError<GetHostedZoneError>`](crate::error::GetHostedZoneError)
    pub fn get_hosted_zone(&self) -> crate::client::fluent_builders::GetHostedZone {
        crate::client::fluent_builders::GetHostedZone::new(self.handle.clone())
    }
}
