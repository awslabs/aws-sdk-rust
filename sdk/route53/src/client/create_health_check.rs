// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateHealthCheck`](crate::client::fluent_builders::CreateHealthCheck) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`caller_reference(impl Into<String>)`](crate::client::fluent_builders::CreateHealthCheck::caller_reference) / [`set_caller_reference(Option<String>)`](crate::client::fluent_builders::CreateHealthCheck::set_caller_reference): <p>A unique string that identifies the request and that allows you to retry a failed <code>CreateHealthCheck</code> request without the risk of creating two identical health checks:</p>  <ul>   <li> <p>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code> and settings as a previous request, and if the health check doesn't exist, Amazon Route 53 creates the health check. If the health check does exist, Route 53 returns the settings for the existing health check.</p> </li>   <li> <p>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code> as a deleted health check, regardless of the settings, Route 53 returns a <code>HealthCheckAlreadyExists</code> error.</p> </li>   <li> <p>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code> as an existing health check but with different settings, Route 53 returns a <code>HealthCheckAlreadyExists</code> error.</p> </li>   <li> <p>If you send a <code>CreateHealthCheck</code> request with a unique <code>CallerReference</code> but settings identical to an existing health check, Route 53 creates the health check.</p> </li>  </ul>
    ///   - [`health_check_config(HealthCheckConfig)`](crate::client::fluent_builders::CreateHealthCheck::health_check_config) / [`set_health_check_config(Option<HealthCheckConfig>)`](crate::client::fluent_builders::CreateHealthCheck::set_health_check_config): <p>A complex type that contains settings for a new health check.</p>
    /// - On success, responds with [`CreateHealthCheckOutput`](crate::output::CreateHealthCheckOutput) with field(s):
    ///   - [`health_check(Option<HealthCheck>)`](crate::output::CreateHealthCheckOutput::health_check): <p>A complex type that contains identifying information about the health check.</p>
    ///   - [`location(Option<String>)`](crate::output::CreateHealthCheckOutput::location): <p>The unique URL representing the new health check.</p>
    /// - On failure, responds with [`SdkError<CreateHealthCheckError>`](crate::error::CreateHealthCheckError)
    pub fn create_health_check(&self) -> crate::client::fluent_builders::CreateHealthCheck {
        crate::client::fluent_builders::CreateHealthCheck::new(self.handle.clone())
    }
}
