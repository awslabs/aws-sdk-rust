// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ChangeCidrCollection`](crate::operation::change_cidr_collection::builders::ChangeCidrCollectionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::change_cidr_collection::builders::ChangeCidrCollectionFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::change_cidr_collection::builders::ChangeCidrCollectionFluentBuilder::set_id): <p>The UUID of the CIDR collection to update.</p>
    ///   - [`collection_version(i64)`](crate::operation::change_cidr_collection::builders::ChangeCidrCollectionFluentBuilder::collection_version) / [`set_collection_version(Option<i64>)`](crate::operation::change_cidr_collection::builders::ChangeCidrCollectionFluentBuilder::set_collection_version): <p>A sequential counter that Amazon Route&nbsp;53 sets to 1 when you create a collection and increments it by 1 each time you update the collection.</p>  <p>We recommend that you use <code>ListCidrCollection</code> to get the current value of <code>CollectionVersion</code> for the collection that you want to update, and then include that value with the change request. This prevents Route&nbsp;53 from overwriting an intervening update: </p>  <ul>   <li> <p>If the value in the request matches the value of <code>CollectionVersion</code> in the collection, Route&nbsp;53 updates the collection.</p> </li>   <li> <p>If the value of <code>CollectionVersion</code> in the collection is greater than the value in the request, the collection was changed after you got the version number. Route&nbsp;53 does not update the collection, and it returns a <code>CidrCollectionVersionMismatch</code> error. </p> </li>  </ul>
    ///   - [`changes(Vec<CidrCollectionChange>)`](crate::operation::change_cidr_collection::builders::ChangeCidrCollectionFluentBuilder::changes) / [`set_changes(Option<Vec<CidrCollectionChange>>)`](crate::operation::change_cidr_collection::builders::ChangeCidrCollectionFluentBuilder::set_changes): <p> Information about changes to a CIDR collection.</p>
    /// - On success, responds with [`ChangeCidrCollectionOutput`](crate::operation::change_cidr_collection::ChangeCidrCollectionOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::change_cidr_collection::ChangeCidrCollectionOutput::id): <p>The ID that is returned by <code>ChangeCidrCollection</code>. You can use it as input to <code>GetChange</code> to see if a CIDR collection change has propagated or not.</p>
    /// - On failure, responds with [`SdkError<ChangeCidrCollectionError>`](crate::operation::change_cidr_collection::ChangeCidrCollectionError)
    pub fn change_cidr_collection(
        &self,
    ) -> crate::operation::change_cidr_collection::builders::ChangeCidrCollectionFluentBuilder {
        crate::operation::change_cidr_collection::builders::ChangeCidrCollectionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
