// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetReusableDelegationSetLimit`](crate::client::fluent_builders::GetReusableDelegationSetLimit) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(ReusableDelegationSetLimitType)`](crate::client::fluent_builders::GetReusableDelegationSetLimit::type) / [`set_type(Option<ReusableDelegationSetLimitType>)`](crate::client::fluent_builders::GetReusableDelegationSetLimit::set_type): <p>Specify <code>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</code> to get the maximum number of hosted zones that you can associate with the specified reusable delegation set.</p>
    ///   - [`delegation_set_id(impl Into<String>)`](crate::client::fluent_builders::GetReusableDelegationSetLimit::delegation_set_id) / [`set_delegation_set_id(Option<String>)`](crate::client::fluent_builders::GetReusableDelegationSetLimit::set_delegation_set_id): <p>The ID of the delegation set that you want to get the limit for.</p>
    /// - On success, responds with [`GetReusableDelegationSetLimitOutput`](crate::output::GetReusableDelegationSetLimitOutput) with field(s):
    ///   - [`limit(Option<ReusableDelegationSetLimit>)`](crate::output::GetReusableDelegationSetLimitOutput::limit): <p>The current setting for the limit on hosted zones that you can associate with the specified reusable delegation set.</p>
    ///   - [`count(i64)`](crate::output::GetReusableDelegationSetLimitOutput::count): <p>The current number of hosted zones that you can associate with the specified reusable delegation set.</p>
    /// - On failure, responds with [`SdkError<GetReusableDelegationSetLimitError>`](crate::error::GetReusableDelegationSetLimitError)
    pub fn get_reusable_delegation_set_limit(
        &self,
    ) -> crate::client::fluent_builders::GetReusableDelegationSetLimit {
        crate::client::fluent_builders::GetReusableDelegationSetLimit::new(self.handle.clone())
    }
}
