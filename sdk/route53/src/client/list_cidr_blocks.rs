// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListCidrBlocks`](crate::client::fluent_builders::ListCidrBlocks) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCidrBlocks::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`collection_id(impl Into<String>)`](crate::client::fluent_builders::ListCidrBlocks::collection_id) / [`set_collection_id(Option<String>)`](crate::client::fluent_builders::ListCidrBlocks::set_collection_id): <p>The UUID of the CIDR collection.</p>
    ///   - [`location_name(impl Into<String>)`](crate::client::fluent_builders::ListCidrBlocks::location_name) / [`set_location_name(Option<String>)`](crate::client::fluent_builders::ListCidrBlocks::set_location_name): <p>The name of the CIDR collection location.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCidrBlocks::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCidrBlocks::set_next_token): <p>An opaque pagination token to indicate where the service is to begin enumerating results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListCidrBlocks::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListCidrBlocks::set_max_results): <p>Maximum number of results you want returned.</p>
    /// - On success, responds with [`ListCidrBlocksOutput`](crate::output::ListCidrBlocksOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListCidrBlocksOutput::next_token): <p>An opaque pagination token to indicate where the service is to begin enumerating results. </p>  <p>If no value is provided, the listing of results starts from the beginning.</p>
    ///   - [`cidr_blocks(Option<Vec<CidrBlockSummary>>)`](crate::output::ListCidrBlocksOutput::cidr_blocks): <p>A complex type that contains information about the CIDR blocks.</p>
    /// - On failure, responds with [`SdkError<ListCidrBlocksError>`](crate::error::ListCidrBlocksError)
    pub fn list_cidr_blocks(&self) -> crate::client::fluent_builders::ListCidrBlocks {
        crate::client::fluent_builders::ListCidrBlocks::new(self.handle.clone())
    }
}
