// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCidrCollection`](crate::client::fluent_builders::CreateCidrCollection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateCidrCollection::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateCidrCollection::set_name): <p>A unique identifier for the account that can be used to reference the collection from other API calls.</p>
    ///   - [`caller_reference(impl Into<String>)`](crate::client::fluent_builders::CreateCidrCollection::caller_reference) / [`set_caller_reference(Option<String>)`](crate::client::fluent_builders::CreateCidrCollection::set_caller_reference): <p>A client-specific token that allows requests to be securely retried so that the intended outcome will only occur once, retries receive a similar response, and there are no additional edge cases to handle.</p>
    /// - On success, responds with [`CreateCidrCollectionOutput`](crate::output::CreateCidrCollectionOutput) with field(s):
    ///   - [`collection(Option<CidrCollection>)`](crate::output::CreateCidrCollectionOutput::collection): <p>A complex type that contains information about the CIDR collection.</p>
    ///   - [`location(Option<String>)`](crate::output::CreateCidrCollectionOutput::location): <p>A unique URL that represents the location for the CIDR collection.</p>
    /// - On failure, responds with [`SdkError<CreateCidrCollectionError>`](crate::error::CreateCidrCollectionError)
    pub fn create_cidr_collection(&self) -> crate::client::fluent_builders::CreateCidrCollection {
        crate::client::fluent_builders::CreateCidrCollection::new(self.handle.clone())
    }
}
