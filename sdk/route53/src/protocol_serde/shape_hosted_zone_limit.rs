// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_hosted_zone_limit(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::HostedZoneLimit, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::HostedZoneLimit::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Type") /* Type com.amazonaws.route53#HostedZoneLimit$Type */ =>  {
                let var_1 =
                    Some(
                        Result::<crate::types::HostedZoneLimitType, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::HostedZoneLimitType::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_type(var_1);
            }
            ,
            s if s.matches("Value") /* Value com.amazonaws.route53#HostedZoneLimit$Value */ =>  {
                let var_2 =
                    Some(
                         {
                            <i64 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (long: `com.amazonaws.route53#LimitValue`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_value(var_2);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
