// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains information about a configuration for DNS query logging.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QueryLoggingConfig {
    /// <p>The ID for a configuration for DNS query logging.</p>
    pub id: ::std::string::String,
    /// <p>The ID of the hosted zone that CloudWatch Logs is logging queries for. </p>
    pub hosted_zone_id: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.</p>
    pub cloud_watch_logs_log_group_arn: ::std::string::String,
}
impl QueryLoggingConfig {
    /// <p>The ID for a configuration for DNS query logging.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>The ID of the hosted zone that CloudWatch Logs is logging queries for. </p>
    pub fn hosted_zone_id(&self) -> &str {
        use std::ops::Deref;
        self.hosted_zone_id.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.</p>
    pub fn cloud_watch_logs_log_group_arn(&self) -> &str {
        use std::ops::Deref;
        self.cloud_watch_logs_log_group_arn.deref()
    }
}
impl QueryLoggingConfig {
    /// Creates a new builder-style object to manufacture [`QueryLoggingConfig`](crate::types::QueryLoggingConfig).
    pub fn builder() -> crate::types::builders::QueryLoggingConfigBuilder {
        crate::types::builders::QueryLoggingConfigBuilder::default()
    }
}

/// A builder for [`QueryLoggingConfig`](crate::types::QueryLoggingConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct QueryLoggingConfigBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) hosted_zone_id: ::std::option::Option<::std::string::String>,
    pub(crate) cloud_watch_logs_log_group_arn: ::std::option::Option<::std::string::String>,
}
impl QueryLoggingConfigBuilder {
    /// <p>The ID for a configuration for DNS query logging.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID for a configuration for DNS query logging.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID for a configuration for DNS query logging.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The ID of the hosted zone that CloudWatch Logs is logging queries for. </p>
    /// This field is required.
    pub fn hosted_zone_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.hosted_zone_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the hosted zone that CloudWatch Logs is logging queries for. </p>
    pub fn set_hosted_zone_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.hosted_zone_id = input;
        self
    }
    /// <p>The ID of the hosted zone that CloudWatch Logs is logging queries for. </p>
    pub fn get_hosted_zone_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.hosted_zone_id
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.</p>
    /// This field is required.
    pub fn cloud_watch_logs_log_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cloud_watch_logs_log_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.</p>
    pub fn set_cloud_watch_logs_log_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cloud_watch_logs_log_group_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.</p>
    pub fn get_cloud_watch_logs_log_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.cloud_watch_logs_log_group_arn
    }
    /// Consumes the builder and constructs a [`QueryLoggingConfig`](crate::types::QueryLoggingConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::QueryLoggingConfigBuilder::id)
    /// - [`hosted_zone_id`](crate::types::builders::QueryLoggingConfigBuilder::hosted_zone_id)
    /// - [`cloud_watch_logs_log_group_arn`](crate::types::builders::QueryLoggingConfigBuilder::cloud_watch_logs_log_group_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::QueryLoggingConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::QueryLoggingConfig {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building QueryLoggingConfig",
                )
            })?,
            hosted_zone_id: self.hosted_zone_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "hosted_zone_id",
                    "hosted_zone_id was not specified but it is required when building QueryLoggingConfig",
                )
            })?,
            cloud_watch_logs_log_group_arn: self.cloud_watch_logs_log_group_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "cloud_watch_logs_log_group_arn",
                    "cloud_watch_logs_log_group_arn was not specified but it is required when building QueryLoggingConfig",
                )
            })?,
        })
    }
}
