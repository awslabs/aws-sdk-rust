// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains information about the CIDR location.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LocationSummary {
    /// <p>A string that specifies a location name.</p>
    #[doc(hidden)]
    pub location_name: std::option::Option<std::string::String>,
}
impl LocationSummary {
    /// <p>A string that specifies a location name.</p>
    pub fn location_name(&self) -> std::option::Option<&str> {
        self.location_name.as_deref()
    }
}
impl LocationSummary {
    /// Creates a new builder-style object to manufacture [`LocationSummary`](crate::types::LocationSummary).
    pub fn builder() -> crate::types::builders::LocationSummaryBuilder {
        crate::types::builders::LocationSummaryBuilder::default()
    }
}

/// A builder for [`LocationSummary`](crate::types::LocationSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LocationSummaryBuilder {
    pub(crate) location_name: std::option::Option<std::string::String>,
}
impl LocationSummaryBuilder {
    /// <p>A string that specifies a location name.</p>
    pub fn location_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.location_name = Some(input.into());
        self
    }
    /// <p>A string that specifies a location name.</p>
    pub fn set_location_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.location_name = input;
        self
    }
    /// Consumes the builder and constructs a [`LocationSummary`](crate::types::LocationSummary).
    pub fn build(self) -> crate::types::LocationSummary {
        crate::types::LocationSummary {
            location_name: self.location_name,
        }
    }
}
