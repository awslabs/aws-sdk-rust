// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains information about the latest version of one traffic policy that is associated with the current Amazon Web Services account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TrafficPolicySummary {
    /// <p>The ID that Amazon Route 53 assigned to the traffic policy when you created it.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The name that you specified for the traffic policy when you created it.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::RrType>,
    /// <p>The version number of the latest version of the traffic policy.</p>
    #[doc(hidden)]
    pub latest_version: std::option::Option<i32>,
    /// <p>The number of traffic policies that are associated with the current Amazon Web Services account.</p>
    #[doc(hidden)]
    pub traffic_policy_count: std::option::Option<i32>,
}
impl TrafficPolicySummary {
    /// <p>The ID that Amazon Route 53 assigned to the traffic policy when you created it.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name that you specified for the traffic policy when you created it.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::RrType> {
        self.r#type.as_ref()
    }
    /// <p>The version number of the latest version of the traffic policy.</p>
    pub fn latest_version(&self) -> std::option::Option<i32> {
        self.latest_version
    }
    /// <p>The number of traffic policies that are associated with the current Amazon Web Services account.</p>
    pub fn traffic_policy_count(&self) -> std::option::Option<i32> {
        self.traffic_policy_count
    }
}
impl TrafficPolicySummary {
    /// Creates a new builder-style object to manufacture [`TrafficPolicySummary`](crate::types::TrafficPolicySummary).
    pub fn builder() -> crate::types::builders::TrafficPolicySummaryBuilder {
        crate::types::builders::TrafficPolicySummaryBuilder::default()
    }
}

/// A builder for [`TrafficPolicySummary`](crate::types::TrafficPolicySummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TrafficPolicySummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<crate::types::RrType>,
    pub(crate) latest_version: std::option::Option<i32>,
    pub(crate) traffic_policy_count: std::option::Option<i32>,
}
impl TrafficPolicySummaryBuilder {
    /// <p>The ID that Amazon Route 53 assigned to the traffic policy when you created it.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID that Amazon Route 53 assigned to the traffic policy when you created it.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The name that you specified for the traffic policy when you created it.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name that you specified for the traffic policy when you created it.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.</p>
    pub fn r#type(mut self, input: crate::types::RrType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.</p>
    pub fn set_type(mut self, input: std::option::Option<crate::types::RrType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The version number of the latest version of the traffic policy.</p>
    pub fn latest_version(mut self, input: i32) -> Self {
        self.latest_version = Some(input);
        self
    }
    /// <p>The version number of the latest version of the traffic policy.</p>
    pub fn set_latest_version(mut self, input: std::option::Option<i32>) -> Self {
        self.latest_version = input;
        self
    }
    /// <p>The number of traffic policies that are associated with the current Amazon Web Services account.</p>
    pub fn traffic_policy_count(mut self, input: i32) -> Self {
        self.traffic_policy_count = Some(input);
        self
    }
    /// <p>The number of traffic policies that are associated with the current Amazon Web Services account.</p>
    pub fn set_traffic_policy_count(mut self, input: std::option::Option<i32>) -> Self {
        self.traffic_policy_count = input;
        self
    }
    /// Consumes the builder and constructs a [`TrafficPolicySummary`](crate::types::TrafficPolicySummary).
    pub fn build(self) -> crate::types::TrafficPolicySummary {
        crate::types::TrafficPolicySummary {
            id: self.id,
            name: self.name,
            r#type: self.r#type,
            latest_version: self.latest_version,
            traffic_policy_count: self.traffic_policy_count,
        }
    }
}
