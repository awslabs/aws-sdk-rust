// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_operation_crate_operation_associate_vpc_with_hosted_zone(
    input: &crate::input::AssociateVpcWithHostedZoneInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("AssociateVPCWithHostedZoneRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_associate_vpc_with_hosted_zone_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_change_resource_record_sets(
    input: &crate::input::ChangeResourceRecordSetsInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("ChangeResourceRecordSetsRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_change_resource_record_sets_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_change_tags_for_resource(
    input: &crate::input::ChangeTagsForResourceInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("ChangeTagsForResourceRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_change_tags_for_resource_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_create_health_check(
    input: &crate::input::CreateHealthCheckInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("CreateHealthCheckRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_create_health_check_input(&&input, root)
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_create_hosted_zone(
    input: &crate::input::CreateHostedZoneInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("CreateHostedZoneRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_create_hosted_zone_input(&&input, root)
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_create_key_signing_key(
    input: &crate::input::CreateKeySigningKeyInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("CreateKeySigningKeyRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_create_key_signing_key_input(&&input, root)
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_create_query_logging_config(
    input: &crate::input::CreateQueryLoggingConfigInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("CreateQueryLoggingConfigRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_create_query_logging_config_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_create_reusable_delegation_set(
    input: &crate::input::CreateReusableDelegationSetInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("CreateReusableDelegationSetRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_create_reusable_delegation_set_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_create_traffic_policy(
    input: &crate::input::CreateTrafficPolicyInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("CreateTrafficPolicyRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_create_traffic_policy_input(&&input, root)
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_create_traffic_policy_instance(
    input: &crate::input::CreateTrafficPolicyInstanceInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("CreateTrafficPolicyInstanceRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_create_traffic_policy_instance_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_create_traffic_policy_version(
    input: &crate::input::CreateTrafficPolicyVersionInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("CreateTrafficPolicyVersionRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_create_traffic_policy_version_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_create_vpc_association_authorization(
    input: &crate::input::CreateVpcAssociationAuthorizationInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("CreateVPCAssociationAuthorizationRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_create_vpc_association_authorization_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_delete_vpc_association_authorization(
    input: &crate::input::DeleteVpcAssociationAuthorizationInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("DeleteVPCAssociationAuthorizationRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_delete_vpc_association_authorization_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_disassociate_vpc_from_hosted_zone(
    input: &crate::input::DisassociateVpcFromHostedZoneInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("DisassociateVPCFromHostedZoneRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_disassociate_vpc_from_hosted_zone_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_list_tags_for_resources(
    input: &crate::input::ListTagsForResourcesInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("ListTagsForResourcesRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_list_tags_for_resources_input(&&input, root)
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_update_health_check(
    input: &crate::input::UpdateHealthCheckInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("UpdateHealthCheckRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_update_health_check_input(&&input, root)
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_update_hosted_zone_comment(
    input: &crate::input::UpdateHostedZoneCommentInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("UpdateHostedZoneCommentRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_update_hosted_zone_comment_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_update_traffic_policy_comment(
    input: &crate::input::UpdateTrafficPolicyCommentInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("UpdateTrafficPolicyCommentRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_update_traffic_policy_comment_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_crate_operation_update_traffic_policy_instance(
    input: &crate::input::UpdateTrafficPolicyInstanceInput,
) -> Result<aws_smithy_http::body::SdkBody, std::string::String> {
    let mut out = String::new();
    {
        let mut writer = aws_smithy_xml::encode::XmlWriter::new(&mut out);
        #[allow(unused_mut)]
        let mut root = writer
            .start_el("UpdateTrafficPolicyInstanceRequest")
            .write_ns("https://route53.amazonaws.com/doc/2013-04-01/", None);
        crate::xml_ser::serialize_structure_crate_input_update_traffic_policy_instance_input(
            &&input, root,
        )
    }
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
