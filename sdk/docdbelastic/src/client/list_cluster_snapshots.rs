// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListClusterSnapshots`](crate::client::fluent_builders::ListClusterSnapshots) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListClusterSnapshots::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_arn(impl Into<String>)`](crate::client::fluent_builders::ListClusterSnapshots::cluster_arn) / [`set_cluster_arn(Option<String>)`](crate::client::fluent_builders::ListClusterSnapshots::set_cluster_arn): <p>The arn of the Elastic DocumentDB cluster.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListClusterSnapshots::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListClusterSnapshots::set_next_token): <p>The nextToken which is used the get the next page of data.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListClusterSnapshots::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListClusterSnapshots::set_max_results): <p>The maximum number of entries to recieve in the response.</p>
    /// - On success, responds with [`ListClusterSnapshotsOutput`](crate::output::ListClusterSnapshotsOutput) with field(s):
    ///   - [`snapshots(Option<Vec<ClusterSnapshotInList>>)`](crate::output::ListClusterSnapshotsOutput::snapshots): <p>A list of Elastic DocumentDB snapshots for a specified cluster.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListClusterSnapshotsOutput::next_token): <p>The response will provide a nextToken if there is more data beyond the maxResults.</p>  <p>If there is no more data in the responce, the nextToken will not be returned.</p>
    /// - On failure, responds with [`SdkError<ListClusterSnapshotsError>`](crate::error::ListClusterSnapshotsError)
    pub fn list_cluster_snapshots(&self) -> crate::client::fluent_builders::ListClusterSnapshots {
        crate::client::fluent_builders::ListClusterSnapshots::new(self.handle.clone())
    }
}
