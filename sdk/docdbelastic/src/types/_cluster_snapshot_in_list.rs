// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of Elastic DocumentDB snapshots.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClusterSnapshotInList {
    /// <p>The name of the Elastic DocumentDB snapshot.</p>
    #[doc(hidden)]
    pub snapshot_name: std::option::Option<std::string::String>,
    /// <p>The arn of the Elastic DocumentDB snapshot</p>
    #[doc(hidden)]
    pub snapshot_arn: std::option::Option<std::string::String>,
    /// <p>The arn of the Elastic DocumentDB cluster.</p>
    #[doc(hidden)]
    pub cluster_arn: std::option::Option<std::string::String>,
    /// <p>The status of the Elastic DocumentDB snapshot.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::Status>,
    /// <p>The time when the Elastic DocumentDB snapshot was created in Universal Coordinated Time (UTC).</p>
    #[doc(hidden)]
    pub snapshot_creation_time: std::option::Option<std::string::String>,
}
impl ClusterSnapshotInList {
    /// <p>The name of the Elastic DocumentDB snapshot.</p>
    pub fn snapshot_name(&self) -> std::option::Option<&str> {
        self.snapshot_name.as_deref()
    }
    /// <p>The arn of the Elastic DocumentDB snapshot</p>
    pub fn snapshot_arn(&self) -> std::option::Option<&str> {
        self.snapshot_arn.as_deref()
    }
    /// <p>The arn of the Elastic DocumentDB cluster.</p>
    pub fn cluster_arn(&self) -> std::option::Option<&str> {
        self.cluster_arn.as_deref()
    }
    /// <p>The status of the Elastic DocumentDB snapshot.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::Status> {
        self.status.as_ref()
    }
    /// <p>The time when the Elastic DocumentDB snapshot was created in Universal Coordinated Time (UTC).</p>
    pub fn snapshot_creation_time(&self) -> std::option::Option<&str> {
        self.snapshot_creation_time.as_deref()
    }
}
impl ClusterSnapshotInList {
    /// Creates a new builder-style object to manufacture [`ClusterSnapshotInList`](crate::types::ClusterSnapshotInList).
    pub fn builder() -> crate::types::builders::ClusterSnapshotInListBuilder {
        crate::types::builders::ClusterSnapshotInListBuilder::default()
    }
}

/// A builder for [`ClusterSnapshotInList`](crate::types::ClusterSnapshotInList).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClusterSnapshotInListBuilder {
    pub(crate) snapshot_name: std::option::Option<std::string::String>,
    pub(crate) snapshot_arn: std::option::Option<std::string::String>,
    pub(crate) cluster_arn: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::Status>,
    pub(crate) snapshot_creation_time: std::option::Option<std::string::String>,
}
impl ClusterSnapshotInListBuilder {
    /// <p>The name of the Elastic DocumentDB snapshot.</p>
    pub fn snapshot_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.snapshot_name = Some(input.into());
        self
    }
    /// <p>The name of the Elastic DocumentDB snapshot.</p>
    pub fn set_snapshot_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.snapshot_name = input;
        self
    }
    /// <p>The arn of the Elastic DocumentDB snapshot</p>
    pub fn snapshot_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.snapshot_arn = Some(input.into());
        self
    }
    /// <p>The arn of the Elastic DocumentDB snapshot</p>
    pub fn set_snapshot_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.snapshot_arn = input;
        self
    }
    /// <p>The arn of the Elastic DocumentDB cluster.</p>
    pub fn cluster_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster_arn = Some(input.into());
        self
    }
    /// <p>The arn of the Elastic DocumentDB cluster.</p>
    pub fn set_cluster_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster_arn = input;
        self
    }
    /// <p>The status of the Elastic DocumentDB snapshot.</p>
    pub fn status(mut self, input: crate::types::Status) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the Elastic DocumentDB snapshot.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::Status>) -> Self {
        self.status = input;
        self
    }
    /// <p>The time when the Elastic DocumentDB snapshot was created in Universal Coordinated Time (UTC).</p>
    pub fn snapshot_creation_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.snapshot_creation_time = Some(input.into());
        self
    }
    /// <p>The time when the Elastic DocumentDB snapshot was created in Universal Coordinated Time (UTC).</p>
    pub fn set_snapshot_creation_time(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.snapshot_creation_time = input;
        self
    }
    /// Consumes the builder and constructs a [`ClusterSnapshotInList`](crate::types::ClusterSnapshotInList).
    pub fn build(self) -> crate::types::ClusterSnapshotInList {
        crate::types::ClusterSnapshotInList {
            snapshot_name: self.snapshot_name,
            snapshot_arn: self.snapshot_arn,
            cluster_arn: self.cluster_arn,
            status: self.status,
            snapshot_creation_time: self.snapshot_creation_time,
        }
    }
}
