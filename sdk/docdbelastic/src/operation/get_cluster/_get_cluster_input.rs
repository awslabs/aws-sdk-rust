// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetClusterInput {
    /// <p>The arn of the Elastic DocumentDB cluster.</p>
    pub cluster_arn: ::std::option::Option<::std::string::String>,
}
impl GetClusterInput {
    /// <p>The arn of the Elastic DocumentDB cluster.</p>
    pub fn cluster_arn(&self) -> ::std::option::Option<&str> {
        self.cluster_arn.as_deref()
    }
}
impl GetClusterInput {
    /// Creates a new builder-style object to manufacture [`GetClusterInput`](crate::operation::get_cluster::GetClusterInput).
    pub fn builder() -> crate::operation::get_cluster::builders::GetClusterInputBuilder {
        crate::operation::get_cluster::builders::GetClusterInputBuilder::default()
    }
}

/// A builder for [`GetClusterInput`](crate::operation::get_cluster::GetClusterInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetClusterInputBuilder {
    pub(crate) cluster_arn: ::std::option::Option<::std::string::String>,
}
impl GetClusterInputBuilder {
    /// <p>The arn of the Elastic DocumentDB cluster.</p>
    /// This field is required.
    pub fn cluster_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The arn of the Elastic DocumentDB cluster.</p>
    pub fn set_cluster_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_arn = input;
        self
    }
    /// <p>The arn of the Elastic DocumentDB cluster.</p>
    pub fn get_cluster_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_arn
    }
    /// Consumes the builder and constructs a [`GetClusterInput`](crate::operation::get_cluster::GetClusterInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_cluster::GetClusterInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_cluster::GetClusterInput {
            cluster_arn: self.cluster_arn,
        })
    }
}
