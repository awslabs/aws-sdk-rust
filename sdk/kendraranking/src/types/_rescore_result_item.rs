// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A result item for a document with a new relevancy score.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RescoreResultItem {
    /// <p>The identifier of the document from the search service.</p>
    #[doc(hidden)]
    pub document_id: std::option::Option<std::string::String>,
    /// <p>The relevancy score or rank that Amazon Kendra Intelligent Ranking gives to the result.</p>
    #[doc(hidden)]
    pub score: std::option::Option<f32>,
}
impl RescoreResultItem {
    /// <p>The identifier of the document from the search service.</p>
    pub fn document_id(&self) -> std::option::Option<&str> {
        self.document_id.as_deref()
    }
    /// <p>The relevancy score or rank that Amazon Kendra Intelligent Ranking gives to the result.</p>
    pub fn score(&self) -> std::option::Option<f32> {
        self.score
    }
}
impl RescoreResultItem {
    /// Creates a new builder-style object to manufacture [`RescoreResultItem`](crate::types::RescoreResultItem).
    pub fn builder() -> crate::types::builders::RescoreResultItemBuilder {
        crate::types::builders::RescoreResultItemBuilder::default()
    }
}

/// A builder for [`RescoreResultItem`](crate::types::RescoreResultItem).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RescoreResultItemBuilder {
    pub(crate) document_id: std::option::Option<std::string::String>,
    pub(crate) score: std::option::Option<f32>,
}
impl RescoreResultItemBuilder {
    /// <p>The identifier of the document from the search service.</p>
    pub fn document_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.document_id = Some(input.into());
        self
    }
    /// <p>The identifier of the document from the search service.</p>
    pub fn set_document_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.document_id = input;
        self
    }
    /// <p>The relevancy score or rank that Amazon Kendra Intelligent Ranking gives to the result.</p>
    pub fn score(mut self, input: f32) -> Self {
        self.score = Some(input);
        self
    }
    /// <p>The relevancy score or rank that Amazon Kendra Intelligent Ranking gives to the result.</p>
    pub fn set_score(mut self, input: std::option::Option<f32>) -> Self {
        self.score = input;
        self
    }
    /// Consumes the builder and constructs a [`RescoreResultItem`](crate::types::RescoreResultItem).
    pub fn build(self) -> crate::types::RescoreResultItem {
        crate::types::RescoreResultItem {
            document_id: self.document_id,
            score: self.score,
        }
    }
}
