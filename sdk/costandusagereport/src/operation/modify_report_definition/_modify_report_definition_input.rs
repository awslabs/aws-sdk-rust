// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyReportDefinitionInput {
    /// <p>The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces. </p>
    #[doc(hidden)]
    pub report_name: std::option::Option<std::string::String>,
    /// <p>The definition of AWS Cost and Usage Report. You can specify the report name, time unit, report format, compression format, S3 bucket, additional artifacts, and schema elements in the definition. </p>
    #[doc(hidden)]
    pub report_definition: std::option::Option<crate::types::ReportDefinition>,
}
impl ModifyReportDefinitionInput {
    /// <p>The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces. </p>
    pub fn report_name(&self) -> std::option::Option<&str> {
        self.report_name.as_deref()
    }
    /// <p>The definition of AWS Cost and Usage Report. You can specify the report name, time unit, report format, compression format, S3 bucket, additional artifacts, and schema elements in the definition. </p>
    pub fn report_definition(&self) -> std::option::Option<&crate::types::ReportDefinition> {
        self.report_definition.as_ref()
    }
}
impl ModifyReportDefinitionInput {
    /// Creates a new builder-style object to manufacture [`ModifyReportDefinitionInput`](crate::operation::modify_report_definition::ModifyReportDefinitionInput).
    pub fn builder(
    ) -> crate::operation::modify_report_definition::builders::ModifyReportDefinitionInputBuilder
    {
        crate::operation::modify_report_definition::builders::ModifyReportDefinitionInputBuilder::default()
    }
}

/// A builder for [`ModifyReportDefinitionInput`](crate::operation::modify_report_definition::ModifyReportDefinitionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModifyReportDefinitionInputBuilder {
    pub(crate) report_name: std::option::Option<std::string::String>,
    pub(crate) report_definition: std::option::Option<crate::types::ReportDefinition>,
}
impl ModifyReportDefinitionInputBuilder {
    /// <p>The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces. </p>
    pub fn report_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.report_name = Some(input.into());
        self
    }
    /// <p>The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces. </p>
    pub fn set_report_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.report_name = input;
        self
    }
    /// <p>The definition of AWS Cost and Usage Report. You can specify the report name, time unit, report format, compression format, S3 bucket, additional artifacts, and schema elements in the definition. </p>
    pub fn report_definition(mut self, input: crate::types::ReportDefinition) -> Self {
        self.report_definition = Some(input);
        self
    }
    /// <p>The definition of AWS Cost and Usage Report. You can specify the report name, time unit, report format, compression format, S3 bucket, additional artifacts, and schema elements in the definition. </p>
    pub fn set_report_definition(
        mut self,
        input: std::option::Option<crate::types::ReportDefinition>,
    ) -> Self {
        self.report_definition = input;
        self
    }
    /// Consumes the builder and constructs a [`ModifyReportDefinitionInput`](crate::operation::modify_report_definition::ModifyReportDefinitionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::modify_report_definition::ModifyReportDefinitionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::modify_report_definition::ModifyReportDefinitionInput {
                report_name: self.report_name,
                report_definition: self.report_definition,
            },
        )
    }
}
