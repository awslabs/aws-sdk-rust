// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeFindingsInput {
    /// <p>The ARN that specifies the finding that you want to describe.</p>
    #[doc(hidden)]
    pub finding_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The locale into which you want to translate a finding description, recommendation, and the short description that identifies the finding.</p>
    #[doc(hidden)]
    pub locale: std::option::Option<crate::types::Locale>,
}
impl DescribeFindingsInput {
    /// <p>The ARN that specifies the finding that you want to describe.</p>
    pub fn finding_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.finding_arns.as_deref()
    }
    /// <p>The locale into which you want to translate a finding description, recommendation, and the short description that identifies the finding.</p>
    pub fn locale(&self) -> std::option::Option<&crate::types::Locale> {
        self.locale.as_ref()
    }
}
impl DescribeFindingsInput {
    /// Creates a new builder-style object to manufacture [`DescribeFindingsInput`](crate::operation::describe_findings::DescribeFindingsInput).
    pub fn builder() -> crate::operation::describe_findings::builders::DescribeFindingsInputBuilder
    {
        crate::operation::describe_findings::builders::DescribeFindingsInputBuilder::default()
    }
}

/// A builder for [`DescribeFindingsInput`](crate::operation::describe_findings::DescribeFindingsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeFindingsInputBuilder {
    pub(crate) finding_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) locale: std::option::Option<crate::types::Locale>,
}
impl DescribeFindingsInputBuilder {
    /// Appends an item to `finding_arns`.
    ///
    /// To override the contents of this collection use [`set_finding_arns`](Self::set_finding_arns).
    ///
    /// <p>The ARN that specifies the finding that you want to describe.</p>
    pub fn finding_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.finding_arns.unwrap_or_default();
        v.push(input.into());
        self.finding_arns = Some(v);
        self
    }
    /// <p>The ARN that specifies the finding that you want to describe.</p>
    pub fn set_finding_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.finding_arns = input;
        self
    }
    /// <p>The locale into which you want to translate a finding description, recommendation, and the short description that identifies the finding.</p>
    pub fn locale(mut self, input: crate::types::Locale) -> Self {
        self.locale = Some(input);
        self
    }
    /// <p>The locale into which you want to translate a finding description, recommendation, and the short description that identifies the finding.</p>
    pub fn set_locale(mut self, input: std::option::Option<crate::types::Locale>) -> Self {
        self.locale = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeFindingsInput`](crate::operation::describe_findings::DescribeFindingsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_findings::DescribeFindingsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_findings::DescribeFindingsInput {
            finding_arns: self.finding_arns,
            locale: self.locale,
        })
    }
}
