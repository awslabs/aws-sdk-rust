// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AddAttributesToFindingsInput {
    /// <p>The ARNs that specify the findings that you want to assign attributes to.</p>
    #[doc(hidden)]
    pub finding_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The array of attributes that you want to assign to specified findings.</p>
    #[doc(hidden)]
    pub attributes: std::option::Option<std::vec::Vec<crate::types::Attribute>>,
}
impl AddAttributesToFindingsInput {
    /// <p>The ARNs that specify the findings that you want to assign attributes to.</p>
    pub fn finding_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.finding_arns.as_deref()
    }
    /// <p>The array of attributes that you want to assign to specified findings.</p>
    pub fn attributes(&self) -> std::option::Option<&[crate::types::Attribute]> {
        self.attributes.as_deref()
    }
}
impl AddAttributesToFindingsInput {
    /// Creates a new builder-style object to manufacture [`AddAttributesToFindingsInput`](crate::operation::add_attributes_to_findings::AddAttributesToFindingsInput).
    pub fn builder(
    ) -> crate::operation::add_attributes_to_findings::builders::AddAttributesToFindingsInputBuilder
    {
        crate::operation::add_attributes_to_findings::builders::AddAttributesToFindingsInputBuilder::default()
    }
}

/// A builder for [`AddAttributesToFindingsInput`](crate::operation::add_attributes_to_findings::AddAttributesToFindingsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AddAttributesToFindingsInputBuilder {
    pub(crate) finding_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) attributes: std::option::Option<std::vec::Vec<crate::types::Attribute>>,
}
impl AddAttributesToFindingsInputBuilder {
    /// Appends an item to `finding_arns`.
    ///
    /// To override the contents of this collection use [`set_finding_arns`](Self::set_finding_arns).
    ///
    /// <p>The ARNs that specify the findings that you want to assign attributes to.</p>
    pub fn finding_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.finding_arns.unwrap_or_default();
        v.push(input.into());
        self.finding_arns = Some(v);
        self
    }
    /// <p>The ARNs that specify the findings that you want to assign attributes to.</p>
    pub fn set_finding_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.finding_arns = input;
        self
    }
    /// Appends an item to `attributes`.
    ///
    /// To override the contents of this collection use [`set_attributes`](Self::set_attributes).
    ///
    /// <p>The array of attributes that you want to assign to specified findings.</p>
    pub fn attributes(mut self, input: crate::types::Attribute) -> Self {
        let mut v = self.attributes.unwrap_or_default();
        v.push(input);
        self.attributes = Some(v);
        self
    }
    /// <p>The array of attributes that you want to assign to specified findings.</p>
    pub fn set_attributes(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Attribute>>,
    ) -> Self {
        self.attributes = input;
        self
    }
    /// Consumes the builder and constructs a [`AddAttributesToFindingsInput`](crate::operation::add_attributes_to_findings::AddAttributesToFindingsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::add_attributes_to_findings::AddAttributesToFindingsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::add_attributes_to_findings::AddAttributesToFindingsInput {
                finding_arns: self.finding_arns,
                attributes: self.attributes,
            },
        )
    }
}
