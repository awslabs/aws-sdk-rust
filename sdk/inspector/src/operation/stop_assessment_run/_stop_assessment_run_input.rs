// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StopAssessmentRunInput {
    /// <p>The ARN of the assessment run that you want to stop.</p>
    #[doc(hidden)]
    pub assessment_run_arn: std::option::Option<std::string::String>,
    /// <p>An input option that can be set to either START_EVALUATION or SKIP_EVALUATION. START_EVALUATION (the default value), stops the AWS agent from collecting data and begins the results evaluation and the findings generation process. SKIP_EVALUATION cancels the assessment run immediately, after which no findings are generated.</p>
    #[doc(hidden)]
    pub stop_action: std::option::Option<crate::types::StopAction>,
}
impl StopAssessmentRunInput {
    /// <p>The ARN of the assessment run that you want to stop.</p>
    pub fn assessment_run_arn(&self) -> std::option::Option<&str> {
        self.assessment_run_arn.as_deref()
    }
    /// <p>An input option that can be set to either START_EVALUATION or SKIP_EVALUATION. START_EVALUATION (the default value), stops the AWS agent from collecting data and begins the results evaluation and the findings generation process. SKIP_EVALUATION cancels the assessment run immediately, after which no findings are generated.</p>
    pub fn stop_action(&self) -> std::option::Option<&crate::types::StopAction> {
        self.stop_action.as_ref()
    }
}
impl StopAssessmentRunInput {
    /// Creates a new builder-style object to manufacture [`StopAssessmentRunInput`](crate::operation::stop_assessment_run::StopAssessmentRunInput).
    pub fn builder(
    ) -> crate::operation::stop_assessment_run::builders::StopAssessmentRunInputBuilder {
        crate::operation::stop_assessment_run::builders::StopAssessmentRunInputBuilder::default()
    }
}

/// A builder for [`StopAssessmentRunInput`](crate::operation::stop_assessment_run::StopAssessmentRunInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StopAssessmentRunInputBuilder {
    pub(crate) assessment_run_arn: std::option::Option<std::string::String>,
    pub(crate) stop_action: std::option::Option<crate::types::StopAction>,
}
impl StopAssessmentRunInputBuilder {
    /// <p>The ARN of the assessment run that you want to stop.</p>
    pub fn assessment_run_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.assessment_run_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the assessment run that you want to stop.</p>
    pub fn set_assessment_run_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.assessment_run_arn = input;
        self
    }
    /// <p>An input option that can be set to either START_EVALUATION or SKIP_EVALUATION. START_EVALUATION (the default value), stops the AWS agent from collecting data and begins the results evaluation and the findings generation process. SKIP_EVALUATION cancels the assessment run immediately, after which no findings are generated.</p>
    pub fn stop_action(mut self, input: crate::types::StopAction) -> Self {
        self.stop_action = Some(input);
        self
    }
    /// <p>An input option that can be set to either START_EVALUATION or SKIP_EVALUATION. START_EVALUATION (the default value), stops the AWS agent from collecting data and begins the results evaluation and the findings generation process. SKIP_EVALUATION cancels the assessment run immediately, after which no findings are generated.</p>
    pub fn set_stop_action(mut self, input: std::option::Option<crate::types::StopAction>) -> Self {
        self.stop_action = input;
        self
    }
    /// Consumes the builder and constructs a [`StopAssessmentRunInput`](crate::operation::stop_assessment_run::StopAssessmentRunInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::stop_assessment_run::StopAssessmentRunInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::stop_assessment_run::StopAssessmentRunInput {
                assessment_run_arn: self.assessment_run_arn,
                stop_action: self.stop_action,
            },
        )
    }
}
