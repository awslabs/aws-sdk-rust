// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateExclusionsPreviewOutput {
    /// <p>Specifies the unique identifier of the requested exclusions preview. You can use the unique identifier to retrieve the exclusions preview when running the GetExclusionsPreview API.</p>
    #[doc(hidden)]
    pub preview_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateExclusionsPreviewOutput {
    /// <p>Specifies the unique identifier of the requested exclusions preview. You can use the unique identifier to retrieve the exclusions preview when running the GetExclusionsPreview API.</p>
    pub fn preview_token(&self) -> std::option::Option<&str> {
        self.preview_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for CreateExclusionsPreviewOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateExclusionsPreviewOutput {
    /// Creates a new builder-style object to manufacture [`CreateExclusionsPreviewOutput`](crate::operation::create_exclusions_preview::CreateExclusionsPreviewOutput).
    pub fn builder(
    ) -> crate::operation::create_exclusions_preview::builders::CreateExclusionsPreviewOutputBuilder
    {
        crate::operation::create_exclusions_preview::builders::CreateExclusionsPreviewOutputBuilder::default()
    }
}

/// A builder for [`CreateExclusionsPreviewOutput`](crate::operation::create_exclusions_preview::CreateExclusionsPreviewOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateExclusionsPreviewOutputBuilder {
    pub(crate) preview_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateExclusionsPreviewOutputBuilder {
    /// <p>Specifies the unique identifier of the requested exclusions preview. You can use the unique identifier to retrieve the exclusions preview when running the GetExclusionsPreview API.</p>
    pub fn preview_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.preview_token = Some(input.into());
        self
    }
    /// <p>Specifies the unique identifier of the requested exclusions preview. You can use the unique identifier to retrieve the exclusions preview when running the GetExclusionsPreview API.</p>
    pub fn set_preview_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.preview_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateExclusionsPreviewOutput`](crate::operation::create_exclusions_preview::CreateExclusionsPreviewOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_exclusions_preview::CreateExclusionsPreviewOutput {
        crate::operation::create_exclusions_preview::CreateExclusionsPreviewOutput {
            preview_token: self.preview_token,
            _request_id: self._request_id,
        }
    }
}
