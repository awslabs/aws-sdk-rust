// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RemoveAttributesFromFindingsInput {
    /// <p>The ARNs that specify the findings that you want to remove attributes from.</p>
    #[doc(hidden)]
    pub finding_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The array of attribute keys that you want to remove from specified findings.</p>
    #[doc(hidden)]
    pub attribute_keys: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl RemoveAttributesFromFindingsInput {
    /// <p>The ARNs that specify the findings that you want to remove attributes from.</p>
    pub fn finding_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.finding_arns.as_deref()
    }
    /// <p>The array of attribute keys that you want to remove from specified findings.</p>
    pub fn attribute_keys(&self) -> std::option::Option<&[std::string::String]> {
        self.attribute_keys.as_deref()
    }
}
impl RemoveAttributesFromFindingsInput {
    /// Creates a new builder-style object to manufacture [`RemoveAttributesFromFindingsInput`](crate::operation::remove_attributes_from_findings::RemoveAttributesFromFindingsInput).
    pub fn builder() -> crate::operation::remove_attributes_from_findings::builders::RemoveAttributesFromFindingsInputBuilder{
        crate::operation::remove_attributes_from_findings::builders::RemoveAttributesFromFindingsInputBuilder::default()
    }
}

/// A builder for [`RemoveAttributesFromFindingsInput`](crate::operation::remove_attributes_from_findings::RemoveAttributesFromFindingsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RemoveAttributesFromFindingsInputBuilder {
    pub(crate) finding_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) attribute_keys: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl RemoveAttributesFromFindingsInputBuilder {
    /// Appends an item to `finding_arns`.
    ///
    /// To override the contents of this collection use [`set_finding_arns`](Self::set_finding_arns).
    ///
    /// <p>The ARNs that specify the findings that you want to remove attributes from.</p>
    pub fn finding_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.finding_arns.unwrap_or_default();
        v.push(input.into());
        self.finding_arns = Some(v);
        self
    }
    /// <p>The ARNs that specify the findings that you want to remove attributes from.</p>
    pub fn set_finding_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.finding_arns = input;
        self
    }
    /// Appends an item to `attribute_keys`.
    ///
    /// To override the contents of this collection use [`set_attribute_keys`](Self::set_attribute_keys).
    ///
    /// <p>The array of attribute keys that you want to remove from specified findings.</p>
    pub fn attribute_keys(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.attribute_keys.unwrap_or_default();
        v.push(input.into());
        self.attribute_keys = Some(v);
        self
    }
    /// <p>The array of attribute keys that you want to remove from specified findings.</p>
    pub fn set_attribute_keys(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.attribute_keys = input;
        self
    }
    /// Consumes the builder and constructs a [`RemoveAttributesFromFindingsInput`](crate::operation::remove_attributes_from_findings::RemoveAttributesFromFindingsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::remove_attributes_from_findings::RemoveAttributesFromFindingsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::remove_attributes_from_findings::RemoveAttributesFromFindingsInput {
                finding_arns: self.finding_arns,
                attribute_keys: self.attribute_keys,
            },
        )
    }
}
