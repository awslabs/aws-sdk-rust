// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListExclusions`](crate::client::fluent_builders::ListExclusions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListExclusions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`assessment_run_arn(impl Into<String>)`](crate::client::fluent_builders::ListExclusions::assessment_run_arn) / [`set_assessment_run_arn(Option<String>)`](crate::client::fluent_builders::ListExclusions::set_assessment_run_arn): <p>The ARN of the assessment run that generated the exclusions that you want to list.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListExclusions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListExclusions::set_next_token): <p>You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the ListExclusionsRequest action. Subsequent calls to the action fill nextToken in the request with the value of nextToken from the previous response to continue listing data.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListExclusions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListExclusions::set_max_results): <p>You can use this parameter to indicate the maximum number of items you want in the response. The default value is 100. The maximum value is 500.</p>
    /// - On success, responds with [`ListExclusionsOutput`](crate::output::ListExclusionsOutput) with field(s):
    ///   - [`exclusion_arns(Option<Vec<String>>)`](crate::output::ListExclusionsOutput::exclusion_arns): <p>A list of exclusions' ARNs returned by the action.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListExclusionsOutput::next_token): <p>When a response is generated, if there is more data to be listed, this parameters is present in the response and contains the value to use for the nextToken parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null.</p>
    /// - On failure, responds with [`SdkError<ListExclusionsError>`](crate::error::ListExclusionsError)
    pub fn list_exclusions(&self) -> crate::client::fluent_builders::ListExclusions {
        crate::client::fluent_builders::ListExclusions::new(self.handle.clone())
    }
}
