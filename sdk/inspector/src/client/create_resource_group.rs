// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateResourceGroup`](crate::client::fluent_builders::CreateResourceGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_group_tags(Vec<ResourceGroupTag>)`](crate::client::fluent_builders::CreateResourceGroup::resource_group_tags) / [`set_resource_group_tags(Option<Vec<ResourceGroupTag>>)`](crate::client::fluent_builders::CreateResourceGroup::set_resource_group_tags): <p>A collection of keys and an array of possible values, '[{"key":"key1","values":["Value1","Value2"]},{"key":"Key2","values":["Value3"]}]'.</p>  <p>For example,'[{"key":"Name","values":["TestEC2Instance"]}]'.</p>
    /// - On success, responds with [`CreateResourceGroupOutput`](crate::output::CreateResourceGroupOutput) with field(s):
    ///   - [`resource_group_arn(Option<String>)`](crate::output::CreateResourceGroupOutput::resource_group_arn): <p>The ARN that specifies the resource group that is created.</p>
    /// - On failure, responds with [`SdkError<CreateResourceGroupError>`](crate::error::CreateResourceGroupError)
    pub fn create_resource_group(&self) -> crate::client::fluent_builders::CreateResourceGroup {
        crate::client::fluent_builders::CreateResourceGroup::new(self.handle.clone())
    }
}
