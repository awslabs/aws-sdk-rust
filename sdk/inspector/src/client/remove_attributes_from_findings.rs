// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RemoveAttributesFromFindings`](crate::operation::remove_attributes_from_findings::builders::RemoveAttributesFromFindingsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`finding_arns(Vec<String>)`](crate::operation::remove_attributes_from_findings::builders::RemoveAttributesFromFindingsFluentBuilder::finding_arns) / [`set_finding_arns(Option<Vec<String>>)`](crate::operation::remove_attributes_from_findings::builders::RemoveAttributesFromFindingsFluentBuilder::set_finding_arns): <p>The ARNs that specify the findings that you want to remove attributes from.</p>
    ///   - [`attribute_keys(Vec<String>)`](crate::operation::remove_attributes_from_findings::builders::RemoveAttributesFromFindingsFluentBuilder::attribute_keys) / [`set_attribute_keys(Option<Vec<String>>)`](crate::operation::remove_attributes_from_findings::builders::RemoveAttributesFromFindingsFluentBuilder::set_attribute_keys): <p>The array of attribute keys that you want to remove from specified findings.</p>
    /// - On success, responds with [`RemoveAttributesFromFindingsOutput`](crate::operation::remove_attributes_from_findings::RemoveAttributesFromFindingsOutput) with field(s):
    ///   - [`failed_items(Option<HashMap<String, FailedItemDetails>>)`](crate::operation::remove_attributes_from_findings::RemoveAttributesFromFindingsOutput::failed_items): <p>Attributes details that cannot be described. An error code is provided for each failed item.</p>
    /// - On failure, responds with [`SdkError<RemoveAttributesFromFindingsError>`](crate::operation::remove_attributes_from_findings::RemoveAttributesFromFindingsError)
    pub fn remove_attributes_from_findings(&self) -> crate::operation::remove_attributes_from_findings::builders::RemoveAttributesFromFindingsFluentBuilder{
        crate::operation::remove_attributes_from_findings::builders::RemoveAttributesFromFindingsFluentBuilder::new(self.handle.clone())
    }
}
