// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SubscribeToEvent`](crate::operation::subscribe_to_event::builders::SubscribeToEventFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::operation::subscribe_to_event::builders::SubscribeToEventFluentBuilder::resource_arn) / [`set_resource_arn(Option<String>)`](crate::operation::subscribe_to_event::builders::SubscribeToEventFluentBuilder::set_resource_arn):<br>required: **true**<br><p>The ARN of the assessment template that is used during the event for which you want to receive SNS notifications.</p><br>
    ///   - [`event(InspectorEvent)`](crate::operation::subscribe_to_event::builders::SubscribeToEventFluentBuilder::event) / [`set_event(Option<InspectorEvent>)`](crate::operation::subscribe_to_event::builders::SubscribeToEventFluentBuilder::set_event):<br>required: **true**<br><p>The event for which you want to receive SNS notifications.</p><br>
    ///   - [`topic_arn(impl Into<String>)`](crate::operation::subscribe_to_event::builders::SubscribeToEventFluentBuilder::topic_arn) / [`set_topic_arn(Option<String>)`](crate::operation::subscribe_to_event::builders::SubscribeToEventFluentBuilder::set_topic_arn):<br>required: **true**<br><p>The ARN of the SNS topic to which the SNS notifications are sent.</p><br>
    /// - On success, responds with [`SubscribeToEventOutput`](crate::operation::subscribe_to_event::SubscribeToEventOutput)
    /// - On failure, responds with [`SdkError<SubscribeToEventError>`](crate::operation::subscribe_to_event::SubscribeToEventError)
    pub fn subscribe_to_event(&self) -> crate::operation::subscribe_to_event::builders::SubscribeToEventFluentBuilder {
        crate::operation::subscribe_to_event::builders::SubscribeToEventFluentBuilder::new(self.handle.clone())
    }
}
