// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UnsubscribeFromEvent`](crate::operation::unsubscribe_from_event::builders::UnsubscribeFromEventFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::operation::unsubscribe_from_event::builders::UnsubscribeFromEventFluentBuilder::resource_arn) / [`set_resource_arn(Option<String>)`](crate::operation::unsubscribe_from_event::builders::UnsubscribeFromEventFluentBuilder::set_resource_arn): <p>The ARN of the assessment template that is used during the event for which you want to stop receiving SNS notifications.</p>
    ///   - [`event(InspectorEvent)`](crate::operation::unsubscribe_from_event::builders::UnsubscribeFromEventFluentBuilder::event) / [`set_event(Option<InspectorEvent>)`](crate::operation::unsubscribe_from_event::builders::UnsubscribeFromEventFluentBuilder::set_event): <p>The event for which you want to stop receiving SNS notifications.</p>
    ///   - [`topic_arn(impl Into<String>)`](crate::operation::unsubscribe_from_event::builders::UnsubscribeFromEventFluentBuilder::topic_arn) / [`set_topic_arn(Option<String>)`](crate::operation::unsubscribe_from_event::builders::UnsubscribeFromEventFluentBuilder::set_topic_arn): <p>The ARN of the SNS topic to which SNS notifications are sent.</p>
    /// - On success, responds with [`UnsubscribeFromEventOutput`](crate::operation::unsubscribe_from_event::UnsubscribeFromEventOutput)
    /// - On failure, responds with [`SdkError<UnsubscribeFromEventError>`](crate::operation::unsubscribe_from_event::UnsubscribeFromEventError)
    pub fn unsubscribe_from_event(
        &self,
    ) -> crate::operation::unsubscribe_from_event::builders::UnsubscribeFromEventFluentBuilder {
        crate::operation::unsubscribe_from_event::builders::UnsubscribeFromEventFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
