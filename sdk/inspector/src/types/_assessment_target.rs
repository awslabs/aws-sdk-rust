// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an Amazon Inspector application. This data type is used as the response element in the <code>DescribeAssessmentTargets</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssessmentTarget {
    /// <p>The ARN that specifies the Amazon Inspector assessment target.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The name of the Amazon Inspector assessment target.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The ARN that specifies the resource group that is associated with the assessment target.</p>
    #[doc(hidden)]
    pub resource_group_arn: std::option::Option<std::string::String>,
    /// <p>The time at which the assessment target is created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time at which <code>UpdateAssessmentTarget</code> is called.</p>
    #[doc(hidden)]
    pub updated_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl AssessmentTarget {
    /// <p>The ARN that specifies the Amazon Inspector assessment target.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The name of the Amazon Inspector assessment target.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The ARN that specifies the resource group that is associated with the assessment target.</p>
    pub fn resource_group_arn(&self) -> std::option::Option<&str> {
        self.resource_group_arn.as_deref()
    }
    /// <p>The time at which the assessment target is created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The time at which <code>UpdateAssessmentTarget</code> is called.</p>
    pub fn updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl AssessmentTarget {
    /// Creates a new builder-style object to manufacture [`AssessmentTarget`](crate::types::AssessmentTarget).
    pub fn builder() -> crate::types::builders::AssessmentTargetBuilder {
        crate::types::builders::AssessmentTargetBuilder::default()
    }
}

/// A builder for [`AssessmentTarget`](crate::types::AssessmentTarget).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssessmentTargetBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) resource_group_arn: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) updated_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl AssessmentTargetBuilder {
    /// <p>The ARN that specifies the Amazon Inspector assessment target.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The ARN that specifies the Amazon Inspector assessment target.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The name of the Amazon Inspector assessment target.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the Amazon Inspector assessment target.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The ARN that specifies the resource group that is associated with the assessment target.</p>
    pub fn resource_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_group_arn = Some(input.into());
        self
    }
    /// <p>The ARN that specifies the resource group that is associated with the assessment target.</p>
    pub fn set_resource_group_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_group_arn = input;
        self
    }
    /// <p>The time at which the assessment target is created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The time at which the assessment target is created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The time at which <code>UpdateAssessmentTarget</code> is called.</p>
    pub fn updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_at = Some(input);
        self
    }
    /// <p>The time at which <code>UpdateAssessmentTarget</code> is called.</p>
    pub fn set_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_at = input;
        self
    }
    /// Consumes the builder and constructs a [`AssessmentTarget`](crate::types::AssessmentTarget).
    pub fn build(self) -> crate::types::AssessmentTarget {
        crate::types::AssessmentTarget {
            arn: self.arn,
            name: self.name,
            resource_group_arn: self.resource_group_arn,
            created_at: self.created_at,
            updated_at: self.updated_at,
        }
    }
}
