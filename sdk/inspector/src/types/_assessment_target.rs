// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an Amazon Inspector application. This data type is used as the response element in the <code>DescribeAssessmentTargets</code> action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssessmentTarget {
    /// <p>The ARN that specifies the Amazon Inspector assessment target.</p>
    pub arn: ::std::string::String,
    /// <p>The name of the Amazon Inspector assessment target.</p>
    pub name: ::std::string::String,
    /// <p>The ARN that specifies the resource group that is associated with the assessment target.</p>
    pub resource_group_arn: ::std::option::Option<::std::string::String>,
    /// <p>The time at which the assessment target is created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>The time at which <code>UpdateAssessmentTarget</code> is called.</p>
    pub updated_at: ::aws_smithy_types::DateTime,
}
impl AssessmentTarget {
    /// <p>The ARN that specifies the Amazon Inspector assessment target.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The name of the Amazon Inspector assessment target.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The ARN that specifies the resource group that is associated with the assessment target.</p>
    pub fn resource_group_arn(&self) -> ::std::option::Option<&str> {
        self.resource_group_arn.as_deref()
    }
    /// <p>The time at which the assessment target is created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>The time at which <code>UpdateAssessmentTarget</code> is called.</p>
    pub fn updated_at(&self) -> &::aws_smithy_types::DateTime {
        &self.updated_at
    }
}
impl AssessmentTarget {
    /// Creates a new builder-style object to manufacture [`AssessmentTarget`](crate::types::AssessmentTarget).
    pub fn builder() -> crate::types::builders::AssessmentTargetBuilder {
        crate::types::builders::AssessmentTargetBuilder::default()
    }
}

/// A builder for [`AssessmentTarget`](crate::types::AssessmentTarget).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssessmentTargetBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) resource_group_arn: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl AssessmentTargetBuilder {
    /// <p>The ARN that specifies the Amazon Inspector assessment target.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN that specifies the Amazon Inspector assessment target.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ARN that specifies the Amazon Inspector assessment target.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The name of the Amazon Inspector assessment target.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Amazon Inspector assessment target.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the Amazon Inspector assessment target.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The ARN that specifies the resource group that is associated with the assessment target.</p>
    pub fn resource_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN that specifies the resource group that is associated with the assessment target.</p>
    pub fn set_resource_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_group_arn = input;
        self
    }
    /// <p>The ARN that specifies the resource group that is associated with the assessment target.</p>
    pub fn get_resource_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_group_arn
    }
    /// <p>The time at which the assessment target is created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time at which the assessment target is created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The time at which the assessment target is created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The time at which <code>UpdateAssessmentTarget</code> is called.</p>
    /// This field is required.
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time at which <code>UpdateAssessmentTarget</code> is called.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The time at which <code>UpdateAssessmentTarget</code> is called.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`AssessmentTarget`](crate::types::AssessmentTarget).
    /// This method will fail if any of the following fields are not set:
    /// - [`arn`](crate::types::builders::AssessmentTargetBuilder::arn)
    /// - [`name`](crate::types::builders::AssessmentTargetBuilder::name)
    /// - [`created_at`](crate::types::builders::AssessmentTargetBuilder::created_at)
    /// - [`updated_at`](crate::types::builders::AssessmentTargetBuilder::updated_at)
    pub fn build(self) -> ::std::result::Result<crate::types::AssessmentTarget, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AssessmentTarget {
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building AssessmentTarget",
                )
            })?,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building AssessmentTarget",
                )
            })?,
            resource_group_arn: self.resource_group_arn,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building AssessmentTarget",
                )
            })?,
            updated_at: self.updated_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "updated_at",
                    "updated_at was not specified but it is required when building AssessmentTarget",
                )
            })?,
        })
    }
}
