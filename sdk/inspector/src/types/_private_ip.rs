// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a private IP address associated with a network interface. This data type is used as a response element in the <code>DescribeFindings</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PrivateIp {
    /// <p>The DNS name of the private IP address.</p>
    #[doc(hidden)]
    pub private_dns_name: std::option::Option<std::string::String>,
    /// <p>The full IP address of the network inteface.</p>
    #[doc(hidden)]
    pub private_ip_address: std::option::Option<std::string::String>,
}
impl PrivateIp {
    /// <p>The DNS name of the private IP address.</p>
    pub fn private_dns_name(&self) -> std::option::Option<&str> {
        self.private_dns_name.as_deref()
    }
    /// <p>The full IP address of the network inteface.</p>
    pub fn private_ip_address(&self) -> std::option::Option<&str> {
        self.private_ip_address.as_deref()
    }
}
impl PrivateIp {
    /// Creates a new builder-style object to manufacture [`PrivateIp`](crate::types::PrivateIp).
    pub fn builder() -> crate::types::builders::PrivateIpBuilder {
        crate::types::builders::PrivateIpBuilder::default()
    }
}

/// A builder for [`PrivateIp`](crate::types::PrivateIp).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PrivateIpBuilder {
    pub(crate) private_dns_name: std::option::Option<std::string::String>,
    pub(crate) private_ip_address: std::option::Option<std::string::String>,
}
impl PrivateIpBuilder {
    /// <p>The DNS name of the private IP address.</p>
    pub fn private_dns_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.private_dns_name = Some(input.into());
        self
    }
    /// <p>The DNS name of the private IP address.</p>
    pub fn set_private_dns_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.private_dns_name = input;
        self
    }
    /// <p>The full IP address of the network inteface.</p>
    pub fn private_ip_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.private_ip_address = Some(input.into());
        self
    }
    /// <p>The full IP address of the network inteface.</p>
    pub fn set_private_ip_address(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.private_ip_address = input;
        self
    }
    /// Consumes the builder and constructs a [`PrivateIp`](crate::types::PrivateIp).
    pub fn build(self) -> crate::types::PrivateIp {
        crate::types::PrivateIp {
            private_dns_name: self.private_dns_name,
            private_ip_address: self.private_ip_address,
        }
    }
}
