// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Includes details about the failed items.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FailedItemDetails {
    /// <p>The status code of a failed item.</p>
    pub failure_code: crate::types::FailedItemErrorCode,
    /// <p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>
    pub retryable: bool,
}
impl FailedItemDetails {
    /// <p>The status code of a failed item.</p>
    pub fn failure_code(&self) -> &crate::types::FailedItemErrorCode {
        &self.failure_code
    }
    /// <p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>
    pub fn retryable(&self) -> bool {
        self.retryable
    }
}
impl FailedItemDetails {
    /// Creates a new builder-style object to manufacture [`FailedItemDetails`](crate::types::FailedItemDetails).
    pub fn builder() -> crate::types::builders::FailedItemDetailsBuilder {
        crate::types::builders::FailedItemDetailsBuilder::default()
    }
}

/// A builder for [`FailedItemDetails`](crate::types::FailedItemDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct FailedItemDetailsBuilder {
    pub(crate) failure_code: ::std::option::Option<crate::types::FailedItemErrorCode>,
    pub(crate) retryable: ::std::option::Option<bool>,
}
impl FailedItemDetailsBuilder {
    /// <p>The status code of a failed item.</p>
    /// This field is required.
    pub fn failure_code(mut self, input: crate::types::FailedItemErrorCode) -> Self {
        self.failure_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status code of a failed item.</p>
    pub fn set_failure_code(mut self, input: ::std::option::Option<crate::types::FailedItemErrorCode>) -> Self {
        self.failure_code = input;
        self
    }
    /// <p>The status code of a failed item.</p>
    pub fn get_failure_code(&self) -> &::std::option::Option<crate::types::FailedItemErrorCode> {
        &self.failure_code
    }
    /// <p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>
    /// This field is required.
    pub fn retryable(mut self, input: bool) -> Self {
        self.retryable = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>
    pub fn set_retryable(mut self, input: ::std::option::Option<bool>) -> Self {
        self.retryable = input;
        self
    }
    /// <p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>
    pub fn get_retryable(&self) -> &::std::option::Option<bool> {
        &self.retryable
    }
    /// Consumes the builder and constructs a [`FailedItemDetails`](crate::types::FailedItemDetails).
    /// This method will fail if any of the following fields are not set:
    /// - [`failure_code`](crate::types::builders::FailedItemDetailsBuilder::failure_code)
    /// - [`retryable`](crate::types::builders::FailedItemDetailsBuilder::retryable)
    pub fn build(self) -> ::std::result::Result<crate::types::FailedItemDetails, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FailedItemDetails {
            failure_code: self.failure_code.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "failure_code",
                    "failure_code was not specified but it is required when building FailedItemDetails",
                )
            })?,
            retryable: self.retryable.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "retryable",
                    "retryable was not specified but it is required when building FailedItemDetails",
                )
            })?,
        })
    }
}
