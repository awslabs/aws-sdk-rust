// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Includes details about the failed items.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FailedItemDetails {
    /// <p>The status code of a failed item.</p>
    #[doc(hidden)]
    pub failure_code: std::option::Option<crate::types::FailedItemErrorCode>,
    /// <p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>
    #[doc(hidden)]
    pub retryable: std::option::Option<bool>,
}
impl FailedItemDetails {
    /// <p>The status code of a failed item.</p>
    pub fn failure_code(&self) -> std::option::Option<&crate::types::FailedItemErrorCode> {
        self.failure_code.as_ref()
    }
    /// <p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>
    pub fn retryable(&self) -> std::option::Option<bool> {
        self.retryable
    }
}
impl FailedItemDetails {
    /// Creates a new builder-style object to manufacture [`FailedItemDetails`](crate::types::FailedItemDetails).
    pub fn builder() -> crate::types::builders::FailedItemDetailsBuilder {
        crate::types::builders::FailedItemDetailsBuilder::default()
    }
}

/// A builder for [`FailedItemDetails`](crate::types::FailedItemDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FailedItemDetailsBuilder {
    pub(crate) failure_code: std::option::Option<crate::types::FailedItemErrorCode>,
    pub(crate) retryable: std::option::Option<bool>,
}
impl FailedItemDetailsBuilder {
    /// <p>The status code of a failed item.</p>
    pub fn failure_code(mut self, input: crate::types::FailedItemErrorCode) -> Self {
        self.failure_code = Some(input);
        self
    }
    /// <p>The status code of a failed item.</p>
    pub fn set_failure_code(
        mut self,
        input: std::option::Option<crate::types::FailedItemErrorCode>,
    ) -> Self {
        self.failure_code = input;
        self
    }
    /// <p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>
    pub fn retryable(mut self, input: bool) -> Self {
        self.retryable = Some(input);
        self
    }
    /// <p>Indicates whether you can immediately retry a request for this item for a specified resource.</p>
    pub fn set_retryable(mut self, input: std::option::Option<bool>) -> Self {
        self.retryable = input;
        self
    }
    /// Consumes the builder and constructs a [`FailedItemDetails`](crate::types::FailedItemDetails).
    pub fn build(self) -> crate::types::FailedItemDetails {
        crate::types::FailedItemDetails {
            failure_code: self.failure_code,
            retryable: self.retryable,
        }
    }
}
