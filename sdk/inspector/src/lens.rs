// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_get_exclusions_preview_output_next_token(
    input: &crate::operation::get_exclusions_preview::GetExclusionsPreviewOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_assessment_run_agents_output_next_token(
    input: &crate::operation::list_assessment_run_agents::ListAssessmentRunAgentsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_assessment_runs_output_next_token(
    input: &crate::operation::list_assessment_runs::ListAssessmentRunsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_assessment_targets_output_next_token(
    input: &crate::operation::list_assessment_targets::ListAssessmentTargetsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_assessment_templates_output_next_token(
    input: &crate::operation::list_assessment_templates::ListAssessmentTemplatesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_event_subscriptions_output_next_token(
    input: &crate::operation::list_event_subscriptions::ListEventSubscriptionsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_exclusions_output_next_token(
    input: &crate::operation::list_exclusions::ListExclusionsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_findings_output_next_token(
    input: &crate::operation::list_findings::ListFindingsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_rules_packages_output_next_token(
    input: &crate::operation::list_rules_packages::ListRulesPackagesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_preview_agents_output_next_token(
    input: &crate::operation::preview_agents::PreviewAgentsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
