// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateUser`](crate::operation::create_user::builders::CreateUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identity_store_id(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::identity_store_id) / [`set_identity_store_id(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_identity_store_id): <p>The globally unique identifier for the identity store.</p>
    ///   - [`user_name(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::user_name) / [`set_user_name(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_user_name): <p>A unique string used to identify the user. The length limit is 128 characters. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store.</p>
    ///   - [`name(Name)`](crate::operation::create_user::builders::CreateUserFluentBuilder::name) / [`set_name(Option<Name>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_name): <p>An object containing the user's name.</p>
    ///   - [`display_name(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::display_name) / [`set_display_name(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_display_name): <p>A string containing the user's name. This value is typically formatted for display when the user is referenced. For example, "John Doe."</p>
    ///   - [`nick_name(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::nick_name) / [`set_nick_name(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_nick_name): <p>A string containing an alternate name for the user.</p>
    ///   - [`profile_url(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::profile_url) / [`set_profile_url(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_profile_url): <p>A string containing a URL that may be associated with the user.</p>
    ///   - [`emails(Vec<Email>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::emails) / [`set_emails(Option<Vec<Email>>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_emails): <p>A list of <code>Email</code> objects containing email addresses associated with the user.</p>
    ///   - [`addresses(Vec<Address>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::addresses) / [`set_addresses(Option<Vec<Address>>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_addresses): <p>A list of <code>Address</code> objects containing addresses associated with the user.</p>
    ///   - [`phone_numbers(Vec<PhoneNumber>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::phone_numbers) / [`set_phone_numbers(Option<Vec<PhoneNumber>>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_phone_numbers): <p>A list of <code>PhoneNumber</code> objects containing phone numbers associated with the user.</p>
    ///   - [`user_type(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::user_type) / [`set_user_type(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_user_type): <p>A string indicating the user's type. Possible values depend on each customer's specific needs, so they are left unspecified.</p>
    ///   - [`title(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::title) / [`set_title(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_title): <p>A string containing the user's title. Possible values are left unspecified given that they depend on each customer's specific needs.</p>
    ///   - [`preferred_language(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::preferred_language) / [`set_preferred_language(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_preferred_language): <p>A string containing the preferred language of the user. For example, "American English" or "en-us."</p>
    ///   - [`locale(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::locale) / [`set_locale(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_locale): <p>A string containing the user's geographical region or location.</p>
    ///   - [`timezone(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::timezone) / [`set_timezone(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_timezone): <p>A string containing the user's time zone.</p>
    /// - On success, responds with [`CreateUserOutput`](crate::operation::create_user::CreateUserOutput) with field(s):
    ///   - [`user_id(Option<String>)`](crate::operation::create_user::CreateUserOutput::user_id): <p>The identifier of the newly created user in the identity store.</p>
    ///   - [`identity_store_id(Option<String>)`](crate::operation::create_user::CreateUserOutput::identity_store_id): <p>The globally unique identifier for the identity store.</p>
    /// - On failure, responds with [`SdkError<CreateUserError>`](crate::operation::create_user::CreateUserError)
    pub fn create_user(&self) -> crate::operation::create_user::builders::CreateUserFluentBuilder {
        crate::operation::create_user::builders::CreateUserFluentBuilder::new(self.handle.clone())
    }
}
