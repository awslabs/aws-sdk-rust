// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateGroup`](crate::operation::create_group::builders::CreateGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identity_store_id(impl Into<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::identity_store_id) / [`set_identity_store_id(Option<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::set_identity_store_id):<br>required: **true**<br><p>The globally unique identifier for the identity store.</p><br>
    ///   - [`display_name(impl Into<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::display_name) / [`set_display_name(Option<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::set_display_name):<br>required: **false**<br><p>A string containing the name of the group. This value is commonly displayed when the group is referenced. <code>Administrator</code> and <code>AWSAdministrators</code> are reserved names and can't be used for users or groups.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::set_description):<br>required: **false**<br><p>A string containing the description of the group.</p><br>
    /// - On success, responds with [`CreateGroupOutput`](crate::operation::create_group::CreateGroupOutput) with field(s):
    ///   - [`group_id(String)`](crate::operation::create_group::CreateGroupOutput::group_id): <p>The identifier of the newly created group in the identity store.</p>
    ///   - [`identity_store_id(String)`](crate::operation::create_group::CreateGroupOutput::identity_store_id): <p>The globally unique identifier for the identity store.</p>
    /// - On failure, responds with [`SdkError<CreateGroupError>`](crate::operation::create_group::CreateGroupError)
    pub fn create_group(&self) -> crate::operation::create_group::builders::CreateGroupFluentBuilder {
        crate::operation::create_group::builders::CreateGroupFluentBuilder::new(self.handle.clone())
    }
}
