// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListGroupMembershipsOutput {
    /// <p>A list of <code>GroupMembership</code> objects in the group.</p>
    #[doc(hidden)]
    pub group_memberships: std::option::Option<std::vec::Vec<crate::types::GroupMembership>>,
    /// <p>The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>, and <code>ListGroupMemberships</code> API operations. This value is generated by the identity store service. It is returned in the API response if the total results are more than the size of one page. This token is also returned when it is used in the API request to search for the next page.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListGroupMembershipsOutput {
    /// <p>A list of <code>GroupMembership</code> objects in the group.</p>
    pub fn group_memberships(&self) -> std::option::Option<&[crate::types::GroupMembership]> {
        self.group_memberships.as_deref()
    }
    /// <p>The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>, and <code>ListGroupMemberships</code> API operations. This value is generated by the identity store service. It is returned in the API response if the total results are more than the size of one page. This token is also returned when it is used in the API request to search for the next page.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListGroupMembershipsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListGroupMembershipsOutput {
    /// Creates a new builder-style object to manufacture [`ListGroupMembershipsOutput`](crate::operation::list_group_memberships::ListGroupMembershipsOutput).
    pub fn builder(
    ) -> crate::operation::list_group_memberships::builders::ListGroupMembershipsOutputBuilder {
        crate::operation::list_group_memberships::builders::ListGroupMembershipsOutputBuilder::default()
    }
}

/// A builder for [`ListGroupMembershipsOutput`](crate::operation::list_group_memberships::ListGroupMembershipsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListGroupMembershipsOutputBuilder {
    pub(crate) group_memberships: std::option::Option<std::vec::Vec<crate::types::GroupMembership>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListGroupMembershipsOutputBuilder {
    /// Appends an item to `group_memberships`.
    ///
    /// To override the contents of this collection use [`set_group_memberships`](Self::set_group_memberships).
    ///
    /// <p>A list of <code>GroupMembership</code> objects in the group.</p>
    pub fn group_memberships(mut self, input: crate::types::GroupMembership) -> Self {
        let mut v = self.group_memberships.unwrap_or_default();
        v.push(input);
        self.group_memberships = Some(v);
        self
    }
    /// <p>A list of <code>GroupMembership</code> objects in the group.</p>
    pub fn set_group_memberships(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::GroupMembership>>,
    ) -> Self {
        self.group_memberships = input;
        self
    }
    /// <p>The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>, and <code>ListGroupMemberships</code> API operations. This value is generated by the identity store service. It is returned in the API response if the total results are more than the size of one page. This token is also returned when it is used in the API request to search for the next page.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>, and <code>ListGroupMemberships</code> API operations. This value is generated by the identity store service. It is returned in the API response if the total results are more than the size of one page. This token is also returned when it is used in the API request to search for the next page.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListGroupMembershipsOutput`](crate::operation::list_group_memberships::ListGroupMembershipsOutput).
    pub fn build(self) -> crate::operation::list_group_memberships::ListGroupMembershipsOutput {
        crate::operation::list_group_memberships::ListGroupMembershipsOutput {
            group_memberships: self.group_memberships,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
