// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn create_group_output_correct_errors(
    mut builder: crate::operation::create_group::builders::CreateGroupOutputBuilder,
) -> crate::operation::create_group::builders::CreateGroupOutputBuilder {
    if builder.group_id.is_none() {
        builder.group_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn create_group_membership_output_correct_errors(
    mut builder: crate::operation::create_group_membership::builders::CreateGroupMembershipOutputBuilder,
) -> crate::operation::create_group_membership::builders::CreateGroupMembershipOutputBuilder {
    if builder.membership_id.is_none() {
        builder.membership_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn create_user_output_correct_errors(
    mut builder: crate::operation::create_user::builders::CreateUserOutputBuilder,
) -> crate::operation::create_user::builders::CreateUserOutputBuilder {
    if builder.user_id.is_none() {
        builder.user_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn describe_group_output_correct_errors(
    mut builder: crate::operation::describe_group::builders::DescribeGroupOutputBuilder,
) -> crate::operation::describe_group::builders::DescribeGroupOutputBuilder {
    if builder.group_id.is_none() {
        builder.group_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn describe_group_membership_output_correct_errors(
    mut builder: crate::operation::describe_group_membership::builders::DescribeGroupMembershipOutputBuilder,
) -> crate::operation::describe_group_membership::builders::DescribeGroupMembershipOutputBuilder {
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    if builder.membership_id.is_none() {
        builder.membership_id = Some(Default::default())
    }
    if builder.group_id.is_none() {
        builder.group_id = Some(Default::default())
    }
    if builder.member_id.is_none() {
        builder.member_id = Some(crate::types::MemberId::Unknown)
    }
    builder
}

pub(crate) fn describe_user_output_correct_errors(
    mut builder: crate::operation::describe_user::builders::DescribeUserOutputBuilder,
) -> crate::operation::describe_user::builders::DescribeUserOutputBuilder {
    if builder.user_id.is_none() {
        builder.user_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn get_group_id_output_correct_errors(
    mut builder: crate::operation::get_group_id::builders::GetGroupIdOutputBuilder,
) -> crate::operation::get_group_id::builders::GetGroupIdOutputBuilder {
    if builder.group_id.is_none() {
        builder.group_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn get_group_membership_id_output_correct_errors(
    mut builder: crate::operation::get_group_membership_id::builders::GetGroupMembershipIdOutputBuilder,
) -> crate::operation::get_group_membership_id::builders::GetGroupMembershipIdOutputBuilder {
    if builder.membership_id.is_none() {
        builder.membership_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn get_user_id_output_correct_errors(
    mut builder: crate::operation::get_user_id::builders::GetUserIdOutputBuilder,
) -> crate::operation::get_user_id::builders::GetUserIdOutputBuilder {
    if builder.user_id.is_none() {
        builder.user_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn is_member_in_groups_output_correct_errors(
    mut builder: crate::operation::is_member_in_groups::builders::IsMemberInGroupsOutputBuilder,
) -> crate::operation::is_member_in_groups::builders::IsMemberInGroupsOutputBuilder {
    if builder.results.is_none() {
        builder.results = Some(Default::default())
    }
    builder
}

pub(crate) fn list_group_memberships_output_correct_errors(
    mut builder: crate::operation::list_group_memberships::builders::ListGroupMembershipsOutputBuilder,
) -> crate::operation::list_group_memberships::builders::ListGroupMembershipsOutputBuilder {
    if builder.group_memberships.is_none() {
        builder.group_memberships = Some(Default::default())
    }
    builder
}

pub(crate) fn list_group_memberships_for_member_output_correct_errors(
    mut builder: crate::operation::list_group_memberships_for_member::builders::ListGroupMembershipsForMemberOutputBuilder,
) -> crate::operation::list_group_memberships_for_member::builders::ListGroupMembershipsForMemberOutputBuilder {
    if builder.group_memberships.is_none() {
        builder.group_memberships = Some(Default::default())
    }
    builder
}

pub(crate) fn list_groups_output_correct_errors(
    mut builder: crate::operation::list_groups::builders::ListGroupsOutputBuilder,
) -> crate::operation::list_groups::builders::ListGroupsOutputBuilder {
    if builder.groups.is_none() {
        builder.groups = Some(Default::default())
    }
    builder
}

pub(crate) fn list_users_output_correct_errors(
    mut builder: crate::operation::list_users::builders::ListUsersOutputBuilder,
) -> crate::operation::list_users::builders::ListUsersOutputBuilder {
    if builder.users.is_none() {
        builder.users = Some(Default::default())
    }
    builder
}

pub(crate) fn external_id_correct_errors(mut builder: crate::types::builders::ExternalIdBuilder) -> crate::types::builders::ExternalIdBuilder {
    if builder.issuer.is_none() {
        builder.issuer = Some(Default::default())
    }
    if builder.id.is_none() {
        builder.id = Some(Default::default())
    }
    builder
}

pub(crate) fn group_correct_errors(mut builder: crate::types::builders::GroupBuilder) -> crate::types::builders::GroupBuilder {
    if builder.group_id.is_none() {
        builder.group_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn group_membership_correct_errors(
    mut builder: crate::types::builders::GroupMembershipBuilder,
) -> crate::types::builders::GroupMembershipBuilder {
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}

pub(crate) fn user_correct_errors(mut builder: crate::types::builders::UserBuilder) -> crate::types::builders::UserBuilder {
    if builder.user_id.is_none() {
        builder.user_id = Some(Default::default())
    }
    if builder.identity_store_id.is_none() {
        builder.identity_store_id = Some(Default::default())
    }
    builder
}
