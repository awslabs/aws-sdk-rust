// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_describe_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeGroupInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_1) = &input.identity_store_id {
        object.key("IdentityStoreId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.group_id {
        object.key("GroupId").string(var_2.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_describe_user_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeUserInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_3) = &input.identity_store_id {
        object.key("IdentityStoreId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.user_id {
        object.key("UserId").string(var_4.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_groups_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListGroupsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_5) = &input.identity_store_id {
        object.key("IdentityStoreId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    if let Some(var_7) = &input.next_token {
        object.key("NextToken").string(var_7.as_str());
    }
    if let Some(var_8) = &input.filters {
        let mut array_9 = object.key("Filters").start_array();
        for item_10 in var_8 {
            {
                let mut object_11 = array_9.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_11, item_10)?;
                object_11.finish();
            }
        }
        array_9.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_users_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListUsersInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_12) = &input.identity_store_id {
        object.key("IdentityStoreId").string(var_12.as_str());
    }
    if let Some(var_13) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_13).into()),
        );
    }
    if let Some(var_14) = &input.next_token {
        object.key("NextToken").string(var_14.as_str());
    }
    if let Some(var_15) = &input.filters {
        let mut array_16 = object.key("Filters").start_array();
        for item_17 in var_15 {
            {
                let mut object_18 = array_16.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_18, item_17)?;
                object_18.finish();
            }
        }
        array_16.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_filter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Filter,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_19) = &input.attribute_path {
        object.key("AttributePath").string(var_19.as_str());
    }
    if let Some(var_20) = &input.attribute_value {
        object.key("AttributeValue").string(var_20.as_str());
    }
    Ok(())
}
