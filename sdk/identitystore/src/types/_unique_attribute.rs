// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An entity attribute that's unique to a specific entity.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UniqueAttribute {
    /// <p>A string representation of the path to a given attribute or sub-attribute. Supports JMESPath.</p>
    pub attribute_path: ::std::string::String,
    /// <p>The value of the attribute. This is a <code>Document</code> type. This type is not supported by Java V1, Go V1, and older versions of the CLI.</p>
    pub attribute_value: ::aws_smithy_types::Document,
}
impl UniqueAttribute {
    /// <p>A string representation of the path to a given attribute or sub-attribute. Supports JMESPath.</p>
    pub fn attribute_path(&self) -> &str {
        use std::ops::Deref;
        self.attribute_path.deref()
    }
    /// <p>The value of the attribute. This is a <code>Document</code> type. This type is not supported by Java V1, Go V1, and older versions of the CLI.</p>
    pub fn attribute_value(&self) -> &::aws_smithy_types::Document {
        &self.attribute_value
    }
}
impl UniqueAttribute {
    /// Creates a new builder-style object to manufacture [`UniqueAttribute`](crate::types::UniqueAttribute).
    pub fn builder() -> crate::types::builders::UniqueAttributeBuilder {
        crate::types::builders::UniqueAttributeBuilder::default()
    }
}

/// A builder for [`UniqueAttribute`](crate::types::UniqueAttribute).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UniqueAttributeBuilder {
    pub(crate) attribute_path: ::std::option::Option<::std::string::String>,
    pub(crate) attribute_value: ::std::option::Option<::aws_smithy_types::Document>,
}
impl UniqueAttributeBuilder {
    /// <p>A string representation of the path to a given attribute or sub-attribute. Supports JMESPath.</p>
    /// This field is required.
    pub fn attribute_path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attribute_path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A string representation of the path to a given attribute or sub-attribute. Supports JMESPath.</p>
    pub fn set_attribute_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attribute_path = input;
        self
    }
    /// <p>A string representation of the path to a given attribute or sub-attribute. Supports JMESPath.</p>
    pub fn get_attribute_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.attribute_path
    }
    /// <p>The value of the attribute. This is a <code>Document</code> type. This type is not supported by Java V1, Go V1, and older versions of the CLI.</p>
    /// This field is required.
    pub fn attribute_value(mut self, input: ::aws_smithy_types::Document) -> Self {
        self.attribute_value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The value of the attribute. This is a <code>Document</code> type. This type is not supported by Java V1, Go V1, and older versions of the CLI.</p>
    pub fn set_attribute_value(mut self, input: ::std::option::Option<::aws_smithy_types::Document>) -> Self {
        self.attribute_value = input;
        self
    }
    /// <p>The value of the attribute. This is a <code>Document</code> type. This type is not supported by Java V1, Go V1, and older versions of the CLI.</p>
    pub fn get_attribute_value(&self) -> &::std::option::Option<::aws_smithy_types::Document> {
        &self.attribute_value
    }
    /// Consumes the builder and constructs a [`UniqueAttribute`](crate::types::UniqueAttribute).
    /// This method will fail if any of the following fields are not set:
    /// - [`attribute_path`](crate::types::builders::UniqueAttributeBuilder::attribute_path)
    /// - [`attribute_value`](crate::types::builders::UniqueAttributeBuilder::attribute_value)
    pub fn build(self) -> ::std::result::Result<crate::types::UniqueAttribute, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UniqueAttribute {
            attribute_path: self.attribute_path.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "attribute_path",
                    "attribute_path was not specified but it is required when building UniqueAttribute",
                )
            })?,
            attribute_value: self.attribute_value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "attribute_value",
                    "attribute_value was not specified but it is required when building UniqueAttribute",
                )
            })?,
        })
    }
}
