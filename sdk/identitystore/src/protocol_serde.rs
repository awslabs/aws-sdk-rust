// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_group;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_group_membership;

pub(crate) mod shape_create_user;

pub(crate) mod shape_delete_group;

pub(crate) mod shape_delete_group_membership;

pub(crate) mod shape_delete_user;

pub(crate) mod shape_describe_group;

pub(crate) mod shape_describe_group_membership;

pub(crate) mod shape_describe_user;

pub(crate) mod shape_get_group_id;

pub(crate) mod shape_get_group_membership_id;

pub(crate) mod shape_get_user_id;

pub(crate) mod shape_is_member_in_groups;

pub(crate) mod shape_list_group_memberships;

pub(crate) mod shape_list_group_memberships_for_member;

pub(crate) mod shape_list_groups;

pub(crate) mod shape_list_users;

pub(crate) mod shape_update_group;

pub(crate) mod shape_update_user;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_group_input;

pub(crate) mod shape_create_group_membership_input;

pub(crate) mod shape_create_user_input;

pub(crate) mod shape_delete_group_input;

pub(crate) mod shape_delete_group_membership_input;

pub(crate) mod shape_delete_user_input;

pub(crate) mod shape_describe_group_input;

pub(crate) mod shape_describe_group_membership_input;

pub(crate) mod shape_describe_user_input;

pub(crate) mod shape_get_group_id_input;

pub(crate) mod shape_get_group_membership_id_input;

pub(crate) mod shape_get_user_id_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_is_member_in_groups_input;

pub(crate) mod shape_list_group_memberships_for_member_input;

pub(crate) mod shape_list_group_memberships_input;

pub(crate) mod shape_list_groups_input;

pub(crate) mod shape_list_users_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_group_input;

pub(crate) mod shape_update_user_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_address;

pub(crate) mod shape_addresses;

pub(crate) mod shape_alternate_identifier;

pub(crate) mod shape_attribute_operation;

pub(crate) mod shape_email;

pub(crate) mod shape_emails;

pub(crate) mod shape_external_ids;

pub(crate) mod shape_filter;

pub(crate) mod shape_group_membership_existence_results;

pub(crate) mod shape_group_memberships;

pub(crate) mod shape_groups;

pub(crate) mod shape_member_id;

pub(crate) mod shape_name;

pub(crate) mod shape_phone_number;

pub(crate) mod shape_phone_numbers;

pub(crate) mod shape_users;

pub(crate) mod shape_external_id;

pub(crate) mod shape_group;

pub(crate) mod shape_group_membership;

pub(crate) mod shape_group_membership_existence_result;

pub(crate) mod shape_unique_attribute;

pub(crate) mod shape_user;
