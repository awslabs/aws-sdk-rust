// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListApplicationSnapshots`](crate::client::fluent_builders::ListApplicationSnapshots) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::client::fluent_builders::ListApplicationSnapshots::application_name) / [`set_application_name(Option<String>)`](crate::client::fluent_builders::ListApplicationSnapshots::set_application_name): <p>The name of an existing application.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::ListApplicationSnapshots::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::ListApplicationSnapshots::set_limit): <p>The maximum number of application snapshots to list.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListApplicationSnapshots::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListApplicationSnapshots::set_next_token): <p>Use this parameter if you receive a <code>NextToken</code> response in a previous request that indicates that there is more output available. Set it to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from. </p>
    /// - On success, responds with [`ListApplicationSnapshotsOutput`](crate::output::ListApplicationSnapshotsOutput) with field(s):
    ///   - [`snapshot_summaries(Option<Vec<SnapshotDetails>>)`](crate::output::ListApplicationSnapshotsOutput::snapshot_summaries): <p>A collection of objects containing information about the application snapshots.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListApplicationSnapshotsOutput::next_token): <p>The token for the next set of results, or <code>null</code> if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListApplicationSnapshotsError>`](crate::error::ListApplicationSnapshotsError)
    pub fn list_application_snapshots(
        &self,
    ) -> crate::client::fluent_builders::ListApplicationSnapshots {
        crate::client::fluent_builders::ListApplicationSnapshots::new(self.handle.clone())
    }
}
