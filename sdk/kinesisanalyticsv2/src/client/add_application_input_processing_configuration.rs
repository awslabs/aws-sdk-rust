// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AddApplicationInputProcessingConfiguration`](crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder::application_name) / [`set_application_name(Option<String>)`](crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder::set_application_name): <p>The name of the application to which you want to add the input processing configuration.</p>
    ///   - [`current_application_version_id(i64)`](crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder::current_application_version_id) / [`set_current_application_version_id(Option<i64>)`](crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder::set_current_application_version_id): <p>The version of the application to which you want to add the input processing configuration. You can use the <code>DescribeApplication</code> operation to get the current application version. If the version specified is not the current version, the <code>ConcurrentModificationException</code> is returned.</p>
    ///   - [`input_id(impl Into<String>)`](crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder::input_id) / [`set_input_id(Option<String>)`](crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder::set_input_id): <p>The ID of the input configuration to add the input processing configuration to. You can get a list of the input IDs for an application using the <code>DescribeApplication</code> operation.</p>
    ///   - [`input_processing_configuration(InputProcessingConfiguration)`](crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder::input_processing_configuration) / [`set_input_processing_configuration(Option<InputProcessingConfiguration>)`](crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder::set_input_processing_configuration): <p>The <code>InputProcessingConfiguration</code> to add to the application.</p>
    /// - On success, responds with [`AddApplicationInputProcessingConfigurationOutput`](crate::operation::add_application_input_processing_configuration::AddApplicationInputProcessingConfigurationOutput) with field(s):
    ///   - [`application_arn(Option<String>)`](crate::operation::add_application_input_processing_configuration::AddApplicationInputProcessingConfigurationOutput::application_arn): <p>The Amazon Resource Name (ARN) of the application.</p>
    ///   - [`application_version_id(Option<i64>)`](crate::operation::add_application_input_processing_configuration::AddApplicationInputProcessingConfigurationOutput::application_version_id): <p>Provides the current application version. </p>
    ///   - [`input_id(Option<String>)`](crate::operation::add_application_input_processing_configuration::AddApplicationInputProcessingConfigurationOutput::input_id): <p>The input ID that is associated with the application input. This is the ID that Kinesis Data Analytics assigns to each input configuration that you add to your application.</p>
    ///   - [`input_processing_configuration_description(Option<InputProcessingConfigurationDescription>)`](crate::operation::add_application_input_processing_configuration::AddApplicationInputProcessingConfigurationOutput::input_processing_configuration_description): <p>The description of the preprocessor that executes on records in this input before the application's code is run.</p>
    /// - On failure, responds with [`SdkError<AddApplicationInputProcessingConfigurationError>`](crate::operation::add_application_input_processing_configuration::AddApplicationInputProcessingConfigurationError)
    pub fn add_application_input_processing_configuration(&self) -> crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder{
        crate::operation::add_application_input_processing_configuration::builders::AddApplicationInputProcessingConfigurationFluentBuilder::new(self.handle.clone())
    }
}
