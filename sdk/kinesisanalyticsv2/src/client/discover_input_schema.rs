// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DiscoverInputSchema`](crate::client::fluent_builders::DiscoverInputSchema) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::DiscoverInputSchema::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::DiscoverInputSchema::set_resource_arn): <p>The Amazon Resource Name (ARN) of the streaming source.</p>
    ///   - [`service_execution_role(impl Into<String>)`](crate::client::fluent_builders::DiscoverInputSchema::service_execution_role) / [`set_service_execution_role(Option<String>)`](crate::client::fluent_builders::DiscoverInputSchema::set_service_execution_role): <p>The ARN of the role that is used to access the streaming source.</p>
    ///   - [`input_starting_position_configuration(InputStartingPositionConfiguration)`](crate::client::fluent_builders::DiscoverInputSchema::input_starting_position_configuration) / [`set_input_starting_position_configuration(Option<InputStartingPositionConfiguration>)`](crate::client::fluent_builders::DiscoverInputSchema::set_input_starting_position_configuration): <p>The point at which you want Kinesis Data Analytics to start reading records from the specified streaming source discovery purposes.</p>
    ///   - [`s3_configuration(S3Configuration)`](crate::client::fluent_builders::DiscoverInputSchema::s3_configuration) / [`set_s3_configuration(Option<S3Configuration>)`](crate::client::fluent_builders::DiscoverInputSchema::set_s3_configuration): <p>Specify this parameter to discover a schema from data in an Amazon S3 object.</p>
    ///   - [`input_processing_configuration(InputProcessingConfiguration)`](crate::client::fluent_builders::DiscoverInputSchema::input_processing_configuration) / [`set_input_processing_configuration(Option<InputProcessingConfiguration>)`](crate::client::fluent_builders::DiscoverInputSchema::set_input_processing_configuration): <p>The <code>InputProcessingConfiguration</code> to use to preprocess the records before discovering the schema of the records.</p>
    /// - On success, responds with [`DiscoverInputSchemaOutput`](crate::output::DiscoverInputSchemaOutput) with field(s):
    ///   - [`input_schema(Option<SourceSchema>)`](crate::output::DiscoverInputSchemaOutput::input_schema): <p>The schema inferred from the streaming source. It identifies the format of the data in the streaming source and how each data element maps to corresponding columns in the in-application stream that you can create.</p>
    ///   - [`parsed_input_records(Option<Vec<Vec<String>>>)`](crate::output::DiscoverInputSchemaOutput::parsed_input_records): <p>An array of elements, where each element corresponds to a row in a stream record (a stream record can have more than one row).</p>
    ///   - [`processed_input_records(Option<Vec<String>>)`](crate::output::DiscoverInputSchemaOutput::processed_input_records): <p>The stream data that was modified by the processor specified in the <code>InputProcessingConfiguration</code> parameter.</p>
    ///   - [`raw_input_records(Option<Vec<String>>)`](crate::output::DiscoverInputSchemaOutput::raw_input_records): <p>The raw stream data that was sampled to infer the schema.</p>
    /// - On failure, responds with [`SdkError<DiscoverInputSchemaError>`](crate::error::DiscoverInputSchemaError)
    pub fn discover_input_schema(&self) -> crate::client::fluent_builders::DiscoverInputSchema {
        crate::client::fluent_builders::DiscoverInputSchema::new(self.handle.clone())
    }
}
