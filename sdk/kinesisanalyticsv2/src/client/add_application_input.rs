// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AddApplicationInput`](crate::client::fluent_builders::AddApplicationInput) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::client::fluent_builders::AddApplicationInput::application_name) / [`set_application_name(Option<String>)`](crate::client::fluent_builders::AddApplicationInput::set_application_name): <p>The name of your existing application to which you want to add the streaming source.</p>
    ///   - [`current_application_version_id(i64)`](crate::client::fluent_builders::AddApplicationInput::current_application_version_id) / [`set_current_application_version_id(Option<i64>)`](crate::client::fluent_builders::AddApplicationInput::set_current_application_version_id): <p>The current version of your application. You must provide the <code>ApplicationVersionID</code> or the <code>ConditionalToken</code>.You can use the <code>DescribeApplication</code> operation to find the current application version.</p>
    ///   - [`input(Input)`](crate::client::fluent_builders::AddApplicationInput::input) / [`set_input(Option<Input>)`](crate::client::fluent_builders::AddApplicationInput::set_input): <p>The <code>Input</code> to add.</p>
    /// - On success, responds with [`AddApplicationInputOutput`](crate::output::AddApplicationInputOutput) with field(s):
    ///   - [`application_arn(Option<String>)`](crate::output::AddApplicationInputOutput::application_arn): <p>The Amazon Resource Name (ARN) of the application.</p>
    ///   - [`application_version_id(Option<i64>)`](crate::output::AddApplicationInputOutput::application_version_id): <p>Provides the current application version.</p>
    ///   - [`input_descriptions(Option<Vec<InputDescription>>)`](crate::output::AddApplicationInputOutput::input_descriptions): <p>Describes the application input configuration. </p>
    /// - On failure, responds with [`SdkError<AddApplicationInputError>`](crate::error::AddApplicationInputError)
    pub fn add_application_input(&self) -> crate::client::fluent_builders::AddApplicationInput {
        crate::client::fluent_builders::AddApplicationInput::new(self.handle.clone())
    }
}
