// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AddApplicationReferenceDataSource`](crate::operation::add_application_reference_data_source::builders::AddApplicationReferenceDataSourceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::operation::add_application_reference_data_source::builders::AddApplicationReferenceDataSourceFluentBuilder::application_name) / [`set_application_name(Option<String>)`](crate::operation::add_application_reference_data_source::builders::AddApplicationReferenceDataSourceFluentBuilder::set_application_name):<br>required: **true**<br><p>The name of an existing application.</p><br>
    ///   - [`current_application_version_id(i64)`](crate::operation::add_application_reference_data_source::builders::AddApplicationReferenceDataSourceFluentBuilder::current_application_version_id) / [`set_current_application_version_id(Option<i64>)`](crate::operation::add_application_reference_data_source::builders::AddApplicationReferenceDataSourceFluentBuilder::set_current_application_version_id):<br>required: **true**<br><p>The version of the application for which you are adding the reference data source. You can use the <code>DescribeApplication</code> operation to get the current application version. If the version specified is not the current version, the <code>ConcurrentModificationException</code> is returned.</p><br>
    ///   - [`reference_data_source(ReferenceDataSource)`](crate::operation::add_application_reference_data_source::builders::AddApplicationReferenceDataSourceFluentBuilder::reference_data_source) / [`set_reference_data_source(Option<ReferenceDataSource>)`](crate::operation::add_application_reference_data_source::builders::AddApplicationReferenceDataSourceFluentBuilder::set_reference_data_source):<br>required: **true**<br><p>The reference data source can be an object in your Amazon S3 bucket. Kinesis Data Analytics reads the object and copies the data into the in-application table that is created. You provide an S3 bucket, object key name, and the resulting in-application table that is created. </p><br>
    /// - On success, responds with [`AddApplicationReferenceDataSourceOutput`](crate::operation::add_application_reference_data_source::AddApplicationReferenceDataSourceOutput) with field(s):
    ///   - [`application_arn(Option<String>)`](crate::operation::add_application_reference_data_source::AddApplicationReferenceDataSourceOutput::application_arn): <p>The application Amazon Resource Name (ARN).</p>
    ///   - [`application_version_id(Option<i64>)`](crate::operation::add_application_reference_data_source::AddApplicationReferenceDataSourceOutput::application_version_id): <p>The updated application version ID. Kinesis Data Analytics increments this ID when the application is updated.</p>
    ///   - [`reference_data_source_descriptions(Option<Vec::<ReferenceDataSourceDescription>>)`](crate::operation::add_application_reference_data_source::AddApplicationReferenceDataSourceOutput::reference_data_source_descriptions): <p>Describes reference data sources configured for the application. </p>
    /// - On failure, responds with [`SdkError<AddApplicationReferenceDataSourceError>`](crate::operation::add_application_reference_data_source::AddApplicationReferenceDataSourceError)
    pub fn add_application_reference_data_source(
        &self,
    ) -> crate::operation::add_application_reference_data_source::builders::AddApplicationReferenceDataSourceFluentBuilder {
        crate::operation::add_application_reference_data_source::builders::AddApplicationReferenceDataSourceFluentBuilder::new(self.handle.clone())
    }
}
