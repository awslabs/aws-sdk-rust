// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AddApplicationVpcConfiguration`](crate::client::fluent_builders::AddApplicationVpcConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::client::fluent_builders::AddApplicationVpcConfiguration::application_name) / [`set_application_name(Option<String>)`](crate::client::fluent_builders::AddApplicationVpcConfiguration::set_application_name): <p>The name of an existing application.</p>
    ///   - [`current_application_version_id(i64)`](crate::client::fluent_builders::AddApplicationVpcConfiguration::current_application_version_id) / [`set_current_application_version_id(Option<i64>)`](crate::client::fluent_builders::AddApplicationVpcConfiguration::set_current_application_version_id): <p>The version of the application to which you want to add the VPC configuration. You must provide the <code>CurrentApplicationVersionId</code> or the <code>ConditionalToken</code>. You can use the <code>DescribeApplication</code> operation to get the current application version. If the version specified is not the current version, the <code>ConcurrentModificationException</code> is returned. For better concurrency support, use the <code>ConditionalToken</code> parameter instead of <code>CurrentApplicationVersionId</code>.</p>
    ///   - [`vpc_configuration(VpcConfiguration)`](crate::client::fluent_builders::AddApplicationVpcConfiguration::vpc_configuration) / [`set_vpc_configuration(Option<VpcConfiguration>)`](crate::client::fluent_builders::AddApplicationVpcConfiguration::set_vpc_configuration): <p>Description of the VPC to add to the application.</p>
    ///   - [`conditional_token(impl Into<String>)`](crate::client::fluent_builders::AddApplicationVpcConfiguration::conditional_token) / [`set_conditional_token(Option<String>)`](crate::client::fluent_builders::AddApplicationVpcConfiguration::set_conditional_token): <p>A value you use to implement strong concurrency for application updates. You must provide the <code>ApplicationVersionID</code> or the <code>ConditionalToken</code>. You get the application's current <code>ConditionalToken</code> using <code>DescribeApplication</code>. For better concurrency support, use the <code>ConditionalToken</code> parameter instead of <code>CurrentApplicationVersionId</code>.</p>
    /// - On success, responds with [`AddApplicationVpcConfigurationOutput`](crate::output::AddApplicationVpcConfigurationOutput) with field(s):
    ///   - [`application_arn(Option<String>)`](crate::output::AddApplicationVpcConfigurationOutput::application_arn): <p>The ARN of the application.</p>
    ///   - [`application_version_id(Option<i64>)`](crate::output::AddApplicationVpcConfigurationOutput::application_version_id): <p>Provides the current application version. Kinesis Data Analytics updates the ApplicationVersionId each time you update the application.</p>
    ///   - [`vpc_configuration_description(Option<VpcConfigurationDescription>)`](crate::output::AddApplicationVpcConfigurationOutput::vpc_configuration_description): <p>The parameters of the new VPC configuration.</p>
    /// - On failure, responds with [`SdkError<AddApplicationVpcConfigurationError>`](crate::error::AddApplicationVpcConfigurationError)
    pub fn add_application_vpc_configuration(
        &self,
    ) -> crate::client::fluent_builders::AddApplicationVpcConfiguration {
        crate::client::fluent_builders::AddApplicationVpcConfiguration::new(self.handle.clone())
    }
}
