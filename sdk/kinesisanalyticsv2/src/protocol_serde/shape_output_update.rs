// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_output_update(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::OutputUpdate,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.output_id {
        object.key("OutputId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.name_update {
        object.key("NameUpdate").string(var_2.as_str());
    }
    if let Some(var_3) = &input.kinesis_streams_output_update {
        #[allow(unused_mut)]
        let mut object_4 = object.key("KinesisStreamsOutputUpdate").start_object();
        crate::protocol_serde::shape_kinesis_streams_output_update::ser_kinesis_streams_output_update(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.kinesis_firehose_output_update {
        #[allow(unused_mut)]
        let mut object_6 = object.key("KinesisFirehoseOutputUpdate").start_object();
        crate::protocol_serde::shape_kinesis_firehose_output_update::ser_kinesis_firehose_output_update(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.lambda_output_update {
        #[allow(unused_mut)]
        let mut object_8 = object.key("LambdaOutputUpdate").start_object();
        crate::protocol_serde::shape_lambda_output_update::ser_lambda_output_update(
            &mut object_8,
            var_7,
        )?;
        object_8.finish();
    }
    if let Some(var_9) = &input.destination_schema_update {
        #[allow(unused_mut)]
        let mut object_10 = object.key("DestinationSchemaUpdate").start_object();
        crate::protocol_serde::shape_destination_schema::ser_destination_schema(
            &mut object_10,
            var_9,
        )?;
        object_10.finish();
    }
    Ok(())
}
