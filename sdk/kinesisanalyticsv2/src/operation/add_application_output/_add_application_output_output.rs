// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AddApplicationOutputOutput {
    /// <p>The application Amazon Resource Name (ARN).</p>
    pub application_arn: ::std::option::Option<::std::string::String>,
    /// <p>The updated application version ID. Kinesis Data Analytics increments this ID when the application is updated.</p>
    pub application_version_id: ::std::option::Option<i64>,
    /// <p>Describes the application output configuration. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>. </p>
    pub output_descriptions: ::std::option::Option<::std::vec::Vec<crate::types::OutputDescription>>,
    _request_id: Option<String>,
}
impl AddApplicationOutputOutput {
    /// <p>The application Amazon Resource Name (ARN).</p>
    pub fn application_arn(&self) -> ::std::option::Option<&str> {
        self.application_arn.as_deref()
    }
    /// <p>The updated application version ID. Kinesis Data Analytics increments this ID when the application is updated.</p>
    pub fn application_version_id(&self) -> ::std::option::Option<i64> {
        self.application_version_id
    }
    /// <p>Describes the application output configuration. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>. </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.output_descriptions.is_none()`.
    pub fn output_descriptions(&self) -> &[crate::types::OutputDescription] {
        self.output_descriptions.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for AddApplicationOutputOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AddApplicationOutputOutput {
    /// Creates a new builder-style object to manufacture [`AddApplicationOutputOutput`](crate::operation::add_application_output::AddApplicationOutputOutput).
    pub fn builder() -> crate::operation::add_application_output::builders::AddApplicationOutputOutputBuilder {
        crate::operation::add_application_output::builders::AddApplicationOutputOutputBuilder::default()
    }
}

/// A builder for [`AddApplicationOutputOutput`](crate::operation::add_application_output::AddApplicationOutputOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AddApplicationOutputOutputBuilder {
    pub(crate) application_arn: ::std::option::Option<::std::string::String>,
    pub(crate) application_version_id: ::std::option::Option<i64>,
    pub(crate) output_descriptions: ::std::option::Option<::std::vec::Vec<crate::types::OutputDescription>>,
    _request_id: Option<String>,
}
impl AddApplicationOutputOutputBuilder {
    /// <p>The application Amazon Resource Name (ARN).</p>
    pub fn application_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The application Amazon Resource Name (ARN).</p>
    pub fn set_application_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application_arn = input;
        self
    }
    /// <p>The application Amazon Resource Name (ARN).</p>
    pub fn get_application_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.application_arn
    }
    /// <p>The updated application version ID. Kinesis Data Analytics increments this ID when the application is updated.</p>
    pub fn application_version_id(mut self, input: i64) -> Self {
        self.application_version_id = ::std::option::Option::Some(input);
        self
    }
    /// <p>The updated application version ID. Kinesis Data Analytics increments this ID when the application is updated.</p>
    pub fn set_application_version_id(mut self, input: ::std::option::Option<i64>) -> Self {
        self.application_version_id = input;
        self
    }
    /// <p>The updated application version ID. Kinesis Data Analytics increments this ID when the application is updated.</p>
    pub fn get_application_version_id(&self) -> &::std::option::Option<i64> {
        &self.application_version_id
    }
    /// Appends an item to `output_descriptions`.
    ///
    /// To override the contents of this collection use [`set_output_descriptions`](Self::set_output_descriptions).
    ///
    /// <p>Describes the application output configuration. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>. </p>
    pub fn output_descriptions(mut self, input: crate::types::OutputDescription) -> Self {
        let mut v = self.output_descriptions.unwrap_or_default();
        v.push(input);
        self.output_descriptions = ::std::option::Option::Some(v);
        self
    }
    /// <p>Describes the application output configuration. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>. </p>
    pub fn set_output_descriptions(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::OutputDescription>>) -> Self {
        self.output_descriptions = input;
        self
    }
    /// <p>Describes the application output configuration. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>. </p>
    pub fn get_output_descriptions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::OutputDescription>> {
        &self.output_descriptions
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AddApplicationOutputOutput`](crate::operation::add_application_output::AddApplicationOutputOutput).
    pub fn build(self) -> crate::operation::add_application_output::AddApplicationOutputOutput {
        crate::operation::add_application_output::AddApplicationOutputOutput {
            application_arn: self.application_arn,
            application_version_id: self.application_version_id,
            output_descriptions: self.output_descriptions,
            _request_id: self._request_id,
        }
    }
}
