// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartApplicationInput {
    /// <p>The name of the application.</p>
    #[doc(hidden)]
    pub application_name: std::option::Option<std::string::String>,
    /// <p>Identifies the run configuration (start parameters) of a Kinesis Data Analytics application.</p>
    #[doc(hidden)]
    pub run_configuration: std::option::Option<crate::types::RunConfiguration>,
}
impl StartApplicationInput {
    /// <p>The name of the application.</p>
    pub fn application_name(&self) -> std::option::Option<&str> {
        self.application_name.as_deref()
    }
    /// <p>Identifies the run configuration (start parameters) of a Kinesis Data Analytics application.</p>
    pub fn run_configuration(&self) -> std::option::Option<&crate::types::RunConfiguration> {
        self.run_configuration.as_ref()
    }
}
impl StartApplicationInput {
    /// Creates a new builder-style object to manufacture [`StartApplicationInput`](crate::operation::start_application::StartApplicationInput).
    pub fn builder() -> crate::operation::start_application::builders::StartApplicationInputBuilder
    {
        crate::operation::start_application::builders::StartApplicationInputBuilder::default()
    }
}

/// A builder for [`StartApplicationInput`](crate::operation::start_application::StartApplicationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartApplicationInputBuilder {
    pub(crate) application_name: std::option::Option<std::string::String>,
    pub(crate) run_configuration: std::option::Option<crate::types::RunConfiguration>,
}
impl StartApplicationInputBuilder {
    /// <p>The name of the application.</p>
    pub fn application_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_name = Some(input.into());
        self
    }
    /// <p>The name of the application.</p>
    pub fn set_application_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_name = input;
        self
    }
    /// <p>Identifies the run configuration (start parameters) of a Kinesis Data Analytics application.</p>
    pub fn run_configuration(mut self, input: crate::types::RunConfiguration) -> Self {
        self.run_configuration = Some(input);
        self
    }
    /// <p>Identifies the run configuration (start parameters) of a Kinesis Data Analytics application.</p>
    pub fn set_run_configuration(
        mut self,
        input: std::option::Option<crate::types::RunConfiguration>,
    ) -> Self {
        self.run_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`StartApplicationInput`](crate::operation::start_application::StartApplicationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::start_application::StartApplicationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::start_application::StartApplicationInput {
            application_name: self.application_name,
            run_configuration: self.run_configuration,
        })
    }
}
