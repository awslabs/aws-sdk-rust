// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of the application version.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ApplicationVersionSummary {
    /// <p>The ID of the application version. Kinesis Data Analytics updates the <code>ApplicationVersionId</code> each time you update the application.</p>
    pub application_version_id: i64,
    /// <p>The status of the application.</p>
    pub application_status: crate::types::ApplicationStatus,
}
impl ApplicationVersionSummary {
    /// <p>The ID of the application version. Kinesis Data Analytics updates the <code>ApplicationVersionId</code> each time you update the application.</p>
    pub fn application_version_id(&self) -> i64 {
        self.application_version_id
    }
    /// <p>The status of the application.</p>
    pub fn application_status(&self) -> &crate::types::ApplicationStatus {
        &self.application_status
    }
}
impl ApplicationVersionSummary {
    /// Creates a new builder-style object to manufacture [`ApplicationVersionSummary`](crate::types::ApplicationVersionSummary).
    pub fn builder() -> crate::types::builders::ApplicationVersionSummaryBuilder {
        crate::types::builders::ApplicationVersionSummaryBuilder::default()
    }
}

/// A builder for [`ApplicationVersionSummary`](crate::types::ApplicationVersionSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ApplicationVersionSummaryBuilder {
    pub(crate) application_version_id: ::std::option::Option<i64>,
    pub(crate) application_status: ::std::option::Option<crate::types::ApplicationStatus>,
}
impl ApplicationVersionSummaryBuilder {
    /// <p>The ID of the application version. Kinesis Data Analytics updates the <code>ApplicationVersionId</code> each time you update the application.</p>
    /// This field is required.
    pub fn application_version_id(mut self, input: i64) -> Self {
        self.application_version_id = ::std::option::Option::Some(input);
        self
    }
    /// <p>The ID of the application version. Kinesis Data Analytics updates the <code>ApplicationVersionId</code> each time you update the application.</p>
    pub fn set_application_version_id(mut self, input: ::std::option::Option<i64>) -> Self {
        self.application_version_id = input;
        self
    }
    /// <p>The ID of the application version. Kinesis Data Analytics updates the <code>ApplicationVersionId</code> each time you update the application.</p>
    pub fn get_application_version_id(&self) -> &::std::option::Option<i64> {
        &self.application_version_id
    }
    /// <p>The status of the application.</p>
    /// This field is required.
    pub fn application_status(mut self, input: crate::types::ApplicationStatus) -> Self {
        self.application_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the application.</p>
    pub fn set_application_status(mut self, input: ::std::option::Option<crate::types::ApplicationStatus>) -> Self {
        self.application_status = input;
        self
    }
    /// <p>The status of the application.</p>
    pub fn get_application_status(&self) -> &::std::option::Option<crate::types::ApplicationStatus> {
        &self.application_status
    }
    /// Consumes the builder and constructs a [`ApplicationVersionSummary`](crate::types::ApplicationVersionSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`application_version_id`](crate::types::builders::ApplicationVersionSummaryBuilder::application_version_id)
    /// - [`application_status`](crate::types::builders::ApplicationVersionSummaryBuilder::application_status)
    pub fn build(self) -> ::std::result::Result<crate::types::ApplicationVersionSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ApplicationVersionSummary {
            application_version_id: self.application_version_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "application_version_id",
                    "application_version_id was not specified but it is required when building ApplicationVersionSummary",
                )
            })?,
            application_status: self.application_status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "application_status",
                    "application_status was not specified but it is required when building ApplicationVersionSummary",
                )
            })?,
        })
    }
}
