// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>For a SQL-based Kinesis Data Analytics application, describes updates to an <code>InputProcessingConfiguration</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InputProcessingConfigurationUpdate {
    /// <p>Provides update information for an <code>InputLambdaProcessor</code>.</p>
    pub input_lambda_processor_update: ::std::option::Option<crate::types::InputLambdaProcessorUpdate>,
}
impl InputProcessingConfigurationUpdate {
    /// <p>Provides update information for an <code>InputLambdaProcessor</code>.</p>
    pub fn input_lambda_processor_update(&self) -> ::std::option::Option<&crate::types::InputLambdaProcessorUpdate> {
        self.input_lambda_processor_update.as_ref()
    }
}
impl InputProcessingConfigurationUpdate {
    /// Creates a new builder-style object to manufacture [`InputProcessingConfigurationUpdate`](crate::types::InputProcessingConfigurationUpdate).
    pub fn builder() -> crate::types::builders::InputProcessingConfigurationUpdateBuilder {
        crate::types::builders::InputProcessingConfigurationUpdateBuilder::default()
    }
}

/// A builder for [`InputProcessingConfigurationUpdate`](crate::types::InputProcessingConfigurationUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InputProcessingConfigurationUpdateBuilder {
    pub(crate) input_lambda_processor_update: ::std::option::Option<crate::types::InputLambdaProcessorUpdate>,
}
impl InputProcessingConfigurationUpdateBuilder {
    /// <p>Provides update information for an <code>InputLambdaProcessor</code>.</p>
    /// This field is required.
    pub fn input_lambda_processor_update(mut self, input: crate::types::InputLambdaProcessorUpdate) -> Self {
        self.input_lambda_processor_update = ::std::option::Option::Some(input);
        self
    }
    /// <p>Provides update information for an <code>InputLambdaProcessor</code>.</p>
    pub fn set_input_lambda_processor_update(mut self, input: ::std::option::Option<crate::types::InputLambdaProcessorUpdate>) -> Self {
        self.input_lambda_processor_update = input;
        self
    }
    /// <p>Provides update information for an <code>InputLambdaProcessor</code>.</p>
    pub fn get_input_lambda_processor_update(&self) -> &::std::option::Option<crate::types::InputLambdaProcessorUpdate> {
        &self.input_lambda_processor_update
    }
    /// Consumes the builder and constructs a [`InputProcessingConfigurationUpdate`](crate::types::InputProcessingConfigurationUpdate).
    pub fn build(self) -> crate::types::InputProcessingConfigurationUpdate {
        crate::types::InputProcessingConfigurationUpdate {
            input_lambda_processor_update: self.input_lambda_processor_update,
        }
    }
}
