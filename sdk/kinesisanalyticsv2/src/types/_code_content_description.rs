// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes details about the code of a Kinesis Data Analytics application.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CodeContentDescription {
    /// <p>The text-format code</p>
    #[doc(hidden)]
    pub text_content: std::option::Option<std::string::String>,
    /// <p>The checksum that can be used to validate zip-format code.</p>
    #[doc(hidden)]
    pub code_md5: std::option::Option<std::string::String>,
    /// <p>The size in bytes of the application code. Can be used to validate zip-format code.</p>
    #[doc(hidden)]
    pub code_size: std::option::Option<i64>,
    /// <p>The S3 bucket Amazon Resource Name (ARN), file key, and object version of the application code stored in Amazon S3.</p>
    #[doc(hidden)]
    pub s3_application_code_location_description:
        std::option::Option<crate::types::S3ApplicationCodeLocationDescription>,
}
impl CodeContentDescription {
    /// <p>The text-format code</p>
    pub fn text_content(&self) -> std::option::Option<&str> {
        self.text_content.as_deref()
    }
    /// <p>The checksum that can be used to validate zip-format code.</p>
    pub fn code_md5(&self) -> std::option::Option<&str> {
        self.code_md5.as_deref()
    }
    /// <p>The size in bytes of the application code. Can be used to validate zip-format code.</p>
    pub fn code_size(&self) -> std::option::Option<i64> {
        self.code_size
    }
    /// <p>The S3 bucket Amazon Resource Name (ARN), file key, and object version of the application code stored in Amazon S3.</p>
    pub fn s3_application_code_location_description(
        &self,
    ) -> std::option::Option<&crate::types::S3ApplicationCodeLocationDescription> {
        self.s3_application_code_location_description.as_ref()
    }
}
impl CodeContentDescription {
    /// Creates a new builder-style object to manufacture [`CodeContentDescription`](crate::types::CodeContentDescription).
    pub fn builder() -> crate::types::builders::CodeContentDescriptionBuilder {
        crate::types::builders::CodeContentDescriptionBuilder::default()
    }
}

/// A builder for [`CodeContentDescription`](crate::types::CodeContentDescription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CodeContentDescriptionBuilder {
    pub(crate) text_content: std::option::Option<std::string::String>,
    pub(crate) code_md5: std::option::Option<std::string::String>,
    pub(crate) code_size: std::option::Option<i64>,
    pub(crate) s3_application_code_location_description:
        std::option::Option<crate::types::S3ApplicationCodeLocationDescription>,
}
impl CodeContentDescriptionBuilder {
    /// <p>The text-format code</p>
    pub fn text_content(mut self, input: impl Into<std::string::String>) -> Self {
        self.text_content = Some(input.into());
        self
    }
    /// <p>The text-format code</p>
    pub fn set_text_content(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.text_content = input;
        self
    }
    /// <p>The checksum that can be used to validate zip-format code.</p>
    pub fn code_md5(mut self, input: impl Into<std::string::String>) -> Self {
        self.code_md5 = Some(input.into());
        self
    }
    /// <p>The checksum that can be used to validate zip-format code.</p>
    pub fn set_code_md5(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.code_md5 = input;
        self
    }
    /// <p>The size in bytes of the application code. Can be used to validate zip-format code.</p>
    pub fn code_size(mut self, input: i64) -> Self {
        self.code_size = Some(input);
        self
    }
    /// <p>The size in bytes of the application code. Can be used to validate zip-format code.</p>
    pub fn set_code_size(mut self, input: std::option::Option<i64>) -> Self {
        self.code_size = input;
        self
    }
    /// <p>The S3 bucket Amazon Resource Name (ARN), file key, and object version of the application code stored in Amazon S3.</p>
    pub fn s3_application_code_location_description(
        mut self,
        input: crate::types::S3ApplicationCodeLocationDescription,
    ) -> Self {
        self.s3_application_code_location_description = Some(input);
        self
    }
    /// <p>The S3 bucket Amazon Resource Name (ARN), file key, and object version of the application code stored in Amazon S3.</p>
    pub fn set_s3_application_code_location_description(
        mut self,
        input: std::option::Option<crate::types::S3ApplicationCodeLocationDescription>,
    ) -> Self {
        self.s3_application_code_location_description = input;
        self
    }
    /// Consumes the builder and constructs a [`CodeContentDescription`](crate::types::CodeContentDescription).
    pub fn build(self) -> crate::types::CodeContentDescription {
        crate::types::CodeContentDescription {
            text_content: self.text_content,
            code_md5: self.code_md5,
            code_size: self.code_size,
            s3_application_code_location_description: self.s3_application_code_location_description,
        }
    }
}
