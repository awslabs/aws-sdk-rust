// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an update for the Amazon S3 code content location for an application.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3ContentLocationUpdate {
    /// <p>The new Amazon Resource Name (ARN) for the S3 bucket containing the application code.</p>
    #[doc(hidden)]
    pub bucket_arn_update: std::option::Option<std::string::String>,
    /// <p>The new file key for the object containing the application code.</p>
    #[doc(hidden)]
    pub file_key_update: std::option::Option<std::string::String>,
    /// <p>The new version of the object containing the application code.</p>
    #[doc(hidden)]
    pub object_version_update: std::option::Option<std::string::String>,
}
impl S3ContentLocationUpdate {
    /// <p>The new Amazon Resource Name (ARN) for the S3 bucket containing the application code.</p>
    pub fn bucket_arn_update(&self) -> std::option::Option<&str> {
        self.bucket_arn_update.as_deref()
    }
    /// <p>The new file key for the object containing the application code.</p>
    pub fn file_key_update(&self) -> std::option::Option<&str> {
        self.file_key_update.as_deref()
    }
    /// <p>The new version of the object containing the application code.</p>
    pub fn object_version_update(&self) -> std::option::Option<&str> {
        self.object_version_update.as_deref()
    }
}
impl S3ContentLocationUpdate {
    /// Creates a new builder-style object to manufacture [`S3ContentLocationUpdate`](crate::types::S3ContentLocationUpdate).
    pub fn builder() -> crate::types::builders::S3ContentLocationUpdateBuilder {
        crate::types::builders::S3ContentLocationUpdateBuilder::default()
    }
}

/// A builder for [`S3ContentLocationUpdate`](crate::types::S3ContentLocationUpdate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3ContentLocationUpdateBuilder {
    pub(crate) bucket_arn_update: std::option::Option<std::string::String>,
    pub(crate) file_key_update: std::option::Option<std::string::String>,
    pub(crate) object_version_update: std::option::Option<std::string::String>,
}
impl S3ContentLocationUpdateBuilder {
    /// <p>The new Amazon Resource Name (ARN) for the S3 bucket containing the application code.</p>
    pub fn bucket_arn_update(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_arn_update = Some(input.into());
        self
    }
    /// <p>The new Amazon Resource Name (ARN) for the S3 bucket containing the application code.</p>
    pub fn set_bucket_arn_update(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.bucket_arn_update = input;
        self
    }
    /// <p>The new file key for the object containing the application code.</p>
    pub fn file_key_update(mut self, input: impl Into<std::string::String>) -> Self {
        self.file_key_update = Some(input.into());
        self
    }
    /// <p>The new file key for the object containing the application code.</p>
    pub fn set_file_key_update(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.file_key_update = input;
        self
    }
    /// <p>The new version of the object containing the application code.</p>
    pub fn object_version_update(mut self, input: impl Into<std::string::String>) -> Self {
        self.object_version_update = Some(input.into());
        self
    }
    /// <p>The new version of the object containing the application code.</p>
    pub fn set_object_version_update(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.object_version_update = input;
        self
    }
    /// Consumes the builder and constructs a [`S3ContentLocationUpdate`](crate::types::S3ContentLocationUpdate).
    pub fn build(self) -> crate::types::S3ContentLocationUpdate {
        crate::types::S3ContentLocationUpdate {
            bucket_arn_update: self.bucket_arn_update,
            file_key_update: self.file_key_update,
            object_version_update: self.object_version_update,
        }
    }
}
