// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>For a SQL-based Kinesis Data Analytics application, when configuring application output, identifies a Kinesis Data Firehose delivery stream as the destination. You provide the stream Amazon Resource Name (ARN) of the delivery stream. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct KinesisFirehoseOutput {
    /// <p>The ARN of the destination delivery stream to write to.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
}
impl KinesisFirehoseOutput {
    /// <p>The ARN of the destination delivery stream to write to.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
}
impl KinesisFirehoseOutput {
    /// Creates a new builder-style object to manufacture [`KinesisFirehoseOutput`](crate::types::KinesisFirehoseOutput).
    pub fn builder() -> crate::types::builders::KinesisFirehoseOutputBuilder {
        crate::types::builders::KinesisFirehoseOutputBuilder::default()
    }
}

/// A builder for [`KinesisFirehoseOutput`](crate::types::KinesisFirehoseOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct KinesisFirehoseOutputBuilder {
    pub(crate) resource_arn: std::option::Option<std::string::String>,
}
impl KinesisFirehoseOutputBuilder {
    /// <p>The ARN of the destination delivery stream to write to.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the destination delivery stream to write to.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`KinesisFirehoseOutput`](crate::types::KinesisFirehoseOutput).
    pub fn build(self) -> crate::types::KinesisFirehoseOutput {
        crate::types::KinesisFirehoseOutput {
            resource_arn: self.resource_arn,
        }
    }
}
