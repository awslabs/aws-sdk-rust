// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>When you configure a SQL-based Kinesis Data Analytics application's output, identifies an Amazon Lambda function as the destination. You provide the function Amazon Resource Name (ARN) of the Lambda function. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LambdaOutput {
    /// <p>The Amazon Resource Name (ARN) of the destination Lambda function to write to.</p> <note>
    /// <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda">Example ARNs: Amazon Lambda</a> </p>
    /// </note>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
}
impl LambdaOutput {
    /// <p>The Amazon Resource Name (ARN) of the destination Lambda function to write to.</p> <note>
    /// <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda">Example ARNs: Amazon Lambda</a> </p>
    /// </note>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
}
impl LambdaOutput {
    /// Creates a new builder-style object to manufacture [`LambdaOutput`](crate::types::LambdaOutput).
    pub fn builder() -> crate::types::builders::LambdaOutputBuilder {
        crate::types::builders::LambdaOutputBuilder::default()
    }
}

/// A builder for [`LambdaOutput`](crate::types::LambdaOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LambdaOutputBuilder {
    pub(crate) resource_arn: std::option::Option<std::string::String>,
}
impl LambdaOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the destination Lambda function to write to.</p> <note>
    /// <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda">Example ARNs: Amazon Lambda</a> </p>
    /// </note>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the destination Lambda function to write to.</p> <note>
    /// <p>To specify an earlier version of the Lambda function than the latest, include the Lambda function version in the Lambda function ARN. For more information about Lambda ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-lambda">Example ARNs: Amazon Lambda</a> </p>
    /// </note>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`LambdaOutput`](crate::types::LambdaOutput).
    pub fn build(self) -> crate::types::LambdaOutput {
        crate::types::LambdaOutput {
            resource_arn: self.resource_arn,
        }
    }
}
