// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CatalogConfiguration {
    /// <p>The configuration parameters for the default Amazon Glue database. You use this database for Apache Flink SQL queries and table API transforms that you write in a Kinesis Data Analytics Studio notebook.</p>
    #[doc(hidden)]
    pub glue_data_catalog_configuration:
        std::option::Option<crate::types::GlueDataCatalogConfiguration>,
}
impl CatalogConfiguration {
    /// <p>The configuration parameters for the default Amazon Glue database. You use this database for Apache Flink SQL queries and table API transforms that you write in a Kinesis Data Analytics Studio notebook.</p>
    pub fn glue_data_catalog_configuration(
        &self,
    ) -> std::option::Option<&crate::types::GlueDataCatalogConfiguration> {
        self.glue_data_catalog_configuration.as_ref()
    }
}
impl CatalogConfiguration {
    /// Creates a new builder-style object to manufacture [`CatalogConfiguration`](crate::types::CatalogConfiguration).
    pub fn builder() -> crate::types::builders::CatalogConfigurationBuilder {
        crate::types::builders::CatalogConfigurationBuilder::default()
    }
}

/// A builder for [`CatalogConfiguration`](crate::types::CatalogConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CatalogConfigurationBuilder {
    pub(crate) glue_data_catalog_configuration:
        std::option::Option<crate::types::GlueDataCatalogConfiguration>,
}
impl CatalogConfigurationBuilder {
    /// <p>The configuration parameters for the default Amazon Glue database. You use this database for Apache Flink SQL queries and table API transforms that you write in a Kinesis Data Analytics Studio notebook.</p>
    pub fn glue_data_catalog_configuration(
        mut self,
        input: crate::types::GlueDataCatalogConfiguration,
    ) -> Self {
        self.glue_data_catalog_configuration = Some(input);
        self
    }
    /// <p>The configuration parameters for the default Amazon Glue database. You use this database for Apache Flink SQL queries and table API transforms that you write in a Kinesis Data Analytics Studio notebook.</p>
    pub fn set_glue_data_catalog_configuration(
        mut self,
        input: std::option::Option<crate::types::GlueDataCatalogConfiguration>,
    ) -> Self {
        self.glue_data_catalog_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`CatalogConfiguration`](crate::types::CatalogConfiguration).
    pub fn build(self) -> crate::types::CatalogConfiguration {
        crate::types::CatalogConfiguration {
            glue_data_catalog_configuration: self.glue_data_catalog_configuration,
        }
    }
}
