// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The information required to update the S3 base location that holds the application.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3ContentBaseLocationUpdate {
    /// <p>The updated Amazon Resource Name (ARN) of the S3 bucket.</p>
    #[doc(hidden)]
    pub bucket_arn_update: std::option::Option<std::string::String>,
    /// <p>The updated S3 bucket path.</p>
    #[doc(hidden)]
    pub base_path_update: std::option::Option<std::string::String>,
}
impl S3ContentBaseLocationUpdate {
    /// <p>The updated Amazon Resource Name (ARN) of the S3 bucket.</p>
    pub fn bucket_arn_update(&self) -> std::option::Option<&str> {
        self.bucket_arn_update.as_deref()
    }
    /// <p>The updated S3 bucket path.</p>
    pub fn base_path_update(&self) -> std::option::Option<&str> {
        self.base_path_update.as_deref()
    }
}
impl S3ContentBaseLocationUpdate {
    /// Creates a new builder-style object to manufacture [`S3ContentBaseLocationUpdate`](crate::types::S3ContentBaseLocationUpdate).
    pub fn builder() -> crate::types::builders::S3ContentBaseLocationUpdateBuilder {
        crate::types::builders::S3ContentBaseLocationUpdateBuilder::default()
    }
}

/// A builder for [`S3ContentBaseLocationUpdate`](crate::types::S3ContentBaseLocationUpdate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3ContentBaseLocationUpdateBuilder {
    pub(crate) bucket_arn_update: std::option::Option<std::string::String>,
    pub(crate) base_path_update: std::option::Option<std::string::String>,
}
impl S3ContentBaseLocationUpdateBuilder {
    /// <p>The updated Amazon Resource Name (ARN) of the S3 bucket.</p>
    pub fn bucket_arn_update(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_arn_update = Some(input.into());
        self
    }
    /// <p>The updated Amazon Resource Name (ARN) of the S3 bucket.</p>
    pub fn set_bucket_arn_update(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.bucket_arn_update = input;
        self
    }
    /// <p>The updated S3 bucket path.</p>
    pub fn base_path_update(mut self, input: impl Into<std::string::String>) -> Self {
        self.base_path_update = Some(input.into());
        self
    }
    /// <p>The updated S3 bucket path.</p>
    pub fn set_base_path_update(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.base_path_update = input;
        self
    }
    /// Consumes the builder and constructs a [`S3ContentBaseLocationUpdate`](crate::types::S3ContentBaseLocationUpdate).
    pub fn build(self) -> crate::types::S3ContentBaseLocationUpdate {
        crate::types::S3ContentBaseLocationUpdate {
            bucket_arn_update: self.bucket_arn_update,
            base_path_update: self.base_path_update,
        }
    }
}
