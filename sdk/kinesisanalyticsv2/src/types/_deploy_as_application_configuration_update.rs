// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Updates to the configuration information required to deploy an Amazon Data Analytics Studio notebook as an application with durable state.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeployAsApplicationConfigurationUpdate {
    /// <p>Updates to the location that holds the data required to specify an Amazon Data Analytics application.</p>
    #[doc(hidden)]
    pub s3_content_location_update: std::option::Option<crate::types::S3ContentBaseLocationUpdate>,
}
impl DeployAsApplicationConfigurationUpdate {
    /// <p>Updates to the location that holds the data required to specify an Amazon Data Analytics application.</p>
    pub fn s3_content_location_update(
        &self,
    ) -> std::option::Option<&crate::types::S3ContentBaseLocationUpdate> {
        self.s3_content_location_update.as_ref()
    }
}
impl DeployAsApplicationConfigurationUpdate {
    /// Creates a new builder-style object to manufacture [`DeployAsApplicationConfigurationUpdate`](crate::types::DeployAsApplicationConfigurationUpdate).
    pub fn builder() -> crate::types::builders::DeployAsApplicationConfigurationUpdateBuilder {
        crate::types::builders::DeployAsApplicationConfigurationUpdateBuilder::default()
    }
}

/// A builder for [`DeployAsApplicationConfigurationUpdate`](crate::types::DeployAsApplicationConfigurationUpdate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeployAsApplicationConfigurationUpdateBuilder {
    pub(crate) s3_content_location_update:
        std::option::Option<crate::types::S3ContentBaseLocationUpdate>,
}
impl DeployAsApplicationConfigurationUpdateBuilder {
    /// <p>Updates to the location that holds the data required to specify an Amazon Data Analytics application.</p>
    pub fn s3_content_location_update(
        mut self,
        input: crate::types::S3ContentBaseLocationUpdate,
    ) -> Self {
        self.s3_content_location_update = Some(input);
        self
    }
    /// <p>Updates to the location that holds the data required to specify an Amazon Data Analytics application.</p>
    pub fn set_s3_content_location_update(
        mut self,
        input: std::option::Option<crate::types::S3ContentBaseLocationUpdate>,
    ) -> Self {
        self.s3_content_location_update = input;
        self
    }
    /// Consumes the builder and constructs a [`DeployAsApplicationConfigurationUpdate`](crate::types::DeployAsApplicationConfigurationUpdate).
    pub fn build(self) -> crate::types::DeployAsApplicationConfigurationUpdate {
        crate::types::DeployAsApplicationConfigurationUpdate {
            s3_content_location_update: self.s3_content_location_update,
        }
    }
}
