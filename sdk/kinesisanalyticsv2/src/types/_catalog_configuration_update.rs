// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Updates to the configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CatalogConfigurationUpdate {
    /// <p>Updates to the configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.</p>
    pub glue_data_catalog_configuration_update: ::std::option::Option<crate::types::GlueDataCatalogConfigurationUpdate>,
}
impl CatalogConfigurationUpdate {
    /// <p>Updates to the configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.</p>
    pub fn glue_data_catalog_configuration_update(&self) -> ::std::option::Option<&crate::types::GlueDataCatalogConfigurationUpdate> {
        self.glue_data_catalog_configuration_update.as_ref()
    }
}
impl CatalogConfigurationUpdate {
    /// Creates a new builder-style object to manufacture [`CatalogConfigurationUpdate`](crate::types::CatalogConfigurationUpdate).
    pub fn builder() -> crate::types::builders::CatalogConfigurationUpdateBuilder {
        crate::types::builders::CatalogConfigurationUpdateBuilder::default()
    }
}

/// A builder for [`CatalogConfigurationUpdate`](crate::types::CatalogConfigurationUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CatalogConfigurationUpdateBuilder {
    pub(crate) glue_data_catalog_configuration_update: ::std::option::Option<crate::types::GlueDataCatalogConfigurationUpdate>,
}
impl CatalogConfigurationUpdateBuilder {
    /// <p>Updates to the configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.</p>
    /// This field is required.
    pub fn glue_data_catalog_configuration_update(mut self, input: crate::types::GlueDataCatalogConfigurationUpdate) -> Self {
        self.glue_data_catalog_configuration_update = ::std::option::Option::Some(input);
        self
    }
    /// <p>Updates to the configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.</p>
    pub fn set_glue_data_catalog_configuration_update(
        mut self,
        input: ::std::option::Option<crate::types::GlueDataCatalogConfigurationUpdate>,
    ) -> Self {
        self.glue_data_catalog_configuration_update = input;
        self
    }
    /// <p>Updates to the configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.</p>
    pub fn get_glue_data_catalog_configuration_update(&self) -> &::std::option::Option<crate::types::GlueDataCatalogConfigurationUpdate> {
        &self.glue_data_catalog_configuration_update
    }
    /// Consumes the builder and constructs a [`CatalogConfigurationUpdate`](crate::types::CatalogConfigurationUpdate).
    pub fn build(self) -> crate::types::CatalogConfigurationUpdate {
        crate::types::CatalogConfigurationUpdate {
            glue_data_catalog_configuration_update: self.glue_data_catalog_configuration_update,
        }
    }
}
