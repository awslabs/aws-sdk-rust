// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>For a SQL-based Kinesis Data Analytics application, identifies a Kinesis Data Firehose delivery stream as the streaming source. You provide the delivery stream's Amazon Resource Name (ARN).</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct KinesisFirehoseInput {
    /// <p>The Amazon Resource Name (ARN) of the delivery stream.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
}
impl KinesisFirehoseInput {
    /// <p>The Amazon Resource Name (ARN) of the delivery stream.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
}
impl KinesisFirehoseInput {
    /// Creates a new builder-style object to manufacture [`KinesisFirehoseInput`](crate::types::KinesisFirehoseInput).
    pub fn builder() -> crate::types::builders::KinesisFirehoseInputBuilder {
        crate::types::builders::KinesisFirehoseInputBuilder::default()
    }
}

/// A builder for [`KinesisFirehoseInput`](crate::types::KinesisFirehoseInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct KinesisFirehoseInputBuilder {
    pub(crate) resource_arn: std::option::Option<std::string::String>,
}
impl KinesisFirehoseInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the delivery stream.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the delivery stream.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`KinesisFirehoseInput`](crate::types::KinesisFirehoseInput).
    pub fn build(self) -> crate::types::KinesisFirehoseInput {
        crate::types::KinesisFirehoseInput {
            resource_arn: self.resource_arn,
        }
    }
}
