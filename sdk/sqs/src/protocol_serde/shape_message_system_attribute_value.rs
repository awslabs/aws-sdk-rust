// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_message_system_attribute_value(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::MessageSystemAttributeValue,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("StringValue");
    if let Some(var_2) = &input.string_value {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("BinaryValue");
    if let Some(var_4) = &input.binary_value {
        scope_3.string(&::aws_smithy_types::base64::encode(var_4));
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("StringListValue");
    if let Some(var_6) = &input.string_list_values {
        let mut list_8 = scope_5.start_list(true, Some("StringListValue"));
        for item_7 in var_6 {
            #[allow(unused_mut)]
            let mut entry_9 = list_8.entry();
            entry_9.string(item_7);
        }
        list_8.finish();
    }
    #[allow(unused_mut)]
    let mut scope_10 = writer.prefix("BinaryListValue");
    if let Some(var_11) = &input.binary_list_values {
        let mut list_13 = scope_10.start_list(true, Some("BinaryListValue"));
        for item_12 in var_11 {
            #[allow(unused_mut)]
            let mut entry_14 = list_13.entry();
            entry_14.string(&::aws_smithy_types::base64::encode(item_12));
        }
        list_13.finish();
    }
    #[allow(unused_mut)]
    let mut scope_15 = writer.prefix("DataType");
    {
        scope_15.string(&input.data_type);
    }
    Ok(())
}
