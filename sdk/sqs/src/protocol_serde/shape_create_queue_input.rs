// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_queue_input_input(
    input: &crate::operation::create_queue::CreateQueueInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "CreateQueue", "2012-11-05");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("QueueName");
    if let Some(var_2) = &input.queue_name {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Tag");
    if let Some(var_4) = &input.tags {
        let mut map_5 = scope_3.start_map(true, "Key", "Value");
        for (key_6, value_7) in var_4 {
            #[allow(unused_mut)]
            let mut entry_8 = map_5.entry(key_6);
            {
                entry_8.string(value_7);
            }
        }
        map_5.finish();
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("Attribute");
    if let Some(var_10) = &input.attributes {
        let mut map_11 = scope_9.start_map(true, "Name", "Value");
        for (key_12, value_13) in var_10 {
            #[allow(unused_mut)]
            let mut entry_14 = map_11.entry(key_12.as_str());
            {
                entry_14.string(value_13);
            }
        }
        map_11.finish();
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
