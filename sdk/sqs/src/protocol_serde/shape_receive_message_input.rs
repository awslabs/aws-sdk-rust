// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_receive_message_input_input(
    input: &crate::operation::receive_message::ReceiveMessageInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "ReceiveMessage", "2012-11-05");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("QueueUrl");
    if let Some(var_2) = &input.queue_url {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("AttributeName");
    if let Some(var_4) = &input.attribute_names {
        let mut list_6 = scope_3.start_list(true, None);
        for item_5 in var_4 {
            #[allow(unused_mut)]
            let mut entry_7 = list_6.entry();
            entry_7.string(item_5.as_str());
        }
        list_6.finish();
    }
    #[allow(unused_mut)]
    let mut scope_8 = writer.prefix("MessageAttributeName");
    if let Some(var_9) = &input.message_attribute_names {
        let mut list_11 = scope_8.start_list(true, None);
        for item_10 in var_9 {
            #[allow(unused_mut)]
            let mut entry_12 = list_11.entry();
            entry_12.string(item_10);
        }
        list_11.finish();
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("MaxNumberOfMessages");
    if let Some(var_14) = &input.max_number_of_messages {
        scope_13.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_14).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_15 = writer.prefix("VisibilityTimeout");
    if let Some(var_16) = &input.visibility_timeout {
        scope_15.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_16).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_17 = writer.prefix("WaitTimeSeconds");
    if let Some(var_18) = &input.wait_time_seconds {
        scope_17.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_18).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_19 = writer.prefix("ReceiveRequestAttemptId");
    if let Some(var_20) = &input.receive_request_attempt_id {
        scope_19.string(var_20);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
