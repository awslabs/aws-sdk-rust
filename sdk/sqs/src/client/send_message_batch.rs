// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SendMessageBatch`](crate::operation::send_message_batch::builders::SendMessageBatchFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`queue_url(impl Into<String>)`](crate::operation::send_message_batch::builders::SendMessageBatchFluentBuilder::queue_url) / [`set_queue_url(Option<String>)`](crate::operation::send_message_batch::builders::SendMessageBatchFluentBuilder::set_queue_url):<br>required: **true**<br><p>The URL of the Amazon SQS queue to which batched messages are sent.</p>  <p>Queue URLs and names are case-sensitive.</p><br>
    ///   - [`entries(SendMessageBatchRequestEntry)`](crate::operation::send_message_batch::builders::SendMessageBatchFluentBuilder::entries) / [`set_entries(Option<Vec::<SendMessageBatchRequestEntry>>)`](crate::operation::send_message_batch::builders::SendMessageBatchFluentBuilder::set_entries):<br>required: **true**<br><p>A list of <code> <code>SendMessageBatchRequestEntry</code> </code> items.</p><br>
    /// - On success, responds with [`SendMessageBatchOutput`](crate::operation::send_message_batch::SendMessageBatchOutput) with field(s):
    ///   - [`successful(Vec::<SendMessageBatchResultEntry>)`](crate::operation::send_message_batch::SendMessageBatchOutput::successful): <p>A list of <code> <code>SendMessageBatchResultEntry</code> </code> items.</p>
    ///   - [`failed(Vec::<BatchResultErrorEntry>)`](crate::operation::send_message_batch::SendMessageBatchOutput::failed): <p>A list of <code> <code>BatchResultErrorEntry</code> </code> items with error details about each message that can't be enqueued.</p>
    /// - On failure, responds with [`SdkError<SendMessageBatchError>`](crate::operation::send_message_batch::SendMessageBatchError)
    pub fn send_message_batch(&self) -> crate::operation::send_message_batch::builders::SendMessageBatchFluentBuilder {
        crate::operation::send_message_batch::builders::SendMessageBatchFluentBuilder::new(self.handle.clone())
    }
}
