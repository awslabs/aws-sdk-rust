// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartDeployment`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_id(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::app_id) / [`set_app_id(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_app_id): <p> The unique ID for an Amplify app. </p>
    ///   - [`branch_name(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::branch_name) / [`set_branch_name(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_branch_name): <p> The name for the branch, for the job. </p>
    ///   - [`job_id(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::job_id) / [`set_job_id(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_job_id): <p> The job ID for this deployment, generated by the create deployment request. </p>
    ///   - [`source_url(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::source_url) / [`set_source_url(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_source_url): <p> The source URL for this deployment, used when calling start deployment without create deployment. The source URL can be any HTTP GET URL that is publicly accessible and downloads a single .zip file. </p>
    /// - On success, responds with [`StartDeploymentOutput`](crate::operation::start_deployment::StartDeploymentOutput) with field(s):
    ///   - [`job_summary(Option<JobSummary>)`](crate::operation::start_deployment::StartDeploymentOutput::job_summary): <p> The summary for the job. </p>
    /// - On failure, responds with [`SdkError<StartDeploymentError>`](crate::operation::start_deployment::StartDeploymentError)
    pub fn start_deployment(
        &self,
    ) -> crate::operation::start_deployment::builders::StartDeploymentFluentBuilder {
        crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
