// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBackendEnvironment`](crate::client::fluent_builders::CreateBackendEnvironment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_id(impl Into<String>)`](crate::client::fluent_builders::CreateBackendEnvironment::app_id) / [`set_app_id(Option<String>)`](crate::client::fluent_builders::CreateBackendEnvironment::set_app_id): <p> The unique ID for an Amplify app. </p>
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::CreateBackendEnvironment::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::CreateBackendEnvironment::set_environment_name): <p> The name for the backend environment. </p>
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::CreateBackendEnvironment::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::CreateBackendEnvironment::set_stack_name): <p> The AWS CloudFormation stack name of a backend environment. </p>
    ///   - [`deployment_artifacts(impl Into<String>)`](crate::client::fluent_builders::CreateBackendEnvironment::deployment_artifacts) / [`set_deployment_artifacts(Option<String>)`](crate::client::fluent_builders::CreateBackendEnvironment::set_deployment_artifacts): <p> The name of deployment artifacts. </p>
    /// - On success, responds with [`CreateBackendEnvironmentOutput`](crate::output::CreateBackendEnvironmentOutput) with field(s):
    ///   - [`backend_environment(Option<BackendEnvironment>)`](crate::output::CreateBackendEnvironmentOutput::backend_environment): <p> Describes the backend environment for an Amplify app. </p>
    /// - On failure, responds with [`SdkError<CreateBackendEnvironmentError>`](crate::error::CreateBackendEnvironmentError)
    pub fn create_backend_environment(
        &self,
    ) -> crate::client::fluent_builders::CreateBackendEnvironment {
        crate::client::fluent_builders::CreateBackendEnvironment::new(self.handle.clone())
    }
}
