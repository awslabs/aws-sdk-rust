// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBranch`](crate::operation::create_branch::builders::CreateBranchFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_id(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::app_id) / [`set_app_id(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_app_id):<br>required: **true**<br><p> The unique ID for an Amplify app. </p><br>
    ///   - [`branch_name(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::branch_name) / [`set_branch_name(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_branch_name):<br>required: **true**<br><p> The name for the branch. </p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_description):<br>required: **false**<br><p> The description for the branch. </p><br>
    ///   - [`stage(Stage)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::stage) / [`set_stage(Option<Stage>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_stage):<br>required: **false**<br><p> Describes the current stage for the branch. </p><br>
    ///   - [`framework(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::framework) / [`set_framework(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_framework):<br>required: **false**<br><p> The framework for the branch. </p><br>
    ///   - [`enable_notification(bool)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::enable_notification) / [`set_enable_notification(Option<bool>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_enable_notification):<br>required: **false**<br><p> Enables notifications for the branch. </p><br>
    ///   - [`enable_auto_build(bool)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::enable_auto_build) / [`set_enable_auto_build(Option<bool>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_enable_auto_build):<br>required: **false**<br><p> Enables auto building for the branch. </p><br>
    ///   - [`environment_variables(impl Into<String>, impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::environment_variables) / [`set_environment_variables(Option<HashMap::<String, String>>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_environment_variables):<br>required: **false**<br><p> The environment variables for the branch. </p><br>
    ///   - [`basic_auth_credentials(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::basic_auth_credentials) / [`set_basic_auth_credentials(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_basic_auth_credentials):<br>required: **false**<br><p> The basic authorization credentials for the branch. You must base64-encode the authorization credentials and provide them in the format <code>user:password</code>.</p><br>
    ///   - [`enable_basic_auth(bool)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::enable_basic_auth) / [`set_enable_basic_auth(Option<bool>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_enable_basic_auth):<br>required: **false**<br><p> Enables basic authorization for the branch. </p><br>
    ///   - [`enable_performance_mode(bool)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::enable_performance_mode) / [`set_enable_performance_mode(Option<bool>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_enable_performance_mode):<br>required: **false**<br><p>Enables performance mode for the branch.</p>  <p>Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. </p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_tags):<br>required: **false**<br><p> The tag for the branch. </p><br>
    ///   - [`build_spec(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::build_spec) / [`set_build_spec(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_build_spec):<br>required: **false**<br><p> The build specification (build spec) for the branch. </p><br>
    ///   - [`ttl(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::ttl) / [`set_ttl(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_ttl):<br>required: **false**<br><p> The content Time To Live (TTL) for the website in seconds. </p><br>
    ///   - [`display_name(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::display_name) / [`set_display_name(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_display_name):<br>required: **false**<br><p> The display name for a branch. This is used as the default domain prefix. </p><br>
    ///   - [`enable_pull_request_preview(bool)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::enable_pull_request_preview) / [`set_enable_pull_request_preview(Option<bool>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_enable_pull_request_preview):<br>required: **false**<br><p> Enables pull request previews for this branch. </p><br>
    ///   - [`pull_request_environment_name(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::pull_request_environment_name) / [`set_pull_request_environment_name(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_pull_request_environment_name):<br>required: **false**<br><p> The Amplify environment name for the pull request. </p><br>
    ///   - [`backend_environment_arn(impl Into<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::backend_environment_arn) / [`set_backend_environment_arn(Option<String>)`](crate::operation::create_branch::builders::CreateBranchFluentBuilder::set_backend_environment_arn):<br>required: **false**<br><p> The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. </p><br>
    /// - On success, responds with [`CreateBranchOutput`](crate::operation::create_branch::CreateBranchOutput) with field(s):
    ///   - [`branch(Option<Branch>)`](crate::operation::create_branch::CreateBranchOutput::branch): <p> Describes the branch for an Amplify app, which maps to a third-party repository branch. </p>
    /// - On failure, responds with [`SdkError<CreateBranchError>`](crate::operation::create_branch::CreateBranchError)
    pub fn create_branch(&self) -> crate::operation::create_branch::builders::CreateBranchFluentBuilder {
        crate::operation::create_branch::builders::CreateBranchFluentBuilder::new(self.handle.clone())
    }
}
