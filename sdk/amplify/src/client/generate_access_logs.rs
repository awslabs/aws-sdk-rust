// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GenerateAccessLogs`](crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`start_time(DateTime)`](crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder::set_start_time): <p> The time at which the logs should start. The time range specified is inclusive of the start time. </p>
    ///   - [`end_time(DateTime)`](crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder::set_end_time): <p> The time at which the logs should end. The time range specified is inclusive of the end time. </p>
    ///   - [`domain_name(impl Into<String>)`](crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder::set_domain_name): <p> The name of the domain. </p>
    ///   - [`app_id(impl Into<String>)`](crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder::app_id) / [`set_app_id(Option<String>)`](crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder::set_app_id): <p> The unique ID for an Amplify app. </p>
    /// - On success, responds with [`GenerateAccessLogsOutput`](crate::operation::generate_access_logs::GenerateAccessLogsOutput) with field(s):
    ///   - [`log_url(Option<String>)`](crate::operation::generate_access_logs::GenerateAccessLogsOutput::log_url): <p> The pre-signed URL for the requested access logs. </p>
    /// - On failure, responds with [`SdkError<GenerateAccessLogsError>`](crate::operation::generate_access_logs::GenerateAccessLogsError)
    pub fn generate_access_logs(
        &self,
    ) -> crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder {
        crate::operation::generate_access_logs::builders::GenerateAccessLogsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
