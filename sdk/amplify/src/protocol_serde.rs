// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_app;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_backend_environment;

pub(crate) mod shape_create_branch;

pub(crate) mod shape_create_deployment;

pub(crate) mod shape_create_domain_association;

pub(crate) mod shape_create_webhook;

pub(crate) mod shape_delete_app;

pub(crate) mod shape_delete_backend_environment;

pub(crate) mod shape_delete_branch;

pub(crate) mod shape_delete_domain_association;

pub(crate) mod shape_delete_job;

pub(crate) mod shape_delete_webhook;

pub(crate) mod shape_generate_access_logs;

pub(crate) mod shape_get_app;

pub(crate) mod shape_get_artifact_url;

pub(crate) mod shape_get_backend_environment;

pub(crate) mod shape_get_branch;

pub(crate) mod shape_get_domain_association;

pub(crate) mod shape_get_job;

pub(crate) mod shape_get_webhook;

pub(crate) mod shape_list_apps;

pub(crate) mod shape_list_artifacts;

pub(crate) mod shape_list_backend_environments;

pub(crate) mod shape_list_branches;

pub(crate) mod shape_list_domain_associations;

pub(crate) mod shape_list_jobs;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_webhooks;

pub(crate) mod shape_start_deployment;

pub(crate) mod shape_start_job;

pub(crate) mod shape_stop_job;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_app;

pub(crate) mod shape_update_branch;

pub(crate) mod shape_update_domain_association;

pub(crate) mod shape_update_webhook;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_create_app_input;

pub(crate) mod shape_create_backend_environment_input;

pub(crate) mod shape_create_branch_input;

pub(crate) mod shape_create_deployment_input;

pub(crate) mod shape_create_domain_association_input;

pub(crate) mod shape_create_webhook_input;

pub(crate) mod shape_dependent_service_failure_exception;

pub(crate) mod shape_generate_access_logs_input;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_start_deployment_input;

pub(crate) mod shape_start_job_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_unauthorized_exception;

pub(crate) mod shape_update_app_input;

pub(crate) mod shape_update_branch_input;

pub(crate) mod shape_update_domain_association_input;

pub(crate) mod shape_update_webhook_input;

pub(crate) mod shape_app;

pub(crate) mod shape_apps;

pub(crate) mod shape_artifacts;

pub(crate) mod shape_auto_branch_creation_config;

pub(crate) mod shape_backend_environment;

pub(crate) mod shape_backend_environments;

pub(crate) mod shape_branch;

pub(crate) mod shape_branches;

pub(crate) mod shape_custom_rule;

pub(crate) mod shape_domain_association;

pub(crate) mod shape_domain_associations;

pub(crate) mod shape_file_upload_urls;

pub(crate) mod shape_job;

pub(crate) mod shape_job_summaries;

pub(crate) mod shape_job_summary;

pub(crate) mod shape_sub_domain_setting;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_webhook;

pub(crate) mod shape_webhooks;

pub(crate) mod shape_artifact;

pub(crate) mod shape_associated_resources;

pub(crate) mod shape_auto_branch_creation_patterns;

pub(crate) mod shape_auto_sub_domain_creation_patterns;

pub(crate) mod shape_custom_domains;

pub(crate) mod shape_custom_rules;

pub(crate) mod shape_environment_variables;

pub(crate) mod shape_production_branch;

pub(crate) mod shape_steps;

pub(crate) mod shape_sub_domains;

pub(crate) mod shape_step;

pub(crate) mod shape_sub_domain;

pub(crate) mod shape_screenshots;
