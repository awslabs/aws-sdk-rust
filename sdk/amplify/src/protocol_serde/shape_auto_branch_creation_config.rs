// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_auto_branch_creation_config(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AutoBranchCreationConfig,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.stage {
        object.key("stage").string(var_1.as_str());
    }
    if let Some(var_2) = &input.framework {
        object.key("framework").string(var_2.as_str());
    }
    if let Some(var_3) = &input.enable_auto_build {
        object.key("enableAutoBuild").boolean(*var_3);
    }
    if let Some(var_4) = &input.environment_variables {
        #[allow(unused_mut)]
        let mut object_5 = object.key("environmentVariables").start_object();
        for (key_6, value_7) in var_4 {
            {
                object_5.key(key_6.as_str()).string(value_7.as_str());
            }
        }
        object_5.finish();
    }
    if let Some(var_8) = &input.basic_auth_credentials {
        object.key("basicAuthCredentials").string(var_8.as_str());
    }
    if let Some(var_9) = &input.enable_basic_auth {
        object.key("enableBasicAuth").boolean(*var_9);
    }
    if let Some(var_10) = &input.enable_performance_mode {
        object.key("enablePerformanceMode").boolean(*var_10);
    }
    if let Some(var_11) = &input.build_spec {
        object.key("buildSpec").string(var_11.as_str());
    }
    if let Some(var_12) = &input.enable_pull_request_preview {
        object.key("enablePullRequestPreview").boolean(*var_12);
    }
    if let Some(var_13) = &input.pull_request_environment_name {
        object.key("pullRequestEnvironmentName").string(var_13.as_str());
    }
    Ok(())
}

pub(crate) fn de_auto_branch_creation_config<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::AutoBranchCreationConfig>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::AutoBranchCreationConfigBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "stage" => {
                            builder = builder.set_stage(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::Stage::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "framework" => {
                            builder = builder.set_framework(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "enableAutoBuild" => {
                            builder = builder.set_enable_auto_build(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "environmentVariables" => {
                            builder = builder
                                .set_environment_variables(crate::protocol_serde::shape_environment_variables::de_environment_variables(tokens)?);
                        }
                        "basicAuthCredentials" => {
                            builder = builder.set_basic_auth_credentials(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "enableBasicAuth" => {
                            builder = builder.set_enable_basic_auth(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "enablePerformanceMode" => {
                            builder = builder.set_enable_performance_mode(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "buildSpec" => {
                            builder = builder.set_build_spec(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "enablePullRequestPreview" => {
                            builder =
                                builder.set_enable_pull_request_preview(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "pullRequestEnvironmentName" => {
                            builder = builder.set_pull_request_environment_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
