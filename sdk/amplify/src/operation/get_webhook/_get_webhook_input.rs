// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The request structure for the get webhook request. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetWebhookInput {
    /// <p> The unique ID for a webhook. </p>
    #[doc(hidden)]
    pub webhook_id: std::option::Option<std::string::String>,
}
impl GetWebhookInput {
    /// <p> The unique ID for a webhook. </p>
    pub fn webhook_id(&self) -> std::option::Option<&str> {
        self.webhook_id.as_deref()
    }
}
impl GetWebhookInput {
    /// Creates a new builder-style object to manufacture [`GetWebhookInput`](crate::operation::get_webhook::GetWebhookInput).
    pub fn builder() -> crate::operation::get_webhook::builders::GetWebhookInputBuilder {
        crate::operation::get_webhook::builders::GetWebhookInputBuilder::default()
    }
}

/// A builder for [`GetWebhookInput`](crate::operation::get_webhook::GetWebhookInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetWebhookInputBuilder {
    pub(crate) webhook_id: std::option::Option<std::string::String>,
}
impl GetWebhookInputBuilder {
    /// <p> The unique ID for a webhook. </p>
    pub fn webhook_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.webhook_id = Some(input.into());
        self
    }
    /// <p> The unique ID for a webhook. </p>
    pub fn set_webhook_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.webhook_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetWebhookInput`](crate::operation::get_webhook::GetWebhookInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_webhook::GetWebhookInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_webhook::GetWebhookInput {
            webhook_id: self.webhook_id,
        })
    }
}
