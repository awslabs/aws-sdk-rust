// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The result structure for create branch request. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateBranchOutput {
    /// <p> Describes the branch for an Amplify app, which maps to a third-party repository branch. </p>
    #[doc(hidden)]
    pub branch: std::option::Option<crate::types::Branch>,
    _request_id: Option<String>,
}
impl CreateBranchOutput {
    /// <p> Describes the branch for an Amplify app, which maps to a third-party repository branch. </p>
    pub fn branch(&self) -> std::option::Option<&crate::types::Branch> {
        self.branch.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateBranchOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateBranchOutput {
    /// Creates a new builder-style object to manufacture [`CreateBranchOutput`](crate::operation::create_branch::CreateBranchOutput).
    pub fn builder() -> crate::operation::create_branch::builders::CreateBranchOutputBuilder {
        crate::operation::create_branch::builders::CreateBranchOutputBuilder::default()
    }
}

/// A builder for [`CreateBranchOutput`](crate::operation::create_branch::CreateBranchOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateBranchOutputBuilder {
    pub(crate) branch: std::option::Option<crate::types::Branch>,
    _request_id: Option<String>,
}
impl CreateBranchOutputBuilder {
    /// <p> Describes the branch for an Amplify app, which maps to a third-party repository branch. </p>
    pub fn branch(mut self, input: crate::types::Branch) -> Self {
        self.branch = Some(input);
        self
    }
    /// <p> Describes the branch for an Amplify app, which maps to a third-party repository branch. </p>
    pub fn set_branch(mut self, input: std::option::Option<crate::types::Branch>) -> Self {
        self.branch = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateBranchOutput`](crate::operation::create_branch::CreateBranchOutput).
    pub fn build(self) -> crate::operation::create_branch::CreateBranchOutput {
        crate::operation::create_branch::CreateBranchOutput {
            branch: self.branch,
            _request_id: self._request_id,
        }
    }
}
