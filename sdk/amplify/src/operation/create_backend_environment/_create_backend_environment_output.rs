// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The result structure for the create backend environment request. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateBackendEnvironmentOutput {
    /// <p> Describes the backend environment for an Amplify app. </p>
    pub backend_environment: ::std::option::Option<crate::types::BackendEnvironment>,
    _request_id: Option<String>,
}
impl CreateBackendEnvironmentOutput {
    /// <p> Describes the backend environment for an Amplify app. </p>
    pub fn backend_environment(&self) -> ::std::option::Option<&crate::types::BackendEnvironment> {
        self.backend_environment.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for CreateBackendEnvironmentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateBackendEnvironmentOutput {
    /// Creates a new builder-style object to manufacture [`CreateBackendEnvironmentOutput`](crate::operation::create_backend_environment::CreateBackendEnvironmentOutput).
    pub fn builder() -> crate::operation::create_backend_environment::builders::CreateBackendEnvironmentOutputBuilder {
        crate::operation::create_backend_environment::builders::CreateBackendEnvironmentOutputBuilder::default()
    }
}

/// A builder for [`CreateBackendEnvironmentOutput`](crate::operation::create_backend_environment::CreateBackendEnvironmentOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateBackendEnvironmentOutputBuilder {
    pub(crate) backend_environment: ::std::option::Option<crate::types::BackendEnvironment>,
    _request_id: Option<String>,
}
impl CreateBackendEnvironmentOutputBuilder {
    /// <p> Describes the backend environment for an Amplify app. </p>
    /// This field is required.
    pub fn backend_environment(mut self, input: crate::types::BackendEnvironment) -> Self {
        self.backend_environment = ::std::option::Option::Some(input);
        self
    }
    /// <p> Describes the backend environment for an Amplify app. </p>
    pub fn set_backend_environment(mut self, input: ::std::option::Option<crate::types::BackendEnvironment>) -> Self {
        self.backend_environment = input;
        self
    }
    /// <p> Describes the backend environment for an Amplify app. </p>
    pub fn get_backend_environment(&self) -> &::std::option::Option<crate::types::BackendEnvironment> {
        &self.backend_environment
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateBackendEnvironmentOutput`](crate::operation::create_backend_environment::CreateBackendEnvironmentOutput).
    pub fn build(self) -> crate::operation::create_backend_environment::CreateBackendEnvironmentOutput {
        crate::operation::create_backend_environment::CreateBackendEnvironmentOutput {
            backend_environment: self.backend_environment,
            _request_id: self._request_id,
        }
    }
}
