// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The result structure for the list webhooks request. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListWebhooksOutput {
    /// <p> A list of webhooks. </p>
    #[doc(hidden)]
    pub webhooks: std::option::Option<std::vec::Vec<crate::types::Webhook>>,
    /// <p> A pagination token. If non-null, the pagination token is returned in a result. Pass its value in another request to retrieve more entries. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListWebhooksOutput {
    /// <p> A list of webhooks. </p>
    pub fn webhooks(&self) -> std::option::Option<&[crate::types::Webhook]> {
        self.webhooks.as_deref()
    }
    /// <p> A pagination token. If non-null, the pagination token is returned in a result. Pass its value in another request to retrieve more entries. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListWebhooksOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListWebhooksOutput {
    /// Creates a new builder-style object to manufacture [`ListWebhooksOutput`](crate::operation::list_webhooks::ListWebhooksOutput).
    pub fn builder() -> crate::operation::list_webhooks::builders::ListWebhooksOutputBuilder {
        crate::operation::list_webhooks::builders::ListWebhooksOutputBuilder::default()
    }
}

/// A builder for [`ListWebhooksOutput`](crate::operation::list_webhooks::ListWebhooksOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListWebhooksOutputBuilder {
    pub(crate) webhooks: std::option::Option<std::vec::Vec<crate::types::Webhook>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListWebhooksOutputBuilder {
    /// Appends an item to `webhooks`.
    ///
    /// To override the contents of this collection use [`set_webhooks`](Self::set_webhooks).
    ///
    /// <p> A list of webhooks. </p>
    pub fn webhooks(mut self, input: crate::types::Webhook) -> Self {
        let mut v = self.webhooks.unwrap_or_default();
        v.push(input);
        self.webhooks = Some(v);
        self
    }
    /// <p> A list of webhooks. </p>
    pub fn set_webhooks(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Webhook>>,
    ) -> Self {
        self.webhooks = input;
        self
    }
    /// <p> A pagination token. If non-null, the pagination token is returned in a result. Pass its value in another request to retrieve more entries. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p> A pagination token. If non-null, the pagination token is returned in a result. Pass its value in another request to retrieve more entries. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListWebhooksOutput`](crate::operation::list_webhooks::ListWebhooksOutput).
    pub fn build(self) -> crate::operation::list_webhooks::ListWebhooksOutput {
        crate::operation::list_webhooks::ListWebhooksOutput {
            webhooks: self.webhooks,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
