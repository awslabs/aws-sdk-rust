// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyCacheSubnetGroupOutput {
    /// <p>Represents the output of one of the following operations:</p>
    /// <ul>
    /// <li> <p> <code>CreateCacheSubnetGroup</code> </p> </li>
    /// <li> <p> <code>ModifyCacheSubnetGroup</code> </p> </li>
    /// </ul>
    #[doc(hidden)]
    pub cache_subnet_group: std::option::Option<crate::types::CacheSubnetGroup>,
    _request_id: Option<String>,
}
impl ModifyCacheSubnetGroupOutput {
    /// <p>Represents the output of one of the following operations:</p>
    /// <ul>
    /// <li> <p> <code>CreateCacheSubnetGroup</code> </p> </li>
    /// <li> <p> <code>ModifyCacheSubnetGroup</code> </p> </li>
    /// </ul>
    pub fn cache_subnet_group(&self) -> std::option::Option<&crate::types::CacheSubnetGroup> {
        self.cache_subnet_group.as_ref()
    }
}
impl aws_http::request_id::RequestId for ModifyCacheSubnetGroupOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ModifyCacheSubnetGroupOutput {
    /// Creates a new builder-style object to manufacture [`ModifyCacheSubnetGroupOutput`](crate::operation::modify_cache_subnet_group::ModifyCacheSubnetGroupOutput).
    pub fn builder(
    ) -> crate::operation::modify_cache_subnet_group::builders::ModifyCacheSubnetGroupOutputBuilder
    {
        crate::operation::modify_cache_subnet_group::builders::ModifyCacheSubnetGroupOutputBuilder::default()
    }
}

/// A builder for [`ModifyCacheSubnetGroupOutput`](crate::operation::modify_cache_subnet_group::ModifyCacheSubnetGroupOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModifyCacheSubnetGroupOutputBuilder {
    pub(crate) cache_subnet_group: std::option::Option<crate::types::CacheSubnetGroup>,
    _request_id: Option<String>,
}
impl ModifyCacheSubnetGroupOutputBuilder {
    /// <p>Represents the output of one of the following operations:</p>
    /// <ul>
    /// <li> <p> <code>CreateCacheSubnetGroup</code> </p> </li>
    /// <li> <p> <code>ModifyCacheSubnetGroup</code> </p> </li>
    /// </ul>
    pub fn cache_subnet_group(mut self, input: crate::types::CacheSubnetGroup) -> Self {
        self.cache_subnet_group = Some(input);
        self
    }
    /// <p>Represents the output of one of the following operations:</p>
    /// <ul>
    /// <li> <p> <code>CreateCacheSubnetGroup</code> </p> </li>
    /// <li> <p> <code>ModifyCacheSubnetGroup</code> </p> </li>
    /// </ul>
    pub fn set_cache_subnet_group(
        mut self,
        input: std::option::Option<crate::types::CacheSubnetGroup>,
    ) -> Self {
        self.cache_subnet_group = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ModifyCacheSubnetGroupOutput`](crate::operation::modify_cache_subnet_group::ModifyCacheSubnetGroupOutput).
    pub fn build(
        self,
    ) -> crate::operation::modify_cache_subnet_group::ModifyCacheSubnetGroupOutput {
        crate::operation::modify_cache_subnet_group::ModifyCacheSubnetGroupOutput {
            cache_subnet_group: self.cache_subnet_group,
            _request_id: self._request_id,
        }
    }
}
