// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RebalanceSlotsInGlobalReplicationGroupInput {
    /// <p>The name of the Global datastore</p>
    #[doc(hidden)]
    pub global_replication_group_id: std::option::Option<std::string::String>,
    /// <p>If <code>True</code>, redistribution is applied immediately.</p>
    #[doc(hidden)]
    pub apply_immediately: bool,
}
impl RebalanceSlotsInGlobalReplicationGroupInput {
    /// <p>The name of the Global datastore</p>
    pub fn global_replication_group_id(&self) -> std::option::Option<&str> {
        self.global_replication_group_id.as_deref()
    }
    /// <p>If <code>True</code>, redistribution is applied immediately.</p>
    pub fn apply_immediately(&self) -> bool {
        self.apply_immediately
    }
}
impl RebalanceSlotsInGlobalReplicationGroupInput {
    /// Creates a new builder-style object to manufacture [`RebalanceSlotsInGlobalReplicationGroupInput`](crate::operation::rebalance_slots_in_global_replication_group::RebalanceSlotsInGlobalReplicationGroupInput).
    pub fn builder() -> crate::operation::rebalance_slots_in_global_replication_group::builders::RebalanceSlotsInGlobalReplicationGroupInputBuilder{
        crate::operation::rebalance_slots_in_global_replication_group::builders::RebalanceSlotsInGlobalReplicationGroupInputBuilder::default()
    }
}

/// A builder for [`RebalanceSlotsInGlobalReplicationGroupInput`](crate::operation::rebalance_slots_in_global_replication_group::RebalanceSlotsInGlobalReplicationGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RebalanceSlotsInGlobalReplicationGroupInputBuilder {
    pub(crate) global_replication_group_id: std::option::Option<std::string::String>,
    pub(crate) apply_immediately: std::option::Option<bool>,
}
impl RebalanceSlotsInGlobalReplicationGroupInputBuilder {
    /// <p>The name of the Global datastore</p>
    pub fn global_replication_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.global_replication_group_id = Some(input.into());
        self
    }
    /// <p>The name of the Global datastore</p>
    pub fn set_global_replication_group_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.global_replication_group_id = input;
        self
    }
    /// <p>If <code>True</code>, redistribution is applied immediately.</p>
    pub fn apply_immediately(mut self, input: bool) -> Self {
        self.apply_immediately = Some(input);
        self
    }
    /// <p>If <code>True</code>, redistribution is applied immediately.</p>
    pub fn set_apply_immediately(mut self, input: std::option::Option<bool>) -> Self {
        self.apply_immediately = input;
        self
    }
    /// Consumes the builder and constructs a [`RebalanceSlotsInGlobalReplicationGroupInput`](crate::operation::rebalance_slots_in_global_replication_group::RebalanceSlotsInGlobalReplicationGroupInput).
    pub fn build(self) -> Result<crate::operation::rebalance_slots_in_global_replication_group::RebalanceSlotsInGlobalReplicationGroupInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::rebalance_slots_in_global_replication_group::RebalanceSlotsInGlobalReplicationGroupInput {
                global_replication_group_id: self.global_replication_group_id
                ,
                apply_immediately: self.apply_immediately
                    .unwrap_or_default()
                ,
            }
        )
    }
}
