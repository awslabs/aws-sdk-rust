// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchStopUpdateActionInput {
    /// <p>The replication group IDs</p>
    #[doc(hidden)]
    pub replication_group_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The cache cluster IDs</p>
    #[doc(hidden)]
    pub cache_cluster_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The unique ID of the service update</p>
    #[doc(hidden)]
    pub service_update_name: std::option::Option<std::string::String>,
}
impl BatchStopUpdateActionInput {
    /// <p>The replication group IDs</p>
    pub fn replication_group_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.replication_group_ids.as_deref()
    }
    /// <p>The cache cluster IDs</p>
    pub fn cache_cluster_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.cache_cluster_ids.as_deref()
    }
    /// <p>The unique ID of the service update</p>
    pub fn service_update_name(&self) -> std::option::Option<&str> {
        self.service_update_name.as_deref()
    }
}
impl BatchStopUpdateActionInput {
    /// Creates a new builder-style object to manufacture [`BatchStopUpdateActionInput`](crate::operation::batch_stop_update_action::BatchStopUpdateActionInput).
    pub fn builder(
    ) -> crate::operation::batch_stop_update_action::builders::BatchStopUpdateActionInputBuilder
    {
        crate::operation::batch_stop_update_action::builders::BatchStopUpdateActionInputBuilder::default()
    }
}

/// A builder for [`BatchStopUpdateActionInput`](crate::operation::batch_stop_update_action::BatchStopUpdateActionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchStopUpdateActionInputBuilder {
    pub(crate) replication_group_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) cache_cluster_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) service_update_name: std::option::Option<std::string::String>,
}
impl BatchStopUpdateActionInputBuilder {
    /// Appends an item to `replication_group_ids`.
    ///
    /// To override the contents of this collection use [`set_replication_group_ids`](Self::set_replication_group_ids).
    ///
    /// <p>The replication group IDs</p>
    pub fn replication_group_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.replication_group_ids.unwrap_or_default();
        v.push(input.into());
        self.replication_group_ids = Some(v);
        self
    }
    /// <p>The replication group IDs</p>
    pub fn set_replication_group_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.replication_group_ids = input;
        self
    }
    /// Appends an item to `cache_cluster_ids`.
    ///
    /// To override the contents of this collection use [`set_cache_cluster_ids`](Self::set_cache_cluster_ids).
    ///
    /// <p>The cache cluster IDs</p>
    pub fn cache_cluster_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.cache_cluster_ids.unwrap_or_default();
        v.push(input.into());
        self.cache_cluster_ids = Some(v);
        self
    }
    /// <p>The cache cluster IDs</p>
    pub fn set_cache_cluster_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.cache_cluster_ids = input;
        self
    }
    /// <p>The unique ID of the service update</p>
    pub fn service_update_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.service_update_name = Some(input.into());
        self
    }
    /// <p>The unique ID of the service update</p>
    pub fn set_service_update_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.service_update_name = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchStopUpdateActionInput`](crate::operation::batch_stop_update_action::BatchStopUpdateActionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_stop_update_action::BatchStopUpdateActionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::batch_stop_update_action::BatchStopUpdateActionInput {
                replication_group_ids: self.replication_group_ids,
                cache_cluster_ids: self.cache_cluster_ids,
                service_update_name: self.service_update_name,
            },
        )
    }
}
