// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input of a <code>DeleteCacheCluster</code> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteCacheClusterInput {
    /// <p>The cluster identifier for the cluster to be deleted. This parameter is not case sensitive.</p>
    pub cache_cluster_id: ::std::option::Option<::std::string::String>,
    /// <p>The user-supplied name of a final cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cluster immediately afterward.</p>
    pub final_snapshot_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteCacheClusterInput {
    /// <p>The cluster identifier for the cluster to be deleted. This parameter is not case sensitive.</p>
    pub fn cache_cluster_id(&self) -> ::std::option::Option<&str> {
        self.cache_cluster_id.as_deref()
    }
    /// <p>The user-supplied name of a final cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cluster immediately afterward.</p>
    pub fn final_snapshot_identifier(&self) -> ::std::option::Option<&str> {
        self.final_snapshot_identifier.as_deref()
    }
}
impl DeleteCacheClusterInput {
    /// Creates a new builder-style object to manufacture [`DeleteCacheClusterInput`](crate::operation::delete_cache_cluster::DeleteCacheClusterInput).
    pub fn builder() -> crate::operation::delete_cache_cluster::builders::DeleteCacheClusterInputBuilder {
        crate::operation::delete_cache_cluster::builders::DeleteCacheClusterInputBuilder::default()
    }
}

/// A builder for [`DeleteCacheClusterInput`](crate::operation::delete_cache_cluster::DeleteCacheClusterInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteCacheClusterInputBuilder {
    pub(crate) cache_cluster_id: ::std::option::Option<::std::string::String>,
    pub(crate) final_snapshot_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteCacheClusterInputBuilder {
    /// <p>The cluster identifier for the cluster to be deleted. This parameter is not case sensitive.</p>
    /// This field is required.
    pub fn cache_cluster_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cache_cluster_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The cluster identifier for the cluster to be deleted. This parameter is not case sensitive.</p>
    pub fn set_cache_cluster_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cache_cluster_id = input;
        self
    }
    /// <p>The cluster identifier for the cluster to be deleted. This parameter is not case sensitive.</p>
    pub fn get_cache_cluster_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.cache_cluster_id
    }
    /// <p>The user-supplied name of a final cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cluster immediately afterward.</p>
    pub fn final_snapshot_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.final_snapshot_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The user-supplied name of a final cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cluster immediately afterward.</p>
    pub fn set_final_snapshot_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.final_snapshot_identifier = input;
        self
    }
    /// <p>The user-supplied name of a final cluster snapshot. This is the unique name that identifies the snapshot. ElastiCache creates the snapshot, and then deletes the cluster immediately afterward.</p>
    pub fn get_final_snapshot_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.final_snapshot_identifier
    }
    /// Consumes the builder and constructs a [`DeleteCacheClusterInput`](crate::operation::delete_cache_cluster::DeleteCacheClusterInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_cache_cluster::DeleteCacheClusterInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::delete_cache_cluster::DeleteCacheClusterInput {
            cache_cluster_id: self.cache_cluster_id,
            final_snapshot_identifier: self.final_snapshot_identifier,
        })
    }
}
