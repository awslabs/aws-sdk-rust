// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CompleteMigration`](crate::client::fluent_builders::CompleteMigration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`replication_group_id(impl Into<String>)`](crate::client::fluent_builders::CompleteMigration::replication_group_id) / [`set_replication_group_id(Option<String>)`](crate::client::fluent_builders::CompleteMigration::set_replication_group_id): <p>The ID of the replication group to which data is being migrated.</p>
    ///   - [`force(bool)`](crate::client::fluent_builders::CompleteMigration::force) / [`set_force(bool)`](crate::client::fluent_builders::CompleteMigration::set_force): <p>Forces the migration to stop without ensuring that data is in sync. It is recommended to use this option only to abort the migration and not recommended when application wants to continue migration to ElastiCache.</p>
    /// - On success, responds with [`CompleteMigrationOutput`](crate::output::CompleteMigrationOutput) with field(s):
    ///   - [`replication_group(Option<ReplicationGroup>)`](crate::output::CompleteMigrationOutput::replication_group): <p>Contains all of the attributes of a specific Redis replication group.</p>
    /// - On failure, responds with [`SdkError<CompleteMigrationError>`](crate::error::CompleteMigrationError)
    pub fn complete_migration(&self) -> crate::client::fluent_builders::CompleteMigration {
        crate::client::fluent_builders::CompleteMigration::new(self.handle.clone())
    }
}
