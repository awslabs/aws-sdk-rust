// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateGlobalReplicationGroup`](crate::client::fluent_builders::CreateGlobalReplicationGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_replication_group_id_suffix(impl Into<String>)`](crate::client::fluent_builders::CreateGlobalReplicationGroup::global_replication_group_id_suffix) / [`set_global_replication_group_id_suffix(Option<String>)`](crate::client::fluent_builders::CreateGlobalReplicationGroup::set_global_replication_group_id_suffix): <p>The suffix name of a Global datastore. Amazon ElastiCache automatically applies a prefix to the Global datastore ID when it is created. Each Amazon Region has its own prefix. For instance, a Global datastore ID created in the US-West-1 region will begin with "dsdfu" along with the suffix name you provide. The suffix, combined with the auto-generated prefix, guarantees uniqueness of the Global datastore name across multiple regions. </p>  <p>For a full list of Amazon Regions and their respective Global datastore iD prefixes, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastores-CLI.html">Using the Amazon CLI with Global datastores </a>.</p>
    ///   - [`global_replication_group_description(impl Into<String>)`](crate::client::fluent_builders::CreateGlobalReplicationGroup::global_replication_group_description) / [`set_global_replication_group_description(Option<String>)`](crate::client::fluent_builders::CreateGlobalReplicationGroup::set_global_replication_group_description): <p>Provides details of the Global datastore</p>
    ///   - [`primary_replication_group_id(impl Into<String>)`](crate::client::fluent_builders::CreateGlobalReplicationGroup::primary_replication_group_id) / [`set_primary_replication_group_id(Option<String>)`](crate::client::fluent_builders::CreateGlobalReplicationGroup::set_primary_replication_group_id): <p>The name of the primary cluster that accepts writes and will replicate updates to the secondary cluster.</p>
    /// - On success, responds with [`CreateGlobalReplicationGroupOutput`](crate::output::CreateGlobalReplicationGroupOutput) with field(s):
    ///   - [`global_replication_group(Option<GlobalReplicationGroup>)`](crate::output::CreateGlobalReplicationGroupOutput::global_replication_group): <p>Consists of a primary cluster that accepts writes and an associated secondary cluster that resides in a different Amazon region. The secondary cluster accepts only reads. The primary cluster automatically replicates updates to the secondary cluster.</p>  <ul>   <li> <p>The <b>GlobalReplicationGroupIdSuffix</b> represents the name of the Global datastore, which is what you use to associate a secondary cluster.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<CreateGlobalReplicationGroupError>`](crate::error::CreateGlobalReplicationGroupError)
    pub fn create_global_replication_group(
        &self,
    ) -> crate::client::fluent_builders::CreateGlobalReplicationGroup {
        crate::client::fluent_builders::CreateGlobalReplicationGroup::new(self.handle.clone())
    }
}
