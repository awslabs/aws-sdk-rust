// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DecreaseNodeGroupsInGlobalReplicationGroup`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_replication_group_id(impl Into<String>)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::global_replication_group_id) / [`set_global_replication_group_id(Option<String>)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::set_global_replication_group_id): <p>The name of the Global datastore</p>
    ///   - [`node_group_count(i32)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::node_group_count) / [`set_node_group_count(i32)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::set_node_group_count): <p>The number of node groups (shards) that results from the modification of the shard configuration</p>
    ///   - [`global_node_groups_to_remove(Vec<String>)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::global_node_groups_to_remove) / [`set_global_node_groups_to_remove(Option<Vec<String>>)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::set_global_node_groups_to_remove): <p>If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRemove is a list of NodeGroupIds to remove from the cluster. ElastiCache for Redis will attempt to remove all node groups listed by GlobalNodeGroupsToRemove from the cluster. </p>
    ///   - [`global_node_groups_to_retain(Vec<String>)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::global_node_groups_to_retain) / [`set_global_node_groups_to_retain(Option<Vec<String>>)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::set_global_node_groups_to_retain): <p>If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRetain is a list of NodeGroupIds to retain from the cluster. ElastiCache for Redis will attempt to retain all node groups listed by GlobalNodeGroupsToRetain from the cluster. </p>
    ///   - [`apply_immediately(bool)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::apply_immediately) / [`set_apply_immediately(bool)`](crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::set_apply_immediately): <p>Indicates that the shard reconfiguration process begins immediately. At present, the only permitted value for this parameter is true. </p>
    /// - On success, responds with [`DecreaseNodeGroupsInGlobalReplicationGroupOutput`](crate::output::DecreaseNodeGroupsInGlobalReplicationGroupOutput) with field(s):
    ///   - [`global_replication_group(Option<GlobalReplicationGroup>)`](crate::output::DecreaseNodeGroupsInGlobalReplicationGroupOutput::global_replication_group): <p>Consists of a primary cluster that accepts writes and an associated secondary cluster that resides in a different Amazon region. The secondary cluster accepts only reads. The primary cluster automatically replicates updates to the secondary cluster.</p>  <ul>   <li> <p>The <b>GlobalReplicationGroupIdSuffix</b> represents the name of the Global datastore, which is what you use to associate a secondary cluster.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<DecreaseNodeGroupsInGlobalReplicationGroupError>`](crate::error::DecreaseNodeGroupsInGlobalReplicationGroupError)
    pub fn decrease_node_groups_in_global_replication_group(
        &self,
    ) -> crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup {
        crate::client::fluent_builders::DecreaseNodeGroupsInGlobalReplicationGroup::new(
            self.handle.clone(),
        )
    }
}
