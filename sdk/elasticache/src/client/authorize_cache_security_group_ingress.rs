// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AuthorizeCacheSecurityGroupIngress`](crate::operation::authorize_cache_security_group_ingress::builders::AuthorizeCacheSecurityGroupIngressFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cache_security_group_name(impl Into<String>)`](crate::operation::authorize_cache_security_group_ingress::builders::AuthorizeCacheSecurityGroupIngressFluentBuilder::cache_security_group_name) / [`set_cache_security_group_name(Option<String>)`](crate::operation::authorize_cache_security_group_ingress::builders::AuthorizeCacheSecurityGroupIngressFluentBuilder::set_cache_security_group_name):<br>required: **true**<br><p>The cache security group that allows network ingress.</p><br>
    ///   - [`ec2_security_group_name(impl Into<String>)`](crate::operation::authorize_cache_security_group_ingress::builders::AuthorizeCacheSecurityGroupIngressFluentBuilder::ec2_security_group_name) / [`set_ec2_security_group_name(Option<String>)`](crate::operation::authorize_cache_security_group_ingress::builders::AuthorizeCacheSecurityGroupIngressFluentBuilder::set_ec2_security_group_name):<br>required: **true**<br><p>The Amazon EC2 security group to be authorized for ingress to the cache security group.</p><br>
    ///   - [`ec2_security_group_owner_id(impl Into<String>)`](crate::operation::authorize_cache_security_group_ingress::builders::AuthorizeCacheSecurityGroupIngressFluentBuilder::ec2_security_group_owner_id) / [`set_ec2_security_group_owner_id(Option<String>)`](crate::operation::authorize_cache_security_group_ingress::builders::AuthorizeCacheSecurityGroupIngressFluentBuilder::set_ec2_security_group_owner_id):<br>required: **true**<br><p>The Amazon account number of the Amazon EC2 security group owner. Note that this is not the same thing as an Amazon access key ID - you must provide a valid Amazon account number for this parameter.</p><br>
    /// - On success, responds with [`AuthorizeCacheSecurityGroupIngressOutput`](crate::operation::authorize_cache_security_group_ingress::AuthorizeCacheSecurityGroupIngressOutput) with field(s):
    ///   - [`cache_security_group(Option<CacheSecurityGroup>)`](crate::operation::authorize_cache_security_group_ingress::AuthorizeCacheSecurityGroupIngressOutput::cache_security_group): <p>Represents the output of one of the following operations:</p>  <ul>   <li> <p> <code>AuthorizeCacheSecurityGroupIngress</code> </p> </li>   <li> <p> <code>CreateCacheSecurityGroup</code> </p> </li>   <li> <p> <code>RevokeCacheSecurityGroupIngress</code> </p> </li>  </ul>
    /// - On failure, responds with [`SdkError<AuthorizeCacheSecurityGroupIngressError>`](crate::operation::authorize_cache_security_group_ingress::AuthorizeCacheSecurityGroupIngressError)
    pub fn authorize_cache_security_group_ingress(
        &self,
    ) -> crate::operation::authorize_cache_security_group_ingress::builders::AuthorizeCacheSecurityGroupIngressFluentBuilder {
        crate::operation::authorize_cache_security_group_ingress::builders::AuthorizeCacheSecurityGroupIngressFluentBuilder::new(self.handle.clone())
    }
}
