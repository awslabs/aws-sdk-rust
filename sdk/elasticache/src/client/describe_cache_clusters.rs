// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeCacheClusters`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cache_cluster_id(impl Into<String>)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::cache_cluster_id) / [`set_cache_cluster_id(Option<String>)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::set_cache_cluster_id):<br>required: **false**<br><p>The user-supplied cluster identifier. If this parameter is specified, only information about that specific cluster is returned. This parameter isn't case sensitive.</p><br>
    ///   - [`max_records(i32)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p>  <p>Default: 100</p>  <p>Constraints: minimum 20; maximum 100.</p><br>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::set_marker):<br>required: **false**<br><p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p><br>
    ///   - [`show_cache_node_info(bool)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::show_cache_node_info) / [`set_show_cache_node_info(Option<bool>)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::set_show_cache_node_info):<br>required: **false**<br><p>An optional flag that can be included in the <code>DescribeCacheCluster</code> request to retrieve information about the individual cache nodes.</p><br>
    ///   - [`show_cache_clusters_not_in_replication_groups(bool)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::show_cache_clusters_not_in_replication_groups) / [`set_show_cache_clusters_not_in_replication_groups(Option<bool>)`](crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::set_show_cache_clusters_not_in_replication_groups):<br>required: **false**<br><p>An optional flag that can be included in the <code>DescribeCacheCluster</code> request to show only nodes (API/CLI: clusters) that are not members of a replication group. In practice, this mean Memcached and single node Redis clusters.</p><br>
    /// - On success, responds with [`DescribeCacheClustersOutput`](crate::operation::describe_cache_clusters::DescribeCacheClustersOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_cache_clusters::DescribeCacheClustersOutput::marker): <p>Provides an identifier to allow retrieval of paginated results.</p>
    ///   - [`cache_clusters(Option<Vec::<CacheCluster>>)`](crate::operation::describe_cache_clusters::DescribeCacheClustersOutput::cache_clusters): <p>A list of clusters. Each item in the list contains detailed information about one cluster.</p>
    /// - On failure, responds with [`SdkError<DescribeCacheClustersError>`](crate::operation::describe_cache_clusters::DescribeCacheClustersError)
    pub fn describe_cache_clusters(&self) -> crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder {
        crate::operation::describe_cache_clusters::builders::DescribeCacheClustersFluentBuilder::new(self.handle.clone())
    }
}
