// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PurchaseReservedCacheNodesOffering`](crate::client::fluent_builders::PurchaseReservedCacheNodesOffering) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`reserved_cache_nodes_offering_id(impl Into<String>)`](crate::client::fluent_builders::PurchaseReservedCacheNodesOffering::reserved_cache_nodes_offering_id) / [`set_reserved_cache_nodes_offering_id(Option<String>)`](crate::client::fluent_builders::PurchaseReservedCacheNodesOffering::set_reserved_cache_nodes_offering_id): <p>The ID of the reserved cache node offering to purchase.</p>  <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>
    ///   - [`reserved_cache_node_id(impl Into<String>)`](crate::client::fluent_builders::PurchaseReservedCacheNodesOffering::reserved_cache_node_id) / [`set_reserved_cache_node_id(Option<String>)`](crate::client::fluent_builders::PurchaseReservedCacheNodesOffering::set_reserved_cache_node_id): <p>A customer-specified identifier to track this reservation.</p> <note>   <p>The Reserved Cache Node ID is an unique customer-specified identifier to track this reservation. If this parameter is not specified, ElastiCache automatically generates an identifier for the reservation.</p>  </note>  <p>Example: myreservationID</p>
    ///   - [`cache_node_count(i32)`](crate::client::fluent_builders::PurchaseReservedCacheNodesOffering::cache_node_count) / [`set_cache_node_count(Option<i32>)`](crate::client::fluent_builders::PurchaseReservedCacheNodesOffering::set_cache_node_count): <p>The number of cache node instances to reserve.</p>  <p>Default: <code>1</code> </p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::PurchaseReservedCacheNodesOffering::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::PurchaseReservedCacheNodesOffering::set_tags): <p>A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.</p>
    /// - On success, responds with [`PurchaseReservedCacheNodesOfferingOutput`](crate::output::PurchaseReservedCacheNodesOfferingOutput) with field(s):
    ///   - [`reserved_cache_node(Option<ReservedCacheNode>)`](crate::output::PurchaseReservedCacheNodesOfferingOutput::reserved_cache_node): <p>Represents the output of a <code>PurchaseReservedCacheNodesOffering</code> operation.</p>
    /// - On failure, responds with [`SdkError<PurchaseReservedCacheNodesOfferingError>`](crate::error::PurchaseReservedCacheNodesOfferingError)
    pub fn purchase_reserved_cache_nodes_offering(
        &self,
    ) -> crate::client::fluent_builders::PurchaseReservedCacheNodesOffering {
        crate::client::fluent_builders::PurchaseReservedCacheNodesOffering::new(self.handle.clone())
    }
}
