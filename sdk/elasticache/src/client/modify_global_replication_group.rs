// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyGlobalReplicationGroup`](crate::client::fluent_builders::ModifyGlobalReplicationGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_replication_group_id(impl Into<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::global_replication_group_id) / [`set_global_replication_group_id(Option<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::set_global_replication_group_id): <p>The name of the Global datastore</p>
    ///   - [`apply_immediately(bool)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::apply_immediately) / [`set_apply_immediately(bool)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::set_apply_immediately): <p>This parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible. Modifications to Global Replication Groups cannot be requested to be applied in PreferredMaintenceWindow. </p>
    ///   - [`cache_node_type(impl Into<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::cache_node_type) / [`set_cache_node_type(Option<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::set_cache_node_type): <p>A valid cache node type that you want to scale this Global datastore to.</p>
    ///   - [`engine_version(impl Into<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::engine_version) / [`set_engine_version(Option<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::set_engine_version): <p>The upgraded version of the cache engine to be run on the clusters in the Global datastore. </p>
    ///   - [`cache_parameter_group_name(impl Into<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::cache_parameter_group_name) / [`set_cache_parameter_group_name(Option<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::set_cache_parameter_group_name): <p>The name of the cache parameter group to use with the Global datastore. It must be compatible with the major engine version used by the Global datastore.</p>
    ///   - [`global_replication_group_description(impl Into<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::global_replication_group_description) / [`set_global_replication_group_description(Option<String>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::set_global_replication_group_description): <p>A description of the Global datastore</p>
    ///   - [`automatic_failover_enabled(bool)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::automatic_failover_enabled) / [`set_automatic_failover_enabled(Option<bool>)`](crate::client::fluent_builders::ModifyGlobalReplicationGroup::set_automatic_failover_enabled): <p>Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure. </p>
    /// - On success, responds with [`ModifyGlobalReplicationGroupOutput`](crate::output::ModifyGlobalReplicationGroupOutput) with field(s):
    ///   - [`global_replication_group(Option<GlobalReplicationGroup>)`](crate::output::ModifyGlobalReplicationGroupOutput::global_replication_group): <p>Consists of a primary cluster that accepts writes and an associated secondary cluster that resides in a different Amazon region. The secondary cluster accepts only reads. The primary cluster automatically replicates updates to the secondary cluster.</p>  <ul>   <li> <p>The <b>GlobalReplicationGroupIdSuffix</b> represents the name of the Global datastore, which is what you use to associate a secondary cluster.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<ModifyGlobalReplicationGroupError>`](crate::error::ModifyGlobalReplicationGroupError)
    pub fn modify_global_replication_group(
        &self,
    ) -> crate::client::fluent_builders::ModifyGlobalReplicationGroup {
        crate::client::fluent_builders::ModifyGlobalReplicationGroup::new(self.handle.clone())
    }
}
