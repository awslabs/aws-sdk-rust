// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartMigration`](crate::client::fluent_builders::StartMigration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`replication_group_id(impl Into<String>)`](crate::client::fluent_builders::StartMigration::replication_group_id) / [`set_replication_group_id(Option<String>)`](crate::client::fluent_builders::StartMigration::set_replication_group_id): <p>The ID of the replication group to which data should be migrated.</p>
    ///   - [`customer_node_endpoint_list(Vec<CustomerNodeEndpoint>)`](crate::client::fluent_builders::StartMigration::customer_node_endpoint_list) / [`set_customer_node_endpoint_list(Option<Vec<CustomerNodeEndpoint>>)`](crate::client::fluent_builders::StartMigration::set_customer_node_endpoint_list): <p>List of endpoints from which data should be migrated. For Redis (cluster mode disabled), list should have only one element.</p>
    /// - On success, responds with [`StartMigrationOutput`](crate::output::StartMigrationOutput) with field(s):
    ///   - [`replication_group(Option<ReplicationGroup>)`](crate::output::StartMigrationOutput::replication_group): <p>Contains all of the attributes of a specific Redis replication group.</p>
    /// - On failure, responds with [`SdkError<StartMigrationError>`](crate::error::StartMigrationError)
    pub fn start_migration(&self) -> crate::client::fluent_builders::StartMigration {
        crate::client::fluent_builders::StartMigration::new(self.handle.clone())
    }
}
