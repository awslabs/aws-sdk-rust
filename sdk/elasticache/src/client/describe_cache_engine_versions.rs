// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeCacheEngineVersions`](crate::client::fluent_builders::DescribeCacheEngineVersions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeCacheEngineVersions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`engine(impl Into<String>)`](crate::client::fluent_builders::DescribeCacheEngineVersions::engine) / [`set_engine(Option<String>)`](crate::client::fluent_builders::DescribeCacheEngineVersions::set_engine): <p>The cache engine to return. Valid values: <code>memcached</code> | <code>redis</code> </p>
    ///   - [`engine_version(impl Into<String>)`](crate::client::fluent_builders::DescribeCacheEngineVersions::engine_version) / [`set_engine_version(Option<String>)`](crate::client::fluent_builders::DescribeCacheEngineVersions::set_engine_version): <p>The cache engine version to return.</p>  <p>Example: <code>1.4.14</code> </p>
    ///   - [`cache_parameter_group_family(impl Into<String>)`](crate::client::fluent_builders::DescribeCacheEngineVersions::cache_parameter_group_family) / [`set_cache_parameter_group_family(Option<String>)`](crate::client::fluent_builders::DescribeCacheEngineVersions::set_cache_parameter_group_family): <p>The name of a specific cache parameter group family to return details for.</p>  <p>Valid values are: <code>memcached1.4</code> | <code>memcached1.5</code> | <code>memcached1.6</code> | <code>redis2.6</code> | <code>redis2.8</code> | <code>redis3.2</code> | <code>redis4.0</code> | <code>redis5.0</code> | <code>redis6.x</code> | <code>redis6.2</code> | <code>redis7</code> </p>  <p>Constraints:</p>  <ul>   <li> <p>Must be 1 to 255 alphanumeric characters</p> </li>   <li> <p>First character must be a letter</p> </li>   <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li>  </ul>
    ///   - [`max_records(i32)`](crate::client::fluent_builders::DescribeCacheEngineVersions::max_records) / [`set_max_records(Option<i32>)`](crate::client::fluent_builders::DescribeCacheEngineVersions::set_max_records): <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p>  <p>Default: 100</p>  <p>Constraints: minimum 20; maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeCacheEngineVersions::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeCacheEngineVersions::set_marker): <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    ///   - [`default_only(bool)`](crate::client::fluent_builders::DescribeCacheEngineVersions::default_only) / [`set_default_only(bool)`](crate::client::fluent_builders::DescribeCacheEngineVersions::set_default_only): <p>If <code>true</code>, specifies that only the default version of the specified engine or engine and major version combination is to be returned.</p>
    /// - On success, responds with [`DescribeCacheEngineVersionsOutput`](crate::output::DescribeCacheEngineVersionsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::output::DescribeCacheEngineVersionsOutput::marker): <p>Provides an identifier to allow retrieval of paginated results.</p>
    ///   - [`cache_engine_versions(Option<Vec<CacheEngineVersion>>)`](crate::output::DescribeCacheEngineVersionsOutput::cache_engine_versions): <p>A list of cache engine version details. Each element in the list contains detailed information about one cache engine version.</p>
    /// - On failure, responds with [`SdkError<DescribeCacheEngineVersionsError>`](crate::error::DescribeCacheEngineVersionsError)
    pub fn describe_cache_engine_versions(
        &self,
    ) -> crate::client::fluent_builders::DescribeCacheEngineVersions {
        crate::client::fluent_builders::DescribeCacheEngineVersions::new(self.handle.clone())
    }
}
