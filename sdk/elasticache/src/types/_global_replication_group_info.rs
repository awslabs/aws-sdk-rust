// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The name of the Global datastore and role of this replication group in the Global datastore.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GlobalReplicationGroupInfo {
    /// <p>The name of the Global datastore</p>
    #[doc(hidden)]
    pub global_replication_group_id: std::option::Option<std::string::String>,
    /// <p>The role of the replication group in a Global datastore. Can be primary or secondary.</p>
    #[doc(hidden)]
    pub global_replication_group_member_role: std::option::Option<std::string::String>,
}
impl GlobalReplicationGroupInfo {
    /// <p>The name of the Global datastore</p>
    pub fn global_replication_group_id(&self) -> std::option::Option<&str> {
        self.global_replication_group_id.as_deref()
    }
    /// <p>The role of the replication group in a Global datastore. Can be primary or secondary.</p>
    pub fn global_replication_group_member_role(&self) -> std::option::Option<&str> {
        self.global_replication_group_member_role.as_deref()
    }
}
impl GlobalReplicationGroupInfo {
    /// Creates a new builder-style object to manufacture [`GlobalReplicationGroupInfo`](crate::types::GlobalReplicationGroupInfo).
    pub fn builder() -> crate::types::builders::GlobalReplicationGroupInfoBuilder {
        crate::types::builders::GlobalReplicationGroupInfoBuilder::default()
    }
}

/// A builder for [`GlobalReplicationGroupInfo`](crate::types::GlobalReplicationGroupInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GlobalReplicationGroupInfoBuilder {
    pub(crate) global_replication_group_id: std::option::Option<std::string::String>,
    pub(crate) global_replication_group_member_role: std::option::Option<std::string::String>,
}
impl GlobalReplicationGroupInfoBuilder {
    /// <p>The name of the Global datastore</p>
    pub fn global_replication_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.global_replication_group_id = Some(input.into());
        self
    }
    /// <p>The name of the Global datastore</p>
    pub fn set_global_replication_group_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.global_replication_group_id = input;
        self
    }
    /// <p>The role of the replication group in a Global datastore. Can be primary or secondary.</p>
    pub fn global_replication_group_member_role(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.global_replication_group_member_role = Some(input.into());
        self
    }
    /// <p>The role of the replication group in a Global datastore. Can be primary or secondary.</p>
    pub fn set_global_replication_group_member_role(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.global_replication_group_member_role = input;
        self
    }
    /// Consumes the builder and constructs a [`GlobalReplicationGroupInfo`](crate::types::GlobalReplicationGroupInfo).
    pub fn build(self) -> crate::types::GlobalReplicationGroupInfo {
        crate::types::GlobalReplicationGroupInfo {
            global_replication_group_id: self.global_replication_group_id,
            global_replication_group_member_role: self.global_replication_group_member_role,
        }
    }
}
