// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the progress of an online resharding operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SlotMigration {
    /// <p>The percentage of the slot migration that is complete.</p>
    #[doc(hidden)]
    pub progress_percentage: f64,
}
impl SlotMigration {
    /// <p>The percentage of the slot migration that is complete.</p>
    pub fn progress_percentage(&self) -> f64 {
        self.progress_percentage
    }
}
impl SlotMigration {
    /// Creates a new builder-style object to manufacture [`SlotMigration`](crate::types::SlotMigration).
    pub fn builder() -> crate::types::builders::SlotMigrationBuilder {
        crate::types::builders::SlotMigrationBuilder::default()
    }
}

/// A builder for [`SlotMigration`](crate::types::SlotMigration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SlotMigrationBuilder {
    pub(crate) progress_percentage: std::option::Option<f64>,
}
impl SlotMigrationBuilder {
    /// <p>The percentage of the slot migration that is complete.</p>
    pub fn progress_percentage(mut self, input: f64) -> Self {
        self.progress_percentage = Some(input);
        self
    }
    /// <p>The percentage of the slot migration that is complete.</p>
    pub fn set_progress_percentage(mut self, input: std::option::Option<f64>) -> Self {
        self.progress_percentage = input;
        self
    }
    /// Consumes the builder and constructs a [`SlotMigration`](crate::types::SlotMigration).
    pub fn build(self) -> crate::types::SlotMigration {
        crate::types::SlotMigration {
            progress_percentage: self.progress_percentage.unwrap_or_default(),
        }
    }
}
