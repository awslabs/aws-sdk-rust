// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of the service update on the cache node</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CacheNodeUpdateStatus {
    /// <p>The node ID of the cache cluster</p>
    #[doc(hidden)]
    pub cache_node_id: std::option::Option<std::string::String>,
    /// <p>The update status of the node</p>
    #[doc(hidden)]
    pub node_update_status: std::option::Option<crate::types::NodeUpdateStatus>,
    /// <p>The deletion date of the node</p>
    #[doc(hidden)]
    pub node_deletion_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The start date of the update for a node</p>
    #[doc(hidden)]
    pub node_update_start_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The end date of the update for a node</p>
    #[doc(hidden)]
    pub node_update_end_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Reflects whether the update was initiated by the customer or automatically applied</p>
    #[doc(hidden)]
    pub node_update_initiated_by: std::option::Option<crate::types::NodeUpdateInitiatedBy>,
    /// <p>The date when the update is triggered</p>
    #[doc(hidden)]
    pub node_update_initiated_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date when the NodeUpdateStatus was last modified&gt;</p>
    #[doc(hidden)]
    pub node_update_status_modified_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl CacheNodeUpdateStatus {
    /// <p>The node ID of the cache cluster</p>
    pub fn cache_node_id(&self) -> std::option::Option<&str> {
        self.cache_node_id.as_deref()
    }
    /// <p>The update status of the node</p>
    pub fn node_update_status(&self) -> std::option::Option<&crate::types::NodeUpdateStatus> {
        self.node_update_status.as_ref()
    }
    /// <p>The deletion date of the node</p>
    pub fn node_deletion_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.node_deletion_date.as_ref()
    }
    /// <p>The start date of the update for a node</p>
    pub fn node_update_start_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.node_update_start_date.as_ref()
    }
    /// <p>The end date of the update for a node</p>
    pub fn node_update_end_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.node_update_end_date.as_ref()
    }
    /// <p>Reflects whether the update was initiated by the customer or automatically applied</p>
    pub fn node_update_initiated_by(
        &self,
    ) -> std::option::Option<&crate::types::NodeUpdateInitiatedBy> {
        self.node_update_initiated_by.as_ref()
    }
    /// <p>The date when the update is triggered</p>
    pub fn node_update_initiated_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.node_update_initiated_date.as_ref()
    }
    /// <p>The date when the NodeUpdateStatus was last modified&gt;</p>
    pub fn node_update_status_modified_date(
        &self,
    ) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.node_update_status_modified_date.as_ref()
    }
}
impl CacheNodeUpdateStatus {
    /// Creates a new builder-style object to manufacture [`CacheNodeUpdateStatus`](crate::types::CacheNodeUpdateStatus).
    pub fn builder() -> crate::types::builders::CacheNodeUpdateStatusBuilder {
        crate::types::builders::CacheNodeUpdateStatusBuilder::default()
    }
}

/// A builder for [`CacheNodeUpdateStatus`](crate::types::CacheNodeUpdateStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CacheNodeUpdateStatusBuilder {
    pub(crate) cache_node_id: std::option::Option<std::string::String>,
    pub(crate) node_update_status: std::option::Option<crate::types::NodeUpdateStatus>,
    pub(crate) node_deletion_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) node_update_start_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) node_update_end_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) node_update_initiated_by: std::option::Option<crate::types::NodeUpdateInitiatedBy>,
    pub(crate) node_update_initiated_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) node_update_status_modified_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl CacheNodeUpdateStatusBuilder {
    /// <p>The node ID of the cache cluster</p>
    pub fn cache_node_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.cache_node_id = Some(input.into());
        self
    }
    /// <p>The node ID of the cache cluster</p>
    pub fn set_cache_node_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cache_node_id = input;
        self
    }
    /// <p>The update status of the node</p>
    pub fn node_update_status(mut self, input: crate::types::NodeUpdateStatus) -> Self {
        self.node_update_status = Some(input);
        self
    }
    /// <p>The update status of the node</p>
    pub fn set_node_update_status(
        mut self,
        input: std::option::Option<crate::types::NodeUpdateStatus>,
    ) -> Self {
        self.node_update_status = input;
        self
    }
    /// <p>The deletion date of the node</p>
    pub fn node_deletion_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.node_deletion_date = Some(input);
        self
    }
    /// <p>The deletion date of the node</p>
    pub fn set_node_deletion_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.node_deletion_date = input;
        self
    }
    /// <p>The start date of the update for a node</p>
    pub fn node_update_start_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.node_update_start_date = Some(input);
        self
    }
    /// <p>The start date of the update for a node</p>
    pub fn set_node_update_start_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.node_update_start_date = input;
        self
    }
    /// <p>The end date of the update for a node</p>
    pub fn node_update_end_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.node_update_end_date = Some(input);
        self
    }
    /// <p>The end date of the update for a node</p>
    pub fn set_node_update_end_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.node_update_end_date = input;
        self
    }
    /// <p>Reflects whether the update was initiated by the customer or automatically applied</p>
    pub fn node_update_initiated_by(mut self, input: crate::types::NodeUpdateInitiatedBy) -> Self {
        self.node_update_initiated_by = Some(input);
        self
    }
    /// <p>Reflects whether the update was initiated by the customer or automatically applied</p>
    pub fn set_node_update_initiated_by(
        mut self,
        input: std::option::Option<crate::types::NodeUpdateInitiatedBy>,
    ) -> Self {
        self.node_update_initiated_by = input;
        self
    }
    /// <p>The date when the update is triggered</p>
    pub fn node_update_initiated_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.node_update_initiated_date = Some(input);
        self
    }
    /// <p>The date when the update is triggered</p>
    pub fn set_node_update_initiated_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.node_update_initiated_date = input;
        self
    }
    /// <p>The date when the NodeUpdateStatus was last modified&gt;</p>
    pub fn node_update_status_modified_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.node_update_status_modified_date = Some(input);
        self
    }
    /// <p>The date when the NodeUpdateStatus was last modified&gt;</p>
    pub fn set_node_update_status_modified_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.node_update_status_modified_date = input;
        self
    }
    /// Consumes the builder and constructs a [`CacheNodeUpdateStatus`](crate::types::CacheNodeUpdateStatus).
    pub fn build(self) -> crate::types::CacheNodeUpdateStatus {
        crate::types::CacheNodeUpdateStatus {
            cache_node_id: self.cache_node_id,
            node_update_status: self.node_update_status,
            node_deletion_date: self.node_deletion_date,
            node_update_start_date: self.node_update_start_date,
            node_update_end_date: self.node_update_end_date,
            node_update_initiated_by: self.node_update_initiated_by,
            node_update_initiated_date: self.node_update_initiated_date,
            node_update_status_modified_date: self.node_update_status_modified_date,
        }
    }
}
