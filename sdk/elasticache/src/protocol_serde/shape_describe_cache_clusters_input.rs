// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_describe_cache_clusters_input_input(
    input: &crate::operation::describe_cache_clusters::DescribeCacheClustersInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "DescribeCacheClusters", "2015-02-02");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("CacheClusterId");
    if let Some(var_2) = &input.cache_cluster_id {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("MaxRecords");
    if let Some(var_4) = &input.max_records {
        scope_3.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("Marker");
    if let Some(var_6) = &input.marker {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("ShowCacheNodeInfo");
    if let Some(var_8) = &input.show_cache_node_info {
        scope_7.boolean(*var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("ShowCacheClustersNotInReplicationGroups");
    if let Some(var_10) = &input.show_cache_clusters_not_in_replication_groups {
        scope_9.boolean(*var_10);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
