// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_global_replication_group_member(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::GlobalReplicationGroupMember, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::GlobalReplicationGroupMember::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ReplicationGroupId") /* ReplicationGroupId com.amazonaws.elasticache#GlobalReplicationGroupMember$ReplicationGroupId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_replication_group_id(var_1);
            }
            ,
            s if s.matches("ReplicationGroupRegion") /* ReplicationGroupRegion com.amazonaws.elasticache#GlobalReplicationGroupMember$ReplicationGroupRegion */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_replication_group_region(var_2);
            }
            ,
            s if s.matches("Role") /* Role com.amazonaws.elasticache#GlobalReplicationGroupMember$Role */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_role(var_3);
            }
            ,
            s if s.matches("AutomaticFailover") /* AutomaticFailover com.amazonaws.elasticache#GlobalReplicationGroupMember$AutomaticFailover */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::AutomaticFailoverStatus, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::AutomaticFailoverStatus::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_automatic_failover(var_4);
            }
            ,
            s if s.matches("Status") /* Status com.amazonaws.elasticache#GlobalReplicationGroupMember$Status */ =>  {
                let var_5 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_5);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
