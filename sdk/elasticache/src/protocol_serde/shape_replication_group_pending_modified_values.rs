// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_replication_group_pending_modified_values(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<
    crate::types::ReplicationGroupPendingModifiedValues,
    aws_smithy_xml::decode::XmlDecodeError,
> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ReplicationGroupPendingModifiedValues::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("PrimaryClusterId") /* PrimaryClusterId com.amazonaws.elasticache#ReplicationGroupPendingModifiedValues$PrimaryClusterId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_primary_cluster_id(var_1);
            }
            ,
            s if s.matches("AutomaticFailoverStatus") /* AutomaticFailoverStatus com.amazonaws.elasticache#ReplicationGroupPendingModifiedValues$AutomaticFailoverStatus */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::PendingAutomaticFailoverStatus, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::PendingAutomaticFailoverStatus::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_automatic_failover_status(var_2);
            }
            ,
            s if s.matches("Resharding") /* Resharding com.amazonaws.elasticache#ReplicationGroupPendingModifiedValues$Resharding */ =>  {
                let var_3 =
                    Some(
                        crate::protocol_serde::shape_resharding_status::de_resharding_status(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_resharding(var_3);
            }
            ,
            s if s.matches("AuthTokenStatus") /* AuthTokenStatus com.amazonaws.elasticache#ReplicationGroupPendingModifiedValues$AuthTokenStatus */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::AuthTokenUpdateStatus, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::AuthTokenUpdateStatus::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_auth_token_status(var_4);
            }
            ,
            s if s.matches("UserGroups") /* UserGroups com.amazonaws.elasticache#ReplicationGroupPendingModifiedValues$UserGroups */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_user_groups_update_status::de_user_groups_update_status(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_user_groups(var_5);
            }
            ,
            s if s.matches("LogDeliveryConfigurations") /* LogDeliveryConfigurations com.amazonaws.elasticache#ReplicationGroupPendingModifiedValues$LogDeliveryConfigurations */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_pending_log_delivery_configuration_list::de_pending_log_delivery_configuration_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_log_delivery_configurations(var_6);
            }
            ,
            s if s.matches("TransitEncryptionEnabled") /* TransitEncryptionEnabled com.amazonaws.elasticache#ReplicationGroupPendingModifiedValues$TransitEncryptionEnabled */ =>  {
                let var_7 =
                    Some(
                         {
                            <bool as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.elasticache#BooleanOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_transit_encryption_enabled(var_7);
            }
            ,
            s if s.matches("TransitEncryptionMode") /* TransitEncryptionMode com.amazonaws.elasticache#ReplicationGroupPendingModifiedValues$TransitEncryptionMode */ =>  {
                let var_8 =
                    Some(
                        Result::<crate::types::TransitEncryptionMode, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::TransitEncryptionMode::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_transit_encryption_mode(var_8);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
