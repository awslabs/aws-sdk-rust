// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_replication_group(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::ReplicationGroup, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ReplicationGroup::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ReplicationGroupId") /* ReplicationGroupId com.amazonaws.elasticache#ReplicationGroup$ReplicationGroupId */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_replication_group_id(var_1);
            }
            ,
            s if s.matches("Description") /* Description com.amazonaws.elasticache#ReplicationGroup$Description */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_2);
            }
            ,
            s if s.matches("GlobalReplicationGroupInfo") /* GlobalReplicationGroupInfo com.amazonaws.elasticache#ReplicationGroup$GlobalReplicationGroupInfo */ =>  {
                let var_3 =
                    Some(
                        crate::protocol_serde::shape_global_replication_group_info::de_global_replication_group_info(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_global_replication_group_info(var_3);
            }
            ,
            s if s.matches("Status") /* Status com.amazonaws.elasticache#ReplicationGroup$Status */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_4);
            }
            ,
            s if s.matches("PendingModifiedValues") /* PendingModifiedValues com.amazonaws.elasticache#ReplicationGroup$PendingModifiedValues */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_replication_group_pending_modified_values::de_replication_group_pending_modified_values(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_pending_modified_values(var_5);
            }
            ,
            s if s.matches("MemberClusters") /* MemberClusters com.amazonaws.elasticache#ReplicationGroup$MemberClusters */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_cluster_id_list::de_cluster_id_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_member_clusters(var_6);
            }
            ,
            s if s.matches("NodeGroups") /* NodeGroups com.amazonaws.elasticache#ReplicationGroup$NodeGroups */ =>  {
                let var_7 =
                    Some(
                        crate::protocol_serde::shape_node_group_list::de_node_group_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_node_groups(var_7);
            }
            ,
            s if s.matches("SnapshottingClusterId") /* SnapshottingClusterId com.amazonaws.elasticache#ReplicationGroup$SnapshottingClusterId */ =>  {
                let var_8 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_snapshotting_cluster_id(var_8);
            }
            ,
            s if s.matches("AutomaticFailover") /* AutomaticFailover com.amazonaws.elasticache#ReplicationGroup$AutomaticFailover */ =>  {
                let var_9 =
                    Some(
                        Result::<crate::types::AutomaticFailoverStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::AutomaticFailoverStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_automatic_failover(var_9);
            }
            ,
            s if s.matches("MultiAZ") /* MultiAZ com.amazonaws.elasticache#ReplicationGroup$MultiAZ */ =>  {
                let var_10 =
                    Some(
                        Result::<crate::types::MultiAzStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::MultiAzStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_multi_az(var_10);
            }
            ,
            s if s.matches("ConfigurationEndpoint") /* ConfigurationEndpoint com.amazonaws.elasticache#ReplicationGroup$ConfigurationEndpoint */ =>  {
                let var_11 =
                    Some(
                        crate::protocol_serde::shape_endpoint::de_endpoint(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_configuration_endpoint(var_11);
            }
            ,
            s if s.matches("SnapshotRetentionLimit") /* SnapshotRetentionLimit com.amazonaws.elasticache#ReplicationGroup$SnapshotRetentionLimit */ =>  {
                let var_12 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.elasticache#IntegerOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_snapshot_retention_limit(var_12);
            }
            ,
            s if s.matches("SnapshotWindow") /* SnapshotWindow com.amazonaws.elasticache#ReplicationGroup$SnapshotWindow */ =>  {
                let var_13 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_snapshot_window(var_13);
            }
            ,
            s if s.matches("ClusterEnabled") /* ClusterEnabled com.amazonaws.elasticache#ReplicationGroup$ClusterEnabled */ =>  {
                let var_14 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.elasticache#BooleanOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_cluster_enabled(var_14);
            }
            ,
            s if s.matches("CacheNodeType") /* CacheNodeType com.amazonaws.elasticache#ReplicationGroup$CacheNodeType */ =>  {
                let var_15 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_cache_node_type(var_15);
            }
            ,
            s if s.matches("AuthTokenEnabled") /* AuthTokenEnabled com.amazonaws.elasticache#ReplicationGroup$AuthTokenEnabled */ =>  {
                let var_16 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.elasticache#BooleanOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_auth_token_enabled(var_16);
            }
            ,
            s if s.matches("AuthTokenLastModifiedDate") /* AuthTokenLastModifiedDate com.amazonaws.elasticache#ReplicationGroup$AuthTokenLastModifiedDate */ =>  {
                let var_17 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.elasticache#TStamp`)"))
                        ?
                    )
                ;
                builder = builder.set_auth_token_last_modified_date(var_17);
            }
            ,
            s if s.matches("TransitEncryptionEnabled") /* TransitEncryptionEnabled com.amazonaws.elasticache#ReplicationGroup$TransitEncryptionEnabled */ =>  {
                let var_18 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.elasticache#BooleanOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_transit_encryption_enabled(var_18);
            }
            ,
            s if s.matches("AtRestEncryptionEnabled") /* AtRestEncryptionEnabled com.amazonaws.elasticache#ReplicationGroup$AtRestEncryptionEnabled */ =>  {
                let var_19 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.elasticache#BooleanOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_at_rest_encryption_enabled(var_19);
            }
            ,
            s if s.matches("MemberClustersOutpostArns") /* MemberClustersOutpostArns com.amazonaws.elasticache#ReplicationGroup$MemberClustersOutpostArns */ =>  {
                let var_20 =
                    Some(
                        crate::protocol_serde::shape_replication_group_outpost_arn_list::de_replication_group_outpost_arn_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_member_clusters_outpost_arns(var_20);
            }
            ,
            s if s.matches("KmsKeyId") /* KmsKeyId com.amazonaws.elasticache#ReplicationGroup$KmsKeyId */ =>  {
                let var_21 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_kms_key_id(var_21);
            }
            ,
            s if s.matches("ARN") /* ARN com.amazonaws.elasticache#ReplicationGroup$ARN */ =>  {
                let var_22 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_arn(var_22);
            }
            ,
            s if s.matches("UserGroupIds") /* UserGroupIds com.amazonaws.elasticache#ReplicationGroup$UserGroupIds */ =>  {
                let var_23 =
                    Some(
                        crate::protocol_serde::shape_user_group_id_list::de_user_group_id_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_user_group_ids(var_23);
            }
            ,
            s if s.matches("LogDeliveryConfigurations") /* LogDeliveryConfigurations com.amazonaws.elasticache#ReplicationGroup$LogDeliveryConfigurations */ =>  {
                let var_24 =
                    Some(
                        crate::protocol_serde::shape_log_delivery_configuration_list::de_log_delivery_configuration_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_log_delivery_configurations(var_24);
            }
            ,
            s if s.matches("ReplicationGroupCreateTime") /* ReplicationGroupCreateTime com.amazonaws.elasticache#ReplicationGroup$ReplicationGroupCreateTime */ =>  {
                let var_25 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.elasticache#TStamp`)"))
                        ?
                    )
                ;
                builder = builder.set_replication_group_create_time(var_25);
            }
            ,
            s if s.matches("DataTiering") /* DataTiering com.amazonaws.elasticache#ReplicationGroup$DataTiering */ =>  {
                let var_26 =
                    Some(
                        Result::<crate::types::DataTieringStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::DataTieringStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_data_tiering(var_26);
            }
            ,
            s if s.matches("AutoMinorVersionUpgrade") /* AutoMinorVersionUpgrade com.amazonaws.elasticache#ReplicationGroup$AutoMinorVersionUpgrade */ =>  {
                let var_27 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.elasticache#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_auto_minor_version_upgrade(var_27);
            }
            ,
            s if s.matches("NetworkType") /* NetworkType com.amazonaws.elasticache#ReplicationGroup$NetworkType */ =>  {
                let var_28 =
                    Some(
                        Result::<crate::types::NetworkType, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::NetworkType::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_network_type(var_28);
            }
            ,
            s if s.matches("IpDiscovery") /* IpDiscovery com.amazonaws.elasticache#ReplicationGroup$IpDiscovery */ =>  {
                let var_29 =
                    Some(
                        Result::<crate::types::IpDiscovery, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::IpDiscovery::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_ip_discovery(var_29);
            }
            ,
            s if s.matches("TransitEncryptionMode") /* TransitEncryptionMode com.amazonaws.elasticache#ReplicationGroup$TransitEncryptionMode */ =>  {
                let var_30 =
                    Some(
                        Result::<crate::types::TransitEncryptionMode, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::TransitEncryptionMode::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_transit_encryption_mode(var_30);
            }
            ,
            s if s.matches("ClusterMode") /* ClusterMode com.amazonaws.elasticache#ReplicationGroup$ClusterMode */ =>  {
                let var_31 =
                    Some(
                        Result::<crate::types::ClusterMode, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ClusterMode::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_cluster_mode(var_31);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
