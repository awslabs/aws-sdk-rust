// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An optional category of meeting features that contains audio-specific configurations, such as operating parameters for Amazon Voice Focus. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AudioFeatures {
    /// <p>Makes echo reduction available to clients who connect to the meeting.</p>
    #[doc(hidden)]
    pub echo_reduction: std::option::Option<crate::types::MeetingFeatureStatus>,
}
impl AudioFeatures {
    /// <p>Makes echo reduction available to clients who connect to the meeting.</p>
    pub fn echo_reduction(&self) -> std::option::Option<&crate::types::MeetingFeatureStatus> {
        self.echo_reduction.as_ref()
    }
}
impl AudioFeatures {
    /// Creates a new builder-style object to manufacture [`AudioFeatures`](crate::types::AudioFeatures).
    pub fn builder() -> crate::types::builders::AudioFeaturesBuilder {
        crate::types::builders::AudioFeaturesBuilder::default()
    }
}

/// A builder for [`AudioFeatures`](crate::types::AudioFeatures).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AudioFeaturesBuilder {
    pub(crate) echo_reduction: std::option::Option<crate::types::MeetingFeatureStatus>,
}
impl AudioFeaturesBuilder {
    /// <p>Makes echo reduction available to clients who connect to the meeting.</p>
    pub fn echo_reduction(mut self, input: crate::types::MeetingFeatureStatus) -> Self {
        self.echo_reduction = Some(input);
        self
    }
    /// <p>Makes echo reduction available to clients who connect to the meeting.</p>
    pub fn set_echo_reduction(
        mut self,
        input: std::option::Option<crate::types::MeetingFeatureStatus>,
    ) -> Self {
        self.echo_reduction = input;
        self
    }
    /// Consumes the builder and constructs a [`AudioFeatures`](crate::types::AudioFeatures).
    pub fn build(self) -> crate::types::AudioFeatures {
        crate::types::AudioFeatures {
            echo_reduction: self.echo_reduction,
        }
    }
}
