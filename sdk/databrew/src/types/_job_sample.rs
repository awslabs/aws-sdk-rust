// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a <code>JobSample</code> value isn't provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct JobSample {
    /// <p>A value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:</p>
    /// <ul>
    /// <li> <p>FULL_DATASET - The profile job is run on the entire dataset.</p> </li>
    /// <li> <p>CUSTOM_ROWS - The profile job is run on the number of rows specified in the <code>Size</code> parameter.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub mode: std::option::Option<crate::types::SampleMode>,
    /// <p>The <code>Size</code> parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.</p>
    /// <p>Long.MAX_VALUE = 9223372036854775807</p>
    #[doc(hidden)]
    pub size: std::option::Option<i64>,
}
impl JobSample {
    /// <p>A value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:</p>
    /// <ul>
    /// <li> <p>FULL_DATASET - The profile job is run on the entire dataset.</p> </li>
    /// <li> <p>CUSTOM_ROWS - The profile job is run on the number of rows specified in the <code>Size</code> parameter.</p> </li>
    /// </ul>
    pub fn mode(&self) -> std::option::Option<&crate::types::SampleMode> {
        self.mode.as_ref()
    }
    /// <p>The <code>Size</code> parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.</p>
    /// <p>Long.MAX_VALUE = 9223372036854775807</p>
    pub fn size(&self) -> std::option::Option<i64> {
        self.size
    }
}
impl JobSample {
    /// Creates a new builder-style object to manufacture [`JobSample`](crate::types::JobSample).
    pub fn builder() -> crate::types::builders::JobSampleBuilder {
        crate::types::builders::JobSampleBuilder::default()
    }
}

/// A builder for [`JobSample`](crate::types::JobSample).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct JobSampleBuilder {
    pub(crate) mode: std::option::Option<crate::types::SampleMode>,
    pub(crate) size: std::option::Option<i64>,
}
impl JobSampleBuilder {
    /// <p>A value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:</p>
    /// <ul>
    /// <li> <p>FULL_DATASET - The profile job is run on the entire dataset.</p> </li>
    /// <li> <p>CUSTOM_ROWS - The profile job is run on the number of rows specified in the <code>Size</code> parameter.</p> </li>
    /// </ul>
    pub fn mode(mut self, input: crate::types::SampleMode) -> Self {
        self.mode = Some(input);
        self
    }
    /// <p>A value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:</p>
    /// <ul>
    /// <li> <p>FULL_DATASET - The profile job is run on the entire dataset.</p> </li>
    /// <li> <p>CUSTOM_ROWS - The profile job is run on the number of rows specified in the <code>Size</code> parameter.</p> </li>
    /// </ul>
    pub fn set_mode(mut self, input: std::option::Option<crate::types::SampleMode>) -> Self {
        self.mode = input;
        self
    }
    /// <p>The <code>Size</code> parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.</p>
    /// <p>Long.MAX_VALUE = 9223372036854775807</p>
    pub fn size(mut self, input: i64) -> Self {
        self.size = Some(input);
        self
    }
    /// <p>The <code>Size</code> parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.</p>
    /// <p>Long.MAX_VALUE = 9223372036854775807</p>
    pub fn set_size(mut self, input: std::option::Option<i64>) -> Self {
        self.size = input;
        self
    }
    /// Consumes the builder and constructs a [`JobSample`](crate::types::JobSample).
    pub fn build(self) -> crate::types::JobSample {
        crate::types::JobSample {
            mode: self.mode,
            size: self.size,
        }
    }
}
