// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents additional options for correct interpretation of datetime parameters used in the Amazon S3 path of a dataset.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DatetimeOptions {
    /// <p>Required option, that defines the datetime format used for a date parameter in the Amazon S3 path. Should use only supported datetime specifiers and separation characters, all literal a-z or A-Z characters should be escaped with single quotes. E.g. "MM.dd.yyyy-'at'-HH:mm".</p>
    #[doc(hidden)]
    pub format: std::option::Option<std::string::String>,
    /// <p>Optional value for a timezone offset of the datetime parameter value in the Amazon S3 path. Shouldn't be used if Format for this parameter includes timezone fields. If no offset specified, UTC is assumed.</p>
    #[doc(hidden)]
    pub timezone_offset: std::option::Option<std::string::String>,
    /// <p>Optional value for a non-US locale code, needed for correct interpretation of some date formats.</p>
    #[doc(hidden)]
    pub locale_code: std::option::Option<std::string::String>,
}
impl DatetimeOptions {
    /// <p>Required option, that defines the datetime format used for a date parameter in the Amazon S3 path. Should use only supported datetime specifiers and separation characters, all literal a-z or A-Z characters should be escaped with single quotes. E.g. "MM.dd.yyyy-'at'-HH:mm".</p>
    pub fn format(&self) -> std::option::Option<&str> {
        self.format.as_deref()
    }
    /// <p>Optional value for a timezone offset of the datetime parameter value in the Amazon S3 path. Shouldn't be used if Format for this parameter includes timezone fields. If no offset specified, UTC is assumed.</p>
    pub fn timezone_offset(&self) -> std::option::Option<&str> {
        self.timezone_offset.as_deref()
    }
    /// <p>Optional value for a non-US locale code, needed for correct interpretation of some date formats.</p>
    pub fn locale_code(&self) -> std::option::Option<&str> {
        self.locale_code.as_deref()
    }
}
impl DatetimeOptions {
    /// Creates a new builder-style object to manufacture [`DatetimeOptions`](crate::types::DatetimeOptions).
    pub fn builder() -> crate::types::builders::DatetimeOptionsBuilder {
        crate::types::builders::DatetimeOptionsBuilder::default()
    }
}

/// A builder for [`DatetimeOptions`](crate::types::DatetimeOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DatetimeOptionsBuilder {
    pub(crate) format: std::option::Option<std::string::String>,
    pub(crate) timezone_offset: std::option::Option<std::string::String>,
    pub(crate) locale_code: std::option::Option<std::string::String>,
}
impl DatetimeOptionsBuilder {
    /// <p>Required option, that defines the datetime format used for a date parameter in the Amazon S3 path. Should use only supported datetime specifiers and separation characters, all literal a-z or A-Z characters should be escaped with single quotes. E.g. "MM.dd.yyyy-'at'-HH:mm".</p>
    pub fn format(mut self, input: impl Into<std::string::String>) -> Self {
        self.format = Some(input.into());
        self
    }
    /// <p>Required option, that defines the datetime format used for a date parameter in the Amazon S3 path. Should use only supported datetime specifiers and separation characters, all literal a-z or A-Z characters should be escaped with single quotes. E.g. "MM.dd.yyyy-'at'-HH:mm".</p>
    pub fn set_format(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.format = input;
        self
    }
    /// <p>Optional value for a timezone offset of the datetime parameter value in the Amazon S3 path. Shouldn't be used if Format for this parameter includes timezone fields. If no offset specified, UTC is assumed.</p>
    pub fn timezone_offset(mut self, input: impl Into<std::string::String>) -> Self {
        self.timezone_offset = Some(input.into());
        self
    }
    /// <p>Optional value for a timezone offset of the datetime parameter value in the Amazon S3 path. Shouldn't be used if Format for this parameter includes timezone fields. If no offset specified, UTC is assumed.</p>
    pub fn set_timezone_offset(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.timezone_offset = input;
        self
    }
    /// <p>Optional value for a non-US locale code, needed for correct interpretation of some date formats.</p>
    pub fn locale_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.locale_code = Some(input.into());
        self
    }
    /// <p>Optional value for a non-US locale code, needed for correct interpretation of some date formats.</p>
    pub fn set_locale_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.locale_code = input;
        self
    }
    /// Consumes the builder and constructs a [`DatetimeOptions`](crate::types::DatetimeOptions).
    pub fn build(self) -> crate::types::DatetimeOptions {
        crate::types::DatetimeOptions {
            format: self.format,
            timezone_offset: self.timezone_offset,
            locale_code: self.locale_code,
        }
    }
}
