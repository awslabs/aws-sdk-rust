// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration of evaluations for a profile job. This configuration can be used to select evaluations and override the parameters of selected evaluations. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StatisticsConfiguration {
    /// <p>List of included evaluations. When the list is undefined, all supported evaluations will be included.</p>
    #[doc(hidden)]
    pub included_statistics: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>List of overrides for evaluations.</p>
    #[doc(hidden)]
    pub overrides: std::option::Option<std::vec::Vec<crate::types::StatisticOverride>>,
}
impl StatisticsConfiguration {
    /// <p>List of included evaluations. When the list is undefined, all supported evaluations will be included.</p>
    pub fn included_statistics(&self) -> std::option::Option<&[std::string::String]> {
        self.included_statistics.as_deref()
    }
    /// <p>List of overrides for evaluations.</p>
    pub fn overrides(&self) -> std::option::Option<&[crate::types::StatisticOverride]> {
        self.overrides.as_deref()
    }
}
impl StatisticsConfiguration {
    /// Creates a new builder-style object to manufacture [`StatisticsConfiguration`](crate::types::StatisticsConfiguration).
    pub fn builder() -> crate::types::builders::StatisticsConfigurationBuilder {
        crate::types::builders::StatisticsConfigurationBuilder::default()
    }
}

/// A builder for [`StatisticsConfiguration`](crate::types::StatisticsConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StatisticsConfigurationBuilder {
    pub(crate) included_statistics: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) overrides: std::option::Option<std::vec::Vec<crate::types::StatisticOverride>>,
}
impl StatisticsConfigurationBuilder {
    /// Appends an item to `included_statistics`.
    ///
    /// To override the contents of this collection use [`set_included_statistics`](Self::set_included_statistics).
    ///
    /// <p>List of included evaluations. When the list is undefined, all supported evaluations will be included.</p>
    pub fn included_statistics(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.included_statistics.unwrap_or_default();
        v.push(input.into());
        self.included_statistics = Some(v);
        self
    }
    /// <p>List of included evaluations. When the list is undefined, all supported evaluations will be included.</p>
    pub fn set_included_statistics(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.included_statistics = input;
        self
    }
    /// Appends an item to `overrides`.
    ///
    /// To override the contents of this collection use [`set_overrides`](Self::set_overrides).
    ///
    /// <p>List of overrides for evaluations.</p>
    pub fn overrides(mut self, input: crate::types::StatisticOverride) -> Self {
        let mut v = self.overrides.unwrap_or_default();
        v.push(input);
        self.overrides = Some(v);
        self
    }
    /// <p>List of overrides for evaluations.</p>
    pub fn set_overrides(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::StatisticOverride>>,
    ) -> Self {
        self.overrides = input;
        self
    }
    /// Consumes the builder and constructs a [`StatisticsConfiguration`](crate::types::StatisticsConfiguration).
    pub fn build(self) -> crate::types::StatisticsConfiguration {
        crate::types::StatisticsConfiguration {
            included_statistics: self.included_statistics,
            overrides: self.overrides,
        }
    }
}
