// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_batch_delete_recipe_version;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_dataset;

pub(crate) mod shape_create_profile_job;

pub(crate) mod shape_create_project;

pub(crate) mod shape_create_recipe;

pub(crate) mod shape_create_recipe_job;

pub(crate) mod shape_create_ruleset;

pub(crate) mod shape_create_schedule;

pub(crate) mod shape_delete_dataset;

pub(crate) mod shape_delete_job;

pub(crate) mod shape_delete_project;

pub(crate) mod shape_delete_recipe_version;

pub(crate) mod shape_delete_ruleset;

pub(crate) mod shape_delete_schedule;

pub(crate) mod shape_describe_dataset;

pub(crate) mod shape_describe_job;

pub(crate) mod shape_describe_job_run;

pub(crate) mod shape_describe_project;

pub(crate) mod shape_describe_recipe;

pub(crate) mod shape_describe_ruleset;

pub(crate) mod shape_describe_schedule;

pub(crate) mod shape_list_datasets;

pub(crate) mod shape_list_job_runs;

pub(crate) mod shape_list_jobs;

pub(crate) mod shape_list_projects;

pub(crate) mod shape_list_recipe_versions;

pub(crate) mod shape_list_recipes;

pub(crate) mod shape_list_rulesets;

pub(crate) mod shape_list_schedules;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_publish_recipe;

pub(crate) mod shape_send_project_session_action;

pub(crate) mod shape_start_job_run;

pub(crate) mod shape_start_project_session;

pub(crate) mod shape_stop_job_run;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_dataset;

pub(crate) mod shape_update_profile_job;

pub(crate) mod shape_update_project;

pub(crate) mod shape_update_recipe;

pub(crate) mod shape_update_recipe_job;

pub(crate) mod shape_update_ruleset;

pub(crate) mod shape_update_schedule;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_batch_delete_recipe_version_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_dataset_input;

pub(crate) mod shape_create_profile_job_input;

pub(crate) mod shape_create_project_input;

pub(crate) mod shape_create_recipe_input;

pub(crate) mod shape_create_recipe_job_input;

pub(crate) mod shape_create_ruleset_input;

pub(crate) mod shape_create_schedule_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_publish_recipe_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_send_project_session_action_input;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_project_session_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_dataset_input;

pub(crate) mod shape_update_profile_job_input;

pub(crate) mod shape_update_project_input;

pub(crate) mod shape_update_recipe_input;

pub(crate) mod shape_update_recipe_job_input;

pub(crate) mod shape_update_ruleset_input;

pub(crate) mod shape_update_schedule_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_data_catalog_output;

pub(crate) mod shape_data_catalog_output_list;

pub(crate) mod shape_database_output;

pub(crate) mod shape_database_output_list;

pub(crate) mod shape_dataset_list;

pub(crate) mod shape_format_options;

pub(crate) mod shape_input;

pub(crate) mod shape_job_list;

pub(crate) mod shape_job_name_list;

pub(crate) mod shape_job_run_list;

pub(crate) mod shape_job_sample;

pub(crate) mod shape_output;

pub(crate) mod shape_output_list;

pub(crate) mod shape_path_options;

pub(crate) mod shape_profile_configuration;

pub(crate) mod shape_project_list;

pub(crate) mod shape_recipe_error_list;

pub(crate) mod shape_recipe_list;

pub(crate) mod shape_recipe_reference;

pub(crate) mod shape_recipe_step;

pub(crate) mod shape_recipe_step_list;

pub(crate) mod shape_rule;

pub(crate) mod shape_rule_list;

pub(crate) mod shape_ruleset_item_list;

pub(crate) mod shape_s3_location;

pub(crate) mod shape_sample;

pub(crate) mod shape_schedule_list;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_validation_configuration;

pub(crate) mod shape_validation_configuration_list;

pub(crate) mod shape_view_frame;

pub(crate) mod shape_column_selector;

pub(crate) mod shape_column_selector_list;

pub(crate) mod shape_column_statistics_configuration;

pub(crate) mod shape_column_statistics_configuration_list;

pub(crate) mod shape_condition_expression;

pub(crate) mod shape_csv_options;

pub(crate) mod shape_data_catalog_input_definition;

pub(crate) mod shape_database_input_definition;

pub(crate) mod shape_database_table_output_options;

pub(crate) mod shape_dataset;

pub(crate) mod shape_dataset_parameter;

pub(crate) mod shape_entity_detector_configuration;

pub(crate) mod shape_excel_options;

pub(crate) mod shape_files_limit;

pub(crate) mod shape_filter_expression;

pub(crate) mod shape_job;

pub(crate) mod shape_job_run;

pub(crate) mod shape_json_options;

pub(crate) mod shape_metadata;

pub(crate) mod shape_output_format_options;

pub(crate) mod shape_path_parameters_map;

pub(crate) mod shape_project;

pub(crate) mod shape_recipe;

pub(crate) mod shape_recipe_action;

pub(crate) mod shape_recipe_version_error_detail;

pub(crate) mod shape_ruleset_item;

pub(crate) mod shape_s3_table_output_options;

pub(crate) mod shape_schedule;

pub(crate) mod shape_statistics_configuration;

pub(crate) mod shape_threshold;

pub(crate) mod shape_allowed_statistic_list;

pub(crate) mod shape_allowed_statistics;

pub(crate) mod shape_column_name_list;

pub(crate) mod shape_condition_expression_list;

pub(crate) mod shape_csv_output_options;

pub(crate) mod shape_datetime_options;

pub(crate) mod shape_entity_type_list;

pub(crate) mod shape_sheet_index_list;

pub(crate) mod shape_sheet_name_list;

pub(crate) mod shape_statistic_list;

pub(crate) mod shape_statistic_override;

pub(crate) mod shape_statistic_override_list;

pub(crate) mod shape_values_map;

pub(crate) mod shape_parameter_map;
