// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListRulesets`](crate::client::fluent_builders::ListRulesets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListRulesets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`target_arn(impl Into<String>)`](crate::client::fluent_builders::ListRulesets::target_arn) / [`set_target_arn(Option<String>)`](crate::client::fluent_builders::ListRulesets::set_target_arn): <p>The Amazon Resource Name (ARN) of a resource (dataset). Using this parameter indicates to return only those rulesets that are associated with the specified resource.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListRulesets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListRulesets::set_max_results): <p>The maximum number of results to return in this request.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListRulesets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListRulesets::set_next_token): <p>A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call.</p>
    /// - On success, responds with [`ListRulesetsOutput`](crate::output::ListRulesetsOutput) with field(s):
    ///   - [`rulesets(Option<Vec<RulesetItem>>)`](crate::output::ListRulesetsOutput::rulesets): <p>A list of RulesetItem. RulesetItem contains meta data of a ruleset.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListRulesetsOutput::next_token): <p>A token that you can use in a subsequent call to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListRulesetsError>`](crate::error::ListRulesetsError)
    pub fn list_rulesets(&self) -> crate::client::fluent_builders::ListRulesets {
        crate::client::fluent_builders::ListRulesets::new(self.handle.clone())
    }
}
