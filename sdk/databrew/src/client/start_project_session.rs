// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartProjectSession`](crate::client::fluent_builders::StartProjectSession) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::StartProjectSession::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::StartProjectSession::set_name): <p>The name of the project to act upon.</p>
    ///   - [`assume_control(bool)`](crate::client::fluent_builders::StartProjectSession::assume_control) / [`set_assume_control(bool)`](crate::client::fluent_builders::StartProjectSession::set_assume_control): <p>A value that, if true, enables you to take control of a session, even if a different client is currently accessing the project.</p>
    /// - On success, responds with [`StartProjectSessionOutput`](crate::output::StartProjectSessionOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::output::StartProjectSessionOutput::name): <p>The name of the project to be acted upon.</p>
    ///   - [`client_session_id(Option<String>)`](crate::output::StartProjectSessionOutput::client_session_id): <p>A system-generated identifier for the session.</p>
    /// - On failure, responds with [`SdkError<StartProjectSessionError>`](crate::error::StartProjectSessionError)
    pub fn start_project_session(&self) -> crate::client::fluent_builders::StartProjectSession {
        crate::client::fluent_builders::StartProjectSession::new(self.handle.clone())
    }
}
