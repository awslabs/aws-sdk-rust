// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDataset`](crate::client::fluent_builders::UpdateDataset) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateDataset::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateDataset::set_name): <p>The name of the dataset to be updated.</p>
    ///   - [`format(InputFormat)`](crate::client::fluent_builders::UpdateDataset::format) / [`set_format(Option<InputFormat>)`](crate::client::fluent_builders::UpdateDataset::set_format): <p>The file format of a dataset that is created from an Amazon S3 file or folder.</p>
    ///   - [`format_options(FormatOptions)`](crate::client::fluent_builders::UpdateDataset::format_options) / [`set_format_options(Option<FormatOptions>)`](crate::client::fluent_builders::UpdateDataset::set_format_options): <p>Represents a set of options that define the structure of either comma-separated value (CSV), Excel, or JSON input.</p>
    ///   - [`input(Input)`](crate::client::fluent_builders::UpdateDataset::input) / [`set_input(Option<Input>)`](crate::client::fluent_builders::UpdateDataset::set_input): <p>Represents information on how DataBrew can find data, in either the Glue Data Catalog or Amazon S3.</p>
    ///   - [`path_options(PathOptions)`](crate::client::fluent_builders::UpdateDataset::path_options) / [`set_path_options(Option<PathOptions>)`](crate::client::fluent_builders::UpdateDataset::set_path_options): <p>A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.</p>
    /// - On success, responds with [`UpdateDatasetOutput`](crate::output::UpdateDatasetOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::output::UpdateDatasetOutput::name): <p>The name of the dataset that you updated.</p>
    /// - On failure, responds with [`SdkError<UpdateDatasetError>`](crate::error::UpdateDatasetError)
    pub fn update_dataset(&self) -> crate::client::fluent_builders::UpdateDataset {
        crate::client::fluent_builders::UpdateDataset::new(self.handle.clone())
    }
}
