// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeWebsiteCertificateAuthorityOutput {
    /// <p>The root certificate of the certificate authority.</p>
    #[doc(hidden)]
    pub certificate: std::option::Option<std::string::String>,
    /// <p>The time that the certificate authority was added.</p>
    #[doc(hidden)]
    pub created_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The certificate name to display.</p>
    #[doc(hidden)]
    pub display_name: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl DescribeWebsiteCertificateAuthorityOutput {
    /// <p>The root certificate of the certificate authority.</p>
    pub fn certificate(&self) -> std::option::Option<&str> {
        self.certificate.as_deref()
    }
    /// <p>The time that the certificate authority was added.</p>
    pub fn created_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_time.as_ref()
    }
    /// <p>The certificate name to display.</p>
    pub fn display_name(&self) -> std::option::Option<&str> {
        self.display_name.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeWebsiteCertificateAuthorityOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeWebsiteCertificateAuthorityOutput {
    /// Creates a new builder-style object to manufacture [`DescribeWebsiteCertificateAuthorityOutput`](crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityOutput).
    pub fn builder() -> crate::operation::describe_website_certificate_authority::builders::DescribeWebsiteCertificateAuthorityOutputBuilder{
        crate::operation::describe_website_certificate_authority::builders::DescribeWebsiteCertificateAuthorityOutputBuilder::default()
    }
}

/// A builder for [`DescribeWebsiteCertificateAuthorityOutput`](crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeWebsiteCertificateAuthorityOutputBuilder {
    pub(crate) certificate: std::option::Option<std::string::String>,
    pub(crate) created_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) display_name: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl DescribeWebsiteCertificateAuthorityOutputBuilder {
    /// <p>The root certificate of the certificate authority.</p>
    pub fn certificate(mut self, input: impl Into<std::string::String>) -> Self {
        self.certificate = Some(input.into());
        self
    }
    /// <p>The root certificate of the certificate authority.</p>
    pub fn set_certificate(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.certificate = input;
        self
    }
    /// <p>The time that the certificate authority was added.</p>
    pub fn created_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_time = Some(input);
        self
    }
    /// <p>The time that the certificate authority was added.</p>
    pub fn set_created_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_time = input;
        self
    }
    /// <p>The certificate name to display.</p>
    pub fn display_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.display_name = Some(input.into());
        self
    }
    /// <p>The certificate name to display.</p>
    pub fn set_display_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeWebsiteCertificateAuthorityOutput`](crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityOutput).
    pub fn build(self) -> crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityOutput{
        crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityOutput {
            certificate: self.certificate
            ,
            created_time: self.created_time
            ,
            display_name: self.display_name
            ,
            _request_id: self._request_id,
        }
    }
}
