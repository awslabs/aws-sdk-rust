// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeWebsiteCertificateAuthorityInput {
    /// <p>The ARN of the fleet.</p>
    pub fleet_arn: ::std::option::Option<::std::string::String>,
    /// <p>A unique identifier for the certificate authority.</p>
    pub website_ca_id: ::std::option::Option<::std::string::String>,
}
impl DescribeWebsiteCertificateAuthorityInput {
    /// <p>The ARN of the fleet.</p>
    pub fn fleet_arn(&self) -> ::std::option::Option<&str> {
        self.fleet_arn.as_deref()
    }
    /// <p>A unique identifier for the certificate authority.</p>
    pub fn website_ca_id(&self) -> ::std::option::Option<&str> {
        self.website_ca_id.as_deref()
    }
}
impl DescribeWebsiteCertificateAuthorityInput {
    /// Creates a new builder-style object to manufacture [`DescribeWebsiteCertificateAuthorityInput`](crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityInput).
    pub fn builder() -> crate::operation::describe_website_certificate_authority::builders::DescribeWebsiteCertificateAuthorityInputBuilder {
        crate::operation::describe_website_certificate_authority::builders::DescribeWebsiteCertificateAuthorityInputBuilder::default()
    }
}

/// A builder for [`DescribeWebsiteCertificateAuthorityInput`](crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeWebsiteCertificateAuthorityInputBuilder {
    pub(crate) fleet_arn: ::std::option::Option<::std::string::String>,
    pub(crate) website_ca_id: ::std::option::Option<::std::string::String>,
}
impl DescribeWebsiteCertificateAuthorityInputBuilder {
    /// <p>The ARN of the fleet.</p>
    /// This field is required.
    pub fn fleet_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.fleet_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the fleet.</p>
    pub fn set_fleet_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.fleet_arn = input;
        self
    }
    /// <p>The ARN of the fleet.</p>
    pub fn get_fleet_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.fleet_arn
    }
    /// <p>A unique identifier for the certificate authority.</p>
    /// This field is required.
    pub fn website_ca_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.website_ca_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the certificate authority.</p>
    pub fn set_website_ca_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.website_ca_id = input;
        self
    }
    /// <p>A unique identifier for the certificate authority.</p>
    pub fn get_website_ca_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.website_ca_id
    }
    /// Consumes the builder and constructs a [`DescribeWebsiteCertificateAuthorityInput`](crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::describe_website_certificate_authority::DescribeWebsiteCertificateAuthorityInput {
                fleet_arn: self.fleet_arn,
                website_ca_id: self.website_ca_id,
            },
        )
    }
}
