// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateWebsiteAuthorizationProviderInput {
    /// <p>The ARN of the fleet.</p>
    #[doc(hidden)]
    pub fleet_arn: std::option::Option<std::string::String>,
    /// <p>A unique identifier for the authorization provider.</p>
    #[doc(hidden)]
    pub authorization_provider_id: std::option::Option<std::string::String>,
}
impl DisassociateWebsiteAuthorizationProviderInput {
    /// <p>The ARN of the fleet.</p>
    pub fn fleet_arn(&self) -> std::option::Option<&str> {
        self.fleet_arn.as_deref()
    }
    /// <p>A unique identifier for the authorization provider.</p>
    pub fn authorization_provider_id(&self) -> std::option::Option<&str> {
        self.authorization_provider_id.as_deref()
    }
}
impl DisassociateWebsiteAuthorizationProviderInput {
    /// Creates a new builder-style object to manufacture [`DisassociateWebsiteAuthorizationProviderInput`](crate::operation::disassociate_website_authorization_provider::DisassociateWebsiteAuthorizationProviderInput).
    pub fn builder() -> crate::operation::disassociate_website_authorization_provider::builders::DisassociateWebsiteAuthorizationProviderInputBuilder{
        crate::operation::disassociate_website_authorization_provider::builders::DisassociateWebsiteAuthorizationProviderInputBuilder::default()
    }
}

/// A builder for [`DisassociateWebsiteAuthorizationProviderInput`](crate::operation::disassociate_website_authorization_provider::DisassociateWebsiteAuthorizationProviderInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisassociateWebsiteAuthorizationProviderInputBuilder {
    pub(crate) fleet_arn: std::option::Option<std::string::String>,
    pub(crate) authorization_provider_id: std::option::Option<std::string::String>,
}
impl DisassociateWebsiteAuthorizationProviderInputBuilder {
    /// <p>The ARN of the fleet.</p>
    pub fn fleet_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.fleet_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the fleet.</p>
    pub fn set_fleet_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.fleet_arn = input;
        self
    }
    /// <p>A unique identifier for the authorization provider.</p>
    pub fn authorization_provider_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.authorization_provider_id = Some(input.into());
        self
    }
    /// <p>A unique identifier for the authorization provider.</p>
    pub fn set_authorization_provider_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.authorization_provider_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DisassociateWebsiteAuthorizationProviderInput`](crate::operation::disassociate_website_authorization_provider::DisassociateWebsiteAuthorizationProviderInput).
    pub fn build(self) -> Result<crate::operation::disassociate_website_authorization_provider::DisassociateWebsiteAuthorizationProviderInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::disassociate_website_authorization_provider::DisassociateWebsiteAuthorizationProviderInput {
                fleet_arn: self.fleet_arn
                ,
                authorization_provider_id: self.authorization_provider_id
                ,
            }
        )
    }
}
