// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateIdentityProviderConfigurationInput {
    /// <p>The ARN of the fleet.</p>
    #[doc(hidden)]
    pub fleet_arn: std::option::Option<std::string::String>,
    /// <p>The type of identity provider.</p>
    #[doc(hidden)]
    pub identity_provider_type: std::option::Option<crate::types::IdentityProviderType>,
    /// <p>The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.</p>
    #[doc(hidden)]
    pub identity_provider_saml_metadata: std::option::Option<std::string::String>,
}
impl UpdateIdentityProviderConfigurationInput {
    /// <p>The ARN of the fleet.</p>
    pub fn fleet_arn(&self) -> std::option::Option<&str> {
        self.fleet_arn.as_deref()
    }
    /// <p>The type of identity provider.</p>
    pub fn identity_provider_type(
        &self,
    ) -> std::option::Option<&crate::types::IdentityProviderType> {
        self.identity_provider_type.as_ref()
    }
    /// <p>The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.</p>
    pub fn identity_provider_saml_metadata(&self) -> std::option::Option<&str> {
        self.identity_provider_saml_metadata.as_deref()
    }
}
impl UpdateIdentityProviderConfigurationInput {
    /// Creates a new builder-style object to manufacture [`UpdateIdentityProviderConfigurationInput`](crate::operation::update_identity_provider_configuration::UpdateIdentityProviderConfigurationInput).
    pub fn builder() -> crate::operation::update_identity_provider_configuration::builders::UpdateIdentityProviderConfigurationInputBuilder{
        crate::operation::update_identity_provider_configuration::builders::UpdateIdentityProviderConfigurationInputBuilder::default()
    }
}

/// A builder for [`UpdateIdentityProviderConfigurationInput`](crate::operation::update_identity_provider_configuration::UpdateIdentityProviderConfigurationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateIdentityProviderConfigurationInputBuilder {
    pub(crate) fleet_arn: std::option::Option<std::string::String>,
    pub(crate) identity_provider_type: std::option::Option<crate::types::IdentityProviderType>,
    pub(crate) identity_provider_saml_metadata: std::option::Option<std::string::String>,
}
impl UpdateIdentityProviderConfigurationInputBuilder {
    /// <p>The ARN of the fleet.</p>
    pub fn fleet_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.fleet_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the fleet.</p>
    pub fn set_fleet_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.fleet_arn = input;
        self
    }
    /// <p>The type of identity provider.</p>
    pub fn identity_provider_type(mut self, input: crate::types::IdentityProviderType) -> Self {
        self.identity_provider_type = Some(input);
        self
    }
    /// <p>The type of identity provider.</p>
    pub fn set_identity_provider_type(
        mut self,
        input: std::option::Option<crate::types::IdentityProviderType>,
    ) -> Self {
        self.identity_provider_type = input;
        self
    }
    /// <p>The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.</p>
    pub fn identity_provider_saml_metadata(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.identity_provider_saml_metadata = Some(input.into());
        self
    }
    /// <p>The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.</p>
    pub fn set_identity_provider_saml_metadata(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.identity_provider_saml_metadata = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateIdentityProviderConfigurationInput`](crate::operation::update_identity_provider_configuration::UpdateIdentityProviderConfigurationInput).
    pub fn build(self) -> Result<crate::operation::update_identity_provider_configuration::UpdateIdentityProviderConfigurationInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::update_identity_provider_configuration::UpdateIdentityProviderConfigurationInput {
                fleet_arn: self.fleet_arn
                ,
                identity_provider_type: self.identity_provider_type
                ,
                identity_provider_saml_metadata: self.identity_provider_saml_metadata
                ,
            }
        )
    }
}
