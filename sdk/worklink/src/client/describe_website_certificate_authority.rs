// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeWebsiteCertificateAuthority`](crate::client::fluent_builders::DescribeWebsiteCertificateAuthority) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`fleet_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeWebsiteCertificateAuthority::fleet_arn) / [`set_fleet_arn(Option<String>)`](crate::client::fluent_builders::DescribeWebsiteCertificateAuthority::set_fleet_arn): <p>The ARN of the fleet.</p>
    ///   - [`website_ca_id(impl Into<String>)`](crate::client::fluent_builders::DescribeWebsiteCertificateAuthority::website_ca_id) / [`set_website_ca_id(Option<String>)`](crate::client::fluent_builders::DescribeWebsiteCertificateAuthority::set_website_ca_id): <p>A unique identifier for the certificate authority.</p>
    /// - On success, responds with [`DescribeWebsiteCertificateAuthorityOutput`](crate::output::DescribeWebsiteCertificateAuthorityOutput) with field(s):
    ///   - [`certificate(Option<String>)`](crate::output::DescribeWebsiteCertificateAuthorityOutput::certificate): <p>The root certificate of the certificate authority.</p>
    ///   - [`created_time(Option<DateTime>)`](crate::output::DescribeWebsiteCertificateAuthorityOutput::created_time): <p>The time that the certificate authority was added.</p>
    ///   - [`display_name(Option<String>)`](crate::output::DescribeWebsiteCertificateAuthorityOutput::display_name): <p>The certificate name to display.</p>
    /// - On failure, responds with [`SdkError<DescribeWebsiteCertificateAuthorityError>`](crate::error::DescribeWebsiteCertificateAuthorityError)
    #[deprecated(
        note = "Amazon WorkLink is no longer supported. This will be removed in a future version of the SDK."
    )]
    pub fn describe_website_certificate_authority(
        &self,
    ) -> crate::client::fluent_builders::DescribeWebsiteCertificateAuthority {
        crate::client::fluent_builders::DescribeWebsiteCertificateAuthority::new(
            self.handle.clone(),
        )
    }
}
