// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of the domain.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DomainSummary {
    /// <p>The name of the domain.</p>
    pub domain_name: ::std::string::String,
    /// <p>The name to display.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
    /// <p>The time that the domain was created.</p>
    pub created_time: ::aws_smithy_types::DateTime,
    /// <p>The status of the domain.</p>
    pub domain_status: crate::types::DomainStatus,
}
impl DomainSummary {
    /// <p>The name of the domain.</p>
    pub fn domain_name(&self) -> &str {
        use std::ops::Deref;
        self.domain_name.deref()
    }
    /// <p>The name to display.</p>
    pub fn display_name(&self) -> ::std::option::Option<&str> {
        self.display_name.as_deref()
    }
    /// <p>The time that the domain was created.</p>
    pub fn created_time(&self) -> &::aws_smithy_types::DateTime {
        &self.created_time
    }
    /// <p>The status of the domain.</p>
    pub fn domain_status(&self) -> &crate::types::DomainStatus {
        &self.domain_status
    }
}
impl DomainSummary {
    /// Creates a new builder-style object to manufacture [`DomainSummary`](crate::types::DomainSummary).
    pub fn builder() -> crate::types::builders::DomainSummaryBuilder {
        crate::types::builders::DomainSummaryBuilder::default()
    }
}

/// A builder for [`DomainSummary`](crate::types::DomainSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DomainSummaryBuilder {
    pub(crate) domain_name: ::std::option::Option<::std::string::String>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
    pub(crate) created_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) domain_status: ::std::option::Option<crate::types::DomainStatus>,
}
impl DomainSummaryBuilder {
    /// <p>The name of the domain.</p>
    /// This field is required.
    pub fn domain_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the domain.</p>
    pub fn set_domain_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>The name of the domain.</p>
    pub fn get_domain_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_name
    }
    /// <p>The name to display.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name to display.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The name to display.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// <p>The time that the domain was created.</p>
    /// This field is required.
    pub fn created_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time that the domain was created.</p>
    pub fn set_created_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_time = input;
        self
    }
    /// <p>The time that the domain was created.</p>
    pub fn get_created_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_time
    }
    /// <p>The status of the domain.</p>
    /// This field is required.
    pub fn domain_status(mut self, input: crate::types::DomainStatus) -> Self {
        self.domain_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the domain.</p>
    pub fn set_domain_status(mut self, input: ::std::option::Option<crate::types::DomainStatus>) -> Self {
        self.domain_status = input;
        self
    }
    /// <p>The status of the domain.</p>
    pub fn get_domain_status(&self) -> &::std::option::Option<crate::types::DomainStatus> {
        &self.domain_status
    }
    /// Consumes the builder and constructs a [`DomainSummary`](crate::types::DomainSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`domain_name`](crate::types::builders::DomainSummaryBuilder::domain_name)
    /// - [`created_time`](crate::types::builders::DomainSummaryBuilder::created_time)
    /// - [`domain_status`](crate::types::builders::DomainSummaryBuilder::domain_status)
    pub fn build(self) -> ::std::result::Result<crate::types::DomainSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DomainSummary {
            domain_name: self.domain_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "domain_name",
                    "domain_name was not specified but it is required when building DomainSummary",
                )
            })?,
            display_name: self.display_name,
            created_time: self.created_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_time",
                    "created_time was not specified but it is required when building DomainSummary",
                )
            })?,
            domain_status: self.domain_status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "domain_status",
                    "domain_status was not specified but it is required when building DomainSummary",
                )
            })?,
        })
    }
}
