// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetStreamInput {
    /// <p>Channel ARN for stream to be accessed.</p>
    #[doc(hidden)]
    pub channel_arn: std::option::Option<std::string::String>,
}
impl GetStreamInput {
    /// <p>Channel ARN for stream to be accessed.</p>
    pub fn channel_arn(&self) -> std::option::Option<&str> {
        self.channel_arn.as_deref()
    }
}
impl GetStreamInput {
    /// Creates a new builder-style object to manufacture [`GetStreamInput`](crate::operation::get_stream::GetStreamInput).
    pub fn builder() -> crate::operation::get_stream::builders::GetStreamInputBuilder {
        crate::operation::get_stream::builders::GetStreamInputBuilder::default()
    }
}

/// A builder for [`GetStreamInput`](crate::operation::get_stream::GetStreamInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetStreamInputBuilder {
    pub(crate) channel_arn: std::option::Option<std::string::String>,
}
impl GetStreamInputBuilder {
    /// <p>Channel ARN for stream to be accessed.</p>
    pub fn channel_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.channel_arn = Some(input.into());
        self
    }
    /// <p>Channel ARN for stream to be accessed.</p>
    pub fn set_channel_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.channel_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`GetStreamInput`](crate::operation::get_stream::GetStreamInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_stream::GetStreamInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_stream::GetStreamInput {
            channel_arn: self.channel_arn,
        })
    }
}
