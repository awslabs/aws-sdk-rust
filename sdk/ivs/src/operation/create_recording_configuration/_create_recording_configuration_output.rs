// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateRecordingConfigurationOutput {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub recording_configuration: std::option::Option<crate::types::RecordingConfiguration>,
    _request_id: Option<String>,
}
impl CreateRecordingConfigurationOutput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn recording_configuration(
        &self,
    ) -> std::option::Option<&crate::types::RecordingConfiguration> {
        self.recording_configuration.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateRecordingConfigurationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateRecordingConfigurationOutput {
    /// Creates a new builder-style object to manufacture [`CreateRecordingConfigurationOutput`](crate::operation::create_recording_configuration::CreateRecordingConfigurationOutput).
    pub fn builder() -> crate::operation::create_recording_configuration::builders::CreateRecordingConfigurationOutputBuilder{
        crate::operation::create_recording_configuration::builders::CreateRecordingConfigurationOutputBuilder::default()
    }
}

/// A builder for [`CreateRecordingConfigurationOutput`](crate::operation::create_recording_configuration::CreateRecordingConfigurationOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateRecordingConfigurationOutputBuilder {
    pub(crate) recording_configuration: std::option::Option<crate::types::RecordingConfiguration>,
    _request_id: Option<String>,
}
impl CreateRecordingConfigurationOutputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn recording_configuration(mut self, input: crate::types::RecordingConfiguration) -> Self {
        self.recording_configuration = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_recording_configuration(
        mut self,
        input: std::option::Option<crate::types::RecordingConfiguration>,
    ) -> Self {
        self.recording_configuration = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateRecordingConfigurationOutput`](crate::operation::create_recording_configuration::CreateRecordingConfigurationOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_recording_configuration::CreateRecordingConfigurationOutput {
        crate::operation::create_recording_configuration::CreateRecordingConfigurationOutput {
            recording_configuration: self.recording_configuration,
            _request_id: self._request_id,
        }
    }
}
