// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A viewer session to revoke in the call to <code>BatchStartViewerSessionRevocation</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchStartViewerSessionRevocationViewerSession {
    /// <p>The ARN of the channel associated with the viewer session to revoke.</p>
    pub channel_arn: ::std::string::String,
    /// <p>The ID of the viewer associated with the viewer session to revoke. Do not use this field for personally identifying, confidential, or sensitive information.</p>
    pub viewer_id: ::std::string::String,
    /// <p>An optional filter on which versions of the viewer session to revoke. All versions less than or equal to the specified version will be revoked. Default: 0.</p>
    pub viewer_session_versions_less_than_or_equal_to: i32,
}
impl BatchStartViewerSessionRevocationViewerSession {
    /// <p>The ARN of the channel associated with the viewer session to revoke.</p>
    pub fn channel_arn(&self) -> &str {
        use std::ops::Deref;
        self.channel_arn.deref()
    }
    /// <p>The ID of the viewer associated with the viewer session to revoke. Do not use this field for personally identifying, confidential, or sensitive information.</p>
    pub fn viewer_id(&self) -> &str {
        use std::ops::Deref;
        self.viewer_id.deref()
    }
    /// <p>An optional filter on which versions of the viewer session to revoke. All versions less than or equal to the specified version will be revoked. Default: 0.</p>
    pub fn viewer_session_versions_less_than_or_equal_to(&self) -> i32 {
        self.viewer_session_versions_less_than_or_equal_to
    }
}
impl BatchStartViewerSessionRevocationViewerSession {
    /// Creates a new builder-style object to manufacture [`BatchStartViewerSessionRevocationViewerSession`](crate::types::BatchStartViewerSessionRevocationViewerSession).
    pub fn builder() -> crate::types::builders::BatchStartViewerSessionRevocationViewerSessionBuilder {
        crate::types::builders::BatchStartViewerSessionRevocationViewerSessionBuilder::default()
    }
}

/// A builder for [`BatchStartViewerSessionRevocationViewerSession`](crate::types::BatchStartViewerSessionRevocationViewerSession).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchStartViewerSessionRevocationViewerSessionBuilder {
    pub(crate) channel_arn: ::std::option::Option<::std::string::String>,
    pub(crate) viewer_id: ::std::option::Option<::std::string::String>,
    pub(crate) viewer_session_versions_less_than_or_equal_to: ::std::option::Option<i32>,
}
impl BatchStartViewerSessionRevocationViewerSessionBuilder {
    /// <p>The ARN of the channel associated with the viewer session to revoke.</p>
    /// This field is required.
    pub fn channel_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.channel_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the channel associated with the viewer session to revoke.</p>
    pub fn set_channel_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.channel_arn = input;
        self
    }
    /// <p>The ARN of the channel associated with the viewer session to revoke.</p>
    pub fn get_channel_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.channel_arn
    }
    /// <p>The ID of the viewer associated with the viewer session to revoke. Do not use this field for personally identifying, confidential, or sensitive information.</p>
    /// This field is required.
    pub fn viewer_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.viewer_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the viewer associated with the viewer session to revoke. Do not use this field for personally identifying, confidential, or sensitive information.</p>
    pub fn set_viewer_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.viewer_id = input;
        self
    }
    /// <p>The ID of the viewer associated with the viewer session to revoke. Do not use this field for personally identifying, confidential, or sensitive information.</p>
    pub fn get_viewer_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.viewer_id
    }
    /// <p>An optional filter on which versions of the viewer session to revoke. All versions less than or equal to the specified version will be revoked. Default: 0.</p>
    pub fn viewer_session_versions_less_than_or_equal_to(mut self, input: i32) -> Self {
        self.viewer_session_versions_less_than_or_equal_to = ::std::option::Option::Some(input);
        self
    }
    /// <p>An optional filter on which versions of the viewer session to revoke. All versions less than or equal to the specified version will be revoked. Default: 0.</p>
    pub fn set_viewer_session_versions_less_than_or_equal_to(mut self, input: ::std::option::Option<i32>) -> Self {
        self.viewer_session_versions_less_than_or_equal_to = input;
        self
    }
    /// <p>An optional filter on which versions of the viewer session to revoke. All versions less than or equal to the specified version will be revoked. Default: 0.</p>
    pub fn get_viewer_session_versions_less_than_or_equal_to(&self) -> &::std::option::Option<i32> {
        &self.viewer_session_versions_less_than_or_equal_to
    }
    /// Consumes the builder and constructs a [`BatchStartViewerSessionRevocationViewerSession`](crate::types::BatchStartViewerSessionRevocationViewerSession).
    /// This method will fail if any of the following fields are not set:
    /// - [`channel_arn`](crate::types::builders::BatchStartViewerSessionRevocationViewerSessionBuilder::channel_arn)
    /// - [`viewer_id`](crate::types::builders::BatchStartViewerSessionRevocationViewerSessionBuilder::viewer_id)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::BatchStartViewerSessionRevocationViewerSession, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BatchStartViewerSessionRevocationViewerSession {
            channel_arn: self.channel_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "channel_arn",
                    "channel_arn was not specified but it is required when building BatchStartViewerSessionRevocationViewerSession",
                )
            })?,
            viewer_id: self.viewer_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "viewer_id",
                    "viewer_id was not specified but it is required when building BatchStartViewerSessionRevocationViewerSession",
                )
            })?,
            viewer_session_versions_less_than_or_equal_to: self.viewer_session_versions_less_than_or_equal_to.unwrap_or_default(),
        })
    }
}
