// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that describes an S3 location where recorded videos will be stored.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3DestinationConfiguration {
    /// <p>Location (S3 bucket name) where recorded videos will be stored.</p>
    #[doc(hidden)]
    pub bucket_name: std::option::Option<std::string::String>,
}
impl S3DestinationConfiguration {
    /// <p>Location (S3 bucket name) where recorded videos will be stored.</p>
    pub fn bucket_name(&self) -> std::option::Option<&str> {
        self.bucket_name.as_deref()
    }
}
impl S3DestinationConfiguration {
    /// Creates a new builder-style object to manufacture [`S3DestinationConfiguration`](crate::types::S3DestinationConfiguration).
    pub fn builder() -> crate::types::builders::S3DestinationConfigurationBuilder {
        crate::types::builders::S3DestinationConfigurationBuilder::default()
    }
}

/// A builder for [`S3DestinationConfiguration`](crate::types::S3DestinationConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3DestinationConfigurationBuilder {
    pub(crate) bucket_name: std::option::Option<std::string::String>,
}
impl S3DestinationConfigurationBuilder {
    /// <p>Location (S3 bucket name) where recorded videos will be stored.</p>
    pub fn bucket_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_name = Some(input.into());
        self
    }
    /// <p>Location (S3 bucket name) where recorded videos will be stored.</p>
    pub fn set_bucket_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket_name = input;
        self
    }
    /// Consumes the builder and constructs a [`S3DestinationConfiguration`](crate::types::S3DestinationConfiguration).
    pub fn build(self) -> crate::types::S3DestinationConfiguration {
        crate::types::S3DestinationConfiguration {
            bucket_name: self.bucket_name,
        }
    }
}
