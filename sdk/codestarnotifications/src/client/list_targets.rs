// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTargets`](crate::client::fluent_builders::ListTargets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTargets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(Vec<ListTargetsFilter>)`](crate::client::fluent_builders::ListTargets::filters) / [`set_filters(Option<Vec<ListTargetsFilter>>)`](crate::client::fluent_builders::ListTargets::set_filters): <p>The filters to use to return information by service or resource type. Valid filters include target type, target address, and target status.</p> <note>   <p>A filter with the same name can appear more than once when used with OR statements. Filters with different names should be applied with AND statements.</p>  </note>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTargets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTargets::set_next_token): <p>An enumeration token that, when provided in a request, returns the next batch of the results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTargets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTargets::set_max_results): <p>A non-negative integer used to limit the number of returned results. The maximum number of results that can be returned is 100.</p>
    /// - On success, responds with [`ListTargetsOutput`](crate::output::ListTargetsOutput) with field(s):
    ///   - [`targets(Option<Vec<TargetSummary>>)`](crate::output::ListTargetsOutput::targets): <p>The list of notification rule targets. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTargetsOutput::next_token): <p>An enumeration token that can be used in a request to return the next batch of results.</p>
    /// - On failure, responds with [`SdkError<ListTargetsError>`](crate::error::ListTargetsError)
    pub fn list_targets(&self) -> crate::client::fluent_builders::ListTargets {
        crate::client::fluent_builders::ListTargets::new(self.handle.clone())
    }
}
