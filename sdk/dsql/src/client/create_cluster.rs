// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCluster`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`deletion_protection_enabled(bool)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::deletion_protection_enabled) / [`set_deletion_protection_enabled(Option<bool>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_deletion_protection_enabled):<br>required: **false**<br><p>If enabled, you can't delete your cluster. You must first disable this property before you can delete your cluster.</p><br>
    ///   - [`kms_encryption_key(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::kms_encryption_key) / [`set_kms_encryption_key(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_kms_encryption_key):<br>required: **false**<br><p>The KMS key that encrypts and protects the data on your cluster. You can specify the ARN, ID, or alias of an existing key or have Amazon Web Services create a default key for you.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_tags):<br>required: **false**<br><p>A map of key and value pairs to use to tag your cluster.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries with the same client token return the result from the original successful request and they have no additional effect.</p> <p>If you don't specify a client token, the Amazon Web Services SDK automatically generates one.</p><br>
    ///   - [`multi_region_properties(MultiRegionProperties)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::multi_region_properties) / [`set_multi_region_properties(Option<MultiRegionProperties>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_multi_region_properties):<br>required: **false**<br><p>The configuration settings when creating a multi-Region cluster, including the witness region and linked cluster properties.</p><br>
    ///   - [`policy(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::policy) / [`set_policy(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_policy):<br>required: **false**<br><p>An optional resource-based policy document in JSON format that defines access permissions for the cluster.</p><br>
    ///   - [`bypass_policy_lockout_safety_check(bool)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::bypass_policy_lockout_safety_check) / [`set_bypass_policy_lockout_safety_check(Option<bool>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_bypass_policy_lockout_safety_check):<br>required: **false**<br><p>An optional field that controls whether to bypass the lockout prevention check. When set to true, this parameter allows you to apply a policy that might lock you out of the cluster. Use with caution.</p><br>
    /// - On success, responds with [`CreateClusterOutput`](crate::operation::create_cluster::CreateClusterOutput) with field(s):
    ///   - [`identifier(String)`](crate::operation::create_cluster::CreateClusterOutput::identifier): <p>The ID of the created cluster.</p>
    ///   - [`arn(String)`](crate::operation::create_cluster::CreateClusterOutput::arn): <p>The ARN of the created cluster.</p>
    ///   - [`status(ClusterStatus)`](crate::operation::create_cluster::CreateClusterOutput::status): <p>The status of the created cluster.</p>
    ///   - [`creation_time(DateTime)`](crate::operation::create_cluster::CreateClusterOutput::creation_time): <p>The time of when created the cluster.</p>
    ///   - [`multi_region_properties(Option<MultiRegionProperties>)`](crate::operation::create_cluster::CreateClusterOutput::multi_region_properties): <p>The multi-Region cluster configuration details that were set during cluster creation</p>
    ///   - [`encryption_details(Option<EncryptionDetails>)`](crate::operation::create_cluster::CreateClusterOutput::encryption_details): <p>The encryption configuration for the cluster that was specified during the creation process, including the KMS key identifier and encryption state.</p>
    ///   - [`deletion_protection_enabled(bool)`](crate::operation::create_cluster::CreateClusterOutput::deletion_protection_enabled): <p>Whether deletion protection is enabled on this cluster.</p>
    /// - On failure, responds with [`SdkError<CreateClusterError>`](crate::operation::create_cluster::CreateClusterError)
    pub fn create_cluster(&self) -> crate::operation::create_cluster::builders::CreateClusterFluentBuilder {
        crate::operation::create_cluster::builders::CreateClusterFluentBuilder::new(self.handle.clone())
    }
}
