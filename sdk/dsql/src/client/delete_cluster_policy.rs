// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteClusterPolicy`](crate::operation::delete_cluster_policy::builders::DeleteClusterPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identifier(impl Into<String>)`](crate::operation::delete_cluster_policy::builders::DeleteClusterPolicyFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::delete_cluster_policy::builders::DeleteClusterPolicyFluentBuilder::set_identifier):<br>required: **true**<br><p>The ID of the cluster.</p><br>
    ///   - [`expected_policy_version(impl Into<String>)`](crate::operation::delete_cluster_policy::builders::DeleteClusterPolicyFluentBuilder::expected_policy_version) / [`set_expected_policy_version(Option<String>)`](crate::operation::delete_cluster_policy::builders::DeleteClusterPolicyFluentBuilder::set_expected_policy_version):<br>required: **false**<br><p>The expected version of the policy to delete. This parameter ensures that you're deleting the correct version of the policy and helps prevent accidental deletions.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_cluster_policy::builders::DeleteClusterPolicyFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_cluster_policy::builders::DeleteClusterPolicyFluentBuilder::set_client_token):<br>required: **false**<br><p>Idempotency token so a request is only processed once.</p><br>
    /// - On success, responds with [`DeleteClusterPolicyOutput`](crate::operation::delete_cluster_policy::DeleteClusterPolicyOutput) with field(s):
    ///   - [`policy_version(String)`](crate::operation::delete_cluster_policy::DeleteClusterPolicyOutput::policy_version): <p>The version of the policy that was deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteClusterPolicyError>`](crate::operation::delete_cluster_policy::DeleteClusterPolicyError)
    pub fn delete_cluster_policy(&self) -> crate::operation::delete_cluster_policy::builders::DeleteClusterPolicyFluentBuilder {
        crate::operation::delete_cluster_policy::builders::DeleteClusterPolicyFluentBuilder::new(self.handle.clone())
    }
}
