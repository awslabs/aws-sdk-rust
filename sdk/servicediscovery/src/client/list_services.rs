// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListServices`](crate::operation::list_services::builders::ListServicesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_services::builders::ListServicesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_services::builders::ListServicesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_services::builders::ListServicesFluentBuilder::set_next_token):<br>required: **false**<br><p>For the first <code>ListServices</code> request, omit this value.</p>  <p>If the response contains <code>NextToken</code>, submit another <code>ListServices</code> request to get the next group of results. Specify the value of <code>NextToken</code> from the previous response in the next request.</p> <note>   <p>Cloud Map gets <code>MaxResults</code> services and then filters them based on the specified criteria. It's possible that no services in the first <code>MaxResults</code> services matched the specified criteria but that subsequent groups of <code>MaxResults</code> services do contain services that match the criteria.</p>  </note><br>
    ///   - [`max_results(i32)`](crate::operation::list_services::builders::ListServicesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_services::builders::ListServicesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of services that you want Cloud Map to return in the response to a <code>ListServices</code> request. If you don't specify a value for <code>MaxResults</code>, Cloud Map returns up to 100 services.</p><br>
    ///   - [`filters(ServiceFilter)`](crate::operation::list_services::builders::ListServicesFluentBuilder::filters) / [`set_filters(Option<Vec::<ServiceFilter>>)`](crate::operation::list_services::builders::ListServicesFluentBuilder::set_filters):<br>required: **false**<br><p>A complex type that contains specifications for the namespaces that you want to list services for. </p>  <p>If you specify more than one filter, an operation must match all filters to be returned by <code>ListServices</code>.</p><br>
    /// - On success, responds with [`ListServicesOutput`](crate::operation::list_services::ListServicesOutput) with field(s):
    ///   - [`services(Option<Vec::<ServiceSummary>>)`](crate::operation::list_services::ListServicesOutput::services): <p>An array that contains one <code>ServiceSummary</code> object for each service that matches the specified filter criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_services::ListServicesOutput::next_token): <p>If the response contains <code>NextToken</code>, submit another <code>ListServices</code> request to get the next group of results. Specify the value of <code>NextToken</code> from the previous response in the next request.</p> <note>   <p>Cloud Map gets <code>MaxResults</code> services and then filters them based on the specified criteria. It's possible that no services in the first <code>MaxResults</code> services matched the specified criteria but that subsequent groups of <code>MaxResults</code> services do contain services that match the criteria.</p>  </note>
    /// - On failure, responds with [`SdkError<ListServicesError>`](crate::operation::list_services::ListServicesError)
    pub fn list_services(&self) -> crate::operation::list_services::builders::ListServicesFluentBuilder {
        crate::operation::list_services::builders::ListServicesFluentBuilder::new(self.handle.clone())
    }
}
