// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains information about an operation that matches the criteria that you specified in a <a href="https://docs.aws.amazon.com/cloud-map/latest/api/API_ListOperations.html">ListOperations</a> request.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OperationSummary {
    /// <p>The ID for an operation.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The status of the operation. Values include the following:</p>
    /// <ul>
    /// <li> <p> <b>SUBMITTED</b>: This is the initial state immediately after you submit a request.</p> </li>
    /// <li> <p> <b>PENDING</b>: Cloud Map is performing the operation.</p> </li>
    /// <li> <p> <b>SUCCESS</b>: The operation succeeded.</p> </li>
    /// <li> <p> <b>FAIL</b>: The operation failed. For the failure reason, see <code>ErrorMessage</code>.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::OperationStatus>,
}
impl OperationSummary {
    /// <p>The ID for an operation.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The status of the operation. Values include the following:</p>
    /// <ul>
    /// <li> <p> <b>SUBMITTED</b>: This is the initial state immediately after you submit a request.</p> </li>
    /// <li> <p> <b>PENDING</b>: Cloud Map is performing the operation.</p> </li>
    /// <li> <p> <b>SUCCESS</b>: The operation succeeded.</p> </li>
    /// <li> <p> <b>FAIL</b>: The operation failed. For the failure reason, see <code>ErrorMessage</code>.</p> </li>
    /// </ul>
    pub fn status(&self) -> std::option::Option<&crate::types::OperationStatus> {
        self.status.as_ref()
    }
}
impl OperationSummary {
    /// Creates a new builder-style object to manufacture [`OperationSummary`](crate::types::OperationSummary).
    pub fn builder() -> crate::types::builders::OperationSummaryBuilder {
        crate::types::builders::OperationSummaryBuilder::default()
    }
}

/// A builder for [`OperationSummary`](crate::types::OperationSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OperationSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::OperationStatus>,
}
impl OperationSummaryBuilder {
    /// <p>The ID for an operation.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID for an operation.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The status of the operation. Values include the following:</p>
    /// <ul>
    /// <li> <p> <b>SUBMITTED</b>: This is the initial state immediately after you submit a request.</p> </li>
    /// <li> <p> <b>PENDING</b>: Cloud Map is performing the operation.</p> </li>
    /// <li> <p> <b>SUCCESS</b>: The operation succeeded.</p> </li>
    /// <li> <p> <b>FAIL</b>: The operation failed. For the failure reason, see <code>ErrorMessage</code>.</p> </li>
    /// </ul>
    pub fn status(mut self, input: crate::types::OperationStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the operation. Values include the following:</p>
    /// <ul>
    /// <li> <p> <b>SUBMITTED</b>: This is the initial state immediately after you submit a request.</p> </li>
    /// <li> <p> <b>PENDING</b>: Cloud Map is performing the operation.</p> </li>
    /// <li> <p> <b>SUCCESS</b>: The operation succeeded.</p> </li>
    /// <li> <p> <b>FAIL</b>: The operation failed. For the failure reason, see <code>ErrorMessage</code>.</p> </li>
    /// </ul>
    pub fn set_status(mut self, input: std::option::Option<crate::types::OperationStatus>) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`OperationSummary`](crate::types::OperationSummary).
    pub fn build(self) -> crate::types::OperationSummary {
        crate::types::OperationSummary {
            id: self.id,
            status: self.status,
        }
    }
}
