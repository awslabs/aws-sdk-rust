// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains the ID for the Route&nbsp;53 hosted zone that Cloud Map creates when you create a namespace.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DnsProperties {
    /// <p>The ID for the Route&nbsp;53 hosted zone that Cloud Map creates when you create a namespace.</p>
    #[doc(hidden)]
    pub hosted_zone_id: std::option::Option<std::string::String>,
    /// <p>Start of Authority (SOA) record for the hosted zone.</p>
    #[doc(hidden)]
    pub soa: std::option::Option<crate::types::Soa>,
}
impl DnsProperties {
    /// <p>The ID for the Route&nbsp;53 hosted zone that Cloud Map creates when you create a namespace.</p>
    pub fn hosted_zone_id(&self) -> std::option::Option<&str> {
        self.hosted_zone_id.as_deref()
    }
    /// <p>Start of Authority (SOA) record for the hosted zone.</p>
    pub fn soa(&self) -> std::option::Option<&crate::types::Soa> {
        self.soa.as_ref()
    }
}
impl DnsProperties {
    /// Creates a new builder-style object to manufacture [`DnsProperties`](crate::types::DnsProperties).
    pub fn builder() -> crate::types::builders::DnsPropertiesBuilder {
        crate::types::builders::DnsPropertiesBuilder::default()
    }
}

/// A builder for [`DnsProperties`](crate::types::DnsProperties).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DnsPropertiesBuilder {
    pub(crate) hosted_zone_id: std::option::Option<std::string::String>,
    pub(crate) soa: std::option::Option<crate::types::Soa>,
}
impl DnsPropertiesBuilder {
    /// <p>The ID for the Route&nbsp;53 hosted zone that Cloud Map creates when you create a namespace.</p>
    pub fn hosted_zone_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.hosted_zone_id = Some(input.into());
        self
    }
    /// <p>The ID for the Route&nbsp;53 hosted zone that Cloud Map creates when you create a namespace.</p>
    pub fn set_hosted_zone_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.hosted_zone_id = input;
        self
    }
    /// <p>Start of Authority (SOA) record for the hosted zone.</p>
    pub fn soa(mut self, input: crate::types::Soa) -> Self {
        self.soa = Some(input);
        self
    }
    /// <p>Start of Authority (SOA) record for the hosted zone.</p>
    pub fn set_soa(mut self, input: std::option::Option<crate::types::Soa>) -> Self {
        self.soa = input;
        self
    }
    /// Consumes the builder and constructs a [`DnsProperties`](crate::types::DnsProperties).
    pub fn build(self) -> crate::types::DnsProperties {
        crate::types::DnsProperties {
            hosted_zone_id: self.hosted_zone_id,
            soa: self.soa,
        }
    }
}
