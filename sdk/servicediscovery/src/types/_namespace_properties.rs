// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains information that's specific to the namespace type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NamespaceProperties {
    /// <p>A complex type that contains the ID for the Route&nbsp;53 hosted zone that Cloud Map creates when you create a namespace.</p>
    #[doc(hidden)]
    pub dns_properties: std::option::Option<crate::types::DnsProperties>,
    /// <p>A complex type that contains the name of an HTTP namespace.</p>
    #[doc(hidden)]
    pub http_properties: std::option::Option<crate::types::HttpProperties>,
}
impl NamespaceProperties {
    /// <p>A complex type that contains the ID for the Route&nbsp;53 hosted zone that Cloud Map creates when you create a namespace.</p>
    pub fn dns_properties(&self) -> std::option::Option<&crate::types::DnsProperties> {
        self.dns_properties.as_ref()
    }
    /// <p>A complex type that contains the name of an HTTP namespace.</p>
    pub fn http_properties(&self) -> std::option::Option<&crate::types::HttpProperties> {
        self.http_properties.as_ref()
    }
}
impl NamespaceProperties {
    /// Creates a new builder-style object to manufacture [`NamespaceProperties`](crate::types::NamespaceProperties).
    pub fn builder() -> crate::types::builders::NamespacePropertiesBuilder {
        crate::types::builders::NamespacePropertiesBuilder::default()
    }
}

/// A builder for [`NamespaceProperties`](crate::types::NamespaceProperties).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NamespacePropertiesBuilder {
    pub(crate) dns_properties: std::option::Option<crate::types::DnsProperties>,
    pub(crate) http_properties: std::option::Option<crate::types::HttpProperties>,
}
impl NamespacePropertiesBuilder {
    /// <p>A complex type that contains the ID for the Route&nbsp;53 hosted zone that Cloud Map creates when you create a namespace.</p>
    pub fn dns_properties(mut self, input: crate::types::DnsProperties) -> Self {
        self.dns_properties = Some(input);
        self
    }
    /// <p>A complex type that contains the ID for the Route&nbsp;53 hosted zone that Cloud Map creates when you create a namespace.</p>
    pub fn set_dns_properties(
        mut self,
        input: std::option::Option<crate::types::DnsProperties>,
    ) -> Self {
        self.dns_properties = input;
        self
    }
    /// <p>A complex type that contains the name of an HTTP namespace.</p>
    pub fn http_properties(mut self, input: crate::types::HttpProperties) -> Self {
        self.http_properties = Some(input);
        self
    }
    /// <p>A complex type that contains the name of an HTTP namespace.</p>
    pub fn set_http_properties(
        mut self,
        input: std::option::Option<crate::types::HttpProperties>,
    ) -> Self {
        self.http_properties = input;
        self
    }
    /// Consumes the builder and constructs a [`NamespaceProperties`](crate::types::NamespaceProperties).
    pub fn build(self) -> crate::types::NamespaceProperties {
        crate::types::NamespaceProperties {
            dns_properties: self.dns_properties,
            http_properties: self.http_properties,
        }
    }
}
