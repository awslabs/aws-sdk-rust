// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains information about changes to the Route&nbsp;53 DNS records that Cloud Map creates when you register an instance.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DnsConfigChange {
    /// <p>An array that contains one <code>DnsRecord</code> object for each Route&nbsp;53 record that you want Cloud Map to create when you register an instance.</p>
    #[doc(hidden)]
    pub dns_records: std::option::Option<std::vec::Vec<crate::types::DnsRecord>>,
}
impl DnsConfigChange {
    /// <p>An array that contains one <code>DnsRecord</code> object for each Route&nbsp;53 record that you want Cloud Map to create when you register an instance.</p>
    pub fn dns_records(&self) -> std::option::Option<&[crate::types::DnsRecord]> {
        self.dns_records.as_deref()
    }
}
impl DnsConfigChange {
    /// Creates a new builder-style object to manufacture [`DnsConfigChange`](crate::types::DnsConfigChange).
    pub fn builder() -> crate::types::builders::DnsConfigChangeBuilder {
        crate::types::builders::DnsConfigChangeBuilder::default()
    }
}

/// A builder for [`DnsConfigChange`](crate::types::DnsConfigChange).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DnsConfigChangeBuilder {
    pub(crate) dns_records: std::option::Option<std::vec::Vec<crate::types::DnsRecord>>,
}
impl DnsConfigChangeBuilder {
    /// Appends an item to `dns_records`.
    ///
    /// To override the contents of this collection use [`set_dns_records`](Self::set_dns_records).
    ///
    /// <p>An array that contains one <code>DnsRecord</code> object for each Route&nbsp;53 record that you want Cloud Map to create when you register an instance.</p>
    pub fn dns_records(mut self, input: crate::types::DnsRecord) -> Self {
        let mut v = self.dns_records.unwrap_or_default();
        v.push(input);
        self.dns_records = Some(v);
        self
    }
    /// <p>An array that contains one <code>DnsRecord</code> object for each Route&nbsp;53 record that you want Cloud Map to create when you register an instance.</p>
    pub fn set_dns_records(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DnsRecord>>,
    ) -> Self {
        self.dns_records = input;
        self
    }
    /// Consumes the builder and constructs a [`DnsConfigChange`](crate::types::DnsConfigChange).
    pub fn build(self) -> crate::types::DnsConfigChange {
        crate::types::DnsConfigChange {
            dns_records: self.dns_records,
        }
    }
}
