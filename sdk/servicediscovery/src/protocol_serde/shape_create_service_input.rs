// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_service_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_service::CreateServiceInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.name {
        object.key("Name").string(var_1.as_str());
    }
    if let Some(var_2) = &input.namespace_id {
        object.key("NamespaceId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.creator_request_id {
        object.key("CreatorRequestId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.description {
        object.key("Description").string(var_4.as_str());
    }
    if let Some(var_5) = &input.dns_config {
        #[allow(unused_mut)]
        let mut object_6 = object.key("DnsConfig").start_object();
        crate::protocol_serde::shape_dns_config::ser_dns_config(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.health_check_config {
        #[allow(unused_mut)]
        let mut object_8 = object.key("HealthCheckConfig").start_object();
        crate::protocol_serde::shape_health_check_config::ser_health_check_config(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.health_check_custom_config {
        #[allow(unused_mut)]
        let mut object_10 = object.key("HealthCheckCustomConfig").start_object();
        crate::protocol_serde::shape_health_check_custom_config::ser_health_check_custom_config(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.tags {
        let mut array_12 = object.key("Tags").start_array();
        for item_13 in var_11 {
            {
                #[allow(unused_mut)]
                let mut object_14 = array_12.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_14, item_13)?;
                object_14.finish();
            }
        }
        array_12.finish();
    }
    if let Some(var_15) = &input.r#type {
        object.key("Type").string(var_15.as_str());
    }
    Ok(())
}
