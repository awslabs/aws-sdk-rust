// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeServicesInput {
    /// <p>A JSON-formatted list of service codes available for Amazon Web Services services.</p>
    #[doc(hidden)]
    pub service_code_list: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The language in which Amazon Web Services Support handles the case. Amazon Web Services Support currently supports English ("en") and Japanese ("ja"). You must specify the ISO 639-1 code for the <code>language</code> parameter if you want support in that language.</p>
    #[doc(hidden)]
    pub language: std::option::Option<std::string::String>,
}
impl DescribeServicesInput {
    /// <p>A JSON-formatted list of service codes available for Amazon Web Services services.</p>
    pub fn service_code_list(&self) -> std::option::Option<&[std::string::String]> {
        self.service_code_list.as_deref()
    }
    /// <p>The language in which Amazon Web Services Support handles the case. Amazon Web Services Support currently supports English ("en") and Japanese ("ja"). You must specify the ISO 639-1 code for the <code>language</code> parameter if you want support in that language.</p>
    pub fn language(&self) -> std::option::Option<&str> {
        self.language.as_deref()
    }
}
impl DescribeServicesInput {
    /// Creates a new builder-style object to manufacture [`DescribeServicesInput`](crate::operation::describe_services::DescribeServicesInput).
    pub fn builder() -> crate::operation::describe_services::builders::DescribeServicesInputBuilder
    {
        crate::operation::describe_services::builders::DescribeServicesInputBuilder::default()
    }
}

/// A builder for [`DescribeServicesInput`](crate::operation::describe_services::DescribeServicesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeServicesInputBuilder {
    pub(crate) service_code_list: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) language: std::option::Option<std::string::String>,
}
impl DescribeServicesInputBuilder {
    /// Appends an item to `service_code_list`.
    ///
    /// To override the contents of this collection use [`set_service_code_list`](Self::set_service_code_list).
    ///
    /// <p>A JSON-formatted list of service codes available for Amazon Web Services services.</p>
    pub fn service_code_list(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.service_code_list.unwrap_or_default();
        v.push(input.into());
        self.service_code_list = Some(v);
        self
    }
    /// <p>A JSON-formatted list of service codes available for Amazon Web Services services.</p>
    pub fn set_service_code_list(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.service_code_list = input;
        self
    }
    /// <p>The language in which Amazon Web Services Support handles the case. Amazon Web Services Support currently supports English ("en") and Japanese ("ja"). You must specify the ISO 639-1 code for the <code>language</code> parameter if you want support in that language.</p>
    pub fn language(mut self, input: impl Into<std::string::String>) -> Self {
        self.language = Some(input.into());
        self
    }
    /// <p>The language in which Amazon Web Services Support handles the case. Amazon Web Services Support currently supports English ("en") and Japanese ("ja"). You must specify the ISO 639-1 code for the <code>language</code> parameter if you want support in that language.</p>
    pub fn set_language(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.language = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeServicesInput`](crate::operation::describe_services::DescribeServicesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_services::DescribeServicesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_services::DescribeServicesInput {
            service_code_list: self.service_code_list,
            language: self.language,
        })
    }
}
