// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The list of severity levels returned by the <code>DescribeSeverityLevels</code> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeSeverityLevelsOutput {
    /// <p>The available severity levels for the support case. Available severity levels are defined by your service level agreement with Amazon Web Services.</p>
    pub severity_levels: ::std::option::Option<::std::vec::Vec<crate::types::SeverityLevel>>,
    _request_id: Option<String>,
}
impl DescribeSeverityLevelsOutput {
    /// <p>The available severity levels for the support case. Available severity levels are defined by your service level agreement with Amazon Web Services.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.severity_levels.is_none()`.
    pub fn severity_levels(&self) -> &[crate::types::SeverityLevel] {
        self.severity_levels.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for DescribeSeverityLevelsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeSeverityLevelsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeSeverityLevelsOutput`](crate::operation::describe_severity_levels::DescribeSeverityLevelsOutput).
    pub fn builder() -> crate::operation::describe_severity_levels::builders::DescribeSeverityLevelsOutputBuilder {
        crate::operation::describe_severity_levels::builders::DescribeSeverityLevelsOutputBuilder::default()
    }
}

/// A builder for [`DescribeSeverityLevelsOutput`](crate::operation::describe_severity_levels::DescribeSeverityLevelsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeSeverityLevelsOutputBuilder {
    pub(crate) severity_levels: ::std::option::Option<::std::vec::Vec<crate::types::SeverityLevel>>,
    _request_id: Option<String>,
}
impl DescribeSeverityLevelsOutputBuilder {
    /// Appends an item to `severity_levels`.
    ///
    /// To override the contents of this collection use [`set_severity_levels`](Self::set_severity_levels).
    ///
    /// <p>The available severity levels for the support case. Available severity levels are defined by your service level agreement with Amazon Web Services.</p>
    pub fn severity_levels(mut self, input: crate::types::SeverityLevel) -> Self {
        let mut v = self.severity_levels.unwrap_or_default();
        v.push(input);
        self.severity_levels = ::std::option::Option::Some(v);
        self
    }
    /// <p>The available severity levels for the support case. Available severity levels are defined by your service level agreement with Amazon Web Services.</p>
    pub fn set_severity_levels(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::SeverityLevel>>) -> Self {
        self.severity_levels = input;
        self
    }
    /// <p>The available severity levels for the support case. Available severity levels are defined by your service level agreement with Amazon Web Services.</p>
    pub fn get_severity_levels(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::SeverityLevel>> {
        &self.severity_levels
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeSeverityLevelsOutput`](crate::operation::describe_severity_levels::DescribeSeverityLevelsOutput).
    pub fn build(self) -> crate::operation::describe_severity_levels::DescribeSeverityLevelsOutput {
        crate::operation::describe_severity_levels::DescribeSeverityLevelsOutput {
            severity_levels: self.severity_levels,
            _request_id: self._request_id,
        }
    }
}
