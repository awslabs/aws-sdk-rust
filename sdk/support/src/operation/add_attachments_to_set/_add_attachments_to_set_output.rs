// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The ID and expiry time of the attachment set returned by the <code>AddAttachmentsToSet</code> operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AddAttachmentsToSetOutput {
    /// <p>The ID of the attachment set. If an <code>attachmentSetId</code> was not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> was specified, the attachments are added to the specified set, if it exists.</p>
    #[doc(hidden)]
    pub attachment_set_id: std::option::Option<std::string::String>,
    /// <p>The time and date when the attachment set expires.</p>
    #[doc(hidden)]
    pub expiry_time: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl AddAttachmentsToSetOutput {
    /// <p>The ID of the attachment set. If an <code>attachmentSetId</code> was not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> was specified, the attachments are added to the specified set, if it exists.</p>
    pub fn attachment_set_id(&self) -> std::option::Option<&str> {
        self.attachment_set_id.as_deref()
    }
    /// <p>The time and date when the attachment set expires.</p>
    pub fn expiry_time(&self) -> std::option::Option<&str> {
        self.expiry_time.as_deref()
    }
}
impl aws_http::request_id::RequestId for AddAttachmentsToSetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AddAttachmentsToSetOutput {
    /// Creates a new builder-style object to manufacture [`AddAttachmentsToSetOutput`](crate::operation::add_attachments_to_set::AddAttachmentsToSetOutput).
    pub fn builder(
    ) -> crate::operation::add_attachments_to_set::builders::AddAttachmentsToSetOutputBuilder {
        crate::operation::add_attachments_to_set::builders::AddAttachmentsToSetOutputBuilder::default()
    }
}

/// A builder for [`AddAttachmentsToSetOutput`](crate::operation::add_attachments_to_set::AddAttachmentsToSetOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AddAttachmentsToSetOutputBuilder {
    pub(crate) attachment_set_id: std::option::Option<std::string::String>,
    pub(crate) expiry_time: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl AddAttachmentsToSetOutputBuilder {
    /// <p>The ID of the attachment set. If an <code>attachmentSetId</code> was not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> was specified, the attachments are added to the specified set, if it exists.</p>
    pub fn attachment_set_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.attachment_set_id = Some(input.into());
        self
    }
    /// <p>The ID of the attachment set. If an <code>attachmentSetId</code> was not specified, a new attachment set is created, and the ID of the set is returned in the response. If an <code>attachmentSetId</code> was specified, the attachments are added to the specified set, if it exists.</p>
    pub fn set_attachment_set_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.attachment_set_id = input;
        self
    }
    /// <p>The time and date when the attachment set expires.</p>
    pub fn expiry_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.expiry_time = Some(input.into());
        self
    }
    /// <p>The time and date when the attachment set expires.</p>
    pub fn set_expiry_time(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.expiry_time = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AddAttachmentsToSetOutput`](crate::operation::add_attachments_to_set::AddAttachmentsToSetOutput).
    pub fn build(self) -> crate::operation::add_attachments_to_set::AddAttachmentsToSetOutput {
        crate::operation::add_attachments_to_set::AddAttachmentsToSetOutput {
            attachment_set_id: self.attachment_set_id,
            expiry_time: self.expiry_time,
            _request_id: self._request_id,
        }
    }
}
