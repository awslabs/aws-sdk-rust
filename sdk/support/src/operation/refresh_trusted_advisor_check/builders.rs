// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::refresh_trusted_advisor_check::_refresh_trusted_advisor_check_output::RefreshTrustedAdvisorCheckOutputBuilder;

pub use crate::operation::refresh_trusted_advisor_check::_refresh_trusted_advisor_check_input::RefreshTrustedAdvisorCheckInputBuilder;

/// Fluent builder constructing a request to `RefreshTrustedAdvisorCheck`.
///
/// <p>Refreshes the Trusted Advisor check that you specify using the check ID. You can get the check IDs by calling the <code>DescribeTrustedAdvisorChecks</code> operation.</p>
/// <p>Some checks are refreshed automatically. If you call the <code>RefreshTrustedAdvisorCheck</code> operation to refresh them, you might see the <code>InvalidParameterValue</code> error.</p>
/// <p>The response contains a <code>TrustedAdvisorCheckRefreshStatus</code> object.</p> <note>
/// <ul>
/// <li> <p>You must have a Business, Enterprise On-Ramp, or Enterprise Support plan to use the Amazon Web Services Support API. </p> </li>
/// <li> <p>If you call the Amazon Web Services Support API from an account that doesn't have a Business, Enterprise On-Ramp, or Enterprise Support plan, the <code>SubscriptionRequiredException</code> error message appears. For information about changing your support plan, see <a href="http://aws.amazon.com/premiumsupport/">Amazon Web Services Support</a>.</p> </li>
/// </ul>
/// </note>
/// <p>To call the Trusted Advisor operations in the Amazon Web Services Support API, you must use the US East (N. Virginia) endpoint. Currently, the US West (Oregon) and Europe (Ireland) endpoints don't support the Trusted Advisor operations. For more information, see <a href="https://docs.aws.amazon.com/awssupport/latest/user/about-support-api.html#endpoint">About the Amazon Web Services Support API</a> in the <i>Amazon Web Services Support User Guide</i>.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct RefreshTrustedAdvisorCheckFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::refresh_trusted_advisor_check::builders::RefreshTrustedAdvisorCheckInputBuilder
            }
impl RefreshTrustedAdvisorCheckFluentBuilder {
    /// Creates a new `RefreshTrustedAdvisorCheck`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::refresh_trusted_advisor_check::RefreshTrustedAdvisorCheck,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::refresh_trusted_advisor_check::RefreshTrustedAdvisorCheckError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::refresh_trusted_advisor_check::RefreshTrustedAdvisorCheckOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::refresh_trusted_advisor_check::RefreshTrustedAdvisorCheckError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The unique identifier for the Trusted Advisor check to refresh.</p> <note>
    /// <p>Specifying the check ID of a check that is automatically refreshed causes an <code>InvalidParameterValue</code> error.</p>
    /// </note>
    pub fn check_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.check_id(input.into());
        self
    }
    /// <p>The unique identifier for the Trusted Advisor check to refresh.</p> <note>
    /// <p>Specifying the check ID of a check that is automatically refreshed causes an <code>InvalidParameterValue</code> error.</p>
    /// </note>
    pub fn set_check_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_check_id(input);
        self
    }
}
