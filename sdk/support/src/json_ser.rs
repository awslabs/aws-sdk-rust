// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_add_attachments_to_set_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AddAttachmentsToSetInput,
) {
    if let Some(var_1) = &input.attachment_set_id {
        object.key("attachmentSetId").string(var_1);
    }
    if let Some(var_2) = &input.attachments {
        let mut array_3 = object.key("attachments").start_array();
        for item_4 in var_2 {
            {
                let mut object_5 = array_3.value().start_object();
                crate::json_ser::serialize_structure_crate_model_attachment(&mut object_5, item_4);
                object_5.finish();
            }
        }
        array_3.finish();
    }
}

pub fn serialize_structure_crate_input_add_communication_to_case_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AddCommunicationToCaseInput,
) {
    if let Some(var_6) = &input.case_id {
        object.key("caseId").string(var_6);
    }
    if let Some(var_7) = &input.communication_body {
        object.key("communicationBody").string(var_7);
    }
    if let Some(var_8) = &input.cc_email_addresses {
        let mut array_9 = object.key("ccEmailAddresses").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10);
            }
        }
        array_9.finish();
    }
    if let Some(var_11) = &input.attachment_set_id {
        object.key("attachmentSetId").string(var_11);
    }
}

pub fn serialize_structure_crate_input_create_case_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateCaseInput,
) {
    if let Some(var_12) = &input.subject {
        object.key("subject").string(var_12);
    }
    if let Some(var_13) = &input.service_code {
        object.key("serviceCode").string(var_13);
    }
    if let Some(var_14) = &input.severity_code {
        object.key("severityCode").string(var_14);
    }
    if let Some(var_15) = &input.category_code {
        object.key("categoryCode").string(var_15);
    }
    if let Some(var_16) = &input.communication_body {
        object.key("communicationBody").string(var_16);
    }
    if let Some(var_17) = &input.cc_email_addresses {
        let mut array_18 = object.key("ccEmailAddresses").start_array();
        for item_19 in var_17 {
            {
                array_18.value().string(item_19);
            }
        }
        array_18.finish();
    }
    if let Some(var_20) = &input.language {
        object.key("language").string(var_20);
    }
    if let Some(var_21) = &input.issue_type {
        object.key("issueType").string(var_21);
    }
    if let Some(var_22) = &input.attachment_set_id {
        object.key("attachmentSetId").string(var_22);
    }
}

pub fn serialize_structure_crate_input_describe_attachment_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeAttachmentInput,
) {
    if let Some(var_23) = &input.attachment_id {
        object.key("attachmentId").string(var_23);
    }
}

pub fn serialize_structure_crate_input_describe_cases_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeCasesInput,
) {
    if let Some(var_24) = &input.case_id_list {
        let mut array_25 = object.key("caseIdList").start_array();
        for item_26 in var_24 {
            {
                array_25.value().string(item_26);
            }
        }
        array_25.finish();
    }
    if let Some(var_27) = &input.display_id {
        object.key("displayId").string(var_27);
    }
    if let Some(var_28) = &input.after_time {
        object.key("afterTime").string(var_28);
    }
    if let Some(var_29) = &input.before_time {
        object.key("beforeTime").string(var_29);
    }
    if input.include_resolved_cases {
        object
            .key("includeResolvedCases")
            .boolean(input.include_resolved_cases);
    }
    if let Some(var_30) = &input.next_token {
        object.key("nextToken").string(var_30);
    }
    if let Some(var_31) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_31).into()),
        );
    }
    if let Some(var_32) = &input.language {
        object.key("language").string(var_32);
    }
    if let Some(var_33) = &input.include_communications {
        object.key("includeCommunications").boolean(*var_33);
    }
}

pub fn serialize_structure_crate_input_describe_communications_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeCommunicationsInput,
) {
    if let Some(var_34) = &input.case_id {
        object.key("caseId").string(var_34);
    }
    if let Some(var_35) = &input.before_time {
        object.key("beforeTime").string(var_35);
    }
    if let Some(var_36) = &input.after_time {
        object.key("afterTime").string(var_36);
    }
    if let Some(var_37) = &input.next_token {
        object.key("nextToken").string(var_37);
    }
    if let Some(var_38) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_38).into()),
        );
    }
}

pub fn serialize_structure_crate_input_describe_services_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeServicesInput,
) {
    if let Some(var_39) = &input.service_code_list {
        let mut array_40 = object.key("serviceCodeList").start_array();
        for item_41 in var_39 {
            {
                array_40.value().string(item_41);
            }
        }
        array_40.finish();
    }
    if let Some(var_42) = &input.language {
        object.key("language").string(var_42);
    }
}

pub fn serialize_structure_crate_input_describe_severity_levels_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeSeverityLevelsInput,
) {
    if let Some(var_43) = &input.language {
        object.key("language").string(var_43);
    }
}

pub fn serialize_structure_crate_input_describe_trusted_advisor_check_refresh_statuses_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeTrustedAdvisorCheckRefreshStatusesInput,
) {
    if let Some(var_44) = &input.check_ids {
        let mut array_45 = object.key("checkIds").start_array();
        for item_46 in var_44 {
            {
                array_45.value().string(item_46);
            }
        }
        array_45.finish();
    }
}

pub fn serialize_structure_crate_input_describe_trusted_advisor_check_result_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeTrustedAdvisorCheckResultInput,
) {
    if let Some(var_47) = &input.check_id {
        object.key("checkId").string(var_47);
    }
    if let Some(var_48) = &input.language {
        object.key("language").string(var_48);
    }
}

pub fn serialize_structure_crate_input_describe_trusted_advisor_checks_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeTrustedAdvisorChecksInput,
) {
    if let Some(var_49) = &input.language {
        object.key("language").string(var_49);
    }
}

pub fn serialize_structure_crate_input_describe_trusted_advisor_check_summaries_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeTrustedAdvisorCheckSummariesInput,
) {
    if let Some(var_50) = &input.check_ids {
        let mut array_51 = object.key("checkIds").start_array();
        for item_52 in var_50 {
            {
                array_51.value().string(item_52);
            }
        }
        array_51.finish();
    }
}

pub fn serialize_structure_crate_input_refresh_trusted_advisor_check_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RefreshTrustedAdvisorCheckInput,
) {
    if let Some(var_53) = &input.check_id {
        object.key("checkId").string(var_53);
    }
}

pub fn serialize_structure_crate_input_resolve_case_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ResolveCaseInput,
) {
    if let Some(var_54) = &input.case_id {
        object.key("caseId").string(var_54);
    }
}

pub fn serialize_structure_crate_model_attachment(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Attachment,
) {
    if let Some(var_55) = &input.file_name {
        object.key("fileName").string(var_55);
    }
    if let Some(var_56) = &input.data {
        object
            .key("data")
            .string_unchecked(&smithy_types::base64::encode(var_56));
    }
}
