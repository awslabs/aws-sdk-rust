// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The five most recent communications associated with the case.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RecentCaseCommunications {
    /// <p>The five most recent communications associated with the case.</p>
    #[doc(hidden)]
    pub communications: std::option::Option<std::vec::Vec<crate::types::Communication>>,
    /// <p>A resumption point for pagination.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl RecentCaseCommunications {
    /// <p>The five most recent communications associated with the case.</p>
    pub fn communications(&self) -> std::option::Option<&[crate::types::Communication]> {
        self.communications.as_deref()
    }
    /// <p>A resumption point for pagination.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl RecentCaseCommunications {
    /// Creates a new builder-style object to manufacture [`RecentCaseCommunications`](crate::types::RecentCaseCommunications).
    pub fn builder() -> crate::types::builders::RecentCaseCommunicationsBuilder {
        crate::types::builders::RecentCaseCommunicationsBuilder::default()
    }
}

/// A builder for [`RecentCaseCommunications`](crate::types::RecentCaseCommunications).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RecentCaseCommunicationsBuilder {
    pub(crate) communications: std::option::Option<std::vec::Vec<crate::types::Communication>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl RecentCaseCommunicationsBuilder {
    /// Appends an item to `communications`.
    ///
    /// To override the contents of this collection use [`set_communications`](Self::set_communications).
    ///
    /// <p>The five most recent communications associated with the case.</p>
    pub fn communications(mut self, input: crate::types::Communication) -> Self {
        let mut v = self.communications.unwrap_or_default();
        v.push(input);
        self.communications = Some(v);
        self
    }
    /// <p>The five most recent communications associated with the case.</p>
    pub fn set_communications(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Communication>>,
    ) -> Self {
        self.communications = input;
        self
    }
    /// <p>A resumption point for pagination.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A resumption point for pagination.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`RecentCaseCommunications`](crate::types::RecentCaseCommunications).
    pub fn build(self) -> crate::types::RecentCaseCommunications {
        crate::types::RecentCaseCommunications {
            communications: self.communications,
            next_token: self.next_token,
        }
    }
}
