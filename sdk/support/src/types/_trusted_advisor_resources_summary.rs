// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about Amazon Web Services resources that were analyzed in a call to Trusted Advisor <code>DescribeTrustedAdvisorCheckSummaries</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TrustedAdvisorResourcesSummary {
    /// <p>The number of Amazon Web Services resources that were analyzed by the Trusted Advisor check.</p>
    pub resources_processed: i64,
    /// <p>The number of Amazon Web Services resources that were flagged (listed) by the Trusted Advisor check.</p>
    pub resources_flagged: i64,
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because information was unavailable.</p>
    pub resources_ignored: i64,
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because they were marked as suppressed by the user.</p>
    pub resources_suppressed: i64,
}
impl TrustedAdvisorResourcesSummary {
    /// <p>The number of Amazon Web Services resources that were analyzed by the Trusted Advisor check.</p>
    pub fn resources_processed(&self) -> i64 {
        self.resources_processed
    }
    /// <p>The number of Amazon Web Services resources that were flagged (listed) by the Trusted Advisor check.</p>
    pub fn resources_flagged(&self) -> i64 {
        self.resources_flagged
    }
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because information was unavailable.</p>
    pub fn resources_ignored(&self) -> i64 {
        self.resources_ignored
    }
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because they were marked as suppressed by the user.</p>
    pub fn resources_suppressed(&self) -> i64 {
        self.resources_suppressed
    }
}
impl TrustedAdvisorResourcesSummary {
    /// Creates a new builder-style object to manufacture [`TrustedAdvisorResourcesSummary`](crate::types::TrustedAdvisorResourcesSummary).
    pub fn builder() -> crate::types::builders::TrustedAdvisorResourcesSummaryBuilder {
        crate::types::builders::TrustedAdvisorResourcesSummaryBuilder::default()
    }
}

/// A builder for [`TrustedAdvisorResourcesSummary`](crate::types::TrustedAdvisorResourcesSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TrustedAdvisorResourcesSummaryBuilder {
    pub(crate) resources_processed: ::std::option::Option<i64>,
    pub(crate) resources_flagged: ::std::option::Option<i64>,
    pub(crate) resources_ignored: ::std::option::Option<i64>,
    pub(crate) resources_suppressed: ::std::option::Option<i64>,
}
impl TrustedAdvisorResourcesSummaryBuilder {
    /// <p>The number of Amazon Web Services resources that were analyzed by the Trusted Advisor check.</p>
    /// This field is required.
    pub fn resources_processed(mut self, input: i64) -> Self {
        self.resources_processed = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of Amazon Web Services resources that were analyzed by the Trusted Advisor check.</p>
    pub fn set_resources_processed(mut self, input: ::std::option::Option<i64>) -> Self {
        self.resources_processed = input;
        self
    }
    /// <p>The number of Amazon Web Services resources that were analyzed by the Trusted Advisor check.</p>
    pub fn get_resources_processed(&self) -> &::std::option::Option<i64> {
        &self.resources_processed
    }
    /// <p>The number of Amazon Web Services resources that were flagged (listed) by the Trusted Advisor check.</p>
    /// This field is required.
    pub fn resources_flagged(mut self, input: i64) -> Self {
        self.resources_flagged = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of Amazon Web Services resources that were flagged (listed) by the Trusted Advisor check.</p>
    pub fn set_resources_flagged(mut self, input: ::std::option::Option<i64>) -> Self {
        self.resources_flagged = input;
        self
    }
    /// <p>The number of Amazon Web Services resources that were flagged (listed) by the Trusted Advisor check.</p>
    pub fn get_resources_flagged(&self) -> &::std::option::Option<i64> {
        &self.resources_flagged
    }
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because information was unavailable.</p>
    /// This field is required.
    pub fn resources_ignored(mut self, input: i64) -> Self {
        self.resources_ignored = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because information was unavailable.</p>
    pub fn set_resources_ignored(mut self, input: ::std::option::Option<i64>) -> Self {
        self.resources_ignored = input;
        self
    }
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because information was unavailable.</p>
    pub fn get_resources_ignored(&self) -> &::std::option::Option<i64> {
        &self.resources_ignored
    }
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because they were marked as suppressed by the user.</p>
    /// This field is required.
    pub fn resources_suppressed(mut self, input: i64) -> Self {
        self.resources_suppressed = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because they were marked as suppressed by the user.</p>
    pub fn set_resources_suppressed(mut self, input: ::std::option::Option<i64>) -> Self {
        self.resources_suppressed = input;
        self
    }
    /// <p>The number of Amazon Web Services resources ignored by Trusted Advisor because they were marked as suppressed by the user.</p>
    pub fn get_resources_suppressed(&self) -> &::std::option::Option<i64> {
        &self.resources_suppressed
    }
    /// Consumes the builder and constructs a [`TrustedAdvisorResourcesSummary`](crate::types::TrustedAdvisorResourcesSummary).
    pub fn build(self) -> crate::types::TrustedAdvisorResourcesSummary {
        crate::types::TrustedAdvisorResourcesSummary {
            resources_processed: self.resources_processed.unwrap_or_default(),
            resources_flagged: self.resources_flagged.unwrap_or_default(),
            resources_ignored: self.resources_ignored.unwrap_or_default(),
            resources_suppressed: self.resources_suppressed.unwrap_or_default(),
        }
    }
}
