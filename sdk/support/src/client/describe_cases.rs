// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeCases`](crate::client::fluent_builders::DescribeCases) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeCases::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`case_id_list(Vec<String>)`](crate::client::fluent_builders::DescribeCases::case_id_list) / [`set_case_id_list(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeCases::set_case_id_list): <p>A list of ID numbers of the support cases you want returned. The maximum number of cases is 100.</p>
    ///   - [`display_id(impl Into<String>)`](crate::client::fluent_builders::DescribeCases::display_id) / [`set_display_id(Option<String>)`](crate::client::fluent_builders::DescribeCases::set_display_id): <p>The ID displayed for a case in the Amazon Web Services Support Center user interface.</p>
    ///   - [`after_time(impl Into<String>)`](crate::client::fluent_builders::DescribeCases::after_time) / [`set_after_time(Option<String>)`](crate::client::fluent_builders::DescribeCases::set_after_time): <p>The start date for a filtered date search on support case communications. Case communications are available for 12 months after creation.</p>
    ///   - [`before_time(impl Into<String>)`](crate::client::fluent_builders::DescribeCases::before_time) / [`set_before_time(Option<String>)`](crate::client::fluent_builders::DescribeCases::set_before_time): <p>The end date for a filtered date search on support case communications. Case communications are available for 12 months after creation.</p>
    ///   - [`include_resolved_cases(bool)`](crate::client::fluent_builders::DescribeCases::include_resolved_cases) / [`set_include_resolved_cases(bool)`](crate::client::fluent_builders::DescribeCases::set_include_resolved_cases): <p>Specifies whether to include resolved support cases in the <code>DescribeCases</code> response. By default, resolved cases aren't included.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeCases::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeCases::set_next_token): <p>A resumption point for pagination.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeCases::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeCases::set_max_results): <p>The maximum number of results to return before paginating.</p>
    ///   - [`language(impl Into<String>)`](crate::client::fluent_builders::DescribeCases::language) / [`set_language(Option<String>)`](crate::client::fluent_builders::DescribeCases::set_language): <p>The language in which Amazon Web Services Support handles the case. Amazon Web Services Support currently supports English ("en") and Japanese ("ja"). You must specify the ISO 639-1 code for the <code>language</code> parameter if you want support in that language.</p>
    ///   - [`include_communications(bool)`](crate::client::fluent_builders::DescribeCases::include_communications) / [`set_include_communications(Option<bool>)`](crate::client::fluent_builders::DescribeCases::set_include_communications): <p>Specifies whether to include communications in the <code>DescribeCases</code> response. By default, communications are included.</p>
    /// - On success, responds with [`DescribeCasesOutput`](crate::output::DescribeCasesOutput) with field(s):
    ///   - [`cases(Option<Vec<CaseDetails>>)`](crate::output::DescribeCasesOutput::cases): <p>The details for the cases that match the request.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeCasesOutput::next_token): <p>A resumption point for pagination.</p>
    /// - On failure, responds with [`SdkError<DescribeCasesError>`](crate::error::DescribeCasesError)
    pub fn describe_cases(&self) -> crate::client::fluent_builders::DescribeCases {
        crate::client::fluent_builders::DescribeCases::new(self.handle.clone())
    }
}
