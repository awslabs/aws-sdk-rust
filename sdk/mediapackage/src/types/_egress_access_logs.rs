// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Configure egress access logging.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EgressAccessLogs {
    /// Customize the log group name.
    #[doc(hidden)]
    pub log_group_name: std::option::Option<std::string::String>,
}
impl EgressAccessLogs {
    /// Customize the log group name.
    pub fn log_group_name(&self) -> std::option::Option<&str> {
        self.log_group_name.as_deref()
    }
}
impl EgressAccessLogs {
    /// Creates a new builder-style object to manufacture [`EgressAccessLogs`](crate::types::EgressAccessLogs).
    pub fn builder() -> crate::types::builders::EgressAccessLogsBuilder {
        crate::types::builders::EgressAccessLogsBuilder::default()
    }
}

/// A builder for [`EgressAccessLogs`](crate::types::EgressAccessLogs).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EgressAccessLogsBuilder {
    pub(crate) log_group_name: std::option::Option<std::string::String>,
}
impl EgressAccessLogsBuilder {
    /// Customize the log group name.
    pub fn log_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_group_name = Some(input.into());
        self
    }
    /// Customize the log group name.
    pub fn set_log_group_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_group_name = input;
        self
    }
    /// Consumes the builder and constructs a [`EgressAccessLogs`](crate::types::EgressAccessLogs).
    pub fn build(self) -> crate::types::EgressAccessLogs {
        crate::types::EgressAccessLogs {
            log_group_name: self.log_group_name,
        }
    }
}
