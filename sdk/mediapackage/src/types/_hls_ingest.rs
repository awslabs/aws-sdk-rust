// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// An HTTP Live Streaming (HLS) ingest resource configuration.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct HlsIngest {
    /// A list of endpoints to which the source stream should be sent.
    #[doc(hidden)]
    pub ingest_endpoints: std::option::Option<std::vec::Vec<crate::types::IngestEndpoint>>,
}
impl HlsIngest {
    /// A list of endpoints to which the source stream should be sent.
    pub fn ingest_endpoints(&self) -> std::option::Option<&[crate::types::IngestEndpoint]> {
        self.ingest_endpoints.as_deref()
    }
}
impl HlsIngest {
    /// Creates a new builder-style object to manufacture [`HlsIngest`](crate::types::HlsIngest).
    pub fn builder() -> crate::types::builders::HlsIngestBuilder {
        crate::types::builders::HlsIngestBuilder::default()
    }
}

/// A builder for [`HlsIngest`](crate::types::HlsIngest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct HlsIngestBuilder {
    pub(crate) ingest_endpoints: std::option::Option<std::vec::Vec<crate::types::IngestEndpoint>>,
}
impl HlsIngestBuilder {
    /// Appends an item to `ingest_endpoints`.
    ///
    /// To override the contents of this collection use [`set_ingest_endpoints`](Self::set_ingest_endpoints).
    ///
    /// A list of endpoints to which the source stream should be sent.
    pub fn ingest_endpoints(mut self, input: crate::types::IngestEndpoint) -> Self {
        let mut v = self.ingest_endpoints.unwrap_or_default();
        v.push(input);
        self.ingest_endpoints = Some(v);
        self
    }
    /// A list of endpoints to which the source stream should be sent.
    pub fn set_ingest_endpoints(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::IngestEndpoint>>,
    ) -> Self {
        self.ingest_endpoints = input;
        self
    }
    /// Consumes the builder and constructs a [`HlsIngest`](crate::types::HlsIngest).
    pub fn build(self) -> crate::types::HlsIngest {
        crate::types::HlsIngest {
            ingest_endpoints: self.ingest_endpoints,
        }
    }
}
