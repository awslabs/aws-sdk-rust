// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// CDN Authorization credentials
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Authorization {
    /// The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
    pub cdn_identifier_secret: ::std::option::Option<::std::string::String>,
    /// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
    pub secrets_role_arn: ::std::option::Option<::std::string::String>,
}
impl Authorization {
    /// The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
    pub fn cdn_identifier_secret(&self) -> ::std::option::Option<&str> {
        self.cdn_identifier_secret.as_deref()
    }
    /// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
    pub fn secrets_role_arn(&self) -> ::std::option::Option<&str> {
        self.secrets_role_arn.as_deref()
    }
}
impl Authorization {
    /// Creates a new builder-style object to manufacture [`Authorization`](crate::types::Authorization).
    pub fn builder() -> crate::types::builders::AuthorizationBuilder {
        crate::types::builders::AuthorizationBuilder::default()
    }
}

/// A builder for [`Authorization`](crate::types::Authorization).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AuthorizationBuilder {
    pub(crate) cdn_identifier_secret: ::std::option::Option<::std::string::String>,
    pub(crate) secrets_role_arn: ::std::option::Option<::std::string::String>,
}
impl AuthorizationBuilder {
    /// The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
    /// This field is required.
    pub fn cdn_identifier_secret(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cdn_identifier_secret = ::std::option::Option::Some(input.into());
        self
    }
    /// The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
    pub fn set_cdn_identifier_secret(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cdn_identifier_secret = input;
        self
    }
    /// The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
    pub fn get_cdn_identifier_secret(&self) -> &::std::option::Option<::std::string::String> {
        &self.cdn_identifier_secret
    }
    /// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
    /// This field is required.
    pub fn secrets_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.secrets_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
    pub fn set_secrets_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.secrets_role_arn = input;
        self
    }
    /// The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
    pub fn get_secrets_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.secrets_role_arn
    }
    /// Consumes the builder and constructs a [`Authorization`](crate::types::Authorization).
    pub fn build(self) -> crate::types::Authorization {
        crate::types::Authorization {
            cdn_identifier_secret: self.cdn_identifier_secret,
            secrets_role_arn: self.secrets_role_arn,
        }
    }
}
