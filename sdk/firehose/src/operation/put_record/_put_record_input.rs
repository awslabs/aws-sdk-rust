// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutRecordInput {
    /// <p>The name of the delivery stream.</p>
    #[doc(hidden)]
    pub delivery_stream_name: std::option::Option<std::string::String>,
    /// <p>The record.</p>
    #[doc(hidden)]
    pub record: std::option::Option<crate::types::Record>,
}
impl PutRecordInput {
    /// <p>The name of the delivery stream.</p>
    pub fn delivery_stream_name(&self) -> std::option::Option<&str> {
        self.delivery_stream_name.as_deref()
    }
    /// <p>The record.</p>
    pub fn record(&self) -> std::option::Option<&crate::types::Record> {
        self.record.as_ref()
    }
}
impl PutRecordInput {
    /// Creates a new builder-style object to manufacture [`PutRecordInput`](crate::operation::put_record::PutRecordInput).
    pub fn builder() -> crate::operation::put_record::builders::PutRecordInputBuilder {
        crate::operation::put_record::builders::PutRecordInputBuilder::default()
    }
}

/// A builder for [`PutRecordInput`](crate::operation::put_record::PutRecordInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutRecordInputBuilder {
    pub(crate) delivery_stream_name: std::option::Option<std::string::String>,
    pub(crate) record: std::option::Option<crate::types::Record>,
}
impl PutRecordInputBuilder {
    /// <p>The name of the delivery stream.</p>
    pub fn delivery_stream_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.delivery_stream_name = Some(input.into());
        self
    }
    /// <p>The name of the delivery stream.</p>
    pub fn set_delivery_stream_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.delivery_stream_name = input;
        self
    }
    /// <p>The record.</p>
    pub fn record(mut self, input: crate::types::Record) -> Self {
        self.record = Some(input);
        self
    }
    /// <p>The record.</p>
    pub fn set_record(mut self, input: std::option::Option<crate::types::Record>) -> Self {
        self.record = input;
        self
    }
    /// Consumes the builder and constructs a [`PutRecordInput`](crate::operation::put_record::PutRecordInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_record::PutRecordInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::put_record::PutRecordInput {
            delivery_stream_name: self.delivery_stream_name,
            record: self.record,
        })
    }
}
