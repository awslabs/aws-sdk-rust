// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon Redshift.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RedshiftRetryOptions {
    /// <p>The length of time during which Kinesis Data Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Kinesis Data Firehose does not retry if the value of <code>DurationInSeconds</code> is 0 (zero) or if the first delivery attempt takes longer than the current value.</p>
    #[doc(hidden)]
    pub duration_in_seconds: std::option::Option<i32>,
}
impl RedshiftRetryOptions {
    /// <p>The length of time during which Kinesis Data Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Kinesis Data Firehose does not retry if the value of <code>DurationInSeconds</code> is 0 (zero) or if the first delivery attempt takes longer than the current value.</p>
    pub fn duration_in_seconds(&self) -> std::option::Option<i32> {
        self.duration_in_seconds
    }
}
impl RedshiftRetryOptions {
    /// Creates a new builder-style object to manufacture [`RedshiftRetryOptions`](crate::types::RedshiftRetryOptions).
    pub fn builder() -> crate::types::builders::RedshiftRetryOptionsBuilder {
        crate::types::builders::RedshiftRetryOptionsBuilder::default()
    }
}

/// A builder for [`RedshiftRetryOptions`](crate::types::RedshiftRetryOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RedshiftRetryOptionsBuilder {
    pub(crate) duration_in_seconds: std::option::Option<i32>,
}
impl RedshiftRetryOptionsBuilder {
    /// <p>The length of time during which Kinesis Data Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Kinesis Data Firehose does not retry if the value of <code>DurationInSeconds</code> is 0 (zero) or if the first delivery attempt takes longer than the current value.</p>
    pub fn duration_in_seconds(mut self, input: i32) -> Self {
        self.duration_in_seconds = Some(input);
        self
    }
    /// <p>The length of time during which Kinesis Data Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Kinesis Data Firehose does not retry if the value of <code>DurationInSeconds</code> is 0 (zero) or if the first delivery attempt takes longer than the current value.</p>
    pub fn set_duration_in_seconds(mut self, input: std::option::Option<i32>) -> Self {
        self.duration_in_seconds = input;
        self
    }
    /// Consumes the builder and constructs a [`RedshiftRetryOptions`](crate::types::RedshiftRetryOptions).
    pub fn build(self) -> crate::types::RedshiftRetryOptions {
        crate::types::RedshiftRetryOptions {
            duration_in_seconds: self.duration_in_seconds,
        }
    }
}
