// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The retry behavior in case Kinesis Data Firehose is unable to deliver data to an Amazon S3 prefix.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RetryOptions {
    /// <p>The period of time during which Kinesis Data Firehose retries to deliver data to the specified Amazon S3 prefix.</p>
    #[doc(hidden)]
    pub duration_in_seconds: std::option::Option<i32>,
}
impl RetryOptions {
    /// <p>The period of time during which Kinesis Data Firehose retries to deliver data to the specified Amazon S3 prefix.</p>
    pub fn duration_in_seconds(&self) -> std::option::Option<i32> {
        self.duration_in_seconds
    }
}
impl RetryOptions {
    /// Creates a new builder-style object to manufacture [`RetryOptions`](crate::types::RetryOptions).
    pub fn builder() -> crate::types::builders::RetryOptionsBuilder {
        crate::types::builders::RetryOptionsBuilder::default()
    }
}

/// A builder for [`RetryOptions`](crate::types::RetryOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RetryOptionsBuilder {
    pub(crate) duration_in_seconds: std::option::Option<i32>,
}
impl RetryOptionsBuilder {
    /// <p>The period of time during which Kinesis Data Firehose retries to deliver data to the specified Amazon S3 prefix.</p>
    pub fn duration_in_seconds(mut self, input: i32) -> Self {
        self.duration_in_seconds = Some(input);
        self
    }
    /// <p>The period of time during which Kinesis Data Firehose retries to deliver data to the specified Amazon S3 prefix.</p>
    pub fn set_duration_in_seconds(mut self, input: std::option::Option<i32>) -> Self {
        self.duration_in_seconds = input;
        self
    }
    /// Consumes the builder and constructs a [`RetryOptions`](crate::types::RetryOptions).
    pub fn build(self) -> crate::types::RetryOptions {
        crate::types::RetryOptions {
            duration_in_seconds: self.duration_in_seconds,
        }
    }
}
