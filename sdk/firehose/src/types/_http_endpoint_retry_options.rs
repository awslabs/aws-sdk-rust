// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment of receipt from the specified HTTP endpoint destination.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct HttpEndpointRetryOptions {
    /// <p>The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to the custom destination via HTTPS endpoint fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from the specified destination after each attempt. </p>
    #[doc(hidden)]
    pub duration_in_seconds: std::option::Option<i32>,
}
impl HttpEndpointRetryOptions {
    /// <p>The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to the custom destination via HTTPS endpoint fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from the specified destination after each attempt. </p>
    pub fn duration_in_seconds(&self) -> std::option::Option<i32> {
        self.duration_in_seconds
    }
}
impl HttpEndpointRetryOptions {
    /// Creates a new builder-style object to manufacture [`HttpEndpointRetryOptions`](crate::types::HttpEndpointRetryOptions).
    pub fn builder() -> crate::types::builders::HttpEndpointRetryOptionsBuilder {
        crate::types::builders::HttpEndpointRetryOptionsBuilder::default()
    }
}

/// A builder for [`HttpEndpointRetryOptions`](crate::types::HttpEndpointRetryOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct HttpEndpointRetryOptionsBuilder {
    pub(crate) duration_in_seconds: std::option::Option<i32>,
}
impl HttpEndpointRetryOptionsBuilder {
    /// <p>The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to the custom destination via HTTPS endpoint fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from the specified destination after each attempt. </p>
    pub fn duration_in_seconds(mut self, input: i32) -> Self {
        self.duration_in_seconds = Some(input);
        self
    }
    /// <p>The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to the custom destination via HTTPS endpoint fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from the specified destination after each attempt. </p>
    pub fn set_duration_in_seconds(mut self, input: std::option::Option<i32>) -> Self {
        self.duration_in_seconds = input;
        self
    }
    /// Consumes the builder and constructs a [`HttpEndpointRetryOptions`](crate::types::HttpEndpointRetryOptions).
    pub fn build(self) -> crate::types::HttpEndpointRetryOptions {
        crate::types::HttpEndpointRetryOptions {
            duration_in_seconds: self.duration_in_seconds,
        }
    }
}
