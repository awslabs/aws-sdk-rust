// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartDeliveryStreamEncryption`](crate::operation::start_delivery_stream_encryption::builders::StartDeliveryStreamEncryptionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`delivery_stream_name(impl Into<String>)`](crate::operation::start_delivery_stream_encryption::builders::StartDeliveryStreamEncryptionFluentBuilder::delivery_stream_name) / [`set_delivery_stream_name(Option<String>)`](crate::operation::start_delivery_stream_encryption::builders::StartDeliveryStreamEncryptionFluentBuilder::set_delivery_stream_name):<br>required: **true**<br><p>The name of the delivery stream for which you want to enable server-side encryption (SSE).</p><br>
    ///   - [`delivery_stream_encryption_configuration_input(DeliveryStreamEncryptionConfigurationInput)`](crate::operation::start_delivery_stream_encryption::builders::StartDeliveryStreamEncryptionFluentBuilder::delivery_stream_encryption_configuration_input) / [`set_delivery_stream_encryption_configuration_input(Option<DeliveryStreamEncryptionConfigurationInput>)`](crate::operation::start_delivery_stream_encryption::builders::StartDeliveryStreamEncryptionFluentBuilder::set_delivery_stream_encryption_configuration_input):<br>required: **false**<br><p>Used to specify the type and Amazon Resource Name (ARN) of the KMS key needed for Server-Side Encryption (SSE).</p><br>
    /// - On success, responds with [`StartDeliveryStreamEncryptionOutput`](crate::operation::start_delivery_stream_encryption::StartDeliveryStreamEncryptionOutput)
    /// - On failure, responds with [`SdkError<StartDeliveryStreamEncryptionError>`](crate::operation::start_delivery_stream_encryption::StartDeliveryStreamEncryptionError)
    pub fn start_delivery_stream_encryption(
        &self,
    ) -> crate::operation::start_delivery_stream_encryption::builders::StartDeliveryStreamEncryptionFluentBuilder {
        crate::operation::start_delivery_stream_encryption::builders::StartDeliveryStreamEncryptionFluentBuilder::new(self.handle.clone())
    }
}
