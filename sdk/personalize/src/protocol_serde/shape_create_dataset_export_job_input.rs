// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_dataset_export_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_dataset_export_job::CreateDatasetExportJobInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.job_name {
        object.key("jobName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.dataset_arn {
        object.key("datasetArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.ingestion_mode {
        object.key("ingestionMode").string(var_3.as_str());
    }
    if let Some(var_4) = &input.role_arn {
        object.key("roleArn").string(var_4.as_str());
    }
    if let Some(var_5) = &input.job_output {
        #[allow(unused_mut)]
        let mut object_6 = object.key("jobOutput").start_object();
        crate::protocol_serde::shape_dataset_export_job_output::ser_dataset_export_job_output(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.tags {
        let mut array_8 = object.key("tags").start_array();
        for item_9 in var_7 {
            {
                #[allow(unused_mut)]
                let mut object_10 = array_8.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_10, item_9)?;
                object_10.finish();
            }
        }
        array_8.finish();
    }
    Ok(())
}
