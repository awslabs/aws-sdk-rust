// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListDatasets`](crate::client::fluent_builders::ListDatasets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListDatasets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`dataset_group_arn(impl Into<String>)`](crate::client::fluent_builders::ListDatasets::dataset_group_arn) / [`set_dataset_group_arn(Option<String>)`](crate::client::fluent_builders::ListDatasets::set_dataset_group_arn): <p>The Amazon Resource Name (ARN) of the dataset group that contains the datasets to list.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListDatasets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListDatasets::set_next_token): <p>A token returned from the previous call to <code>ListDatasetImportJobs</code> for getting the next set of dataset import jobs (if they exist).</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListDatasets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListDatasets::set_max_results): <p>The maximum number of datasets to return.</p>
    /// - On success, responds with [`ListDatasetsOutput`](crate::output::ListDatasetsOutput) with field(s):
    ///   - [`datasets(Option<Vec<DatasetSummary>>)`](crate::output::ListDatasetsOutput::datasets): <p>An array of <code>Dataset</code> objects. Each object provides metadata information.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListDatasetsOutput::next_token): <p>A token for getting the next set of datasets (if they exist).</p>
    /// - On failure, responds with [`SdkError<ListDatasetsError>`](crate::error::ListDatasetsError)
    pub fn list_datasets(&self) -> crate::client::fluent_builders::ListDatasets {
        crate::client::fluent_builders::ListDatasets::new(self.handle.clone())
    }
}
