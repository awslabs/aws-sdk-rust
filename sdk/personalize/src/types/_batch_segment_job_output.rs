// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output configuration parameters of a batch segment job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchSegmentJobOutput {
    /// <p>The configuration details of an Amazon S3 input or output bucket.</p>
    pub s3_data_destination: ::std::option::Option<crate::types::S3DataConfig>,
}
impl BatchSegmentJobOutput {
    /// <p>The configuration details of an Amazon S3 input or output bucket.</p>
    pub fn s3_data_destination(&self) -> ::std::option::Option<&crate::types::S3DataConfig> {
        self.s3_data_destination.as_ref()
    }
}
impl BatchSegmentJobOutput {
    /// Creates a new builder-style object to manufacture [`BatchSegmentJobOutput`](crate::types::BatchSegmentJobOutput).
    pub fn builder() -> crate::types::builders::BatchSegmentJobOutputBuilder {
        crate::types::builders::BatchSegmentJobOutputBuilder::default()
    }
}

/// A builder for [`BatchSegmentJobOutput`](crate::types::BatchSegmentJobOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchSegmentJobOutputBuilder {
    pub(crate) s3_data_destination: ::std::option::Option<crate::types::S3DataConfig>,
}
impl BatchSegmentJobOutputBuilder {
    /// <p>The configuration details of an Amazon S3 input or output bucket.</p>
    /// This field is required.
    pub fn s3_data_destination(mut self, input: crate::types::S3DataConfig) -> Self {
        self.s3_data_destination = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration details of an Amazon S3 input or output bucket.</p>
    pub fn set_s3_data_destination(mut self, input: ::std::option::Option<crate::types::S3DataConfig>) -> Self {
        self.s3_data_destination = input;
        self
    }
    /// <p>The configuration details of an Amazon S3 input or output bucket.</p>
    pub fn get_s3_data_destination(&self) -> &::std::option::Option<crate::types::S3DataConfig> {
        &self.s3_data_destination
    }
    /// Consumes the builder and constructs a [`BatchSegmentJobOutput`](crate::types::BatchSegmentJobOutput).
    pub fn build(self) -> crate::types::BatchSegmentJobOutput {
        crate::types::BatchSegmentJobOutput {
            s3_data_destination: self.s3_data_destination,
        }
    }
}
