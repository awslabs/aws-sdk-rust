// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input configuration of a batch inference job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchInferenceJobInput {
    /// <p>The URI of the Amazon S3 location that contains your input data. The Amazon S3 bucket must be in the same region as the API endpoint you are calling.</p>
    pub s3_data_source: ::std::option::Option<crate::types::S3DataConfig>,
}
impl BatchInferenceJobInput {
    /// <p>The URI of the Amazon S3 location that contains your input data. The Amazon S3 bucket must be in the same region as the API endpoint you are calling.</p>
    pub fn s3_data_source(&self) -> ::std::option::Option<&crate::types::S3DataConfig> {
        self.s3_data_source.as_ref()
    }
}
impl BatchInferenceJobInput {
    /// Creates a new builder-style object to manufacture [`BatchInferenceJobInput`](crate::types::BatchInferenceJobInput).
    pub fn builder() -> crate::types::builders::BatchInferenceJobInputBuilder {
        crate::types::builders::BatchInferenceJobInputBuilder::default()
    }
}

/// A builder for [`BatchInferenceJobInput`](crate::types::BatchInferenceJobInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchInferenceJobInputBuilder {
    pub(crate) s3_data_source: ::std::option::Option<crate::types::S3DataConfig>,
}
impl BatchInferenceJobInputBuilder {
    /// <p>The URI of the Amazon S3 location that contains your input data. The Amazon S3 bucket must be in the same region as the API endpoint you are calling.</p>
    /// This field is required.
    pub fn s3_data_source(mut self, input: crate::types::S3DataConfig) -> Self {
        self.s3_data_source = ::std::option::Option::Some(input);
        self
    }
    /// <p>The URI of the Amazon S3 location that contains your input data. The Amazon S3 bucket must be in the same region as the API endpoint you are calling.</p>
    pub fn set_s3_data_source(mut self, input: ::std::option::Option<crate::types::S3DataConfig>) -> Self {
        self.s3_data_source = input;
        self
    }
    /// <p>The URI of the Amazon S3 location that contains your input data. The Amazon S3 bucket must be in the same region as the API endpoint you are calling.</p>
    pub fn get_s3_data_source(&self) -> &::std::option::Option<crate::types::S3DataConfig> {
        &self.s3_data_source
    }
    /// Consumes the builder and constructs a [`BatchInferenceJobInput`](crate::types::BatchInferenceJobInput).
    pub fn build(self) -> crate::types::BatchInferenceJobInput {
        crate::types::BatchInferenceJobInput {
            s3_data_source: self.s3_data_source,
        }
    }
}
