// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The automatic training configuration to use when <code>performAutoTraining</code> is true.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutoTrainingConfig {
    /// <p>Specifies how often to automatically train new solution versions. Specify a rate expression in rate(<i>value</i> <i>unit</i>) format. For value, specify a number between 1 and 30. For unit, specify <code>day</code> or <code>days</code>. For example, to automatically create a new solution version every 5 days, specify <code>rate(5 days)</code>. The default is every 7 days.</p>
    /// <p>For more information about auto training, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/customizing-solution-config.html">Creating and configuring a solution</a>.</p>
    pub scheduling_expression: ::std::option::Option<::std::string::String>,
}
impl AutoTrainingConfig {
    /// <p>Specifies how often to automatically train new solution versions. Specify a rate expression in rate(<i>value</i> <i>unit</i>) format. For value, specify a number between 1 and 30. For unit, specify <code>day</code> or <code>days</code>. For example, to automatically create a new solution version every 5 days, specify <code>rate(5 days)</code>. The default is every 7 days.</p>
    /// <p>For more information about auto training, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/customizing-solution-config.html">Creating and configuring a solution</a>.</p>
    pub fn scheduling_expression(&self) -> ::std::option::Option<&str> {
        self.scheduling_expression.as_deref()
    }
}
impl AutoTrainingConfig {
    /// Creates a new builder-style object to manufacture [`AutoTrainingConfig`](crate::types::AutoTrainingConfig).
    pub fn builder() -> crate::types::builders::AutoTrainingConfigBuilder {
        crate::types::builders::AutoTrainingConfigBuilder::default()
    }
}

/// A builder for [`AutoTrainingConfig`](crate::types::AutoTrainingConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AutoTrainingConfigBuilder {
    pub(crate) scheduling_expression: ::std::option::Option<::std::string::String>,
}
impl AutoTrainingConfigBuilder {
    /// <p>Specifies how often to automatically train new solution versions. Specify a rate expression in rate(<i>value</i> <i>unit</i>) format. For value, specify a number between 1 and 30. For unit, specify <code>day</code> or <code>days</code>. For example, to automatically create a new solution version every 5 days, specify <code>rate(5 days)</code>. The default is every 7 days.</p>
    /// <p>For more information about auto training, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/customizing-solution-config.html">Creating and configuring a solution</a>.</p>
    pub fn scheduling_expression(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.scheduling_expression = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies how often to automatically train new solution versions. Specify a rate expression in rate(<i>value</i> <i>unit</i>) format. For value, specify a number between 1 and 30. For unit, specify <code>day</code> or <code>days</code>. For example, to automatically create a new solution version every 5 days, specify <code>rate(5 days)</code>. The default is every 7 days.</p>
    /// <p>For more information about auto training, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/customizing-solution-config.html">Creating and configuring a solution</a>.</p>
    pub fn set_scheduling_expression(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.scheduling_expression = input;
        self
    }
    /// <p>Specifies how often to automatically train new solution versions. Specify a rate expression in rate(<i>value</i> <i>unit</i>) format. For value, specify a number between 1 and 30. For unit, specify <code>day</code> or <code>days</code>. For example, to automatically create a new solution version every 5 days, specify <code>rate(5 days)</code>. The default is every 7 days.</p>
    /// <p>For more information about auto training, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/customizing-solution-config.html">Creating and configuring a solution</a>.</p>
    pub fn get_scheduling_expression(&self) -> &::std::option::Option<::std::string::String> {
        &self.scheduling_expression
    }
    /// Consumes the builder and constructs a [`AutoTrainingConfig`](crate::types::AutoTrainingConfig).
    pub fn build(self) -> crate::types::AutoTrainingConfig {
        crate::types::AutoTrainingConfig {
            scheduling_expression: self.scheduling_expression,
        }
    }
}
