// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output configuration parameters of a dataset export job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DatasetExportJobOutput {
    /// <p>The configuration details of an Amazon S3 input or output bucket.</p>
    #[doc(hidden)]
    pub s3_data_destination: std::option::Option<crate::types::S3DataConfig>,
}
impl DatasetExportJobOutput {
    /// <p>The configuration details of an Amazon S3 input or output bucket.</p>
    pub fn s3_data_destination(&self) -> std::option::Option<&crate::types::S3DataConfig> {
        self.s3_data_destination.as_ref()
    }
}
impl DatasetExportJobOutput {
    /// Creates a new builder-style object to manufacture [`DatasetExportJobOutput`](crate::types::DatasetExportJobOutput).
    pub fn builder() -> crate::types::builders::DatasetExportJobOutputBuilder {
        crate::types::builders::DatasetExportJobOutputBuilder::default()
    }
}

/// A builder for [`DatasetExportJobOutput`](crate::types::DatasetExportJobOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DatasetExportJobOutputBuilder {
    pub(crate) s3_data_destination: std::option::Option<crate::types::S3DataConfig>,
}
impl DatasetExportJobOutputBuilder {
    /// <p>The configuration details of an Amazon S3 input or output bucket.</p>
    pub fn s3_data_destination(mut self, input: crate::types::S3DataConfig) -> Self {
        self.s3_data_destination = Some(input);
        self
    }
    /// <p>The configuration details of an Amazon S3 input or output bucket.</p>
    pub fn set_s3_data_destination(
        mut self,
        input: std::option::Option<crate::types::S3DataConfig>,
    ) -> Self {
        self.s3_data_destination = input;
        self
    }
    /// Consumes the builder and constructs a [`DatasetExportJobOutput`](crate::types::DatasetExportJobOutput).
    pub fn build(self) -> crate::types::DatasetExportJobOutput {
        crate::types::DatasetExportJobOutput {
            s3_data_destination: self.s3_data_destination,
        }
    }
}
