// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration details of a campaign.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CampaignConfig {
    /// <p>Specifies the exploration configuration hyperparameters, including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>, you want to use to configure the amount of item exploration Amazon Personalize uses when recommending items. Provide <code>itemExplorationConfig</code> data only if your solution uses the <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html">User-Personalization</a> recipe.</p>
    #[doc(hidden)]
    pub item_exploration_config:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl CampaignConfig {
    /// <p>Specifies the exploration configuration hyperparameters, including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>, you want to use to configure the amount of item exploration Amazon Personalize uses when recommending items. Provide <code>itemExplorationConfig</code> data only if your solution uses the <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html">User-Personalization</a> recipe.</p>
    pub fn item_exploration_config(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.item_exploration_config.as_ref()
    }
}
impl CampaignConfig {
    /// Creates a new builder-style object to manufacture [`CampaignConfig`](crate::types::CampaignConfig).
    pub fn builder() -> crate::types::builders::CampaignConfigBuilder {
        crate::types::builders::CampaignConfigBuilder::default()
    }
}

/// A builder for [`CampaignConfig`](crate::types::CampaignConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CampaignConfigBuilder {
    pub(crate) item_exploration_config:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl CampaignConfigBuilder {
    /// Adds a key-value pair to `item_exploration_config`.
    ///
    /// To override the contents of this collection use [`set_item_exploration_config`](Self::set_item_exploration_config).
    ///
    /// <p>Specifies the exploration configuration hyperparameters, including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>, you want to use to configure the amount of item exploration Amazon Personalize uses when recommending items. Provide <code>itemExplorationConfig</code> data only if your solution uses the <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html">User-Personalization</a> recipe.</p>
    pub fn item_exploration_config(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.item_exploration_config.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.item_exploration_config = Some(hash_map);
        self
    }
    /// <p>Specifies the exploration configuration hyperparameters, including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>, you want to use to configure the amount of item exploration Amazon Personalize uses when recommending items. Provide <code>itemExplorationConfig</code> data only if your solution uses the <a href="https://docs.aws.amazon.com/personalize/latest/dg/native-recipe-new-item-USER_PERSONALIZATION.html">User-Personalization</a> recipe.</p>
    pub fn set_item_exploration_config(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.item_exploration_config = input;
        self
    }
    /// Consumes the builder and constructs a [`CampaignConfig`](crate::types::CampaignConfig).
    pub fn build(self) -> crate::types::CampaignConfig {
        crate::types::CampaignConfig {
            item_exploration_config: self.item_exploration_config,
        }
    }
}
