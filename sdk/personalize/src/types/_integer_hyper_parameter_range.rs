// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the name and range of an integer-valued hyperparameter.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IntegerHyperParameterRange {
    /// <p>The name of the hyperparameter.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The minimum allowable value for the hyperparameter.</p>
    #[doc(hidden)]
    pub min_value: i32,
    /// <p>The maximum allowable value for the hyperparameter.</p>
    #[doc(hidden)]
    pub max_value: i32,
}
impl IntegerHyperParameterRange {
    /// <p>The name of the hyperparameter.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The minimum allowable value for the hyperparameter.</p>
    pub fn min_value(&self) -> i32 {
        self.min_value
    }
    /// <p>The maximum allowable value for the hyperparameter.</p>
    pub fn max_value(&self) -> i32 {
        self.max_value
    }
}
impl IntegerHyperParameterRange {
    /// Creates a new builder-style object to manufacture [`IntegerHyperParameterRange`](crate::types::IntegerHyperParameterRange).
    pub fn builder() -> crate::types::builders::IntegerHyperParameterRangeBuilder {
        crate::types::builders::IntegerHyperParameterRangeBuilder::default()
    }
}

/// A builder for [`IntegerHyperParameterRange`](crate::types::IntegerHyperParameterRange).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IntegerHyperParameterRangeBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) min_value: std::option::Option<i32>,
    pub(crate) max_value: std::option::Option<i32>,
}
impl IntegerHyperParameterRangeBuilder {
    /// <p>The name of the hyperparameter.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the hyperparameter.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The minimum allowable value for the hyperparameter.</p>
    pub fn min_value(mut self, input: i32) -> Self {
        self.min_value = Some(input);
        self
    }
    /// <p>The minimum allowable value for the hyperparameter.</p>
    pub fn set_min_value(mut self, input: std::option::Option<i32>) -> Self {
        self.min_value = input;
        self
    }
    /// <p>The maximum allowable value for the hyperparameter.</p>
    pub fn max_value(mut self, input: i32) -> Self {
        self.max_value = Some(input);
        self
    }
    /// <p>The maximum allowable value for the hyperparameter.</p>
    pub fn set_max_value(mut self, input: std::option::Option<i32>) -> Self {
        self.max_value = input;
        self
    }
    /// Consumes the builder and constructs a [`IntegerHyperParameterRange`](crate::types::IntegerHyperParameterRange).
    pub fn build(self) -> crate::types::IntegerHyperParameterRange {
        crate::types::IntegerHyperParameterRange {
            name: self.name,
            min_value: self.min_value.unwrap_or_default(),
            max_value: self.max_value.unwrap_or_default(),
        }
    }
}
