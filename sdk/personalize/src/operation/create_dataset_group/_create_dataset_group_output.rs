// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateDatasetGroupOutput {
    /// <p>The Amazon Resource Name (ARN) of the new dataset group.</p>
    #[doc(hidden)]
    pub dataset_group_arn: std::option::Option<std::string::String>,
    /// <p>The domain for the new Domain dataset group.</p>
    #[doc(hidden)]
    pub domain: std::option::Option<crate::types::Domain>,
    _request_id: Option<String>,
}
impl CreateDatasetGroupOutput {
    /// <p>The Amazon Resource Name (ARN) of the new dataset group.</p>
    pub fn dataset_group_arn(&self) -> std::option::Option<&str> {
        self.dataset_group_arn.as_deref()
    }
    /// <p>The domain for the new Domain dataset group.</p>
    pub fn domain(&self) -> std::option::Option<&crate::types::Domain> {
        self.domain.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateDatasetGroupOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateDatasetGroupOutput {
    /// Creates a new builder-style object to manufacture [`CreateDatasetGroupOutput`](crate::operation::create_dataset_group::CreateDatasetGroupOutput).
    pub fn builder(
    ) -> crate::operation::create_dataset_group::builders::CreateDatasetGroupOutputBuilder {
        crate::operation::create_dataset_group::builders::CreateDatasetGroupOutputBuilder::default()
    }
}

/// A builder for [`CreateDatasetGroupOutput`](crate::operation::create_dataset_group::CreateDatasetGroupOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateDatasetGroupOutputBuilder {
    pub(crate) dataset_group_arn: std::option::Option<std::string::String>,
    pub(crate) domain: std::option::Option<crate::types::Domain>,
    _request_id: Option<String>,
}
impl CreateDatasetGroupOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the new dataset group.</p>
    pub fn dataset_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.dataset_group_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the new dataset group.</p>
    pub fn set_dataset_group_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.dataset_group_arn = input;
        self
    }
    /// <p>The domain for the new Domain dataset group.</p>
    pub fn domain(mut self, input: crate::types::Domain) -> Self {
        self.domain = Some(input);
        self
    }
    /// <p>The domain for the new Domain dataset group.</p>
    pub fn set_domain(mut self, input: std::option::Option<crate::types::Domain>) -> Self {
        self.domain = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateDatasetGroupOutput`](crate::operation::create_dataset_group::CreateDatasetGroupOutput).
    pub fn build(self) -> crate::operation::create_dataset_group::CreateDatasetGroupOutput {
        crate::operation::create_dataset_group::CreateDatasetGroupOutput {
            dataset_group_arn: self.dataset_group_arn,
            domain: self.domain,
            _request_id: self._request_id,
        }
    }
}
