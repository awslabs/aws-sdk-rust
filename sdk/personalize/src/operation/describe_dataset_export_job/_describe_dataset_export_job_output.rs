// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeDatasetExportJobOutput {
    /// <p>Information about the dataset export job, including the status.</p>
    /// <p>The status is one of the following values:</p>
    /// <ul>
    /// <li> <p>CREATE PENDING</p> </li>
    /// <li> <p>CREATE IN_PROGRESS</p> </li>
    /// <li> <p>ACTIVE</p> </li>
    /// <li> <p>CREATE FAILED</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub dataset_export_job: std::option::Option<crate::types::DatasetExportJob>,
    _request_id: Option<String>,
}
impl DescribeDatasetExportJobOutput {
    /// <p>Information about the dataset export job, including the status.</p>
    /// <p>The status is one of the following values:</p>
    /// <ul>
    /// <li> <p>CREATE PENDING</p> </li>
    /// <li> <p>CREATE IN_PROGRESS</p> </li>
    /// <li> <p>ACTIVE</p> </li>
    /// <li> <p>CREATE FAILED</p> </li>
    /// </ul>
    pub fn dataset_export_job(&self) -> std::option::Option<&crate::types::DatasetExportJob> {
        self.dataset_export_job.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeDatasetExportJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeDatasetExportJobOutput {
    /// Creates a new builder-style object to manufacture [`DescribeDatasetExportJobOutput`](crate::operation::describe_dataset_export_job::DescribeDatasetExportJobOutput).
    pub fn builder() -> crate::operation::describe_dataset_export_job::builders::DescribeDatasetExportJobOutputBuilder{
        crate::operation::describe_dataset_export_job::builders::DescribeDatasetExportJobOutputBuilder::default()
    }
}

/// A builder for [`DescribeDatasetExportJobOutput`](crate::operation::describe_dataset_export_job::DescribeDatasetExportJobOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeDatasetExportJobOutputBuilder {
    pub(crate) dataset_export_job: std::option::Option<crate::types::DatasetExportJob>,
    _request_id: Option<String>,
}
impl DescribeDatasetExportJobOutputBuilder {
    /// <p>Information about the dataset export job, including the status.</p>
    /// <p>The status is one of the following values:</p>
    /// <ul>
    /// <li> <p>CREATE PENDING</p> </li>
    /// <li> <p>CREATE IN_PROGRESS</p> </li>
    /// <li> <p>ACTIVE</p> </li>
    /// <li> <p>CREATE FAILED</p> </li>
    /// </ul>
    pub fn dataset_export_job(mut self, input: crate::types::DatasetExportJob) -> Self {
        self.dataset_export_job = Some(input);
        self
    }
    /// <p>Information about the dataset export job, including the status.</p>
    /// <p>The status is one of the following values:</p>
    /// <ul>
    /// <li> <p>CREATE PENDING</p> </li>
    /// <li> <p>CREATE IN_PROGRESS</p> </li>
    /// <li> <p>ACTIVE</p> </li>
    /// <li> <p>CREATE FAILED</p> </li>
    /// </ul>
    pub fn set_dataset_export_job(
        mut self,
        input: std::option::Option<crate::types::DatasetExportJob>,
    ) -> Self {
        self.dataset_export_job = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDatasetExportJobOutput`](crate::operation::describe_dataset_export_job::DescribeDatasetExportJobOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_dataset_export_job::DescribeDatasetExportJobOutput {
        crate::operation::describe_dataset_export_job::DescribeDatasetExportJobOutput {
            dataset_export_job: self.dataset_export_job,
            _request_id: self._request_id,
        }
    }
}
