// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeStorageOutput {
    /// <p>The total amount of storage currently used for snapshots.</p>
    #[doc(hidden)]
    pub total_backup_size_in_mega_bytes: f64,
    /// <p>The total amount of storage currently provisioned.</p>
    #[doc(hidden)]
    pub total_provisioned_storage_in_mega_bytes: f64,
    _request_id: Option<String>,
}
impl DescribeStorageOutput {
    /// <p>The total amount of storage currently used for snapshots.</p>
    pub fn total_backup_size_in_mega_bytes(&self) -> f64 {
        self.total_backup_size_in_mega_bytes
    }
    /// <p>The total amount of storage currently provisioned.</p>
    pub fn total_provisioned_storage_in_mega_bytes(&self) -> f64 {
        self.total_provisioned_storage_in_mega_bytes
    }
}
impl aws_http::request_id::RequestId for DescribeStorageOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeStorageOutput {
    /// Creates a new builder-style object to manufacture [`DescribeStorageOutput`](crate::operation::describe_storage::DescribeStorageOutput).
    pub fn builder() -> crate::operation::describe_storage::builders::DescribeStorageOutputBuilder {
        crate::operation::describe_storage::builders::DescribeStorageOutputBuilder::default()
    }
}

/// A builder for [`DescribeStorageOutput`](crate::operation::describe_storage::DescribeStorageOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeStorageOutputBuilder {
    pub(crate) total_backup_size_in_mega_bytes: std::option::Option<f64>,
    pub(crate) total_provisioned_storage_in_mega_bytes: std::option::Option<f64>,
    _request_id: Option<String>,
}
impl DescribeStorageOutputBuilder {
    /// <p>The total amount of storage currently used for snapshots.</p>
    pub fn total_backup_size_in_mega_bytes(mut self, input: f64) -> Self {
        self.total_backup_size_in_mega_bytes = Some(input);
        self
    }
    /// <p>The total amount of storage currently used for snapshots.</p>
    pub fn set_total_backup_size_in_mega_bytes(mut self, input: std::option::Option<f64>) -> Self {
        self.total_backup_size_in_mega_bytes = input;
        self
    }
    /// <p>The total amount of storage currently provisioned.</p>
    pub fn total_provisioned_storage_in_mega_bytes(mut self, input: f64) -> Self {
        self.total_provisioned_storage_in_mega_bytes = Some(input);
        self
    }
    /// <p>The total amount of storage currently provisioned.</p>
    pub fn set_total_provisioned_storage_in_mega_bytes(
        mut self,
        input: std::option::Option<f64>,
    ) -> Self {
        self.total_provisioned_storage_in_mega_bytes = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeStorageOutput`](crate::operation::describe_storage::DescribeStorageOutput).
    pub fn build(self) -> crate::operation::describe_storage::DescribeStorageOutput {
        crate::operation::describe_storage::DescribeStorageOutput {
            total_backup_size_in_mega_bytes: self
                .total_backup_size_in_mega_bytes
                .unwrap_or_default(),
            total_provisioned_storage_in_mega_bytes: self
                .total_provisioned_storage_in_mega_bytes
                .unwrap_or_default(),
            _request_id: self._request_id,
        }
    }
}
