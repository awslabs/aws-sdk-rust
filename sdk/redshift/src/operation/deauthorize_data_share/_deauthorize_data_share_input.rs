// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeauthorizeDataShareInput {
    /// <p>The Amazon Resource Name (ARN) of the datashare to remove authorization from.</p>
    #[doc(hidden)]
    pub data_share_arn: std::option::Option<std::string::String>,
    /// <p>The identifier of the data consumer that is to have authorization removed from the datashare. This identifier is an Amazon Web Services account ID or a keyword, such as ADX.</p>
    #[doc(hidden)]
    pub consumer_identifier: std::option::Option<std::string::String>,
}
impl DeauthorizeDataShareInput {
    /// <p>The Amazon Resource Name (ARN) of the datashare to remove authorization from.</p>
    pub fn data_share_arn(&self) -> std::option::Option<&str> {
        self.data_share_arn.as_deref()
    }
    /// <p>The identifier of the data consumer that is to have authorization removed from the datashare. This identifier is an Amazon Web Services account ID or a keyword, such as ADX.</p>
    pub fn consumer_identifier(&self) -> std::option::Option<&str> {
        self.consumer_identifier.as_deref()
    }
}
impl DeauthorizeDataShareInput {
    /// Creates a new builder-style object to manufacture [`DeauthorizeDataShareInput`](crate::operation::deauthorize_data_share::DeauthorizeDataShareInput).
    pub fn builder(
    ) -> crate::operation::deauthorize_data_share::builders::DeauthorizeDataShareInputBuilder {
        crate::operation::deauthorize_data_share::builders::DeauthorizeDataShareInputBuilder::default()
    }
}

/// A builder for [`DeauthorizeDataShareInput`](crate::operation::deauthorize_data_share::DeauthorizeDataShareInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeauthorizeDataShareInputBuilder {
    pub(crate) data_share_arn: std::option::Option<std::string::String>,
    pub(crate) consumer_identifier: std::option::Option<std::string::String>,
}
impl DeauthorizeDataShareInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the datashare to remove authorization from.</p>
    pub fn data_share_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.data_share_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the datashare to remove authorization from.</p>
    pub fn set_data_share_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.data_share_arn = input;
        self
    }
    /// <p>The identifier of the data consumer that is to have authorization removed from the datashare. This identifier is an Amazon Web Services account ID or a keyword, such as ADX.</p>
    pub fn consumer_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.consumer_identifier = Some(input.into());
        self
    }
    /// <p>The identifier of the data consumer that is to have authorization removed from the datashare. This identifier is an Amazon Web Services account ID or a keyword, such as ADX.</p>
    pub fn set_consumer_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.consumer_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`DeauthorizeDataShareInput`](crate::operation::deauthorize_data_share::DeauthorizeDataShareInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::deauthorize_data_share::DeauthorizeDataShareInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::deauthorize_data_share::DeauthorizeDataShareInput {
                data_share_arn: self.data_share_arn,
                consumer_identifier: self.consumer_identifier,
            },
        )
    }
}
