// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PurchaseReservedNodeOfferingInput {
    /// <p>The unique identifier of the reserved node offering you want to purchase.</p>
    #[doc(hidden)]
    pub reserved_node_offering_id: std::option::Option<std::string::String>,
    /// <p>The number of reserved nodes that you want to purchase.</p>
    /// <p>Default: <code>1</code> </p>
    #[doc(hidden)]
    pub node_count: std::option::Option<i32>,
}
impl PurchaseReservedNodeOfferingInput {
    /// <p>The unique identifier of the reserved node offering you want to purchase.</p>
    pub fn reserved_node_offering_id(&self) -> std::option::Option<&str> {
        self.reserved_node_offering_id.as_deref()
    }
    /// <p>The number of reserved nodes that you want to purchase.</p>
    /// <p>Default: <code>1</code> </p>
    pub fn node_count(&self) -> std::option::Option<i32> {
        self.node_count
    }
}
impl PurchaseReservedNodeOfferingInput {
    /// Creates a new builder-style object to manufacture [`PurchaseReservedNodeOfferingInput`](crate::operation::purchase_reserved_node_offering::PurchaseReservedNodeOfferingInput).
    pub fn builder() -> crate::operation::purchase_reserved_node_offering::builders::PurchaseReservedNodeOfferingInputBuilder{
        crate::operation::purchase_reserved_node_offering::builders::PurchaseReservedNodeOfferingInputBuilder::default()
    }
}

/// A builder for [`PurchaseReservedNodeOfferingInput`](crate::operation::purchase_reserved_node_offering::PurchaseReservedNodeOfferingInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PurchaseReservedNodeOfferingInputBuilder {
    pub(crate) reserved_node_offering_id: std::option::Option<std::string::String>,
    pub(crate) node_count: std::option::Option<i32>,
}
impl PurchaseReservedNodeOfferingInputBuilder {
    /// <p>The unique identifier of the reserved node offering you want to purchase.</p>
    pub fn reserved_node_offering_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.reserved_node_offering_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the reserved node offering you want to purchase.</p>
    pub fn set_reserved_node_offering_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.reserved_node_offering_id = input;
        self
    }
    /// <p>The number of reserved nodes that you want to purchase.</p>
    /// <p>Default: <code>1</code> </p>
    pub fn node_count(mut self, input: i32) -> Self {
        self.node_count = Some(input);
        self
    }
    /// <p>The number of reserved nodes that you want to purchase.</p>
    /// <p>Default: <code>1</code> </p>
    pub fn set_node_count(mut self, input: std::option::Option<i32>) -> Self {
        self.node_count = input;
        self
    }
    /// Consumes the builder and constructs a [`PurchaseReservedNodeOfferingInput`](crate::operation::purchase_reserved_node_offering::PurchaseReservedNodeOfferingInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::purchase_reserved_node_offering::PurchaseReservedNodeOfferingInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::purchase_reserved_node_offering::PurchaseReservedNodeOfferingInput {
                reserved_node_offering_id: self.reserved_node_offering_id,
                node_count: self.node_count,
            },
        )
    }
}
