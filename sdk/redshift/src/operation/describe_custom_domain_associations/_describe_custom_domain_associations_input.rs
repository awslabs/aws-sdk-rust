// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeCustomDomainAssociationsInput {
    /// <p>The custom domain name for the custom domain association.</p>
    pub custom_domain_name: ::std::option::Option<::std::string::String>,
    /// <p>The certificate Amazon Resource Name (ARN) for the custom domain association.</p>
    pub custom_domain_certificate_arn: ::std::option::Option<::std::string::String>,
    /// <p>The maximum records setting for the associated custom domain.</p>
    pub max_records: ::std::option::Option<i32>,
    /// <p>The marker for the custom domain association.</p>
    pub marker: ::std::option::Option<::std::string::String>,
}
impl DescribeCustomDomainAssociationsInput {
    /// <p>The custom domain name for the custom domain association.</p>
    pub fn custom_domain_name(&self) -> ::std::option::Option<&str> {
        self.custom_domain_name.as_deref()
    }
    /// <p>The certificate Amazon Resource Name (ARN) for the custom domain association.</p>
    pub fn custom_domain_certificate_arn(&self) -> ::std::option::Option<&str> {
        self.custom_domain_certificate_arn.as_deref()
    }
    /// <p>The maximum records setting for the associated custom domain.</p>
    pub fn max_records(&self) -> ::std::option::Option<i32> {
        self.max_records
    }
    /// <p>The marker for the custom domain association.</p>
    pub fn marker(&self) -> ::std::option::Option<&str> {
        self.marker.as_deref()
    }
}
impl DescribeCustomDomainAssociationsInput {
    /// Creates a new builder-style object to manufacture [`DescribeCustomDomainAssociationsInput`](crate::operation::describe_custom_domain_associations::DescribeCustomDomainAssociationsInput).
    pub fn builder() -> crate::operation::describe_custom_domain_associations::builders::DescribeCustomDomainAssociationsInputBuilder {
        crate::operation::describe_custom_domain_associations::builders::DescribeCustomDomainAssociationsInputBuilder::default()
    }
}

/// A builder for [`DescribeCustomDomainAssociationsInput`](crate::operation::describe_custom_domain_associations::DescribeCustomDomainAssociationsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeCustomDomainAssociationsInputBuilder {
    pub(crate) custom_domain_name: ::std::option::Option<::std::string::String>,
    pub(crate) custom_domain_certificate_arn: ::std::option::Option<::std::string::String>,
    pub(crate) max_records: ::std::option::Option<i32>,
    pub(crate) marker: ::std::option::Option<::std::string::String>,
}
impl DescribeCustomDomainAssociationsInputBuilder {
    /// <p>The custom domain name for the custom domain association.</p>
    pub fn custom_domain_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.custom_domain_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The custom domain name for the custom domain association.</p>
    pub fn set_custom_domain_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.custom_domain_name = input;
        self
    }
    /// <p>The custom domain name for the custom domain association.</p>
    pub fn get_custom_domain_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.custom_domain_name
    }
    /// <p>The certificate Amazon Resource Name (ARN) for the custom domain association.</p>
    pub fn custom_domain_certificate_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.custom_domain_certificate_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The certificate Amazon Resource Name (ARN) for the custom domain association.</p>
    pub fn set_custom_domain_certificate_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.custom_domain_certificate_arn = input;
        self
    }
    /// <p>The certificate Amazon Resource Name (ARN) for the custom domain association.</p>
    pub fn get_custom_domain_certificate_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.custom_domain_certificate_arn
    }
    /// <p>The maximum records setting for the associated custom domain.</p>
    pub fn max_records(mut self, input: i32) -> Self {
        self.max_records = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum records setting for the associated custom domain.</p>
    pub fn set_max_records(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_records = input;
        self
    }
    /// <p>The maximum records setting for the associated custom domain.</p>
    pub fn get_max_records(&self) -> &::std::option::Option<i32> {
        &self.max_records
    }
    /// <p>The marker for the custom domain association.</p>
    pub fn marker(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.marker = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The marker for the custom domain association.</p>
    pub fn set_marker(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// <p>The marker for the custom domain association.</p>
    pub fn get_marker(&self) -> &::std::option::Option<::std::string::String> {
        &self.marker
    }
    /// Consumes the builder and constructs a [`DescribeCustomDomainAssociationsInput`](crate::operation::describe_custom_domain_associations::DescribeCustomDomainAssociationsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_custom_domain_associations::DescribeCustomDomainAssociationsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::describe_custom_domain_associations::DescribeCustomDomainAssociationsInput {
                custom_domain_name: self.custom_domain_name,
                custom_domain_certificate_arn: self.custom_domain_certificate_arn,
                max_records: self.max_records,
                marker: self.marker,
            },
        )
    }
}
