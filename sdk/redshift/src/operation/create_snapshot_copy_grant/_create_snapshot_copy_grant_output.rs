// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateSnapshotCopyGrantOutput {
    /// <p>The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots with the specified encrypted symmetric key from Amazon Web Services KMS in the destination region.</p>
    /// <p> For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>
    #[doc(hidden)]
    pub snapshot_copy_grant: std::option::Option<crate::types::SnapshotCopyGrant>,
    _request_id: Option<String>,
}
impl CreateSnapshotCopyGrantOutput {
    /// <p>The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots with the specified encrypted symmetric key from Amazon Web Services KMS in the destination region.</p>
    /// <p> For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>
    pub fn snapshot_copy_grant(&self) -> std::option::Option<&crate::types::SnapshotCopyGrant> {
        self.snapshot_copy_grant.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateSnapshotCopyGrantOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateSnapshotCopyGrantOutput {
    /// Creates a new builder-style object to manufacture [`CreateSnapshotCopyGrantOutput`](crate::operation::create_snapshot_copy_grant::CreateSnapshotCopyGrantOutput).
    pub fn builder(
    ) -> crate::operation::create_snapshot_copy_grant::builders::CreateSnapshotCopyGrantOutputBuilder
    {
        crate::operation::create_snapshot_copy_grant::builders::CreateSnapshotCopyGrantOutputBuilder::default()
    }
}

/// A builder for [`CreateSnapshotCopyGrantOutput`](crate::operation::create_snapshot_copy_grant::CreateSnapshotCopyGrantOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateSnapshotCopyGrantOutputBuilder {
    pub(crate) snapshot_copy_grant: std::option::Option<crate::types::SnapshotCopyGrant>,
    _request_id: Option<String>,
}
impl CreateSnapshotCopyGrantOutputBuilder {
    /// <p>The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots with the specified encrypted symmetric key from Amazon Web Services KMS in the destination region.</p>
    /// <p> For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>
    pub fn snapshot_copy_grant(mut self, input: crate::types::SnapshotCopyGrant) -> Self {
        self.snapshot_copy_grant = Some(input);
        self
    }
    /// <p>The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots with the specified encrypted symmetric key from Amazon Web Services KMS in the destination region.</p>
    /// <p> For more information about managing snapshot copy grants, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>
    pub fn set_snapshot_copy_grant(
        mut self,
        input: std::option::Option<crate::types::SnapshotCopyGrant>,
    ) -> Self {
        self.snapshot_copy_grant = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateSnapshotCopyGrantOutput`](crate::operation::create_snapshot_copy_grant::CreateSnapshotCopyGrantOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_snapshot_copy_grant::CreateSnapshotCopyGrantOutput {
        crate::operation::create_snapshot_copy_grant::CreateSnapshotCopyGrantOutput {
            snapshot_copy_grant: self.snapshot_copy_grant,
            _request_id: self._request_id,
        }
    }
}
