// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeEventCategoriesOutput {
    /// <p>A list of event categories descriptions.</p>
    #[doc(hidden)]
    pub event_categories_map_list:
        std::option::Option<std::vec::Vec<crate::types::EventCategoriesMap>>,
    _request_id: Option<String>,
}
impl DescribeEventCategoriesOutput {
    /// <p>A list of event categories descriptions.</p>
    pub fn event_categories_map_list(
        &self,
    ) -> std::option::Option<&[crate::types::EventCategoriesMap]> {
        self.event_categories_map_list.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeEventCategoriesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeEventCategoriesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeEventCategoriesOutput`](crate::operation::describe_event_categories::DescribeEventCategoriesOutput).
    pub fn builder(
    ) -> crate::operation::describe_event_categories::builders::DescribeEventCategoriesOutputBuilder
    {
        crate::operation::describe_event_categories::builders::DescribeEventCategoriesOutputBuilder::default()
    }
}

/// A builder for [`DescribeEventCategoriesOutput`](crate::operation::describe_event_categories::DescribeEventCategoriesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeEventCategoriesOutputBuilder {
    pub(crate) event_categories_map_list:
        std::option::Option<std::vec::Vec<crate::types::EventCategoriesMap>>,
    _request_id: Option<String>,
}
impl DescribeEventCategoriesOutputBuilder {
    /// Appends an item to `event_categories_map_list`.
    ///
    /// To override the contents of this collection use [`set_event_categories_map_list`](Self::set_event_categories_map_list).
    ///
    /// <p>A list of event categories descriptions.</p>
    pub fn event_categories_map_list(mut self, input: crate::types::EventCategoriesMap) -> Self {
        let mut v = self.event_categories_map_list.unwrap_or_default();
        v.push(input);
        self.event_categories_map_list = Some(v);
        self
    }
    /// <p>A list of event categories descriptions.</p>
    pub fn set_event_categories_map_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::EventCategoriesMap>>,
    ) -> Self {
        self.event_categories_map_list = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeEventCategoriesOutput`](crate::operation::describe_event_categories::DescribeEventCategoriesOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_event_categories::DescribeEventCategoriesOutput {
        crate::operation::describe_event_categories::DescribeEventCategoriesOutput {
            event_categories_map_list: self.event_categories_map_list,
            _request_id: self._request_id,
        }
    }
}
