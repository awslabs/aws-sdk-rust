// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RestoreTableFromClusterSnapshotInput {
    /// <p>The identifier of the Amazon Redshift cluster to restore the table to.</p>
    #[doc(hidden)]
    pub cluster_identifier: std::option::Option<std::string::String>,
    /// <p>The identifier of the snapshot to restore the table from. This snapshot must have been created from the Amazon Redshift cluster specified by the <code>ClusterIdentifier</code> parameter.</p>
    #[doc(hidden)]
    pub snapshot_identifier: std::option::Option<std::string::String>,
    /// <p>The name of the source database that contains the table to restore from.</p>
    #[doc(hidden)]
    pub source_database_name: std::option::Option<std::string::String>,
    /// <p>The name of the source schema that contains the table to restore from. If you do not specify a <code>SourceSchemaName</code> value, the default is <code>public</code>.</p>
    #[doc(hidden)]
    pub source_schema_name: std::option::Option<std::string::String>,
    /// <p>The name of the source table to restore from.</p>
    #[doc(hidden)]
    pub source_table_name: std::option::Option<std::string::String>,
    /// <p>The name of the database to restore the table to.</p>
    #[doc(hidden)]
    pub target_database_name: std::option::Option<std::string::String>,
    /// <p>The name of the schema to restore the table to.</p>
    #[doc(hidden)]
    pub target_schema_name: std::option::Option<std::string::String>,
    /// <p>The name of the table to create as a result of the current request.</p>
    #[doc(hidden)]
    pub new_table_name: std::option::Option<std::string::String>,
    /// <p>Indicates whether name identifiers for database, schema, and table are case sensitive. If <code>true</code>, the names are case sensitive. If <code>false</code> (default), the names are not case sensitive.</p>
    #[doc(hidden)]
    pub enable_case_sensitive_identifier: std::option::Option<bool>,
}
impl RestoreTableFromClusterSnapshotInput {
    /// <p>The identifier of the Amazon Redshift cluster to restore the table to.</p>
    pub fn cluster_identifier(&self) -> std::option::Option<&str> {
        self.cluster_identifier.as_deref()
    }
    /// <p>The identifier of the snapshot to restore the table from. This snapshot must have been created from the Amazon Redshift cluster specified by the <code>ClusterIdentifier</code> parameter.</p>
    pub fn snapshot_identifier(&self) -> std::option::Option<&str> {
        self.snapshot_identifier.as_deref()
    }
    /// <p>The name of the source database that contains the table to restore from.</p>
    pub fn source_database_name(&self) -> std::option::Option<&str> {
        self.source_database_name.as_deref()
    }
    /// <p>The name of the source schema that contains the table to restore from. If you do not specify a <code>SourceSchemaName</code> value, the default is <code>public</code>.</p>
    pub fn source_schema_name(&self) -> std::option::Option<&str> {
        self.source_schema_name.as_deref()
    }
    /// <p>The name of the source table to restore from.</p>
    pub fn source_table_name(&self) -> std::option::Option<&str> {
        self.source_table_name.as_deref()
    }
    /// <p>The name of the database to restore the table to.</p>
    pub fn target_database_name(&self) -> std::option::Option<&str> {
        self.target_database_name.as_deref()
    }
    /// <p>The name of the schema to restore the table to.</p>
    pub fn target_schema_name(&self) -> std::option::Option<&str> {
        self.target_schema_name.as_deref()
    }
    /// <p>The name of the table to create as a result of the current request.</p>
    pub fn new_table_name(&self) -> std::option::Option<&str> {
        self.new_table_name.as_deref()
    }
    /// <p>Indicates whether name identifiers for database, schema, and table are case sensitive. If <code>true</code>, the names are case sensitive. If <code>false</code> (default), the names are not case sensitive.</p>
    pub fn enable_case_sensitive_identifier(&self) -> std::option::Option<bool> {
        self.enable_case_sensitive_identifier
    }
}
impl RestoreTableFromClusterSnapshotInput {
    /// Creates a new builder-style object to manufacture [`RestoreTableFromClusterSnapshotInput`](crate::operation::restore_table_from_cluster_snapshot::RestoreTableFromClusterSnapshotInput).
    pub fn builder() -> crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotInputBuilder{
        crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotInputBuilder::default()
    }
}

/// A builder for [`RestoreTableFromClusterSnapshotInput`](crate::operation::restore_table_from_cluster_snapshot::RestoreTableFromClusterSnapshotInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RestoreTableFromClusterSnapshotInputBuilder {
    pub(crate) cluster_identifier: std::option::Option<std::string::String>,
    pub(crate) snapshot_identifier: std::option::Option<std::string::String>,
    pub(crate) source_database_name: std::option::Option<std::string::String>,
    pub(crate) source_schema_name: std::option::Option<std::string::String>,
    pub(crate) source_table_name: std::option::Option<std::string::String>,
    pub(crate) target_database_name: std::option::Option<std::string::String>,
    pub(crate) target_schema_name: std::option::Option<std::string::String>,
    pub(crate) new_table_name: std::option::Option<std::string::String>,
    pub(crate) enable_case_sensitive_identifier: std::option::Option<bool>,
}
impl RestoreTableFromClusterSnapshotInputBuilder {
    /// <p>The identifier of the Amazon Redshift cluster to restore the table to.</p>
    pub fn cluster_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster_identifier = Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Redshift cluster to restore the table to.</p>
    pub fn set_cluster_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.cluster_identifier = input;
        self
    }
    /// <p>The identifier of the snapshot to restore the table from. This snapshot must have been created from the Amazon Redshift cluster specified by the <code>ClusterIdentifier</code> parameter.</p>
    pub fn snapshot_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.snapshot_identifier = Some(input.into());
        self
    }
    /// <p>The identifier of the snapshot to restore the table from. This snapshot must have been created from the Amazon Redshift cluster specified by the <code>ClusterIdentifier</code> parameter.</p>
    pub fn set_snapshot_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.snapshot_identifier = input;
        self
    }
    /// <p>The name of the source database that contains the table to restore from.</p>
    pub fn source_database_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_database_name = Some(input.into());
        self
    }
    /// <p>The name of the source database that contains the table to restore from.</p>
    pub fn set_source_database_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_database_name = input;
        self
    }
    /// <p>The name of the source schema that contains the table to restore from. If you do not specify a <code>SourceSchemaName</code> value, the default is <code>public</code>.</p>
    pub fn source_schema_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_schema_name = Some(input.into());
        self
    }
    /// <p>The name of the source schema that contains the table to restore from. If you do not specify a <code>SourceSchemaName</code> value, the default is <code>public</code>.</p>
    pub fn set_source_schema_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_schema_name = input;
        self
    }
    /// <p>The name of the source table to restore from.</p>
    pub fn source_table_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_table_name = Some(input.into());
        self
    }
    /// <p>The name of the source table to restore from.</p>
    pub fn set_source_table_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_table_name = input;
        self
    }
    /// <p>The name of the database to restore the table to.</p>
    pub fn target_database_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.target_database_name = Some(input.into());
        self
    }
    /// <p>The name of the database to restore the table to.</p>
    pub fn set_target_database_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.target_database_name = input;
        self
    }
    /// <p>The name of the schema to restore the table to.</p>
    pub fn target_schema_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.target_schema_name = Some(input.into());
        self
    }
    /// <p>The name of the schema to restore the table to.</p>
    pub fn set_target_schema_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.target_schema_name = input;
        self
    }
    /// <p>The name of the table to create as a result of the current request.</p>
    pub fn new_table_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.new_table_name = Some(input.into());
        self
    }
    /// <p>The name of the table to create as a result of the current request.</p>
    pub fn set_new_table_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.new_table_name = input;
        self
    }
    /// <p>Indicates whether name identifiers for database, schema, and table are case sensitive. If <code>true</code>, the names are case sensitive. If <code>false</code> (default), the names are not case sensitive.</p>
    pub fn enable_case_sensitive_identifier(mut self, input: bool) -> Self {
        self.enable_case_sensitive_identifier = Some(input);
        self
    }
    /// <p>Indicates whether name identifiers for database, schema, and table are case sensitive. If <code>true</code>, the names are case sensitive. If <code>false</code> (default), the names are not case sensitive.</p>
    pub fn set_enable_case_sensitive_identifier(
        mut self,
        input: std::option::Option<bool>,
    ) -> Self {
        self.enable_case_sensitive_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`RestoreTableFromClusterSnapshotInput`](crate::operation::restore_table_from_cluster_snapshot::RestoreTableFromClusterSnapshotInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::restore_table_from_cluster_snapshot::RestoreTableFromClusterSnapshotInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::restore_table_from_cluster_snapshot::RestoreTableFromClusterSnapshotInput {
                cluster_identifier: self.cluster_identifier
                ,
                snapshot_identifier: self.snapshot_identifier
                ,
                source_database_name: self.source_database_name
                ,
                source_schema_name: self.source_schema_name
                ,
                source_table_name: self.source_table_name
                ,
                target_database_name: self.target_database_name
                ,
                target_schema_name: self.target_schema_name
                ,
                new_table_name: self.new_table_name
                ,
                enable_case_sensitive_identifier: self.enable_case_sensitive_identifier
                ,
            }
        )
    }
}
