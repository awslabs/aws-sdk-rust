// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::revoke_cluster_security_group_ingress::_revoke_cluster_security_group_ingress_output::RevokeClusterSecurityGroupIngressOutputBuilder;

pub use crate::operation::revoke_cluster_security_group_ingress::_revoke_cluster_security_group_ingress_input::RevokeClusterSecurityGroupIngressInputBuilder;

/// Fluent builder constructing a request to `RevokeClusterSecurityGroupIngress`.
///
/// <p>Revokes an ingress rule in an Amazon Redshift security group for a previously authorized IP range or Amazon EC2 security group. To add an ingress rule, see <code>AuthorizeClusterSecurityGroupIngress</code>. For information about managing security groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct RevokeClusterSecurityGroupIngressFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::revoke_cluster_security_group_ingress::builders::RevokeClusterSecurityGroupIngressInputBuilder
            }
impl RevokeClusterSecurityGroupIngressFluentBuilder {
    /// Creates a new `RevokeClusterSecurityGroupIngress`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::revoke_cluster_security_group_ingress::RevokeClusterSecurityGroupIngress, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::revoke_cluster_security_group_ingress::RevokeClusterSecurityGroupIngressError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::revoke_cluster_security_group_ingress::RevokeClusterSecurityGroupIngressOutput, aws_smithy_http::result::SdkError<crate::operation::revoke_cluster_security_group_ingress::RevokeClusterSecurityGroupIngressError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The name of the security Group from which to revoke the ingress rule.</p>
    pub fn cluster_security_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.cluster_security_group_name(input.into());
        self
    }
    /// <p>The name of the security Group from which to revoke the ingress rule.</p>
    pub fn set_cluster_security_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_cluster_security_group_name(input);
        self
    }
    /// <p>The IP range for which to revoke access. This range must be a valid Classless Inter-Domain Routing (CIDR) block of IP addresses. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code> and <code>EC2SecurityGroupOwnerId</code> cannot be provided. </p>
    pub fn cidrip(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.cidrip(input.into());
        self
    }
    /// <p>The IP range for which to revoke access. This range must be a valid Classless Inter-Domain Routing (CIDR) block of IP addresses. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code> and <code>EC2SecurityGroupOwnerId</code> cannot be provided. </p>
    pub fn set_cidrip(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_cidrip(input);
        self
    }
    /// <p>The name of the EC2 Security Group whose access is to be revoked. If <code>EC2SecurityGroupName</code> is specified, <code>EC2SecurityGroupOwnerId</code> must also be provided and <code>CIDRIP</code> cannot be provided. </p>
    pub fn ec2_security_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.ec2_security_group_name(input.into());
        self
    }
    /// <p>The name of the EC2 Security Group whose access is to be revoked. If <code>EC2SecurityGroupName</code> is specified, <code>EC2SecurityGroupOwnerId</code> must also be provided and <code>CIDRIP</code> cannot be provided. </p>
    pub fn set_ec2_security_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_ec2_security_group_name(input);
        self
    }
    /// <p>The Amazon Web Services account number of the owner of the security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID is not an acceptable value. If <code>EC2SecurityGroupOwnerId</code> is specified, <code>EC2SecurityGroupName</code> must also be provided. and <code>CIDRIP</code> cannot be provided. </p>
    /// <p>Example: <code>111122223333</code> </p>
    pub fn ec2_security_group_owner_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.ec2_security_group_owner_id(input.into());
        self
    }
    /// <p>The Amazon Web Services account number of the owner of the security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID is not an acceptable value. If <code>EC2SecurityGroupOwnerId</code> is specified, <code>EC2SecurityGroupName</code> must also be provided. and <code>CIDRIP</code> cannot be provided. </p>
    /// <p>Example: <code>111122223333</code> </p>
    pub fn set_ec2_security_group_owner_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_ec2_security_group_owner_id(input);
        self
    }
}
