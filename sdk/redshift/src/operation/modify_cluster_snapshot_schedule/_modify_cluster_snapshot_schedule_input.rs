// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModifyClusterSnapshotScheduleInput {
    /// <p>A unique identifier for the cluster whose snapshot schedule you want to modify. </p>
    pub cluster_identifier: ::std::option::Option<::std::string::String>,
    /// <p>A unique alphanumeric identifier for the schedule that you want to associate with the cluster.</p>
    pub schedule_identifier: ::std::option::Option<::std::string::String>,
    /// <p>A boolean to indicate whether to remove the assoiciation between the cluster and the schedule.</p>
    pub disassociate_schedule: ::std::option::Option<bool>,
}
impl ModifyClusterSnapshotScheduleInput {
    /// <p>A unique identifier for the cluster whose snapshot schedule you want to modify. </p>
    pub fn cluster_identifier(&self) -> ::std::option::Option<&str> {
        self.cluster_identifier.as_deref()
    }
    /// <p>A unique alphanumeric identifier for the schedule that you want to associate with the cluster.</p>
    pub fn schedule_identifier(&self) -> ::std::option::Option<&str> {
        self.schedule_identifier.as_deref()
    }
    /// <p>A boolean to indicate whether to remove the assoiciation between the cluster and the schedule.</p>
    pub fn disassociate_schedule(&self) -> ::std::option::Option<bool> {
        self.disassociate_schedule
    }
}
impl ModifyClusterSnapshotScheduleInput {
    /// Creates a new builder-style object to manufacture [`ModifyClusterSnapshotScheduleInput`](crate::operation::modify_cluster_snapshot_schedule::ModifyClusterSnapshotScheduleInput).
    pub fn builder() -> crate::operation::modify_cluster_snapshot_schedule::builders::ModifyClusterSnapshotScheduleInputBuilder {
        crate::operation::modify_cluster_snapshot_schedule::builders::ModifyClusterSnapshotScheduleInputBuilder::default()
    }
}

/// A builder for [`ModifyClusterSnapshotScheduleInput`](crate::operation::modify_cluster_snapshot_schedule::ModifyClusterSnapshotScheduleInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ModifyClusterSnapshotScheduleInputBuilder {
    pub(crate) cluster_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) schedule_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) disassociate_schedule: ::std::option::Option<bool>,
}
impl ModifyClusterSnapshotScheduleInputBuilder {
    /// <p>A unique identifier for the cluster whose snapshot schedule you want to modify. </p>
    /// This field is required.
    pub fn cluster_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the cluster whose snapshot schedule you want to modify. </p>
    pub fn set_cluster_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_identifier = input;
        self
    }
    /// <p>A unique identifier for the cluster whose snapshot schedule you want to modify. </p>
    pub fn get_cluster_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_identifier
    }
    /// <p>A unique alphanumeric identifier for the schedule that you want to associate with the cluster.</p>
    pub fn schedule_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.schedule_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique alphanumeric identifier for the schedule that you want to associate with the cluster.</p>
    pub fn set_schedule_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.schedule_identifier = input;
        self
    }
    /// <p>A unique alphanumeric identifier for the schedule that you want to associate with the cluster.</p>
    pub fn get_schedule_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.schedule_identifier
    }
    /// <p>A boolean to indicate whether to remove the assoiciation between the cluster and the schedule.</p>
    pub fn disassociate_schedule(mut self, input: bool) -> Self {
        self.disassociate_schedule = ::std::option::Option::Some(input);
        self
    }
    /// <p>A boolean to indicate whether to remove the assoiciation between the cluster and the schedule.</p>
    pub fn set_disassociate_schedule(mut self, input: ::std::option::Option<bool>) -> Self {
        self.disassociate_schedule = input;
        self
    }
    /// <p>A boolean to indicate whether to remove the assoiciation between the cluster and the schedule.</p>
    pub fn get_disassociate_schedule(&self) -> &::std::option::Option<bool> {
        &self.disassociate_schedule
    }
    /// Consumes the builder and constructs a [`ModifyClusterSnapshotScheduleInput`](crate::operation::modify_cluster_snapshot_schedule::ModifyClusterSnapshotScheduleInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::modify_cluster_snapshot_schedule::ModifyClusterSnapshotScheduleInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::modify_cluster_snapshot_schedule::ModifyClusterSnapshotScheduleInput {
            cluster_identifier: self.cluster_identifier,
            schedule_identifier: self.schedule_identifier,
            disassociate_schedule: self.disassociate_schedule,
        })
    }
}
