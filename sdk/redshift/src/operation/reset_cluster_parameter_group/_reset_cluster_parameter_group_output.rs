// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResetClusterParameterGroupOutput {
    /// <p>The name of the cluster parameter group.</p>
    #[doc(hidden)]
    pub parameter_group_name: std::option::Option<std::string::String>,
    /// <p>The status of the parameter group. For example, if you made a change to a parameter group name-value pair, then the change could be pending a reboot of an associated cluster.</p>
    #[doc(hidden)]
    pub parameter_group_status: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ResetClusterParameterGroupOutput {
    /// <p>The name of the cluster parameter group.</p>
    pub fn parameter_group_name(&self) -> std::option::Option<&str> {
        self.parameter_group_name.as_deref()
    }
    /// <p>The status of the parameter group. For example, if you made a change to a parameter group name-value pair, then the change could be pending a reboot of an associated cluster.</p>
    pub fn parameter_group_status(&self) -> std::option::Option<&str> {
        self.parameter_group_status.as_deref()
    }
}
impl aws_http::request_id::RequestId for ResetClusterParameterGroupOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ResetClusterParameterGroupOutput {
    /// Creates a new builder-style object to manufacture [`ResetClusterParameterGroupOutput`](crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupOutput).
    pub fn builder() -> crate::operation::reset_cluster_parameter_group::builders::ResetClusterParameterGroupOutputBuilder{
        crate::operation::reset_cluster_parameter_group::builders::ResetClusterParameterGroupOutputBuilder::default()
    }
}

/// A builder for [`ResetClusterParameterGroupOutput`](crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResetClusterParameterGroupOutputBuilder {
    pub(crate) parameter_group_name: std::option::Option<std::string::String>,
    pub(crate) parameter_group_status: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ResetClusterParameterGroupOutputBuilder {
    /// <p>The name of the cluster parameter group.</p>
    pub fn parameter_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_group_name = Some(input.into());
        self
    }
    /// <p>The name of the cluster parameter group.</p>
    pub fn set_parameter_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.parameter_group_name = input;
        self
    }
    /// <p>The status of the parameter group. For example, if you made a change to a parameter group name-value pair, then the change could be pending a reboot of an associated cluster.</p>
    pub fn parameter_group_status(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_group_status = Some(input.into());
        self
    }
    /// <p>The status of the parameter group. For example, if you made a change to a parameter group name-value pair, then the change could be pending a reboot of an associated cluster.</p>
    pub fn set_parameter_group_status(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.parameter_group_status = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ResetClusterParameterGroupOutput`](crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupOutput).
    pub fn build(
        self,
    ) -> crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupOutput {
        crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupOutput {
            parameter_group_name: self.parameter_group_name,
            parameter_group_status: self.parameter_group_status,
            _request_id: self._request_id,
        }
    }
}
