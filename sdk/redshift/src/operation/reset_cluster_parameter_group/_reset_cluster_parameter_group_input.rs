// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResetClusterParameterGroupInput {
    /// <p>The name of the cluster parameter group to be reset.</p>
    #[doc(hidden)]
    pub parameter_group_name: std::option::Option<std::string::String>,
    /// <p>If <code>true</code>, all parameters in the specified parameter group will be reset to their default values. </p>
    /// <p>Default: <code>true</code> </p>
    #[doc(hidden)]
    pub reset_all_parameters: bool,
    /// <p>An array of names of parameters to be reset. If <i>ResetAllParameters</i> option is not used, then at least one parameter name must be supplied. </p>
    /// <p>Constraints: A maximum of 20 parameters can be reset in a single request.</p>
    #[doc(hidden)]
    pub parameters: std::option::Option<std::vec::Vec<crate::types::Parameter>>,
}
impl ResetClusterParameterGroupInput {
    /// <p>The name of the cluster parameter group to be reset.</p>
    pub fn parameter_group_name(&self) -> std::option::Option<&str> {
        self.parameter_group_name.as_deref()
    }
    /// <p>If <code>true</code>, all parameters in the specified parameter group will be reset to their default values. </p>
    /// <p>Default: <code>true</code> </p>
    pub fn reset_all_parameters(&self) -> bool {
        self.reset_all_parameters
    }
    /// <p>An array of names of parameters to be reset. If <i>ResetAllParameters</i> option is not used, then at least one parameter name must be supplied. </p>
    /// <p>Constraints: A maximum of 20 parameters can be reset in a single request.</p>
    pub fn parameters(&self) -> std::option::Option<&[crate::types::Parameter]> {
        self.parameters.as_deref()
    }
}
impl ResetClusterParameterGroupInput {
    /// Creates a new builder-style object to manufacture [`ResetClusterParameterGroupInput`](crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupInput).
    pub fn builder() -> crate::operation::reset_cluster_parameter_group::builders::ResetClusterParameterGroupInputBuilder{
        crate::operation::reset_cluster_parameter_group::builders::ResetClusterParameterGroupInputBuilder::default()
    }
}

/// A builder for [`ResetClusterParameterGroupInput`](crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResetClusterParameterGroupInputBuilder {
    pub(crate) parameter_group_name: std::option::Option<std::string::String>,
    pub(crate) reset_all_parameters: std::option::Option<bool>,
    pub(crate) parameters: std::option::Option<std::vec::Vec<crate::types::Parameter>>,
}
impl ResetClusterParameterGroupInputBuilder {
    /// <p>The name of the cluster parameter group to be reset.</p>
    pub fn parameter_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_group_name = Some(input.into());
        self
    }
    /// <p>The name of the cluster parameter group to be reset.</p>
    pub fn set_parameter_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.parameter_group_name = input;
        self
    }
    /// <p>If <code>true</code>, all parameters in the specified parameter group will be reset to their default values. </p>
    /// <p>Default: <code>true</code> </p>
    pub fn reset_all_parameters(mut self, input: bool) -> Self {
        self.reset_all_parameters = Some(input);
        self
    }
    /// <p>If <code>true</code>, all parameters in the specified parameter group will be reset to their default values. </p>
    /// <p>Default: <code>true</code> </p>
    pub fn set_reset_all_parameters(mut self, input: std::option::Option<bool>) -> Self {
        self.reset_all_parameters = input;
        self
    }
    /// Appends an item to `parameters`.
    ///
    /// To override the contents of this collection use [`set_parameters`](Self::set_parameters).
    ///
    /// <p>An array of names of parameters to be reset. If <i>ResetAllParameters</i> option is not used, then at least one parameter name must be supplied. </p>
    /// <p>Constraints: A maximum of 20 parameters can be reset in a single request.</p>
    pub fn parameters(mut self, input: crate::types::Parameter) -> Self {
        let mut v = self.parameters.unwrap_or_default();
        v.push(input);
        self.parameters = Some(v);
        self
    }
    /// <p>An array of names of parameters to be reset. If <i>ResetAllParameters</i> option is not used, then at least one parameter name must be supplied. </p>
    /// <p>Constraints: A maximum of 20 parameters can be reset in a single request.</p>
    pub fn set_parameters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Parameter>>,
    ) -> Self {
        self.parameters = input;
        self
    }
    /// Consumes the builder and constructs a [`ResetClusterParameterGroupInput`](crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::reset_cluster_parameter_group::ResetClusterParameterGroupInput {
                parameter_group_name: self.parameter_group_name,
                reset_all_parameters: self.reset_all_parameters.unwrap_or_default(),
                parameters: self.parameters,
            },
        )
    }
}
