// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteClusterSnapshot`](crate::operation::delete_cluster_snapshot::builders::DeleteClusterSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`snapshot_identifier(impl Into<String>)`](crate::operation::delete_cluster_snapshot::builders::DeleteClusterSnapshotFluentBuilder::snapshot_identifier) / [`set_snapshot_identifier(Option<String>)`](crate::operation::delete_cluster_snapshot::builders::DeleteClusterSnapshotFluentBuilder::set_snapshot_identifier):<br>required: **true**<br><p>The unique identifier of the manual snapshot to be deleted.</p>  <p>Constraints: Must be the name of an existing snapshot that is in the <code>available</code>, <code>failed</code>, or <code>cancelled</code> state.</p><br>
    ///   - [`snapshot_cluster_identifier(impl Into<String>)`](crate::operation::delete_cluster_snapshot::builders::DeleteClusterSnapshotFluentBuilder::snapshot_cluster_identifier) / [`set_snapshot_cluster_identifier(Option<String>)`](crate::operation::delete_cluster_snapshot::builders::DeleteClusterSnapshotFluentBuilder::set_snapshot_cluster_identifier):<br>required: **false**<br><p>The unique identifier of the cluster the snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.</p>  <p>Constraints: Must be the name of valid cluster.</p><br>
    /// - On success, responds with [`DeleteClusterSnapshotOutput`](crate::operation::delete_cluster_snapshot::DeleteClusterSnapshotOutput) with field(s):
    ///   - [`snapshot(Option<Snapshot>)`](crate::operation::delete_cluster_snapshot::DeleteClusterSnapshotOutput::snapshot): <p>Describes a snapshot.</p>
    /// - On failure, responds with [`SdkError<DeleteClusterSnapshotError>`](crate::operation::delete_cluster_snapshot::DeleteClusterSnapshotError)
    pub fn delete_cluster_snapshot(&self) -> crate::operation::delete_cluster_snapshot::builders::DeleteClusterSnapshotFluentBuilder {
        crate::operation::delete_cluster_snapshot::builders::DeleteClusterSnapshotFluentBuilder::new(self.handle.clone())
    }
}
