// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeEventSubscriptions`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscription_name(impl Into<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::subscription_name) / [`set_subscription_name(Option<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::set_subscription_name):<br>required: **false**<br><p>The name of the Amazon Redshift event notification subscription to be described.</p><br>
    ///   - [`max_records(i32)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p>  <p>Default: <code>100</code> </p>  <p>Constraints: minimum 20, maximum 100.</p><br>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::set_marker):<br>required: **false**<br><p>An optional parameter that specifies the starting point to return a set of response records. When the results of a DescribeEventSubscriptions request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request. </p><br>
    ///   - [`tag_keys(impl Into<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::tag_keys) / [`set_tag_keys(Option<Vec::<String>>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::set_tag_keys):<br>required: **false**<br><p>A tag key or keys for which you want to return all matching event notification subscriptions that are associated with the specified key or keys. For example, suppose that you have subscriptions that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag keys associated with them.</p><br>
    ///   - [`tag_values(impl Into<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::tag_values) / [`set_tag_values(Option<Vec::<String>>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::set_tag_values):<br>required: **false**<br><p>A tag value or values for which you want to return all matching event notification subscriptions that are associated with the specified tag value or values. For example, suppose that you have subscriptions that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag values associated with them.</p><br>
    /// - On success, responds with [`DescribeEventSubscriptionsOutput`](crate::operation::describe_event_subscriptions::DescribeEventSubscriptionsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_event_subscriptions::DescribeEventSubscriptionsOutput::marker): <p>A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>Marker</code> parameter and retrying the command. If the <code>Marker</code> field is empty, all response records have been retrieved for the request. </p>
    ///   - [`event_subscriptions_list(Option<Vec::<EventSubscription>>)`](crate::operation::describe_event_subscriptions::DescribeEventSubscriptionsOutput::event_subscriptions_list): <p>A list of event subscriptions.</p>
    /// - On failure, responds with [`SdkError<DescribeEventSubscriptionsError>`](crate::operation::describe_event_subscriptions::DescribeEventSubscriptionsError)
    pub fn describe_event_subscriptions(&self) -> crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder {
        crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::new(self.handle.clone())
    }
}
