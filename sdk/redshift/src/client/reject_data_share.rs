// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RejectDataShare`](crate::operation::reject_data_share::builders::RejectDataShareFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`data_share_arn(impl Into<String>)`](crate::operation::reject_data_share::builders::RejectDataShareFluentBuilder::data_share_arn) / [`set_data_share_arn(Option<String>)`](crate::operation::reject_data_share::builders::RejectDataShareFluentBuilder::set_data_share_arn): <p>The Amazon Resource Name (ARN) of the datashare to reject.</p>
    /// - On success, responds with [`RejectDataShareOutput`](crate::operation::reject_data_share::RejectDataShareOutput) with field(s):
    ///   - [`data_share_arn(Option<String>)`](crate::operation::reject_data_share::RejectDataShareOutput::data_share_arn): <p>An Amazon Resource Name (ARN) that references the datashare that is owned by a specific namespace of the producer cluster. A datashare ARN is in the <code>arn:aws:redshift:{region}:{account-id}:{datashare}:{namespace-guid}/{datashare-name}</code> format.</p>
    ///   - [`producer_arn(Option<String>)`](crate::operation::reject_data_share::RejectDataShareOutput::producer_arn): <p>The Amazon Resource Name (ARN) of the producer.</p>
    ///   - [`allow_publicly_accessible_consumers(bool)`](crate::operation::reject_data_share::RejectDataShareOutput::allow_publicly_accessible_consumers): <p>A value that specifies whether the datashare can be shared to a publicly accessible cluster.</p>
    ///   - [`data_share_associations(Option<Vec<DataShareAssociation>>)`](crate::operation::reject_data_share::RejectDataShareOutput::data_share_associations): <p>A value that specifies when the datashare has an association between producer and data consumers.</p>
    ///   - [`managed_by(Option<String>)`](crate::operation::reject_data_share::RejectDataShareOutput::managed_by): <p>The identifier of a datashare to show its managing entity.</p>
    /// - On failure, responds with [`SdkError<RejectDataShareError>`](crate::operation::reject_data_share::RejectDataShareError)
    pub fn reject_data_share(
        &self,
    ) -> crate::operation::reject_data_share::builders::RejectDataShareFluentBuilder {
        crate::operation::reject_data_share::builders::RejectDataShareFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
