// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AuthorizeEndpointAccess`](crate::operation::authorize_endpoint_access::builders::AuthorizeEndpointAccessFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_identifier(impl Into<String>)`](crate::operation::authorize_endpoint_access::builders::AuthorizeEndpointAccessFluentBuilder::cluster_identifier) / [`set_cluster_identifier(Option<String>)`](crate::operation::authorize_endpoint_access::builders::AuthorizeEndpointAccessFluentBuilder::set_cluster_identifier):<br>required: **false**<br><p>The cluster identifier of the cluster to grant access to.</p><br>
    ///   - [`account(impl Into<String>)`](crate::operation::authorize_endpoint_access::builders::AuthorizeEndpointAccessFluentBuilder::account) / [`set_account(Option<String>)`](crate::operation::authorize_endpoint_access::builders::AuthorizeEndpointAccessFluentBuilder::set_account):<br>required: **true**<br><p>The Amazon Web Services account ID to grant access to.</p><br>
    ///   - [`vpc_ids(impl Into<String>)`](crate::operation::authorize_endpoint_access::builders::AuthorizeEndpointAccessFluentBuilder::vpc_ids) / [`set_vpc_ids(Option<Vec::<String>>)`](crate::operation::authorize_endpoint_access::builders::AuthorizeEndpointAccessFluentBuilder::set_vpc_ids):<br>required: **false**<br><p>The virtual private cloud (VPC) identifiers to grant access to.</p><br>
    /// - On success, responds with [`AuthorizeEndpointAccessOutput`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput) with field(s):
    ///   - [`grantor(Option<String>)`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput::grantor): <p>The Amazon Web Services account ID of the cluster owner.</p>
    ///   - [`grantee(Option<String>)`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput::grantee): <p>The Amazon Web Services account ID of the grantee of the cluster.</p>
    ///   - [`cluster_identifier(Option<String>)`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput::cluster_identifier): <p>The cluster identifier.</p>
    ///   - [`authorize_time(Option<DateTime>)`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput::authorize_time): <p>The time (UTC) when the authorization was created.</p>
    ///   - [`cluster_status(Option<String>)`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput::cluster_status): <p>The status of the cluster.</p>
    ///   - [`status(Option<AuthorizationStatus>)`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput::status): <p>The status of the authorization action.</p>
    ///   - [`allowed_all_vpcs(Option<bool>)`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput::allowed_all_vpcs): <p>Indicates whether all VPCs in the grantee account are allowed access to the cluster.</p>
    ///   - [`allowed_vpcs(Option<Vec::<String>>)`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput::allowed_vpcs): <p>The VPCs allowed access to the cluster.</p>
    ///   - [`endpoint_count(Option<i32>)`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessOutput::endpoint_count): <p>The number of Redshift-managed VPC endpoints created for the authorization.</p>
    /// - On failure, responds with [`SdkError<AuthorizeEndpointAccessError>`](crate::operation::authorize_endpoint_access::AuthorizeEndpointAccessError)
    pub fn authorize_endpoint_access(&self) -> crate::operation::authorize_endpoint_access::builders::AuthorizeEndpointAccessFluentBuilder {
        crate::operation::authorize_endpoint_access::builders::AuthorizeEndpointAccessFluentBuilder::new(self.handle.clone())
    }
}
