// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteEndpointAccess`](crate::client::fluent_builders::DeleteEndpointAccess) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_name(impl Into<String>)`](crate::client::fluent_builders::DeleteEndpointAccess::endpoint_name) / [`set_endpoint_name(Option<String>)`](crate::client::fluent_builders::DeleteEndpointAccess::set_endpoint_name): <p>The Redshift-managed VPC endpoint to delete.</p>
    /// - On success, responds with [`DeleteEndpointAccessOutput`](crate::output::DeleteEndpointAccessOutput) with field(s):
    ///   - [`cluster_identifier(Option<String>)`](crate::output::DeleteEndpointAccessOutput::cluster_identifier): <p>The cluster identifier of the cluster associated with the endpoint.</p>
    ///   - [`resource_owner(Option<String>)`](crate::output::DeleteEndpointAccessOutput::resource_owner): <p>The Amazon Web Services account ID of the owner of the cluster.</p>
    ///   - [`subnet_group_name(Option<String>)`](crate::output::DeleteEndpointAccessOutput::subnet_group_name): <p>The subnet group name where Amazon Redshift chooses to deploy the endpoint.</p>
    ///   - [`endpoint_status(Option<String>)`](crate::output::DeleteEndpointAccessOutput::endpoint_status): <p>The status of the endpoint.</p>
    ///   - [`endpoint_name(Option<String>)`](crate::output::DeleteEndpointAccessOutput::endpoint_name): <p>The name of the endpoint.</p>
    ///   - [`endpoint_create_time(Option<DateTime>)`](crate::output::DeleteEndpointAccessOutput::endpoint_create_time): <p>The time (UTC) that the endpoint was created.</p>
    ///   - [`port(i32)`](crate::output::DeleteEndpointAccessOutput::port): <p>The port number on which the cluster accepts incoming connections.</p>
    ///   - [`address(Option<String>)`](crate::output::DeleteEndpointAccessOutput::address): <p>The DNS address of the endpoint.</p>
    ///   - [`vpc_security_groups(Option<Vec<VpcSecurityGroupMembership>>)`](crate::output::DeleteEndpointAccessOutput::vpc_security_groups): <p>The security groups associated with the endpoint.</p>
    ///   - [`vpc_endpoint(Option<VpcEndpoint>)`](crate::output::DeleteEndpointAccessOutput::vpc_endpoint): <p>The connection endpoint for connecting to an Amazon Redshift cluster through the proxy.</p>
    /// - On failure, responds with [`SdkError<DeleteEndpointAccessError>`](crate::error::DeleteEndpointAccessError)
    pub fn delete_endpoint_access(&self) -> crate::client::fluent_builders::DeleteEndpointAccess {
        crate::client::fluent_builders::DeleteEndpointAccess::new(self.handle.clone())
    }
}
