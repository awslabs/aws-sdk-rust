// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AuthorizeClusterSecurityGroupIngress`](crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_security_group_name(impl Into<String>)`](crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder::cluster_security_group_name) / [`set_cluster_security_group_name(Option<String>)`](crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder::set_cluster_security_group_name):<br>required: **true**<br><p>The name of the security group to which the ingress rule is added.</p><br>
    ///   - [`cidrip(impl Into<String>)`](crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder::cidrip) / [`set_cidrip(Option<String>)`](crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder::set_cidrip):<br>required: **false**<br><p>The IP range to be added the Amazon Redshift security group.</p><br>
    ///   - [`ec2_security_group_name(impl Into<String>)`](crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder::ec2_security_group_name) / [`set_ec2_security_group_name(Option<String>)`](crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder::set_ec2_security_group_name):<br>required: **false**<br><p>The EC2 security group to be added the Amazon Redshift security group.</p><br>
    ///   - [`ec2_security_group_owner_id(impl Into<String>)`](crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder::ec2_security_group_owner_id) / [`set_ec2_security_group_owner_id(Option<String>)`](crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder::set_ec2_security_group_owner_id):<br>required: **false**<br><p>The Amazon Web Services account number of the owner of the security group specified by the <i>EC2SecurityGroupName</i> parameter. The Amazon Web Services Access Key ID is not an acceptable value. </p>  <p>Example: <code>111122223333</code> </p><br>
    /// - On success, responds with [`AuthorizeClusterSecurityGroupIngressOutput`](crate::operation::authorize_cluster_security_group_ingress::AuthorizeClusterSecurityGroupIngressOutput) with field(s):
    ///   - [`cluster_security_group(Option<ClusterSecurityGroup>)`](crate::operation::authorize_cluster_security_group_ingress::AuthorizeClusterSecurityGroupIngressOutput::cluster_security_group): <p>Describes a security group.</p>
    /// - On failure, responds with [`SdkError<AuthorizeClusterSecurityGroupIngressError>`](crate::operation::authorize_cluster_security_group_ingress::AuthorizeClusterSecurityGroupIngressError)
    pub fn authorize_cluster_security_group_ingress(
        &self,
    ) -> crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder {
        crate::operation::authorize_cluster_security_group_ingress::builders::AuthorizeClusterSecurityGroupIngressFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
