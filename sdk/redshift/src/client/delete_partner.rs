// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePartner`](crate::operation::delete_partner::builders::DeletePartnerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::operation::delete_partner::builders::DeletePartnerFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::delete_partner::builders::DeletePartnerFluentBuilder::set_account_id):<br>required: **true**<br><p>The Amazon Web Services account ID that owns the cluster.</p><br>
    ///   - [`cluster_identifier(impl Into<String>)`](crate::operation::delete_partner::builders::DeletePartnerFluentBuilder::cluster_identifier) / [`set_cluster_identifier(Option<String>)`](crate::operation::delete_partner::builders::DeletePartnerFluentBuilder::set_cluster_identifier):<br>required: **true**<br><p>The cluster identifier of the cluster that receives data from the partner.</p><br>
    ///   - [`database_name(impl Into<String>)`](crate::operation::delete_partner::builders::DeletePartnerFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::delete_partner::builders::DeletePartnerFluentBuilder::set_database_name):<br>required: **true**<br><p>The name of the database that receives data from the partner.</p><br>
    ///   - [`partner_name(impl Into<String>)`](crate::operation::delete_partner::builders::DeletePartnerFluentBuilder::partner_name) / [`set_partner_name(Option<String>)`](crate::operation::delete_partner::builders::DeletePartnerFluentBuilder::set_partner_name):<br>required: **true**<br><p>The name of the partner that is authorized to send data.</p><br>
    /// - On success, responds with [`DeletePartnerOutput`](crate::operation::delete_partner::DeletePartnerOutput) with field(s):
    ///   - [`database_name(Option<String>)`](crate::operation::delete_partner::DeletePartnerOutput::database_name): <p>The name of the database that receives data from the partner.</p>
    ///   - [`partner_name(Option<String>)`](crate::operation::delete_partner::DeletePartnerOutput::partner_name): <p>The name of the partner that is authorized to send data.</p>
    /// - On failure, responds with [`SdkError<DeletePartnerError>`](crate::operation::delete_partner::DeletePartnerError)
    pub fn delete_partner(&self) -> crate::operation::delete_partner::builders::DeletePartnerFluentBuilder {
        crate::operation::delete_partner::builders::DeletePartnerFluentBuilder::new(self.handle.clone())
    }
}
