// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeSnapshotSchedules`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_identifier(impl Into<String>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::cluster_identifier) / [`set_cluster_identifier(Option<String>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::set_cluster_identifier):<br>required: **false**<br><p>The unique identifier for the cluster whose snapshot schedules you want to view.</p><br>
    ///   - [`schedule_identifier(impl Into<String>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::schedule_identifier) / [`set_schedule_identifier(Option<String>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::set_schedule_identifier):<br>required: **false**<br><p>A unique identifier for a snapshot schedule.</p><br>
    ///   - [`tag_keys(impl Into<String>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::tag_keys) / [`set_tag_keys(Option<Vec::<String>>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::set_tag_keys):<br>required: **false**<br><p>The key value for a snapshot schedule tag.</p><br>
    ///   - [`tag_values(impl Into<String>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::tag_values) / [`set_tag_values(Option<Vec::<String>>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::set_tag_values):<br>required: **false**<br><p>The value corresponding to the key of the snapshot schedule tag.</p><br>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::set_marker):<br>required: **false**<br><p>A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>marker</code> parameter and retrying the command. If the <code>marker</code> field is empty, all response records have been retrieved for the request.</p><br>
    ///   - [`max_records(i32)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number or response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned <code>marker</code> value.</p><br>
    /// - On success, responds with [`DescribeSnapshotSchedulesOutput`](crate::operation::describe_snapshot_schedules::DescribeSnapshotSchedulesOutput) with field(s):
    ///   - [`snapshot_schedules(Option<Vec::<SnapshotSchedule>>)`](crate::operation::describe_snapshot_schedules::DescribeSnapshotSchedulesOutput::snapshot_schedules): <p>A list of SnapshotSchedules.</p>
    ///   - [`marker(Option<String>)`](crate::operation::describe_snapshot_schedules::DescribeSnapshotSchedulesOutput::marker): <p>A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>marker</code> parameter and retrying the command. If the <code>marker</code> field is empty, all response records have been retrieved for the request.</p>
    /// - On failure, responds with [`SdkError<DescribeSnapshotSchedulesError>`](crate::operation::describe_snapshot_schedules::DescribeSnapshotSchedulesError)
    pub fn describe_snapshot_schedules(&self) -> crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder {
        crate::operation::describe_snapshot_schedules::builders::DescribeSnapshotSchedulesFluentBuilder::new(self.handle.clone())
    }
}
