// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RestoreTableFromClusterSnapshot`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_identifier(impl Into<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::cluster_identifier) / [`set_cluster_identifier(Option<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::set_cluster_identifier):<br>required: **true**<br><p>The identifier of the Amazon Redshift cluster to restore the table to.</p><br>
    ///   - [`snapshot_identifier(impl Into<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::snapshot_identifier) / [`set_snapshot_identifier(Option<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::set_snapshot_identifier):<br>required: **true**<br><p>The identifier of the snapshot to restore the table from. This snapshot must have been created from the Amazon Redshift cluster specified by the <code>ClusterIdentifier</code> parameter.</p><br>
    ///   - [`source_database_name(impl Into<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::source_database_name) / [`set_source_database_name(Option<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::set_source_database_name):<br>required: **true**<br><p>The name of the source database that contains the table to restore from.</p><br>
    ///   - [`source_schema_name(impl Into<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::source_schema_name) / [`set_source_schema_name(Option<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::set_source_schema_name):<br>required: **false**<br><p>The name of the source schema that contains the table to restore from. If you do not specify a <code>SourceSchemaName</code> value, the default is <code>public</code>.</p><br>
    ///   - [`source_table_name(impl Into<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::source_table_name) / [`set_source_table_name(Option<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::set_source_table_name):<br>required: **true**<br><p>The name of the source table to restore from.</p><br>
    ///   - [`target_database_name(impl Into<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::target_database_name) / [`set_target_database_name(Option<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::set_target_database_name):<br>required: **false**<br><p>The name of the database to restore the table to.</p><br>
    ///   - [`target_schema_name(impl Into<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::target_schema_name) / [`set_target_schema_name(Option<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::set_target_schema_name):<br>required: **false**<br><p>The name of the schema to restore the table to.</p><br>
    ///   - [`new_table_name(impl Into<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::new_table_name) / [`set_new_table_name(Option<String>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::set_new_table_name):<br>required: **true**<br><p>The name of the table to create as a result of the current request.</p><br>
    ///   - [`enable_case_sensitive_identifier(bool)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::enable_case_sensitive_identifier) / [`set_enable_case_sensitive_identifier(Option<bool>)`](crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::set_enable_case_sensitive_identifier):<br>required: **false**<br><p>Indicates whether name identifiers for database, schema, and table are case sensitive. If <code>true</code>, the names are case sensitive. If <code>false</code> (default), the names are not case sensitive.</p><br>
    /// - On success, responds with [`RestoreTableFromClusterSnapshotOutput`](crate::operation::restore_table_from_cluster_snapshot::RestoreTableFromClusterSnapshotOutput) with field(s):
    ///   - [`table_restore_status(Option<TableRestoreStatus>)`](crate::operation::restore_table_from_cluster_snapshot::RestoreTableFromClusterSnapshotOutput::table_restore_status): <p>Describes the status of a <code>RestoreTableFromClusterSnapshot</code> operation.</p>
    /// - On failure, responds with [`SdkError<RestoreTableFromClusterSnapshotError>`](crate::operation::restore_table_from_cluster_snapshot::RestoreTableFromClusterSnapshotError)
    pub fn restore_table_from_cluster_snapshot(
        &self,
    ) -> crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder {
        crate::operation::restore_table_from_cluster_snapshot::builders::RestoreTableFromClusterSnapshotFluentBuilder::new(self.handle.clone())
    }
}
