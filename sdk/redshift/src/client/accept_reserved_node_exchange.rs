// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AcceptReservedNodeExchange`](crate::operation::accept_reserved_node_exchange::builders::AcceptReservedNodeExchangeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`reserved_node_id(impl Into<String>)`](crate::operation::accept_reserved_node_exchange::builders::AcceptReservedNodeExchangeFluentBuilder::reserved_node_id) / [`set_reserved_node_id(Option<String>)`](crate::operation::accept_reserved_node_exchange::builders::AcceptReservedNodeExchangeFluentBuilder::set_reserved_node_id): <p>A string representing the node identifier of the DC1 Reserved Node to be exchanged.</p>
    ///   - [`target_reserved_node_offering_id(impl Into<String>)`](crate::operation::accept_reserved_node_exchange::builders::AcceptReservedNodeExchangeFluentBuilder::target_reserved_node_offering_id) / [`set_target_reserved_node_offering_id(Option<String>)`](crate::operation::accept_reserved_node_exchange::builders::AcceptReservedNodeExchangeFluentBuilder::set_target_reserved_node_offering_id): <p>The unique identifier of the DC2 Reserved Node offering to be used for the exchange. You can obtain the value for the parameter by calling <code>GetReservedNodeExchangeOfferings</code> </p>
    /// - On success, responds with [`AcceptReservedNodeExchangeOutput`](crate::operation::accept_reserved_node_exchange::AcceptReservedNodeExchangeOutput) with field(s):
    ///   - [`exchanged_reserved_node(Option<ReservedNode>)`](crate::operation::accept_reserved_node_exchange::AcceptReservedNodeExchangeOutput::exchanged_reserved_node): <p></p>
    /// - On failure, responds with [`SdkError<AcceptReservedNodeExchangeError>`](crate::operation::accept_reserved_node_exchange::AcceptReservedNodeExchangeError)
    pub fn accept_reserved_node_exchange(&self) -> crate::operation::accept_reserved_node_exchange::builders::AcceptReservedNodeExchangeFluentBuilder{
        crate::operation::accept_reserved_node_exchange::builders::AcceptReservedNodeExchangeFluentBuilder::new(self.handle.clone())
    }
}
