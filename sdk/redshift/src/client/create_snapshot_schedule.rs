// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSnapshotSchedule`](crate::client::fluent_builders::CreateSnapshotSchedule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`schedule_definitions(Vec<String>)`](crate::client::fluent_builders::CreateSnapshotSchedule::schedule_definitions) / [`set_schedule_definitions(Option<Vec<String>>)`](crate::client::fluent_builders::CreateSnapshotSchedule::set_schedule_definitions): <p>The definition of the snapshot schedule. The definition is made up of schedule expressions, for example "cron(30 12 *)" or "rate(12 hours)". </p>
    ///   - [`schedule_identifier(impl Into<String>)`](crate::client::fluent_builders::CreateSnapshotSchedule::schedule_identifier) / [`set_schedule_identifier(Option<String>)`](crate::client::fluent_builders::CreateSnapshotSchedule::set_schedule_identifier): <p>A unique identifier for a snapshot schedule. Only alphanumeric characters are allowed for the identifier.</p>
    ///   - [`schedule_description(impl Into<String>)`](crate::client::fluent_builders::CreateSnapshotSchedule::schedule_description) / [`set_schedule_description(Option<String>)`](crate::client::fluent_builders::CreateSnapshotSchedule::set_schedule_description): <p>The description of the snapshot schedule.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateSnapshotSchedule::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateSnapshotSchedule::set_tags): <p>An optional set of tags you can use to search for the schedule.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::CreateSnapshotSchedule::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::CreateSnapshotSchedule::set_dry_run): <p></p>
    ///   - [`next_invocations(i32)`](crate::client::fluent_builders::CreateSnapshotSchedule::next_invocations) / [`set_next_invocations(Option<i32>)`](crate::client::fluent_builders::CreateSnapshotSchedule::set_next_invocations): <p></p>
    /// - On success, responds with [`CreateSnapshotScheduleOutput`](crate::output::CreateSnapshotScheduleOutput) with field(s):
    ///   - [`schedule_definitions(Option<Vec<String>>)`](crate::output::CreateSnapshotScheduleOutput::schedule_definitions): <p>A list of ScheduleDefinitions.</p>
    ///   - [`schedule_identifier(Option<String>)`](crate::output::CreateSnapshotScheduleOutput::schedule_identifier): <p>A unique identifier for the schedule.</p>
    ///   - [`schedule_description(Option<String>)`](crate::output::CreateSnapshotScheduleOutput::schedule_description): <p>The description of the schedule.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::CreateSnapshotScheduleOutput::tags): <p>An optional set of tags describing the schedule.</p>
    ///   - [`next_invocations(Option<Vec<DateTime>>)`](crate::output::CreateSnapshotScheduleOutput::next_invocations): <p></p>
    ///   - [`associated_cluster_count(Option<i32>)`](crate::output::CreateSnapshotScheduleOutput::associated_cluster_count): <p>The number of clusters associated with the schedule.</p>
    ///   - [`associated_clusters(Option<Vec<ClusterAssociatedToSchedule>>)`](crate::output::CreateSnapshotScheduleOutput::associated_clusters): <p>A list of clusters associated with the schedule. A maximum of 100 clusters is returned.</p>
    /// - On failure, responds with [`SdkError<CreateSnapshotScheduleError>`](crate::error::CreateSnapshotScheduleError)
    pub fn create_snapshot_schedule(
        &self,
    ) -> crate::client::fluent_builders::CreateSnapshotSchedule {
        crate::client::fluent_builders::CreateSnapshotSchedule::new(self.handle.clone())
    }
}
