// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribePartners`](crate::client::fluent_builders::DescribePartners) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::DescribePartners::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::DescribePartners::set_account_id): <p>The Amazon Web Services account ID that owns the cluster.</p>
    ///   - [`cluster_identifier(impl Into<String>)`](crate::client::fluent_builders::DescribePartners::cluster_identifier) / [`set_cluster_identifier(Option<String>)`](crate::client::fluent_builders::DescribePartners::set_cluster_identifier): <p>The cluster identifier of the cluster whose partner integration is being described.</p>
    ///   - [`database_name(impl Into<String>)`](crate::client::fluent_builders::DescribePartners::database_name) / [`set_database_name(Option<String>)`](crate::client::fluent_builders::DescribePartners::set_database_name): <p>The name of the database whose partner integration is being described. If database name is not specified, then all databases in the cluster are described.</p>
    ///   - [`partner_name(impl Into<String>)`](crate::client::fluent_builders::DescribePartners::partner_name) / [`set_partner_name(Option<String>)`](crate::client::fluent_builders::DescribePartners::set_partner_name): <p>The name of the partner that is being described. If partner name is not specified, then all partner integrations are described.</p>
    /// - On success, responds with [`DescribePartnersOutput`](crate::output::DescribePartnersOutput) with field(s):
    ///   - [`partner_integration_info_list(Option<Vec<PartnerIntegrationInfo>>)`](crate::output::DescribePartnersOutput::partner_integration_info_list): <p>A list of partner integrations.</p>
    /// - On failure, responds with [`SdkError<DescribePartnersError>`](crate::error::DescribePartnersError)
    pub fn describe_partners(&self) -> crate::client::fluent_builders::DescribePartners {
        crate::client::fluent_builders::DescribePartners::new(self.handle.clone())
    }
}
