// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_batch_modify_cluster_snapshots_input_input(
    input: &crate::operation::batch_modify_cluster_snapshots::BatchModifyClusterSnapshotsInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "BatchModifyClusterSnapshots", "2012-12-01");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("SnapshotIdentifierList");
    if let Some(var_2) = &input.snapshot_identifier_list {
        let mut list_4 = scope_1.start_list(false, Some("String"));
        for item_3 in var_2 {
            #[allow(unused_mut)]
            let mut entry_5 = list_4.entry();
            entry_5.string(item_3);
        }
        list_4.finish();
    }
    #[allow(unused_mut)]
    let mut scope_6 = writer.prefix("ManualSnapshotRetentionPeriod");
    if let Some(var_7) = &input.manual_snapshot_retention_period {
        scope_6.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_8 = writer.prefix("Force");
    if let Some(var_9) = &input.force {
        scope_8.boolean(*var_9);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
