// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_resize_cluster_input_input(
    input: &crate::operation::resize_cluster::ResizeClusterInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "ResizeCluster", "2012-12-01");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("ClusterIdentifier");
    if let Some(var_2) = &input.cluster_identifier {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("ClusterType");
    if let Some(var_4) = &input.cluster_type {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("NodeType");
    if let Some(var_6) = &input.node_type {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("NumberOfNodes");
    if let Some(var_8) = &input.number_of_nodes {
        scope_7.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_8).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("Classic");
    if let Some(var_10) = &input.classic {
        scope_9.boolean(*var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("ReservedNodeId");
    if let Some(var_12) = &input.reserved_node_id {
        scope_11.string(var_12);
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("TargetReservedNodeOfferingId");
    if let Some(var_14) = &input.target_reserved_node_offering_id {
        scope_13.string(var_14);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
