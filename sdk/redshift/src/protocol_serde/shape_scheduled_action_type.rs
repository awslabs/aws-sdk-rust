// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_scheduled_action_type(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::ScheduledActionType,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("ResizeCluster");
    if let Some(var_2) = &input.resize_cluster {
        crate::protocol_serde::shape_resize_cluster_message::ser_resize_cluster_message(scope_1, var_2)?;
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("PauseCluster");
    if let Some(var_4) = &input.pause_cluster {
        crate::protocol_serde::shape_pause_cluster_message::ser_pause_cluster_message(scope_3, var_4)?;
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("ResumeCluster");
    if let Some(var_6) = &input.resume_cluster {
        crate::protocol_serde::shape_resume_cluster_message::ser_resume_cluster_message(scope_5, var_6)?;
    }
    Ok(())
}

#[allow(clippy::needless_question_mark)]
pub fn de_scheduled_action_type(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::ScheduledActionType, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ScheduledActionType::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ResizeCluster") /* ResizeCluster com.amazonaws.redshift#ScheduledActionType$ResizeCluster */ =>  {
                let var_7 =
                    Some(
                        crate::protocol_serde::shape_resize_cluster_message::de_resize_cluster_message(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_resize_cluster(var_7);
            }
            ,
            s if s.matches("PauseCluster") /* PauseCluster com.amazonaws.redshift#ScheduledActionType$PauseCluster */ =>  {
                let var_8 =
                    Some(
                        crate::protocol_serde::shape_pause_cluster_message::de_pause_cluster_message(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_pause_cluster(var_8);
            }
            ,
            s if s.matches("ResumeCluster") /* ResumeCluster com.amazonaws.redshift#ScheduledActionType$ResumeCluster */ =>  {
                let var_9 =
                    Some(
                        crate::protocol_serde::shape_resume_cluster_message::de_resume_cluster_message(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_resume_cluster(var_9);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
