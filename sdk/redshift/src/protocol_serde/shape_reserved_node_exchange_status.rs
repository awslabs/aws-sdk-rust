// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_reserved_node_exchange_status(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::ReservedNodeExchangeStatus, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ReservedNodeExchangeStatus::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ReservedNodeExchangeRequestId") /* ReservedNodeExchangeRequestId com.amazonaws.redshift#ReservedNodeExchangeStatus$ReservedNodeExchangeRequestId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_reserved_node_exchange_request_id(var_1);
            }
            ,
            s if s.matches("Status") /* Status com.amazonaws.redshift#ReservedNodeExchangeStatus$Status */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::ReservedNodeExchangeStatusType, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ReservedNodeExchangeStatusType::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_2);
            }
            ,
            s if s.matches("RequestTime") /* RequestTime com.amazonaws.redshift#ReservedNodeExchangeStatus$RequestTime */ =>  {
                let var_3 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.redshift#TStamp`)"))
                        ?
                    )
                ;
                builder = builder.set_request_time(var_3);
            }
            ,
            s if s.matches("SourceReservedNodeId") /* SourceReservedNodeId com.amazonaws.redshift#ReservedNodeExchangeStatus$SourceReservedNodeId */ =>  {
                let var_4 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_source_reserved_node_id(var_4);
            }
            ,
            s if s.matches("SourceReservedNodeType") /* SourceReservedNodeType com.amazonaws.redshift#ReservedNodeExchangeStatus$SourceReservedNodeType */ =>  {
                let var_5 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_source_reserved_node_type(var_5);
            }
            ,
            s if s.matches("SourceReservedNodeCount") /* SourceReservedNodeCount com.amazonaws.redshift#ReservedNodeExchangeStatus$SourceReservedNodeCount */ =>  {
                let var_6 =
                    Some(
                         {
                            <i32 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.redshift#Integer`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_source_reserved_node_count(var_6);
            }
            ,
            s if s.matches("TargetReservedNodeOfferingId") /* TargetReservedNodeOfferingId com.amazonaws.redshift#ReservedNodeExchangeStatus$TargetReservedNodeOfferingId */ =>  {
                let var_7 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_target_reserved_node_offering_id(var_7);
            }
            ,
            s if s.matches("TargetReservedNodeType") /* TargetReservedNodeType com.amazonaws.redshift#ReservedNodeExchangeStatus$TargetReservedNodeType */ =>  {
                let var_8 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_target_reserved_node_type(var_8);
            }
            ,
            s if s.matches("TargetReservedNodeCount") /* TargetReservedNodeCount com.amazonaws.redshift#ReservedNodeExchangeStatus$TargetReservedNodeCount */ =>  {
                let var_9 =
                    Some(
                         {
                            <i32 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.redshift#Integer`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_target_reserved_node_count(var_9);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
