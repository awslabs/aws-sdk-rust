// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_scheduled_action_input_input(
    input: &crate::operation::create_scheduled_action::CreateScheduledActionInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "CreateScheduledAction", "2012-12-01");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("ScheduledActionName");
    if let Some(var_2) = &input.scheduled_action_name {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("TargetAction");
    if let Some(var_4) = &input.target_action {
        crate::protocol_serde::shape_scheduled_action_type::ser_scheduled_action_type(scope_3, var_4)?;
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("Schedule");
    if let Some(var_6) = &input.schedule {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("IamRole");
    if let Some(var_8) = &input.iam_role {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("ScheduledActionDescription");
    if let Some(var_10) = &input.scheduled_action_description {
        scope_9.string(var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("StartTime");
    if let Some(var_12) = &input.start_time {
        scope_11.date_time(var_12, ::aws_smithy_types::date_time::Format::DateTime)?;
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("EndTime");
    if let Some(var_14) = &input.end_time {
        scope_13.date_time(var_14, ::aws_smithy_types::date_time::Format::DateTime)?;
    }
    #[allow(unused_mut)]
    let mut scope_15 = writer.prefix("Enable");
    if let Some(var_16) = &input.enable {
        scope_15.boolean(*var_16);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
