// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_cluster_iam_roles_input_input(
    input: &crate::operation::modify_cluster_iam_roles::ModifyClusterIamRolesInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "ModifyClusterIamRoles", "2012-12-01");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("ClusterIdentifier");
    if let Some(var_2) = &input.cluster_identifier {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("AddIamRoles");
    if let Some(var_4) = &input.add_iam_roles {
        let mut list_6 = scope_3.start_list(false, Some("IamRoleArn"));
        for item_5 in var_4 {
            #[allow(unused_mut)]
            let mut entry_7 = list_6.entry();
            entry_7.string(item_5);
        }
        list_6.finish();
    }
    #[allow(unused_mut)]
    let mut scope_8 = writer.prefix("RemoveIamRoles");
    if let Some(var_9) = &input.remove_iam_roles {
        let mut list_11 = scope_8.start_list(false, Some("IamRoleArn"));
        for item_10 in var_9 {
            #[allow(unused_mut)]
            let mut entry_12 = list_11.entry();
            entry_12.string(item_10);
        }
        list_11.finish();
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("DefaultIamRoleArn");
    if let Some(var_14) = &input.default_iam_role_arn {
        scope_13.string(var_14);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
