// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A name value pair that describes an aspect of an account. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AccountAttribute {
    /// <p>The name of the attribute.</p>
    #[doc(hidden)]
    pub attribute_name: std::option::Option<std::string::String>,
    /// <p>A list of attribute values.</p>
    #[doc(hidden)]
    pub attribute_values: std::option::Option<std::vec::Vec<crate::types::AttributeValueTarget>>,
}
impl AccountAttribute {
    /// <p>The name of the attribute.</p>
    pub fn attribute_name(&self) -> std::option::Option<&str> {
        self.attribute_name.as_deref()
    }
    /// <p>A list of attribute values.</p>
    pub fn attribute_values(&self) -> std::option::Option<&[crate::types::AttributeValueTarget]> {
        self.attribute_values.as_deref()
    }
}
impl AccountAttribute {
    /// Creates a new builder-style object to manufacture [`AccountAttribute`](crate::types::AccountAttribute).
    pub fn builder() -> crate::types::builders::AccountAttributeBuilder {
        crate::types::builders::AccountAttributeBuilder::default()
    }
}

/// A builder for [`AccountAttribute`](crate::types::AccountAttribute).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccountAttributeBuilder {
    pub(crate) attribute_name: std::option::Option<std::string::String>,
    pub(crate) attribute_values:
        std::option::Option<std::vec::Vec<crate::types::AttributeValueTarget>>,
}
impl AccountAttributeBuilder {
    /// <p>The name of the attribute.</p>
    pub fn attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.attribute_name = Some(input.into());
        self
    }
    /// <p>The name of the attribute.</p>
    pub fn set_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attribute_name = input;
        self
    }
    /// Appends an item to `attribute_values`.
    ///
    /// To override the contents of this collection use [`set_attribute_values`](Self::set_attribute_values).
    ///
    /// <p>A list of attribute values.</p>
    pub fn attribute_values(mut self, input: crate::types::AttributeValueTarget) -> Self {
        let mut v = self.attribute_values.unwrap_or_default();
        v.push(input);
        self.attribute_values = Some(v);
        self
    }
    /// <p>A list of attribute values.</p>
    pub fn set_attribute_values(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AttributeValueTarget>>,
    ) -> Self {
        self.attribute_values = input;
        self
    }
    /// Consumes the builder and constructs a [`AccountAttribute`](crate::types::AccountAttribute).
    pub fn build(self) -> crate::types::AccountAttribute {
        crate::types::AccountAttribute {
            attribute_name: self.attribute_name,
            attribute_values: self.attribute_values,
        }
    }
}
