// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a deferred maintenance window</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeferredMaintenanceWindow {
    /// <p>A unique identifier for the maintenance window.</p>
    #[doc(hidden)]
    pub defer_maintenance_identifier: std::option::Option<std::string::String>,
    /// <p> A timestamp for the beginning of the time period when we defer maintenance.</p>
    #[doc(hidden)]
    pub defer_maintenance_start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p> A timestamp for the end of the time period when we defer maintenance.</p>
    #[doc(hidden)]
    pub defer_maintenance_end_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl DeferredMaintenanceWindow {
    /// <p>A unique identifier for the maintenance window.</p>
    pub fn defer_maintenance_identifier(&self) -> std::option::Option<&str> {
        self.defer_maintenance_identifier.as_deref()
    }
    /// <p> A timestamp for the beginning of the time period when we defer maintenance.</p>
    pub fn defer_maintenance_start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.defer_maintenance_start_time.as_ref()
    }
    /// <p> A timestamp for the end of the time period when we defer maintenance.</p>
    pub fn defer_maintenance_end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.defer_maintenance_end_time.as_ref()
    }
}
impl DeferredMaintenanceWindow {
    /// Creates a new builder-style object to manufacture [`DeferredMaintenanceWindow`](crate::types::DeferredMaintenanceWindow).
    pub fn builder() -> crate::types::builders::DeferredMaintenanceWindowBuilder {
        crate::types::builders::DeferredMaintenanceWindowBuilder::default()
    }
}

/// A builder for [`DeferredMaintenanceWindow`](crate::types::DeferredMaintenanceWindow).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeferredMaintenanceWindowBuilder {
    pub(crate) defer_maintenance_identifier: std::option::Option<std::string::String>,
    pub(crate) defer_maintenance_start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) defer_maintenance_end_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl DeferredMaintenanceWindowBuilder {
    /// <p>A unique identifier for the maintenance window.</p>
    pub fn defer_maintenance_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.defer_maintenance_identifier = Some(input.into());
        self
    }
    /// <p>A unique identifier for the maintenance window.</p>
    pub fn set_defer_maintenance_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.defer_maintenance_identifier = input;
        self
    }
    /// <p> A timestamp for the beginning of the time period when we defer maintenance.</p>
    pub fn defer_maintenance_start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.defer_maintenance_start_time = Some(input);
        self
    }
    /// <p> A timestamp for the beginning of the time period when we defer maintenance.</p>
    pub fn set_defer_maintenance_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.defer_maintenance_start_time = input;
        self
    }
    /// <p> A timestamp for the end of the time period when we defer maintenance.</p>
    pub fn defer_maintenance_end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.defer_maintenance_end_time = Some(input);
        self
    }
    /// <p> A timestamp for the end of the time period when we defer maintenance.</p>
    pub fn set_defer_maintenance_end_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.defer_maintenance_end_time = input;
        self
    }
    /// Consumes the builder and constructs a [`DeferredMaintenanceWindow`](crate::types::DeferredMaintenanceWindow).
    pub fn build(self) -> crate::types::DeferredMaintenanceWindow {
        crate::types::DeferredMaintenanceWindow {
            defer_maintenance_identifier: self.defer_maintenance_identifier,
            defer_maintenance_start_time: self.defer_maintenance_start_time,
            defer_maintenance_end_time: self.defer_maintenance_end_time,
        }
    }
}
