// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the status of the elastic IP (EIP) address.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ElasticIpStatus {
    /// <p>The elastic IP (EIP) address for the cluster.</p>
    #[doc(hidden)]
    pub elastic_ip: std::option::Option<std::string::String>,
    /// <p>The status of the elastic IP (EIP) address.</p>
    #[doc(hidden)]
    pub status: std::option::Option<std::string::String>,
}
impl ElasticIpStatus {
    /// <p>The elastic IP (EIP) address for the cluster.</p>
    pub fn elastic_ip(&self) -> std::option::Option<&str> {
        self.elastic_ip.as_deref()
    }
    /// <p>The status of the elastic IP (EIP) address.</p>
    pub fn status(&self) -> std::option::Option<&str> {
        self.status.as_deref()
    }
}
impl ElasticIpStatus {
    /// Creates a new builder-style object to manufacture [`ElasticIpStatus`](crate::types::ElasticIpStatus).
    pub fn builder() -> crate::types::builders::ElasticIpStatusBuilder {
        crate::types::builders::ElasticIpStatusBuilder::default()
    }
}

/// A builder for [`ElasticIpStatus`](crate::types::ElasticIpStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ElasticIpStatusBuilder {
    pub(crate) elastic_ip: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<std::string::String>,
}
impl ElasticIpStatusBuilder {
    /// <p>The elastic IP (EIP) address for the cluster.</p>
    pub fn elastic_ip(mut self, input: impl Into<std::string::String>) -> Self {
        self.elastic_ip = Some(input.into());
        self
    }
    /// <p>The elastic IP (EIP) address for the cluster.</p>
    pub fn set_elastic_ip(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.elastic_ip = input;
        self
    }
    /// <p>The status of the elastic IP (EIP) address.</p>
    pub fn status(mut self, input: impl Into<std::string::String>) -> Self {
        self.status = Some(input.into());
        self
    }
    /// <p>The status of the elastic IP (EIP) address.</p>
    pub fn set_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`ElasticIpStatus`](crate::types::ElasticIpStatus).
    pub fn build(self) -> crate::types::ElasticIpStatus {
        crate::types::ElasticIpStatus {
            elastic_ip: self.elastic_ip,
            status: self.status,
        }
    }
}
