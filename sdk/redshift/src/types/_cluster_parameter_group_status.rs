// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the status of a parameter group.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClusterParameterGroupStatus {
    /// <p>The name of the cluster parameter group.</p>
    #[doc(hidden)]
    pub parameter_group_name: std::option::Option<std::string::String>,
    /// <p>The status of parameter updates.</p>
    #[doc(hidden)]
    pub parameter_apply_status: std::option::Option<std::string::String>,
    /// <p>The list of parameter statuses.</p>
    /// <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>
    #[doc(hidden)]
    pub cluster_parameter_status_list:
        std::option::Option<std::vec::Vec<crate::types::ClusterParameterStatus>>,
}
impl ClusterParameterGroupStatus {
    /// <p>The name of the cluster parameter group.</p>
    pub fn parameter_group_name(&self) -> std::option::Option<&str> {
        self.parameter_group_name.as_deref()
    }
    /// <p>The status of parameter updates.</p>
    pub fn parameter_apply_status(&self) -> std::option::Option<&str> {
        self.parameter_apply_status.as_deref()
    }
    /// <p>The list of parameter statuses.</p>
    /// <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>
    pub fn cluster_parameter_status_list(
        &self,
    ) -> std::option::Option<&[crate::types::ClusterParameterStatus]> {
        self.cluster_parameter_status_list.as_deref()
    }
}
impl ClusterParameterGroupStatus {
    /// Creates a new builder-style object to manufacture [`ClusterParameterGroupStatus`](crate::types::ClusterParameterGroupStatus).
    pub fn builder() -> crate::types::builders::ClusterParameterGroupStatusBuilder {
        crate::types::builders::ClusterParameterGroupStatusBuilder::default()
    }
}

/// A builder for [`ClusterParameterGroupStatus`](crate::types::ClusterParameterGroupStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClusterParameterGroupStatusBuilder {
    pub(crate) parameter_group_name: std::option::Option<std::string::String>,
    pub(crate) parameter_apply_status: std::option::Option<std::string::String>,
    pub(crate) cluster_parameter_status_list:
        std::option::Option<std::vec::Vec<crate::types::ClusterParameterStatus>>,
}
impl ClusterParameterGroupStatusBuilder {
    /// <p>The name of the cluster parameter group.</p>
    pub fn parameter_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_group_name = Some(input.into());
        self
    }
    /// <p>The name of the cluster parameter group.</p>
    pub fn set_parameter_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.parameter_group_name = input;
        self
    }
    /// <p>The status of parameter updates.</p>
    pub fn parameter_apply_status(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_apply_status = Some(input.into());
        self
    }
    /// <p>The status of parameter updates.</p>
    pub fn set_parameter_apply_status(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.parameter_apply_status = input;
        self
    }
    /// Appends an item to `cluster_parameter_status_list`.
    ///
    /// To override the contents of this collection use [`set_cluster_parameter_status_list`](Self::set_cluster_parameter_status_list).
    ///
    /// <p>The list of parameter statuses.</p>
    /// <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>
    pub fn cluster_parameter_status_list(
        mut self,
        input: crate::types::ClusterParameterStatus,
    ) -> Self {
        let mut v = self.cluster_parameter_status_list.unwrap_or_default();
        v.push(input);
        self.cluster_parameter_status_list = Some(v);
        self
    }
    /// <p>The list of parameter statuses.</p>
    /// <p> For more information about parameters and parameter groups, go to <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>
    pub fn set_cluster_parameter_status_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ClusterParameterStatus>>,
    ) -> Self {
        self.cluster_parameter_status_list = input;
        self
    }
    /// Consumes the builder and constructs a [`ClusterParameterGroupStatus`](crate::types::ClusterParameterGroupStatus).
    pub fn build(self) -> crate::types::ClusterParameterGroupStatus {
        crate::types::ClusterParameterGroupStatus {
            parameter_group_name: self.parameter_group_name,
            parameter_apply_status: self.parameter_apply_status,
            cluster_parameter_status_list: self.cluster_parameter_status_list,
        }
    }
}
