// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the operations that are allowed on a maintenance track.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SupportedOperation {
    /// <p>A list of the supported operations.</p>
    #[doc(hidden)]
    pub operation_name: std::option::Option<std::string::String>,
}
impl SupportedOperation {
    /// <p>A list of the supported operations.</p>
    pub fn operation_name(&self) -> std::option::Option<&str> {
        self.operation_name.as_deref()
    }
}
impl SupportedOperation {
    /// Creates a new builder-style object to manufacture [`SupportedOperation`](crate::types::SupportedOperation).
    pub fn builder() -> crate::types::builders::SupportedOperationBuilder {
        crate::types::builders::SupportedOperationBuilder::default()
    }
}

/// A builder for [`SupportedOperation`](crate::types::SupportedOperation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SupportedOperationBuilder {
    pub(crate) operation_name: std::option::Option<std::string::String>,
}
impl SupportedOperationBuilder {
    /// <p>A list of the supported operations.</p>
    pub fn operation_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.operation_name = Some(input.into());
        self
    }
    /// <p>A list of the supported operations.</p>
    pub fn set_operation_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.operation_name = input;
        self
    }
    /// Consumes the builder and constructs a [`SupportedOperation`](crate::types::SupportedOperation).
    pub fn build(self) -> crate::types::SupportedOperation {
        crate::types::SupportedOperation {
            operation_name: self.operation_name,
        }
    }
}
