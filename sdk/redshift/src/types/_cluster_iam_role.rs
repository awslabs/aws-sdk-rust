// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An Identity and Access Management (IAM) role that can be used by the associated Amazon Redshift cluster to access other Amazon Web Services services.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClusterIamRole {
    /// <p>The Amazon Resource Name (ARN) of the IAM role, for example, <code>arn:aws:iam::123456789012:role/RedshiftCopyUnload</code>. </p>
    #[doc(hidden)]
    pub iam_role_arn: std::option::Option<std::string::String>,
    /// <p>A value that describes the status of the IAM role's association with an Amazon Redshift cluster.</p>
    /// <p>The following are possible statuses and descriptions.</p>
    /// <ul>
    /// <li> <p> <code>in-sync</code>: The role is available for use by the cluster.</p> </li>
    /// <li> <p> <code>adding</code>: The role is in the process of being associated with the cluster.</p> </li>
    /// <li> <p> <code>removing</code>: The role is in the process of being disassociated with the cluster.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub apply_status: std::option::Option<std::string::String>,
}
impl ClusterIamRole {
    /// <p>The Amazon Resource Name (ARN) of the IAM role, for example, <code>arn:aws:iam::123456789012:role/RedshiftCopyUnload</code>. </p>
    pub fn iam_role_arn(&self) -> std::option::Option<&str> {
        self.iam_role_arn.as_deref()
    }
    /// <p>A value that describes the status of the IAM role's association with an Amazon Redshift cluster.</p>
    /// <p>The following are possible statuses and descriptions.</p>
    /// <ul>
    /// <li> <p> <code>in-sync</code>: The role is available for use by the cluster.</p> </li>
    /// <li> <p> <code>adding</code>: The role is in the process of being associated with the cluster.</p> </li>
    /// <li> <p> <code>removing</code>: The role is in the process of being disassociated with the cluster.</p> </li>
    /// </ul>
    pub fn apply_status(&self) -> std::option::Option<&str> {
        self.apply_status.as_deref()
    }
}
impl ClusterIamRole {
    /// Creates a new builder-style object to manufacture [`ClusterIamRole`](crate::types::ClusterIamRole).
    pub fn builder() -> crate::types::builders::ClusterIamRoleBuilder {
        crate::types::builders::ClusterIamRoleBuilder::default()
    }
}

/// A builder for [`ClusterIamRole`](crate::types::ClusterIamRole).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClusterIamRoleBuilder {
    pub(crate) iam_role_arn: std::option::Option<std::string::String>,
    pub(crate) apply_status: std::option::Option<std::string::String>,
}
impl ClusterIamRoleBuilder {
    /// <p>The Amazon Resource Name (ARN) of the IAM role, for example, <code>arn:aws:iam::123456789012:role/RedshiftCopyUnload</code>. </p>
    pub fn iam_role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.iam_role_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role, for example, <code>arn:aws:iam::123456789012:role/RedshiftCopyUnload</code>. </p>
    pub fn set_iam_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.iam_role_arn = input;
        self
    }
    /// <p>A value that describes the status of the IAM role's association with an Amazon Redshift cluster.</p>
    /// <p>The following are possible statuses and descriptions.</p>
    /// <ul>
    /// <li> <p> <code>in-sync</code>: The role is available for use by the cluster.</p> </li>
    /// <li> <p> <code>adding</code>: The role is in the process of being associated with the cluster.</p> </li>
    /// <li> <p> <code>removing</code>: The role is in the process of being disassociated with the cluster.</p> </li>
    /// </ul>
    pub fn apply_status(mut self, input: impl Into<std::string::String>) -> Self {
        self.apply_status = Some(input.into());
        self
    }
    /// <p>A value that describes the status of the IAM role's association with an Amazon Redshift cluster.</p>
    /// <p>The following are possible statuses and descriptions.</p>
    /// <ul>
    /// <li> <p> <code>in-sync</code>: The role is available for use by the cluster.</p> </li>
    /// <li> <p> <code>adding</code>: The role is in the process of being associated with the cluster.</p> </li>
    /// <li> <p> <code>removing</code>: The role is in the process of being disassociated with the cluster.</p> </li>
    /// </ul>
    pub fn set_apply_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.apply_status = input;
        self
    }
    /// Consumes the builder and constructs a [`ClusterIamRole`](crate::types::ClusterIamRole).
    pub fn build(self) -> crate::types::ClusterIamRole {
        crate::types::ClusterIamRole {
            iam_role_arn: self.iam_role_arn,
            apply_status: self.apply_status,
        }
    }
}
