// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the status of changes to HSM settings.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct HsmStatus {
    /// <p>Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.</p>
    #[doc(hidden)]
    pub hsm_client_certificate_identifier: std::option::Option<std::string::String>,
    /// <p>Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.</p>
    #[doc(hidden)]
    pub hsm_configuration_identifier: std::option::Option<std::string::String>,
    /// <p>Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes specified in a modify cluster command.</p>
    /// <p>Values: active, applying</p>
    #[doc(hidden)]
    pub status: std::option::Option<std::string::String>,
}
impl HsmStatus {
    /// <p>Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.</p>
    pub fn hsm_client_certificate_identifier(&self) -> std::option::Option<&str> {
        self.hsm_client_certificate_identifier.as_deref()
    }
    /// <p>Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.</p>
    pub fn hsm_configuration_identifier(&self) -> std::option::Option<&str> {
        self.hsm_configuration_identifier.as_deref()
    }
    /// <p>Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes specified in a modify cluster command.</p>
    /// <p>Values: active, applying</p>
    pub fn status(&self) -> std::option::Option<&str> {
        self.status.as_deref()
    }
}
impl HsmStatus {
    /// Creates a new builder-style object to manufacture [`HsmStatus`](crate::types::HsmStatus).
    pub fn builder() -> crate::types::builders::HsmStatusBuilder {
        crate::types::builders::HsmStatusBuilder::default()
    }
}

/// A builder for [`HsmStatus`](crate::types::HsmStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct HsmStatusBuilder {
    pub(crate) hsm_client_certificate_identifier: std::option::Option<std::string::String>,
    pub(crate) hsm_configuration_identifier: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<std::string::String>,
}
impl HsmStatusBuilder {
    /// <p>Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.</p>
    pub fn hsm_client_certificate_identifier(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.hsm_client_certificate_identifier = Some(input.into());
        self
    }
    /// <p>Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.</p>
    pub fn set_hsm_client_certificate_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.hsm_client_certificate_identifier = input;
        self
    }
    /// <p>Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.</p>
    pub fn hsm_configuration_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.hsm_configuration_identifier = Some(input.into());
        self
    }
    /// <p>Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.</p>
    pub fn set_hsm_configuration_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.hsm_configuration_identifier = input;
        self
    }
    /// <p>Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes specified in a modify cluster command.</p>
    /// <p>Values: active, applying</p>
    pub fn status(mut self, input: impl Into<std::string::String>) -> Self {
        self.status = Some(input.into());
        self
    }
    /// <p>Reports whether the Amazon Redshift cluster has finished applying any HSM settings changes specified in a modify cluster command.</p>
    /// <p>Values: active, applying</p>
    pub fn set_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`HsmStatus`](crate::types::HsmStatus).
    pub fn build(self) -> crate::types::HsmStatus {
        crate::types::HsmStatus {
            hsm_client_certificate_identifier: self.hsm_client_certificate_identifier,
            hsm_configuration_identifier: self.hsm_configuration_identifier,
            status: self.status,
        }
    }
}
