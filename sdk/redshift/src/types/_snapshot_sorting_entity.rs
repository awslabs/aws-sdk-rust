// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a sorting entity</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SnapshotSortingEntity {
    /// <p>The category for sorting the snapshots.</p>
    #[doc(hidden)]
    pub attribute: std::option::Option<crate::types::SnapshotAttributeToSortBy>,
    /// <p>The order for listing the attributes.</p>
    #[doc(hidden)]
    pub sort_order: std::option::Option<crate::types::SortByOrder>,
}
impl SnapshotSortingEntity {
    /// <p>The category for sorting the snapshots.</p>
    pub fn attribute(&self) -> std::option::Option<&crate::types::SnapshotAttributeToSortBy> {
        self.attribute.as_ref()
    }
    /// <p>The order for listing the attributes.</p>
    pub fn sort_order(&self) -> std::option::Option<&crate::types::SortByOrder> {
        self.sort_order.as_ref()
    }
}
impl SnapshotSortingEntity {
    /// Creates a new builder-style object to manufacture [`SnapshotSortingEntity`](crate::types::SnapshotSortingEntity).
    pub fn builder() -> crate::types::builders::SnapshotSortingEntityBuilder {
        crate::types::builders::SnapshotSortingEntityBuilder::default()
    }
}

/// A builder for [`SnapshotSortingEntity`](crate::types::SnapshotSortingEntity).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SnapshotSortingEntityBuilder {
    pub(crate) attribute: std::option::Option<crate::types::SnapshotAttributeToSortBy>,
    pub(crate) sort_order: std::option::Option<crate::types::SortByOrder>,
}
impl SnapshotSortingEntityBuilder {
    /// <p>The category for sorting the snapshots.</p>
    pub fn attribute(mut self, input: crate::types::SnapshotAttributeToSortBy) -> Self {
        self.attribute = Some(input);
        self
    }
    /// <p>The category for sorting the snapshots.</p>
    pub fn set_attribute(
        mut self,
        input: std::option::Option<crate::types::SnapshotAttributeToSortBy>,
    ) -> Self {
        self.attribute = input;
        self
    }
    /// <p>The order for listing the attributes.</p>
    pub fn sort_order(mut self, input: crate::types::SortByOrder) -> Self {
        self.sort_order = Some(input);
        self
    }
    /// <p>The order for listing the attributes.</p>
    pub fn set_sort_order(mut self, input: std::option::Option<crate::types::SortByOrder>) -> Self {
        self.sort_order = input;
        self
    }
    /// Consumes the builder and constructs a [`SnapshotSortingEntity`](crate::types::SnapshotSortingEntity).
    pub fn build(self) -> crate::types::SnapshotSortingEntity {
        crate::types::SnapshotSortingEntity {
            attribute: self.attribute,
            sort_order: self.sort_order,
        }
    }
}
