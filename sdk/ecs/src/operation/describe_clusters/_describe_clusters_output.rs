// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeClustersOutput {
    /// <p>The list of clusters.</p>
    #[doc(hidden)]
    pub clusters: std::option::Option<std::vec::Vec<crate::types::Cluster>>,
    /// <p>Any failures associated with the call.</p>
    #[doc(hidden)]
    pub failures: std::option::Option<std::vec::Vec<crate::types::Failure>>,
    _request_id: Option<String>,
}
impl DescribeClustersOutput {
    /// <p>The list of clusters.</p>
    pub fn clusters(&self) -> std::option::Option<&[crate::types::Cluster]> {
        self.clusters.as_deref()
    }
    /// <p>Any failures associated with the call.</p>
    pub fn failures(&self) -> std::option::Option<&[crate::types::Failure]> {
        self.failures.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeClustersOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeClustersOutput {
    /// Creates a new builder-style object to manufacture [`DescribeClustersOutput`](crate::operation::describe_clusters::DescribeClustersOutput).
    pub fn builder() -> crate::operation::describe_clusters::builders::DescribeClustersOutputBuilder
    {
        crate::operation::describe_clusters::builders::DescribeClustersOutputBuilder::default()
    }
}

/// A builder for [`DescribeClustersOutput`](crate::operation::describe_clusters::DescribeClustersOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeClustersOutputBuilder {
    pub(crate) clusters: std::option::Option<std::vec::Vec<crate::types::Cluster>>,
    pub(crate) failures: std::option::Option<std::vec::Vec<crate::types::Failure>>,
    _request_id: Option<String>,
}
impl DescribeClustersOutputBuilder {
    /// Appends an item to `clusters`.
    ///
    /// To override the contents of this collection use [`set_clusters`](Self::set_clusters).
    ///
    /// <p>The list of clusters.</p>
    pub fn clusters(mut self, input: crate::types::Cluster) -> Self {
        let mut v = self.clusters.unwrap_or_default();
        v.push(input);
        self.clusters = Some(v);
        self
    }
    /// <p>The list of clusters.</p>
    pub fn set_clusters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Cluster>>,
    ) -> Self {
        self.clusters = input;
        self
    }
    /// Appends an item to `failures`.
    ///
    /// To override the contents of this collection use [`set_failures`](Self::set_failures).
    ///
    /// <p>Any failures associated with the call.</p>
    pub fn failures(mut self, input: crate::types::Failure) -> Self {
        let mut v = self.failures.unwrap_or_default();
        v.push(input);
        self.failures = Some(v);
        self
    }
    /// <p>Any failures associated with the call.</p>
    pub fn set_failures(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Failure>>,
    ) -> Self {
        self.failures = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeClustersOutput`](crate::operation::describe_clusters::DescribeClustersOutput).
    pub fn build(self) -> crate::operation::describe_clusters::DescribeClustersOutput {
        crate::operation::describe_clusters::DescribeClustersOutput {
            clusters: self.clusters,
            failures: self.failures,
            _request_id: self._request_id,
        }
    }
}
