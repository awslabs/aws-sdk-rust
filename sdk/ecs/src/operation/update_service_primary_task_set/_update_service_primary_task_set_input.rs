// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateServicePrimaryTaskSetInput {
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set exists in.</p>
    #[doc(hidden)]
    pub cluster: std::option::Option<std::string::String>,
    /// <p>The short name or full Amazon Resource Name (ARN) of the service that the task set exists in.</p>
    #[doc(hidden)]
    pub service: std::option::Option<std::string::String>,
    /// <p>The short name or full Amazon Resource Name (ARN) of the task set to set as the primary task set in the deployment.</p>
    #[doc(hidden)]
    pub primary_task_set: std::option::Option<std::string::String>,
}
impl UpdateServicePrimaryTaskSetInput {
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set exists in.</p>
    pub fn cluster(&self) -> std::option::Option<&str> {
        self.cluster.as_deref()
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the service that the task set exists in.</p>
    pub fn service(&self) -> std::option::Option<&str> {
        self.service.as_deref()
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the task set to set as the primary task set in the deployment.</p>
    pub fn primary_task_set(&self) -> std::option::Option<&str> {
        self.primary_task_set.as_deref()
    }
}
impl UpdateServicePrimaryTaskSetInput {
    /// Creates a new builder-style object to manufacture [`UpdateServicePrimaryTaskSetInput`](crate::operation::update_service_primary_task_set::UpdateServicePrimaryTaskSetInput).
    pub fn builder() -> crate::operation::update_service_primary_task_set::builders::UpdateServicePrimaryTaskSetInputBuilder{
        crate::operation::update_service_primary_task_set::builders::UpdateServicePrimaryTaskSetInputBuilder::default()
    }
}

/// A builder for [`UpdateServicePrimaryTaskSetInput`](crate::operation::update_service_primary_task_set::UpdateServicePrimaryTaskSetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateServicePrimaryTaskSetInputBuilder {
    pub(crate) cluster: std::option::Option<std::string::String>,
    pub(crate) service: std::option::Option<std::string::String>,
    pub(crate) primary_task_set: std::option::Option<std::string::String>,
}
impl UpdateServicePrimaryTaskSetInputBuilder {
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set exists in.</p>
    pub fn cluster(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster = Some(input.into());
        self
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set exists in.</p>
    pub fn set_cluster(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster = input;
        self
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the service that the task set exists in.</p>
    pub fn service(mut self, input: impl Into<std::string::String>) -> Self {
        self.service = Some(input.into());
        self
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the service that the task set exists in.</p>
    pub fn set_service(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.service = input;
        self
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the task set to set as the primary task set in the deployment.</p>
    pub fn primary_task_set(mut self, input: impl Into<std::string::String>) -> Self {
        self.primary_task_set = Some(input.into());
        self
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the task set to set as the primary task set in the deployment.</p>
    pub fn set_primary_task_set(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.primary_task_set = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateServicePrimaryTaskSetInput`](crate::operation::update_service_primary_task_set::UpdateServicePrimaryTaskSetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_service_primary_task_set::UpdateServicePrimaryTaskSetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_service_primary_task_set::UpdateServicePrimaryTaskSetInput {
                cluster: self.cluster,
                service: self.service,
                primary_task_set: self.primary_task_set,
            },
        )
    }
}
