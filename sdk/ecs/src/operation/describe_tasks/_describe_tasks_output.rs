// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeTasksOutput {
    /// <p>The list of tasks.</p>
    #[doc(hidden)]
    pub tasks: std::option::Option<std::vec::Vec<crate::types::Task>>,
    /// <p>Any failures associated with the call.</p>
    #[doc(hidden)]
    pub failures: std::option::Option<std::vec::Vec<crate::types::Failure>>,
    _request_id: Option<String>,
}
impl DescribeTasksOutput {
    /// <p>The list of tasks.</p>
    pub fn tasks(&self) -> std::option::Option<&[crate::types::Task]> {
        self.tasks.as_deref()
    }
    /// <p>Any failures associated with the call.</p>
    pub fn failures(&self) -> std::option::Option<&[crate::types::Failure]> {
        self.failures.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeTasksOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeTasksOutput {
    /// Creates a new builder-style object to manufacture [`DescribeTasksOutput`](crate::operation::describe_tasks::DescribeTasksOutput).
    pub fn builder() -> crate::operation::describe_tasks::builders::DescribeTasksOutputBuilder {
        crate::operation::describe_tasks::builders::DescribeTasksOutputBuilder::default()
    }
}

/// A builder for [`DescribeTasksOutput`](crate::operation::describe_tasks::DescribeTasksOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeTasksOutputBuilder {
    pub(crate) tasks: std::option::Option<std::vec::Vec<crate::types::Task>>,
    pub(crate) failures: std::option::Option<std::vec::Vec<crate::types::Failure>>,
    _request_id: Option<String>,
}
impl DescribeTasksOutputBuilder {
    /// Appends an item to `tasks`.
    ///
    /// To override the contents of this collection use [`set_tasks`](Self::set_tasks).
    ///
    /// <p>The list of tasks.</p>
    pub fn tasks(mut self, input: crate::types::Task) -> Self {
        let mut v = self.tasks.unwrap_or_default();
        v.push(input);
        self.tasks = Some(v);
        self
    }
    /// <p>The list of tasks.</p>
    pub fn set_tasks(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Task>>,
    ) -> Self {
        self.tasks = input;
        self
    }
    /// Appends an item to `failures`.
    ///
    /// To override the contents of this collection use [`set_failures`](Self::set_failures).
    ///
    /// <p>Any failures associated with the call.</p>
    pub fn failures(mut self, input: crate::types::Failure) -> Self {
        let mut v = self.failures.unwrap_or_default();
        v.push(input);
        self.failures = Some(v);
        self
    }
    /// <p>Any failures associated with the call.</p>
    pub fn set_failures(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Failure>>,
    ) -> Self {
        self.failures = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeTasksOutput`](crate::operation::describe_tasks::DescribeTasksOutput).
    pub fn build(self) -> crate::operation::describe_tasks::DescribeTasksOutput {
        crate::operation::describe_tasks::DescribeTasksOutput {
            tasks: self.tasks,
            failures: self.failures,
            _request_id: self._request_id,
        }
    }
}
