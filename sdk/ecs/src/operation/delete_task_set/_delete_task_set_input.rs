// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteTaskSetInput {
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set found in to delete.</p>
    #[doc(hidden)]
    pub cluster: std::option::Option<std::string::String>,
    /// <p>The short name or full Amazon Resource Name (ARN) of the service that hosts the task set to delete.</p>
    #[doc(hidden)]
    pub service: std::option::Option<std::string::String>,
    /// <p>The task set ID or full Amazon Resource Name (ARN) of the task set to delete.</p>
    #[doc(hidden)]
    pub task_set: std::option::Option<std::string::String>,
    /// <p>If <code>true</code>, you can delete a task set even if it hasn't been scaled down to zero.</p>
    #[doc(hidden)]
    pub force: std::option::Option<bool>,
}
impl DeleteTaskSetInput {
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set found in to delete.</p>
    pub fn cluster(&self) -> std::option::Option<&str> {
        self.cluster.as_deref()
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the service that hosts the task set to delete.</p>
    pub fn service(&self) -> std::option::Option<&str> {
        self.service.as_deref()
    }
    /// <p>The task set ID or full Amazon Resource Name (ARN) of the task set to delete.</p>
    pub fn task_set(&self) -> std::option::Option<&str> {
        self.task_set.as_deref()
    }
    /// <p>If <code>true</code>, you can delete a task set even if it hasn't been scaled down to zero.</p>
    pub fn force(&self) -> std::option::Option<bool> {
        self.force
    }
}
impl DeleteTaskSetInput {
    /// Creates a new builder-style object to manufacture [`DeleteTaskSetInput`](crate::operation::delete_task_set::DeleteTaskSetInput).
    pub fn builder() -> crate::operation::delete_task_set::builders::DeleteTaskSetInputBuilder {
        crate::operation::delete_task_set::builders::DeleteTaskSetInputBuilder::default()
    }
}

/// A builder for [`DeleteTaskSetInput`](crate::operation::delete_task_set::DeleteTaskSetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteTaskSetInputBuilder {
    pub(crate) cluster: std::option::Option<std::string::String>,
    pub(crate) service: std::option::Option<std::string::String>,
    pub(crate) task_set: std::option::Option<std::string::String>,
    pub(crate) force: std::option::Option<bool>,
}
impl DeleteTaskSetInputBuilder {
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set found in to delete.</p>
    pub fn cluster(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster = Some(input.into());
        self
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service that the task set found in to delete.</p>
    pub fn set_cluster(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster = input;
        self
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the service that hosts the task set to delete.</p>
    pub fn service(mut self, input: impl Into<std::string::String>) -> Self {
        self.service = Some(input.into());
        self
    }
    /// <p>The short name or full Amazon Resource Name (ARN) of the service that hosts the task set to delete.</p>
    pub fn set_service(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.service = input;
        self
    }
    /// <p>The task set ID or full Amazon Resource Name (ARN) of the task set to delete.</p>
    pub fn task_set(mut self, input: impl Into<std::string::String>) -> Self {
        self.task_set = Some(input.into());
        self
    }
    /// <p>The task set ID or full Amazon Resource Name (ARN) of the task set to delete.</p>
    pub fn set_task_set(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.task_set = input;
        self
    }
    /// <p>If <code>true</code>, you can delete a task set even if it hasn't been scaled down to zero.</p>
    pub fn force(mut self, input: bool) -> Self {
        self.force = Some(input);
        self
    }
    /// <p>If <code>true</code>, you can delete a task set even if it hasn't been scaled down to zero.</p>
    pub fn set_force(mut self, input: std::option::Option<bool>) -> Self {
        self.force = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteTaskSetInput`](crate::operation::delete_task_set::DeleteTaskSetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_task_set::DeleteTaskSetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_task_set::DeleteTaskSetInput {
            cluster: self.cluster,
            service: self.service,
            task_set: self.task_set,
            force: self.force,
        })
    }
}
