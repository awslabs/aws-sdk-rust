// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeTaskDefinitionInput {
    /// <p>The <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code> and <code>revision</code> (<code>family:revision</code>) for a specific revision in the family, or full Amazon Resource Name (ARN) of the task definition to describe.</p>
    #[doc(hidden)]
    pub task_definition: std::option::Option<std::string::String>,
    /// <p>Determines whether to see the resource tags for the task definition. If <code>TAGS</code> is specified, the tags are included in the response. If this field is omitted, tags aren't included in the response.</p>
    #[doc(hidden)]
    pub include: std::option::Option<std::vec::Vec<crate::types::TaskDefinitionField>>,
}
impl DescribeTaskDefinitionInput {
    /// <p>The <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code> and <code>revision</code> (<code>family:revision</code>) for a specific revision in the family, or full Amazon Resource Name (ARN) of the task definition to describe.</p>
    pub fn task_definition(&self) -> std::option::Option<&str> {
        self.task_definition.as_deref()
    }
    /// <p>Determines whether to see the resource tags for the task definition. If <code>TAGS</code> is specified, the tags are included in the response. If this field is omitted, tags aren't included in the response.</p>
    pub fn include(&self) -> std::option::Option<&[crate::types::TaskDefinitionField]> {
        self.include.as_deref()
    }
}
impl DescribeTaskDefinitionInput {
    /// Creates a new builder-style object to manufacture [`DescribeTaskDefinitionInput`](crate::operation::describe_task_definition::DescribeTaskDefinitionInput).
    pub fn builder(
    ) -> crate::operation::describe_task_definition::builders::DescribeTaskDefinitionInputBuilder
    {
        crate::operation::describe_task_definition::builders::DescribeTaskDefinitionInputBuilder::default()
    }
}

/// A builder for [`DescribeTaskDefinitionInput`](crate::operation::describe_task_definition::DescribeTaskDefinitionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeTaskDefinitionInputBuilder {
    pub(crate) task_definition: std::option::Option<std::string::String>,
    pub(crate) include: std::option::Option<std::vec::Vec<crate::types::TaskDefinitionField>>,
}
impl DescribeTaskDefinitionInputBuilder {
    /// <p>The <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code> and <code>revision</code> (<code>family:revision</code>) for a specific revision in the family, or full Amazon Resource Name (ARN) of the task definition to describe.</p>
    pub fn task_definition(mut self, input: impl Into<std::string::String>) -> Self {
        self.task_definition = Some(input.into());
        self
    }
    /// <p>The <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code> and <code>revision</code> (<code>family:revision</code>) for a specific revision in the family, or full Amazon Resource Name (ARN) of the task definition to describe.</p>
    pub fn set_task_definition(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.task_definition = input;
        self
    }
    /// Appends an item to `include`.
    ///
    /// To override the contents of this collection use [`set_include`](Self::set_include).
    ///
    /// <p>Determines whether to see the resource tags for the task definition. If <code>TAGS</code> is specified, the tags are included in the response. If this field is omitted, tags aren't included in the response.</p>
    pub fn include(mut self, input: crate::types::TaskDefinitionField) -> Self {
        let mut v = self.include.unwrap_or_default();
        v.push(input);
        self.include = Some(v);
        self
    }
    /// <p>Determines whether to see the resource tags for the task definition. If <code>TAGS</code> is specified, the tags are included in the response. If this field is omitted, tags aren't included in the response.</p>
    pub fn set_include(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TaskDefinitionField>>,
    ) -> Self {
        self.include = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeTaskDefinitionInput`](crate::operation::describe_task_definition::DescribeTaskDefinitionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_task_definition::DescribeTaskDefinitionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_task_definition::DescribeTaskDefinitionInput {
                task_definition: self.task_definition,
                include: self.include,
            },
        )
    }
}
