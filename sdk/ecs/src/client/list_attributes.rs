// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAttributes`](crate::client::fluent_builders::ListAttributes) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAttributes::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster(impl Into<String>)`](crate::client::fluent_builders::ListAttributes::cluster) / [`set_cluster(Option<String>)`](crate::client::fluent_builders::ListAttributes::set_cluster): <p>The short name or full Amazon Resource Name (ARN) of the cluster to list attributes. If you do not specify a cluster, the default cluster is assumed.</p>
    ///   - [`target_type(TargetType)`](crate::client::fluent_builders::ListAttributes::target_type) / [`set_target_type(Option<TargetType>)`](crate::client::fluent_builders::ListAttributes::set_target_type): <p>The type of the target to list attributes with.</p>
    ///   - [`attribute_name(impl Into<String>)`](crate::client::fluent_builders::ListAttributes::attribute_name) / [`set_attribute_name(Option<String>)`](crate::client::fluent_builders::ListAttributes::set_attribute_name): <p>The name of the attribute to filter the results with. </p>
    ///   - [`attribute_value(impl Into<String>)`](crate::client::fluent_builders::ListAttributes::attribute_value) / [`set_attribute_value(Option<String>)`](crate::client::fluent_builders::ListAttributes::set_attribute_value): <p>The value of the attribute to filter results with. You must also specify an attribute name to use this parameter.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAttributes::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAttributes::set_next_token): <p>The <code>nextToken</code> value returned from a <code>ListAttributes</code> request indicating that more results are available to fulfill the request and further calls are needed. If <code>maxResults</code> was provided, it's possible the number of results to be fewer than <code>maxResults</code>.</p> <note>   <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>  </note>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAttributes::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAttributes::set_max_results): <p>The maximum number of cluster results that <code>ListAttributes</code> returned in paginated output. When this parameter is used, <code>ListAttributes</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListAttributes</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>ListAttributes</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>
    /// - On success, responds with [`ListAttributesOutput`](crate::output::ListAttributesOutput) with field(s):
    ///   - [`attributes(Option<Vec<Attribute>>)`](crate::output::ListAttributesOutput::attributes): <p>A list of attribute objects that meet the criteria of the request.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAttributesOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>ListAttributes</code> request. When the results of a <code>ListAttributes</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListAttributesError>`](crate::error::ListAttributesError)
    pub fn list_attributes(&self) -> crate::client::fluent_builders::ListAttributes {
        crate::client::fluent_builders::ListAttributes::new(self.handle.clone())
    }
}
