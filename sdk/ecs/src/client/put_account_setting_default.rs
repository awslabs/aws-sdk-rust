// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutAccountSettingDefault`](crate::client::fluent_builders::PutAccountSettingDefault) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(SettingName)`](crate::client::fluent_builders::PutAccountSettingDefault::name) / [`set_name(Option<SettingName>)`](crate::client::fluent_builders::PutAccountSettingDefault::set_name): <p>The resource name for which to modify the account setting. If <code>serviceLongArnFormat</code> is specified, the ARN for your Amazon ECS services is affected. If <code>taskLongArnFormat</code> is specified, the ARN and resource ID for your Amazon ECS tasks is affected. If <code>containerInstanceLongArnFormat</code> is specified, the ARN and resource ID for your Amazon ECS container instances is affected. If <code>awsvpcTrunking</code> is specified, the ENI limit for your Amazon ECS container instances is affected. If <code>containerInsights</code> is specified, the default setting for CloudWatch Container Insights for your clusters is affected.</p>  <p>Fargate is transitioning from task count-based quotas to vCPU-based quotas. You can set the name to <code>fargateVCPULimit</code> to opt in or opt out of the vCPU-based quotas. For information about the opt in timeline, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#fargate-quota-timeline">Fargate vCPU-based quotas timeline</a> in the <i>Amazon ECS Developer Guide</i>.</p>
    ///   - [`value(impl Into<String>)`](crate::client::fluent_builders::PutAccountSettingDefault::value) / [`set_value(Option<String>)`](crate::client::fluent_builders::PutAccountSettingDefault::set_value): <p>The account setting value for the specified principal ARN. Accepted values are <code>enabled</code> and <code>disabled</code>.</p>
    /// - On success, responds with [`PutAccountSettingDefaultOutput`](crate::output::PutAccountSettingDefaultOutput) with field(s):
    ///   - [`setting(Option<Setting>)`](crate::output::PutAccountSettingDefaultOutput::setting): <p>The current setting for a resource.</p>
    /// - On failure, responds with [`SdkError<PutAccountSettingDefaultError>`](crate::error::PutAccountSettingDefaultError)
    pub fn put_account_setting_default(
        &self,
    ) -> crate::client::fluent_builders::PutAccountSettingDefault {
        crate::client::fluent_builders::PutAccountSettingDefault::new(self.handle.clone())
    }
}
