// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutAccountSettingDefault`](crate::operation::put_account_setting_default::builders::PutAccountSettingDefaultFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(SettingName)`](crate::operation::put_account_setting_default::builders::PutAccountSettingDefaultFluentBuilder::name) / [`set_name(Option<SettingName>)`](crate::operation::put_account_setting_default::builders::PutAccountSettingDefaultFluentBuilder::set_name):<br>required: **true**<br><p>The resource name for which to modify the account setting. If you specify <code>serviceLongArnFormat</code>, the ARN for your Amazon ECS services is affected. If you specify <code>taskLongArnFormat</code>, the ARN and resource ID for your Amazon ECS tasks is affected. If you specify <code>containerInstanceLongArnFormat</code>, the ARN and resource ID for your Amazon ECS container instances is affected. If you specify <code>awsvpcTrunking</code>, the ENI limit for your Amazon ECS container instances is affected. If you specify <code>containerInsights</code>, the default setting for Amazon Web Services CloudWatch Container Insights for your clusters is affected. If you specify <code>tagResourceAuthorization</code>, the opt-in option for tagging resources on creation is affected. For information about the opt-in timeline, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#tag-resources">Tagging authorization timeline</a> in the <i>Amazon ECS Developer Guide</i>. If you specify <code>fargateTaskRetirementWaitPeriod</code>, the default wait time to retire a Fargate task due to required maintenance is affected.</p>  <p>When you specify <code>fargateFIPSMode</code> for the <code>name</code> and <code>enabled</code> for the <code>value</code>, Fargate uses FIPS-140 compliant cryptographic algorithms on your tasks. For more information about FIPS-140 compliance with Fargate, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-fips-compliance.html"> Amazon Web Services Fargate Federal Information Processing Standard (FIPS) 140-2 compliance</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>  <p>When Amazon Web Services determines that a security or infrastructure update is needed for an Amazon ECS task hosted on Fargate, the tasks need to be stopped and new tasks launched to replace them. Use <code>fargateTaskRetirementWaitPeriod</code> to set the wait time to retire a Fargate task to the default. For information about the Fargate tasks maintenance, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-maintenance.html">Amazon Web Services Fargate task maintenance</a> in the <i>Amazon ECS Developer Guide</i>.</p><br>
    ///   - [`value(impl Into<String>)`](crate::operation::put_account_setting_default::builders::PutAccountSettingDefaultFluentBuilder::value) / [`set_value(Option<String>)`](crate::operation::put_account_setting_default::builders::PutAccountSettingDefaultFluentBuilder::set_value):<br>required: **true**<br><p>The account setting value for the specified principal ARN. Accepted values are <code>enabled</code>, <code>disabled</code>, <code>on</code>, and <code>off</code>.</p>  <p>When you specify <code>fargateTaskRetirementWaitPeriod</code> for the <code>name</code>, the following are the valid values:</p>  <ul>   <li> <p> <code>0</code> - Amazon Web Services sends the notification, and immediately retires the affected tasks.</p> </li>   <li> <p> <code>7</code> - Amazon Web Services sends the notification, and waits 7 calendar days to retire the tasks.</p> </li>   <li> <p> <code>14</code> - Amazon Web Services sends the notification, and waits 14 calendar days to retire the tasks.</p> </li>  </ul><br>
    /// - On success, responds with [`PutAccountSettingDefaultOutput`](crate::operation::put_account_setting_default::PutAccountSettingDefaultOutput) with field(s):
    ///   - [`setting(Option<Setting>)`](crate::operation::put_account_setting_default::PutAccountSettingDefaultOutput::setting): <p>The current setting for a resource.</p>
    /// - On failure, responds with [`SdkError<PutAccountSettingDefaultError>`](crate::operation::put_account_setting_default::PutAccountSettingDefaultError)
    pub fn put_account_setting_default(&self) -> crate::operation::put_account_setting_default::builders::PutAccountSettingDefaultFluentBuilder {
        crate::operation::put_account_setting_default::builders::PutAccountSettingDefaultFluentBuilder::new(self.handle.clone())
    }
}
