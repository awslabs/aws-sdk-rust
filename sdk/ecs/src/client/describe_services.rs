// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeServices`](crate::client::fluent_builders::DescribeServices) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster(impl Into<String>)`](crate::client::fluent_builders::DescribeServices::cluster) / [`set_cluster(Option<String>)`](crate::client::fluent_builders::DescribeServices::set_cluster): <p>The short name or full Amazon Resource Name (ARN)the cluster that hosts the service to describe. If you do not specify a cluster, the default cluster is assumed. This parameter is required if the service or services you are describing were launched in any cluster other than the default cluster.</p>
    ///   - [`services(Vec<String>)`](crate::client::fluent_builders::DescribeServices::services) / [`set_services(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeServices::set_services): <p>A list of services to describe. You may specify up to 10 services to describe in a single operation.</p>
    ///   - [`include(Vec<ServiceField>)`](crate::client::fluent_builders::DescribeServices::include) / [`set_include(Option<Vec<ServiceField>>)`](crate::client::fluent_builders::DescribeServices::set_include): <p>Determines whether you want to see the resource tags for the service. If <code>TAGS</code> is specified, the tags are included in the response. If this field is omitted, tags aren't included in the response.</p>
    /// - On success, responds with [`DescribeServicesOutput`](crate::output::DescribeServicesOutput) with field(s):
    ///   - [`services(Option<Vec<Service>>)`](crate::output::DescribeServicesOutput::services): <p>The list of services described.</p>
    ///   - [`failures(Option<Vec<Failure>>)`](crate::output::DescribeServicesOutput::failures): <p>Any failures associated with the call.</p>
    /// - On failure, responds with [`SdkError<DescribeServicesError>`](crate::error::DescribeServicesError)
    pub fn describe_services(&self) -> crate::client::fluent_builders::DescribeServices {
        crate::client::fluent_builders::DescribeServices::new(self.handle.clone())
    }
}
