// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTaskDefinitions`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`family_prefix(impl Into<String>)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::family_prefix) / [`set_family_prefix(Option<String>)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::set_family_prefix): <p>The full family name to filter the <code>ListTaskDefinitions</code> results with. Specifying a <code>familyPrefix</code> limits the listed task definitions to task definition revisions that belong to that family.</p>
    ///   - [`status(TaskDefinitionStatus)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::status) / [`set_status(Option<TaskDefinitionStatus>)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::set_status): <p>The task definition status to filter the <code>ListTaskDefinitions</code> results with. By default, only <code>ACTIVE</code> task definitions are listed. By setting this parameter to <code>INACTIVE</code>, you can view task definitions that are <code>INACTIVE</code> as long as an active task or service still references them. If you paginate the resulting output, be sure to keep the <code>status</code> value constant in each subsequent request.</p>
    ///   - [`sort(SortOrder)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::sort) / [`set_sort(Option<SortOrder>)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::set_sort): <p>The order to sort the results in. Valid values are <code>ASC</code> and <code>DESC</code>. By default, (<code>ASC</code>) task definitions are listed lexicographically by family name and in ascending numerical order by revision so that the newest task definitions in a family are listed last. Setting this parameter to <code>DESC</code> reverses the sort order on family name and revision. This is so that the newest task definitions in a family are listed first.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::set_next_token): <p>The <code>nextToken</code> value returned from a <code>ListTaskDefinitions</code> request indicating that more results are available to fulfill the request and further calls will be needed. If <code>maxResults</code> was provided, it is possible the number of results to be fewer than <code>maxResults</code>.</p> <note>   <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>  </note>
    ///   - [`max_results(i32)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::set_max_results): <p>The maximum number of task definition results that <code>ListTaskDefinitions</code> returned in paginated output. When this parameter is used, <code>ListTaskDefinitions</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListTaskDefinitions</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>ListTaskDefinitions</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>
    /// - On success, responds with [`ListTaskDefinitionsOutput`](crate::operation::list_task_definitions::ListTaskDefinitionsOutput) with field(s):
    ///   - [`task_definition_arns(Option<Vec<String>>)`](crate::operation::list_task_definitions::ListTaskDefinitionsOutput::task_definition_arns): <p>The list of task definition Amazon Resource Name (ARN) entries for the <code>ListTaskDefinitions</code> request.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_task_definitions::ListTaskDefinitionsOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>ListTaskDefinitions</code> request. When the results of a <code>ListTaskDefinitions</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListTaskDefinitionsError>`](crate::operation::list_task_definitions::ListTaskDefinitionsError)
    pub fn list_task_definitions(
        &self,
    ) -> crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder {
        crate::operation::list_task_definitions::builders::ListTaskDefinitionsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
