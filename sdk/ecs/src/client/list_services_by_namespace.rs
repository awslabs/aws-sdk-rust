// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListServicesByNamespace`](crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`namespace(impl Into<String>)`](crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder::namespace) / [`set_namespace(Option<String>)`](crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder::set_namespace): <p>The namespace name or full Amazon Resource Name (ARN) of the Cloud Map namespace to list the services in.</p>  <p>Tasks that run in a namespace can use short names to connect to services in the namespace. Tasks can connect to services across all of the clusters in the namespace. Tasks connect through a managed proxy container that collects logs and metrics for increased visibility. Only the tasks that Amazon ECS services create are supported with Service Connect. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html">Service Connect</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder::set_next_token): <p>The <code>nextToken</code> value that's returned from a <code>ListServicesByNamespace</code> request. It indicates that more results are available to fulfill the request and further calls are needed. If <code>maxResults</code> is returned, it is possible the number of results is less than <code>maxResults</code>.</p>
    ///   - [`max_results(i32)`](crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder::set_max_results): <p>The maximum number of service results that <code>ListServicesByNamespace</code> returns in paginated output. When this parameter is used, <code>ListServicesByNamespace</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListServicesByNamespace</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter isn't used, then <code>ListServicesByNamespace</code> returns up to 10 results and a <code>nextToken</code> value if applicable.</p>
    /// - On success, responds with [`ListServicesByNamespaceOutput`](crate::operation::list_services_by_namespace::ListServicesByNamespaceOutput) with field(s):
    ///   - [`service_arns(Option<Vec<String>>)`](crate::operation::list_services_by_namespace::ListServicesByNamespaceOutput::service_arns): <p>The list of full ARN entries for each service that's associated with the specified namespace.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_services_by_namespace::ListServicesByNamespaceOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>ListServicesByNamespace</code> request. When the results of a <code>ListServicesByNamespace</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. When there are no more results to return, this value is <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListServicesByNamespaceError>`](crate::operation::list_services_by_namespace::ListServicesByNamespaceError)
    pub fn list_services_by_namespace(
        &self,
    ) -> crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder
    {
        crate::operation::list_services_by_namespace::builders::ListServicesByNamespaceFluentBuilder::new(self.handle.clone())
    }
}
