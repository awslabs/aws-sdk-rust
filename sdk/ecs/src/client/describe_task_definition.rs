// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeTaskDefinition`](crate::operation::describe_task_definition::builders::DescribeTaskDefinitionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`task_definition(impl Into<String>)`](crate::operation::describe_task_definition::builders::DescribeTaskDefinitionFluentBuilder::task_definition) / [`set_task_definition(Option<String>)`](crate::operation::describe_task_definition::builders::DescribeTaskDefinitionFluentBuilder::set_task_definition): <p>The <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code> and <code>revision</code> (<code>family:revision</code>) for a specific revision in the family, or full Amazon Resource Name (ARN) of the task definition to describe.</p>
    ///   - [`include(Vec<TaskDefinitionField>)`](crate::operation::describe_task_definition::builders::DescribeTaskDefinitionFluentBuilder::include) / [`set_include(Option<Vec<TaskDefinitionField>>)`](crate::operation::describe_task_definition::builders::DescribeTaskDefinitionFluentBuilder::set_include): <p>Determines whether to see the resource tags for the task definition. If <code>TAGS</code> is specified, the tags are included in the response. If this field is omitted, tags aren't included in the response.</p>
    /// - On success, responds with [`DescribeTaskDefinitionOutput`](crate::operation::describe_task_definition::DescribeTaskDefinitionOutput) with field(s):
    ///   - [`task_definition(Option<TaskDefinition>)`](crate::operation::describe_task_definition::DescribeTaskDefinitionOutput::task_definition): <p>The full task definition description.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::operation::describe_task_definition::DescribeTaskDefinitionOutput::tags): <p>The metadata that's applied to the task definition to help you categorize and organize them. Each tag consists of a key and an optional value. You define both.</p>  <p>The following basic restrictions apply to tags:</p>  <ul>   <li> <p>Maximum number of tags per resource - 50</p> </li>   <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li>   <li> <p>Maximum key length - 128 Unicode characters in UTF-8</p> </li>   <li> <p>Maximum value length - 256 Unicode characters in UTF-8</p> </li>   <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li>   <li> <p>Tag keys and values are case-sensitive.</p> </li>   <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<DescribeTaskDefinitionError>`](crate::operation::describe_task_definition::DescribeTaskDefinitionError)
    pub fn describe_task_definition(
        &self,
    ) -> crate::operation::describe_task_definition::builders::DescribeTaskDefinitionFluentBuilder
    {
        crate::operation::describe_task_definition::builders::DescribeTaskDefinitionFluentBuilder::new(self.handle.clone())
    }
}
