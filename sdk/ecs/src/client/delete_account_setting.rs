// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteAccountSetting`](crate::client::fluent_builders::DeleteAccountSetting) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(SettingName)`](crate::client::fluent_builders::DeleteAccountSetting::name) / [`set_name(Option<SettingName>)`](crate::client::fluent_builders::DeleteAccountSetting::set_name): <p>The resource name to disable the account setting for. If <code>serviceLongArnFormat</code> is specified, the ARN for your Amazon ECS services is affected. If <code>taskLongArnFormat</code> is specified, the ARN and resource ID for your Amazon ECS tasks is affected. If <code>containerInstanceLongArnFormat</code> is specified, the ARN and resource ID for your Amazon ECS container instances is affected. If <code>awsvpcTrunking</code> is specified, the ENI limit for your Amazon ECS container instances is affected.</p>
    ///   - [`principal_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteAccountSetting::principal_arn) / [`set_principal_arn(Option<String>)`](crate::client::fluent_builders::DeleteAccountSetting::set_principal_arn): <p>The Amazon Resource Name (ARN) of the principal. It can be an IAM user, IAM role, or the root user. If you specify the root user, it disables the account setting for all IAM users, IAM roles, and the root user of the account unless an IAM user or role explicitly overrides these settings. If this field is omitted, the setting is changed only for the authenticated user.</p>
    /// - On success, responds with [`DeleteAccountSettingOutput`](crate::output::DeleteAccountSettingOutput) with field(s):
    ///   - [`setting(Option<Setting>)`](crate::output::DeleteAccountSettingOutput::setting): <p>The account setting for the specified principal ARN.</p>
    /// - On failure, responds with [`SdkError<DeleteAccountSettingError>`](crate::error::DeleteAccountSettingError)
    pub fn delete_account_setting(&self) -> crate::client::fluent_builders::DeleteAccountSetting {
        crate::client::fluent_builders::DeleteAccountSetting::new(self.handle.clone())
    }
}
