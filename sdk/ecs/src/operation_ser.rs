// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_operation_create_capacity_provider(
    input: &crate::input::CreateCapacityProviderInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_create_capacity_provider_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_create_cluster(
    input: &crate::input::CreateClusterInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_create_cluster_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_create_service(
    input: &crate::input::CreateServiceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_create_service_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_create_task_set(
    input: &crate::input::CreateTaskSetInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_create_task_set_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_delete_account_setting(
    input: &crate::input::DeleteAccountSettingInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_delete_account_setting_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_delete_attributes(
    input: &crate::input::DeleteAttributesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_delete_attributes_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_delete_capacity_provider(
    input: &crate::input::DeleteCapacityProviderInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_delete_capacity_provider_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_delete_cluster(
    input: &crate::input::DeleteClusterInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_delete_cluster_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_delete_service(
    input: &crate::input::DeleteServiceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_delete_service_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_delete_task_set(
    input: &crate::input::DeleteTaskSetInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_delete_task_set_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_deregister_container_instance(
    input: &crate::input::DeregisterContainerInstanceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_deregister_container_instance_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_deregister_task_definition(
    input: &crate::input::DeregisterTaskDefinitionInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_deregister_task_definition_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_describe_capacity_providers(
    input: &crate::input::DescribeCapacityProvidersInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_describe_capacity_providers_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_describe_clusters(
    input: &crate::input::DescribeClustersInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_describe_clusters_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_describe_container_instances(
    input: &crate::input::DescribeContainerInstancesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_describe_container_instances_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_describe_services(
    input: &crate::input::DescribeServicesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_describe_services_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_describe_task_definition(
    input: &crate::input::DescribeTaskDefinitionInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_describe_task_definition_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_describe_tasks(
    input: &crate::input::DescribeTasksInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_describe_tasks_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_describe_task_sets(
    input: &crate::input::DescribeTaskSetsInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_describe_task_sets_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_discover_poll_endpoint(
    input: &crate::input::DiscoverPollEndpointInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_discover_poll_endpoint_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_execute_command(
    input: &crate::input::ExecuteCommandInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_execute_command_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_account_settings(
    input: &crate::input::ListAccountSettingsInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_account_settings_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_attributes(
    input: &crate::input::ListAttributesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_attributes_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_clusters(
    input: &crate::input::ListClustersInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_clusters_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_container_instances(
    input: &crate::input::ListContainerInstancesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_container_instances_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_services(
    input: &crate::input::ListServicesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_services_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_tags_for_resource(
    input: &crate::input::ListTagsForResourceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_tags_for_resource_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_task_definition_families(
    input: &crate::input::ListTaskDefinitionFamiliesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_task_definition_families_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_task_definitions(
    input: &crate::input::ListTaskDefinitionsInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_task_definitions_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_tasks(
    input: &crate::input::ListTasksInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_tasks_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_put_account_setting(
    input: &crate::input::PutAccountSettingInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_put_account_setting_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_put_account_setting_default(
    input: &crate::input::PutAccountSettingDefaultInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_put_account_setting_default_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_put_attributes(
    input: &crate::input::PutAttributesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_put_attributes_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_put_cluster_capacity_providers(
    input: &crate::input::PutClusterCapacityProvidersInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_put_cluster_capacity_providers_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_register_container_instance(
    input: &crate::input::RegisterContainerInstanceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_register_container_instance_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_register_task_definition(
    input: &crate::input::RegisterTaskDefinitionInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_register_task_definition_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_run_task(
    input: &crate::input::RunTaskInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_run_task_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_start_task(
    input: &crate::input::StartTaskInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_start_task_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_stop_task(
    input: &crate::input::StopTaskInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_stop_task_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_submit_attachment_state_changes(
    input: &crate::input::SubmitAttachmentStateChangesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_submit_attachment_state_changes_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_submit_container_state_change(
    input: &crate::input::SubmitContainerStateChangeInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_submit_container_state_change_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_submit_task_state_change(
    input: &crate::input::SubmitTaskStateChangeInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_submit_task_state_change_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_tag_resource(
    input: &crate::input::TagResourceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_tag_resource_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_untag_resource(
    input: &crate::input::UntagResourceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_untag_resource_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_capacity_provider(
    input: &crate::input::UpdateCapacityProviderInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_capacity_provider_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_cluster(
    input: &crate::input::UpdateClusterInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_cluster_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_cluster_settings(
    input: &crate::input::UpdateClusterSettingsInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_cluster_settings_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_container_agent(
    input: &crate::input::UpdateContainerAgentInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_container_agent_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_container_instances_state(
    input: &crate::input::UpdateContainerInstancesStateInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_container_instances_state_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_service(
    input: &crate::input::UpdateServiceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_service_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_service_primary_task_set(
    input: &crate::input::UpdateServicePrimaryTaskSetInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_service_primary_task_set_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_task_set(
    input: &crate::input::UpdateTaskSetInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_task_set_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}
