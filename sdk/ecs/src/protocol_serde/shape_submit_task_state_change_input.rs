// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_submit_task_state_change_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::submit_task_state_change::SubmitTaskStateChangeInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.cluster {
        object.key("cluster").string(var_1.as_str());
    }
    if let Some(var_2) = &input.task {
        object.key("task").string(var_2.as_str());
    }
    if let Some(var_3) = &input.status {
        object.key("status").string(var_3.as_str());
    }
    if let Some(var_4) = &input.reason {
        object.key("reason").string(var_4.as_str());
    }
    if let Some(var_5) = &input.containers {
        let mut array_6 = object.key("containers").start_array();
        for item_7 in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_8 = array_6.value().start_object();
                crate::protocol_serde::shape_container_state_change::ser_container_state_change(
                    &mut object_8,
                    item_7,
                )?;
                object_8.finish();
            }
        }
        array_6.finish();
    }
    if let Some(var_9) = &input.attachments {
        let mut array_10 = object.key("attachments").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_attachment_state_change::ser_attachment_state_change(
                    &mut object_12,
                    item_11,
                )?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    if let Some(var_13) = &input.managed_agents {
        let mut array_14 = object.key("managedAgents").start_array();
        for item_15 in var_13 {
            {
                #[allow(unused_mut)]
                let mut object_16 = array_14.value().start_object();
                crate::protocol_serde::shape_managed_agent_state_change::ser_managed_agent_state_change(&mut object_16, item_15)?;
                object_16.finish();
            }
        }
        array_14.finish();
    }
    if let Some(var_17) = &input.pull_started_at {
        object
            .key("pullStartedAt")
            .date_time(var_17, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_18) = &input.pull_stopped_at {
        object
            .key("pullStoppedAt")
            .date_time(var_18, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_19) = &input.execution_stopped_at {
        object
            .key("executionStoppedAt")
            .date_time(var_19, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    Ok(())
}
