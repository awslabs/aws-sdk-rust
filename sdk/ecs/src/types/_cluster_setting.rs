// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The settings to use when creating a cluster. This parameter is used to turn on CloudWatch Container Insights for a cluster.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClusterSetting {
    /// <p>The name of the cluster setting. The only supported value is <code>containerInsights</code>.</p>
    #[doc(hidden)]
    pub name: std::option::Option<crate::types::ClusterSettingName>,
    /// <p>The value to set for the cluster setting. The supported values are <code>enabled</code> and <code>disabled</code>. If <code>enabled</code> is specified, CloudWatch Container Insights will be enabled for the cluster, otherwise it will be disabled unless the <code>containerInsights</code> account setting is enabled. If a cluster value is specified, it will override the <code>containerInsights</code> value set with <code>PutAccountSetting</code> or <code>PutAccountSettingDefault</code>.</p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
}
impl ClusterSetting {
    /// <p>The name of the cluster setting. The only supported value is <code>containerInsights</code>.</p>
    pub fn name(&self) -> std::option::Option<&crate::types::ClusterSettingName> {
        self.name.as_ref()
    }
    /// <p>The value to set for the cluster setting. The supported values are <code>enabled</code> and <code>disabled</code>. If <code>enabled</code> is specified, CloudWatch Container Insights will be enabled for the cluster, otherwise it will be disabled unless the <code>containerInsights</code> account setting is enabled. If a cluster value is specified, it will override the <code>containerInsights</code> value set with <code>PutAccountSetting</code> or <code>PutAccountSettingDefault</code>.</p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
}
impl ClusterSetting {
    /// Creates a new builder-style object to manufacture [`ClusterSetting`](crate::types::ClusterSetting).
    pub fn builder() -> crate::types::builders::ClusterSettingBuilder {
        crate::types::builders::ClusterSettingBuilder::default()
    }
}

/// A builder for [`ClusterSetting`](crate::types::ClusterSetting).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClusterSettingBuilder {
    pub(crate) name: std::option::Option<crate::types::ClusterSettingName>,
    pub(crate) value: std::option::Option<std::string::String>,
}
impl ClusterSettingBuilder {
    /// <p>The name of the cluster setting. The only supported value is <code>containerInsights</code>.</p>
    pub fn name(mut self, input: crate::types::ClusterSettingName) -> Self {
        self.name = Some(input);
        self
    }
    /// <p>The name of the cluster setting. The only supported value is <code>containerInsights</code>.</p>
    pub fn set_name(
        mut self,
        input: std::option::Option<crate::types::ClusterSettingName>,
    ) -> Self {
        self.name = input;
        self
    }
    /// <p>The value to set for the cluster setting. The supported values are <code>enabled</code> and <code>disabled</code>. If <code>enabled</code> is specified, CloudWatch Container Insights will be enabled for the cluster, otherwise it will be disabled unless the <code>containerInsights</code> account setting is enabled. If a cluster value is specified, it will override the <code>containerInsights</code> value set with <code>PutAccountSetting</code> or <code>PutAccountSettingDefault</code>.</p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value to set for the cluster setting. The supported values are <code>enabled</code> and <code>disabled</code>. If <code>enabled</code> is specified, CloudWatch Container Insights will be enabled for the cluster, otherwise it will be disabled unless the <code>containerInsights</code> account setting is enabled. If a cluster value is specified, it will override the <code>containerInsights</code> value set with <code>PutAccountSetting</code> or <code>PutAccountSettingDefault</code>.</p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`ClusterSetting`](crate::types::ClusterSetting).
    pub fn build(self) -> crate::types::ClusterSetting {
        crate::types::ClusterSetting {
            name: self.name,
            value: self.value,
        }
    }
}
