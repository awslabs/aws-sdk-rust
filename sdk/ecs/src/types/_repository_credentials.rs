// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The repository credentials for private registry authentication.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RepositoryCredentials {
    /// <p>The Amazon Resource Name (ARN) of the secret containing the private repository credentials.</p> <note>
    /// <p>When you use the Amazon ECS API, CLI, or Amazon Web Services SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the Amazon Web Services Management Console, you must specify the full ARN of the secret.</p>
    /// </note>
    #[doc(hidden)]
    pub credentials_parameter: std::option::Option<std::string::String>,
}
impl RepositoryCredentials {
    /// <p>The Amazon Resource Name (ARN) of the secret containing the private repository credentials.</p> <note>
    /// <p>When you use the Amazon ECS API, CLI, or Amazon Web Services SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the Amazon Web Services Management Console, you must specify the full ARN of the secret.</p>
    /// </note>
    pub fn credentials_parameter(&self) -> std::option::Option<&str> {
        self.credentials_parameter.as_deref()
    }
}
impl RepositoryCredentials {
    /// Creates a new builder-style object to manufacture [`RepositoryCredentials`](crate::types::RepositoryCredentials).
    pub fn builder() -> crate::types::builders::RepositoryCredentialsBuilder {
        crate::types::builders::RepositoryCredentialsBuilder::default()
    }
}

/// A builder for [`RepositoryCredentials`](crate::types::RepositoryCredentials).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RepositoryCredentialsBuilder {
    pub(crate) credentials_parameter: std::option::Option<std::string::String>,
}
impl RepositoryCredentialsBuilder {
    /// <p>The Amazon Resource Name (ARN) of the secret containing the private repository credentials.</p> <note>
    /// <p>When you use the Amazon ECS API, CLI, or Amazon Web Services SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the Amazon Web Services Management Console, you must specify the full ARN of the secret.</p>
    /// </note>
    pub fn credentials_parameter(mut self, input: impl Into<std::string::String>) -> Self {
        self.credentials_parameter = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the secret containing the private repository credentials.</p> <note>
    /// <p>When you use the Amazon ECS API, CLI, or Amazon Web Services SDK, if the secret exists in the same Region as the task that you're launching then you can use either the full ARN or the name of the secret. When you use the Amazon Web Services Management Console, you must specify the full ARN of the secret.</p>
    /// </note>
    pub fn set_credentials_parameter(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.credentials_parameter = input;
        self
    }
    /// Consumes the builder and constructs a [`RepositoryCredentials`](crate::types::RepositoryCredentials).
    pub fn build(self) -> crate::types::RepositoryCredentials {
        crate::types::RepositoryCredentials {
            credentials_parameter: self.credentials_parameter,
        }
    }
}
