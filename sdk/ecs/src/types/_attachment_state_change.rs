// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object representing a change in state for a task attachment.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AttachmentStateChange {
    /// <p>The Amazon Resource Name (ARN) of the attachment.</p>
    pub attachment_arn: ::std::string::String,
    /// <p>The status of the attachment.</p>
    pub status: ::std::string::String,
}
impl AttachmentStateChange {
    /// <p>The Amazon Resource Name (ARN) of the attachment.</p>
    pub fn attachment_arn(&self) -> &str {
        use std::ops::Deref;
        self.attachment_arn.deref()
    }
    /// <p>The status of the attachment.</p>
    pub fn status(&self) -> &str {
        use std::ops::Deref;
        self.status.deref()
    }
}
impl AttachmentStateChange {
    /// Creates a new builder-style object to manufacture [`AttachmentStateChange`](crate::types::AttachmentStateChange).
    pub fn builder() -> crate::types::builders::AttachmentStateChangeBuilder {
        crate::types::builders::AttachmentStateChangeBuilder::default()
    }
}

/// A builder for [`AttachmentStateChange`](crate::types::AttachmentStateChange).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AttachmentStateChangeBuilder {
    pub(crate) attachment_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<::std::string::String>,
}
impl AttachmentStateChangeBuilder {
    /// <p>The Amazon Resource Name (ARN) of the attachment.</p>
    /// This field is required.
    pub fn attachment_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attachment_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the attachment.</p>
    pub fn set_attachment_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attachment_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the attachment.</p>
    pub fn get_attachment_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.attachment_arn
    }
    /// <p>The status of the attachment.</p>
    /// This field is required.
    pub fn status(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The status of the attachment.</p>
    pub fn set_status(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the attachment.</p>
    pub fn get_status(&self) -> &::std::option::Option<::std::string::String> {
        &self.status
    }
    /// Consumes the builder and constructs a [`AttachmentStateChange`](crate::types::AttachmentStateChange).
    /// This method will fail if any of the following fields are not set:
    /// - [`attachment_arn`](crate::types::builders::AttachmentStateChangeBuilder::attachment_arn)
    /// - [`status`](crate::types::builders::AttachmentStateChangeBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::AttachmentStateChange, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AttachmentStateChange {
            attachment_arn: self.attachment_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "attachment_arn",
                    "attachment_arn was not specified but it is required when building AttachmentStateChange",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building AttachmentStateChange",
                )
            })?,
        })
    }
}
