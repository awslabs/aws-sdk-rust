// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration for Service Connect access logging. Access logs provide detailed information about requests made to your service, including request patterns, response codes, and timing data for debugging and monitoring purposes.</p><note>
/// <p>To enable access logs, you must also specify a <code>logConfiguration</code> in the <code>serviceConnectConfiguration</code>.</p>
/// </note>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServiceConnectAccessLogConfiguration {
    /// <p>The format for Service Connect access log output. Choose TEXT for human-readable logs or JSON for structured data that integrates well with log analysis tools.</p>
    pub format: crate::types::ServiceConnectAccessLoggingFormat,
    /// <p>Specifies whether to include query parameters in Service Connect access logs.</p>
    /// <p>When enabled, query parameters from HTTP requests are included in the access logs. Consider security and privacy implications when enabling this feature, as query parameters may contain sensitive information such as request IDs and tokens. By default, this parameter is <code>DISABLED</code>.</p>
    pub include_query_parameters: ::std::option::Option<crate::types::ServiceConnectIncludeQueryParameters>,
}
impl ServiceConnectAccessLogConfiguration {
    /// <p>The format for Service Connect access log output. Choose TEXT for human-readable logs or JSON for structured data that integrates well with log analysis tools.</p>
    pub fn format(&self) -> &crate::types::ServiceConnectAccessLoggingFormat {
        &self.format
    }
    /// <p>Specifies whether to include query parameters in Service Connect access logs.</p>
    /// <p>When enabled, query parameters from HTTP requests are included in the access logs. Consider security and privacy implications when enabling this feature, as query parameters may contain sensitive information such as request IDs and tokens. By default, this parameter is <code>DISABLED</code>.</p>
    pub fn include_query_parameters(&self) -> ::std::option::Option<&crate::types::ServiceConnectIncludeQueryParameters> {
        self.include_query_parameters.as_ref()
    }
}
impl ServiceConnectAccessLogConfiguration {
    /// Creates a new builder-style object to manufacture [`ServiceConnectAccessLogConfiguration`](crate::types::ServiceConnectAccessLogConfiguration).
    pub fn builder() -> crate::types::builders::ServiceConnectAccessLogConfigurationBuilder {
        crate::types::builders::ServiceConnectAccessLogConfigurationBuilder::default()
    }
}

/// A builder for [`ServiceConnectAccessLogConfiguration`](crate::types::ServiceConnectAccessLogConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ServiceConnectAccessLogConfigurationBuilder {
    pub(crate) format: ::std::option::Option<crate::types::ServiceConnectAccessLoggingFormat>,
    pub(crate) include_query_parameters: ::std::option::Option<crate::types::ServiceConnectIncludeQueryParameters>,
}
impl ServiceConnectAccessLogConfigurationBuilder {
    /// <p>The format for Service Connect access log output. Choose TEXT for human-readable logs or JSON for structured data that integrates well with log analysis tools.</p>
    /// This field is required.
    pub fn format(mut self, input: crate::types::ServiceConnectAccessLoggingFormat) -> Self {
        self.format = ::std::option::Option::Some(input);
        self
    }
    /// <p>The format for Service Connect access log output. Choose TEXT for human-readable logs or JSON for structured data that integrates well with log analysis tools.</p>
    pub fn set_format(mut self, input: ::std::option::Option<crate::types::ServiceConnectAccessLoggingFormat>) -> Self {
        self.format = input;
        self
    }
    /// <p>The format for Service Connect access log output. Choose TEXT for human-readable logs or JSON for structured data that integrates well with log analysis tools.</p>
    pub fn get_format(&self) -> &::std::option::Option<crate::types::ServiceConnectAccessLoggingFormat> {
        &self.format
    }
    /// <p>Specifies whether to include query parameters in Service Connect access logs.</p>
    /// <p>When enabled, query parameters from HTTP requests are included in the access logs. Consider security and privacy implications when enabling this feature, as query parameters may contain sensitive information such as request IDs and tokens. By default, this parameter is <code>DISABLED</code>.</p>
    pub fn include_query_parameters(mut self, input: crate::types::ServiceConnectIncludeQueryParameters) -> Self {
        self.include_query_parameters = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether to include query parameters in Service Connect access logs.</p>
    /// <p>When enabled, query parameters from HTTP requests are included in the access logs. Consider security and privacy implications when enabling this feature, as query parameters may contain sensitive information such as request IDs and tokens. By default, this parameter is <code>DISABLED</code>.</p>
    pub fn set_include_query_parameters(mut self, input: ::std::option::Option<crate::types::ServiceConnectIncludeQueryParameters>) -> Self {
        self.include_query_parameters = input;
        self
    }
    /// <p>Specifies whether to include query parameters in Service Connect access logs.</p>
    /// <p>When enabled, query parameters from HTTP requests are included in the access logs. Consider security and privacy implications when enabling this feature, as query parameters may contain sensitive information such as request IDs and tokens. By default, this parameter is <code>DISABLED</code>.</p>
    pub fn get_include_query_parameters(&self) -> &::std::option::Option<crate::types::ServiceConnectIncludeQueryParameters> {
        &self.include_query_parameters
    }
    /// Consumes the builder and constructs a [`ServiceConnectAccessLogConfiguration`](crate::types::ServiceConnectAccessLogConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`format`](crate::types::builders::ServiceConnectAccessLogConfigurationBuilder::format)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::ServiceConnectAccessLogConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ServiceConnectAccessLogConfiguration {
            format: self.format.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "format",
                    "format was not specified but it is required when building ServiceConnectAccessLogConfiguration",
                )
            })?,
            include_query_parameters: self.include_query_parameters,
        })
    }
}
