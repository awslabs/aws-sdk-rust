// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The DynamoDB reservations that Amazon Web Services recommends that you purchase.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DynamoDbCapacityDetails {
    /// <p>The capacity unit of the recommended reservation.</p>
    pub capacity_units: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services Region of the recommended reservation.</p>
    pub region: ::std::option::Option<::std::string::String>,
}
impl DynamoDbCapacityDetails {
    /// <p>The capacity unit of the recommended reservation.</p>
    pub fn capacity_units(&self) -> ::std::option::Option<&str> {
        self.capacity_units.as_deref()
    }
    /// <p>The Amazon Web Services Region of the recommended reservation.</p>
    pub fn region(&self) -> ::std::option::Option<&str> {
        self.region.as_deref()
    }
}
impl DynamoDbCapacityDetails {
    /// Creates a new builder-style object to manufacture [`DynamoDbCapacityDetails`](crate::types::DynamoDbCapacityDetails).
    pub fn builder() -> crate::types::builders::DynamoDbCapacityDetailsBuilder {
        crate::types::builders::DynamoDbCapacityDetailsBuilder::default()
    }
}

/// A builder for [`DynamoDbCapacityDetails`](crate::types::DynamoDbCapacityDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DynamoDbCapacityDetailsBuilder {
    pub(crate) capacity_units: ::std::option::Option<::std::string::String>,
    pub(crate) region: ::std::option::Option<::std::string::String>,
}
impl DynamoDbCapacityDetailsBuilder {
    /// <p>The capacity unit of the recommended reservation.</p>
    pub fn capacity_units(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.capacity_units = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The capacity unit of the recommended reservation.</p>
    pub fn set_capacity_units(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.capacity_units = input;
        self
    }
    /// <p>The capacity unit of the recommended reservation.</p>
    pub fn get_capacity_units(&self) -> &::std::option::Option<::std::string::String> {
        &self.capacity_units
    }
    /// <p>The Amazon Web Services Region of the recommended reservation.</p>
    pub fn region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Region of the recommended reservation.</p>
    pub fn set_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// <p>The Amazon Web Services Region of the recommended reservation.</p>
    pub fn get_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.region
    }
    /// Consumes the builder and constructs a [`DynamoDbCapacityDetails`](crate::types::DynamoDbCapacityDetails).
    pub fn build(self) -> crate::types::DynamoDbCapacityDetails {
        crate::types::DynamoDbCapacityDetails {
            capacity_units: self.capacity_units,
            region: self.region,
        }
    }
}
