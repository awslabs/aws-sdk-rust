// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the instances that Amazon Web Services recommends that you purchase.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InstanceDetails {
    /// <p>The Amazon EC2 instances that Amazon Web Services recommends that you purchase.</p>
    #[doc(hidden)]
    pub ec2_instance_details: std::option::Option<crate::types::Ec2InstanceDetails>,
    /// <p>The Amazon RDS instances that Amazon Web Services recommends that you purchase.</p>
    #[doc(hidden)]
    pub rds_instance_details: std::option::Option<crate::types::RdsInstanceDetails>,
    /// <p>The Amazon Redshift instances that Amazon Web Services recommends that you purchase.</p>
    #[doc(hidden)]
    pub redshift_instance_details: std::option::Option<crate::types::RedshiftInstanceDetails>,
    /// <p>The ElastiCache instances that Amazon Web Services recommends that you purchase.</p>
    #[doc(hidden)]
    pub elasti_cache_instance_details:
        std::option::Option<crate::types::ElastiCacheInstanceDetails>,
    /// <p>The Amazon OpenSearch Service instances that Amazon Web Services recommends that you purchase.</p>
    #[doc(hidden)]
    pub es_instance_details: std::option::Option<crate::types::EsInstanceDetails>,
}
impl InstanceDetails {
    /// <p>The Amazon EC2 instances that Amazon Web Services recommends that you purchase.</p>
    pub fn ec2_instance_details(&self) -> std::option::Option<&crate::types::Ec2InstanceDetails> {
        self.ec2_instance_details.as_ref()
    }
    /// <p>The Amazon RDS instances that Amazon Web Services recommends that you purchase.</p>
    pub fn rds_instance_details(&self) -> std::option::Option<&crate::types::RdsInstanceDetails> {
        self.rds_instance_details.as_ref()
    }
    /// <p>The Amazon Redshift instances that Amazon Web Services recommends that you purchase.</p>
    pub fn redshift_instance_details(
        &self,
    ) -> std::option::Option<&crate::types::RedshiftInstanceDetails> {
        self.redshift_instance_details.as_ref()
    }
    /// <p>The ElastiCache instances that Amazon Web Services recommends that you purchase.</p>
    pub fn elasti_cache_instance_details(
        &self,
    ) -> std::option::Option<&crate::types::ElastiCacheInstanceDetails> {
        self.elasti_cache_instance_details.as_ref()
    }
    /// <p>The Amazon OpenSearch Service instances that Amazon Web Services recommends that you purchase.</p>
    pub fn es_instance_details(&self) -> std::option::Option<&crate::types::EsInstanceDetails> {
        self.es_instance_details.as_ref()
    }
}
impl InstanceDetails {
    /// Creates a new builder-style object to manufacture [`InstanceDetails`](crate::types::InstanceDetails).
    pub fn builder() -> crate::types::builders::InstanceDetailsBuilder {
        crate::types::builders::InstanceDetailsBuilder::default()
    }
}

/// A builder for [`InstanceDetails`](crate::types::InstanceDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InstanceDetailsBuilder {
    pub(crate) ec2_instance_details: std::option::Option<crate::types::Ec2InstanceDetails>,
    pub(crate) rds_instance_details: std::option::Option<crate::types::RdsInstanceDetails>,
    pub(crate) redshift_instance_details:
        std::option::Option<crate::types::RedshiftInstanceDetails>,
    pub(crate) elasti_cache_instance_details:
        std::option::Option<crate::types::ElastiCacheInstanceDetails>,
    pub(crate) es_instance_details: std::option::Option<crate::types::EsInstanceDetails>,
}
impl InstanceDetailsBuilder {
    /// <p>The Amazon EC2 instances that Amazon Web Services recommends that you purchase.</p>
    pub fn ec2_instance_details(mut self, input: crate::types::Ec2InstanceDetails) -> Self {
        self.ec2_instance_details = Some(input);
        self
    }
    /// <p>The Amazon EC2 instances that Amazon Web Services recommends that you purchase.</p>
    pub fn set_ec2_instance_details(
        mut self,
        input: std::option::Option<crate::types::Ec2InstanceDetails>,
    ) -> Self {
        self.ec2_instance_details = input;
        self
    }
    /// <p>The Amazon RDS instances that Amazon Web Services recommends that you purchase.</p>
    pub fn rds_instance_details(mut self, input: crate::types::RdsInstanceDetails) -> Self {
        self.rds_instance_details = Some(input);
        self
    }
    /// <p>The Amazon RDS instances that Amazon Web Services recommends that you purchase.</p>
    pub fn set_rds_instance_details(
        mut self,
        input: std::option::Option<crate::types::RdsInstanceDetails>,
    ) -> Self {
        self.rds_instance_details = input;
        self
    }
    /// <p>The Amazon Redshift instances that Amazon Web Services recommends that you purchase.</p>
    pub fn redshift_instance_details(
        mut self,
        input: crate::types::RedshiftInstanceDetails,
    ) -> Self {
        self.redshift_instance_details = Some(input);
        self
    }
    /// <p>The Amazon Redshift instances that Amazon Web Services recommends that you purchase.</p>
    pub fn set_redshift_instance_details(
        mut self,
        input: std::option::Option<crate::types::RedshiftInstanceDetails>,
    ) -> Self {
        self.redshift_instance_details = input;
        self
    }
    /// <p>The ElastiCache instances that Amazon Web Services recommends that you purchase.</p>
    pub fn elasti_cache_instance_details(
        mut self,
        input: crate::types::ElastiCacheInstanceDetails,
    ) -> Self {
        self.elasti_cache_instance_details = Some(input);
        self
    }
    /// <p>The ElastiCache instances that Amazon Web Services recommends that you purchase.</p>
    pub fn set_elasti_cache_instance_details(
        mut self,
        input: std::option::Option<crate::types::ElastiCacheInstanceDetails>,
    ) -> Self {
        self.elasti_cache_instance_details = input;
        self
    }
    /// <p>The Amazon OpenSearch Service instances that Amazon Web Services recommends that you purchase.</p>
    pub fn es_instance_details(mut self, input: crate::types::EsInstanceDetails) -> Self {
        self.es_instance_details = Some(input);
        self
    }
    /// <p>The Amazon OpenSearch Service instances that Amazon Web Services recommends that you purchase.</p>
    pub fn set_es_instance_details(
        mut self,
        input: std::option::Option<crate::types::EsInstanceDetails>,
    ) -> Self {
        self.es_instance_details = input;
        self
    }
    /// Consumes the builder and constructs a [`InstanceDetails`](crate::types::InstanceDetails).
    pub fn build(self) -> crate::types::InstanceDetails {
        crate::types::InstanceDetails {
            ec2_instance_details: self.ec2_instance_details,
            rds_instance_details: self.rds_instance_details,
            redshift_instance_details: self.redshift_instance_details,
            elasti_cache_instance_details: self.elasti_cache_instance_details,
            es_instance_details: self.es_instance_details,
        }
    }
}
