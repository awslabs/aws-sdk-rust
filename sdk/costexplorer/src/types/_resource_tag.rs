// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The tag structure that contains a tag key and value. </p> <note>
/// <p>Tagging is supported only for the following Cost Explorer resource types: <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalyMonitor.html"> <code>AnomalyMonitor</code> </a>, <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalySubscription.html"> <code>AnomalySubscription</code> </a>, <a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategory.html"> <code>CostCategory</code> </a>.</p>
/// </note>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourceTag {
    /// <p>The key that's associated with the tag. </p>
    #[doc(hidden)]
    pub key: std::option::Option<std::string::String>,
    /// <p>The value that's associated with the tag. </p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
}
impl ResourceTag {
    /// <p>The key that's associated with the tag. </p>
    pub fn key(&self) -> std::option::Option<&str> {
        self.key.as_deref()
    }
    /// <p>The value that's associated with the tag. </p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
}
impl ResourceTag {
    /// Creates a new builder-style object to manufacture [`ResourceTag`](crate::types::ResourceTag).
    pub fn builder() -> crate::types::builders::ResourceTagBuilder {
        crate::types::builders::ResourceTagBuilder::default()
    }
}

/// A builder for [`ResourceTag`](crate::types::ResourceTag).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourceTagBuilder {
    pub(crate) key: std::option::Option<std::string::String>,
    pub(crate) value: std::option::Option<std::string::String>,
}
impl ResourceTagBuilder {
    /// <p>The key that's associated with the tag. </p>
    pub fn key(mut self, input: impl Into<std::string::String>) -> Self {
        self.key = Some(input.into());
        self
    }
    /// <p>The key that's associated with the tag. </p>
    pub fn set_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.key = input;
        self
    }
    /// <p>The value that's associated with the tag. </p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value that's associated with the tag. </p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourceTag`](crate::types::ResourceTag).
    pub fn build(self) -> crate::types::ResourceTag {
        crate::types::ResourceTag {
            key: self.key,
            value: self.value,
        }
    }
}
