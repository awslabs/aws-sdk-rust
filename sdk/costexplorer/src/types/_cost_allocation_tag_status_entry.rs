// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The cost allocation tag status. The status of a key can either be active or inactive. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CostAllocationTagStatusEntry {
    /// <p>The key for the cost allocation tag. </p>
    pub tag_key: ::std::string::String,
    /// <p>The status of a cost allocation tag. </p>
    pub status: crate::types::CostAllocationTagStatus,
}
impl CostAllocationTagStatusEntry {
    /// <p>The key for the cost allocation tag. </p>
    pub fn tag_key(&self) -> &str {
        use std::ops::Deref;
        self.tag_key.deref()
    }
    /// <p>The status of a cost allocation tag. </p>
    pub fn status(&self) -> &crate::types::CostAllocationTagStatus {
        &self.status
    }
}
impl CostAllocationTagStatusEntry {
    /// Creates a new builder-style object to manufacture [`CostAllocationTagStatusEntry`](crate::types::CostAllocationTagStatusEntry).
    pub fn builder() -> crate::types::builders::CostAllocationTagStatusEntryBuilder {
        crate::types::builders::CostAllocationTagStatusEntryBuilder::default()
    }
}

/// A builder for [`CostAllocationTagStatusEntry`](crate::types::CostAllocationTagStatusEntry).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CostAllocationTagStatusEntryBuilder {
    pub(crate) tag_key: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::CostAllocationTagStatus>,
}
impl CostAllocationTagStatusEntryBuilder {
    /// <p>The key for the cost allocation tag. </p>
    /// This field is required.
    pub fn tag_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tag_key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The key for the cost allocation tag. </p>
    pub fn set_tag_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tag_key = input;
        self
    }
    /// <p>The key for the cost allocation tag. </p>
    pub fn get_tag_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.tag_key
    }
    /// <p>The status of a cost allocation tag. </p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::CostAllocationTagStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of a cost allocation tag. </p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::CostAllocationTagStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of a cost allocation tag. </p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::CostAllocationTagStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`CostAllocationTagStatusEntry`](crate::types::CostAllocationTagStatusEntry).
    /// This method will fail if any of the following fields are not set:
    /// - [`tag_key`](crate::types::builders::CostAllocationTagStatusEntryBuilder::tag_key)
    /// - [`status`](crate::types::builders::CostAllocationTagStatusEntryBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::CostAllocationTagStatusEntry, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CostAllocationTagStatusEntry {
            tag_key: self.tag_key.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "tag_key",
                    "tag_key was not specified but it is required when building CostAllocationTagStatusEntry",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building CostAllocationTagStatusEntry",
                )
            })?,
        })
    }
}
