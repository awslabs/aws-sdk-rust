// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The cost allocation tag status. The status of a key can either be active or inactive. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CostAllocationTagStatusEntry {
    /// <p>The key for the cost allocation tag. </p>
    #[doc(hidden)]
    pub tag_key: std::option::Option<std::string::String>,
    /// <p>The status of a cost allocation tag. </p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::CostAllocationTagStatus>,
}
impl CostAllocationTagStatusEntry {
    /// <p>The key for the cost allocation tag. </p>
    pub fn tag_key(&self) -> std::option::Option<&str> {
        self.tag_key.as_deref()
    }
    /// <p>The status of a cost allocation tag. </p>
    pub fn status(&self) -> std::option::Option<&crate::types::CostAllocationTagStatus> {
        self.status.as_ref()
    }
}
impl CostAllocationTagStatusEntry {
    /// Creates a new builder-style object to manufacture [`CostAllocationTagStatusEntry`](crate::types::CostAllocationTagStatusEntry).
    pub fn builder() -> crate::types::builders::CostAllocationTagStatusEntryBuilder {
        crate::types::builders::CostAllocationTagStatusEntryBuilder::default()
    }
}

/// A builder for [`CostAllocationTagStatusEntry`](crate::types::CostAllocationTagStatusEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CostAllocationTagStatusEntryBuilder {
    pub(crate) tag_key: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::CostAllocationTagStatus>,
}
impl CostAllocationTagStatusEntryBuilder {
    /// <p>The key for the cost allocation tag. </p>
    pub fn tag_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.tag_key = Some(input.into());
        self
    }
    /// <p>The key for the cost allocation tag. </p>
    pub fn set_tag_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.tag_key = input;
        self
    }
    /// <p>The status of a cost allocation tag. </p>
    pub fn status(mut self, input: crate::types::CostAllocationTagStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of a cost allocation tag. </p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::CostAllocationTagStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`CostAllocationTagStatusEntry`](crate::types::CostAllocationTagStatusEntry).
    pub fn build(self) -> crate::types::CostAllocationTagStatusEntry {
        crate::types::CostAllocationTagStatusEntry {
            tag_key: self.tag_key,
            status: self.status,
        }
    }
}
