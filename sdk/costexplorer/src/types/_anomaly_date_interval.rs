// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The time period for an anomaly. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AnomalyDateInterval {
    /// <p>The first date an anomaly was observed. </p>
    #[doc(hidden)]
    pub start_date: std::option::Option<std::string::String>,
    /// <p>The last date an anomaly was observed. </p>
    #[doc(hidden)]
    pub end_date: std::option::Option<std::string::String>,
}
impl AnomalyDateInterval {
    /// <p>The first date an anomaly was observed. </p>
    pub fn start_date(&self) -> std::option::Option<&str> {
        self.start_date.as_deref()
    }
    /// <p>The last date an anomaly was observed. </p>
    pub fn end_date(&self) -> std::option::Option<&str> {
        self.end_date.as_deref()
    }
}
impl AnomalyDateInterval {
    /// Creates a new builder-style object to manufacture [`AnomalyDateInterval`](crate::types::AnomalyDateInterval).
    pub fn builder() -> crate::types::builders::AnomalyDateIntervalBuilder {
        crate::types::builders::AnomalyDateIntervalBuilder::default()
    }
}

/// A builder for [`AnomalyDateInterval`](crate::types::AnomalyDateInterval).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AnomalyDateIntervalBuilder {
    pub(crate) start_date: std::option::Option<std::string::String>,
    pub(crate) end_date: std::option::Option<std::string::String>,
}
impl AnomalyDateIntervalBuilder {
    /// <p>The first date an anomaly was observed. </p>
    pub fn start_date(mut self, input: impl Into<std::string::String>) -> Self {
        self.start_date = Some(input.into());
        self
    }
    /// <p>The first date an anomaly was observed. </p>
    pub fn set_start_date(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.start_date = input;
        self
    }
    /// <p>The last date an anomaly was observed. </p>
    pub fn end_date(mut self, input: impl Into<std::string::String>) -> Self {
        self.end_date = Some(input.into());
        self
    }
    /// <p>The last date an anomaly was observed. </p>
    pub fn set_end_date(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.end_date = input;
        self
    }
    /// Consumes the builder and constructs a [`AnomalyDateInterval`](crate::types::AnomalyDateInterval).
    pub fn build(self) -> crate::types::AnomalyDateInterval {
        crate::types::AnomalyDateInterval {
            start_date: self.start_date,
            end_date: self.end_date,
        }
    }
}
