// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A group of reservations that share a set of attributes.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReservationCoverageGroup {
    /// <p>The attributes for this group of reservations.</p>
    #[doc(hidden)]
    pub attributes:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    /// <p>How much instance usage this group of reservations covered.</p>
    #[doc(hidden)]
    pub coverage: std::option::Option<crate::types::Coverage>,
}
impl ReservationCoverageGroup {
    /// <p>The attributes for this group of reservations.</p>
    pub fn attributes(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.attributes.as_ref()
    }
    /// <p>How much instance usage this group of reservations covered.</p>
    pub fn coverage(&self) -> std::option::Option<&crate::types::Coverage> {
        self.coverage.as_ref()
    }
}
impl ReservationCoverageGroup {
    /// Creates a new builder-style object to manufacture [`ReservationCoverageGroup`](crate::types::ReservationCoverageGroup).
    pub fn builder() -> crate::types::builders::ReservationCoverageGroupBuilder {
        crate::types::builders::ReservationCoverageGroupBuilder::default()
    }
}

/// A builder for [`ReservationCoverageGroup`](crate::types::ReservationCoverageGroup).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReservationCoverageGroupBuilder {
    pub(crate) attributes:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    pub(crate) coverage: std::option::Option<crate::types::Coverage>,
}
impl ReservationCoverageGroupBuilder {
    /// Adds a key-value pair to `attributes`.
    ///
    /// To override the contents of this collection use [`set_attributes`](Self::set_attributes).
    ///
    /// <p>The attributes for this group of reservations.</p>
    pub fn attributes(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.attributes.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.attributes = Some(hash_map);
        self
    }
    /// <p>The attributes for this group of reservations.</p>
    pub fn set_attributes(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.attributes = input;
        self
    }
    /// <p>How much instance usage this group of reservations covered.</p>
    pub fn coverage(mut self, input: crate::types::Coverage) -> Self {
        self.coverage = Some(input);
        self
    }
    /// <p>How much instance usage this group of reservations covered.</p>
    pub fn set_coverage(mut self, input: std::option::Option<crate::types::Coverage>) -> Self {
        self.coverage = input;
        self
    }
    /// Consumes the builder and constructs a [`ReservationCoverageGroup`](crate::types::ReservationCoverageGroup).
    pub fn build(self) -> crate::types::ReservationCoverageGroup {
        crate::types::ReservationCoverageGroup {
            attributes: self.attributes,
            coverage: self.coverage,
        }
    }
}
