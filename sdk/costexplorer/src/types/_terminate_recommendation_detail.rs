// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details on termination recommendation. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TerminateRecommendationDetail {
    /// <p>The estimated savings that result from modification, on a monthly basis.</p>
    #[doc(hidden)]
    pub estimated_monthly_savings: std::option::Option<std::string::String>,
    /// <p>The currency code that Amazon Web Services used to calculate the costs for this instance.</p>
    #[doc(hidden)]
    pub currency_code: std::option::Option<std::string::String>,
}
impl TerminateRecommendationDetail {
    /// <p>The estimated savings that result from modification, on a monthly basis.</p>
    pub fn estimated_monthly_savings(&self) -> std::option::Option<&str> {
        self.estimated_monthly_savings.as_deref()
    }
    /// <p>The currency code that Amazon Web Services used to calculate the costs for this instance.</p>
    pub fn currency_code(&self) -> std::option::Option<&str> {
        self.currency_code.as_deref()
    }
}
impl TerminateRecommendationDetail {
    /// Creates a new builder-style object to manufacture [`TerminateRecommendationDetail`](crate::types::TerminateRecommendationDetail).
    pub fn builder() -> crate::types::builders::TerminateRecommendationDetailBuilder {
        crate::types::builders::TerminateRecommendationDetailBuilder::default()
    }
}

/// A builder for [`TerminateRecommendationDetail`](crate::types::TerminateRecommendationDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TerminateRecommendationDetailBuilder {
    pub(crate) estimated_monthly_savings: std::option::Option<std::string::String>,
    pub(crate) currency_code: std::option::Option<std::string::String>,
}
impl TerminateRecommendationDetailBuilder {
    /// <p>The estimated savings that result from modification, on a monthly basis.</p>
    pub fn estimated_monthly_savings(mut self, input: impl Into<std::string::String>) -> Self {
        self.estimated_monthly_savings = Some(input.into());
        self
    }
    /// <p>The estimated savings that result from modification, on a monthly basis.</p>
    pub fn set_estimated_monthly_savings(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.estimated_monthly_savings = input;
        self
    }
    /// <p>The currency code that Amazon Web Services used to calculate the costs for this instance.</p>
    pub fn currency_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.currency_code = Some(input.into());
        self
    }
    /// <p>The currency code that Amazon Web Services used to calculate the costs for this instance.</p>
    pub fn set_currency_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.currency_code = input;
        self
    }
    /// Consumes the builder and constructs a [`TerminateRecommendationDetail`](crate::types::TerminateRecommendationDetail).
    pub fn build(self) -> crate::types::TerminateRecommendationDetail {
        crate::types::TerminateRecommendationDetail {
            estimated_monthly_savings: self.estimated_monthly_savings,
            currency_code: self.currency_code,
        }
    }
}
