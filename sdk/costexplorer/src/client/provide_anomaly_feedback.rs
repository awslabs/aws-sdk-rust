// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ProvideAnomalyFeedback`](crate::client::fluent_builders::ProvideAnomalyFeedback) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_id(impl Into<String>)`](crate::client::fluent_builders::ProvideAnomalyFeedback::anomaly_id) / [`set_anomaly_id(Option<String>)`](crate::client::fluent_builders::ProvideAnomalyFeedback::set_anomaly_id): <p>A cost anomaly ID. </p>
    ///   - [`feedback(AnomalyFeedbackType)`](crate::client::fluent_builders::ProvideAnomalyFeedback::feedback) / [`set_feedback(Option<AnomalyFeedbackType>)`](crate::client::fluent_builders::ProvideAnomalyFeedback::set_feedback): <p>Describes whether the cost anomaly was a planned activity or you considered it an anomaly. </p>
    /// - On success, responds with [`ProvideAnomalyFeedbackOutput`](crate::output::ProvideAnomalyFeedbackOutput) with field(s):
    ///   - [`anomaly_id(Option<String>)`](crate::output::ProvideAnomalyFeedbackOutput::anomaly_id): <p>The ID of the modified cost anomaly. </p>
    /// - On failure, responds with [`SdkError<ProvideAnomalyFeedbackError>`](crate::error::ProvideAnomalyFeedbackError)
    pub fn provide_anomaly_feedback(
        &self,
    ) -> crate::client::fluent_builders::ProvideAnomalyFeedback {
        crate::client::fluent_builders::ProvideAnomalyFeedback::new(self.handle.clone())
    }
}
