// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetAnomalySubscriptionsInput {
    /// <p>A list of cost anomaly subscription ARNs. </p>
    #[doc(hidden)]
    pub subscription_arn_list: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Cost anomaly monitor ARNs. </p>
    #[doc(hidden)]
    pub monitor_arn: std::option::Option<std::string::String>,
    /// <p>The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size. </p>
    #[doc(hidden)]
    pub next_page_token: std::option::Option<std::string::String>,
    /// <p>The number of entries a paginated response contains. </p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
}
impl GetAnomalySubscriptionsInput {
    /// <p>A list of cost anomaly subscription ARNs. </p>
    pub fn subscription_arn_list(&self) -> std::option::Option<&[std::string::String]> {
        self.subscription_arn_list.as_deref()
    }
    /// <p>Cost anomaly monitor ARNs. </p>
    pub fn monitor_arn(&self) -> std::option::Option<&str> {
        self.monitor_arn.as_deref()
    }
    /// <p>The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size. </p>
    pub fn next_page_token(&self) -> std::option::Option<&str> {
        self.next_page_token.as_deref()
    }
    /// <p>The number of entries a paginated response contains. </p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
}
impl GetAnomalySubscriptionsInput {
    /// Creates a new builder-style object to manufacture [`GetAnomalySubscriptionsInput`](crate::operation::get_anomaly_subscriptions::GetAnomalySubscriptionsInput).
    pub fn builder(
    ) -> crate::operation::get_anomaly_subscriptions::builders::GetAnomalySubscriptionsInputBuilder
    {
        crate::operation::get_anomaly_subscriptions::builders::GetAnomalySubscriptionsInputBuilder::default()
    }
}

/// A builder for [`GetAnomalySubscriptionsInput`](crate::operation::get_anomaly_subscriptions::GetAnomalySubscriptionsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetAnomalySubscriptionsInputBuilder {
    pub(crate) subscription_arn_list: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) monitor_arn: std::option::Option<std::string::String>,
    pub(crate) next_page_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
}
impl GetAnomalySubscriptionsInputBuilder {
    /// Appends an item to `subscription_arn_list`.
    ///
    /// To override the contents of this collection use [`set_subscription_arn_list`](Self::set_subscription_arn_list).
    ///
    /// <p>A list of cost anomaly subscription ARNs. </p>
    pub fn subscription_arn_list(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.subscription_arn_list.unwrap_or_default();
        v.push(input.into());
        self.subscription_arn_list = Some(v);
        self
    }
    /// <p>A list of cost anomaly subscription ARNs. </p>
    pub fn set_subscription_arn_list(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.subscription_arn_list = input;
        self
    }
    /// <p>Cost anomaly monitor ARNs. </p>
    pub fn monitor_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.monitor_arn = Some(input.into());
        self
    }
    /// <p>Cost anomaly monitor ARNs. </p>
    pub fn set_monitor_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.monitor_arn = input;
        self
    }
    /// <p>The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size. </p>
    pub fn next_page_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_page_token = Some(input.into());
        self
    }
    /// <p>The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size. </p>
    pub fn set_next_page_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_page_token = input;
        self
    }
    /// <p>The number of entries a paginated response contains. </p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The number of entries a paginated response contains. </p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Consumes the builder and constructs a [`GetAnomalySubscriptionsInput`](crate::operation::get_anomaly_subscriptions::GetAnomalySubscriptionsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_anomaly_subscriptions::GetAnomalySubscriptionsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_anomaly_subscriptions::GetAnomalySubscriptionsInput {
                subscription_arn_list: self.subscription_arn_list,
                monitor_arn: self.monitor_arn,
                next_page_token: self.next_page_token,
                max_results: self.max_results,
            },
        )
    }
}
