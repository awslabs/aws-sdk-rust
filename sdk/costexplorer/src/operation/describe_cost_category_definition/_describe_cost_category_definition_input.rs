// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeCostCategoryDefinitionInput {
    /// <p>The unique identifier for your Cost Category. </p>
    #[doc(hidden)]
    pub cost_category_arn: std::option::Option<std::string::String>,
    /// <p>The date when the Cost Category was effective. </p>
    #[doc(hidden)]
    pub effective_on: std::option::Option<std::string::String>,
}
impl DescribeCostCategoryDefinitionInput {
    /// <p>The unique identifier for your Cost Category. </p>
    pub fn cost_category_arn(&self) -> std::option::Option<&str> {
        self.cost_category_arn.as_deref()
    }
    /// <p>The date when the Cost Category was effective. </p>
    pub fn effective_on(&self) -> std::option::Option<&str> {
        self.effective_on.as_deref()
    }
}
impl DescribeCostCategoryDefinitionInput {
    /// Creates a new builder-style object to manufacture [`DescribeCostCategoryDefinitionInput`](crate::operation::describe_cost_category_definition::DescribeCostCategoryDefinitionInput).
    pub fn builder() -> crate::operation::describe_cost_category_definition::builders::DescribeCostCategoryDefinitionInputBuilder{
        crate::operation::describe_cost_category_definition::builders::DescribeCostCategoryDefinitionInputBuilder::default()
    }
}

/// A builder for [`DescribeCostCategoryDefinitionInput`](crate::operation::describe_cost_category_definition::DescribeCostCategoryDefinitionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeCostCategoryDefinitionInputBuilder {
    pub(crate) cost_category_arn: std::option::Option<std::string::String>,
    pub(crate) effective_on: std::option::Option<std::string::String>,
}
impl DescribeCostCategoryDefinitionInputBuilder {
    /// <p>The unique identifier for your Cost Category. </p>
    pub fn cost_category_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.cost_category_arn = Some(input.into());
        self
    }
    /// <p>The unique identifier for your Cost Category. </p>
    pub fn set_cost_category_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.cost_category_arn = input;
        self
    }
    /// <p>The date when the Cost Category was effective. </p>
    pub fn effective_on(mut self, input: impl Into<std::string::String>) -> Self {
        self.effective_on = Some(input.into());
        self
    }
    /// <p>The date when the Cost Category was effective. </p>
    pub fn set_effective_on(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.effective_on = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeCostCategoryDefinitionInput`](crate::operation::describe_cost_category_definition::DescribeCostCategoryDefinitionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_cost_category_definition::DescribeCostCategoryDefinitionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_cost_category_definition::DescribeCostCategoryDefinitionInput {
                cost_category_arn: self.cost_category_arn
                ,
                effective_on: self.effective_on
                ,
            }
        )
    }
}
