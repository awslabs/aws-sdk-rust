// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_anomalies_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_anomalies::GetAnomaliesInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.monitor_arn {
        object.key("MonitorArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.date_interval {
        #[allow(unused_mut)]
        let mut object_3 = object.key("DateInterval").start_object();
        crate::protocol_serde::shape_anomaly_date_interval::ser_anomaly_date_interval(
            &mut object_3,
            var_2,
        )?;
        object_3.finish();
    }
    if let Some(var_4) = &input.feedback {
        object.key("Feedback").string(var_4.as_str());
    }
    if let Some(var_5) = &input.total_impact {
        #[allow(unused_mut)]
        let mut object_6 = object.key("TotalImpact").start_object();
        crate::protocol_serde::shape_total_impact_filter::ser_total_impact_filter(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.next_page_token {
        object.key("NextPageToken").string(var_7.as_str());
    }
    if let Some(var_8) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_8).into()),
        );
    }
    Ok(())
}
