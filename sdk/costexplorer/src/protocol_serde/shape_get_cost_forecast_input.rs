// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_cost_forecast_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_cost_forecast::GetCostForecastInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.time_period {
        #[allow(unused_mut)]
        let mut object_2 = object.key("TimePeriod").start_object();
        crate::protocol_serde::shape_date_interval::ser_date_interval(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.metric {
        object.key("Metric").string(var_3.as_str());
    }
    if let Some(var_4) = &input.granularity {
        object.key("Granularity").string(var_4.as_str());
    }
    if let Some(var_5) = &input.filter {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Filter").start_object();
        crate::protocol_serde::shape_expression::ser_expression(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.prediction_interval_level {
        object.key("PredictionIntervalLevel").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    Ok(())
}
