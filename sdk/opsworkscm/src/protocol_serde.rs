// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_associate_node;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_backup;

pub(crate) mod shape_create_server;

pub(crate) mod shape_delete_backup;

pub(crate) mod shape_delete_server;

pub(crate) mod shape_describe_account_attributes;

pub(crate) mod shape_describe_backups;

pub(crate) mod shape_describe_events;

pub(crate) mod shape_describe_node_association_status;

pub(crate) mod shape_describe_servers;

pub(crate) mod shape_disassociate_node;

pub(crate) mod shape_export_server_engine_attribute;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_restore_server;

pub(crate) mod shape_start_maintenance;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_server;

pub(crate) mod shape_update_server_engine_attributes;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_associate_node_input;

pub(crate) mod shape_create_backup_input;

pub(crate) mod shape_create_server_input;

pub(crate) mod shape_delete_backup_input;

pub(crate) mod shape_delete_server_input;

pub(crate) mod shape_describe_backups_input;

pub(crate) mod shape_describe_events_input;

pub(crate) mod shape_describe_node_association_status_input;

pub(crate) mod shape_describe_servers_input;

pub(crate) mod shape_disassociate_node_input;

pub(crate) mod shape_export_server_engine_attribute_input;

pub(crate) mod shape_invalid_next_token_exception;

pub(crate) mod shape_invalid_state_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_resource_already_exists_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_restore_server_input;

pub(crate) mod shape_start_maintenance_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_server_engine_attributes_input;

pub(crate) mod shape_update_server_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_account_attributes;

pub(crate) mod shape_backup;

pub(crate) mod shape_backups;

pub(crate) mod shape_engine_attribute;

pub(crate) mod shape_engine_attributes;

pub(crate) mod shape_server;

pub(crate) mod shape_server_events;

pub(crate) mod shape_servers;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_account_attribute;

pub(crate) mod shape_server_event;

pub(crate) mod shape_strings;
