// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateServerEngineAttributesInput {
    /// <p>The name of the server to update. </p>
    pub server_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the engine attribute to update. </p>
    pub attribute_name: ::std::option::Option<::std::string::String>,
    /// <p>The value to set for the attribute. </p>
    pub attribute_value: ::std::option::Option<::std::string::String>,
}
impl UpdateServerEngineAttributesInput {
    /// <p>The name of the server to update. </p>
    pub fn server_name(&self) -> ::std::option::Option<&str> {
        self.server_name.as_deref()
    }
    /// <p>The name of the engine attribute to update. </p>
    pub fn attribute_name(&self) -> ::std::option::Option<&str> {
        self.attribute_name.as_deref()
    }
    /// <p>The value to set for the attribute. </p>
    pub fn attribute_value(&self) -> ::std::option::Option<&str> {
        self.attribute_value.as_deref()
    }
}
impl UpdateServerEngineAttributesInput {
    /// Creates a new builder-style object to manufacture [`UpdateServerEngineAttributesInput`](crate::operation::update_server_engine_attributes::UpdateServerEngineAttributesInput).
    pub fn builder() -> crate::operation::update_server_engine_attributes::builders::UpdateServerEngineAttributesInputBuilder {
        crate::operation::update_server_engine_attributes::builders::UpdateServerEngineAttributesInputBuilder::default()
    }
}

/// A builder for [`UpdateServerEngineAttributesInput`](crate::operation::update_server_engine_attributes::UpdateServerEngineAttributesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateServerEngineAttributesInputBuilder {
    pub(crate) server_name: ::std::option::Option<::std::string::String>,
    pub(crate) attribute_name: ::std::option::Option<::std::string::String>,
    pub(crate) attribute_value: ::std::option::Option<::std::string::String>,
}
impl UpdateServerEngineAttributesInputBuilder {
    /// <p>The name of the server to update. </p>
    /// This field is required.
    pub fn server_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.server_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the server to update. </p>
    pub fn set_server_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.server_name = input;
        self
    }
    /// <p>The name of the server to update. </p>
    pub fn get_server_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.server_name
    }
    /// <p>The name of the engine attribute to update. </p>
    /// This field is required.
    pub fn attribute_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attribute_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the engine attribute to update. </p>
    pub fn set_attribute_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attribute_name = input;
        self
    }
    /// <p>The name of the engine attribute to update. </p>
    pub fn get_attribute_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.attribute_name
    }
    /// <p>The value to set for the attribute. </p>
    pub fn attribute_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attribute_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The value to set for the attribute. </p>
    pub fn set_attribute_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attribute_value = input;
        self
    }
    /// <p>The value to set for the attribute. </p>
    pub fn get_attribute_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.attribute_value
    }
    /// Consumes the builder and constructs a [`UpdateServerEngineAttributesInput`](crate::operation::update_server_engine_attributes::UpdateServerEngineAttributesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_server_engine_attributes::UpdateServerEngineAttributesInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_server_engine_attributes::UpdateServerEngineAttributesInput {
            server_name: self.server_name,
            attribute_name: self.attribute_name,
            attribute_value: self.attribute_value,
        })
    }
}
