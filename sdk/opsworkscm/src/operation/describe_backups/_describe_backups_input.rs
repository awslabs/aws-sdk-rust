// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeBackupsInput {
    /// <p>Describes a single backup. </p>
    #[doc(hidden)]
    pub backup_id: std::option::Option<std::string::String>,
    /// <p>Returns backups for the server with the specified ServerName. </p>
    #[doc(hidden)]
    pub server_name: std::option::Option<std::string::String>,
    /// <p>This is not currently implemented for <code>DescribeBackups</code> requests.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>This is not currently implemented for <code>DescribeBackups</code> requests.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
}
impl DescribeBackupsInput {
    /// <p>Describes a single backup. </p>
    pub fn backup_id(&self) -> std::option::Option<&str> {
        self.backup_id.as_deref()
    }
    /// <p>Returns backups for the server with the specified ServerName. </p>
    pub fn server_name(&self) -> std::option::Option<&str> {
        self.server_name.as_deref()
    }
    /// <p>This is not currently implemented for <code>DescribeBackups</code> requests.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>This is not currently implemented for <code>DescribeBackups</code> requests.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
}
impl DescribeBackupsInput {
    /// Creates a new builder-style object to manufacture [`DescribeBackupsInput`](crate::operation::describe_backups::DescribeBackupsInput).
    pub fn builder() -> crate::operation::describe_backups::builders::DescribeBackupsInputBuilder {
        crate::operation::describe_backups::builders::DescribeBackupsInputBuilder::default()
    }
}

/// A builder for [`DescribeBackupsInput`](crate::operation::describe_backups::DescribeBackupsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeBackupsInputBuilder {
    pub(crate) backup_id: std::option::Option<std::string::String>,
    pub(crate) server_name: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
}
impl DescribeBackupsInputBuilder {
    /// <p>Describes a single backup. </p>
    pub fn backup_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.backup_id = Some(input.into());
        self
    }
    /// <p>Describes a single backup. </p>
    pub fn set_backup_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.backup_id = input;
        self
    }
    /// <p>Returns backups for the server with the specified ServerName. </p>
    pub fn server_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.server_name = Some(input.into());
        self
    }
    /// <p>Returns backups for the server with the specified ServerName. </p>
    pub fn set_server_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.server_name = input;
        self
    }
    /// <p>This is not currently implemented for <code>DescribeBackups</code> requests.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>This is not currently implemented for <code>DescribeBackups</code> requests.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>This is not currently implemented for <code>DescribeBackups</code> requests.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>This is not currently implemented for <code>DescribeBackups</code> requests.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeBackupsInput`](crate::operation::describe_backups::DescribeBackupsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_backups::DescribeBackupsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_backups::DescribeBackupsInput {
            backup_id: self.backup_id,
            server_name: self.server_name,
            next_token: self.next_token,
            max_results: self.max_results,
        })
    }
}
