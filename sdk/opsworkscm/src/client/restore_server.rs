// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RestoreServer`](crate::client::fluent_builders::RestoreServer) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`backup_id(impl Into<String>)`](crate::client::fluent_builders::RestoreServer::backup_id) / [`set_backup_id(Option<String>)`](crate::client::fluent_builders::RestoreServer::set_backup_id): <p> The ID of the backup that you want to use to restore a server. </p>
    ///   - [`server_name(impl Into<String>)`](crate::client::fluent_builders::RestoreServer::server_name) / [`set_server_name(Option<String>)`](crate::client::fluent_builders::RestoreServer::set_server_name): <p> The name of the server that you want to restore. </p>
    ///   - [`instance_type(impl Into<String>)`](crate::client::fluent_builders::RestoreServer::instance_type) / [`set_instance_type(Option<String>)`](crate::client::fluent_builders::RestoreServer::set_instance_type): <p> The type of instance to restore. Valid values must be specified in the following format: <code>^([cm][34]|t2).*</code> For example, <code>m5.large</code>. Valid values are <code>m5.large</code>, <code>r5.xlarge</code>, and <code>r5.2xlarge</code>. If you do not specify this parameter, RestoreServer uses the instance type from the specified backup. </p>
    ///   - [`key_pair(impl Into<String>)`](crate::client::fluent_builders::RestoreServer::key_pair) / [`set_key_pair(Option<String>)`](crate::client::fluent_builders::RestoreServer::set_key_pair): <p> The name of the key pair to set on the new EC2 instance. This can be helpful if the administrator no longer has the SSH key. </p>
    /// - On success, responds with [`RestoreServerOutput`](crate::output::RestoreServerOutput) with field(s):
    ///   - [`server(Option<Server>)`](crate::output::RestoreServerOutput::server): <p>Describes a configuration management server. </p>
    /// - On failure, responds with [`SdkError<RestoreServerError>`](crate::error::RestoreServerError)
    pub fn restore_server(&self) -> crate::client::fluent_builders::RestoreServer {
        crate::client::fluent_builders::RestoreServer::new(self.handle.clone())
    }
}
