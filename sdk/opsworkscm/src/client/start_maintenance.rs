// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartMaintenance`](crate::operation::start_maintenance::builders::StartMaintenanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`server_name(impl Into<String>)`](crate::operation::start_maintenance::builders::StartMaintenanceFluentBuilder::server_name) / [`set_server_name(Option<String>)`](crate::operation::start_maintenance::builders::StartMaintenanceFluentBuilder::set_server_name):<br>required: **true**<br><p>The name of the server on which to run maintenance. </p><br>
    ///   - [`engine_attributes(EngineAttribute)`](crate::operation::start_maintenance::builders::StartMaintenanceFluentBuilder::engine_attributes) / [`set_engine_attributes(Option<Vec::<EngineAttribute>>)`](crate::operation::start_maintenance::builders::StartMaintenanceFluentBuilder::set_engine_attributes):<br>required: **false**<br><p>Engine attributes that are specific to the server on which you want to run maintenance.</p>  <p class="title"> <b>Attributes accepted in a StartMaintenance request for Chef</b> </p>  <ul>   <li> <p> <code>CHEF_MAJOR_UPGRADE</code>: If a Chef Automate server is eligible for upgrade to Chef Automate 2, add this engine attribute to a <code>StartMaintenance</code> request and set the value to <code>true</code> to upgrade the server to Chef Automate 2. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opscm-a2upgrade.html">Upgrade an AWS OpsWorks for Chef Automate Server to Chef Automate 2</a>. </p> </li>  </ul><br>
    /// - On success, responds with [`StartMaintenanceOutput`](crate::operation::start_maintenance::StartMaintenanceOutput) with field(s):
    ///   - [`server(Option<Server>)`](crate::operation::start_maintenance::StartMaintenanceOutput::server): <p>Contains the response to a <code>StartMaintenance</code> request. </p>
    /// - On failure, responds with [`SdkError<StartMaintenanceError>`](crate::operation::start_maintenance::StartMaintenanceError)
    pub fn start_maintenance(&self) -> crate::operation::start_maintenance::builders::StartMaintenanceFluentBuilder {
        crate::operation::start_maintenance::builders::StartMaintenanceFluentBuilder::new(self.handle.clone())
    }
}
