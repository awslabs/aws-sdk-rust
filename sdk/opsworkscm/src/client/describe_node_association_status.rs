// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeNodeAssociationStatus`](crate::client::fluent_builders::DescribeNodeAssociationStatus) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`node_association_status_token(impl Into<String>)`](crate::client::fluent_builders::DescribeNodeAssociationStatus::node_association_status_token) / [`set_node_association_status_token(Option<String>)`](crate::client::fluent_builders::DescribeNodeAssociationStatus::set_node_association_status_token): <p>The token returned in either the AssociateNodeResponse or the DisassociateNodeResponse. </p>
    ///   - [`server_name(impl Into<String>)`](crate::client::fluent_builders::DescribeNodeAssociationStatus::server_name) / [`set_server_name(Option<String>)`](crate::client::fluent_builders::DescribeNodeAssociationStatus::set_server_name): <p>The name of the server from which to disassociate the node. </p>
    /// - On success, responds with [`DescribeNodeAssociationStatusOutput`](crate::output::DescribeNodeAssociationStatusOutput) with field(s):
    ///   - [`node_association_status(Option<NodeAssociationStatus>)`](crate::output::DescribeNodeAssociationStatusOutput::node_association_status): <p>The status of the association or disassociation request. </p>  <p class="title"> <b>Possible values:</b> </p>  <ul>   <li> <p> <code>SUCCESS</code>: The association or disassociation succeeded. </p> </li>   <li> <p> <code>FAILED</code>: The association or disassociation failed. </p> </li>   <li> <p> <code>IN_PROGRESS</code>: The association or disassociation is still in progress. </p> </li>  </ul>
    ///   - [`engine_attributes(Option<Vec<EngineAttribute>>)`](crate::output::DescribeNodeAssociationStatusOutput::engine_attributes): <p>Attributes specific to the node association. In Puppet, the attibute PUPPET_NODE_CERT contains the signed certificate (the result of the CSR). </p>
    /// - On failure, responds with [`SdkError<DescribeNodeAssociationStatusError>`](crate::error::DescribeNodeAssociationStatusError)
    pub fn describe_node_association_status(
        &self,
    ) -> crate::client::fluent_builders::DescribeNodeAssociationStatus {
        crate::client::fluent_builders::DescribeNodeAssociationStatus::new(self.handle.clone())
    }
}
