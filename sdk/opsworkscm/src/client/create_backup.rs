// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBackup`](crate::client::fluent_builders::CreateBackup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`server_name(impl Into<String>)`](crate::client::fluent_builders::CreateBackup::server_name) / [`set_server_name(Option<String>)`](crate::client::fluent_builders::CreateBackup::set_server_name): <p>The name of the server that you want to back up. </p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateBackup::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateBackup::set_description): <p> A user-defined description of the backup. </p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateBackup::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateBackup::set_tags): <p>A map that contains tag keys and tag values to attach to an AWS OpsWorks-CM server backup.</p>  <ul>   <li> <p>The key cannot be empty.</p> </li>   <li> <p>The key can be a maximum of 127 characters, and can contain only Unicode letters, numbers, or separators, or the following special characters: <code>+ - = . _ : /</code> </p> </li>   <li> <p>The value can be a maximum 255 characters, and contain only Unicode letters, numbers, or separators, or the following special characters: <code>+ - = . _ : /</code> </p> </li>   <li> <p>Leading and trailing white spaces are trimmed from both the key and value.</p> </li>   <li> <p>A maximum of 50 user-applied tags is allowed for tag-supported AWS OpsWorks-CM resources.</p> </li>  </ul>
    /// - On success, responds with [`CreateBackupOutput`](crate::output::CreateBackupOutput) with field(s):
    ///   - [`backup(Option<Backup>)`](crate::output::CreateBackupOutput::backup): <p>Backup created by request.</p>
    /// - On failure, responds with [`SdkError<CreateBackupError>`](crate::error::CreateBackupError)
    pub fn create_backup(&self) -> crate::client::fluent_builders::CreateBackup {
        crate::client::fluent_builders::CreateBackup::new(self.handle.clone())
    }
}
