// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_dataset_org_attributes(
    object_3: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DatasetOrgAttributes,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::DatasetOrgAttributes::Vsam(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_3.key("vsam").start_object();
            crate::protocol_serde::shape_vsam_attributes::ser_vsam_attributes(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::DatasetOrgAttributes::Gdg(inner) => {
            #[allow(unused_mut)]
            let mut object_2 = object_3.key("gdg").start_object();
            crate::protocol_serde::shape_gdg_attributes::ser_gdg_attributes(&mut object_2, inner)?;
            object_2.finish();
        }
        crate::types::DatasetOrgAttributes::Po(inner) => {
            #[allow(unused_mut)]
            let mut object_3 = object_3.key("po").start_object();
            crate::protocol_serde::shape_po_attributes::ser_po_attributes(&mut object_3, inner)?;
            object_3.finish();
        }
        crate::types::DatasetOrgAttributes::Ps(inner) => {
            #[allow(unused_mut)]
            let mut object_4 = object_3.key("ps").start_object();
            crate::protocol_serde::shape_ps_attributes::ser_ps_attributes(&mut object_4, inner)?;
            object_4.finish();
        }
        crate::types::DatasetOrgAttributes::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "DatasetOrgAttributes",
            ))
        }
    }
    Ok(())
}
