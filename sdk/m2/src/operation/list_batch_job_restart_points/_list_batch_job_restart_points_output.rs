// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListBatchJobRestartPointsOutput {
    /// <p>Returns all the batch job steps and related information for a batch job that previously ran.</p>
    pub batch_job_steps: ::std::option::Option<::std::vec::Vec<crate::types::JobStep>>,
    _request_id: Option<String>,
}
impl ListBatchJobRestartPointsOutput {
    /// <p>Returns all the batch job steps and related information for a batch job that previously ran.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.batch_job_steps.is_none()`.
    pub fn batch_job_steps(&self) -> &[crate::types::JobStep] {
        self.batch_job_steps.as_deref().unwrap_or_default()
    }
}
impl ::aws_types::request_id::RequestId for ListBatchJobRestartPointsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListBatchJobRestartPointsOutput {
    /// Creates a new builder-style object to manufacture [`ListBatchJobRestartPointsOutput`](crate::operation::list_batch_job_restart_points::ListBatchJobRestartPointsOutput).
    pub fn builder() -> crate::operation::list_batch_job_restart_points::builders::ListBatchJobRestartPointsOutputBuilder {
        crate::operation::list_batch_job_restart_points::builders::ListBatchJobRestartPointsOutputBuilder::default()
    }
}

/// A builder for [`ListBatchJobRestartPointsOutput`](crate::operation::list_batch_job_restart_points::ListBatchJobRestartPointsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListBatchJobRestartPointsOutputBuilder {
    pub(crate) batch_job_steps: ::std::option::Option<::std::vec::Vec<crate::types::JobStep>>,
    _request_id: Option<String>,
}
impl ListBatchJobRestartPointsOutputBuilder {
    /// Appends an item to `batch_job_steps`.
    ///
    /// To override the contents of this collection use [`set_batch_job_steps`](Self::set_batch_job_steps).
    ///
    /// <p>Returns all the batch job steps and related information for a batch job that previously ran.</p>
    pub fn batch_job_steps(mut self, input: crate::types::JobStep) -> Self {
        let mut v = self.batch_job_steps.unwrap_or_default();
        v.push(input);
        self.batch_job_steps = ::std::option::Option::Some(v);
        self
    }
    /// <p>Returns all the batch job steps and related information for a batch job that previously ran.</p>
    pub fn set_batch_job_steps(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::JobStep>>) -> Self {
        self.batch_job_steps = input;
        self
    }
    /// <p>Returns all the batch job steps and related information for a batch job that previously ran.</p>
    pub fn get_batch_job_steps(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::JobStep>> {
        &self.batch_job_steps
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListBatchJobRestartPointsOutput`](crate::operation::list_batch_job_restart_points::ListBatchJobRestartPointsOutput).
    pub fn build(self) -> crate::operation::list_batch_job_restart_points::ListBatchJobRestartPointsOutput {
        crate::operation::list_batch_job_restart_points::ListBatchJobRestartPointsOutput {
            batch_job_steps: self.batch_job_steps,
            _request_id: self._request_id,
        }
    }
}
