// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetApplicationVersionInput {
    /// <p>The unique identifier of the application.</p>
    #[doc(hidden)]
    pub application_id: std::option::Option<std::string::String>,
    /// <p>The specific version of the application.</p>
    #[doc(hidden)]
    pub application_version: std::option::Option<i32>,
}
impl GetApplicationVersionInput {
    /// <p>The unique identifier of the application.</p>
    pub fn application_id(&self) -> std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>The specific version of the application.</p>
    pub fn application_version(&self) -> std::option::Option<i32> {
        self.application_version
    }
}
impl GetApplicationVersionInput {
    /// Creates a new builder-style object to manufacture [`GetApplicationVersionInput`](crate::operation::get_application_version::GetApplicationVersionInput).
    pub fn builder(
    ) -> crate::operation::get_application_version::builders::GetApplicationVersionInputBuilder
    {
        crate::operation::get_application_version::builders::GetApplicationVersionInputBuilder::default()
    }
}

/// A builder for [`GetApplicationVersionInput`](crate::operation::get_application_version::GetApplicationVersionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetApplicationVersionInputBuilder {
    pub(crate) application_id: std::option::Option<std::string::String>,
    pub(crate) application_version: std::option::Option<i32>,
}
impl GetApplicationVersionInputBuilder {
    /// <p>The unique identifier of the application.</p>
    pub fn application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the application.</p>
    pub fn set_application_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>The specific version of the application.</p>
    pub fn application_version(mut self, input: i32) -> Self {
        self.application_version = Some(input);
        self
    }
    /// <p>The specific version of the application.</p>
    pub fn set_application_version(mut self, input: std::option::Option<i32>) -> Self {
        self.application_version = input;
        self
    }
    /// Consumes the builder and constructs a [`GetApplicationVersionInput`](crate::operation::get_application_version::GetApplicationVersionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_application_version::GetApplicationVersionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_application_version::GetApplicationVersionInput {
                application_id: self.application_id,
                application_version: self.application_version,
            },
        )
    }
}
