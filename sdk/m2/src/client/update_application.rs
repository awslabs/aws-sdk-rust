// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateApplication`](crate::client::fluent_builders::UpdateApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateApplication::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateApplication::set_application_id): <p>The unique identifier of the application you want to update.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateApplication::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateApplication::set_description): <p>The description of the application to update.</p>
    ///   - [`current_application_version(i32)`](crate::client::fluent_builders::UpdateApplication::current_application_version) / [`set_current_application_version(Option<i32>)`](crate::client::fluent_builders::UpdateApplication::set_current_application_version): <p>The current version of the application to update.</p>
    ///   - [`definition(Definition)`](crate::client::fluent_builders::UpdateApplication::definition) / [`set_definition(Option<Definition>)`](crate::client::fluent_builders::UpdateApplication::set_definition): <p>The application definition for this application. You can specify either inline JSON or an S3 bucket location.</p>
    /// - On success, responds with [`UpdateApplicationOutput`](crate::output::UpdateApplicationOutput) with field(s):
    ///   - [`application_version(Option<i32>)`](crate::output::UpdateApplicationOutput::application_version): <p>The new version of the application.</p>
    /// - On failure, responds with [`SdkError<UpdateApplicationError>`](crate::error::UpdateApplicationError)
    pub fn update_application(&self) -> crate::client::fluent_builders::UpdateApplication {
        crate::client::fluent_builders::UpdateApplication::new(self.handle.clone())
    }
}
