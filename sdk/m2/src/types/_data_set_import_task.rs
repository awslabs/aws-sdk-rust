// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a data set import task.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DataSetImportTask {
    /// <p>The identifier of the data set import task.</p>
    #[doc(hidden)]
    pub task_id: std::option::Option<std::string::String>,
    /// <p>The status of the data set import task.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::DataSetTaskLifecycle>,
    /// <p>A summary of the data set import task.</p>
    #[doc(hidden)]
    pub summary: std::option::Option<crate::types::DataSetImportSummary>,
}
impl DataSetImportTask {
    /// <p>The identifier of the data set import task.</p>
    pub fn task_id(&self) -> std::option::Option<&str> {
        self.task_id.as_deref()
    }
    /// <p>The status of the data set import task.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::DataSetTaskLifecycle> {
        self.status.as_ref()
    }
    /// <p>A summary of the data set import task.</p>
    pub fn summary(&self) -> std::option::Option<&crate::types::DataSetImportSummary> {
        self.summary.as_ref()
    }
}
impl DataSetImportTask {
    /// Creates a new builder-style object to manufacture [`DataSetImportTask`](crate::types::DataSetImportTask).
    pub fn builder() -> crate::types::builders::DataSetImportTaskBuilder {
        crate::types::builders::DataSetImportTaskBuilder::default()
    }
}

/// A builder for [`DataSetImportTask`](crate::types::DataSetImportTask).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DataSetImportTaskBuilder {
    pub(crate) task_id: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::DataSetTaskLifecycle>,
    pub(crate) summary: std::option::Option<crate::types::DataSetImportSummary>,
}
impl DataSetImportTaskBuilder {
    /// <p>The identifier of the data set import task.</p>
    pub fn task_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.task_id = Some(input.into());
        self
    }
    /// <p>The identifier of the data set import task.</p>
    pub fn set_task_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.task_id = input;
        self
    }
    /// <p>The status of the data set import task.</p>
    pub fn status(mut self, input: crate::types::DataSetTaskLifecycle) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the data set import task.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::DataSetTaskLifecycle>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>A summary of the data set import task.</p>
    pub fn summary(mut self, input: crate::types::DataSetImportSummary) -> Self {
        self.summary = Some(input);
        self
    }
    /// <p>A summary of the data set import task.</p>
    pub fn set_summary(
        mut self,
        input: std::option::Option<crate::types::DataSetImportSummary>,
    ) -> Self {
        self.summary = input;
        self
    }
    /// Consumes the builder and constructs a [`DataSetImportTask`](crate::types::DataSetImportTask).
    pub fn build(self) -> crate::types::DataSetImportTask {
        crate::types::DataSetImportTask {
            task_id: self.task_id,
            status: self.status,
            summary: self.summary,
        }
    }
}
