// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A batch job identifier in which the batch job to run is identified by the script name.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ScriptBatchJobIdentifier {
    /// <p>The name of the script containing the batch job definition.</p>
    #[doc(hidden)]
    pub script_name: std::option::Option<std::string::String>,
}
impl ScriptBatchJobIdentifier {
    /// <p>The name of the script containing the batch job definition.</p>
    pub fn script_name(&self) -> std::option::Option<&str> {
        self.script_name.as_deref()
    }
}
impl ScriptBatchJobIdentifier {
    /// Creates a new builder-style object to manufacture [`ScriptBatchJobIdentifier`](crate::types::ScriptBatchJobIdentifier).
    pub fn builder() -> crate::types::builders::ScriptBatchJobIdentifierBuilder {
        crate::types::builders::ScriptBatchJobIdentifierBuilder::default()
    }
}

/// A builder for [`ScriptBatchJobIdentifier`](crate::types::ScriptBatchJobIdentifier).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ScriptBatchJobIdentifierBuilder {
    pub(crate) script_name: std::option::Option<std::string::String>,
}
impl ScriptBatchJobIdentifierBuilder {
    /// <p>The name of the script containing the batch job definition.</p>
    pub fn script_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.script_name = Some(input.into());
        self
    }
    /// <p>The name of the script containing the batch job definition.</p>
    pub fn set_script_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.script_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ScriptBatchJobIdentifier`](crate::types::ScriptBatchJobIdentifier).
    pub fn build(self) -> crate::types::ScriptBatchJobIdentifier {
        crate::types::ScriptBatchJobIdentifier {
            script_name: self.script_name,
        }
    }
}
