// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A file containing a batch job definition.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FileBatchJobDefinition {
    /// <p>The name of the file containing the batch job definition.</p>
    #[doc(hidden)]
    pub file_name: std::option::Option<std::string::String>,
    /// <p>The path to the file containing the batch job definition.</p>
    #[doc(hidden)]
    pub folder_path: std::option::Option<std::string::String>,
}
impl FileBatchJobDefinition {
    /// <p>The name of the file containing the batch job definition.</p>
    pub fn file_name(&self) -> std::option::Option<&str> {
        self.file_name.as_deref()
    }
    /// <p>The path to the file containing the batch job definition.</p>
    pub fn folder_path(&self) -> std::option::Option<&str> {
        self.folder_path.as_deref()
    }
}
impl FileBatchJobDefinition {
    /// Creates a new builder-style object to manufacture [`FileBatchJobDefinition`](crate::types::FileBatchJobDefinition).
    pub fn builder() -> crate::types::builders::FileBatchJobDefinitionBuilder {
        crate::types::builders::FileBatchJobDefinitionBuilder::default()
    }
}

/// A builder for [`FileBatchJobDefinition`](crate::types::FileBatchJobDefinition).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FileBatchJobDefinitionBuilder {
    pub(crate) file_name: std::option::Option<std::string::String>,
    pub(crate) folder_path: std::option::Option<std::string::String>,
}
impl FileBatchJobDefinitionBuilder {
    /// <p>The name of the file containing the batch job definition.</p>
    pub fn file_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.file_name = Some(input.into());
        self
    }
    /// <p>The name of the file containing the batch job definition.</p>
    pub fn set_file_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.file_name = input;
        self
    }
    /// <p>The path to the file containing the batch job definition.</p>
    pub fn folder_path(mut self, input: impl Into<std::string::String>) -> Self {
        self.folder_path = Some(input.into());
        self
    }
    /// <p>The path to the file containing the batch job definition.</p>
    pub fn set_folder_path(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.folder_path = input;
        self
    }
    /// Consumes the builder and constructs a [`FileBatchJobDefinition`](crate::types::FileBatchJobDefinition).
    pub fn build(self) -> crate::types::FileBatchJobDefinition {
        crate::types::FileBatchJobDefinition {
            file_name: self.file_name,
            folder_path: self.folder_path,
        }
    }
}
