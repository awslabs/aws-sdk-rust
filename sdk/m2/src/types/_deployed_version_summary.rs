// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains a summary of a deployed application.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeployedVersionSummary {
    /// <p>The version of the deployed application.</p>
    #[doc(hidden)]
    pub application_version: std::option::Option<i32>,
    /// <p>The status of the deployment.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::DeploymentLifecycle>,
    /// <p>The reason for the reported status.</p>
    #[doc(hidden)]
    pub status_reason: std::option::Option<std::string::String>,
}
impl DeployedVersionSummary {
    /// <p>The version of the deployed application.</p>
    pub fn application_version(&self) -> std::option::Option<i32> {
        self.application_version
    }
    /// <p>The status of the deployment.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::DeploymentLifecycle> {
        self.status.as_ref()
    }
    /// <p>The reason for the reported status.</p>
    pub fn status_reason(&self) -> std::option::Option<&str> {
        self.status_reason.as_deref()
    }
}
impl DeployedVersionSummary {
    /// Creates a new builder-style object to manufacture [`DeployedVersionSummary`](crate::types::DeployedVersionSummary).
    pub fn builder() -> crate::types::builders::DeployedVersionSummaryBuilder {
        crate::types::builders::DeployedVersionSummaryBuilder::default()
    }
}

/// A builder for [`DeployedVersionSummary`](crate::types::DeployedVersionSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeployedVersionSummaryBuilder {
    pub(crate) application_version: std::option::Option<i32>,
    pub(crate) status: std::option::Option<crate::types::DeploymentLifecycle>,
    pub(crate) status_reason: std::option::Option<std::string::String>,
}
impl DeployedVersionSummaryBuilder {
    /// <p>The version of the deployed application.</p>
    pub fn application_version(mut self, input: i32) -> Self {
        self.application_version = Some(input);
        self
    }
    /// <p>The version of the deployed application.</p>
    pub fn set_application_version(mut self, input: std::option::Option<i32>) -> Self {
        self.application_version = input;
        self
    }
    /// <p>The status of the deployment.</p>
    pub fn status(mut self, input: crate::types::DeploymentLifecycle) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the deployment.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::DeploymentLifecycle>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The reason for the reported status.</p>
    pub fn status_reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.status_reason = Some(input.into());
        self
    }
    /// <p>The reason for the reported status.</p>
    pub fn set_status_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status_reason = input;
        self
    }
    /// Consumes the builder and constructs a [`DeployedVersionSummary`](crate::types::DeployedVersionSummary).
    pub fn build(self) -> crate::types::DeployedVersionSummary {
        crate::types::DeployedVersionSummary {
            application_version: self.application_version,
            status: self.status,
            status_reason: self.status_reason,
        }
    }
}
