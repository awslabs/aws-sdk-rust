// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The scheduled maintenance for a runtime engine.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PendingMaintenance {
    /// <p>The maintenance schedule for the runtime engine version.</p>
    #[doc(hidden)]
    pub schedule: std::option::Option<crate::types::MaintenanceSchedule>,
    /// <p>The specific runtime engine that the maintenance schedule applies to.</p>
    #[doc(hidden)]
    pub engine_version: std::option::Option<std::string::String>,
}
impl PendingMaintenance {
    /// <p>The maintenance schedule for the runtime engine version.</p>
    pub fn schedule(&self) -> std::option::Option<&crate::types::MaintenanceSchedule> {
        self.schedule.as_ref()
    }
    /// <p>The specific runtime engine that the maintenance schedule applies to.</p>
    pub fn engine_version(&self) -> std::option::Option<&str> {
        self.engine_version.as_deref()
    }
}
impl PendingMaintenance {
    /// Creates a new builder-style object to manufacture [`PendingMaintenance`](crate::types::PendingMaintenance).
    pub fn builder() -> crate::types::builders::PendingMaintenanceBuilder {
        crate::types::builders::PendingMaintenanceBuilder::default()
    }
}

/// A builder for [`PendingMaintenance`](crate::types::PendingMaintenance).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PendingMaintenanceBuilder {
    pub(crate) schedule: std::option::Option<crate::types::MaintenanceSchedule>,
    pub(crate) engine_version: std::option::Option<std::string::String>,
}
impl PendingMaintenanceBuilder {
    /// <p>The maintenance schedule for the runtime engine version.</p>
    pub fn schedule(mut self, input: crate::types::MaintenanceSchedule) -> Self {
        self.schedule = Some(input);
        self
    }
    /// <p>The maintenance schedule for the runtime engine version.</p>
    pub fn set_schedule(
        mut self,
        input: std::option::Option<crate::types::MaintenanceSchedule>,
    ) -> Self {
        self.schedule = input;
        self
    }
    /// <p>The specific runtime engine that the maintenance schedule applies to.</p>
    pub fn engine_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.engine_version = Some(input.into());
        self
    }
    /// <p>The specific runtime engine that the maintenance schedule applies to.</p>
    pub fn set_engine_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.engine_version = input;
        self
    }
    /// Consumes the builder and constructs a [`PendingMaintenance`](crate::types::PendingMaintenance).
    pub fn build(self) -> crate::types::PendingMaintenance {
        crate::types::PendingMaintenance {
            schedule: self.schedule,
            engine_version: self.engine_version,
        }
    }
}
