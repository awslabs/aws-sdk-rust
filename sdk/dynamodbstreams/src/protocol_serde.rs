// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_describe_stream;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_get_records;

pub(crate) mod shape_get_shard_iterator;

pub(crate) mod shape_list_streams;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_describe_stream_input;

pub(crate) mod shape_expired_iterator_exception;

pub(crate) mod shape_get_records_input;

pub(crate) mod shape_get_shard_iterator_input;

pub(crate) mod shape_internal_server_error;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_streams_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_trimmed_data_access_exception;

pub(crate) mod shape_record_list;

pub(crate) mod shape_stream_description;

pub(crate) mod shape_stream_list;

pub(crate) mod shape_key_schema;

pub(crate) mod shape_record;

pub(crate) mod shape_shard_description_list;

pub(crate) mod shape_stream;

pub(crate) mod shape_identity;

pub(crate) mod shape_key_schema_element;

pub(crate) mod shape_shard;

pub(crate) mod shape_stream_record;

pub(crate) mod shape_attribute_map;

pub(crate) mod shape_sequence_number_range;

pub(crate) mod shape_attribute_value;

pub(crate) mod shape_binary_set_attribute_value;

pub(crate) mod shape_list_attribute_value;

pub(crate) mod shape_map_attribute_value;

pub(crate) mod shape_number_set_attribute_value;

pub(crate) mod shape_string_set_attribute_value;
