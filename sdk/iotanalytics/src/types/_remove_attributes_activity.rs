// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An activity that removes attributes from a message.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RemoveAttributesActivity {
    /// <p>The name of the <code>removeAttributes</code> activity.</p>
    pub name: ::std::string::String,
    /// <p>A list of 1-50 attributes to remove from the message.</p>
    pub attributes: ::std::vec::Vec<::std::string::String>,
    /// <p>The next activity in the pipeline.</p>
    pub next: ::std::option::Option<::std::string::String>,
}
impl RemoveAttributesActivity {
    /// <p>The name of the <code>removeAttributes</code> activity.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>A list of 1-50 attributes to remove from the message.</p>
    pub fn attributes(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.attributes.deref()
    }
    /// <p>The next activity in the pipeline.</p>
    pub fn next(&self) -> ::std::option::Option<&str> {
        self.next.as_deref()
    }
}
impl RemoveAttributesActivity {
    /// Creates a new builder-style object to manufacture [`RemoveAttributesActivity`](crate::types::RemoveAttributesActivity).
    pub fn builder() -> crate::types::builders::RemoveAttributesActivityBuilder {
        crate::types::builders::RemoveAttributesActivityBuilder::default()
    }
}

/// A builder for [`RemoveAttributesActivity`](crate::types::RemoveAttributesActivity).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RemoveAttributesActivityBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) attributes: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) next: ::std::option::Option<::std::string::String>,
}
impl RemoveAttributesActivityBuilder {
    /// <p>The name of the <code>removeAttributes</code> activity.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the <code>removeAttributes</code> activity.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the <code>removeAttributes</code> activity.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Appends an item to `attributes`.
    ///
    /// To override the contents of this collection use [`set_attributes`](Self::set_attributes).
    ///
    /// <p>A list of 1-50 attributes to remove from the message.</p>
    pub fn attributes(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.attributes.unwrap_or_default();
        v.push(input.into());
        self.attributes = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of 1-50 attributes to remove from the message.</p>
    pub fn set_attributes(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.attributes = input;
        self
    }
    /// <p>A list of 1-50 attributes to remove from the message.</p>
    pub fn get_attributes(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.attributes
    }
    /// <p>The next activity in the pipeline.</p>
    pub fn next(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The next activity in the pipeline.</p>
    pub fn set_next(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next = input;
        self
    }
    /// <p>The next activity in the pipeline.</p>
    pub fn get_next(&self) -> &::std::option::Option<::std::string::String> {
        &self.next
    }
    /// Consumes the builder and constructs a [`RemoveAttributesActivity`](crate::types::RemoveAttributesActivity).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::RemoveAttributesActivityBuilder::name)
    /// - [`attributes`](crate::types::builders::RemoveAttributesActivityBuilder::attributes)
    pub fn build(self) -> ::std::result::Result<crate::types::RemoveAttributesActivity, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RemoveAttributesActivity {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building RemoveAttributesActivity",
                )
            })?,
            attributes: self.attributes.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "attributes",
                    "attributes was not specified but it is required when building RemoveAttributesActivity",
                )
            })?,
            next: self.next,
        })
    }
}
