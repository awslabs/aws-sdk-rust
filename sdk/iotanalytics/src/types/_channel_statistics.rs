// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Statistics information about the channel.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ChannelStatistics {
    /// <p>The estimated size of the channel.</p>
    #[doc(hidden)]
    pub size: std::option::Option<crate::types::EstimatedResourceSize>,
}
impl ChannelStatistics {
    /// <p>The estimated size of the channel.</p>
    pub fn size(&self) -> std::option::Option<&crate::types::EstimatedResourceSize> {
        self.size.as_ref()
    }
}
impl ChannelStatistics {
    /// Creates a new builder-style object to manufacture [`ChannelStatistics`](crate::types::ChannelStatistics).
    pub fn builder() -> crate::types::builders::ChannelStatisticsBuilder {
        crate::types::builders::ChannelStatisticsBuilder::default()
    }
}

/// A builder for [`ChannelStatistics`](crate::types::ChannelStatistics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ChannelStatisticsBuilder {
    pub(crate) size: std::option::Option<crate::types::EstimatedResourceSize>,
}
impl ChannelStatisticsBuilder {
    /// <p>The estimated size of the channel.</p>
    pub fn size(mut self, input: crate::types::EstimatedResourceSize) -> Self {
        self.size = Some(input);
        self
    }
    /// <p>The estimated size of the channel.</p>
    pub fn set_size(
        mut self,
        input: std::option::Option<crate::types::EstimatedResourceSize>,
    ) -> Self {
        self.size = input;
        self
    }
    /// Consumes the builder and constructs a [`ChannelStatistics`](crate::types::ChannelStatistics).
    pub fn build(self) -> crate::types::ChannelStatistics {
        crate::types::ChannelStatistics { size: self.size }
    }
}
