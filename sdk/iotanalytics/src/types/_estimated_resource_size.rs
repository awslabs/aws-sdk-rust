// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The estimated size of the resource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EstimatedResourceSize {
    /// <p>The estimated size of the resource, in bytes.</p>
    #[doc(hidden)]
    pub estimated_size_in_bytes: std::option::Option<f64>,
    /// <p>The time when the estimate of the size of the resource was made.</p>
    #[doc(hidden)]
    pub estimated_on: std::option::Option<aws_smithy_types::DateTime>,
}
impl EstimatedResourceSize {
    /// <p>The estimated size of the resource, in bytes.</p>
    pub fn estimated_size_in_bytes(&self) -> std::option::Option<f64> {
        self.estimated_size_in_bytes
    }
    /// <p>The time when the estimate of the size of the resource was made.</p>
    pub fn estimated_on(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.estimated_on.as_ref()
    }
}
impl EstimatedResourceSize {
    /// Creates a new builder-style object to manufacture [`EstimatedResourceSize`](crate::types::EstimatedResourceSize).
    pub fn builder() -> crate::types::builders::EstimatedResourceSizeBuilder {
        crate::types::builders::EstimatedResourceSizeBuilder::default()
    }
}

/// A builder for [`EstimatedResourceSize`](crate::types::EstimatedResourceSize).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EstimatedResourceSizeBuilder {
    pub(crate) estimated_size_in_bytes: std::option::Option<f64>,
    pub(crate) estimated_on: std::option::Option<aws_smithy_types::DateTime>,
}
impl EstimatedResourceSizeBuilder {
    /// <p>The estimated size of the resource, in bytes.</p>
    pub fn estimated_size_in_bytes(mut self, input: f64) -> Self {
        self.estimated_size_in_bytes = Some(input);
        self
    }
    /// <p>The estimated size of the resource, in bytes.</p>
    pub fn set_estimated_size_in_bytes(mut self, input: std::option::Option<f64>) -> Self {
        self.estimated_size_in_bytes = input;
        self
    }
    /// <p>The time when the estimate of the size of the resource was made.</p>
    pub fn estimated_on(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.estimated_on = Some(input);
        self
    }
    /// <p>The time when the estimate of the size of the resource was made.</p>
    pub fn set_estimated_on(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.estimated_on = input;
        self
    }
    /// Consumes the builder and constructs a [`EstimatedResourceSize`](crate::types::EstimatedResourceSize).
    pub fn build(self) -> crate::types::EstimatedResourceSize {
        crate::types::EstimatedResourceSize {
            estimated_size_in_bytes: self.estimated_size_in_bytes,
            estimated_on: self.estimated_on,
        }
    }
}
