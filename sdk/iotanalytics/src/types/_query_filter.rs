// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information that is used to filter message data, to segregate it according to the timeframe in which it arrives.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct QueryFilter {
    /// <p>Used to limit data to that which has arrived since the last execution of the action.</p>
    #[doc(hidden)]
    pub delta_time: std::option::Option<crate::types::DeltaTime>,
}
impl QueryFilter {
    /// <p>Used to limit data to that which has arrived since the last execution of the action.</p>
    pub fn delta_time(&self) -> std::option::Option<&crate::types::DeltaTime> {
        self.delta_time.as_ref()
    }
}
impl QueryFilter {
    /// Creates a new builder-style object to manufacture [`QueryFilter`](crate::types::QueryFilter).
    pub fn builder() -> crate::types::builders::QueryFilterBuilder {
        crate::types::builders::QueryFilterBuilder::default()
    }
}

/// A builder for [`QueryFilter`](crate::types::QueryFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct QueryFilterBuilder {
    pub(crate) delta_time: std::option::Option<crate::types::DeltaTime>,
}
impl QueryFilterBuilder {
    /// <p>Used to limit data to that which has arrived since the last execution of the action.</p>
    pub fn delta_time(mut self, input: crate::types::DeltaTime) -> Self {
        self.delta_time = Some(input);
        self
    }
    /// <p>Used to limit data to that which has arrived since the last execution of the action.</p>
    pub fn set_delta_time(mut self, input: std::option::Option<crate::types::DeltaTime>) -> Self {
        self.delta_time = input;
        self
    }
    /// Consumes the builder and constructs a [`QueryFilter`](crate::types::QueryFilter).
    pub fn build(self) -> crate::types::QueryFilter {
        crate::types::QueryFilter {
            delta_time: self.delta_time,
        }
    }
}
