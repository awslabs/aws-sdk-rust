// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains the name and configuration information of a late data rule.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LateDataRule {
    /// <p>The name of the late data rule.</p>
    #[doc(hidden)]
    pub rule_name: std::option::Option<std::string::String>,
    /// <p>The information needed to configure the late data rule.</p>
    #[doc(hidden)]
    pub rule_configuration: std::option::Option<crate::types::LateDataRuleConfiguration>,
}
impl LateDataRule {
    /// <p>The name of the late data rule.</p>
    pub fn rule_name(&self) -> std::option::Option<&str> {
        self.rule_name.as_deref()
    }
    /// <p>The information needed to configure the late data rule.</p>
    pub fn rule_configuration(
        &self,
    ) -> std::option::Option<&crate::types::LateDataRuleConfiguration> {
        self.rule_configuration.as_ref()
    }
}
impl LateDataRule {
    /// Creates a new builder-style object to manufacture [`LateDataRule`](crate::types::LateDataRule).
    pub fn builder() -> crate::types::builders::LateDataRuleBuilder {
        crate::types::builders::LateDataRuleBuilder::default()
    }
}

/// A builder for [`LateDataRule`](crate::types::LateDataRule).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LateDataRuleBuilder {
    pub(crate) rule_name: std::option::Option<std::string::String>,
    pub(crate) rule_configuration: std::option::Option<crate::types::LateDataRuleConfiguration>,
}
impl LateDataRuleBuilder {
    /// <p>The name of the late data rule.</p>
    pub fn rule_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.rule_name = Some(input.into());
        self
    }
    /// <p>The name of the late data rule.</p>
    pub fn set_rule_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.rule_name = input;
        self
    }
    /// <p>The information needed to configure the late data rule.</p>
    pub fn rule_configuration(mut self, input: crate::types::LateDataRuleConfiguration) -> Self {
        self.rule_configuration = Some(input);
        self
    }
    /// <p>The information needed to configure the late data rule.</p>
    pub fn set_rule_configuration(
        mut self,
        input: std::option::Option<crate::types::LateDataRuleConfiguration>,
    ) -> Self {
        self.rule_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`LateDataRule`](crate::types::LateDataRule).
    pub fn build(self) -> crate::types::LateDataRule {
        crate::types::LateDataRule {
            rule_name: self.rule_name,
            rule_configuration: self.rule_configuration,
        }
    }
}
