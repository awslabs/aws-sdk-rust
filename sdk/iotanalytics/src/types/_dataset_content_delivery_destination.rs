// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The destination to which dataset contents are delivered.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DatasetContentDeliveryDestination {
    /// <p>Configuration information for delivery of dataset contents to IoT Events.</p>
    #[doc(hidden)]
    pub iot_events_destination_configuration:
        std::option::Option<crate::types::IotEventsDestinationConfiguration>,
    /// <p>Configuration information for delivery of dataset contents to Amazon S3.</p>
    #[doc(hidden)]
    pub s3_destination_configuration: std::option::Option<crate::types::S3DestinationConfiguration>,
}
impl DatasetContentDeliveryDestination {
    /// <p>Configuration information for delivery of dataset contents to IoT Events.</p>
    pub fn iot_events_destination_configuration(
        &self,
    ) -> std::option::Option<&crate::types::IotEventsDestinationConfiguration> {
        self.iot_events_destination_configuration.as_ref()
    }
    /// <p>Configuration information for delivery of dataset contents to Amazon S3.</p>
    pub fn s3_destination_configuration(
        &self,
    ) -> std::option::Option<&crate::types::S3DestinationConfiguration> {
        self.s3_destination_configuration.as_ref()
    }
}
impl DatasetContentDeliveryDestination {
    /// Creates a new builder-style object to manufacture [`DatasetContentDeliveryDestination`](crate::types::DatasetContentDeliveryDestination).
    pub fn builder() -> crate::types::builders::DatasetContentDeliveryDestinationBuilder {
        crate::types::builders::DatasetContentDeliveryDestinationBuilder::default()
    }
}

/// A builder for [`DatasetContentDeliveryDestination`](crate::types::DatasetContentDeliveryDestination).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DatasetContentDeliveryDestinationBuilder {
    pub(crate) iot_events_destination_configuration:
        std::option::Option<crate::types::IotEventsDestinationConfiguration>,
    pub(crate) s3_destination_configuration:
        std::option::Option<crate::types::S3DestinationConfiguration>,
}
impl DatasetContentDeliveryDestinationBuilder {
    /// <p>Configuration information for delivery of dataset contents to IoT Events.</p>
    pub fn iot_events_destination_configuration(
        mut self,
        input: crate::types::IotEventsDestinationConfiguration,
    ) -> Self {
        self.iot_events_destination_configuration = Some(input);
        self
    }
    /// <p>Configuration information for delivery of dataset contents to IoT Events.</p>
    pub fn set_iot_events_destination_configuration(
        mut self,
        input: std::option::Option<crate::types::IotEventsDestinationConfiguration>,
    ) -> Self {
        self.iot_events_destination_configuration = input;
        self
    }
    /// <p>Configuration information for delivery of dataset contents to Amazon S3.</p>
    pub fn s3_destination_configuration(
        mut self,
        input: crate::types::S3DestinationConfiguration,
    ) -> Self {
        self.s3_destination_configuration = Some(input);
        self
    }
    /// <p>Configuration information for delivery of dataset contents to Amazon S3.</p>
    pub fn set_s3_destination_configuration(
        mut self,
        input: std::option::Option<crate::types::S3DestinationConfiguration>,
    ) -> Self {
        self.s3_destination_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`DatasetContentDeliveryDestination`](crate::types::DatasetContentDeliveryDestination).
    pub fn build(self) -> crate::types::DatasetContentDeliveryDestination {
        crate::types::DatasetContentDeliveryDestination {
            iot_events_destination_configuration: self.iot_events_destination_configuration,
            s3_destination_configuration: self.s3_destination_configuration,
        }
    }
}
