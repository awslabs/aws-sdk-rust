// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDatastore`](crate::client::fluent_builders::UpdateDatastore) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`datastore_name(impl Into<String>)`](crate::client::fluent_builders::UpdateDatastore::datastore_name) / [`set_datastore_name(Option<String>)`](crate::client::fluent_builders::UpdateDatastore::set_datastore_name): <p>The name of the data store to be updated.</p>
    ///   - [`retention_period(RetentionPeriod)`](crate::client::fluent_builders::UpdateDatastore::retention_period) / [`set_retention_period(Option<RetentionPeriod>)`](crate::client::fluent_builders::UpdateDatastore::set_retention_period): <p>How long, in days, message data is kept for the data store. The retention period can't be updated if the data store's Amazon S3 storage is customer-managed.</p>
    ///   - [`datastore_storage(DatastoreStorage)`](crate::client::fluent_builders::UpdateDatastore::datastore_storage) / [`set_datastore_storage(Option<DatastoreStorage>)`](crate::client::fluent_builders::UpdateDatastore::set_datastore_storage): <p>Where data in a data store is stored.. You can choose <code>serviceManagedS3</code> storage, <code>customerManagedS3</code> storage, or <code>iotSiteWiseMultiLayerStorage</code> storage. The default is <code>serviceManagedS3</code>. You can't change the choice of Amazon S3 storage after your data store is created. </p>
    ///   - [`file_format_configuration(FileFormatConfiguration)`](crate::client::fluent_builders::UpdateDatastore::file_format_configuration) / [`set_file_format_configuration(Option<FileFormatConfiguration>)`](crate::client::fluent_builders::UpdateDatastore::set_file_format_configuration): <p>Contains the configuration information of file formats. IoT Analytics data stores support JSON and <a href="https://parquet.apache.org/">Parquet</a>.</p>  <p>The default file format is JSON. You can specify only one format.</p>  <p>You can't change the file format after you create the data store.</p>
    /// - On success, responds with [`UpdateDatastoreOutput`](crate::output::UpdateDatastoreOutput)
    /// - On failure, responds with [`SdkError<UpdateDatastoreError>`](crate::error::UpdateDatastoreError)
    pub fn update_datastore(&self) -> crate::client::fluent_builders::UpdateDatastore {
        crate::client::fluent_builders::UpdateDatastore::new(self.handle.clone())
    }
}
