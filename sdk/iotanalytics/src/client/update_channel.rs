// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateChannel`](crate::client::fluent_builders::UpdateChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`channel_name(impl Into<String>)`](crate::client::fluent_builders::UpdateChannel::channel_name) / [`set_channel_name(Option<String>)`](crate::client::fluent_builders::UpdateChannel::set_channel_name): <p>The name of the channel to be updated.</p>
    ///   - [`channel_storage(ChannelStorage)`](crate::client::fluent_builders::UpdateChannel::channel_storage) / [`set_channel_storage(Option<ChannelStorage>)`](crate::client::fluent_builders::UpdateChannel::set_channel_storage): <p>Where channel data is stored. You can choose one of <code>serviceManagedS3</code> or <code>customerManagedS3</code> storage. If not specified, the default is <code>serviceManagedS3</code>. You can't change this storage option after the channel is created.</p>
    ///   - [`retention_period(RetentionPeriod)`](crate::client::fluent_builders::UpdateChannel::retention_period) / [`set_retention_period(Option<RetentionPeriod>)`](crate::client::fluent_builders::UpdateChannel::set_retention_period): <p>How long, in days, message data is kept for the channel. The retention period can't be updated if the channel's Amazon S3 storage is customer-managed.</p>
    /// - On success, responds with [`UpdateChannelOutput`](crate::output::UpdateChannelOutput)
    /// - On failure, responds with [`SdkError<UpdateChannelError>`](crate::error::UpdateChannelError)
    pub fn update_channel(&self) -> crate::client::fluent_builders::UpdateChannel {
        crate::client::fluent_builders::UpdateChannel::new(self.handle.clone())
    }
}
