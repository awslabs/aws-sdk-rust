// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::update_dataset::_update_dataset_output::UpdateDatasetOutputBuilder;

pub use crate::operation::update_dataset::_update_dataset_input::UpdateDatasetInputBuilder;

/// Fluent builder constructing a request to `UpdateDataset`.
///
/// <p>Updates the settings of a dataset.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct UpdateDatasetFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::update_dataset::builders::UpdateDatasetInputBuilder,
}
impl UpdateDatasetFluentBuilder {
    /// Creates a new `UpdateDataset`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::update_dataset::UpdateDataset,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<crate::operation::update_dataset::UpdateDatasetError>,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::update_dataset::UpdateDatasetOutput,
        aws_smithy_http::result::SdkError<crate::operation::update_dataset::UpdateDatasetError>,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The name of the dataset to update.</p>
    pub fn dataset_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.dataset_name(input.into());
        self
    }
    /// <p>The name of the dataset to update.</p>
    pub fn set_dataset_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_dataset_name(input);
        self
    }
    /// Appends an item to `actions`.
    ///
    /// To override the contents of this collection use [`set_actions`](Self::set_actions).
    ///
    /// <p>A list of <code>DatasetAction</code> objects.</p>
    pub fn actions(mut self, input: crate::types::DatasetAction) -> Self {
        self.inner = self.inner.actions(input);
        self
    }
    /// <p>A list of <code>DatasetAction</code> objects.</p>
    pub fn set_actions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DatasetAction>>,
    ) -> Self {
        self.inner = self.inner.set_actions(input);
        self
    }
    /// Appends an item to `triggers`.
    ///
    /// To override the contents of this collection use [`set_triggers`](Self::set_triggers).
    ///
    /// <p>A list of <code>DatasetTrigger</code> objects. The list can be empty or can contain up to five <code>DatasetTrigger</code> objects.</p>
    pub fn triggers(mut self, input: crate::types::DatasetTrigger) -> Self {
        self.inner = self.inner.triggers(input);
        self
    }
    /// <p>A list of <code>DatasetTrigger</code> objects. The list can be empty or can contain up to five <code>DatasetTrigger</code> objects.</p>
    pub fn set_triggers(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DatasetTrigger>>,
    ) -> Self {
        self.inner = self.inner.set_triggers(input);
        self
    }
    /// Appends an item to `contentDeliveryRules`.
    ///
    /// To override the contents of this collection use [`set_content_delivery_rules`](Self::set_content_delivery_rules).
    ///
    /// <p>When dataset contents are created, they are delivered to destinations specified here.</p>
    pub fn content_delivery_rules(
        mut self,
        input: crate::types::DatasetContentDeliveryRule,
    ) -> Self {
        self.inner = self.inner.content_delivery_rules(input);
        self
    }
    /// <p>When dataset contents are created, they are delivered to destinations specified here.</p>
    pub fn set_content_delivery_rules(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DatasetContentDeliveryRule>>,
    ) -> Self {
        self.inner = self.inner.set_content_delivery_rules(input);
        self
    }
    /// <p>How long, in days, dataset contents are kept for the dataset.</p>
    pub fn retention_period(mut self, input: crate::types::RetentionPeriod) -> Self {
        self.inner = self.inner.retention_period(input);
        self
    }
    /// <p>How long, in days, dataset contents are kept for the dataset.</p>
    pub fn set_retention_period(
        mut self,
        input: std::option::Option<crate::types::RetentionPeriod>,
    ) -> Self {
        self.inner = self.inner.set_retention_period(input);
        self
    }
    /// <p>Optional. How many versions of dataset contents are kept. If not specified or set to null, only the latest version plus the latest succeeded version (if they are different) are kept for the time period specified by the <code>retentionPeriod</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions">Keeping Multiple Versions of IoT Analytics datasets</a> in the <i>IoT Analytics User Guide</i>.</p>
    pub fn versioning_configuration(
        mut self,
        input: crate::types::VersioningConfiguration,
    ) -> Self {
        self.inner = self.inner.versioning_configuration(input);
        self
    }
    /// <p>Optional. How many versions of dataset contents are kept. If not specified or set to null, only the latest version plus the latest succeeded version (if they are different) are kept for the time period specified by the <code>retentionPeriod</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions">Keeping Multiple Versions of IoT Analytics datasets</a> in the <i>IoT Analytics User Guide</i>.</p>
    pub fn set_versioning_configuration(
        mut self,
        input: std::option::Option<crate::types::VersioningConfiguration>,
    ) -> Self {
        self.inner = self.inner.set_versioning_configuration(input);
        self
    }
    /// Appends an item to `lateDataRules`.
    ///
    /// To override the contents of this collection use [`set_late_data_rules`](Self::set_late_data_rules).
    ///
    /// <p>A list of data rules that send notifications to CloudWatch, when data arrives late. To specify <code>lateDataRules</code>, the dataset must use a <a href="https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeltaTime.html">DeltaTimer</a> filter.</p>
    pub fn late_data_rules(mut self, input: crate::types::LateDataRule) -> Self {
        self.inner = self.inner.late_data_rules(input);
        self
    }
    /// <p>A list of data rules that send notifications to CloudWatch, when data arrives late. To specify <code>lateDataRules</code>, the dataset must use a <a href="https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeltaTime.html">DeltaTimer</a> filter.</p>
    pub fn set_late_data_rules(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::LateDataRule>>,
    ) -> Self {
        self.inner = self.inner.set_late_data_rules(input);
        self
    }
}
