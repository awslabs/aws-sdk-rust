// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutLoggingOptionsInput {
    /// <p>The new values of the IoT Analytics logging options.</p>
    #[doc(hidden)]
    pub logging_options: std::option::Option<crate::types::LoggingOptions>,
}
impl PutLoggingOptionsInput {
    /// <p>The new values of the IoT Analytics logging options.</p>
    pub fn logging_options(&self) -> std::option::Option<&crate::types::LoggingOptions> {
        self.logging_options.as_ref()
    }
}
impl PutLoggingOptionsInput {
    /// Creates a new builder-style object to manufacture [`PutLoggingOptionsInput`](crate::operation::put_logging_options::PutLoggingOptionsInput).
    pub fn builder(
    ) -> crate::operation::put_logging_options::builders::PutLoggingOptionsInputBuilder {
        crate::operation::put_logging_options::builders::PutLoggingOptionsInputBuilder::default()
    }
}

/// A builder for [`PutLoggingOptionsInput`](crate::operation::put_logging_options::PutLoggingOptionsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutLoggingOptionsInputBuilder {
    pub(crate) logging_options: std::option::Option<crate::types::LoggingOptions>,
}
impl PutLoggingOptionsInputBuilder {
    /// <p>The new values of the IoT Analytics logging options.</p>
    pub fn logging_options(mut self, input: crate::types::LoggingOptions) -> Self {
        self.logging_options = Some(input);
        self
    }
    /// <p>The new values of the IoT Analytics logging options.</p>
    pub fn set_logging_options(
        mut self,
        input: std::option::Option<crate::types::LoggingOptions>,
    ) -> Self {
        self.logging_options = input;
        self
    }
    /// Consumes the builder and constructs a [`PutLoggingOptionsInput`](crate::operation::put_logging_options::PutLoggingOptionsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_logging_options::PutLoggingOptionsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_logging_options::PutLoggingOptionsInput {
                logging_options: self.logging_options,
            },
        )
    }
}
