// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDatasetContentOutput {
    /// <p>A list of <code>DatasetEntry</code> objects.</p>
    #[doc(hidden)]
    pub entries: std::option::Option<std::vec::Vec<crate::types::DatasetEntry>>,
    /// <p>The time when the request was made.</p>
    #[doc(hidden)]
    pub timestamp: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status of the dataset content.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::DatasetContentStatus>,
    _request_id: Option<String>,
}
impl GetDatasetContentOutput {
    /// <p>A list of <code>DatasetEntry</code> objects.</p>
    pub fn entries(&self) -> std::option::Option<&[crate::types::DatasetEntry]> {
        self.entries.as_deref()
    }
    /// <p>The time when the request was made.</p>
    pub fn timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.timestamp.as_ref()
    }
    /// <p>The status of the dataset content.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::DatasetContentStatus> {
        self.status.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetDatasetContentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetDatasetContentOutput {
    /// Creates a new builder-style object to manufacture [`GetDatasetContentOutput`](crate::operation::get_dataset_content::GetDatasetContentOutput).
    pub fn builder(
    ) -> crate::operation::get_dataset_content::builders::GetDatasetContentOutputBuilder {
        crate::operation::get_dataset_content::builders::GetDatasetContentOutputBuilder::default()
    }
}

/// A builder for [`GetDatasetContentOutput`](crate::operation::get_dataset_content::GetDatasetContentOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDatasetContentOutputBuilder {
    pub(crate) entries: std::option::Option<std::vec::Vec<crate::types::DatasetEntry>>,
    pub(crate) timestamp: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) status: std::option::Option<crate::types::DatasetContentStatus>,
    _request_id: Option<String>,
}
impl GetDatasetContentOutputBuilder {
    /// Appends an item to `entries`.
    ///
    /// To override the contents of this collection use [`set_entries`](Self::set_entries).
    ///
    /// <p>A list of <code>DatasetEntry</code> objects.</p>
    pub fn entries(mut self, input: crate::types::DatasetEntry) -> Self {
        let mut v = self.entries.unwrap_or_default();
        v.push(input);
        self.entries = Some(v);
        self
    }
    /// <p>A list of <code>DatasetEntry</code> objects.</p>
    pub fn set_entries(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DatasetEntry>>,
    ) -> Self {
        self.entries = input;
        self
    }
    /// <p>The time when the request was made.</p>
    pub fn timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.timestamp = Some(input);
        self
    }
    /// <p>The time when the request was made.</p>
    pub fn set_timestamp(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.timestamp = input;
        self
    }
    /// <p>The status of the dataset content.</p>
    pub fn status(mut self, input: crate::types::DatasetContentStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the dataset content.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::DatasetContentStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetDatasetContentOutput`](crate::operation::get_dataset_content::GetDatasetContentOutput).
    pub fn build(self) -> crate::operation::get_dataset_content::GetDatasetContentOutput {
        crate::operation::get_dataset_content::GetDatasetContentOutput {
            entries: self.entries,
            timestamp: self.timestamp,
            status: self.status,
            _request_id: self._request_id,
        }
    }
}
