// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_packaging_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_packaging_configuration::CreatePackagingConfigurationInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.cmaf_package {
        #[allow(unused_mut)]
        let mut object_2 = object.key("cmafPackage").start_object();
        crate::protocol_serde::shape_cmaf_package::ser_cmaf_package(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.dash_package {
        #[allow(unused_mut)]
        let mut object_4 = object.key("dashPackage").start_object();
        crate::protocol_serde::shape_dash_package::ser_dash_package(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.hls_package {
        #[allow(unused_mut)]
        let mut object_6 = object.key("hlsPackage").start_object();
        crate::protocol_serde::shape_hls_package::ser_hls_package(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.id {
        object.key("id").string(var_7.as_str());
    }
    if let Some(var_8) = &input.mss_package {
        #[allow(unused_mut)]
        let mut object_9 = object.key("mssPackage").start_object();
        crate::protocol_serde::shape_mss_package::ser_mss_package(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.packaging_group_id {
        object.key("packagingGroupId").string(var_10.as_str());
    }
    if let Some(var_11) = &input.tags {
        #[allow(unused_mut)]
        let mut object_12 = object.key("tags").start_object();
        for (key_13, value_14) in var_11 {
            {
                object_12.key(key_13.as_str()).string(value_14.as_str());
            }
        }
        object_12.finish();
    }
    Ok(())
}
