// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_configure_logs;

pub(crate) mod shape_create_asset;

pub(crate) mod shape_create_packaging_configuration;

pub(crate) mod shape_create_packaging_group;

pub(crate) mod shape_delete_asset;

pub(crate) mod shape_delete_packaging_configuration;

pub(crate) mod shape_delete_packaging_group;

pub(crate) mod shape_describe_asset;

pub(crate) mod shape_describe_packaging_configuration;

pub(crate) mod shape_describe_packaging_group;

pub(crate) mod shape_list_assets;

pub(crate) mod shape_list_packaging_configurations;

pub(crate) mod shape_list_packaging_groups;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_packaging_group;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_configure_logs_input;

pub(crate) mod shape_create_asset_input;

pub(crate) mod shape_create_packaging_configuration_input;

pub(crate) mod shape_create_packaging_group_input;

pub(crate) mod shape_forbidden_exception;

pub(crate) mod shape_internal_server_error_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_unprocessable_entity_exception;

pub(crate) mod shape_update_packaging_group_input;

pub(crate) mod shape_authorization;

pub(crate) mod shape_cmaf_package;

pub(crate) mod shape_dash_package;

pub(crate) mod shape_egress_access_logs;

pub(crate) mod shape_hls_package;

pub(crate) mod shape_list_of_asset_shallow;

pub(crate) mod shape_list_of_egress_endpoint;

pub(crate) mod shape_list_of_packaging_configuration;

pub(crate) mod shape_list_of_packaging_group;

pub(crate) mod shape_map_of_string;

pub(crate) mod shape_mss_package;

pub(crate) mod shape_tags;

pub(crate) mod shape_asset_shallow;

pub(crate) mod shape_cmaf_encryption;

pub(crate) mod shape_dash_encryption;

pub(crate) mod shape_dash_manifest;

pub(crate) mod shape_egress_endpoint;

pub(crate) mod shape_hls_encryption;

pub(crate) mod shape_hls_manifest;

pub(crate) mod shape_list_of_dash_manifest;

pub(crate) mod shape_list_of_hls_manifest;

pub(crate) mod shape_list_of_mss_manifest;

pub(crate) mod shape_list_of_period_triggers_element;

pub(crate) mod shape_mss_encryption;

pub(crate) mod shape_mss_manifest;

pub(crate) mod shape_packaging_configuration;

pub(crate) mod shape_packaging_group;

pub(crate) mod shape_speke_key_provider;

pub(crate) mod shape_stream_selection;

pub(crate) mod shape_encryption_contract_configuration;

pub(crate) mod shape_list_of_string;
