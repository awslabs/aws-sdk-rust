// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListPackagingGroupsOutput {
    /// A token that can be used to resume pagination from the end of the collection.
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// A list of MediaPackage VOD PackagingGroup resources.
    #[doc(hidden)]
    pub packaging_groups: std::option::Option<std::vec::Vec<crate::types::PackagingGroup>>,
    _request_id: Option<String>,
}
impl ListPackagingGroupsOutput {
    /// A token that can be used to resume pagination from the end of the collection.
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// A list of MediaPackage VOD PackagingGroup resources.
    pub fn packaging_groups(&self) -> std::option::Option<&[crate::types::PackagingGroup]> {
        self.packaging_groups.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListPackagingGroupsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListPackagingGroupsOutput {
    /// Creates a new builder-style object to manufacture [`ListPackagingGroupsOutput`](crate::operation::list_packaging_groups::ListPackagingGroupsOutput).
    pub fn builder(
    ) -> crate::operation::list_packaging_groups::builders::ListPackagingGroupsOutputBuilder {
        crate::operation::list_packaging_groups::builders::ListPackagingGroupsOutputBuilder::default(
        )
    }
}

/// A builder for [`ListPackagingGroupsOutput`](crate::operation::list_packaging_groups::ListPackagingGroupsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListPackagingGroupsOutputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) packaging_groups: std::option::Option<std::vec::Vec<crate::types::PackagingGroup>>,
    _request_id: Option<String>,
}
impl ListPackagingGroupsOutputBuilder {
    /// A token that can be used to resume pagination from the end of the collection.
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// A token that can be used to resume pagination from the end of the collection.
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Appends an item to `packaging_groups`.
    ///
    /// To override the contents of this collection use [`set_packaging_groups`](Self::set_packaging_groups).
    ///
    /// A list of MediaPackage VOD PackagingGroup resources.
    pub fn packaging_groups(mut self, input: crate::types::PackagingGroup) -> Self {
        let mut v = self.packaging_groups.unwrap_or_default();
        v.push(input);
        self.packaging_groups = Some(v);
        self
    }
    /// A list of MediaPackage VOD PackagingGroup resources.
    pub fn set_packaging_groups(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PackagingGroup>>,
    ) -> Self {
        self.packaging_groups = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListPackagingGroupsOutput`](crate::operation::list_packaging_groups::ListPackagingGroupsOutput).
    pub fn build(self) -> crate::operation::list_packaging_groups::ListPackagingGroupsOutput {
        crate::operation::list_packaging_groups::ListPackagingGroupsOutput {
            next_token: self.next_token,
            packaging_groups: self.packaging_groups,
            _request_id: self._request_id,
        }
    }
}
