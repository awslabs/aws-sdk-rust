// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies all of the type-specific parameters. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Definition {
    /// <p>The Identity and Access Management (IAM) action definition details. </p>
    #[doc(hidden)]
    pub iam_action_definition: std::option::Option<crate::types::IamActionDefinition>,
    /// <p>The service control policies (SCPs) action definition details. </p>
    #[doc(hidden)]
    pub scp_action_definition: std::option::Option<crate::types::ScpActionDefinition>,
    /// <p>The Amazon Web Services Systems Manager (SSM) action definition details. </p>
    #[doc(hidden)]
    pub ssm_action_definition: std::option::Option<crate::types::SsmActionDefinition>,
}
impl Definition {
    /// <p>The Identity and Access Management (IAM) action definition details. </p>
    pub fn iam_action_definition(&self) -> std::option::Option<&crate::types::IamActionDefinition> {
        self.iam_action_definition.as_ref()
    }
    /// <p>The service control policies (SCPs) action definition details. </p>
    pub fn scp_action_definition(&self) -> std::option::Option<&crate::types::ScpActionDefinition> {
        self.scp_action_definition.as_ref()
    }
    /// <p>The Amazon Web Services Systems Manager (SSM) action definition details. </p>
    pub fn ssm_action_definition(&self) -> std::option::Option<&crate::types::SsmActionDefinition> {
        self.ssm_action_definition.as_ref()
    }
}
impl Definition {
    /// Creates a new builder-style object to manufacture [`Definition`](crate::types::Definition).
    pub fn builder() -> crate::types::builders::DefinitionBuilder {
        crate::types::builders::DefinitionBuilder::default()
    }
}

/// A builder for [`Definition`](crate::types::Definition).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DefinitionBuilder {
    pub(crate) iam_action_definition: std::option::Option<crate::types::IamActionDefinition>,
    pub(crate) scp_action_definition: std::option::Option<crate::types::ScpActionDefinition>,
    pub(crate) ssm_action_definition: std::option::Option<crate::types::SsmActionDefinition>,
}
impl DefinitionBuilder {
    /// <p>The Identity and Access Management (IAM) action definition details. </p>
    pub fn iam_action_definition(mut self, input: crate::types::IamActionDefinition) -> Self {
        self.iam_action_definition = Some(input);
        self
    }
    /// <p>The Identity and Access Management (IAM) action definition details. </p>
    pub fn set_iam_action_definition(
        mut self,
        input: std::option::Option<crate::types::IamActionDefinition>,
    ) -> Self {
        self.iam_action_definition = input;
        self
    }
    /// <p>The service control policies (SCPs) action definition details. </p>
    pub fn scp_action_definition(mut self, input: crate::types::ScpActionDefinition) -> Self {
        self.scp_action_definition = Some(input);
        self
    }
    /// <p>The service control policies (SCPs) action definition details. </p>
    pub fn set_scp_action_definition(
        mut self,
        input: std::option::Option<crate::types::ScpActionDefinition>,
    ) -> Self {
        self.scp_action_definition = input;
        self
    }
    /// <p>The Amazon Web Services Systems Manager (SSM) action definition details. </p>
    pub fn ssm_action_definition(mut self, input: crate::types::SsmActionDefinition) -> Self {
        self.ssm_action_definition = Some(input);
        self
    }
    /// <p>The Amazon Web Services Systems Manager (SSM) action definition details. </p>
    pub fn set_ssm_action_definition(
        mut self,
        input: std::option::Option<crate::types::SsmActionDefinition>,
    ) -> Self {
        self.ssm_action_definition = input;
        self
    }
    /// Consumes the builder and constructs a [`Definition`](crate::types::Definition).
    pub fn build(self) -> crate::types::Definition {
        crate::types::Definition {
            iam_action_definition: self.iam_action_definition,
            scp_action_definition: self.scp_action_definition,
            ssm_action_definition: self.ssm_action_definition,
        }
    }
}
