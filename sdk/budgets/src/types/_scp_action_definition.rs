// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The service control policies (SCP) action definition details. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ScpActionDefinition {
    /// <p>The policy ID attached. </p>
    #[doc(hidden)]
    pub policy_id: std::option::Option<std::string::String>,
    /// <p>A list of target IDs. </p>
    #[doc(hidden)]
    pub target_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ScpActionDefinition {
    /// <p>The policy ID attached. </p>
    pub fn policy_id(&self) -> std::option::Option<&str> {
        self.policy_id.as_deref()
    }
    /// <p>A list of target IDs. </p>
    pub fn target_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.target_ids.as_deref()
    }
}
impl ScpActionDefinition {
    /// Creates a new builder-style object to manufacture [`ScpActionDefinition`](crate::types::ScpActionDefinition).
    pub fn builder() -> crate::types::builders::ScpActionDefinitionBuilder {
        crate::types::builders::ScpActionDefinitionBuilder::default()
    }
}

/// A builder for [`ScpActionDefinition`](crate::types::ScpActionDefinition).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ScpActionDefinitionBuilder {
    pub(crate) policy_id: std::option::Option<std::string::String>,
    pub(crate) target_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ScpActionDefinitionBuilder {
    /// <p>The policy ID attached. </p>
    pub fn policy_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.policy_id = Some(input.into());
        self
    }
    /// <p>The policy ID attached. </p>
    pub fn set_policy_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.policy_id = input;
        self
    }
    /// Appends an item to `target_ids`.
    ///
    /// To override the contents of this collection use [`set_target_ids`](Self::set_target_ids).
    ///
    /// <p>A list of target IDs. </p>
    pub fn target_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.target_ids.unwrap_or_default();
        v.push(input.into());
        self.target_ids = Some(v);
        self
    }
    /// <p>A list of target IDs. </p>
    pub fn set_target_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.target_ids = input;
        self
    }
    /// Consumes the builder and constructs a [`ScpActionDefinition`](crate::types::ScpActionDefinition).
    pub fn build(self) -> crate::types::ScpActionDefinition {
        crate::types::ScpActionDefinition {
            policy_id: self.policy_id,
            target_ids: self.target_ids,
        }
    }
}
