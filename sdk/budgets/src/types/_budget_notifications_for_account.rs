// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The budget name and associated notifications for an account. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BudgetNotificationsForAccount {
    /// <p> A list of notifications.</p>
    pub notifications: ::std::option::Option<::std::vec::Vec<crate::types::Notification>>,
    /// <p> A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.</p>
    pub budget_name: ::std::option::Option<::std::string::String>,
}
impl BudgetNotificationsForAccount {
    /// <p> A list of notifications.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.notifications.is_none()`.
    pub fn notifications(&self) -> &[crate::types::Notification] {
        self.notifications.as_deref().unwrap_or_default()
    }
    /// <p> A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.</p>
    pub fn budget_name(&self) -> ::std::option::Option<&str> {
        self.budget_name.as_deref()
    }
}
impl BudgetNotificationsForAccount {
    /// Creates a new builder-style object to manufacture [`BudgetNotificationsForAccount`](crate::types::BudgetNotificationsForAccount).
    pub fn builder() -> crate::types::builders::BudgetNotificationsForAccountBuilder {
        crate::types::builders::BudgetNotificationsForAccountBuilder::default()
    }
}

/// A builder for [`BudgetNotificationsForAccount`](crate::types::BudgetNotificationsForAccount).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BudgetNotificationsForAccountBuilder {
    pub(crate) notifications: ::std::option::Option<::std::vec::Vec<crate::types::Notification>>,
    pub(crate) budget_name: ::std::option::Option<::std::string::String>,
}
impl BudgetNotificationsForAccountBuilder {
    /// Appends an item to `notifications`.
    ///
    /// To override the contents of this collection use [`set_notifications`](Self::set_notifications).
    ///
    /// <p> A list of notifications.</p>
    pub fn notifications(mut self, input: crate::types::Notification) -> Self {
        let mut v = self.notifications.unwrap_or_default();
        v.push(input);
        self.notifications = ::std::option::Option::Some(v);
        self
    }
    /// <p> A list of notifications.</p>
    pub fn set_notifications(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Notification>>) -> Self {
        self.notifications = input;
        self
    }
    /// <p> A list of notifications.</p>
    pub fn get_notifications(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Notification>> {
        &self.notifications
    }
    /// <p> A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.</p>
    pub fn budget_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.budget_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.</p>
    pub fn set_budget_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.budget_name = input;
        self
    }
    /// <p> A string that represents the budget name. The ":" and "\" characters, and the "/action/" substring, aren't allowed.</p>
    pub fn get_budget_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.budget_name
    }
    /// Consumes the builder and constructs a [`BudgetNotificationsForAccount`](crate::types::BudgetNotificationsForAccount).
    pub fn build(self) -> crate::types::BudgetNotificationsForAccount {
        crate::types::BudgetNotificationsForAccount {
            notifications: self.notifications,
            budget_name: self.budget_name,
        }
    }
}
