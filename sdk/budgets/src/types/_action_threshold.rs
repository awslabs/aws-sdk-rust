// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The trigger threshold of the action. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActionThreshold {
    /// <p> The threshold of a notification.</p>
    #[doc(hidden)]
    pub action_threshold_value: f64,
    /// <p> The type of threshold for a notification.</p>
    #[doc(hidden)]
    pub action_threshold_type: std::option::Option<crate::types::ThresholdType>,
}
impl ActionThreshold {
    /// <p> The threshold of a notification.</p>
    pub fn action_threshold_value(&self) -> f64 {
        self.action_threshold_value
    }
    /// <p> The type of threshold for a notification.</p>
    pub fn action_threshold_type(&self) -> std::option::Option<&crate::types::ThresholdType> {
        self.action_threshold_type.as_ref()
    }
}
impl ActionThreshold {
    /// Creates a new builder-style object to manufacture [`ActionThreshold`](crate::types::ActionThreshold).
    pub fn builder() -> crate::types::builders::ActionThresholdBuilder {
        crate::types::builders::ActionThresholdBuilder::default()
    }
}

/// A builder for [`ActionThreshold`](crate::types::ActionThreshold).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActionThresholdBuilder {
    pub(crate) action_threshold_value: std::option::Option<f64>,
    pub(crate) action_threshold_type: std::option::Option<crate::types::ThresholdType>,
}
impl ActionThresholdBuilder {
    /// <p> The threshold of a notification.</p>
    pub fn action_threshold_value(mut self, input: f64) -> Self {
        self.action_threshold_value = Some(input);
        self
    }
    /// <p> The threshold of a notification.</p>
    pub fn set_action_threshold_value(mut self, input: std::option::Option<f64>) -> Self {
        self.action_threshold_value = input;
        self
    }
    /// <p> The type of threshold for a notification.</p>
    pub fn action_threshold_type(mut self, input: crate::types::ThresholdType) -> Self {
        self.action_threshold_type = Some(input);
        self
    }
    /// <p> The type of threshold for a notification.</p>
    pub fn set_action_threshold_type(
        mut self,
        input: std::option::Option<crate::types::ThresholdType>,
    ) -> Self {
        self.action_threshold_type = input;
        self
    }
    /// Consumes the builder and constructs a [`ActionThreshold`](crate::types::ActionThreshold).
    pub fn build(self) -> crate::types::ActionThreshold {
        crate::types::ActionThreshold {
            action_threshold_value: self.action_threshold_value.unwrap_or_default(),
            action_threshold_type: self.action_threshold_type,
        }
    }
}
