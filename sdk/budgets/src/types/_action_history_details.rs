// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The description of the details for the event. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActionHistoryDetails {
    /// <p> A generic string.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
    /// <p>The budget action resource. </p>
    #[doc(hidden)]
    pub action: std::option::Option<crate::types::Action>,
}
impl ActionHistoryDetails {
    /// <p> A generic string.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
    /// <p>The budget action resource. </p>
    pub fn action(&self) -> std::option::Option<&crate::types::Action> {
        self.action.as_ref()
    }
}
impl ActionHistoryDetails {
    /// Creates a new builder-style object to manufacture [`ActionHistoryDetails`](crate::types::ActionHistoryDetails).
    pub fn builder() -> crate::types::builders::ActionHistoryDetailsBuilder {
        crate::types::builders::ActionHistoryDetailsBuilder::default()
    }
}

/// A builder for [`ActionHistoryDetails`](crate::types::ActionHistoryDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActionHistoryDetailsBuilder {
    pub(crate) message: std::option::Option<std::string::String>,
    pub(crate) action: std::option::Option<crate::types::Action>,
}
impl ActionHistoryDetailsBuilder {
    /// <p> A generic string.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p> A generic string.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>The budget action resource. </p>
    pub fn action(mut self, input: crate::types::Action) -> Self {
        self.action = Some(input);
        self
    }
    /// <p>The budget action resource. </p>
    pub fn set_action(mut self, input: std::option::Option<crate::types::Action>) -> Self {
        self.action = input;
        self
    }
    /// Consumes the builder and constructs a [`ActionHistoryDetails`](crate::types::ActionHistoryDetails).
    pub fn build(self) -> crate::types::ActionHistoryDetails {
        crate::types::ActionHistoryDetails {
            message: self.message,
            action: self.action,
        }
    }
}
