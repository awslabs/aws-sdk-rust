// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Amazon Web Services Systems Manager (SSM) action definition details. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SsmActionDefinition {
    /// <p>The action subType. </p>
    #[doc(hidden)]
    pub action_sub_type: std::option::Option<crate::types::ActionSubType>,
    /// <p>The Region to run the SSM document. </p>
    #[doc(hidden)]
    pub region: std::option::Option<std::string::String>,
    /// <p>The EC2 and RDS instance IDs. </p>
    #[doc(hidden)]
    pub instance_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl SsmActionDefinition {
    /// <p>The action subType. </p>
    pub fn action_sub_type(&self) -> std::option::Option<&crate::types::ActionSubType> {
        self.action_sub_type.as_ref()
    }
    /// <p>The Region to run the SSM document. </p>
    pub fn region(&self) -> std::option::Option<&str> {
        self.region.as_deref()
    }
    /// <p>The EC2 and RDS instance IDs. </p>
    pub fn instance_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.instance_ids.as_deref()
    }
}
impl SsmActionDefinition {
    /// Creates a new builder-style object to manufacture [`SsmActionDefinition`](crate::types::SsmActionDefinition).
    pub fn builder() -> crate::types::builders::SsmActionDefinitionBuilder {
        crate::types::builders::SsmActionDefinitionBuilder::default()
    }
}

/// A builder for [`SsmActionDefinition`](crate::types::SsmActionDefinition).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SsmActionDefinitionBuilder {
    pub(crate) action_sub_type: std::option::Option<crate::types::ActionSubType>,
    pub(crate) region: std::option::Option<std::string::String>,
    pub(crate) instance_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl SsmActionDefinitionBuilder {
    /// <p>The action subType. </p>
    pub fn action_sub_type(mut self, input: crate::types::ActionSubType) -> Self {
        self.action_sub_type = Some(input);
        self
    }
    /// <p>The action subType. </p>
    pub fn set_action_sub_type(
        mut self,
        input: std::option::Option<crate::types::ActionSubType>,
    ) -> Self {
        self.action_sub_type = input;
        self
    }
    /// <p>The Region to run the SSM document. </p>
    pub fn region(mut self, input: impl Into<std::string::String>) -> Self {
        self.region = Some(input.into());
        self
    }
    /// <p>The Region to run the SSM document. </p>
    pub fn set_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// Appends an item to `instance_ids`.
    ///
    /// To override the contents of this collection use [`set_instance_ids`](Self::set_instance_ids).
    ///
    /// <p>The EC2 and RDS instance IDs. </p>
    pub fn instance_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.instance_ids.unwrap_or_default();
        v.push(input.into());
        self.instance_ids = Some(v);
        self
    }
    /// <p>The EC2 and RDS instance IDs. </p>
    pub fn set_instance_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.instance_ids = input;
        self
    }
    /// Consumes the builder and constructs a [`SsmActionDefinition`](crate::types::SsmActionDefinition).
    pub fn build(self) -> crate::types::SsmActionDefinition {
        crate::types::SsmActionDefinition {
            action_sub_type: self.action_sub_type,
            region: self.region,
            instance_ids: self.instance_ids,
        }
    }
}
