// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Amazon Web Services Systems Manager (SSM) action definition details. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SsmActionDefinition {
    /// <p>The action subType. </p>
    pub action_sub_type: crate::types::ActionSubType,
    /// <p>The Region to run the SSM document. </p>
    pub region: ::std::string::String,
    /// <p>The EC2 and RDS instance IDs. </p>
    pub instance_ids: ::std::vec::Vec<::std::string::String>,
}
impl SsmActionDefinition {
    /// <p>The action subType. </p>
    pub fn action_sub_type(&self) -> &crate::types::ActionSubType {
        &self.action_sub_type
    }
    /// <p>The Region to run the SSM document. </p>
    pub fn region(&self) -> &str {
        use std::ops::Deref;
        self.region.deref()
    }
    /// <p>The EC2 and RDS instance IDs. </p>
    pub fn instance_ids(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.instance_ids.deref()
    }
}
impl SsmActionDefinition {
    /// Creates a new builder-style object to manufacture [`SsmActionDefinition`](crate::types::SsmActionDefinition).
    pub fn builder() -> crate::types::builders::SsmActionDefinitionBuilder {
        crate::types::builders::SsmActionDefinitionBuilder::default()
    }
}

/// A builder for [`SsmActionDefinition`](crate::types::SsmActionDefinition).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SsmActionDefinitionBuilder {
    pub(crate) action_sub_type: ::std::option::Option<crate::types::ActionSubType>,
    pub(crate) region: ::std::option::Option<::std::string::String>,
    pub(crate) instance_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl SsmActionDefinitionBuilder {
    /// <p>The action subType. </p>
    /// This field is required.
    pub fn action_sub_type(mut self, input: crate::types::ActionSubType) -> Self {
        self.action_sub_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The action subType. </p>
    pub fn set_action_sub_type(mut self, input: ::std::option::Option<crate::types::ActionSubType>) -> Self {
        self.action_sub_type = input;
        self
    }
    /// <p>The action subType. </p>
    pub fn get_action_sub_type(&self) -> &::std::option::Option<crate::types::ActionSubType> {
        &self.action_sub_type
    }
    /// <p>The Region to run the SSM document. </p>
    /// This field is required.
    pub fn region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Region to run the SSM document. </p>
    pub fn set_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// <p>The Region to run the SSM document. </p>
    pub fn get_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.region
    }
    /// Appends an item to `instance_ids`.
    ///
    /// To override the contents of this collection use [`set_instance_ids`](Self::set_instance_ids).
    ///
    /// <p>The EC2 and RDS instance IDs. </p>
    pub fn instance_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.instance_ids.unwrap_or_default();
        v.push(input.into());
        self.instance_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>The EC2 and RDS instance IDs. </p>
    pub fn set_instance_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.instance_ids = input;
        self
    }
    /// <p>The EC2 and RDS instance IDs. </p>
    pub fn get_instance_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.instance_ids
    }
    /// Consumes the builder and constructs a [`SsmActionDefinition`](crate::types::SsmActionDefinition).
    /// This method will fail if any of the following fields are not set:
    /// - [`action_sub_type`](crate::types::builders::SsmActionDefinitionBuilder::action_sub_type)
    /// - [`region`](crate::types::builders::SsmActionDefinitionBuilder::region)
    /// - [`instance_ids`](crate::types::builders::SsmActionDefinitionBuilder::instance_ids)
    pub fn build(self) -> ::std::result::Result<crate::types::SsmActionDefinition, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SsmActionDefinition {
            action_sub_type: self.action_sub_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action_sub_type",
                    "action_sub_type was not specified but it is required when building SsmActionDefinition",
                )
            })?,
            region: self.region.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "region",
                    "region was not specified but it is required when building SsmActionDefinition",
                )
            })?,
            instance_ids: self.instance_ids.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "instance_ids",
                    "instance_ids was not specified but it is required when building SsmActionDefinition",
                )
            })?,
        })
    }
}
