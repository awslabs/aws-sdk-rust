// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBudget`](crate::client::fluent_builders::CreateBudget) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::CreateBudget::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::CreateBudget::set_account_id): <p>The <code>accountId</code> that is associated with the budget.</p>
    ///   - [`budget(Budget)`](crate::client::fluent_builders::CreateBudget::budget) / [`set_budget(Option<Budget>)`](crate::client::fluent_builders::CreateBudget::set_budget): <p>The budget object that you want to create.</p>
    ///   - [`notifications_with_subscribers(Vec<NotificationWithSubscribers>)`](crate::client::fluent_builders::CreateBudget::notifications_with_subscribers) / [`set_notifications_with_subscribers(Option<Vec<NotificationWithSubscribers>>)`](crate::client::fluent_builders::CreateBudget::set_notifications_with_subscribers): <p>A notification that you want to associate with a budget. A budget can have up to five notifications, and each notification can have one SNS subscriber and up to 10 email subscribers. If you include notifications and subscribers in your <code>CreateBudget</code> call, Amazon Web Services creates the notifications and subscribers for you.</p>
    /// - On success, responds with [`CreateBudgetOutput`](crate::output::CreateBudgetOutput)
    /// - On failure, responds with [`SdkError<CreateBudgetError>`](crate::error::CreateBudgetError)
    pub fn create_budget(&self) -> crate::client::fluent_builders::CreateBudget {
        crate::client::fluent_builders::CreateBudget::new(self.handle.clone())
    }
}
