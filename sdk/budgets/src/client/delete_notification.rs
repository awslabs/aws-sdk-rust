// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteNotification`](crate::client::fluent_builders::DeleteNotification) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::DeleteNotification::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::DeleteNotification::set_account_id): <p>The <code>accountId</code> that is associated with the budget whose notification you want to delete.</p>
    ///   - [`budget_name(impl Into<String>)`](crate::client::fluent_builders::DeleteNotification::budget_name) / [`set_budget_name(Option<String>)`](crate::client::fluent_builders::DeleteNotification::set_budget_name): <p>The name of the budget whose notification you want to delete.</p>
    ///   - [`notification(Notification)`](crate::client::fluent_builders::DeleteNotification::notification) / [`set_notification(Option<Notification>)`](crate::client::fluent_builders::DeleteNotification::set_notification): <p>The notification that you want to delete.</p>
    /// - On success, responds with [`DeleteNotificationOutput`](crate::output::DeleteNotificationOutput)
    /// - On failure, responds with [`SdkError<DeleteNotificationError>`](crate::error::DeleteNotificationError)
    pub fn delete_notification(&self) -> crate::client::fluent_builders::DeleteNotification {
        crate::client::fluent_builders::DeleteNotification::new(self.handle.clone())
    }
}
