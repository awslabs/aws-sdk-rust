// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteSubscriber`](crate::client::fluent_builders::DeleteSubscriber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::DeleteSubscriber::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::DeleteSubscriber::set_account_id): <p>The <code>accountId</code> that is associated with the budget whose subscriber you want to delete.</p>
    ///   - [`budget_name(impl Into<String>)`](crate::client::fluent_builders::DeleteSubscriber::budget_name) / [`set_budget_name(Option<String>)`](crate::client::fluent_builders::DeleteSubscriber::set_budget_name): <p>The name of the budget whose subscriber you want to delete.</p>
    ///   - [`notification(Notification)`](crate::client::fluent_builders::DeleteSubscriber::notification) / [`set_notification(Option<Notification>)`](crate::client::fluent_builders::DeleteSubscriber::set_notification): <p>The notification whose subscriber you want to delete.</p>
    ///   - [`subscriber(Subscriber)`](crate::client::fluent_builders::DeleteSubscriber::subscriber) / [`set_subscriber(Option<Subscriber>)`](crate::client::fluent_builders::DeleteSubscriber::set_subscriber): <p>The subscriber that you want to delete.</p>
    /// - On success, responds with [`DeleteSubscriberOutput`](crate::output::DeleteSubscriberOutput)
    /// - On failure, responds with [`SdkError<DeleteSubscriberError>`](crate::error::DeleteSubscriberError)
    pub fn delete_subscriber(&self) -> crate::client::fluent_builders::DeleteSubscriber {
        crate::client::fluent_builders::DeleteSubscriber::new(self.handle.clone())
    }
}
