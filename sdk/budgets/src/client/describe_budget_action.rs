// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeBudgetAction`](crate::client::fluent_builders::DescribeBudgetAction) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::DescribeBudgetAction::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::DescribeBudgetAction::set_account_id): <p>The account ID of the user. It's a 12-digit number.</p>
    ///   - [`budget_name(impl Into<String>)`](crate::client::fluent_builders::DescribeBudgetAction::budget_name) / [`set_budget_name(Option<String>)`](crate::client::fluent_builders::DescribeBudgetAction::set_budget_name): <p> A string that represents the budget name. The ":" and "\" characters aren't allowed.</p>
    ///   - [`action_id(impl Into<String>)`](crate::client::fluent_builders::DescribeBudgetAction::action_id) / [`set_action_id(Option<String>)`](crate::client::fluent_builders::DescribeBudgetAction::set_action_id): <p> A system-generated universally unique identifier (UUID) for the action. </p>
    /// - On success, responds with [`DescribeBudgetActionOutput`](crate::output::DescribeBudgetActionOutput) with field(s):
    ///   - [`account_id(Option<String>)`](crate::output::DescribeBudgetActionOutput::account_id): <p>The account ID of the user. It's a 12-digit number.</p>
    ///   - [`budget_name(Option<String>)`](crate::output::DescribeBudgetActionOutput::budget_name): <p> A string that represents the budget name. The ":" and "\" characters aren't allowed.</p>
    ///   - [`action(Option<Action>)`](crate::output::DescribeBudgetActionOutput::action): <p> A budget action resource. </p>
    /// - On failure, responds with [`SdkError<DescribeBudgetActionError>`](crate::error::DescribeBudgetActionError)
    pub fn describe_budget_action(&self) -> crate::client::fluent_builders::DescribeBudgetAction {
        crate::client::fluent_builders::DescribeBudgetAction::new(self.handle.clone())
    }
}
