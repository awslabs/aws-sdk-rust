// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_budget;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_budget_action;

pub(crate) mod shape_create_notification;

pub(crate) mod shape_create_subscriber;

pub(crate) mod shape_delete_budget;

pub(crate) mod shape_delete_budget_action;

pub(crate) mod shape_delete_notification;

pub(crate) mod shape_delete_subscriber;

pub(crate) mod shape_describe_budget;

pub(crate) mod shape_describe_budget_action;

pub(crate) mod shape_describe_budget_action_histories;

pub(crate) mod shape_describe_budget_actions_for_account;

pub(crate) mod shape_describe_budget_actions_for_budget;

pub(crate) mod shape_describe_budget_notifications_for_account;

pub(crate) mod shape_describe_budget_performance_history;

pub(crate) mod shape_describe_budgets;

pub(crate) mod shape_describe_notifications_for_budget;

pub(crate) mod shape_describe_subscribers_for_notification;

pub(crate) mod shape_execute_budget_action;

pub(crate) mod shape_update_budget;

pub(crate) mod shape_update_budget_action;

pub(crate) mod shape_update_notification;

pub(crate) mod shape_update_subscriber;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_create_budget_action_input;

pub(crate) mod shape_create_budget_input;

pub(crate) mod shape_create_notification_input;

pub(crate) mod shape_create_subscriber_input;

pub(crate) mod shape_creation_limit_exceeded_exception;

pub(crate) mod shape_delete_budget_action_input;

pub(crate) mod shape_delete_budget_input;

pub(crate) mod shape_delete_notification_input;

pub(crate) mod shape_delete_subscriber_input;

pub(crate) mod shape_describe_budget_action_histories_input;

pub(crate) mod shape_describe_budget_action_input;

pub(crate) mod shape_describe_budget_actions_for_account_input;

pub(crate) mod shape_describe_budget_actions_for_budget_input;

pub(crate) mod shape_describe_budget_input;

pub(crate) mod shape_describe_budget_notifications_for_account_input;

pub(crate) mod shape_describe_budget_performance_history_input;

pub(crate) mod shape_describe_budgets_input;

pub(crate) mod shape_describe_notifications_for_budget_input;

pub(crate) mod shape_describe_subscribers_for_notification_input;

pub(crate) mod shape_duplicate_record_exception;

pub(crate) mod shape_execute_budget_action_input;

pub(crate) mod shape_expired_next_token_exception;

pub(crate) mod shape_internal_error_exception;

pub(crate) mod shape_invalid_next_token_exception;

pub(crate) mod shape_invalid_parameter_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_resource_locked_exception;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_budget_action_input;

pub(crate) mod shape_update_budget_input;

pub(crate) mod shape_update_notification_input;

pub(crate) mod shape_update_subscriber_input;

pub(crate) mod shape_action;

pub(crate) mod shape_action_histories;

pub(crate) mod shape_action_threshold;

pub(crate) mod shape_actions;

pub(crate) mod shape_budget;

pub(crate) mod shape_budget_notifications_for_account_list;

pub(crate) mod shape_budget_performance_history;

pub(crate) mod shape_budgets;

pub(crate) mod shape_definition;

pub(crate) mod shape_notification;

pub(crate) mod shape_notification_with_subscribers;

pub(crate) mod shape_notifications;

pub(crate) mod shape_subscriber;

pub(crate) mod shape_subscribers;

pub(crate) mod shape_time_period;

pub(crate) mod shape_action_history;

pub(crate) mod shape_auto_adjust_data;

pub(crate) mod shape_budget_notifications_for_account;

pub(crate) mod shape_budgeted_and_actual_amounts_list;

pub(crate) mod shape_calculated_spend;

pub(crate) mod shape_cost_filters;

pub(crate) mod shape_cost_types;

pub(crate) mod shape_iam_action_definition;

pub(crate) mod shape_planned_budget_limits;

pub(crate) mod shape_scp_action_definition;

pub(crate) mod shape_spend;

pub(crate) mod shape_ssm_action_definition;

pub(crate) mod shape_action_history_details;

pub(crate) mod shape_budgeted_and_actual_amounts;

pub(crate) mod shape_dimension_values;

pub(crate) mod shape_historical_options;

pub(crate) mod shape_groups;

pub(crate) mod shape_instance_ids;

pub(crate) mod shape_roles;

pub(crate) mod shape_target_ids;

pub(crate) mod shape_users;
