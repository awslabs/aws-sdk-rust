// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>For characters that were detected as issues, where they occur in the transcript.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CharacterOffsets {
    /// <p>The beginning of the issue.</p>
    #[doc(hidden)]
    pub begin_offset_char: i32,
    /// <p>The end of the issue.</p>
    #[doc(hidden)]
    pub end_offset_char: i32,
}
impl CharacterOffsets {
    /// <p>The beginning of the issue.</p>
    pub fn begin_offset_char(&self) -> i32 {
        self.begin_offset_char
    }
    /// <p>The end of the issue.</p>
    pub fn end_offset_char(&self) -> i32 {
        self.end_offset_char
    }
}
impl CharacterOffsets {
    /// Creates a new builder-style object to manufacture [`CharacterOffsets`](crate::types::CharacterOffsets).
    pub fn builder() -> crate::types::builders::CharacterOffsetsBuilder {
        crate::types::builders::CharacterOffsetsBuilder::default()
    }
}

/// A builder for [`CharacterOffsets`](crate::types::CharacterOffsets).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CharacterOffsetsBuilder {
    pub(crate) begin_offset_char: std::option::Option<i32>,
    pub(crate) end_offset_char: std::option::Option<i32>,
}
impl CharacterOffsetsBuilder {
    /// <p>The beginning of the issue.</p>
    pub fn begin_offset_char(mut self, input: i32) -> Self {
        self.begin_offset_char = Some(input);
        self
    }
    /// <p>The beginning of the issue.</p>
    pub fn set_begin_offset_char(mut self, input: std::option::Option<i32>) -> Self {
        self.begin_offset_char = input;
        self
    }
    /// <p>The end of the issue.</p>
    pub fn end_offset_char(mut self, input: i32) -> Self {
        self.end_offset_char = Some(input);
        self
    }
    /// <p>The end of the issue.</p>
    pub fn set_end_offset_char(mut self, input: std::option::Option<i32>) -> Self {
        self.end_offset_char = input;
        self
    }
    /// Consumes the builder and constructs a [`CharacterOffsets`](crate::types::CharacterOffsets).
    pub fn build(self) -> crate::types::CharacterOffsets {
        crate::types::CharacterOffsets {
            begin_offset_char: self.begin_offset_char.unwrap_or_default(),
            end_offset_char: self.end_offset_char.unwrap_or_default(),
        }
    }
}
