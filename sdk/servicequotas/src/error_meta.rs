// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// All possible error types for this service.
#[non_exhaustive]
#[derive(::std::fmt::Debug)]
pub enum Error {
    /// <p>The action you attempted is not allowed unless Service Access with Service Quotas is enabled in your organization.</p>
    AwsServiceAccessNotEnabledException(crate::types::error::AwsServiceAccessNotEnabledException),
    /// <p>You do not have sufficient permission to perform this action.</p>
    AccessDeniedException(crate::types::error::AccessDeniedException),
    /// <p>You can't perform this action because a dependency does not have access.</p>
    DependencyAccessDeniedException(crate::types::error::DependencyAccessDeniedException),
    /// <p>Invalid input was provided.</p>
    IllegalArgumentException(crate::types::error::IllegalArgumentException),
    /// <p>Invalid input was provided.</p>
    InvalidPaginationTokenException(crate::types::error::InvalidPaginationTokenException),
    /// <p>The resource is in an invalid state.</p>
    InvalidResourceStateException(crate::types::error::InvalidResourceStateException),
    /// <p>The Amazon Web Services account making this call is not a member of an organization.</p>
    NoAvailableOrganizationException(crate::types::error::NoAvailableOrganizationException),
    /// <p>The specified resource does not exist.</p>
    NoSuchResourceException(crate::types::error::NoSuchResourceException),
    /// <p>The organization that your Amazon Web Services account belongs to is not in All Features mode.</p>
    OrganizationNotInAllFeaturesModeException(crate::types::error::OrganizationNotInAllFeaturesModeException),
    /// <p>You have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.</p>
    QuotaExceededException(crate::types::error::QuotaExceededException),
    /// <p>The specified resource already exists.</p>
    ResourceAlreadyExistsException(crate::types::error::ResourceAlreadyExistsException),
    /// <p>Something went wrong.</p>
    ServiceException(crate::types::error::ServiceException),
    /// <p>The quota request template is not associated with your organization.</p>
    ServiceQuotaTemplateNotInUseException(crate::types::error::ServiceQuotaTemplateNotInUseException),
    /// <p>The specified tag is a reserved word and cannot be used.</p>
    TagPolicyViolationException(crate::types::error::TagPolicyViolationException),
    /// <p>The Service Quotas template is not available in this Amazon Web Services Region.</p>
    TemplatesNotAvailableInRegionException(crate::types::error::TemplatesNotAvailableInRegionException),
    /// <p>Due to throttling, the request was denied. Slow down the rate of request calls, or request an increase for this quota.</p>
    TooManyRequestsException(crate::types::error::TooManyRequestsException),
    /// <p>You've exceeded the number of tags allowed for a resource. For more information, see <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/sq-tagging.html#sq-tagging-restrictions">Tag restrictions</a> in the <i>Service Quotas User Guide</i>.</p>
    TooManyTagsException(crate::types::error::TooManyTagsException),
    /// An unexpected error occurred (e.g., invalid JSON returned by the service or an unknown error code).
    Unhandled(::aws_smithy_types::error::Unhandled),
}
impl ::std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::AwsServiceAccessNotEnabledException(inner) => inner.fmt(f),
            Error::AccessDeniedException(inner) => inner.fmt(f),
            Error::DependencyAccessDeniedException(inner) => inner.fmt(f),
            Error::IllegalArgumentException(inner) => inner.fmt(f),
            Error::InvalidPaginationTokenException(inner) => inner.fmt(f),
            Error::InvalidResourceStateException(inner) => inner.fmt(f),
            Error::NoAvailableOrganizationException(inner) => inner.fmt(f),
            Error::NoSuchResourceException(inner) => inner.fmt(f),
            Error::OrganizationNotInAllFeaturesModeException(inner) => inner.fmt(f),
            Error::QuotaExceededException(inner) => inner.fmt(f),
            Error::ResourceAlreadyExistsException(inner) => inner.fmt(f),
            Error::ServiceException(inner) => inner.fmt(f),
            Error::ServiceQuotaTemplateNotInUseException(inner) => inner.fmt(f),
            Error::TagPolicyViolationException(inner) => inner.fmt(f),
            Error::TemplatesNotAvailableInRegionException(inner) => inner.fmt(f),
            Error::TooManyRequestsException(inner) => inner.fmt(f),
            Error::TooManyTagsException(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError, R>,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError> for Error {
    fn from(err: crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError) -> Self {
        match err {
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError::AwsServiceAccessNotEnabledException(inner) => {
                Error::AwsServiceAccessNotEnabledException(inner)
            }
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError::DependencyAccessDeniedException(inner) => {
                Error::DependencyAccessDeniedException(inner)
            }
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError::NoAvailableOrganizationException(inner) => {
                Error::NoAvailableOrganizationException(inner)
            }
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError::OrganizationNotInAllFeaturesModeException(
                inner,
            ) => Error::OrganizationNotInAllFeaturesModeException(inner),
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError::ServiceException(inner) => {
                Error::ServiceException(inner)
            }
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError::TemplatesNotAvailableInRegionException(inner) => {
                Error::TemplatesNotAvailableInRegionException(inner)
            }
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError::TooManyRequestsException(inner) => {
                Error::TooManyRequestsException(inner)
            }
            crate::operation::associate_service_quota_template::AssociateServiceQuotaTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError> for Error {
    fn from(err: crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError) -> Self {
        match err {
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::AwsServiceAccessNotEnabledException(inner) => Error::AwsServiceAccessNotEnabledException(inner),
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::DependencyAccessDeniedException(inner) => Error::DependencyAccessDeniedException(inner),
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::NoAvailableOrganizationException(inner) => Error::NoAvailableOrganizationException(inner),
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::NoSuchResourceException(inner) => Error::NoSuchResourceException(inner),
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::TemplatesNotAvailableInRegionException(inner) => Error::TemplatesNotAvailableInRegionException(inner),
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::delete_service_quota_increase_request_from_template::DeleteServiceQuotaIncreaseRequestFromTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError> for Error {
    fn from(err: crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError) -> Self {
        match err {
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError::AwsServiceAccessNotEnabledException(
                inner,
            ) => Error::AwsServiceAccessNotEnabledException(inner),
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError::DependencyAccessDeniedException(inner) => {
                Error::DependencyAccessDeniedException(inner)
            }
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError::NoAvailableOrganizationException(inner) => {
                Error::NoAvailableOrganizationException(inner)
            }
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError::ServiceException(inner) => {
                Error::ServiceException(inner)
            }
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError::ServiceQuotaTemplateNotInUseException(
                inner,
            ) => Error::ServiceQuotaTemplateNotInUseException(inner),
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError::TemplatesNotAvailableInRegionException(
                inner,
            ) => Error::TemplatesNotAvailableInRegionException(inner),
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError::TooManyRequestsException(inner) => {
                Error::TooManyRequestsException(inner)
            }
            crate::operation::disassociate_service_quota_template::DisassociateServiceQuotaTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError> for Error {
    fn from(err: crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError) -> Self {
        match err {
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError::AwsServiceAccessNotEnabledException(inner) => Error::AwsServiceAccessNotEnabledException(inner),
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError::DependencyAccessDeniedException(inner) => Error::DependencyAccessDeniedException(inner),
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError::NoAvailableOrganizationException(inner) => Error::NoAvailableOrganizationException(inner),
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError::ServiceQuotaTemplateNotInUseException(inner) => Error::ServiceQuotaTemplateNotInUseException(inner),
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError::TemplatesNotAvailableInRegionException(inner) => Error::TemplatesNotAvailableInRegionException(inner),
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::get_association_for_service_quota_template::GetAssociationForServiceQuotaTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError> for Error {
    fn from(err: crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError) -> Self {
        match err {
            crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError::IllegalArgumentException(inner) => {
                Error::IllegalArgumentException(inner)
            }
            crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError::NoSuchResourceException(inner) => {
                Error::NoSuchResourceException(inner)
            }
            crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError::ServiceException(inner) => {
                Error::ServiceException(inner)
            }
            crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError::TooManyRequestsException(inner) => {
                Error::TooManyRequestsException(inner)
            }
            crate::operation::get_aws_default_service_quota::GetAWSDefaultServiceQuotaError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError> for Error {
    fn from(err: crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError) -> Self {
        match err {
            crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError::IllegalArgumentException(inner) => {
                Error::IllegalArgumentException(inner)
            }
            crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError::NoSuchResourceException(inner) => {
                Error::NoSuchResourceException(inner)
            }
            crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError::ServiceException(inner) => {
                Error::ServiceException(inner)
            }
            crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError::TooManyRequestsException(inner) => {
                Error::TooManyRequestsException(inner)
            }
            crate::operation::get_requested_service_quota_change::GetRequestedServiceQuotaChangeError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_service_quota::GetServiceQuotaError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_service_quota::GetServiceQuotaError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_service_quota::GetServiceQuotaError> for Error {
    fn from(err: crate::operation::get_service_quota::GetServiceQuotaError) -> Self {
        match err {
            crate::operation::get_service_quota::GetServiceQuotaError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_service_quota::GetServiceQuotaError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::get_service_quota::GetServiceQuotaError::NoSuchResourceException(inner) => Error::NoSuchResourceException(inner),
            crate::operation::get_service_quota::GetServiceQuotaError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::get_service_quota::GetServiceQuotaError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::get_service_quota::GetServiceQuotaError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError> for Error {
    fn from(err: crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError) -> Self {
        match err {
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::AwsServiceAccessNotEnabledException(inner) => Error::AwsServiceAccessNotEnabledException(inner),
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::DependencyAccessDeniedException(inner) => Error::DependencyAccessDeniedException(inner),
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::NoAvailableOrganizationException(inner) => Error::NoAvailableOrganizationException(inner),
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::NoSuchResourceException(inner) => Error::NoSuchResourceException(inner),
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::TemplatesNotAvailableInRegionException(inner) => Error::TemplatesNotAvailableInRegionException(inner),
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::get_service_quota_increase_request_from_template::GetServiceQuotaIncreaseRequestFromTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError> for Error {
    fn from(err: crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError) -> Self {
        match err {
            crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError::IllegalArgumentException(inner) => {
                Error::IllegalArgumentException(inner)
            }
            crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError::InvalidPaginationTokenException(inner) => {
                Error::InvalidPaginationTokenException(inner)
            }
            crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError::NoSuchResourceException(inner) => {
                Error::NoSuchResourceException(inner)
            }
            crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError::ServiceException(inner) => {
                Error::ServiceException(inner)
            }
            crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError::TooManyRequestsException(inner) => {
                Error::TooManyRequestsException(inner)
            }
            crate::operation::list_aws_default_service_quotas::ListAWSDefaultServiceQuotasError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError> for Error {
    fn from(err: crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError) -> Self {
        match err {
            crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError::InvalidPaginationTokenException(inner) => Error::InvalidPaginationTokenException(inner),
            crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError::NoSuchResourceException(inner) => Error::NoSuchResourceException(inner),
            crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError> for Error {
    fn from(err: crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError) -> Self {
        match err {
            crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError::InvalidPaginationTokenException(inner) => Error::InvalidPaginationTokenException(inner),
            crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError::NoSuchResourceException(inner) => Error::NoSuchResourceException(inner),
            crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError> for Error {
    fn from(err: crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError) -> Self {
        match err {
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError::AwsServiceAccessNotEnabledException(inner) => Error::AwsServiceAccessNotEnabledException(inner),
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError::DependencyAccessDeniedException(inner) => Error::DependencyAccessDeniedException(inner),
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError::NoAvailableOrganizationException(inner) => Error::NoAvailableOrganizationException(inner),
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError::TemplatesNotAvailableInRegionException(inner) => Error::TemplatesNotAvailableInRegionException(inner),
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_service_quotas::ListServiceQuotasError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_service_quotas::ListServiceQuotasError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_service_quotas::ListServiceQuotasError> for Error {
    fn from(err: crate::operation::list_service_quotas::ListServiceQuotasError) -> Self {
        match err {
            crate::operation::list_service_quotas::ListServiceQuotasError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_service_quotas::ListServiceQuotasError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::list_service_quotas::ListServiceQuotasError::InvalidPaginationTokenException(inner) => {
                Error::InvalidPaginationTokenException(inner)
            }
            crate::operation::list_service_quotas::ListServiceQuotasError::NoSuchResourceException(inner) => Error::NoSuchResourceException(inner),
            crate::operation::list_service_quotas::ListServiceQuotasError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::list_service_quotas::ListServiceQuotasError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::list_service_quotas::ListServiceQuotasError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_services::ListServicesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_services::ListServicesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_services::ListServicesError> for Error {
    fn from(err: crate::operation::list_services::ListServicesError) -> Self {
        match err {
            crate::operation::list_services::ListServicesError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_services::ListServicesError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::list_services::ListServicesError::InvalidPaginationTokenException(inner) => {
                Error::InvalidPaginationTokenException(inner)
            }
            crate::operation::list_services::ListServicesError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::list_services::ListServicesError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::list_services::ListServicesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_tags_for_resource::ListTagsForResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_tags_for_resource::ListTagsForResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_tags_for_resource::ListTagsForResourceError> for Error {
    fn from(err: crate::operation::list_tags_for_resource::ListTagsForResourceError) -> Self {
        match err {
            crate::operation::list_tags_for_resource::ListTagsForResourceError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_tags_for_resource::ListTagsForResourceError::IllegalArgumentException(inner) => {
                Error::IllegalArgumentException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::NoSuchResourceException(inner) => {
                Error::NoSuchResourceException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::list_tags_for_resource::ListTagsForResourceError::TooManyRequestsException(inner) => {
                Error::TooManyRequestsException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError> for Error {
    fn from(err: crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError) -> Self {
        match err {
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::AwsServiceAccessNotEnabledException(inner) => Error::AwsServiceAccessNotEnabledException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::DependencyAccessDeniedException(inner) => Error::DependencyAccessDeniedException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::NoAvailableOrganizationException(inner) => Error::NoAvailableOrganizationException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::NoSuchResourceException(inner) => Error::NoSuchResourceException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::QuotaExceededException(inner) => Error::QuotaExceededException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::TemplatesNotAvailableInRegionException(inner) => Error::TemplatesNotAvailableInRegionException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::put_service_quota_increase_request_into_template::PutServiceQuotaIncreaseRequestIntoTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError> for Error {
    fn from(err: crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError) -> Self {
        match err {
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::DependencyAccessDeniedException(inner) => {
                Error::DependencyAccessDeniedException(inner)
            }
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::IllegalArgumentException(inner) => {
                Error::IllegalArgumentException(inner)
            }
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::InvalidResourceStateException(inner) => {
                Error::InvalidResourceStateException(inner)
            }
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::NoSuchResourceException(inner) => {
                Error::NoSuchResourceException(inner)
            }
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::QuotaExceededException(inner) => {
                Error::QuotaExceededException(inner)
            }
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::ResourceAlreadyExistsException(inner) => {
                Error::ResourceAlreadyExistsException(inner)
            }
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::ServiceException(inner) => {
                Error::ServiceException(inner)
            }
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::TooManyRequestsException(inner) => {
                Error::TooManyRequestsException(inner)
            }
            crate::operation::request_service_quota_increase::RequestServiceQuotaIncreaseError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::tag_resource::TagResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::tag_resource::TagResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::tag_resource::TagResourceError> for Error {
    fn from(err: crate::operation::tag_resource::TagResourceError) -> Self {
        match err {
            crate::operation::tag_resource::TagResourceError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::tag_resource::TagResourceError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::tag_resource::TagResourceError::NoSuchResourceException(inner) => Error::NoSuchResourceException(inner),
            crate::operation::tag_resource::TagResourceError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::tag_resource::TagResourceError::TagPolicyViolationException(inner) => Error::TagPolicyViolationException(inner),
            crate::operation::tag_resource::TagResourceError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::tag_resource::TagResourceError::TooManyTagsException(inner) => Error::TooManyTagsException(inner),
            crate::operation::tag_resource::TagResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::untag_resource::UntagResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::untag_resource::UntagResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::untag_resource::UntagResourceError> for Error {
    fn from(err: crate::operation::untag_resource::UntagResourceError) -> Self {
        match err {
            crate::operation::untag_resource::UntagResourceError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::untag_resource::UntagResourceError::IllegalArgumentException(inner) => Error::IllegalArgumentException(inner),
            crate::operation::untag_resource::UntagResourceError::NoSuchResourceException(inner) => Error::NoSuchResourceException(inner),
            crate::operation::untag_resource::UntagResourceError::ServiceException(inner) => Error::ServiceException(inner),
            crate::operation::untag_resource::UntagResourceError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::untag_resource::UntagResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl ::std::error::Error for Error {
    fn source(&self) -> std::option::Option<&(dyn ::std::error::Error + 'static)> {
        match self {
            Error::AwsServiceAccessNotEnabledException(inner) => inner.source(),
            Error::AccessDeniedException(inner) => inner.source(),
            Error::DependencyAccessDeniedException(inner) => inner.source(),
            Error::IllegalArgumentException(inner) => inner.source(),
            Error::InvalidPaginationTokenException(inner) => inner.source(),
            Error::InvalidResourceStateException(inner) => inner.source(),
            Error::NoAvailableOrganizationException(inner) => inner.source(),
            Error::NoSuchResourceException(inner) => inner.source(),
            Error::OrganizationNotInAllFeaturesModeException(inner) => inner.source(),
            Error::QuotaExceededException(inner) => inner.source(),
            Error::ResourceAlreadyExistsException(inner) => inner.source(),
            Error::ServiceException(inner) => inner.source(),
            Error::ServiceQuotaTemplateNotInUseException(inner) => inner.source(),
            Error::TagPolicyViolationException(inner) => inner.source(),
            Error::TemplatesNotAvailableInRegionException(inner) => inner.source(),
            Error::TooManyRequestsException(inner) => inner.source(),
            Error::TooManyTagsException(inner) => inner.source(),
            Error::Unhandled(inner) => inner.source(),
        }
    }
}
impl ::aws_http::request_id::RequestId for Error {
    fn request_id(&self) -> Option<&str> {
        match self {
            Self::AwsServiceAccessNotEnabledException(e) => e.request_id(),
            Self::AccessDeniedException(e) => e.request_id(),
            Self::DependencyAccessDeniedException(e) => e.request_id(),
            Self::IllegalArgumentException(e) => e.request_id(),
            Self::InvalidPaginationTokenException(e) => e.request_id(),
            Self::InvalidResourceStateException(e) => e.request_id(),
            Self::NoAvailableOrganizationException(e) => e.request_id(),
            Self::NoSuchResourceException(e) => e.request_id(),
            Self::OrganizationNotInAllFeaturesModeException(e) => e.request_id(),
            Self::QuotaExceededException(e) => e.request_id(),
            Self::ResourceAlreadyExistsException(e) => e.request_id(),
            Self::ServiceException(e) => e.request_id(),
            Self::ServiceQuotaTemplateNotInUseException(e) => e.request_id(),
            Self::TagPolicyViolationException(e) => e.request_id(),
            Self::TemplatesNotAvailableInRegionException(e) => e.request_id(),
            Self::TooManyRequestsException(e) => e.request_id(),
            Self::TooManyTagsException(e) => e.request_id(),
            Self::Unhandled(e) => e.request_id(),
        }
    }
}
