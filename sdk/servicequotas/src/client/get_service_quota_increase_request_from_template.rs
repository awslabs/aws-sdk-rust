// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetServiceQuotaIncreaseRequestFromTemplate`](crate::client::fluent_builders::GetServiceQuotaIncreaseRequestFromTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_code(impl Into<String>)`](crate::client::fluent_builders::GetServiceQuotaIncreaseRequestFromTemplate::service_code) / [`set_service_code(Option<String>)`](crate::client::fluent_builders::GetServiceQuotaIncreaseRequestFromTemplate::set_service_code): <p>The service identifier.</p>
    ///   - [`quota_code(impl Into<String>)`](crate::client::fluent_builders::GetServiceQuotaIncreaseRequestFromTemplate::quota_code) / [`set_quota_code(Option<String>)`](crate::client::fluent_builders::GetServiceQuotaIncreaseRequestFromTemplate::set_quota_code): <p>The quota identifier.</p>
    ///   - [`aws_region(impl Into<String>)`](crate::client::fluent_builders::GetServiceQuotaIncreaseRequestFromTemplate::aws_region) / [`set_aws_region(Option<String>)`](crate::client::fluent_builders::GetServiceQuotaIncreaseRequestFromTemplate::set_aws_region): <p>The AWS Region.</p>
    /// - On success, responds with [`GetServiceQuotaIncreaseRequestFromTemplateOutput`](crate::output::GetServiceQuotaIncreaseRequestFromTemplateOutput) with field(s):
    ///   - [`service_quota_increase_request_in_template(Option<ServiceQuotaIncreaseRequestInTemplate>)`](crate::output::GetServiceQuotaIncreaseRequestFromTemplateOutput::service_quota_increase_request_in_template): <p>Information about the quota increase request.</p>
    /// - On failure, responds with [`SdkError<GetServiceQuotaIncreaseRequestFromTemplateError>`](crate::error::GetServiceQuotaIncreaseRequestFromTemplateError)
    pub fn get_service_quota_increase_request_from_template(
        &self,
    ) -> crate::client::fluent_builders::GetServiceQuotaIncreaseRequestFromTemplate {
        crate::client::fluent_builders::GetServiceQuotaIncreaseRequestFromTemplate::new(
            self.handle.clone(),
        )
    }
}
