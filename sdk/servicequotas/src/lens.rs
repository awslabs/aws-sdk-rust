// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_aws_default_service_quotas_output_next_token(
    input: &crate::operation::list_aws_default_service_quotas::ListAwsDefaultServiceQuotasOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_requested_service_quota_change_history_output_next_token(
    input: &crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_requested_service_quota_change_history_by_quota_output_next_token(
    input: &crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_service_quota_increase_requests_in_template_output_next_token(
    input: &crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_service_quotas_output_next_token(
    input: &crate::operation::list_service_quotas::ListServiceQuotasOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_services_output_next_token(
    input: &crate::operation::list_services::ListServicesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_aws_default_service_quotas_output_quotas(
    input: crate::operation::list_aws_default_service_quotas::ListAwsDefaultServiceQuotasOutput,
) -> std::option::Option<std::vec::Vec<crate::types::ServiceQuota>> {
    let input = match input.quotas {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_requested_service_quota_change_history_output_requested_quotas(
    input: crate::operation::list_requested_service_quota_change_history::ListRequestedServiceQuotaChangeHistoryOutput,
) -> std::option::Option<std::vec::Vec<crate::types::RequestedServiceQuotaChange>> {
    let input = match input.requested_quotas {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_requested_service_quota_change_history_by_quota_output_requested_quotas(
    input: crate::operation::list_requested_service_quota_change_history_by_quota::ListRequestedServiceQuotaChangeHistoryByQuotaOutput,
) -> std::option::Option<std::vec::Vec<crate::types::RequestedServiceQuotaChange>> {
    let input = match input.requested_quotas {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_service_quota_increase_requests_in_template_output_service_quota_increase_request_in_template_list(
    input: crate::operation::list_service_quota_increase_requests_in_template::ListServiceQuotaIncreaseRequestsInTemplateOutput,
) -> std::option::Option<std::vec::Vec<crate::types::ServiceQuotaIncreaseRequestInTemplate>> {
    let input = match input.service_quota_increase_request_in_template_list {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_service_quotas_output_quotas(
    input: crate::operation::list_service_quotas::ListServiceQuotasOutput,
) -> std::option::Option<std::vec::Vec<crate::types::ServiceQuota>> {
    let input = match input.quotas {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_services_output_services(
    input: crate::operation::list_services::ListServicesOutput,
) -> std::option::Option<std::vec::Vec<crate::types::ServiceInfo>> {
    let input = match input.services {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
