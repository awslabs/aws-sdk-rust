// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UntagResourceOutput {
    _request_id: Option<String>,
}
impl aws_http::request_id::RequestId for UntagResourceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`UntagResourceOutput`](crate::output::UntagResourceOutput).
pub mod untag_resource_output {

    /// A builder for [`UntagResourceOutput`](crate::output::UntagResourceOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        _request_id: Option<String>,
    }
    impl Builder {
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`UntagResourceOutput`](crate::output::UntagResourceOutput).
        pub fn build(self) -> crate::output::UntagResourceOutput {
            crate::output::UntagResourceOutput {
                _request_id: self._request_id,
            }
        }
    }
}
impl UntagResourceOutput {
    /// Creates a new builder-style object to manufacture [`UntagResourceOutput`](crate::output::UntagResourceOutput).
    pub fn builder() -> crate::output::untag_resource_output::Builder {
        crate::output::untag_resource_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TagResourceOutput {
    _request_id: Option<String>,
}
impl aws_http::request_id::RequestId for TagResourceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`TagResourceOutput`](crate::output::TagResourceOutput).
pub mod tag_resource_output {

    /// A builder for [`TagResourceOutput`](crate::output::TagResourceOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        _request_id: Option<String>,
    }
    impl Builder {
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`TagResourceOutput`](crate::output::TagResourceOutput).
        pub fn build(self) -> crate::output::TagResourceOutput {
            crate::output::TagResourceOutput {
                _request_id: self._request_id,
            }
        }
    }
}
impl TagResourceOutput {
    /// Creates a new builder-style object to manufacture [`TagResourceOutput`](crate::output::TagResourceOutput).
    pub fn builder() -> crate::output::tag_resource_output::Builder {
        crate::output::tag_resource_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RequestServiceQuotaIncreaseOutput {
    /// <p>Information about the quota increase request.</p>
    #[doc(hidden)]
    pub requested_quota: std::option::Option<crate::model::RequestedServiceQuotaChange>,
    _request_id: Option<String>,
}
impl RequestServiceQuotaIncreaseOutput {
    /// <p>Information about the quota increase request.</p>
    pub fn requested_quota(
        &self,
    ) -> std::option::Option<&crate::model::RequestedServiceQuotaChange> {
        self.requested_quota.as_ref()
    }
}
impl aws_http::request_id::RequestId for RequestServiceQuotaIncreaseOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`RequestServiceQuotaIncreaseOutput`](crate::output::RequestServiceQuotaIncreaseOutput).
pub mod request_service_quota_increase_output {

    /// A builder for [`RequestServiceQuotaIncreaseOutput`](crate::output::RequestServiceQuotaIncreaseOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) requested_quota: std::option::Option<crate::model::RequestedServiceQuotaChange>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>Information about the quota increase request.</p>
        pub fn requested_quota(mut self, input: crate::model::RequestedServiceQuotaChange) -> Self {
            self.requested_quota = Some(input);
            self
        }
        /// <p>Information about the quota increase request.</p>
        pub fn set_requested_quota(
            mut self,
            input: std::option::Option<crate::model::RequestedServiceQuotaChange>,
        ) -> Self {
            self.requested_quota = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`RequestServiceQuotaIncreaseOutput`](crate::output::RequestServiceQuotaIncreaseOutput).
        pub fn build(self) -> crate::output::RequestServiceQuotaIncreaseOutput {
            crate::output::RequestServiceQuotaIncreaseOutput {
                requested_quota: self.requested_quota,
                _request_id: self._request_id,
            }
        }
    }
}
impl RequestServiceQuotaIncreaseOutput {
    /// Creates a new builder-style object to manufacture [`RequestServiceQuotaIncreaseOutput`](crate::output::RequestServiceQuotaIncreaseOutput).
    pub fn builder() -> crate::output::request_service_quota_increase_output::Builder {
        crate::output::request_service_quota_increase_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutServiceQuotaIncreaseRequestIntoTemplateOutput {
    /// <p>Information about the quota increase request.</p>
    #[doc(hidden)]
    pub service_quota_increase_request_in_template:
        std::option::Option<crate::model::ServiceQuotaIncreaseRequestInTemplate>,
    _request_id: Option<String>,
}
impl PutServiceQuotaIncreaseRequestIntoTemplateOutput {
    /// <p>Information about the quota increase request.</p>
    pub fn service_quota_increase_request_in_template(
        &self,
    ) -> std::option::Option<&crate::model::ServiceQuotaIncreaseRequestInTemplate> {
        self.service_quota_increase_request_in_template.as_ref()
    }
}
impl aws_http::request_id::RequestId for PutServiceQuotaIncreaseRequestIntoTemplateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`PutServiceQuotaIncreaseRequestIntoTemplateOutput`](crate::output::PutServiceQuotaIncreaseRequestIntoTemplateOutput).
pub mod put_service_quota_increase_request_into_template_output {

    /// A builder for [`PutServiceQuotaIncreaseRequestIntoTemplateOutput`](crate::output::PutServiceQuotaIncreaseRequestIntoTemplateOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) service_quota_increase_request_in_template:
            std::option::Option<crate::model::ServiceQuotaIncreaseRequestInTemplate>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>Information about the quota increase request.</p>
        pub fn service_quota_increase_request_in_template(
            mut self,
            input: crate::model::ServiceQuotaIncreaseRequestInTemplate,
        ) -> Self {
            self.service_quota_increase_request_in_template = Some(input);
            self
        }
        /// <p>Information about the quota increase request.</p>
        pub fn set_service_quota_increase_request_in_template(
            mut self,
            input: std::option::Option<crate::model::ServiceQuotaIncreaseRequestInTemplate>,
        ) -> Self {
            self.service_quota_increase_request_in_template = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`PutServiceQuotaIncreaseRequestIntoTemplateOutput`](crate::output::PutServiceQuotaIncreaseRequestIntoTemplateOutput).
        pub fn build(self) -> crate::output::PutServiceQuotaIncreaseRequestIntoTemplateOutput {
            crate::output::PutServiceQuotaIncreaseRequestIntoTemplateOutput {
                service_quota_increase_request_in_template: self
                    .service_quota_increase_request_in_template,
                _request_id: self._request_id,
            }
        }
    }
}
impl PutServiceQuotaIncreaseRequestIntoTemplateOutput {
    /// Creates a new builder-style object to manufacture [`PutServiceQuotaIncreaseRequestIntoTemplateOutput`](crate::output::PutServiceQuotaIncreaseRequestIntoTemplateOutput).
    pub fn builder(
    ) -> crate::output::put_service_quota_increase_request_into_template_output::Builder {
        crate::output::put_service_quota_increase_request_into_template_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListTagsForResourceOutput {
    /// <p>A complex data type that contains zero or more tag elements.</p>
    #[doc(hidden)]
    pub tags: std::option::Option<std::vec::Vec<crate::model::Tag>>,
    _request_id: Option<String>,
}
impl ListTagsForResourceOutput {
    /// <p>A complex data type that contains zero or more tag elements.</p>
    pub fn tags(&self) -> std::option::Option<&[crate::model::Tag]> {
        self.tags.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListTagsForResourceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput).
pub mod list_tags_for_resource_output {

    /// A builder for [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) tags: std::option::Option<std::vec::Vec<crate::model::Tag>>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// Appends an item to `tags`.
        ///
        /// To override the contents of this collection use [`set_tags`](Self::set_tags).
        ///
        /// <p>A complex data type that contains zero or more tag elements.</p>
        pub fn tags(mut self, input: crate::model::Tag) -> Self {
            let mut v = self.tags.unwrap_or_default();
            v.push(input);
            self.tags = Some(v);
            self
        }
        /// <p>A complex data type that contains zero or more tag elements.</p>
        pub fn set_tags(
            mut self,
            input: std::option::Option<std::vec::Vec<crate::model::Tag>>,
        ) -> Self {
            self.tags = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput).
        pub fn build(self) -> crate::output::ListTagsForResourceOutput {
            crate::output::ListTagsForResourceOutput {
                tags: self.tags,
                _request_id: self._request_id,
            }
        }
    }
}
impl ListTagsForResourceOutput {
    /// Creates a new builder-style object to manufacture [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput).
    pub fn builder() -> crate::output::list_tags_for_resource_output::Builder {
        crate::output::list_tags_for_resource_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListServicesOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>Information about the services.</p>
    #[doc(hidden)]
    pub services: std::option::Option<std::vec::Vec<crate::model::ServiceInfo>>,
    _request_id: Option<String>,
}
impl ListServicesOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>Information about the services.</p>
    pub fn services(&self) -> std::option::Option<&[crate::model::ServiceInfo]> {
        self.services.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListServicesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`ListServicesOutput`](crate::output::ListServicesOutput).
pub mod list_services_output {

    /// A builder for [`ListServicesOutput`](crate::output::ListServicesOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) next_token: std::option::Option<std::string::String>,
        pub(crate) services: std::option::Option<std::vec::Vec<crate::model::ServiceInfo>>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
            self.next_token = Some(input.into());
            self
        }
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
            self.next_token = input;
            self
        }
        /// Appends an item to `services`.
        ///
        /// To override the contents of this collection use [`set_services`](Self::set_services).
        ///
        /// <p>Information about the services.</p>
        pub fn services(mut self, input: crate::model::ServiceInfo) -> Self {
            let mut v = self.services.unwrap_or_default();
            v.push(input);
            self.services = Some(v);
            self
        }
        /// <p>Information about the services.</p>
        pub fn set_services(
            mut self,
            input: std::option::Option<std::vec::Vec<crate::model::ServiceInfo>>,
        ) -> Self {
            self.services = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`ListServicesOutput`](crate::output::ListServicesOutput).
        pub fn build(self) -> crate::output::ListServicesOutput {
            crate::output::ListServicesOutput {
                next_token: self.next_token,
                services: self.services,
                _request_id: self._request_id,
            }
        }
    }
}
impl ListServicesOutput {
    /// Creates a new builder-style object to manufacture [`ListServicesOutput`](crate::output::ListServicesOutput).
    pub fn builder() -> crate::output::list_services_output::Builder {
        crate::output::list_services_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListServiceQuotasOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>Information about the quotas.</p>
    #[doc(hidden)]
    pub quotas: std::option::Option<std::vec::Vec<crate::model::ServiceQuota>>,
    _request_id: Option<String>,
}
impl ListServiceQuotasOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>Information about the quotas.</p>
    pub fn quotas(&self) -> std::option::Option<&[crate::model::ServiceQuota]> {
        self.quotas.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListServiceQuotasOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`ListServiceQuotasOutput`](crate::output::ListServiceQuotasOutput).
pub mod list_service_quotas_output {

    /// A builder for [`ListServiceQuotasOutput`](crate::output::ListServiceQuotasOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) next_token: std::option::Option<std::string::String>,
        pub(crate) quotas: std::option::Option<std::vec::Vec<crate::model::ServiceQuota>>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
            self.next_token = Some(input.into());
            self
        }
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
            self.next_token = input;
            self
        }
        /// Appends an item to `quotas`.
        ///
        /// To override the contents of this collection use [`set_quotas`](Self::set_quotas).
        ///
        /// <p>Information about the quotas.</p>
        pub fn quotas(mut self, input: crate::model::ServiceQuota) -> Self {
            let mut v = self.quotas.unwrap_or_default();
            v.push(input);
            self.quotas = Some(v);
            self
        }
        /// <p>Information about the quotas.</p>
        pub fn set_quotas(
            mut self,
            input: std::option::Option<std::vec::Vec<crate::model::ServiceQuota>>,
        ) -> Self {
            self.quotas = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`ListServiceQuotasOutput`](crate::output::ListServiceQuotasOutput).
        pub fn build(self) -> crate::output::ListServiceQuotasOutput {
            crate::output::ListServiceQuotasOutput {
                next_token: self.next_token,
                quotas: self.quotas,
                _request_id: self._request_id,
            }
        }
    }
}
impl ListServiceQuotasOutput {
    /// Creates a new builder-style object to manufacture [`ListServiceQuotasOutput`](crate::output::ListServiceQuotasOutput).
    pub fn builder() -> crate::output::list_service_quotas_output::Builder {
        crate::output::list_service_quotas_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListServiceQuotaIncreaseRequestsInTemplateOutput {
    /// <p>Information about the quota increase requests.</p>
    #[doc(hidden)]
    pub service_quota_increase_request_in_template_list:
        std::option::Option<std::vec::Vec<crate::model::ServiceQuotaIncreaseRequestInTemplate>>,
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListServiceQuotaIncreaseRequestsInTemplateOutput {
    /// <p>Information about the quota increase requests.</p>
    pub fn service_quota_increase_request_in_template_list(
        &self,
    ) -> std::option::Option<&[crate::model::ServiceQuotaIncreaseRequestInTemplate]> {
        self.service_quota_increase_request_in_template_list
            .as_deref()
    }
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListServiceQuotaIncreaseRequestsInTemplateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`ListServiceQuotaIncreaseRequestsInTemplateOutput`](crate::output::ListServiceQuotaIncreaseRequestsInTemplateOutput).
pub mod list_service_quota_increase_requests_in_template_output {

    /// A builder for [`ListServiceQuotaIncreaseRequestsInTemplateOutput`](crate::output::ListServiceQuotaIncreaseRequestsInTemplateOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) service_quota_increase_request_in_template_list:
            std::option::Option<std::vec::Vec<crate::model::ServiceQuotaIncreaseRequestInTemplate>>,
        pub(crate) next_token: std::option::Option<std::string::String>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// Appends an item to `service_quota_increase_request_in_template_list`.
        ///
        /// To override the contents of this collection use [`set_service_quota_increase_request_in_template_list`](Self::set_service_quota_increase_request_in_template_list).
        ///
        /// <p>Information about the quota increase requests.</p>
        pub fn service_quota_increase_request_in_template_list(
            mut self,
            input: crate::model::ServiceQuotaIncreaseRequestInTemplate,
        ) -> Self {
            let mut v = self
                .service_quota_increase_request_in_template_list
                .unwrap_or_default();
            v.push(input);
            self.service_quota_increase_request_in_template_list = Some(v);
            self
        }
        /// <p>Information about the quota increase requests.</p>
        pub fn set_service_quota_increase_request_in_template_list(
            mut self,
            input: std::option::Option<
                std::vec::Vec<crate::model::ServiceQuotaIncreaseRequestInTemplate>,
            >,
        ) -> Self {
            self.service_quota_increase_request_in_template_list = input;
            self
        }
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
            self.next_token = Some(input.into());
            self
        }
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
            self.next_token = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`ListServiceQuotaIncreaseRequestsInTemplateOutput`](crate::output::ListServiceQuotaIncreaseRequestsInTemplateOutput).
        pub fn build(self) -> crate::output::ListServiceQuotaIncreaseRequestsInTemplateOutput {
            crate::output::ListServiceQuotaIncreaseRequestsInTemplateOutput {
                service_quota_increase_request_in_template_list: self
                    .service_quota_increase_request_in_template_list,
                next_token: self.next_token,
                _request_id: self._request_id,
            }
        }
    }
}
impl ListServiceQuotaIncreaseRequestsInTemplateOutput {
    /// Creates a new builder-style object to manufacture [`ListServiceQuotaIncreaseRequestsInTemplateOutput`](crate::output::ListServiceQuotaIncreaseRequestsInTemplateOutput).
    pub fn builder(
    ) -> crate::output::list_service_quota_increase_requests_in_template_output::Builder {
        crate::output::list_service_quota_increase_requests_in_template_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListRequestedServiceQuotaChangeHistoryByQuotaOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>Information about the quota increase requests.</p>
    #[doc(hidden)]
    pub requested_quotas:
        std::option::Option<std::vec::Vec<crate::model::RequestedServiceQuotaChange>>,
    _request_id: Option<String>,
}
impl ListRequestedServiceQuotaChangeHistoryByQuotaOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>Information about the quota increase requests.</p>
    pub fn requested_quotas(
        &self,
    ) -> std::option::Option<&[crate::model::RequestedServiceQuotaChange]> {
        self.requested_quotas.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListRequestedServiceQuotaChangeHistoryByQuotaOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`ListRequestedServiceQuotaChangeHistoryByQuotaOutput`](crate::output::ListRequestedServiceQuotaChangeHistoryByQuotaOutput).
pub mod list_requested_service_quota_change_history_by_quota_output {

    /// A builder for [`ListRequestedServiceQuotaChangeHistoryByQuotaOutput`](crate::output::ListRequestedServiceQuotaChangeHistoryByQuotaOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) next_token: std::option::Option<std::string::String>,
        pub(crate) requested_quotas:
            std::option::Option<std::vec::Vec<crate::model::RequestedServiceQuotaChange>>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
            self.next_token = Some(input.into());
            self
        }
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
            self.next_token = input;
            self
        }
        /// Appends an item to `requested_quotas`.
        ///
        /// To override the contents of this collection use [`set_requested_quotas`](Self::set_requested_quotas).
        ///
        /// <p>Information about the quota increase requests.</p>
        pub fn requested_quotas(
            mut self,
            input: crate::model::RequestedServiceQuotaChange,
        ) -> Self {
            let mut v = self.requested_quotas.unwrap_or_default();
            v.push(input);
            self.requested_quotas = Some(v);
            self
        }
        /// <p>Information about the quota increase requests.</p>
        pub fn set_requested_quotas(
            mut self,
            input: std::option::Option<std::vec::Vec<crate::model::RequestedServiceQuotaChange>>,
        ) -> Self {
            self.requested_quotas = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`ListRequestedServiceQuotaChangeHistoryByQuotaOutput`](crate::output::ListRequestedServiceQuotaChangeHistoryByQuotaOutput).
        pub fn build(self) -> crate::output::ListRequestedServiceQuotaChangeHistoryByQuotaOutput {
            crate::output::ListRequestedServiceQuotaChangeHistoryByQuotaOutput {
                next_token: self.next_token,
                requested_quotas: self.requested_quotas,
                _request_id: self._request_id,
            }
        }
    }
}
impl ListRequestedServiceQuotaChangeHistoryByQuotaOutput {
    /// Creates a new builder-style object to manufacture [`ListRequestedServiceQuotaChangeHistoryByQuotaOutput`](crate::output::ListRequestedServiceQuotaChangeHistoryByQuotaOutput).
    pub fn builder(
    ) -> crate::output::list_requested_service_quota_change_history_by_quota_output::Builder {
        crate::output::list_requested_service_quota_change_history_by_quota_output::Builder::default(
        )
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListRequestedServiceQuotaChangeHistoryOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>Information about the quota increase requests.</p>
    #[doc(hidden)]
    pub requested_quotas:
        std::option::Option<std::vec::Vec<crate::model::RequestedServiceQuotaChange>>,
    _request_id: Option<String>,
}
impl ListRequestedServiceQuotaChangeHistoryOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>Information about the quota increase requests.</p>
    pub fn requested_quotas(
        &self,
    ) -> std::option::Option<&[crate::model::RequestedServiceQuotaChange]> {
        self.requested_quotas.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListRequestedServiceQuotaChangeHistoryOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`ListRequestedServiceQuotaChangeHistoryOutput`](crate::output::ListRequestedServiceQuotaChangeHistoryOutput).
pub mod list_requested_service_quota_change_history_output {

    /// A builder for [`ListRequestedServiceQuotaChangeHistoryOutput`](crate::output::ListRequestedServiceQuotaChangeHistoryOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) next_token: std::option::Option<std::string::String>,
        pub(crate) requested_quotas:
            std::option::Option<std::vec::Vec<crate::model::RequestedServiceQuotaChange>>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
            self.next_token = Some(input.into());
            self
        }
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
            self.next_token = input;
            self
        }
        /// Appends an item to `requested_quotas`.
        ///
        /// To override the contents of this collection use [`set_requested_quotas`](Self::set_requested_quotas).
        ///
        /// <p>Information about the quota increase requests.</p>
        pub fn requested_quotas(
            mut self,
            input: crate::model::RequestedServiceQuotaChange,
        ) -> Self {
            let mut v = self.requested_quotas.unwrap_or_default();
            v.push(input);
            self.requested_quotas = Some(v);
            self
        }
        /// <p>Information about the quota increase requests.</p>
        pub fn set_requested_quotas(
            mut self,
            input: std::option::Option<std::vec::Vec<crate::model::RequestedServiceQuotaChange>>,
        ) -> Self {
            self.requested_quotas = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`ListRequestedServiceQuotaChangeHistoryOutput`](crate::output::ListRequestedServiceQuotaChangeHistoryOutput).
        pub fn build(self) -> crate::output::ListRequestedServiceQuotaChangeHistoryOutput {
            crate::output::ListRequestedServiceQuotaChangeHistoryOutput {
                next_token: self.next_token,
                requested_quotas: self.requested_quotas,
                _request_id: self._request_id,
            }
        }
    }
}
impl ListRequestedServiceQuotaChangeHistoryOutput {
    /// Creates a new builder-style object to manufacture [`ListRequestedServiceQuotaChangeHistoryOutput`](crate::output::ListRequestedServiceQuotaChangeHistoryOutput).
    pub fn builder() -> crate::output::list_requested_service_quota_change_history_output::Builder {
        crate::output::list_requested_service_quota_change_history_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListAwsDefaultServiceQuotasOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>Information about the quotas.</p>
    #[doc(hidden)]
    pub quotas: std::option::Option<std::vec::Vec<crate::model::ServiceQuota>>,
    _request_id: Option<String>,
}
impl ListAwsDefaultServiceQuotasOutput {
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>Information about the quotas.</p>
    pub fn quotas(&self) -> std::option::Option<&[crate::model::ServiceQuota]> {
        self.quotas.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListAwsDefaultServiceQuotasOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`ListAwsDefaultServiceQuotasOutput`](crate::output::ListAwsDefaultServiceQuotasOutput).
pub mod list_aws_default_service_quotas_output {

    /// A builder for [`ListAwsDefaultServiceQuotasOutput`](crate::output::ListAwsDefaultServiceQuotasOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) next_token: std::option::Option<std::string::String>,
        pub(crate) quotas: std::option::Option<std::vec::Vec<crate::model::ServiceQuota>>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
            self.next_token = Some(input.into());
            self
        }
        /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
        pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
            self.next_token = input;
            self
        }
        /// Appends an item to `quotas`.
        ///
        /// To override the contents of this collection use [`set_quotas`](Self::set_quotas).
        ///
        /// <p>Information about the quotas.</p>
        pub fn quotas(mut self, input: crate::model::ServiceQuota) -> Self {
            let mut v = self.quotas.unwrap_or_default();
            v.push(input);
            self.quotas = Some(v);
            self
        }
        /// <p>Information about the quotas.</p>
        pub fn set_quotas(
            mut self,
            input: std::option::Option<std::vec::Vec<crate::model::ServiceQuota>>,
        ) -> Self {
            self.quotas = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`ListAwsDefaultServiceQuotasOutput`](crate::output::ListAwsDefaultServiceQuotasOutput).
        pub fn build(self) -> crate::output::ListAwsDefaultServiceQuotasOutput {
            crate::output::ListAwsDefaultServiceQuotasOutput {
                next_token: self.next_token,
                quotas: self.quotas,
                _request_id: self._request_id,
            }
        }
    }
}
impl ListAwsDefaultServiceQuotasOutput {
    /// Creates a new builder-style object to manufacture [`ListAwsDefaultServiceQuotasOutput`](crate::output::ListAwsDefaultServiceQuotasOutput).
    pub fn builder() -> crate::output::list_aws_default_service_quotas_output::Builder {
        crate::output::list_aws_default_service_quotas_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetServiceQuotaIncreaseRequestFromTemplateOutput {
    /// <p>Information about the quota increase request.</p>
    #[doc(hidden)]
    pub service_quota_increase_request_in_template:
        std::option::Option<crate::model::ServiceQuotaIncreaseRequestInTemplate>,
    _request_id: Option<String>,
}
impl GetServiceQuotaIncreaseRequestFromTemplateOutput {
    /// <p>Information about the quota increase request.</p>
    pub fn service_quota_increase_request_in_template(
        &self,
    ) -> std::option::Option<&crate::model::ServiceQuotaIncreaseRequestInTemplate> {
        self.service_quota_increase_request_in_template.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetServiceQuotaIncreaseRequestFromTemplateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`GetServiceQuotaIncreaseRequestFromTemplateOutput`](crate::output::GetServiceQuotaIncreaseRequestFromTemplateOutput).
pub mod get_service_quota_increase_request_from_template_output {

    /// A builder for [`GetServiceQuotaIncreaseRequestFromTemplateOutput`](crate::output::GetServiceQuotaIncreaseRequestFromTemplateOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) service_quota_increase_request_in_template:
            std::option::Option<crate::model::ServiceQuotaIncreaseRequestInTemplate>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>Information about the quota increase request.</p>
        pub fn service_quota_increase_request_in_template(
            mut self,
            input: crate::model::ServiceQuotaIncreaseRequestInTemplate,
        ) -> Self {
            self.service_quota_increase_request_in_template = Some(input);
            self
        }
        /// <p>Information about the quota increase request.</p>
        pub fn set_service_quota_increase_request_in_template(
            mut self,
            input: std::option::Option<crate::model::ServiceQuotaIncreaseRequestInTemplate>,
        ) -> Self {
            self.service_quota_increase_request_in_template = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`GetServiceQuotaIncreaseRequestFromTemplateOutput`](crate::output::GetServiceQuotaIncreaseRequestFromTemplateOutput).
        pub fn build(self) -> crate::output::GetServiceQuotaIncreaseRequestFromTemplateOutput {
            crate::output::GetServiceQuotaIncreaseRequestFromTemplateOutput {
                service_quota_increase_request_in_template: self
                    .service_quota_increase_request_in_template,
                _request_id: self._request_id,
            }
        }
    }
}
impl GetServiceQuotaIncreaseRequestFromTemplateOutput {
    /// Creates a new builder-style object to manufacture [`GetServiceQuotaIncreaseRequestFromTemplateOutput`](crate::output::GetServiceQuotaIncreaseRequestFromTemplateOutput).
    pub fn builder(
    ) -> crate::output::get_service_quota_increase_request_from_template_output::Builder {
        crate::output::get_service_quota_increase_request_from_template_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetServiceQuotaOutput {
    /// <p>Information about the quota.</p>
    #[doc(hidden)]
    pub quota: std::option::Option<crate::model::ServiceQuota>,
    _request_id: Option<String>,
}
impl GetServiceQuotaOutput {
    /// <p>Information about the quota.</p>
    pub fn quota(&self) -> std::option::Option<&crate::model::ServiceQuota> {
        self.quota.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetServiceQuotaOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`GetServiceQuotaOutput`](crate::output::GetServiceQuotaOutput).
pub mod get_service_quota_output {

    /// A builder for [`GetServiceQuotaOutput`](crate::output::GetServiceQuotaOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) quota: std::option::Option<crate::model::ServiceQuota>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>Information about the quota.</p>
        pub fn quota(mut self, input: crate::model::ServiceQuota) -> Self {
            self.quota = Some(input);
            self
        }
        /// <p>Information about the quota.</p>
        pub fn set_quota(mut self, input: std::option::Option<crate::model::ServiceQuota>) -> Self {
            self.quota = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`GetServiceQuotaOutput`](crate::output::GetServiceQuotaOutput).
        pub fn build(self) -> crate::output::GetServiceQuotaOutput {
            crate::output::GetServiceQuotaOutput {
                quota: self.quota,
                _request_id: self._request_id,
            }
        }
    }
}
impl GetServiceQuotaOutput {
    /// Creates a new builder-style object to manufacture [`GetServiceQuotaOutput`](crate::output::GetServiceQuotaOutput).
    pub fn builder() -> crate::output::get_service_quota_output::Builder {
        crate::output::get_service_quota_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetRequestedServiceQuotaChangeOutput {
    /// <p>Information about the quota increase request.</p>
    #[doc(hidden)]
    pub requested_quota: std::option::Option<crate::model::RequestedServiceQuotaChange>,
    _request_id: Option<String>,
}
impl GetRequestedServiceQuotaChangeOutput {
    /// <p>Information about the quota increase request.</p>
    pub fn requested_quota(
        &self,
    ) -> std::option::Option<&crate::model::RequestedServiceQuotaChange> {
        self.requested_quota.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetRequestedServiceQuotaChangeOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`GetRequestedServiceQuotaChangeOutput`](crate::output::GetRequestedServiceQuotaChangeOutput).
pub mod get_requested_service_quota_change_output {

    /// A builder for [`GetRequestedServiceQuotaChangeOutput`](crate::output::GetRequestedServiceQuotaChangeOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) requested_quota: std::option::Option<crate::model::RequestedServiceQuotaChange>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>Information about the quota increase request.</p>
        pub fn requested_quota(mut self, input: crate::model::RequestedServiceQuotaChange) -> Self {
            self.requested_quota = Some(input);
            self
        }
        /// <p>Information about the quota increase request.</p>
        pub fn set_requested_quota(
            mut self,
            input: std::option::Option<crate::model::RequestedServiceQuotaChange>,
        ) -> Self {
            self.requested_quota = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`GetRequestedServiceQuotaChangeOutput`](crate::output::GetRequestedServiceQuotaChangeOutput).
        pub fn build(self) -> crate::output::GetRequestedServiceQuotaChangeOutput {
            crate::output::GetRequestedServiceQuotaChangeOutput {
                requested_quota: self.requested_quota,
                _request_id: self._request_id,
            }
        }
    }
}
impl GetRequestedServiceQuotaChangeOutput {
    /// Creates a new builder-style object to manufacture [`GetRequestedServiceQuotaChangeOutput`](crate::output::GetRequestedServiceQuotaChangeOutput).
    pub fn builder() -> crate::output::get_requested_service_quota_change_output::Builder {
        crate::output::get_requested_service_quota_change_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetAwsDefaultServiceQuotaOutput {
    /// <p>Information about the quota.</p>
    #[doc(hidden)]
    pub quota: std::option::Option<crate::model::ServiceQuota>,
    _request_id: Option<String>,
}
impl GetAwsDefaultServiceQuotaOutput {
    /// <p>Information about the quota.</p>
    pub fn quota(&self) -> std::option::Option<&crate::model::ServiceQuota> {
        self.quota.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetAwsDefaultServiceQuotaOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`GetAwsDefaultServiceQuotaOutput`](crate::output::GetAwsDefaultServiceQuotaOutput).
pub mod get_aws_default_service_quota_output {

    /// A builder for [`GetAwsDefaultServiceQuotaOutput`](crate::output::GetAwsDefaultServiceQuotaOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) quota: std::option::Option<crate::model::ServiceQuota>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>Information about the quota.</p>
        pub fn quota(mut self, input: crate::model::ServiceQuota) -> Self {
            self.quota = Some(input);
            self
        }
        /// <p>Information about the quota.</p>
        pub fn set_quota(mut self, input: std::option::Option<crate::model::ServiceQuota>) -> Self {
            self.quota = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`GetAwsDefaultServiceQuotaOutput`](crate::output::GetAwsDefaultServiceQuotaOutput).
        pub fn build(self) -> crate::output::GetAwsDefaultServiceQuotaOutput {
            crate::output::GetAwsDefaultServiceQuotaOutput {
                quota: self.quota,
                _request_id: self._request_id,
            }
        }
    }
}
impl GetAwsDefaultServiceQuotaOutput {
    /// Creates a new builder-style object to manufacture [`GetAwsDefaultServiceQuotaOutput`](crate::output::GetAwsDefaultServiceQuotaOutput).
    pub fn builder() -> crate::output::get_aws_default_service_quota_output::Builder {
        crate::output::get_aws_default_service_quota_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetAssociationForServiceQuotaTemplateOutput {
    /// <p>The association status. If the status is <code>ASSOCIATED</code>, the quota increase requests in the template are automatically applied to new accounts in your organization.</p>
    #[doc(hidden)]
    pub service_quota_template_association_status:
        std::option::Option<crate::model::ServiceQuotaTemplateAssociationStatus>,
    _request_id: Option<String>,
}
impl GetAssociationForServiceQuotaTemplateOutput {
    /// <p>The association status. If the status is <code>ASSOCIATED</code>, the quota increase requests in the template are automatically applied to new accounts in your organization.</p>
    pub fn service_quota_template_association_status(
        &self,
    ) -> std::option::Option<&crate::model::ServiceQuotaTemplateAssociationStatus> {
        self.service_quota_template_association_status.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetAssociationForServiceQuotaTemplateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`GetAssociationForServiceQuotaTemplateOutput`](crate::output::GetAssociationForServiceQuotaTemplateOutput).
pub mod get_association_for_service_quota_template_output {

    /// A builder for [`GetAssociationForServiceQuotaTemplateOutput`](crate::output::GetAssociationForServiceQuotaTemplateOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) service_quota_template_association_status:
            std::option::Option<crate::model::ServiceQuotaTemplateAssociationStatus>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>The association status. If the status is <code>ASSOCIATED</code>, the quota increase requests in the template are automatically applied to new accounts in your organization.</p>
        pub fn service_quota_template_association_status(
            mut self,
            input: crate::model::ServiceQuotaTemplateAssociationStatus,
        ) -> Self {
            self.service_quota_template_association_status = Some(input);
            self
        }
        /// <p>The association status. If the status is <code>ASSOCIATED</code>, the quota increase requests in the template are automatically applied to new accounts in your organization.</p>
        pub fn set_service_quota_template_association_status(
            mut self,
            input: std::option::Option<crate::model::ServiceQuotaTemplateAssociationStatus>,
        ) -> Self {
            self.service_quota_template_association_status = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`GetAssociationForServiceQuotaTemplateOutput`](crate::output::GetAssociationForServiceQuotaTemplateOutput).
        pub fn build(self) -> crate::output::GetAssociationForServiceQuotaTemplateOutput {
            crate::output::GetAssociationForServiceQuotaTemplateOutput {
                service_quota_template_association_status: self
                    .service_quota_template_association_status,
                _request_id: self._request_id,
            }
        }
    }
}
impl GetAssociationForServiceQuotaTemplateOutput {
    /// Creates a new builder-style object to manufacture [`GetAssociationForServiceQuotaTemplateOutput`](crate::output::GetAssociationForServiceQuotaTemplateOutput).
    pub fn builder() -> crate::output::get_association_for_service_quota_template_output::Builder {
        crate::output::get_association_for_service_quota_template_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateServiceQuotaTemplateOutput {
    _request_id: Option<String>,
}
impl aws_http::request_id::RequestId for DisassociateServiceQuotaTemplateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`DisassociateServiceQuotaTemplateOutput`](crate::output::DisassociateServiceQuotaTemplateOutput).
pub mod disassociate_service_quota_template_output {

    /// A builder for [`DisassociateServiceQuotaTemplateOutput`](crate::output::DisassociateServiceQuotaTemplateOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        _request_id: Option<String>,
    }
    impl Builder {
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`DisassociateServiceQuotaTemplateOutput`](crate::output::DisassociateServiceQuotaTemplateOutput).
        pub fn build(self) -> crate::output::DisassociateServiceQuotaTemplateOutput {
            crate::output::DisassociateServiceQuotaTemplateOutput {
                _request_id: self._request_id,
            }
        }
    }
}
impl DisassociateServiceQuotaTemplateOutput {
    /// Creates a new builder-style object to manufacture [`DisassociateServiceQuotaTemplateOutput`](crate::output::DisassociateServiceQuotaTemplateOutput).
    pub fn builder() -> crate::output::disassociate_service_quota_template_output::Builder {
        crate::output::disassociate_service_quota_template_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteServiceQuotaIncreaseRequestFromTemplateOutput {
    _request_id: Option<String>,
}
impl aws_http::request_id::RequestId for DeleteServiceQuotaIncreaseRequestFromTemplateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`DeleteServiceQuotaIncreaseRequestFromTemplateOutput`](crate::output::DeleteServiceQuotaIncreaseRequestFromTemplateOutput).
pub mod delete_service_quota_increase_request_from_template_output {

    /// A builder for [`DeleteServiceQuotaIncreaseRequestFromTemplateOutput`](crate::output::DeleteServiceQuotaIncreaseRequestFromTemplateOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        _request_id: Option<String>,
    }
    impl Builder {
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`DeleteServiceQuotaIncreaseRequestFromTemplateOutput`](crate::output::DeleteServiceQuotaIncreaseRequestFromTemplateOutput).
        pub fn build(self) -> crate::output::DeleteServiceQuotaIncreaseRequestFromTemplateOutput {
            crate::output::DeleteServiceQuotaIncreaseRequestFromTemplateOutput {
                _request_id: self._request_id,
            }
        }
    }
}
impl DeleteServiceQuotaIncreaseRequestFromTemplateOutput {
    /// Creates a new builder-style object to manufacture [`DeleteServiceQuotaIncreaseRequestFromTemplateOutput`](crate::output::DeleteServiceQuotaIncreaseRequestFromTemplateOutput).
    pub fn builder(
    ) -> crate::output::delete_service_quota_increase_request_from_template_output::Builder {
        crate::output::delete_service_quota_increase_request_from_template_output::Builder::default(
        )
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateServiceQuotaTemplateOutput {
    _request_id: Option<String>,
}
impl aws_http::request_id::RequestId for AssociateServiceQuotaTemplateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`AssociateServiceQuotaTemplateOutput`](crate::output::AssociateServiceQuotaTemplateOutput).
pub mod associate_service_quota_template_output {

    /// A builder for [`AssociateServiceQuotaTemplateOutput`](crate::output::AssociateServiceQuotaTemplateOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        _request_id: Option<String>,
    }
    impl Builder {
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`AssociateServiceQuotaTemplateOutput`](crate::output::AssociateServiceQuotaTemplateOutput).
        pub fn build(self) -> crate::output::AssociateServiceQuotaTemplateOutput {
            crate::output::AssociateServiceQuotaTemplateOutput {
                _request_id: self._request_id,
            }
        }
    }
}
impl AssociateServiceQuotaTemplateOutput {
    /// Creates a new builder-style object to manufacture [`AssociateServiceQuotaTemplateOutput`](crate::output::AssociateServiceQuotaTemplateOutput).
    pub fn builder() -> crate::output::associate_service_quota_template_output::Builder {
        crate::output::associate_service_quota_template_output::Builder::default()
    }
}
