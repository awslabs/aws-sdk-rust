// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateAutoManagementInput {
    /// <p>Information on the opt-in type for your Automatic Management configuration. There are two modes: Notify only and Notify and Auto-Adjust. Currently, only NotifyOnly is available.</p>
    pub opt_in_type: ::std::option::Option<crate::types::OptInType>,
    /// <p>The <a href="https://docs.aws.amazon.com/notifications/latest/userguide/resource-level-permissions.html#rlp-table">User Notifications</a> Amazon Resource Name (ARN) for Automatic Management notifications you want to update.</p>
    pub notification_arn: ::std::option::Option<::std::string::String>,
    /// <p>List of Amazon Web Services services you want to exclude from Automatic Management. You won't be notified of Service Quotas utilization for Amazon Web Services services added to the Automatic Management exclusion list.</p>
    pub exclusion_list: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::vec::Vec<::std::string::String>>>,
}
impl UpdateAutoManagementInput {
    /// <p>Information on the opt-in type for your Automatic Management configuration. There are two modes: Notify only and Notify and Auto-Adjust. Currently, only NotifyOnly is available.</p>
    pub fn opt_in_type(&self) -> ::std::option::Option<&crate::types::OptInType> {
        self.opt_in_type.as_ref()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/notifications/latest/userguide/resource-level-permissions.html#rlp-table">User Notifications</a> Amazon Resource Name (ARN) for Automatic Management notifications you want to update.</p>
    pub fn notification_arn(&self) -> ::std::option::Option<&str> {
        self.notification_arn.as_deref()
    }
    /// <p>List of Amazon Web Services services you want to exclude from Automatic Management. You won't be notified of Service Quotas utilization for Amazon Web Services services added to the Automatic Management exclusion list.</p>
    pub fn exclusion_list(
        &self,
    ) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::vec::Vec<::std::string::String>>> {
        self.exclusion_list.as_ref()
    }
}
impl UpdateAutoManagementInput {
    /// Creates a new builder-style object to manufacture [`UpdateAutoManagementInput`](crate::operation::update_auto_management::UpdateAutoManagementInput).
    pub fn builder() -> crate::operation::update_auto_management::builders::UpdateAutoManagementInputBuilder {
        crate::operation::update_auto_management::builders::UpdateAutoManagementInputBuilder::default()
    }
}

/// A builder for [`UpdateAutoManagementInput`](crate::operation::update_auto_management::UpdateAutoManagementInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateAutoManagementInputBuilder {
    pub(crate) opt_in_type: ::std::option::Option<crate::types::OptInType>,
    pub(crate) notification_arn: ::std::option::Option<::std::string::String>,
    pub(crate) exclusion_list: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::vec::Vec<::std::string::String>>>,
}
impl UpdateAutoManagementInputBuilder {
    /// <p>Information on the opt-in type for your Automatic Management configuration. There are two modes: Notify only and Notify and Auto-Adjust. Currently, only NotifyOnly is available.</p>
    pub fn opt_in_type(mut self, input: crate::types::OptInType) -> Self {
        self.opt_in_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information on the opt-in type for your Automatic Management configuration. There are two modes: Notify only and Notify and Auto-Adjust. Currently, only NotifyOnly is available.</p>
    pub fn set_opt_in_type(mut self, input: ::std::option::Option<crate::types::OptInType>) -> Self {
        self.opt_in_type = input;
        self
    }
    /// <p>Information on the opt-in type for your Automatic Management configuration. There are two modes: Notify only and Notify and Auto-Adjust. Currently, only NotifyOnly is available.</p>
    pub fn get_opt_in_type(&self) -> &::std::option::Option<crate::types::OptInType> {
        &self.opt_in_type
    }
    /// <p>The <a href="https://docs.aws.amazon.com/notifications/latest/userguide/resource-level-permissions.html#rlp-table">User Notifications</a> Amazon Resource Name (ARN) for Automatic Management notifications you want to update.</p>
    pub fn notification_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.notification_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/notifications/latest/userguide/resource-level-permissions.html#rlp-table">User Notifications</a> Amazon Resource Name (ARN) for Automatic Management notifications you want to update.</p>
    pub fn set_notification_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.notification_arn = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/notifications/latest/userguide/resource-level-permissions.html#rlp-table">User Notifications</a> Amazon Resource Name (ARN) for Automatic Management notifications you want to update.</p>
    pub fn get_notification_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.notification_arn
    }
    /// Adds a key-value pair to `exclusion_list`.
    ///
    /// To override the contents of this collection use [`set_exclusion_list`](Self::set_exclusion_list).
    ///
    /// <p>List of Amazon Web Services services you want to exclude from Automatic Management. You won't be notified of Service Quotas utilization for Amazon Web Services services added to the Automatic Management exclusion list.</p>
    pub fn exclusion_list(mut self, k: impl ::std::convert::Into<::std::string::String>, v: ::std::vec::Vec<::std::string::String>) -> Self {
        let mut hash_map = self.exclusion_list.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.exclusion_list = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>List of Amazon Web Services services you want to exclude from Automatic Management. You won't be notified of Service Quotas utilization for Amazon Web Services services added to the Automatic Management exclusion list.</p>
    pub fn set_exclusion_list(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::vec::Vec<::std::string::String>>>,
    ) -> Self {
        self.exclusion_list = input;
        self
    }
    /// <p>List of Amazon Web Services services you want to exclude from Automatic Management. You won't be notified of Service Quotas utilization for Amazon Web Services services added to the Automatic Management exclusion list.</p>
    pub fn get_exclusion_list(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::vec::Vec<::std::string::String>>> {
        &self.exclusion_list
    }
    /// Consumes the builder and constructs a [`UpdateAutoManagementInput`](crate::operation::update_auto_management::UpdateAutoManagementInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_auto_management::UpdateAutoManagementInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_auto_management::UpdateAutoManagementInput {
            opt_in_type: self.opt_in_type,
            notification_arn: self.notification_arn,
            exclusion_list: self.exclusion_list,
        })
    }
}
