// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateNode`](crate::operation::create_node::builders::CreateNodeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_id(impl Into<String>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::cluster_id) / [`set_cluster_id(Option<String>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::set_cluster_id):<br>required: **true**<br>The ID of the cluster.<br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::set_name):<br>required: **false**<br>The user-specified name of the Node to be created.<br>
    ///   - [`node_interface_mappings(NodeInterfaceMappingCreateRequest)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::node_interface_mappings) / [`set_node_interface_mappings(Option<Vec::<NodeInterfaceMappingCreateRequest>>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::set_node_interface_mappings):<br>required: **false**<br>Documentation update needed<br>
    ///   - [`request_id(impl Into<String>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::request_id) / [`set_request_id(Option<String>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::set_request_id):<br>required: **false**<br>An ID that you assign to a create request. This ID ensures idempotency when creating resources.<br>
    ///   - [`role(NodeRole)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::role) / [`set_role(Option<NodeRole>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::set_role):<br>required: **false**<br>The initial role of the Node in the Cluster. ACTIVE means the Node is available for encoding. BACKUP means the Node is a redundant Node and might get used if an ACTIVE Node fails.<br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_node::builders::CreateNodeFluentBuilder::set_tags):<br>required: **false**<br>A collection of key-value pairs.<br>
    /// - On success, responds with [`CreateNodeOutput`](crate::operation::create_node::CreateNodeOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_node::CreateNodeOutput::arn): The ARN of the Node. It is automatically assigned when the Node is created.
    ///   - [`channel_placement_groups(Option<Vec::<String>>)`](crate::operation::create_node::CreateNodeOutput::channel_placement_groups): An array of IDs. Each ID is one ChannelPlacementGroup that is associated with this Node. Empty if the Node is not yet associated with any groups.
    ///   - [`cluster_id(Option<String>)`](crate::operation::create_node::CreateNodeOutput::cluster_id): The ID of the Cluster that the Node belongs to.
    ///   - [`connection_state(Option<NodeConnectionState>)`](crate::operation::create_node::CreateNodeOutput::connection_state): The current connection state of the Node.
    ///   - [`id(Option<String>)`](crate::operation::create_node::CreateNodeOutput::id): The unique ID of the Node. Unique in the Cluster. The ID is the resource-id portion of the ARN.
    ///   - [`instance_arn(Option<String>)`](crate::operation::create_node::CreateNodeOutput::instance_arn): The ARN of the EC2 instance hosting the Node.
    ///   - [`name(Option<String>)`](crate::operation::create_node::CreateNodeOutput::name): The name that you specified for the Node.
    ///   - [`node_interface_mappings(Option<Vec::<NodeInterfaceMapping>>)`](crate::operation::create_node::CreateNodeOutput::node_interface_mappings): Documentation update needed
    ///   - [`role(Option<NodeRole>)`](crate::operation::create_node::CreateNodeOutput::role): The initial role current role of the Node in the Cluster. ACTIVE means the Node is available for encoding. BACKUP means the Node is a redundant Node and might get used if an ACTIVE Node fails.
    ///   - [`state(Option<NodeState>)`](crate::operation::create_node::CreateNodeOutput::state): The current state of the Node.
    /// - On failure, responds with [`SdkError<CreateNodeError>`](crate::operation::create_node::CreateNodeError)
    pub fn create_node(&self) -> crate::operation::create_node::builders::CreateNodeFluentBuilder {
        crate::operation::create_node::builders::CreateNodeFluentBuilder::new(self.handle.clone())
    }
}
