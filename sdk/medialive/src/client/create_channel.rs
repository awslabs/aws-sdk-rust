// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateChannel`](crate::operation::create_channel::builders::CreateChannelFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cdi_input_specification(CdiInputSpecification)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::cdi_input_specification) / [`set_cdi_input_specification(Option<CdiInputSpecification>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_cdi_input_specification):<br>required: **false**<br>Specification of CDI inputs for this channel<br>
    ///   - [`channel_class(ChannelClass)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::channel_class) / [`set_channel_class(Option<ChannelClass>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_channel_class):<br>required: **false**<br>The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.<br>
    ///   - [`destinations(OutputDestination)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::destinations) / [`set_destinations(Option<Vec::<OutputDestination>>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_destinations):<br>required: **false**<br>Placeholder documentation for __listOfOutputDestination<br>
    ///   - [`encoder_settings(EncoderSettings)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::encoder_settings) / [`set_encoder_settings(Option<EncoderSettings>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_encoder_settings):<br>required: **false**<br>Encoder Settings<br>
    ///   - [`input_attachments(InputAttachment)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::input_attachments) / [`set_input_attachments(Option<Vec::<InputAttachment>>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_input_attachments):<br>required: **false**<br>List of input attachments for channel.<br>
    ///   - [`input_specification(InputSpecification)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::input_specification) / [`set_input_specification(Option<InputSpecification>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_input_specification):<br>required: **false**<br>Specification of network and file inputs for this channel<br>
    ///   - [`log_level(LogLevel)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::log_level) / [`set_log_level(Option<LogLevel>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_log_level):<br>required: **false**<br>The log level to write to CloudWatch Logs.<br>
    ///   - [`maintenance(MaintenanceCreateSettings)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::maintenance) / [`set_maintenance(Option<MaintenanceCreateSettings>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_maintenance):<br>required: **false**<br>Maintenance settings for this channel.<br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_name):<br>required: **false**<br>Name of channel.<br>
    ///   - [`request_id(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::request_id) / [`set_request_id(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_request_id):<br>required: **false**<br>Unique request ID to be specified. This is needed to prevent retries from creating multiple resources.<br>
    ///   - [`reserved(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::reserved) / [`set_reserved(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_reserved):<br>required: **false**<br>Deprecated field that's only usable by whitelisted customers.<br>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_role_arn):<br>required: **false**<br>An optional Amazon Resource Name (ARN) of the role to assume when running the Channel.<br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_tags):<br>required: **false**<br>A collection of key-value pairs.<br>
    ///   - [`vpc(VpcOutputSettings)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::vpc) / [`set_vpc(Option<VpcOutputSettings>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_vpc):<br>required: **false**<br>Settings for the VPC outputs<br>
    /// - On success, responds with [`CreateChannelOutput`](crate::operation::create_channel::CreateChannelOutput) with field(s):
    ///   - [`channel(Option<Channel>)`](crate::operation::create_channel::CreateChannelOutput::channel): Placeholder documentation for Channel
    /// - On failure, responds with [`SdkError<CreateChannelError>`](crate::operation::create_channel::CreateChannelError)
    pub fn create_channel(&self) -> crate::operation::create_channel::builders::CreateChannelFluentBuilder {
        crate::operation::create_channel::builders::CreateChannelFluentBuilder::new(self.handle.clone())
    }
}
