// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteNode`](crate::operation::delete_node::builders::DeleteNodeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_id(impl Into<String>)`](crate::operation::delete_node::builders::DeleteNodeFluentBuilder::cluster_id) / [`set_cluster_id(Option<String>)`](crate::operation::delete_node::builders::DeleteNodeFluentBuilder::set_cluster_id):<br>required: **true**<br>The ID of the cluster<br>
    ///   - [`node_id(impl Into<String>)`](crate::operation::delete_node::builders::DeleteNodeFluentBuilder::node_id) / [`set_node_id(Option<String>)`](crate::operation::delete_node::builders::DeleteNodeFluentBuilder::set_node_id):<br>required: **true**<br>The ID of the node.<br>
    /// - On success, responds with [`DeleteNodeOutput`](crate::operation::delete_node::DeleteNodeOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::delete_node::DeleteNodeOutput::arn): The ARN of the Node. It is automatically assigned when the Node is created.
    ///   - [`channel_placement_groups(Option<Vec::<String>>)`](crate::operation::delete_node::DeleteNodeOutput::channel_placement_groups): An array of IDs. Each ID is one ChannelPlacementGroup that is associated with this Node. Empty if the Node is not yet associated with any groups.
    ///   - [`cluster_id(Option<String>)`](crate::operation::delete_node::DeleteNodeOutput::cluster_id): The ID of the Cluster that the Node belongs to.
    ///   - [`connection_state(Option<NodeConnectionState>)`](crate::operation::delete_node::DeleteNodeOutput::connection_state): The current connection state of the Node.
    ///   - [`id(Option<String>)`](crate::operation::delete_node::DeleteNodeOutput::id): The unique ID of the Node. Unique in the Cluster. The ID is the resource-id portion of the ARN.
    ///   - [`instance_arn(Option<String>)`](crate::operation::delete_node::DeleteNodeOutput::instance_arn): The ARN of the EC2 instance hosting the Node.
    ///   - [`name(Option<String>)`](crate::operation::delete_node::DeleteNodeOutput::name): The name that you specified for the Node.
    ///   - [`node_interface_mappings(Option<Vec::<NodeInterfaceMapping>>)`](crate::operation::delete_node::DeleteNodeOutput::node_interface_mappings): Documentation update needed
    ///   - [`role(Option<NodeRole>)`](crate::operation::delete_node::DeleteNodeOutput::role): The initial role current role of the Node in the Cluster. ACTIVE means the Node is available for encoding. BACKUP means the Node is a redundant Node and might get used if an ACTIVE Node fails.
    ///   - [`state(Option<NodeState>)`](crate::operation::delete_node::DeleteNodeOutput::state): The current state of the Node.
    /// - On failure, responds with [`SdkError<DeleteNodeError>`](crate::operation::delete_node::DeleteNodeError)
    pub fn delete_node(&self) -> crate::operation::delete_node::builders::DeleteNodeFluentBuilder {
        crate::operation::delete_node::builders::DeleteNodeFluentBuilder::new(self.handle.clone())
    }
}
