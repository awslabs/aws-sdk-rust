// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Key Provider Settings
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct KeyProviderSettings {
    /// Static Key Settings
    #[doc(hidden)]
    pub static_key_settings: std::option::Option<crate::types::StaticKeySettings>,
}
impl KeyProviderSettings {
    /// Static Key Settings
    pub fn static_key_settings(&self) -> std::option::Option<&crate::types::StaticKeySettings> {
        self.static_key_settings.as_ref()
    }
}
impl KeyProviderSettings {
    /// Creates a new builder-style object to manufacture [`KeyProviderSettings`](crate::types::KeyProviderSettings).
    pub fn builder() -> crate::types::builders::KeyProviderSettingsBuilder {
        crate::types::builders::KeyProviderSettingsBuilder::default()
    }
}

/// A builder for [`KeyProviderSettings`](crate::types::KeyProviderSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct KeyProviderSettingsBuilder {
    pub(crate) static_key_settings: std::option::Option<crate::types::StaticKeySettings>,
}
impl KeyProviderSettingsBuilder {
    /// Static Key Settings
    pub fn static_key_settings(mut self, input: crate::types::StaticKeySettings) -> Self {
        self.static_key_settings = Some(input);
        self
    }
    /// Static Key Settings
    pub fn set_static_key_settings(
        mut self,
        input: std::option::Option<crate::types::StaticKeySettings>,
    ) -> Self {
        self.static_key_settings = input;
        self
    }
    /// Consumes the builder and constructs a [`KeyProviderSettings`](crate::types::KeyProviderSettings).
    pub fn build(self) -> crate::types::KeyProviderSettings {
        crate::types::KeyProviderSettings {
            static_key_settings: self.static_key_settings,
        }
    }
}
