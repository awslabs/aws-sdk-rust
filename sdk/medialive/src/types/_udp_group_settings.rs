// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Udp Group Settings
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UdpGroupSettings {
    /// Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted. When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement). Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.
    #[doc(hidden)]
    pub input_loss_action: std::option::Option<crate::types::InputLossActionForUdpOut>,
    /// Indicates ID3 frame that has the timecode.
    #[doc(hidden)]
    pub timed_metadata_id3_frame: std::option::Option<crate::types::UdpTimedMetadataId3Frame>,
    /// Timed Metadata interval in seconds.
    #[doc(hidden)]
    pub timed_metadata_id3_period: i32,
}
impl UdpGroupSettings {
    /// Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted. When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement). Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.
    pub fn input_loss_action(
        &self,
    ) -> std::option::Option<&crate::types::InputLossActionForUdpOut> {
        self.input_loss_action.as_ref()
    }
    /// Indicates ID3 frame that has the timecode.
    pub fn timed_metadata_id3_frame(
        &self,
    ) -> std::option::Option<&crate::types::UdpTimedMetadataId3Frame> {
        self.timed_metadata_id3_frame.as_ref()
    }
    /// Timed Metadata interval in seconds.
    pub fn timed_metadata_id3_period(&self) -> i32 {
        self.timed_metadata_id3_period
    }
}
impl UdpGroupSettings {
    /// Creates a new builder-style object to manufacture [`UdpGroupSettings`](crate::types::UdpGroupSettings).
    pub fn builder() -> crate::types::builders::UdpGroupSettingsBuilder {
        crate::types::builders::UdpGroupSettingsBuilder::default()
    }
}

/// A builder for [`UdpGroupSettings`](crate::types::UdpGroupSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UdpGroupSettingsBuilder {
    pub(crate) input_loss_action: std::option::Option<crate::types::InputLossActionForUdpOut>,
    pub(crate) timed_metadata_id3_frame:
        std::option::Option<crate::types::UdpTimedMetadataId3Frame>,
    pub(crate) timed_metadata_id3_period: std::option::Option<i32>,
}
impl UdpGroupSettingsBuilder {
    /// Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted. When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement). Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.
    pub fn input_loss_action(mut self, input: crate::types::InputLossActionForUdpOut) -> Self {
        self.input_loss_action = Some(input);
        self
    }
    /// Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted. When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement). Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.
    pub fn set_input_loss_action(
        mut self,
        input: std::option::Option<crate::types::InputLossActionForUdpOut>,
    ) -> Self {
        self.input_loss_action = input;
        self
    }
    /// Indicates ID3 frame that has the timecode.
    pub fn timed_metadata_id3_frame(
        mut self,
        input: crate::types::UdpTimedMetadataId3Frame,
    ) -> Self {
        self.timed_metadata_id3_frame = Some(input);
        self
    }
    /// Indicates ID3 frame that has the timecode.
    pub fn set_timed_metadata_id3_frame(
        mut self,
        input: std::option::Option<crate::types::UdpTimedMetadataId3Frame>,
    ) -> Self {
        self.timed_metadata_id3_frame = input;
        self
    }
    /// Timed Metadata interval in seconds.
    pub fn timed_metadata_id3_period(mut self, input: i32) -> Self {
        self.timed_metadata_id3_period = Some(input);
        self
    }
    /// Timed Metadata interval in seconds.
    pub fn set_timed_metadata_id3_period(mut self, input: std::option::Option<i32>) -> Self {
        self.timed_metadata_id3_period = input;
        self
    }
    /// Consumes the builder and constructs a [`UdpGroupSettings`](crate::types::UdpGroupSettings).
    pub fn build(self) -> crate::types::UdpGroupSettings {
        crate::types::UdpGroupSettings {
            input_loss_action: self.input_loss_action,
            timed_metadata_id3_frame: self.timed_metadata_id3_frame,
            timed_metadata_id3_period: self.timed_metadata_id3_period.unwrap_or_default(),
        }
    }
}
