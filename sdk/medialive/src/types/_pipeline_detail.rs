// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Runtime details of a pipeline when a channel is running.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PipelineDetail {
    /// The name of the active input attachment currently being ingested by this pipeline.
    #[doc(hidden)]
    pub active_input_attachment_name: std::option::Option<std::string::String>,
    /// The name of the input switch schedule action that occurred most recently and that resulted in the switch to the current input attachment for this pipeline.
    #[doc(hidden)]
    pub active_input_switch_action_name: std::option::Option<std::string::String>,
    /// The name of the motion graphics activate action that occurred most recently and that resulted in the current graphics URI for this pipeline.
    #[doc(hidden)]
    pub active_motion_graphics_action_name: std::option::Option<std::string::String>,
    /// The current URI being used for HTML5 motion graphics for this pipeline.
    #[doc(hidden)]
    pub active_motion_graphics_uri: std::option::Option<std::string::String>,
    /// Pipeline ID
    #[doc(hidden)]
    pub pipeline_id: std::option::Option<std::string::String>,
}
impl PipelineDetail {
    /// The name of the active input attachment currently being ingested by this pipeline.
    pub fn active_input_attachment_name(&self) -> std::option::Option<&str> {
        self.active_input_attachment_name.as_deref()
    }
    /// The name of the input switch schedule action that occurred most recently and that resulted in the switch to the current input attachment for this pipeline.
    pub fn active_input_switch_action_name(&self) -> std::option::Option<&str> {
        self.active_input_switch_action_name.as_deref()
    }
    /// The name of the motion graphics activate action that occurred most recently and that resulted in the current graphics URI for this pipeline.
    pub fn active_motion_graphics_action_name(&self) -> std::option::Option<&str> {
        self.active_motion_graphics_action_name.as_deref()
    }
    /// The current URI being used for HTML5 motion graphics for this pipeline.
    pub fn active_motion_graphics_uri(&self) -> std::option::Option<&str> {
        self.active_motion_graphics_uri.as_deref()
    }
    /// Pipeline ID
    pub fn pipeline_id(&self) -> std::option::Option<&str> {
        self.pipeline_id.as_deref()
    }
}
impl PipelineDetail {
    /// Creates a new builder-style object to manufacture [`PipelineDetail`](crate::types::PipelineDetail).
    pub fn builder() -> crate::types::builders::PipelineDetailBuilder {
        crate::types::builders::PipelineDetailBuilder::default()
    }
}

/// A builder for [`PipelineDetail`](crate::types::PipelineDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PipelineDetailBuilder {
    pub(crate) active_input_attachment_name: std::option::Option<std::string::String>,
    pub(crate) active_input_switch_action_name: std::option::Option<std::string::String>,
    pub(crate) active_motion_graphics_action_name: std::option::Option<std::string::String>,
    pub(crate) active_motion_graphics_uri: std::option::Option<std::string::String>,
    pub(crate) pipeline_id: std::option::Option<std::string::String>,
}
impl PipelineDetailBuilder {
    /// The name of the active input attachment currently being ingested by this pipeline.
    pub fn active_input_attachment_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.active_input_attachment_name = Some(input.into());
        self
    }
    /// The name of the active input attachment currently being ingested by this pipeline.
    pub fn set_active_input_attachment_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.active_input_attachment_name = input;
        self
    }
    /// The name of the input switch schedule action that occurred most recently and that resulted in the switch to the current input attachment for this pipeline.
    pub fn active_input_switch_action_name(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.active_input_switch_action_name = Some(input.into());
        self
    }
    /// The name of the input switch schedule action that occurred most recently and that resulted in the switch to the current input attachment for this pipeline.
    pub fn set_active_input_switch_action_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.active_input_switch_action_name = input;
        self
    }
    /// The name of the motion graphics activate action that occurred most recently and that resulted in the current graphics URI for this pipeline.
    pub fn active_motion_graphics_action_name(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.active_motion_graphics_action_name = Some(input.into());
        self
    }
    /// The name of the motion graphics activate action that occurred most recently and that resulted in the current graphics URI for this pipeline.
    pub fn set_active_motion_graphics_action_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.active_motion_graphics_action_name = input;
        self
    }
    /// The current URI being used for HTML5 motion graphics for this pipeline.
    pub fn active_motion_graphics_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.active_motion_graphics_uri = Some(input.into());
        self
    }
    /// The current URI being used for HTML5 motion graphics for this pipeline.
    pub fn set_active_motion_graphics_uri(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.active_motion_graphics_uri = input;
        self
    }
    /// Pipeline ID
    pub fn pipeline_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.pipeline_id = Some(input.into());
        self
    }
    /// Pipeline ID
    pub fn set_pipeline_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.pipeline_id = input;
        self
    }
    /// Consumes the builder and constructs a [`PipelineDetail`](crate::types::PipelineDetail).
    pub fn build(self) -> crate::types::PipelineDetail {
        crate::types::PipelineDetail {
            active_input_attachment_name: self.active_input_attachment_name,
            active_input_switch_action_name: self.active_input_switch_action_name,
            active_motion_graphics_action_name: self.active_motion_graphics_action_name,
            active_motion_graphics_uri: self.active_motion_graphics_uri,
            pipeline_id: self.pipeline_id,
        }
    }
}
