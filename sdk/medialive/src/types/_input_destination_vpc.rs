// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The properties for a VPC type input destination.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InputDestinationVpc {
    /// The availability zone of the Input destination.
    #[doc(hidden)]
    pub availability_zone: std::option::Option<std::string::String>,
    /// The network interface ID of the Input destination in the VPC.
    #[doc(hidden)]
    pub network_interface_id: std::option::Option<std::string::String>,
}
impl InputDestinationVpc {
    /// The availability zone of the Input destination.
    pub fn availability_zone(&self) -> std::option::Option<&str> {
        self.availability_zone.as_deref()
    }
    /// The network interface ID of the Input destination in the VPC.
    pub fn network_interface_id(&self) -> std::option::Option<&str> {
        self.network_interface_id.as_deref()
    }
}
impl InputDestinationVpc {
    /// Creates a new builder-style object to manufacture [`InputDestinationVpc`](crate::types::InputDestinationVpc).
    pub fn builder() -> crate::types::builders::InputDestinationVpcBuilder {
        crate::types::builders::InputDestinationVpcBuilder::default()
    }
}

/// A builder for [`InputDestinationVpc`](crate::types::InputDestinationVpc).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InputDestinationVpcBuilder {
    pub(crate) availability_zone: std::option::Option<std::string::String>,
    pub(crate) network_interface_id: std::option::Option<std::string::String>,
}
impl InputDestinationVpcBuilder {
    /// The availability zone of the Input destination.
    pub fn availability_zone(mut self, input: impl Into<std::string::String>) -> Self {
        self.availability_zone = Some(input.into());
        self
    }
    /// The availability zone of the Input destination.
    pub fn set_availability_zone(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.availability_zone = input;
        self
    }
    /// The network interface ID of the Input destination in the VPC.
    pub fn network_interface_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.network_interface_id = Some(input.into());
        self
    }
    /// The network interface ID of the Input destination in the VPC.
    pub fn set_network_interface_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.network_interface_id = input;
        self
    }
    /// Consumes the builder and constructs a [`InputDestinationVpc`](crate::types::InputDestinationVpc).
    pub fn build(self) -> crate::types::InputDestinationVpc {
        crate::types::InputDestinationVpc {
            availability_zone: self.availability_zone,
            network_interface_id: self.network_interface_id,
        }
    }
}
