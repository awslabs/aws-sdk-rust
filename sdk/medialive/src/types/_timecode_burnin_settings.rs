// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Timecode Burnin Settings
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TimecodeBurninSettings {
    /// Choose a timecode burn-in font size
    #[doc(hidden)]
    pub font_size: std::option::Option<crate::types::TimecodeBurninFontSize>,
    /// Choose a timecode burn-in output position
    #[doc(hidden)]
    pub position: std::option::Option<crate::types::TimecodeBurninPosition>,
    /// Create a timecode burn-in prefix (optional)
    #[doc(hidden)]
    pub prefix: std::option::Option<std::string::String>,
}
impl TimecodeBurninSettings {
    /// Choose a timecode burn-in font size
    pub fn font_size(&self) -> std::option::Option<&crate::types::TimecodeBurninFontSize> {
        self.font_size.as_ref()
    }
    /// Choose a timecode burn-in output position
    pub fn position(&self) -> std::option::Option<&crate::types::TimecodeBurninPosition> {
        self.position.as_ref()
    }
    /// Create a timecode burn-in prefix (optional)
    pub fn prefix(&self) -> std::option::Option<&str> {
        self.prefix.as_deref()
    }
}
impl TimecodeBurninSettings {
    /// Creates a new builder-style object to manufacture [`TimecodeBurninSettings`](crate::types::TimecodeBurninSettings).
    pub fn builder() -> crate::types::builders::TimecodeBurninSettingsBuilder {
        crate::types::builders::TimecodeBurninSettingsBuilder::default()
    }
}

/// A builder for [`TimecodeBurninSettings`](crate::types::TimecodeBurninSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TimecodeBurninSettingsBuilder {
    pub(crate) font_size: std::option::Option<crate::types::TimecodeBurninFontSize>,
    pub(crate) position: std::option::Option<crate::types::TimecodeBurninPosition>,
    pub(crate) prefix: std::option::Option<std::string::String>,
}
impl TimecodeBurninSettingsBuilder {
    /// Choose a timecode burn-in font size
    pub fn font_size(mut self, input: crate::types::TimecodeBurninFontSize) -> Self {
        self.font_size = Some(input);
        self
    }
    /// Choose a timecode burn-in font size
    pub fn set_font_size(
        mut self,
        input: std::option::Option<crate::types::TimecodeBurninFontSize>,
    ) -> Self {
        self.font_size = input;
        self
    }
    /// Choose a timecode burn-in output position
    pub fn position(mut self, input: crate::types::TimecodeBurninPosition) -> Self {
        self.position = Some(input);
        self
    }
    /// Choose a timecode burn-in output position
    pub fn set_position(
        mut self,
        input: std::option::Option<crate::types::TimecodeBurninPosition>,
    ) -> Self {
        self.position = input;
        self
    }
    /// Create a timecode burn-in prefix (optional)
    pub fn prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.prefix = Some(input.into());
        self
    }
    /// Create a timecode burn-in prefix (optional)
    pub fn set_prefix(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.prefix = input;
        self
    }
    /// Consumes the builder and constructs a [`TimecodeBurninSettings`](crate::types::TimecodeBurninSettings).
    pub fn build(self) -> crate::types::TimecodeBurninSettings {
        crate::types::TimecodeBurninSettings {
            font_size: self.font_size,
            position: self.position,
            prefix: self.prefix,
        }
    }
}
