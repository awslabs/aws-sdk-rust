// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Input Loss Behavior
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InputLossBehavior {
    /// Documentation update needed
    #[doc(hidden)]
    pub black_frame_msec: i32,
    /// When input loss image type is "color" this field specifies the color to use. Value: 6 hex characters representing the values of RGB.
    #[doc(hidden)]
    pub input_loss_image_color: std::option::Option<std::string::String>,
    /// When input loss image type is "slate" these fields specify the parameters for accessing the slate.
    #[doc(hidden)]
    pub input_loss_image_slate: std::option::Option<crate::types::InputLocation>,
    /// Indicates whether to substitute a solid color or a slate into the output after input loss exceeds blackFrameMsec.
    #[doc(hidden)]
    pub input_loss_image_type: std::option::Option<crate::types::InputLossImageType>,
    /// Documentation update needed
    #[doc(hidden)]
    pub repeat_frame_msec: i32,
}
impl InputLossBehavior {
    /// Documentation update needed
    pub fn black_frame_msec(&self) -> i32 {
        self.black_frame_msec
    }
    /// When input loss image type is "color" this field specifies the color to use. Value: 6 hex characters representing the values of RGB.
    pub fn input_loss_image_color(&self) -> std::option::Option<&str> {
        self.input_loss_image_color.as_deref()
    }
    /// When input loss image type is "slate" these fields specify the parameters for accessing the slate.
    pub fn input_loss_image_slate(&self) -> std::option::Option<&crate::types::InputLocation> {
        self.input_loss_image_slate.as_ref()
    }
    /// Indicates whether to substitute a solid color or a slate into the output after input loss exceeds blackFrameMsec.
    pub fn input_loss_image_type(&self) -> std::option::Option<&crate::types::InputLossImageType> {
        self.input_loss_image_type.as_ref()
    }
    /// Documentation update needed
    pub fn repeat_frame_msec(&self) -> i32 {
        self.repeat_frame_msec
    }
}
impl InputLossBehavior {
    /// Creates a new builder-style object to manufacture [`InputLossBehavior`](crate::types::InputLossBehavior).
    pub fn builder() -> crate::types::builders::InputLossBehaviorBuilder {
        crate::types::builders::InputLossBehaviorBuilder::default()
    }
}

/// A builder for [`InputLossBehavior`](crate::types::InputLossBehavior).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InputLossBehaviorBuilder {
    pub(crate) black_frame_msec: std::option::Option<i32>,
    pub(crate) input_loss_image_color: std::option::Option<std::string::String>,
    pub(crate) input_loss_image_slate: std::option::Option<crate::types::InputLocation>,
    pub(crate) input_loss_image_type: std::option::Option<crate::types::InputLossImageType>,
    pub(crate) repeat_frame_msec: std::option::Option<i32>,
}
impl InputLossBehaviorBuilder {
    /// Documentation update needed
    pub fn black_frame_msec(mut self, input: i32) -> Self {
        self.black_frame_msec = Some(input);
        self
    }
    /// Documentation update needed
    pub fn set_black_frame_msec(mut self, input: std::option::Option<i32>) -> Self {
        self.black_frame_msec = input;
        self
    }
    /// When input loss image type is "color" this field specifies the color to use. Value: 6 hex characters representing the values of RGB.
    pub fn input_loss_image_color(mut self, input: impl Into<std::string::String>) -> Self {
        self.input_loss_image_color = Some(input.into());
        self
    }
    /// When input loss image type is "color" this field specifies the color to use. Value: 6 hex characters representing the values of RGB.
    pub fn set_input_loss_image_color(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.input_loss_image_color = input;
        self
    }
    /// When input loss image type is "slate" these fields specify the parameters for accessing the slate.
    pub fn input_loss_image_slate(mut self, input: crate::types::InputLocation) -> Self {
        self.input_loss_image_slate = Some(input);
        self
    }
    /// When input loss image type is "slate" these fields specify the parameters for accessing the slate.
    pub fn set_input_loss_image_slate(
        mut self,
        input: std::option::Option<crate::types::InputLocation>,
    ) -> Self {
        self.input_loss_image_slate = input;
        self
    }
    /// Indicates whether to substitute a solid color or a slate into the output after input loss exceeds blackFrameMsec.
    pub fn input_loss_image_type(mut self, input: crate::types::InputLossImageType) -> Self {
        self.input_loss_image_type = Some(input);
        self
    }
    /// Indicates whether to substitute a solid color or a slate into the output after input loss exceeds blackFrameMsec.
    pub fn set_input_loss_image_type(
        mut self,
        input: std::option::Option<crate::types::InputLossImageType>,
    ) -> Self {
        self.input_loss_image_type = input;
        self
    }
    /// Documentation update needed
    pub fn repeat_frame_msec(mut self, input: i32) -> Self {
        self.repeat_frame_msec = Some(input);
        self
    }
    /// Documentation update needed
    pub fn set_repeat_frame_msec(mut self, input: std::option::Option<i32>) -> Self {
        self.repeat_frame_msec = input;
        self
    }
    /// Consumes the builder and constructs a [`InputLossBehavior`](crate::types::InputLossBehavior).
    pub fn build(self) -> crate::types::InputLossBehavior {
        crate::types::InputLossBehavior {
            black_frame_msec: self.black_frame_msec.unwrap_or_default(),
            input_loss_image_color: self.input_loss_image_color,
            input_loss_image_slate: self.input_loss_image_slate,
            input_loss_image_type: self.input_loss_image_type,
            repeat_frame_msec: self.repeat_frame_msec.unwrap_or_default(),
        }
    }
}
