// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Multiplex Container Settings
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MultiplexContainerSettings {
    /// Multiplex M2ts Settings
    pub multiplex_m2ts_settings: ::std::option::Option<crate::types::MultiplexM2tsSettings>,
}
impl MultiplexContainerSettings {
    /// Multiplex M2ts Settings
    pub fn multiplex_m2ts_settings(&self) -> ::std::option::Option<&crate::types::MultiplexM2tsSettings> {
        self.multiplex_m2ts_settings.as_ref()
    }
}
impl MultiplexContainerSettings {
    /// Creates a new builder-style object to manufacture [`MultiplexContainerSettings`](crate::types::MultiplexContainerSettings).
    pub fn builder() -> crate::types::builders::MultiplexContainerSettingsBuilder {
        crate::types::builders::MultiplexContainerSettingsBuilder::default()
    }
}

/// A builder for [`MultiplexContainerSettings`](crate::types::MultiplexContainerSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MultiplexContainerSettingsBuilder {
    pub(crate) multiplex_m2ts_settings: ::std::option::Option<crate::types::MultiplexM2tsSettings>,
}
impl MultiplexContainerSettingsBuilder {
    /// Multiplex M2ts Settings
    pub fn multiplex_m2ts_settings(mut self, input: crate::types::MultiplexM2tsSettings) -> Self {
        self.multiplex_m2ts_settings = ::std::option::Option::Some(input);
        self
    }
    /// Multiplex M2ts Settings
    pub fn set_multiplex_m2ts_settings(mut self, input: ::std::option::Option<crate::types::MultiplexM2tsSettings>) -> Self {
        self.multiplex_m2ts_settings = input;
        self
    }
    /// Multiplex M2ts Settings
    pub fn get_multiplex_m2ts_settings(&self) -> &::std::option::Option<crate::types::MultiplexM2tsSettings> {
        &self.multiplex_m2ts_settings
    }
    /// Consumes the builder and constructs a [`MultiplexContainerSettings`](crate::types::MultiplexContainerSettings).
    pub fn build(self) -> crate::types::MultiplexContainerSettings {
        crate::types::MultiplexContainerSettings {
            multiplex_m2ts_settings: self.multiplex_m2ts_settings,
        }
    }
}
