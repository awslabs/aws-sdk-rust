// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Avail Blanking
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AvailBlanking {
    /// Blanking image to be used. Leave empty for solid black. Only bmp and png images are supported.
    #[doc(hidden)]
    pub avail_blanking_image: std::option::Option<crate::types::InputLocation>,
    /// When set to enabled, causes video, audio and captions to be blanked when insertion metadata is added.
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::AvailBlankingState>,
}
impl AvailBlanking {
    /// Blanking image to be used. Leave empty for solid black. Only bmp and png images are supported.
    pub fn avail_blanking_image(&self) -> std::option::Option<&crate::types::InputLocation> {
        self.avail_blanking_image.as_ref()
    }
    /// When set to enabled, causes video, audio and captions to be blanked when insertion metadata is added.
    pub fn state(&self) -> std::option::Option<&crate::types::AvailBlankingState> {
        self.state.as_ref()
    }
}
impl AvailBlanking {
    /// Creates a new builder-style object to manufacture [`AvailBlanking`](crate::types::AvailBlanking).
    pub fn builder() -> crate::types::builders::AvailBlankingBuilder {
        crate::types::builders::AvailBlankingBuilder::default()
    }
}

/// A builder for [`AvailBlanking`](crate::types::AvailBlanking).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AvailBlankingBuilder {
    pub(crate) avail_blanking_image: std::option::Option<crate::types::InputLocation>,
    pub(crate) state: std::option::Option<crate::types::AvailBlankingState>,
}
impl AvailBlankingBuilder {
    /// Blanking image to be used. Leave empty for solid black. Only bmp and png images are supported.
    pub fn avail_blanking_image(mut self, input: crate::types::InputLocation) -> Self {
        self.avail_blanking_image = Some(input);
        self
    }
    /// Blanking image to be used. Leave empty for solid black. Only bmp and png images are supported.
    pub fn set_avail_blanking_image(
        mut self,
        input: std::option::Option<crate::types::InputLocation>,
    ) -> Self {
        self.avail_blanking_image = input;
        self
    }
    /// When set to enabled, causes video, audio and captions to be blanked when insertion metadata is added.
    pub fn state(mut self, input: crate::types::AvailBlankingState) -> Self {
        self.state = Some(input);
        self
    }
    /// When set to enabled, causes video, audio and captions to be blanked when insertion metadata is added.
    pub fn set_state(
        mut self,
        input: std::option::Option<crate::types::AvailBlankingState>,
    ) -> Self {
        self.state = input;
        self
    }
    /// Consumes the builder and constructs a [`AvailBlanking`](crate::types::AvailBlanking).
    pub fn build(self) -> crate::types::AvailBlanking {
        crate::types::AvailBlanking {
            avail_blanking_image: self.avail_blanking_image,
            state: self.state,
        }
    }
}
