// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Placeholder documentation for MaintenanceCreateSettings
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MaintenanceCreateSettings {
    /// Choose one day of the week for maintenance. The chosen day is used for all future maintenance windows.
    #[doc(hidden)]
    pub maintenance_day: std::option::Option<crate::types::MaintenanceDay>,
    /// Choose the hour that maintenance will start. The chosen time is used for all future maintenance windows.
    #[doc(hidden)]
    pub maintenance_start_time: std::option::Option<std::string::String>,
}
impl MaintenanceCreateSettings {
    /// Choose one day of the week for maintenance. The chosen day is used for all future maintenance windows.
    pub fn maintenance_day(&self) -> std::option::Option<&crate::types::MaintenanceDay> {
        self.maintenance_day.as_ref()
    }
    /// Choose the hour that maintenance will start. The chosen time is used for all future maintenance windows.
    pub fn maintenance_start_time(&self) -> std::option::Option<&str> {
        self.maintenance_start_time.as_deref()
    }
}
impl MaintenanceCreateSettings {
    /// Creates a new builder-style object to manufacture [`MaintenanceCreateSettings`](crate::types::MaintenanceCreateSettings).
    pub fn builder() -> crate::types::builders::MaintenanceCreateSettingsBuilder {
        crate::types::builders::MaintenanceCreateSettingsBuilder::default()
    }
}

/// A builder for [`MaintenanceCreateSettings`](crate::types::MaintenanceCreateSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MaintenanceCreateSettingsBuilder {
    pub(crate) maintenance_day: std::option::Option<crate::types::MaintenanceDay>,
    pub(crate) maintenance_start_time: std::option::Option<std::string::String>,
}
impl MaintenanceCreateSettingsBuilder {
    /// Choose one day of the week for maintenance. The chosen day is used for all future maintenance windows.
    pub fn maintenance_day(mut self, input: crate::types::MaintenanceDay) -> Self {
        self.maintenance_day = Some(input);
        self
    }
    /// Choose one day of the week for maintenance. The chosen day is used for all future maintenance windows.
    pub fn set_maintenance_day(
        mut self,
        input: std::option::Option<crate::types::MaintenanceDay>,
    ) -> Self {
        self.maintenance_day = input;
        self
    }
    /// Choose the hour that maintenance will start. The chosen time is used for all future maintenance windows.
    pub fn maintenance_start_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.maintenance_start_time = Some(input.into());
        self
    }
    /// Choose the hour that maintenance will start. The chosen time is used for all future maintenance windows.
    pub fn set_maintenance_start_time(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.maintenance_start_time = input;
        self
    }
    /// Consumes the builder and constructs a [`MaintenanceCreateSettings`](crate::types::MaintenanceCreateSettings).
    pub fn build(self) -> crate::types::MaintenanceCreateSettings {
        crate::types::MaintenanceCreateSettings {
            maintenance_day: self.maintenance_day,
            maintenance_start_time: self.maintenance_start_time,
        }
    }
}
