// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Video Selector Settings
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VideoSelectorSettings {
    /// Video Selector Pid
    #[doc(hidden)]
    pub video_selector_pid: std::option::Option<crate::types::VideoSelectorPid>,
    /// Video Selector Program Id
    #[doc(hidden)]
    pub video_selector_program_id: std::option::Option<crate::types::VideoSelectorProgramId>,
}
impl VideoSelectorSettings {
    /// Video Selector Pid
    pub fn video_selector_pid(&self) -> std::option::Option<&crate::types::VideoSelectorPid> {
        self.video_selector_pid.as_ref()
    }
    /// Video Selector Program Id
    pub fn video_selector_program_id(
        &self,
    ) -> std::option::Option<&crate::types::VideoSelectorProgramId> {
        self.video_selector_program_id.as_ref()
    }
}
impl VideoSelectorSettings {
    /// Creates a new builder-style object to manufacture [`VideoSelectorSettings`](crate::types::VideoSelectorSettings).
    pub fn builder() -> crate::types::builders::VideoSelectorSettingsBuilder {
        crate::types::builders::VideoSelectorSettingsBuilder::default()
    }
}

/// A builder for [`VideoSelectorSettings`](crate::types::VideoSelectorSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VideoSelectorSettingsBuilder {
    pub(crate) video_selector_pid: std::option::Option<crate::types::VideoSelectorPid>,
    pub(crate) video_selector_program_id: std::option::Option<crate::types::VideoSelectorProgramId>,
}
impl VideoSelectorSettingsBuilder {
    /// Video Selector Pid
    pub fn video_selector_pid(mut self, input: crate::types::VideoSelectorPid) -> Self {
        self.video_selector_pid = Some(input);
        self
    }
    /// Video Selector Pid
    pub fn set_video_selector_pid(
        mut self,
        input: std::option::Option<crate::types::VideoSelectorPid>,
    ) -> Self {
        self.video_selector_pid = input;
        self
    }
    /// Video Selector Program Id
    pub fn video_selector_program_id(
        mut self,
        input: crate::types::VideoSelectorProgramId,
    ) -> Self {
        self.video_selector_program_id = Some(input);
        self
    }
    /// Video Selector Program Id
    pub fn set_video_selector_program_id(
        mut self,
        input: std::option::Option<crate::types::VideoSelectorProgramId>,
    ) -> Self {
        self.video_selector_program_id = input;
        self
    }
    /// Consumes the builder and constructs a [`VideoSelectorSettings`](crate::types::VideoSelectorSettings).
    pub fn build(self) -> crate::types::VideoSelectorSettings {
        crate::types::VideoSelectorSettings {
            video_selector_pid: self.video_selector_pid,
            video_selector_program_id: self.video_selector_program_id,
        }
    }
}
