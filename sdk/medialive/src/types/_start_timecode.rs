// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Settings to identify the start of the clip.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartTimecode {
    /// The timecode for the frame where you want to start the clip. Optional; if not specified, the clip starts at first frame in the file. Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF.
    #[doc(hidden)]
    pub timecode: std::option::Option<std::string::String>,
}
impl StartTimecode {
    /// The timecode for the frame where you want to start the clip. Optional; if not specified, the clip starts at first frame in the file. Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF.
    pub fn timecode(&self) -> std::option::Option<&str> {
        self.timecode.as_deref()
    }
}
impl StartTimecode {
    /// Creates a new builder-style object to manufacture [`StartTimecode`](crate::types::StartTimecode).
    pub fn builder() -> crate::types::builders::StartTimecodeBuilder {
        crate::types::builders::StartTimecodeBuilder::default()
    }
}

/// A builder for [`StartTimecode`](crate::types::StartTimecode).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartTimecodeBuilder {
    pub(crate) timecode: std::option::Option<std::string::String>,
}
impl StartTimecodeBuilder {
    /// The timecode for the frame where you want to start the clip. Optional; if not specified, the clip starts at first frame in the file. Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF.
    pub fn timecode(mut self, input: impl Into<std::string::String>) -> Self {
        self.timecode = Some(input.into());
        self
    }
    /// The timecode for the frame where you want to start the clip. Optional; if not specified, the clip starts at first frame in the file. Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF.
    pub fn set_timecode(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.timecode = input;
        self
    }
    /// Consumes the builder and constructs a [`StartTimecode`](crate::types::StartTimecode).
    pub fn build(self) -> crate::types::StartTimecode {
        crate::types::StartTimecode {
            timecode: self.timecode,
        }
    }
}
