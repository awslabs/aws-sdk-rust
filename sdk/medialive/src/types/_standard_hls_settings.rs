// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Standard Hls Settings
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StandardHlsSettings {
    /// List all the audio groups that are used with the video output stream. Input all the audio GROUP-IDs that are associated to the video, separate by ','.
    pub audio_rendition_sets: ::std::option::Option<::std::string::String>,
    /// Settings information for the .m3u8 container
    pub m3u8_settings: ::std::option::Option<crate::types::M3u8Settings>,
}
impl StandardHlsSettings {
    /// List all the audio groups that are used with the video output stream. Input all the audio GROUP-IDs that are associated to the video, separate by ','.
    pub fn audio_rendition_sets(&self) -> ::std::option::Option<&str> {
        self.audio_rendition_sets.as_deref()
    }
    /// Settings information for the .m3u8 container
    pub fn m3u8_settings(&self) -> ::std::option::Option<&crate::types::M3u8Settings> {
        self.m3u8_settings.as_ref()
    }
}
impl StandardHlsSettings {
    /// Creates a new builder-style object to manufacture [`StandardHlsSettings`](crate::types::StandardHlsSettings).
    pub fn builder() -> crate::types::builders::StandardHlsSettingsBuilder {
        crate::types::builders::StandardHlsSettingsBuilder::default()
    }
}

/// A builder for [`StandardHlsSettings`](crate::types::StandardHlsSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StandardHlsSettingsBuilder {
    pub(crate) audio_rendition_sets: ::std::option::Option<::std::string::String>,
    pub(crate) m3u8_settings: ::std::option::Option<crate::types::M3u8Settings>,
}
impl StandardHlsSettingsBuilder {
    /// List all the audio groups that are used with the video output stream. Input all the audio GROUP-IDs that are associated to the video, separate by ','.
    pub fn audio_rendition_sets(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.audio_rendition_sets = ::std::option::Option::Some(input.into());
        self
    }
    /// List all the audio groups that are used with the video output stream. Input all the audio GROUP-IDs that are associated to the video, separate by ','.
    pub fn set_audio_rendition_sets(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.audio_rendition_sets = input;
        self
    }
    /// List all the audio groups that are used with the video output stream. Input all the audio GROUP-IDs that are associated to the video, separate by ','.
    pub fn get_audio_rendition_sets(&self) -> &::std::option::Option<::std::string::String> {
        &self.audio_rendition_sets
    }
    /// Settings information for the .m3u8 container
    /// This field is required.
    pub fn m3u8_settings(mut self, input: crate::types::M3u8Settings) -> Self {
        self.m3u8_settings = ::std::option::Option::Some(input);
        self
    }
    /// Settings information for the .m3u8 container
    pub fn set_m3u8_settings(mut self, input: ::std::option::Option<crate::types::M3u8Settings>) -> Self {
        self.m3u8_settings = input;
        self
    }
    /// Settings information for the .m3u8 container
    pub fn get_m3u8_settings(&self) -> &::std::option::Option<crate::types::M3u8Settings> {
        &self.m3u8_settings
    }
    /// Consumes the builder and constructs a [`StandardHlsSettings`](crate::types::StandardHlsSettings).
    pub fn build(self) -> crate::types::StandardHlsSettings {
        crate::types::StandardHlsSettings {
            audio_rendition_sets: self.audio_rendition_sets,
            m3u8_settings: self.m3u8_settings,
        }
    }
}
