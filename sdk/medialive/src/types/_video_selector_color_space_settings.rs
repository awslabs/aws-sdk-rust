// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Video Selector Color Space Settings
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VideoSelectorColorSpaceSettings {
    /// Hdr10 Settings
    #[doc(hidden)]
    pub hdr10_settings: std::option::Option<crate::types::Hdr10Settings>,
}
impl VideoSelectorColorSpaceSettings {
    /// Hdr10 Settings
    pub fn hdr10_settings(&self) -> std::option::Option<&crate::types::Hdr10Settings> {
        self.hdr10_settings.as_ref()
    }
}
impl VideoSelectorColorSpaceSettings {
    /// Creates a new builder-style object to manufacture [`VideoSelectorColorSpaceSettings`](crate::types::VideoSelectorColorSpaceSettings).
    pub fn builder() -> crate::types::builders::VideoSelectorColorSpaceSettingsBuilder {
        crate::types::builders::VideoSelectorColorSpaceSettingsBuilder::default()
    }
}

/// A builder for [`VideoSelectorColorSpaceSettings`](crate::types::VideoSelectorColorSpaceSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VideoSelectorColorSpaceSettingsBuilder {
    pub(crate) hdr10_settings: std::option::Option<crate::types::Hdr10Settings>,
}
impl VideoSelectorColorSpaceSettingsBuilder {
    /// Hdr10 Settings
    pub fn hdr10_settings(mut self, input: crate::types::Hdr10Settings) -> Self {
        self.hdr10_settings = Some(input);
        self
    }
    /// Hdr10 Settings
    pub fn set_hdr10_settings(
        mut self,
        input: std::option::Option<crate::types::Hdr10Settings>,
    ) -> Self {
        self.hdr10_settings = input;
        self
    }
    /// Consumes the builder and constructs a [`VideoSelectorColorSpaceSettings`](crate::types::VideoSelectorColorSpaceSettings).
    pub fn build(self) -> crate::types::VideoSelectorColorSpaceSettings {
        crate::types::VideoSelectorColorSpaceSettings {
            hdr10_settings: self.hdr10_settings,
        }
    }
}
