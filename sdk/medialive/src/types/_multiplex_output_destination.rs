// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Multiplex output destination settings
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MultiplexOutputDestination {
    /// Multiplex MediaConnect output destination settings.
    #[doc(hidden)]
    pub media_connect_settings:
        std::option::Option<crate::types::MultiplexMediaConnectOutputDestinationSettings>,
}
impl MultiplexOutputDestination {
    /// Multiplex MediaConnect output destination settings.
    pub fn media_connect_settings(
        &self,
    ) -> std::option::Option<&crate::types::MultiplexMediaConnectOutputDestinationSettings> {
        self.media_connect_settings.as_ref()
    }
}
impl MultiplexOutputDestination {
    /// Creates a new builder-style object to manufacture [`MultiplexOutputDestination`](crate::types::MultiplexOutputDestination).
    pub fn builder() -> crate::types::builders::MultiplexOutputDestinationBuilder {
        crate::types::builders::MultiplexOutputDestinationBuilder::default()
    }
}

/// A builder for [`MultiplexOutputDestination`](crate::types::MultiplexOutputDestination).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MultiplexOutputDestinationBuilder {
    pub(crate) media_connect_settings:
        std::option::Option<crate::types::MultiplexMediaConnectOutputDestinationSettings>,
}
impl MultiplexOutputDestinationBuilder {
    /// Multiplex MediaConnect output destination settings.
    pub fn media_connect_settings(
        mut self,
        input: crate::types::MultiplexMediaConnectOutputDestinationSettings,
    ) -> Self {
        self.media_connect_settings = Some(input);
        self
    }
    /// Multiplex MediaConnect output destination settings.
    pub fn set_media_connect_settings(
        mut self,
        input: std::option::Option<crate::types::MultiplexMediaConnectOutputDestinationSettings>,
    ) -> Self {
        self.media_connect_settings = input;
        self
    }
    /// Consumes the builder and constructs a [`MultiplexOutputDestination`](crate::types::MultiplexOutputDestination).
    pub fn build(self) -> crate::types::MultiplexOutputDestination {
        crate::types::MultiplexOutputDestination {
            media_connect_settings: self.media_connect_settings,
        }
    }
}
