// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Nielsen Naes Ii Nw
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NielsenNaesIiNw {
    /// Enter the check digit string for the watermark
    #[doc(hidden)]
    pub check_digit_string: std::option::Option<std::string::String>,
    /// Enter the Nielsen Source ID (SID) to include in the watermark
    #[doc(hidden)]
    pub sid: f64,
}
impl NielsenNaesIiNw {
    /// Enter the check digit string for the watermark
    pub fn check_digit_string(&self) -> std::option::Option<&str> {
        self.check_digit_string.as_deref()
    }
    /// Enter the Nielsen Source ID (SID) to include in the watermark
    pub fn sid(&self) -> f64 {
        self.sid
    }
}
impl NielsenNaesIiNw {
    /// Creates a new builder-style object to manufacture [`NielsenNaesIiNw`](crate::types::NielsenNaesIiNw).
    pub fn builder() -> crate::types::builders::NielsenNaesIiNwBuilder {
        crate::types::builders::NielsenNaesIiNwBuilder::default()
    }
}

/// A builder for [`NielsenNaesIiNw`](crate::types::NielsenNaesIiNw).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NielsenNaesIiNwBuilder {
    pub(crate) check_digit_string: std::option::Option<std::string::String>,
    pub(crate) sid: std::option::Option<f64>,
}
impl NielsenNaesIiNwBuilder {
    /// Enter the check digit string for the watermark
    pub fn check_digit_string(mut self, input: impl Into<std::string::String>) -> Self {
        self.check_digit_string = Some(input.into());
        self
    }
    /// Enter the check digit string for the watermark
    pub fn set_check_digit_string(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.check_digit_string = input;
        self
    }
    /// Enter the Nielsen Source ID (SID) to include in the watermark
    pub fn sid(mut self, input: f64) -> Self {
        self.sid = Some(input);
        self
    }
    /// Enter the Nielsen Source ID (SID) to include in the watermark
    pub fn set_sid(mut self, input: std::option::Option<f64>) -> Self {
        self.sid = input;
        self
    }
    /// Consumes the builder and constructs a [`NielsenNaesIiNw`](crate::types::NielsenNaesIiNw).
    pub fn build(self) -> crate::types::NielsenNaesIiNw {
        crate::types::NielsenNaesIiNw {
            check_digit_string: self.check_digit_string,
            sid: self.sid.unwrap_or_default(),
        }
    }
}
