// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// A list of schedule actions to delete.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchScheduleActionDeleteRequest {
    /// A list of schedule actions to delete.
    pub action_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl BatchScheduleActionDeleteRequest {
    /// A list of schedule actions to delete.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.action_names.is_none()`.
    pub fn action_names(&self) -> &[::std::string::String] {
        self.action_names.as_deref().unwrap_or_default()
    }
}
impl BatchScheduleActionDeleteRequest {
    /// Creates a new builder-style object to manufacture [`BatchScheduleActionDeleteRequest`](crate::types::BatchScheduleActionDeleteRequest).
    pub fn builder() -> crate::types::builders::BatchScheduleActionDeleteRequestBuilder {
        crate::types::builders::BatchScheduleActionDeleteRequestBuilder::default()
    }
}

/// A builder for [`BatchScheduleActionDeleteRequest`](crate::types::BatchScheduleActionDeleteRequest).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchScheduleActionDeleteRequestBuilder {
    pub(crate) action_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl BatchScheduleActionDeleteRequestBuilder {
    /// Appends an item to `action_names`.
    ///
    /// To override the contents of this collection use [`set_action_names`](Self::set_action_names).
    ///
    /// A list of schedule actions to delete.
    pub fn action_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.action_names.unwrap_or_default();
        v.push(input.into());
        self.action_names = ::std::option::Option::Some(v);
        self
    }
    /// A list of schedule actions to delete.
    pub fn set_action_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.action_names = input;
        self
    }
    /// A list of schedule actions to delete.
    pub fn get_action_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.action_names
    }
    /// Consumes the builder and constructs a [`BatchScheduleActionDeleteRequest`](crate::types::BatchScheduleActionDeleteRequest).
    pub fn build(self) -> crate::types::BatchScheduleActionDeleteRequest {
        crate::types::BatchScheduleActionDeleteRequest {
            action_names: self.action_names,
        }
    }
}
