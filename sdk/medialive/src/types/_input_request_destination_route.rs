// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// A network route configuration.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InputRequestDestinationRoute {
    /// The CIDR of the route.
    pub cidr: ::std::option::Option<::std::string::String>,
    /// An optional gateway for the route.
    pub gateway: ::std::option::Option<::std::string::String>,
}
impl InputRequestDestinationRoute {
    /// The CIDR of the route.
    pub fn cidr(&self) -> ::std::option::Option<&str> {
        self.cidr.as_deref()
    }
    /// An optional gateway for the route.
    pub fn gateway(&self) -> ::std::option::Option<&str> {
        self.gateway.as_deref()
    }
}
impl InputRequestDestinationRoute {
    /// Creates a new builder-style object to manufacture [`InputRequestDestinationRoute`](crate::types::InputRequestDestinationRoute).
    pub fn builder() -> crate::types::builders::InputRequestDestinationRouteBuilder {
        crate::types::builders::InputRequestDestinationRouteBuilder::default()
    }
}

/// A builder for [`InputRequestDestinationRoute`](crate::types::InputRequestDestinationRoute).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InputRequestDestinationRouteBuilder {
    pub(crate) cidr: ::std::option::Option<::std::string::String>,
    pub(crate) gateway: ::std::option::Option<::std::string::String>,
}
impl InputRequestDestinationRouteBuilder {
    /// The CIDR of the route.
    pub fn cidr(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cidr = ::std::option::Option::Some(input.into());
        self
    }
    /// The CIDR of the route.
    pub fn set_cidr(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cidr = input;
        self
    }
    /// The CIDR of the route.
    pub fn get_cidr(&self) -> &::std::option::Option<::std::string::String> {
        &self.cidr
    }
    /// An optional gateway for the route.
    pub fn gateway(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.gateway = ::std::option::Option::Some(input.into());
        self
    }
    /// An optional gateway for the route.
    pub fn set_gateway(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.gateway = input;
        self
    }
    /// An optional gateway for the route.
    pub fn get_gateway(&self) -> &::std::option::Option<::std::string::String> {
        &self.gateway
    }
    /// Consumes the builder and constructs a [`InputRequestDestinationRoute`](crate::types::InputRequestDestinationRoute).
    pub fn build(self) -> crate::types::InputRequestDestinationRoute {
        crate::types::InputRequestDestinationRoute {
            cidr: self.cidr,
            gateway: self.gateway,
        }
    }
}
