// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Elemental anywhere settings
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeAnywhereSettings {
    /// The ID of the channel placement group for the channel.
    pub channel_placement_group_id: ::std::option::Option<::std::string::String>,
    /// The ID of the cluster for the channel.
    pub cluster_id: ::std::option::Option<::std::string::String>,
}
impl DescribeAnywhereSettings {
    /// The ID of the channel placement group for the channel.
    pub fn channel_placement_group_id(&self) -> ::std::option::Option<&str> {
        self.channel_placement_group_id.as_deref()
    }
    /// The ID of the cluster for the channel.
    pub fn cluster_id(&self) -> ::std::option::Option<&str> {
        self.cluster_id.as_deref()
    }
}
impl DescribeAnywhereSettings {
    /// Creates a new builder-style object to manufacture [`DescribeAnywhereSettings`](crate::types::DescribeAnywhereSettings).
    pub fn builder() -> crate::types::builders::DescribeAnywhereSettingsBuilder {
        crate::types::builders::DescribeAnywhereSettingsBuilder::default()
    }
}

/// A builder for [`DescribeAnywhereSettings`](crate::types::DescribeAnywhereSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeAnywhereSettingsBuilder {
    pub(crate) channel_placement_group_id: ::std::option::Option<::std::string::String>,
    pub(crate) cluster_id: ::std::option::Option<::std::string::String>,
}
impl DescribeAnywhereSettingsBuilder {
    /// The ID of the channel placement group for the channel.
    pub fn channel_placement_group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.channel_placement_group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The ID of the channel placement group for the channel.
    pub fn set_channel_placement_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.channel_placement_group_id = input;
        self
    }
    /// The ID of the channel placement group for the channel.
    pub fn get_channel_placement_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.channel_placement_group_id
    }
    /// The ID of the cluster for the channel.
    pub fn cluster_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The ID of the cluster for the channel.
    pub fn set_cluster_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_id = input;
        self
    }
    /// The ID of the cluster for the channel.
    pub fn get_cluster_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_id
    }
    /// Consumes the builder and constructs a [`DescribeAnywhereSettings`](crate::types::DescribeAnywhereSettings).
    pub fn build(self) -> crate::types::DescribeAnywhereSettings {
        crate::types::DescribeAnywhereSettings {
            channel_placement_group_id: self.channel_placement_group_id,
            cluster_id: self.cluster_id,
        }
    }
}
