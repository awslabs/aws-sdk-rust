// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Audio Hls Rendition Selection
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AudioHlsRenditionSelection {
    /// Specifies the GROUP-ID in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    pub group_id: ::std::option::Option<::std::string::String>,
    /// Specifies the NAME in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    pub name: ::std::option::Option<::std::string::String>,
}
impl AudioHlsRenditionSelection {
    /// Specifies the GROUP-ID in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    pub fn group_id(&self) -> ::std::option::Option<&str> {
        self.group_id.as_deref()
    }
    /// Specifies the NAME in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl AudioHlsRenditionSelection {
    /// Creates a new builder-style object to manufacture [`AudioHlsRenditionSelection`](crate::types::AudioHlsRenditionSelection).
    pub fn builder() -> crate::types::builders::AudioHlsRenditionSelectionBuilder {
        crate::types::builders::AudioHlsRenditionSelectionBuilder::default()
    }
}

/// A builder for [`AudioHlsRenditionSelection`](crate::types::AudioHlsRenditionSelection).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AudioHlsRenditionSelectionBuilder {
    pub(crate) group_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
}
impl AudioHlsRenditionSelectionBuilder {
    /// Specifies the GROUP-ID in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    /// This field is required.
    pub fn group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Specifies the GROUP-ID in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    pub fn set_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.group_id = input;
        self
    }
    /// Specifies the GROUP-ID in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    pub fn get_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.group_id
    }
    /// Specifies the NAME in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// Specifies the NAME in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Specifies the NAME in the #EXT-X-MEDIA tag of the target HLS audio rendition.
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Consumes the builder and constructs a [`AudioHlsRenditionSelection`](crate::types::AudioHlsRenditionSelection).
    pub fn build(self) -> crate::types::AudioHlsRenditionSelection {
        crate::types::AudioHlsRenditionSelection {
            group_id: self.group_id,
            name: self.name,
        }
    }
}
