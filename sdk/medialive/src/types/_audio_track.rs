// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Audio Track
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AudioTrack {
    /// 1-based integer value that maps to a specific audio track
    pub track: ::std::option::Option<i32>,
}
impl AudioTrack {
    /// 1-based integer value that maps to a specific audio track
    pub fn track(&self) -> ::std::option::Option<i32> {
        self.track
    }
}
impl AudioTrack {
    /// Creates a new builder-style object to manufacture [`AudioTrack`](crate::types::AudioTrack).
    pub fn builder() -> crate::types::builders::AudioTrackBuilder {
        crate::types::builders::AudioTrackBuilder::default()
    }
}

/// A builder for [`AudioTrack`](crate::types::AudioTrack).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AudioTrackBuilder {
    pub(crate) track: ::std::option::Option<i32>,
}
impl AudioTrackBuilder {
    /// 1-based integer value that maps to a specific audio track
    /// This field is required.
    pub fn track(mut self, input: i32) -> Self {
        self.track = ::std::option::Option::Some(input);
        self
    }
    /// 1-based integer value that maps to a specific audio track
    pub fn set_track(mut self, input: ::std::option::Option<i32>) -> Self {
        self.track = input;
        self
    }
    /// 1-based integer value that maps to a specific audio track
    pub fn get_track(&self) -> &::std::option::Option<i32> {
        &self.track
    }
    /// Consumes the builder and constructs a [`AudioTrack`](crate::types::AudioTrack).
    pub fn build(self) -> crate::types::AudioTrack {
        crate::types::AudioTrack { track: self.track }
    }
}
