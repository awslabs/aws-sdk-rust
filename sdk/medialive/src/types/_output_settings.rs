// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Output Settings
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OutputSettings {
    /// Archive Output Settings
    pub archive_output_settings: ::std::option::Option<crate::types::ArchiveOutputSettings>,
    /// Frame Capture Output Settings
    pub frame_capture_output_settings: ::std::option::Option<crate::types::FrameCaptureOutputSettings>,
    /// Hls Output Settings
    pub hls_output_settings: ::std::option::Option<crate::types::HlsOutputSettings>,
    /// Media Package Output Settings
    pub media_package_output_settings: ::std::option::Option<crate::types::MediaPackageOutputSettings>,
    /// Ms Smooth Output Settings
    pub ms_smooth_output_settings: ::std::option::Option<crate::types::MsSmoothOutputSettings>,
    /// Multiplex Output Settings
    pub multiplex_output_settings: ::std::option::Option<crate::types::MultiplexOutputSettings>,
    /// Rtmp Output Settings
    pub rtmp_output_settings: ::std::option::Option<crate::types::RtmpOutputSettings>,
    /// Udp Output Settings
    pub udp_output_settings: ::std::option::Option<crate::types::UdpOutputSettings>,
    /// Cmaf Ingest Output Settings
    pub cmaf_ingest_output_settings: ::std::option::Option<crate::types::CmafIngestOutputSettings>,
    /// Srt Output Settings
    pub srt_output_settings: ::std::option::Option<crate::types::SrtOutputSettings>,
}
impl OutputSettings {
    /// Archive Output Settings
    pub fn archive_output_settings(&self) -> ::std::option::Option<&crate::types::ArchiveOutputSettings> {
        self.archive_output_settings.as_ref()
    }
    /// Frame Capture Output Settings
    pub fn frame_capture_output_settings(&self) -> ::std::option::Option<&crate::types::FrameCaptureOutputSettings> {
        self.frame_capture_output_settings.as_ref()
    }
    /// Hls Output Settings
    pub fn hls_output_settings(&self) -> ::std::option::Option<&crate::types::HlsOutputSettings> {
        self.hls_output_settings.as_ref()
    }
    /// Media Package Output Settings
    pub fn media_package_output_settings(&self) -> ::std::option::Option<&crate::types::MediaPackageOutputSettings> {
        self.media_package_output_settings.as_ref()
    }
    /// Ms Smooth Output Settings
    pub fn ms_smooth_output_settings(&self) -> ::std::option::Option<&crate::types::MsSmoothOutputSettings> {
        self.ms_smooth_output_settings.as_ref()
    }
    /// Multiplex Output Settings
    pub fn multiplex_output_settings(&self) -> ::std::option::Option<&crate::types::MultiplexOutputSettings> {
        self.multiplex_output_settings.as_ref()
    }
    /// Rtmp Output Settings
    pub fn rtmp_output_settings(&self) -> ::std::option::Option<&crate::types::RtmpOutputSettings> {
        self.rtmp_output_settings.as_ref()
    }
    /// Udp Output Settings
    pub fn udp_output_settings(&self) -> ::std::option::Option<&crate::types::UdpOutputSettings> {
        self.udp_output_settings.as_ref()
    }
    /// Cmaf Ingest Output Settings
    pub fn cmaf_ingest_output_settings(&self) -> ::std::option::Option<&crate::types::CmafIngestOutputSettings> {
        self.cmaf_ingest_output_settings.as_ref()
    }
    /// Srt Output Settings
    pub fn srt_output_settings(&self) -> ::std::option::Option<&crate::types::SrtOutputSettings> {
        self.srt_output_settings.as_ref()
    }
}
impl OutputSettings {
    /// Creates a new builder-style object to manufacture [`OutputSettings`](crate::types::OutputSettings).
    pub fn builder() -> crate::types::builders::OutputSettingsBuilder {
        crate::types::builders::OutputSettingsBuilder::default()
    }
}

/// A builder for [`OutputSettings`](crate::types::OutputSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OutputSettingsBuilder {
    pub(crate) archive_output_settings: ::std::option::Option<crate::types::ArchiveOutputSettings>,
    pub(crate) frame_capture_output_settings: ::std::option::Option<crate::types::FrameCaptureOutputSettings>,
    pub(crate) hls_output_settings: ::std::option::Option<crate::types::HlsOutputSettings>,
    pub(crate) media_package_output_settings: ::std::option::Option<crate::types::MediaPackageOutputSettings>,
    pub(crate) ms_smooth_output_settings: ::std::option::Option<crate::types::MsSmoothOutputSettings>,
    pub(crate) multiplex_output_settings: ::std::option::Option<crate::types::MultiplexOutputSettings>,
    pub(crate) rtmp_output_settings: ::std::option::Option<crate::types::RtmpOutputSettings>,
    pub(crate) udp_output_settings: ::std::option::Option<crate::types::UdpOutputSettings>,
    pub(crate) cmaf_ingest_output_settings: ::std::option::Option<crate::types::CmafIngestOutputSettings>,
    pub(crate) srt_output_settings: ::std::option::Option<crate::types::SrtOutputSettings>,
}
impl OutputSettingsBuilder {
    /// Archive Output Settings
    pub fn archive_output_settings(mut self, input: crate::types::ArchiveOutputSettings) -> Self {
        self.archive_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Archive Output Settings
    pub fn set_archive_output_settings(mut self, input: ::std::option::Option<crate::types::ArchiveOutputSettings>) -> Self {
        self.archive_output_settings = input;
        self
    }
    /// Archive Output Settings
    pub fn get_archive_output_settings(&self) -> &::std::option::Option<crate::types::ArchiveOutputSettings> {
        &self.archive_output_settings
    }
    /// Frame Capture Output Settings
    pub fn frame_capture_output_settings(mut self, input: crate::types::FrameCaptureOutputSettings) -> Self {
        self.frame_capture_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Frame Capture Output Settings
    pub fn set_frame_capture_output_settings(mut self, input: ::std::option::Option<crate::types::FrameCaptureOutputSettings>) -> Self {
        self.frame_capture_output_settings = input;
        self
    }
    /// Frame Capture Output Settings
    pub fn get_frame_capture_output_settings(&self) -> &::std::option::Option<crate::types::FrameCaptureOutputSettings> {
        &self.frame_capture_output_settings
    }
    /// Hls Output Settings
    pub fn hls_output_settings(mut self, input: crate::types::HlsOutputSettings) -> Self {
        self.hls_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Hls Output Settings
    pub fn set_hls_output_settings(mut self, input: ::std::option::Option<crate::types::HlsOutputSettings>) -> Self {
        self.hls_output_settings = input;
        self
    }
    /// Hls Output Settings
    pub fn get_hls_output_settings(&self) -> &::std::option::Option<crate::types::HlsOutputSettings> {
        &self.hls_output_settings
    }
    /// Media Package Output Settings
    pub fn media_package_output_settings(mut self, input: crate::types::MediaPackageOutputSettings) -> Self {
        self.media_package_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Media Package Output Settings
    pub fn set_media_package_output_settings(mut self, input: ::std::option::Option<crate::types::MediaPackageOutputSettings>) -> Self {
        self.media_package_output_settings = input;
        self
    }
    /// Media Package Output Settings
    pub fn get_media_package_output_settings(&self) -> &::std::option::Option<crate::types::MediaPackageOutputSettings> {
        &self.media_package_output_settings
    }
    /// Ms Smooth Output Settings
    pub fn ms_smooth_output_settings(mut self, input: crate::types::MsSmoothOutputSettings) -> Self {
        self.ms_smooth_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Ms Smooth Output Settings
    pub fn set_ms_smooth_output_settings(mut self, input: ::std::option::Option<crate::types::MsSmoothOutputSettings>) -> Self {
        self.ms_smooth_output_settings = input;
        self
    }
    /// Ms Smooth Output Settings
    pub fn get_ms_smooth_output_settings(&self) -> &::std::option::Option<crate::types::MsSmoothOutputSettings> {
        &self.ms_smooth_output_settings
    }
    /// Multiplex Output Settings
    pub fn multiplex_output_settings(mut self, input: crate::types::MultiplexOutputSettings) -> Self {
        self.multiplex_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Multiplex Output Settings
    pub fn set_multiplex_output_settings(mut self, input: ::std::option::Option<crate::types::MultiplexOutputSettings>) -> Self {
        self.multiplex_output_settings = input;
        self
    }
    /// Multiplex Output Settings
    pub fn get_multiplex_output_settings(&self) -> &::std::option::Option<crate::types::MultiplexOutputSettings> {
        &self.multiplex_output_settings
    }
    /// Rtmp Output Settings
    pub fn rtmp_output_settings(mut self, input: crate::types::RtmpOutputSettings) -> Self {
        self.rtmp_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Rtmp Output Settings
    pub fn set_rtmp_output_settings(mut self, input: ::std::option::Option<crate::types::RtmpOutputSettings>) -> Self {
        self.rtmp_output_settings = input;
        self
    }
    /// Rtmp Output Settings
    pub fn get_rtmp_output_settings(&self) -> &::std::option::Option<crate::types::RtmpOutputSettings> {
        &self.rtmp_output_settings
    }
    /// Udp Output Settings
    pub fn udp_output_settings(mut self, input: crate::types::UdpOutputSettings) -> Self {
        self.udp_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Udp Output Settings
    pub fn set_udp_output_settings(mut self, input: ::std::option::Option<crate::types::UdpOutputSettings>) -> Self {
        self.udp_output_settings = input;
        self
    }
    /// Udp Output Settings
    pub fn get_udp_output_settings(&self) -> &::std::option::Option<crate::types::UdpOutputSettings> {
        &self.udp_output_settings
    }
    /// Cmaf Ingest Output Settings
    pub fn cmaf_ingest_output_settings(mut self, input: crate::types::CmafIngestOutputSettings) -> Self {
        self.cmaf_ingest_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Cmaf Ingest Output Settings
    pub fn set_cmaf_ingest_output_settings(mut self, input: ::std::option::Option<crate::types::CmafIngestOutputSettings>) -> Self {
        self.cmaf_ingest_output_settings = input;
        self
    }
    /// Cmaf Ingest Output Settings
    pub fn get_cmaf_ingest_output_settings(&self) -> &::std::option::Option<crate::types::CmafIngestOutputSettings> {
        &self.cmaf_ingest_output_settings
    }
    /// Srt Output Settings
    pub fn srt_output_settings(mut self, input: crate::types::SrtOutputSettings) -> Self {
        self.srt_output_settings = ::std::option::Option::Some(input);
        self
    }
    /// Srt Output Settings
    pub fn set_srt_output_settings(mut self, input: ::std::option::Option<crate::types::SrtOutputSettings>) -> Self {
        self.srt_output_settings = input;
        self
    }
    /// Srt Output Settings
    pub fn get_srt_output_settings(&self) -> &::std::option::Option<crate::types::SrtOutputSettings> {
        &self.srt_output_settings
    }
    /// Consumes the builder and constructs a [`OutputSettings`](crate::types::OutputSettings).
    pub fn build(self) -> crate::types::OutputSettings {
        crate::types::OutputSettings {
            archive_output_settings: self.archive_output_settings,
            frame_capture_output_settings: self.frame_capture_output_settings,
            hls_output_settings: self.hls_output_settings,
            media_package_output_settings: self.media_package_output_settings,
            ms_smooth_output_settings: self.ms_smooth_output_settings,
            multiplex_output_settings: self.multiplex_output_settings,
            rtmp_output_settings: self.rtmp_output_settings,
            udp_output_settings: self.udp_output_settings,
            cmaf_ingest_output_settings: self.cmaf_ingest_output_settings,
            srt_output_settings: self.srt_output_settings,
        }
    }
}
