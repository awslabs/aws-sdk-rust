// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Multiplex Output Settings
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MultiplexOutputSettings {
    /// Destination is a Multiplex.
    #[doc(hidden)]
    pub destination: std::option::Option<crate::types::OutputLocationRef>,
}
impl MultiplexOutputSettings {
    /// Destination is a Multiplex.
    pub fn destination(&self) -> std::option::Option<&crate::types::OutputLocationRef> {
        self.destination.as_ref()
    }
}
impl MultiplexOutputSettings {
    /// Creates a new builder-style object to manufacture [`MultiplexOutputSettings`](crate::types::MultiplexOutputSettings).
    pub fn builder() -> crate::types::builders::MultiplexOutputSettingsBuilder {
        crate::types::builders::MultiplexOutputSettingsBuilder::default()
    }
}

/// A builder for [`MultiplexOutputSettings`](crate::types::MultiplexOutputSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MultiplexOutputSettingsBuilder {
    pub(crate) destination: std::option::Option<crate::types::OutputLocationRef>,
}
impl MultiplexOutputSettingsBuilder {
    /// Destination is a Multiplex.
    pub fn destination(mut self, input: crate::types::OutputLocationRef) -> Self {
        self.destination = Some(input);
        self
    }
    /// Destination is a Multiplex.
    pub fn set_destination(
        mut self,
        input: std::option::Option<crate::types::OutputLocationRef>,
    ) -> Self {
        self.destination = input;
        self
    }
    /// Consumes the builder and constructs a [`MultiplexOutputSettings`](crate::types::MultiplexOutputSettings).
    pub fn build(self) -> crate::types::MultiplexOutputSettings {
        crate::types::MultiplexOutputSettings {
            destination: self.destination,
        }
    }
}
