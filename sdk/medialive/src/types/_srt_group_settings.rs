// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Srt Group Settings
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SrtGroupSettings {
    /// Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted. When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement). Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.
    pub input_loss_action: ::std::option::Option<crate::types::InputLossActionForUdpOut>,
}
impl SrtGroupSettings {
    /// Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted. When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement). Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.
    pub fn input_loss_action(&self) -> ::std::option::Option<&crate::types::InputLossActionForUdpOut> {
        self.input_loss_action.as_ref()
    }
}
impl SrtGroupSettings {
    /// Creates a new builder-style object to manufacture [`SrtGroupSettings`](crate::types::SrtGroupSettings).
    pub fn builder() -> crate::types::builders::SrtGroupSettingsBuilder {
        crate::types::builders::SrtGroupSettingsBuilder::default()
    }
}

/// A builder for [`SrtGroupSettings`](crate::types::SrtGroupSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SrtGroupSettingsBuilder {
    pub(crate) input_loss_action: ::std::option::Option<crate::types::InputLossActionForUdpOut>,
}
impl SrtGroupSettingsBuilder {
    /// Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted. When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement). Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.
    pub fn input_loss_action(mut self, input: crate::types::InputLossActionForUdpOut) -> Self {
        self.input_loss_action = ::std::option::Option::Some(input);
        self
    }
    /// Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted. When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement). Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.
    pub fn set_input_loss_action(mut self, input: ::std::option::Option<crate::types::InputLossActionForUdpOut>) -> Self {
        self.input_loss_action = input;
        self
    }
    /// Specifies behavior of last resort when input video is lost, and no more backup inputs are available. When dropTs is selected the entire transport stream will stop being emitted. When dropProgram is selected the program can be dropped from the transport stream (and replaced with null packets to meet the TS bitrate requirement). Or, when emitProgram is chosen the transport stream will continue to be produced normally with repeat frames, black frames, or slate frames substituted for the absent input video.
    pub fn get_input_loss_action(&self) -> &::std::option::Option<crate::types::InputLossActionForUdpOut> {
        &self.input_loss_action
    }
    /// Consumes the builder and constructs a [`SrtGroupSettings`](crate::types::SrtGroupSettings).
    pub fn build(self) -> crate::types::SrtGroupSettings {
        crate::types::SrtGroupSettings {
            input_loss_action: self.input_loss_action,
        }
    }
}
