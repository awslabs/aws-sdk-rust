// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Placeholder documentation for ChannelEgressEndpoint
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ChannelEgressEndpoint {
    /// Public IP of where a channel's output comes from
    #[doc(hidden)]
    pub source_ip: std::option::Option<std::string::String>,
}
impl ChannelEgressEndpoint {
    /// Public IP of where a channel's output comes from
    pub fn source_ip(&self) -> std::option::Option<&str> {
        self.source_ip.as_deref()
    }
}
impl ChannelEgressEndpoint {
    /// Creates a new builder-style object to manufacture [`ChannelEgressEndpoint`](crate::types::ChannelEgressEndpoint).
    pub fn builder() -> crate::types::builders::ChannelEgressEndpointBuilder {
        crate::types::builders::ChannelEgressEndpointBuilder::default()
    }
}

/// A builder for [`ChannelEgressEndpoint`](crate::types::ChannelEgressEndpoint).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ChannelEgressEndpointBuilder {
    pub(crate) source_ip: std::option::Option<std::string::String>,
}
impl ChannelEgressEndpointBuilder {
    /// Public IP of where a channel's output comes from
    pub fn source_ip(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_ip = Some(input.into());
        self
    }
    /// Public IP of where a channel's output comes from
    pub fn set_source_ip(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source_ip = input;
        self
    }
    /// Consumes the builder and constructs a [`ChannelEgressEndpoint`](crate::types::ChannelEgressEndpoint).
    pub fn build(self) -> crate::types::ChannelEgressEndpoint {
        crate::types::ChannelEgressEndpoint {
            source_ip: self.source_ip,
        }
    }
}
