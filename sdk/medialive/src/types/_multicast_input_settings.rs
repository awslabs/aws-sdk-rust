// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Multicast-specific input settings.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MulticastInputSettings {
    /// Optionally, a source ip address to filter by for Source-specific Multicast (SSM)
    pub source_ip_address: ::std::option::Option<::std::string::String>,
}
impl MulticastInputSettings {
    /// Optionally, a source ip address to filter by for Source-specific Multicast (SSM)
    pub fn source_ip_address(&self) -> ::std::option::Option<&str> {
        self.source_ip_address.as_deref()
    }
}
impl MulticastInputSettings {
    /// Creates a new builder-style object to manufacture [`MulticastInputSettings`](crate::types::MulticastInputSettings).
    pub fn builder() -> crate::types::builders::MulticastInputSettingsBuilder {
        crate::types::builders::MulticastInputSettingsBuilder::default()
    }
}

/// A builder for [`MulticastInputSettings`](crate::types::MulticastInputSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MulticastInputSettingsBuilder {
    pub(crate) source_ip_address: ::std::option::Option<::std::string::String>,
}
impl MulticastInputSettingsBuilder {
    /// Optionally, a source ip address to filter by for Source-specific Multicast (SSM)
    pub fn source_ip_address(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_ip_address = ::std::option::Option::Some(input.into());
        self
    }
    /// Optionally, a source ip address to filter by for Source-specific Multicast (SSM)
    pub fn set_source_ip_address(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_ip_address = input;
        self
    }
    /// Optionally, a source ip address to filter by for Source-specific Multicast (SSM)
    pub fn get_source_ip_address(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_ip_address
    }
    /// Consumes the builder and constructs a [`MulticastInputSettings`](crate::types::MulticastInputSettings).
    pub fn build(self) -> crate::types::MulticastInputSettings {
        crate::types::MulticastInputSettings {
            source_ip_address: self.source_ip_address,
        }
    }
}
