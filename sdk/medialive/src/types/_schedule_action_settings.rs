// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Holds the settings for a single schedule action.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ScheduleActionSettings {
    /// Action to insert HLS ID3 segment tagging
    #[doc(hidden)]
    pub hls_id3_segment_tagging_settings:
        std::option::Option<crate::types::HlsId3SegmentTaggingScheduleActionSettings>,
    /// Action to insert HLS metadata
    #[doc(hidden)]
    pub hls_timed_metadata_settings:
        std::option::Option<crate::types::HlsTimedMetadataScheduleActionSettings>,
    /// Action to prepare an input for a future immediate input switch
    #[doc(hidden)]
    pub input_prepare_settings:
        std::option::Option<crate::types::InputPrepareScheduleActionSettings>,
    /// Action to switch the input
    #[doc(hidden)]
    pub input_switch_settings: std::option::Option<crate::types::InputSwitchScheduleActionSettings>,
    /// Action to activate a motion graphics image overlay
    #[doc(hidden)]
    pub motion_graphics_image_activate_settings:
        std::option::Option<crate::types::MotionGraphicsActivateScheduleActionSettings>,
    /// Action to deactivate a motion graphics image overlay
    #[doc(hidden)]
    pub motion_graphics_image_deactivate_settings:
        std::option::Option<crate::types::MotionGraphicsDeactivateScheduleActionSettings>,
    /// Action to pause or unpause one or both channel pipelines
    #[doc(hidden)]
    pub pause_state_settings: std::option::Option<crate::types::PauseStateScheduleActionSettings>,
    /// Action to specify scte35 input
    #[doc(hidden)]
    pub scte35_input_settings: std::option::Option<crate::types::Scte35InputScheduleActionSettings>,
    /// Action to insert SCTE-35 return_to_network message
    #[doc(hidden)]
    pub scte35_return_to_network_settings:
        std::option::Option<crate::types::Scte35ReturnToNetworkScheduleActionSettings>,
    /// Action to insert SCTE-35 splice_insert message
    #[doc(hidden)]
    pub scte35_splice_insert_settings:
        std::option::Option<crate::types::Scte35SpliceInsertScheduleActionSettings>,
    /// Action to insert SCTE-35 time_signal message
    #[doc(hidden)]
    pub scte35_time_signal_settings:
        std::option::Option<crate::types::Scte35TimeSignalScheduleActionSettings>,
    /// Action to activate a static image overlay
    #[doc(hidden)]
    pub static_image_activate_settings:
        std::option::Option<crate::types::StaticImageActivateScheduleActionSettings>,
    /// Action to deactivate a static image overlay
    #[doc(hidden)]
    pub static_image_deactivate_settings:
        std::option::Option<crate::types::StaticImageDeactivateScheduleActionSettings>,
}
impl ScheduleActionSettings {
    /// Action to insert HLS ID3 segment tagging
    pub fn hls_id3_segment_tagging_settings(
        &self,
    ) -> std::option::Option<&crate::types::HlsId3SegmentTaggingScheduleActionSettings> {
        self.hls_id3_segment_tagging_settings.as_ref()
    }
    /// Action to insert HLS metadata
    pub fn hls_timed_metadata_settings(
        &self,
    ) -> std::option::Option<&crate::types::HlsTimedMetadataScheduleActionSettings> {
        self.hls_timed_metadata_settings.as_ref()
    }
    /// Action to prepare an input for a future immediate input switch
    pub fn input_prepare_settings(
        &self,
    ) -> std::option::Option<&crate::types::InputPrepareScheduleActionSettings> {
        self.input_prepare_settings.as_ref()
    }
    /// Action to switch the input
    pub fn input_switch_settings(
        &self,
    ) -> std::option::Option<&crate::types::InputSwitchScheduleActionSettings> {
        self.input_switch_settings.as_ref()
    }
    /// Action to activate a motion graphics image overlay
    pub fn motion_graphics_image_activate_settings(
        &self,
    ) -> std::option::Option<&crate::types::MotionGraphicsActivateScheduleActionSettings> {
        self.motion_graphics_image_activate_settings.as_ref()
    }
    /// Action to deactivate a motion graphics image overlay
    pub fn motion_graphics_image_deactivate_settings(
        &self,
    ) -> std::option::Option<&crate::types::MotionGraphicsDeactivateScheduleActionSettings> {
        self.motion_graphics_image_deactivate_settings.as_ref()
    }
    /// Action to pause or unpause one or both channel pipelines
    pub fn pause_state_settings(
        &self,
    ) -> std::option::Option<&crate::types::PauseStateScheduleActionSettings> {
        self.pause_state_settings.as_ref()
    }
    /// Action to specify scte35 input
    pub fn scte35_input_settings(
        &self,
    ) -> std::option::Option<&crate::types::Scte35InputScheduleActionSettings> {
        self.scte35_input_settings.as_ref()
    }
    /// Action to insert SCTE-35 return_to_network message
    pub fn scte35_return_to_network_settings(
        &self,
    ) -> std::option::Option<&crate::types::Scte35ReturnToNetworkScheduleActionSettings> {
        self.scte35_return_to_network_settings.as_ref()
    }
    /// Action to insert SCTE-35 splice_insert message
    pub fn scte35_splice_insert_settings(
        &self,
    ) -> std::option::Option<&crate::types::Scte35SpliceInsertScheduleActionSettings> {
        self.scte35_splice_insert_settings.as_ref()
    }
    /// Action to insert SCTE-35 time_signal message
    pub fn scte35_time_signal_settings(
        &self,
    ) -> std::option::Option<&crate::types::Scte35TimeSignalScheduleActionSettings> {
        self.scte35_time_signal_settings.as_ref()
    }
    /// Action to activate a static image overlay
    pub fn static_image_activate_settings(
        &self,
    ) -> std::option::Option<&crate::types::StaticImageActivateScheduleActionSettings> {
        self.static_image_activate_settings.as_ref()
    }
    /// Action to deactivate a static image overlay
    pub fn static_image_deactivate_settings(
        &self,
    ) -> std::option::Option<&crate::types::StaticImageDeactivateScheduleActionSettings> {
        self.static_image_deactivate_settings.as_ref()
    }
}
impl ScheduleActionSettings {
    /// Creates a new builder-style object to manufacture [`ScheduleActionSettings`](crate::types::ScheduleActionSettings).
    pub fn builder() -> crate::types::builders::ScheduleActionSettingsBuilder {
        crate::types::builders::ScheduleActionSettingsBuilder::default()
    }
}

/// A builder for [`ScheduleActionSettings`](crate::types::ScheduleActionSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ScheduleActionSettingsBuilder {
    pub(crate) hls_id3_segment_tagging_settings:
        std::option::Option<crate::types::HlsId3SegmentTaggingScheduleActionSettings>,
    pub(crate) hls_timed_metadata_settings:
        std::option::Option<crate::types::HlsTimedMetadataScheduleActionSettings>,
    pub(crate) input_prepare_settings:
        std::option::Option<crate::types::InputPrepareScheduleActionSettings>,
    pub(crate) input_switch_settings:
        std::option::Option<crate::types::InputSwitchScheduleActionSettings>,
    pub(crate) motion_graphics_image_activate_settings:
        std::option::Option<crate::types::MotionGraphicsActivateScheduleActionSettings>,
    pub(crate) motion_graphics_image_deactivate_settings:
        std::option::Option<crate::types::MotionGraphicsDeactivateScheduleActionSettings>,
    pub(crate) pause_state_settings:
        std::option::Option<crate::types::PauseStateScheduleActionSettings>,
    pub(crate) scte35_input_settings:
        std::option::Option<crate::types::Scte35InputScheduleActionSettings>,
    pub(crate) scte35_return_to_network_settings:
        std::option::Option<crate::types::Scte35ReturnToNetworkScheduleActionSettings>,
    pub(crate) scte35_splice_insert_settings:
        std::option::Option<crate::types::Scte35SpliceInsertScheduleActionSettings>,
    pub(crate) scte35_time_signal_settings:
        std::option::Option<crate::types::Scte35TimeSignalScheduleActionSettings>,
    pub(crate) static_image_activate_settings:
        std::option::Option<crate::types::StaticImageActivateScheduleActionSettings>,
    pub(crate) static_image_deactivate_settings:
        std::option::Option<crate::types::StaticImageDeactivateScheduleActionSettings>,
}
impl ScheduleActionSettingsBuilder {
    /// Action to insert HLS ID3 segment tagging
    pub fn hls_id3_segment_tagging_settings(
        mut self,
        input: crate::types::HlsId3SegmentTaggingScheduleActionSettings,
    ) -> Self {
        self.hls_id3_segment_tagging_settings = Some(input);
        self
    }
    /// Action to insert HLS ID3 segment tagging
    pub fn set_hls_id3_segment_tagging_settings(
        mut self,
        input: std::option::Option<crate::types::HlsId3SegmentTaggingScheduleActionSettings>,
    ) -> Self {
        self.hls_id3_segment_tagging_settings = input;
        self
    }
    /// Action to insert HLS metadata
    pub fn hls_timed_metadata_settings(
        mut self,
        input: crate::types::HlsTimedMetadataScheduleActionSettings,
    ) -> Self {
        self.hls_timed_metadata_settings = Some(input);
        self
    }
    /// Action to insert HLS metadata
    pub fn set_hls_timed_metadata_settings(
        mut self,
        input: std::option::Option<crate::types::HlsTimedMetadataScheduleActionSettings>,
    ) -> Self {
        self.hls_timed_metadata_settings = input;
        self
    }
    /// Action to prepare an input for a future immediate input switch
    pub fn input_prepare_settings(
        mut self,
        input: crate::types::InputPrepareScheduleActionSettings,
    ) -> Self {
        self.input_prepare_settings = Some(input);
        self
    }
    /// Action to prepare an input for a future immediate input switch
    pub fn set_input_prepare_settings(
        mut self,
        input: std::option::Option<crate::types::InputPrepareScheduleActionSettings>,
    ) -> Self {
        self.input_prepare_settings = input;
        self
    }
    /// Action to switch the input
    pub fn input_switch_settings(
        mut self,
        input: crate::types::InputSwitchScheduleActionSettings,
    ) -> Self {
        self.input_switch_settings = Some(input);
        self
    }
    /// Action to switch the input
    pub fn set_input_switch_settings(
        mut self,
        input: std::option::Option<crate::types::InputSwitchScheduleActionSettings>,
    ) -> Self {
        self.input_switch_settings = input;
        self
    }
    /// Action to activate a motion graphics image overlay
    pub fn motion_graphics_image_activate_settings(
        mut self,
        input: crate::types::MotionGraphicsActivateScheduleActionSettings,
    ) -> Self {
        self.motion_graphics_image_activate_settings = Some(input);
        self
    }
    /// Action to activate a motion graphics image overlay
    pub fn set_motion_graphics_image_activate_settings(
        mut self,
        input: std::option::Option<crate::types::MotionGraphicsActivateScheduleActionSettings>,
    ) -> Self {
        self.motion_graphics_image_activate_settings = input;
        self
    }
    /// Action to deactivate a motion graphics image overlay
    pub fn motion_graphics_image_deactivate_settings(
        mut self,
        input: crate::types::MotionGraphicsDeactivateScheduleActionSettings,
    ) -> Self {
        self.motion_graphics_image_deactivate_settings = Some(input);
        self
    }
    /// Action to deactivate a motion graphics image overlay
    pub fn set_motion_graphics_image_deactivate_settings(
        mut self,
        input: std::option::Option<crate::types::MotionGraphicsDeactivateScheduleActionSettings>,
    ) -> Self {
        self.motion_graphics_image_deactivate_settings = input;
        self
    }
    /// Action to pause or unpause one or both channel pipelines
    pub fn pause_state_settings(
        mut self,
        input: crate::types::PauseStateScheduleActionSettings,
    ) -> Self {
        self.pause_state_settings = Some(input);
        self
    }
    /// Action to pause or unpause one or both channel pipelines
    pub fn set_pause_state_settings(
        mut self,
        input: std::option::Option<crate::types::PauseStateScheduleActionSettings>,
    ) -> Self {
        self.pause_state_settings = input;
        self
    }
    /// Action to specify scte35 input
    pub fn scte35_input_settings(
        mut self,
        input: crate::types::Scte35InputScheduleActionSettings,
    ) -> Self {
        self.scte35_input_settings = Some(input);
        self
    }
    /// Action to specify scte35 input
    pub fn set_scte35_input_settings(
        mut self,
        input: std::option::Option<crate::types::Scte35InputScheduleActionSettings>,
    ) -> Self {
        self.scte35_input_settings = input;
        self
    }
    /// Action to insert SCTE-35 return_to_network message
    pub fn scte35_return_to_network_settings(
        mut self,
        input: crate::types::Scte35ReturnToNetworkScheduleActionSettings,
    ) -> Self {
        self.scte35_return_to_network_settings = Some(input);
        self
    }
    /// Action to insert SCTE-35 return_to_network message
    pub fn set_scte35_return_to_network_settings(
        mut self,
        input: std::option::Option<crate::types::Scte35ReturnToNetworkScheduleActionSettings>,
    ) -> Self {
        self.scte35_return_to_network_settings = input;
        self
    }
    /// Action to insert SCTE-35 splice_insert message
    pub fn scte35_splice_insert_settings(
        mut self,
        input: crate::types::Scte35SpliceInsertScheduleActionSettings,
    ) -> Self {
        self.scte35_splice_insert_settings = Some(input);
        self
    }
    /// Action to insert SCTE-35 splice_insert message
    pub fn set_scte35_splice_insert_settings(
        mut self,
        input: std::option::Option<crate::types::Scte35SpliceInsertScheduleActionSettings>,
    ) -> Self {
        self.scte35_splice_insert_settings = input;
        self
    }
    /// Action to insert SCTE-35 time_signal message
    pub fn scte35_time_signal_settings(
        mut self,
        input: crate::types::Scte35TimeSignalScheduleActionSettings,
    ) -> Self {
        self.scte35_time_signal_settings = Some(input);
        self
    }
    /// Action to insert SCTE-35 time_signal message
    pub fn set_scte35_time_signal_settings(
        mut self,
        input: std::option::Option<crate::types::Scte35TimeSignalScheduleActionSettings>,
    ) -> Self {
        self.scte35_time_signal_settings = input;
        self
    }
    /// Action to activate a static image overlay
    pub fn static_image_activate_settings(
        mut self,
        input: crate::types::StaticImageActivateScheduleActionSettings,
    ) -> Self {
        self.static_image_activate_settings = Some(input);
        self
    }
    /// Action to activate a static image overlay
    pub fn set_static_image_activate_settings(
        mut self,
        input: std::option::Option<crate::types::StaticImageActivateScheduleActionSettings>,
    ) -> Self {
        self.static_image_activate_settings = input;
        self
    }
    /// Action to deactivate a static image overlay
    pub fn static_image_deactivate_settings(
        mut self,
        input: crate::types::StaticImageDeactivateScheduleActionSettings,
    ) -> Self {
        self.static_image_deactivate_settings = Some(input);
        self
    }
    /// Action to deactivate a static image overlay
    pub fn set_static_image_deactivate_settings(
        mut self,
        input: std::option::Option<crate::types::StaticImageDeactivateScheduleActionSettings>,
    ) -> Self {
        self.static_image_deactivate_settings = input;
        self
    }
    /// Consumes the builder and constructs a [`ScheduleActionSettings`](crate::types::ScheduleActionSettings).
    pub fn build(self) -> crate::types::ScheduleActionSettings {
        crate::types::ScheduleActionSettings {
            hls_id3_segment_tagging_settings: self.hls_id3_segment_tagging_settings,
            hls_timed_metadata_settings: self.hls_timed_metadata_settings,
            input_prepare_settings: self.input_prepare_settings,
            input_switch_settings: self.input_switch_settings,
            motion_graphics_image_activate_settings: self.motion_graphics_image_activate_settings,
            motion_graphics_image_deactivate_settings: self
                .motion_graphics_image_deactivate_settings,
            pause_state_settings: self.pause_state_settings,
            scte35_input_settings: self.scte35_input_settings,
            scte35_return_to_network_settings: self.scte35_return_to_network_settings,
            scte35_splice_insert_settings: self.scte35_splice_insert_settings,
            scte35_time_signal_settings: self.scte35_time_signal_settings,
            static_image_activate_settings: self.static_image_activate_settings,
            static_image_deactivate_settings: self.static_image_deactivate_settings,
        }
    }
}
