// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Audio Pid Selection
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AudioPidSelection {
    /// Selects a specific PID from within a source.
    #[doc(hidden)]
    pub pid: i32,
}
impl AudioPidSelection {
    /// Selects a specific PID from within a source.
    pub fn pid(&self) -> i32 {
        self.pid
    }
}
impl AudioPidSelection {
    /// Creates a new builder-style object to manufacture [`AudioPidSelection`](crate::types::AudioPidSelection).
    pub fn builder() -> crate::types::builders::AudioPidSelectionBuilder {
        crate::types::builders::AudioPidSelectionBuilder::default()
    }
}

/// A builder for [`AudioPidSelection`](crate::types::AudioPidSelection).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AudioPidSelectionBuilder {
    pub(crate) pid: std::option::Option<i32>,
}
impl AudioPidSelectionBuilder {
    /// Selects a specific PID from within a source.
    pub fn pid(mut self, input: i32) -> Self {
        self.pid = Some(input);
        self
    }
    /// Selects a specific PID from within a source.
    pub fn set_pid(mut self, input: std::option::Option<i32>) -> Self {
        self.pid = input;
        self
    }
    /// Consumes the builder and constructs a [`AudioPidSelection`](crate::types::AudioPidSelection).
    pub fn build(self) -> crate::types::AudioPidSelection {
        crate::types::AudioPidSelection {
            pid: self.pid.unwrap_or_default(),
        }
    }
}
