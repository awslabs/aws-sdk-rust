// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// A list of schedule actions to create (in a request) or that have been created (in a response).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchScheduleActionCreateRequest {
    /// A list of schedule actions to create.
    pub schedule_actions: ::std::option::Option<::std::vec::Vec<crate::types::ScheduleAction>>,
}
impl BatchScheduleActionCreateRequest {
    /// A list of schedule actions to create.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.schedule_actions.is_none()`.
    pub fn schedule_actions(&self) -> &[crate::types::ScheduleAction] {
        self.schedule_actions.as_deref().unwrap_or_default()
    }
}
impl BatchScheduleActionCreateRequest {
    /// Creates a new builder-style object to manufacture [`BatchScheduleActionCreateRequest`](crate::types::BatchScheduleActionCreateRequest).
    pub fn builder() -> crate::types::builders::BatchScheduleActionCreateRequestBuilder {
        crate::types::builders::BatchScheduleActionCreateRequestBuilder::default()
    }
}

/// A builder for [`BatchScheduleActionCreateRequest`](crate::types::BatchScheduleActionCreateRequest).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchScheduleActionCreateRequestBuilder {
    pub(crate) schedule_actions: ::std::option::Option<::std::vec::Vec<crate::types::ScheduleAction>>,
}
impl BatchScheduleActionCreateRequestBuilder {
    /// Appends an item to `schedule_actions`.
    ///
    /// To override the contents of this collection use [`set_schedule_actions`](Self::set_schedule_actions).
    ///
    /// A list of schedule actions to create.
    pub fn schedule_actions(mut self, input: crate::types::ScheduleAction) -> Self {
        let mut v = self.schedule_actions.unwrap_or_default();
        v.push(input);
        self.schedule_actions = ::std::option::Option::Some(v);
        self
    }
    /// A list of schedule actions to create.
    pub fn set_schedule_actions(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ScheduleAction>>) -> Self {
        self.schedule_actions = input;
        self
    }
    /// A list of schedule actions to create.
    pub fn get_schedule_actions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ScheduleAction>> {
        &self.schedule_actions
    }
    /// Consumes the builder and constructs a [`BatchScheduleActionCreateRequest`](crate::types::BatchScheduleActionCreateRequest).
    pub fn build(self) -> crate::types::BatchScheduleActionCreateRequest {
        crate::types::BatchScheduleActionCreateRequest {
            schedule_actions: self.schedule_actions,
        }
    }
}
