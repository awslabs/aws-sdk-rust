// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// H265 Filter Settings
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct H265FilterSettings {
    /// Temporal Filter Settings
    pub temporal_filter_settings: ::std::option::Option<crate::types::TemporalFilterSettings>,
    /// Bandwidth Reduction Filter Settings
    pub bandwidth_reduction_filter_settings: ::std::option::Option<crate::types::BandwidthReductionFilterSettings>,
}
impl H265FilterSettings {
    /// Temporal Filter Settings
    pub fn temporal_filter_settings(&self) -> ::std::option::Option<&crate::types::TemporalFilterSettings> {
        self.temporal_filter_settings.as_ref()
    }
    /// Bandwidth Reduction Filter Settings
    pub fn bandwidth_reduction_filter_settings(&self) -> ::std::option::Option<&crate::types::BandwidthReductionFilterSettings> {
        self.bandwidth_reduction_filter_settings.as_ref()
    }
}
impl H265FilterSettings {
    /// Creates a new builder-style object to manufacture [`H265FilterSettings`](crate::types::H265FilterSettings).
    pub fn builder() -> crate::types::builders::H265FilterSettingsBuilder {
        crate::types::builders::H265FilterSettingsBuilder::default()
    }
}

/// A builder for [`H265FilterSettings`](crate::types::H265FilterSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct H265FilterSettingsBuilder {
    pub(crate) temporal_filter_settings: ::std::option::Option<crate::types::TemporalFilterSettings>,
    pub(crate) bandwidth_reduction_filter_settings: ::std::option::Option<crate::types::BandwidthReductionFilterSettings>,
}
impl H265FilterSettingsBuilder {
    /// Temporal Filter Settings
    pub fn temporal_filter_settings(mut self, input: crate::types::TemporalFilterSettings) -> Self {
        self.temporal_filter_settings = ::std::option::Option::Some(input);
        self
    }
    /// Temporal Filter Settings
    pub fn set_temporal_filter_settings(mut self, input: ::std::option::Option<crate::types::TemporalFilterSettings>) -> Self {
        self.temporal_filter_settings = input;
        self
    }
    /// Temporal Filter Settings
    pub fn get_temporal_filter_settings(&self) -> &::std::option::Option<crate::types::TemporalFilterSettings> {
        &self.temporal_filter_settings
    }
    /// Bandwidth Reduction Filter Settings
    pub fn bandwidth_reduction_filter_settings(mut self, input: crate::types::BandwidthReductionFilterSettings) -> Self {
        self.bandwidth_reduction_filter_settings = ::std::option::Option::Some(input);
        self
    }
    /// Bandwidth Reduction Filter Settings
    pub fn set_bandwidth_reduction_filter_settings(mut self, input: ::std::option::Option<crate::types::BandwidthReductionFilterSettings>) -> Self {
        self.bandwidth_reduction_filter_settings = input;
        self
    }
    /// Bandwidth Reduction Filter Settings
    pub fn get_bandwidth_reduction_filter_settings(&self) -> &::std::option::Option<crate::types::BandwidthReductionFilterSettings> {
        &self.bandwidth_reduction_filter_settings
    }
    /// Consumes the builder and constructs a [`H265FilterSettings`](crate::types::H265FilterSettings).
    pub fn build(self) -> crate::types::H265FilterSettings {
        crate::types::H265FilterSettings {
            temporal_filter_settings: self.temporal_filter_settings,
            bandwidth_reduction_filter_settings: self.bandwidth_reduction_filter_settings,
        }
    }
}
