// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Nielsen Configuration
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NielsenConfiguration {
    /// Enter the Distributor ID assigned to your organization by Nielsen.
    #[doc(hidden)]
    pub distributor_id: std::option::Option<std::string::String>,
    /// Enables Nielsen PCM to ID3 tagging
    #[doc(hidden)]
    pub nielsen_pcm_to_id3_tagging: std::option::Option<crate::types::NielsenPcmToId3TaggingState>,
}
impl NielsenConfiguration {
    /// Enter the Distributor ID assigned to your organization by Nielsen.
    pub fn distributor_id(&self) -> std::option::Option<&str> {
        self.distributor_id.as_deref()
    }
    /// Enables Nielsen PCM to ID3 tagging
    pub fn nielsen_pcm_to_id3_tagging(
        &self,
    ) -> std::option::Option<&crate::types::NielsenPcmToId3TaggingState> {
        self.nielsen_pcm_to_id3_tagging.as_ref()
    }
}
impl NielsenConfiguration {
    /// Creates a new builder-style object to manufacture [`NielsenConfiguration`](crate::types::NielsenConfiguration).
    pub fn builder() -> crate::types::builders::NielsenConfigurationBuilder {
        crate::types::builders::NielsenConfigurationBuilder::default()
    }
}

/// A builder for [`NielsenConfiguration`](crate::types::NielsenConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NielsenConfigurationBuilder {
    pub(crate) distributor_id: std::option::Option<std::string::String>,
    pub(crate) nielsen_pcm_to_id3_tagging:
        std::option::Option<crate::types::NielsenPcmToId3TaggingState>,
}
impl NielsenConfigurationBuilder {
    /// Enter the Distributor ID assigned to your organization by Nielsen.
    pub fn distributor_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.distributor_id = Some(input.into());
        self
    }
    /// Enter the Distributor ID assigned to your organization by Nielsen.
    pub fn set_distributor_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.distributor_id = input;
        self
    }
    /// Enables Nielsen PCM to ID3 tagging
    pub fn nielsen_pcm_to_id3_tagging(
        mut self,
        input: crate::types::NielsenPcmToId3TaggingState,
    ) -> Self {
        self.nielsen_pcm_to_id3_tagging = Some(input);
        self
    }
    /// Enables Nielsen PCM to ID3 tagging
    pub fn set_nielsen_pcm_to_id3_tagging(
        mut self,
        input: std::option::Option<crate::types::NielsenPcmToId3TaggingState>,
    ) -> Self {
        self.nielsen_pcm_to_id3_tagging = input;
        self
    }
    /// Consumes the builder and constructs a [`NielsenConfiguration`](crate::types::NielsenConfiguration).
    pub fn build(self) -> crate::types::NielsenConfiguration {
        crate::types::NielsenConfiguration {
            distributor_id: self.distributor_id,
            nielsen_pcm_to_id3_tagging: self.nielsen_pcm_to_id3_tagging,
        }
    }
}
