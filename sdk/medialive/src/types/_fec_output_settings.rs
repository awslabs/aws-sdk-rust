// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Fec Output Settings
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FecOutputSettings {
    /// Parameter D from SMPTE 2022-1. The height of the FEC protection matrix. The number of transport stream packets per column error correction packet. Must be between 4 and 20, inclusive.
    #[doc(hidden)]
    pub column_depth: i32,
    /// Enables column only or column and row based FEC
    #[doc(hidden)]
    pub include_fec: std::option::Option<crate::types::FecOutputIncludeFec>,
    /// Parameter L from SMPTE 2022-1. The width of the FEC protection matrix. Must be between 1 and 20, inclusive. If only Column FEC is used, then larger values increase robustness. If Row FEC is used, then this is the number of transport stream packets per row error correction packet, and the value must be between 4 and 20, inclusive, if includeFec is columnAndRow. If includeFec is column, this value must be 1 to 20, inclusive.
    #[doc(hidden)]
    pub row_length: i32,
}
impl FecOutputSettings {
    /// Parameter D from SMPTE 2022-1. The height of the FEC protection matrix. The number of transport stream packets per column error correction packet. Must be between 4 and 20, inclusive.
    pub fn column_depth(&self) -> i32 {
        self.column_depth
    }
    /// Enables column only or column and row based FEC
    pub fn include_fec(&self) -> std::option::Option<&crate::types::FecOutputIncludeFec> {
        self.include_fec.as_ref()
    }
    /// Parameter L from SMPTE 2022-1. The width of the FEC protection matrix. Must be between 1 and 20, inclusive. If only Column FEC is used, then larger values increase robustness. If Row FEC is used, then this is the number of transport stream packets per row error correction packet, and the value must be between 4 and 20, inclusive, if includeFec is columnAndRow. If includeFec is column, this value must be 1 to 20, inclusive.
    pub fn row_length(&self) -> i32 {
        self.row_length
    }
}
impl FecOutputSettings {
    /// Creates a new builder-style object to manufacture [`FecOutputSettings`](crate::types::FecOutputSettings).
    pub fn builder() -> crate::types::builders::FecOutputSettingsBuilder {
        crate::types::builders::FecOutputSettingsBuilder::default()
    }
}

/// A builder for [`FecOutputSettings`](crate::types::FecOutputSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FecOutputSettingsBuilder {
    pub(crate) column_depth: std::option::Option<i32>,
    pub(crate) include_fec: std::option::Option<crate::types::FecOutputIncludeFec>,
    pub(crate) row_length: std::option::Option<i32>,
}
impl FecOutputSettingsBuilder {
    /// Parameter D from SMPTE 2022-1. The height of the FEC protection matrix. The number of transport stream packets per column error correction packet. Must be between 4 and 20, inclusive.
    pub fn column_depth(mut self, input: i32) -> Self {
        self.column_depth = Some(input);
        self
    }
    /// Parameter D from SMPTE 2022-1. The height of the FEC protection matrix. The number of transport stream packets per column error correction packet. Must be between 4 and 20, inclusive.
    pub fn set_column_depth(mut self, input: std::option::Option<i32>) -> Self {
        self.column_depth = input;
        self
    }
    /// Enables column only or column and row based FEC
    pub fn include_fec(mut self, input: crate::types::FecOutputIncludeFec) -> Self {
        self.include_fec = Some(input);
        self
    }
    /// Enables column only or column and row based FEC
    pub fn set_include_fec(
        mut self,
        input: std::option::Option<crate::types::FecOutputIncludeFec>,
    ) -> Self {
        self.include_fec = input;
        self
    }
    /// Parameter L from SMPTE 2022-1. The width of the FEC protection matrix. Must be between 1 and 20, inclusive. If only Column FEC is used, then larger values increase robustness. If Row FEC is used, then this is the number of transport stream packets per row error correction packet, and the value must be between 4 and 20, inclusive, if includeFec is columnAndRow. If includeFec is column, this value must be 1 to 20, inclusive.
    pub fn row_length(mut self, input: i32) -> Self {
        self.row_length = Some(input);
        self
    }
    /// Parameter L from SMPTE 2022-1. The width of the FEC protection matrix. Must be between 1 and 20, inclusive. If only Column FEC is used, then larger values increase robustness. If Row FEC is used, then this is the number of transport stream packets per row error correction packet, and the value must be between 4 and 20, inclusive, if includeFec is columnAndRow. If includeFec is column, this value must be 1 to 20, inclusive.
    pub fn set_row_length(mut self, input: std::option::Option<i32>) -> Self {
        self.row_length = input;
        self
    }
    /// Consumes the builder and constructs a [`FecOutputSettings`](crate::types::FecOutputSettings).
    pub fn build(self) -> crate::types::FecOutputSettings {
        crate::types::FecOutputSettings {
            column_depth: self.column_depth.unwrap_or_default(),
            include_fec: self.include_fec,
            row_length: self.row_length.unwrap_or_default(),
        }
    }
}
