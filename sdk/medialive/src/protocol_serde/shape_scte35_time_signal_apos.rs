// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_scte35_time_signal_apos(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::Scte35TimeSignalApos,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if input.ad_avail_offset != 0 {
        object.key("adAvailOffset").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.ad_avail_offset).into()),
        );
    }
    if let Some(var_1) = &input.no_regional_blackout_flag {
        object.key("noRegionalBlackoutFlag").string(var_1.as_str());
    }
    if let Some(var_2) = &input.web_delivery_allowed_flag {
        object.key("webDeliveryAllowedFlag").string(var_2.as_str());
    }
    Ok(())
}

pub(crate) fn de_scte35_time_signal_apos<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::Scte35TimeSignalApos>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::Scte35TimeSignalAposBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "adAvailOffset" => {
                                builder = builder.set_ad_avail_offset(
                                    aws_smithy_json::deserialize::token::expect_number_or_null(
                                        tokens.next(),
                                    )?
                                    .map(i32::try_from)
                                    .transpose()?,
                                );
                            }
                            "noRegionalBlackoutFlag" => {
                                builder = builder.set_no_regional_blackout_flag(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?.map(|s|
                                        s.to_unescaped().map(|u|
                                            crate::types::Scte35AposNoRegionalBlackoutBehavior::from(u.as_ref())
                                        )
                                    ).transpose()?
                                );
                            }
                            "webDeliveryAllowedFlag" => {
                                builder = builder.set_web_delivery_allowed_flag(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?.map(|s|
                                        s.to_unescaped().map(|u|
                                            crate::types::Scte35AposWebDeliveryAllowedBehavior::from(u.as_ref())
                                        )
                                    ).transpose()?
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
