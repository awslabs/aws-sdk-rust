// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_purchase_offering_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::purchase_offering::PurchaseOfferingInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.count {
        object.key("count").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_1).into()),
        );
    }
    if let Some(var_2) = &input.name {
        object.key("name").string(var_2.as_str());
    }
    if let Some(var_3) = &input.renewal_settings {
        #[allow(unused_mut)]
        let mut object_4 = object.key("renewalSettings").start_object();
        crate::protocol_serde::shape_renewal_settings::ser_renewal_settings(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.request_id {
        object.key("requestId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.start {
        object.key("start").string(var_6.as_str());
    }
    if let Some(var_7) = &input.tags {
        #[allow(unused_mut)]
        let mut object_8 = object.key("tags").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9.as_str()).string(value_10.as_str());
            }
        }
        object_8.finish();
    }
    Ok(())
}
