// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Placeholder documentation for StartChannelRequest
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartChannelInput {
    /// A request to start a channel
    pub channel_id: ::std::option::Option<::std::string::String>,
}
impl StartChannelInput {
    /// A request to start a channel
    pub fn channel_id(&self) -> ::std::option::Option<&str> {
        self.channel_id.as_deref()
    }
}
impl StartChannelInput {
    /// Creates a new builder-style object to manufacture [`StartChannelInput`](crate::operation::start_channel::StartChannelInput).
    pub fn builder() -> crate::operation::start_channel::builders::StartChannelInputBuilder {
        crate::operation::start_channel::builders::StartChannelInputBuilder::default()
    }
}

/// A builder for [`StartChannelInput`](crate::operation::start_channel::StartChannelInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StartChannelInputBuilder {
    pub(crate) channel_id: ::std::option::Option<::std::string::String>,
}
impl StartChannelInputBuilder {
    /// A request to start a channel
    /// This field is required.
    pub fn channel_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.channel_id = ::std::option::Option::Some(input.into());
        self
    }
    /// A request to start a channel
    pub fn set_channel_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.channel_id = input;
        self
    }
    /// A request to start a channel
    pub fn get_channel_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.channel_id
    }
    /// Consumes the builder and constructs a [`StartChannelInput`](crate::operation::start_channel::StartChannelInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::start_channel::StartChannelInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::start_channel::StartChannelInput { channel_id: self.channel_id })
    }
}
