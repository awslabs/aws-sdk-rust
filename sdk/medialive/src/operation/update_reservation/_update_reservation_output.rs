// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Placeholder documentation for UpdateReservationResponse
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateReservationOutput {
    /// Reserved resources available to use
    #[doc(hidden)]
    pub reservation: std::option::Option<crate::types::Reservation>,
    _request_id: Option<String>,
}
impl UpdateReservationOutput {
    /// Reserved resources available to use
    pub fn reservation(&self) -> std::option::Option<&crate::types::Reservation> {
        self.reservation.as_ref()
    }
}
impl aws_http::request_id::RequestId for UpdateReservationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateReservationOutput {
    /// Creates a new builder-style object to manufacture [`UpdateReservationOutput`](crate::operation::update_reservation::UpdateReservationOutput).
    pub fn builder(
    ) -> crate::operation::update_reservation::builders::UpdateReservationOutputBuilder {
        crate::operation::update_reservation::builders::UpdateReservationOutputBuilder::default()
    }
}

/// A builder for [`UpdateReservationOutput`](crate::operation::update_reservation::UpdateReservationOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateReservationOutputBuilder {
    pub(crate) reservation: std::option::Option<crate::types::Reservation>,
    _request_id: Option<String>,
}
impl UpdateReservationOutputBuilder {
    /// Reserved resources available to use
    pub fn reservation(mut self, input: crate::types::Reservation) -> Self {
        self.reservation = Some(input);
        self
    }
    /// Reserved resources available to use
    pub fn set_reservation(
        mut self,
        input: std::option::Option<crate::types::Reservation>,
    ) -> Self {
        self.reservation = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateReservationOutput`](crate::operation::update_reservation::UpdateReservationOutput).
    pub fn build(self) -> crate::operation::update_reservation::UpdateReservationOutput {
        crate::operation::update_reservation::UpdateReservationOutput {
            reservation: self.reservation,
            _request_id: self._request_id,
        }
    }
}
