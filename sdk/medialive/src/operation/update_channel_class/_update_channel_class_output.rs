// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Placeholder documentation for UpdateChannelClassResponse
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateChannelClassOutput {
    /// Placeholder documentation for Channel
    #[doc(hidden)]
    pub channel: std::option::Option<crate::types::Channel>,
    _request_id: Option<String>,
}
impl UpdateChannelClassOutput {
    /// Placeholder documentation for Channel
    pub fn channel(&self) -> std::option::Option<&crate::types::Channel> {
        self.channel.as_ref()
    }
}
impl aws_http::request_id::RequestId for UpdateChannelClassOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateChannelClassOutput {
    /// Creates a new builder-style object to manufacture [`UpdateChannelClassOutput`](crate::operation::update_channel_class::UpdateChannelClassOutput).
    pub fn builder(
    ) -> crate::operation::update_channel_class::builders::UpdateChannelClassOutputBuilder {
        crate::operation::update_channel_class::builders::UpdateChannelClassOutputBuilder::default()
    }
}

/// A builder for [`UpdateChannelClassOutput`](crate::operation::update_channel_class::UpdateChannelClassOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateChannelClassOutputBuilder {
    pub(crate) channel: std::option::Option<crate::types::Channel>,
    _request_id: Option<String>,
}
impl UpdateChannelClassOutputBuilder {
    /// Placeholder documentation for Channel
    pub fn channel(mut self, input: crate::types::Channel) -> Self {
        self.channel = Some(input);
        self
    }
    /// Placeholder documentation for Channel
    pub fn set_channel(mut self, input: std::option::Option<crate::types::Channel>) -> Self {
        self.channel = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateChannelClassOutput`](crate::operation::update_channel_class::UpdateChannelClassOutput).
    pub fn build(self) -> crate::operation::update_channel_class::UpdateChannelClassOutput {
        crate::operation::update_channel_class::UpdateChannelClassOutput {
            channel: self.channel,
            _request_id: self._request_id,
        }
    }
}
