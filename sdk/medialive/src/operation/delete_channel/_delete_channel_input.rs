// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Placeholder documentation for DeleteChannelRequest
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteChannelInput {
    /// Unique ID of the channel.
    #[doc(hidden)]
    pub channel_id: std::option::Option<std::string::String>,
}
impl DeleteChannelInput {
    /// Unique ID of the channel.
    pub fn channel_id(&self) -> std::option::Option<&str> {
        self.channel_id.as_deref()
    }
}
impl DeleteChannelInput {
    /// Creates a new builder-style object to manufacture [`DeleteChannelInput`](crate::operation::delete_channel::DeleteChannelInput).
    pub fn builder() -> crate::operation::delete_channel::builders::DeleteChannelInputBuilder {
        crate::operation::delete_channel::builders::DeleteChannelInputBuilder::default()
    }
}

/// A builder for [`DeleteChannelInput`](crate::operation::delete_channel::DeleteChannelInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteChannelInputBuilder {
    pub(crate) channel_id: std::option::Option<std::string::String>,
}
impl DeleteChannelInputBuilder {
    /// Unique ID of the channel.
    pub fn channel_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.channel_id = Some(input.into());
        self
    }
    /// Unique ID of the channel.
    pub fn set_channel_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.channel_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteChannelInput`](crate::operation::delete_channel::DeleteChannelInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_channel::DeleteChannelInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_channel::DeleteChannelInput {
            channel_id: self.channel_id,
        })
    }
}
