// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Placeholder documentation for DescribeThumbnailsResponse
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeThumbnailsOutput {
    /// Placeholder documentation for __listOfThumbnailDetail
    pub thumbnail_details: ::std::option::Option<::std::vec::Vec<crate::types::ThumbnailDetail>>,
    _request_id: Option<String>,
}
impl DescribeThumbnailsOutput {
    /// Placeholder documentation for __listOfThumbnailDetail
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.thumbnail_details.is_none()`.
    pub fn thumbnail_details(&self) -> &[crate::types::ThumbnailDetail] {
        self.thumbnail_details.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for DescribeThumbnailsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeThumbnailsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeThumbnailsOutput`](crate::operation::describe_thumbnails::DescribeThumbnailsOutput).
    pub fn builder() -> crate::operation::describe_thumbnails::builders::DescribeThumbnailsOutputBuilder {
        crate::operation::describe_thumbnails::builders::DescribeThumbnailsOutputBuilder::default()
    }
}

/// A builder for [`DescribeThumbnailsOutput`](crate::operation::describe_thumbnails::DescribeThumbnailsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeThumbnailsOutputBuilder {
    pub(crate) thumbnail_details: ::std::option::Option<::std::vec::Vec<crate::types::ThumbnailDetail>>,
    _request_id: Option<String>,
}
impl DescribeThumbnailsOutputBuilder {
    /// Appends an item to `thumbnail_details`.
    ///
    /// To override the contents of this collection use [`set_thumbnail_details`](Self::set_thumbnail_details).
    ///
    /// Placeholder documentation for __listOfThumbnailDetail
    pub fn thumbnail_details(mut self, input: crate::types::ThumbnailDetail) -> Self {
        let mut v = self.thumbnail_details.unwrap_or_default();
        v.push(input);
        self.thumbnail_details = ::std::option::Option::Some(v);
        self
    }
    /// Placeholder documentation for __listOfThumbnailDetail
    pub fn set_thumbnail_details(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ThumbnailDetail>>) -> Self {
        self.thumbnail_details = input;
        self
    }
    /// Placeholder documentation for __listOfThumbnailDetail
    pub fn get_thumbnail_details(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ThumbnailDetail>> {
        &self.thumbnail_details
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeThumbnailsOutput`](crate::operation::describe_thumbnails::DescribeThumbnailsOutput).
    pub fn build(self) -> crate::operation::describe_thumbnails::DescribeThumbnailsOutput {
        crate::operation::describe_thumbnails::DescribeThumbnailsOutput {
            thumbnail_details: self.thumbnail_details,
            _request_id: self._request_id,
        }
    }
}
