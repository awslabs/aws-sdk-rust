// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListDeploymentsInput {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the target IoT thing or thing group.</p>
    #[doc(hidden)]
    pub target_arn: std::option::Option<std::string::String>,
    /// <p>The filter for the list of deployments. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ALL</code> – The list includes all deployments.</p> </li>
    /// <li> <p> <code>LATEST_ONLY</code> – The list includes only the latest revision of each deployment.</p> </li>
    /// </ul>
    /// <p>Default: <code>LATEST_ONLY</code> </p>
    #[doc(hidden)]
    pub history_filter: std::option::Option<crate::types::DeploymentHistoryFilter>,
    /// <p>The parent deployment's target <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> within a subdeployment.</p>
    #[doc(hidden)]
    pub parent_target_arn: std::option::Option<std::string::String>,
    /// <p>The maximum number of results to be returned per paginated request.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>The token to be used for the next set of paginated results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListDeploymentsInput {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the target IoT thing or thing group.</p>
    pub fn target_arn(&self) -> std::option::Option<&str> {
        self.target_arn.as_deref()
    }
    /// <p>The filter for the list of deployments. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ALL</code> – The list includes all deployments.</p> </li>
    /// <li> <p> <code>LATEST_ONLY</code> – The list includes only the latest revision of each deployment.</p> </li>
    /// </ul>
    /// <p>Default: <code>LATEST_ONLY</code> </p>
    pub fn history_filter(&self) -> std::option::Option<&crate::types::DeploymentHistoryFilter> {
        self.history_filter.as_ref()
    }
    /// <p>The parent deployment's target <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> within a subdeployment.</p>
    pub fn parent_target_arn(&self) -> std::option::Option<&str> {
        self.parent_target_arn.as_deref()
    }
    /// <p>The maximum number of results to be returned per paginated request.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>The token to be used for the next set of paginated results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListDeploymentsInput {
    /// Creates a new builder-style object to manufacture [`ListDeploymentsInput`](crate::operation::list_deployments::ListDeploymentsInput).
    pub fn builder() -> crate::operation::list_deployments::builders::ListDeploymentsInputBuilder {
        crate::operation::list_deployments::builders::ListDeploymentsInputBuilder::default()
    }
}

/// A builder for [`ListDeploymentsInput`](crate::operation::list_deployments::ListDeploymentsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListDeploymentsInputBuilder {
    pub(crate) target_arn: std::option::Option<std::string::String>,
    pub(crate) history_filter: std::option::Option<crate::types::DeploymentHistoryFilter>,
    pub(crate) parent_target_arn: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListDeploymentsInputBuilder {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the target IoT thing or thing group.</p>
    pub fn target_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.target_arn = Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the target IoT thing or thing group.</p>
    pub fn set_target_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.target_arn = input;
        self
    }
    /// <p>The filter for the list of deployments. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ALL</code> – The list includes all deployments.</p> </li>
    /// <li> <p> <code>LATEST_ONLY</code> – The list includes only the latest revision of each deployment.</p> </li>
    /// </ul>
    /// <p>Default: <code>LATEST_ONLY</code> </p>
    pub fn history_filter(mut self, input: crate::types::DeploymentHistoryFilter) -> Self {
        self.history_filter = Some(input);
        self
    }
    /// <p>The filter for the list of deployments. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ALL</code> – The list includes all deployments.</p> </li>
    /// <li> <p> <code>LATEST_ONLY</code> – The list includes only the latest revision of each deployment.</p> </li>
    /// </ul>
    /// <p>Default: <code>LATEST_ONLY</code> </p>
    pub fn set_history_filter(
        mut self,
        input: std::option::Option<crate::types::DeploymentHistoryFilter>,
    ) -> Self {
        self.history_filter = input;
        self
    }
    /// <p>The parent deployment's target <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> within a subdeployment.</p>
    pub fn parent_target_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.parent_target_arn = Some(input.into());
        self
    }
    /// <p>The parent deployment's target <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> within a subdeployment.</p>
    pub fn set_parent_target_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.parent_target_arn = input;
        self
    }
    /// <p>The maximum number of results to be returned per paginated request.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to be returned per paginated request.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The token to be used for the next set of paginated results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token to be used for the next set of paginated results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListDeploymentsInput`](crate::operation::list_deployments::ListDeploymentsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_deployments::ListDeploymentsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::list_deployments::ListDeploymentsInput {
            target_arn: self.target_arn,
            history_filter: self.history_filter,
            parent_target_arn: self.parent_target_arn,
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
