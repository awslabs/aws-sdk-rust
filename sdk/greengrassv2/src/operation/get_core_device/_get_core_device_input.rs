// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetCoreDeviceInput {
    /// <p>The name of the core device. This is also the name of the IoT thing.</p>
    #[doc(hidden)]
    pub core_device_thing_name: std::option::Option<std::string::String>,
}
impl GetCoreDeviceInput {
    /// <p>The name of the core device. This is also the name of the IoT thing.</p>
    pub fn core_device_thing_name(&self) -> std::option::Option<&str> {
        self.core_device_thing_name.as_deref()
    }
}
impl GetCoreDeviceInput {
    /// Creates a new builder-style object to manufacture [`GetCoreDeviceInput`](crate::operation::get_core_device::GetCoreDeviceInput).
    pub fn builder() -> crate::operation::get_core_device::builders::GetCoreDeviceInputBuilder {
        crate::operation::get_core_device::builders::GetCoreDeviceInputBuilder::default()
    }
}

/// A builder for [`GetCoreDeviceInput`](crate::operation::get_core_device::GetCoreDeviceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetCoreDeviceInputBuilder {
    pub(crate) core_device_thing_name: std::option::Option<std::string::String>,
}
impl GetCoreDeviceInputBuilder {
    /// <p>The name of the core device. This is also the name of the IoT thing.</p>
    pub fn core_device_thing_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.core_device_thing_name = Some(input.into());
        self
    }
    /// <p>The name of the core device. This is also the name of the IoT thing.</p>
    pub fn set_core_device_thing_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.core_device_thing_name = input;
        self
    }
    /// Consumes the builder and constructs a [`GetCoreDeviceInput`](crate::operation::get_core_device::GetCoreDeviceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_core_device::GetCoreDeviceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_core_device::GetCoreDeviceInput {
            core_device_thing_name: self.core_device_thing_name,
        })
    }
}
