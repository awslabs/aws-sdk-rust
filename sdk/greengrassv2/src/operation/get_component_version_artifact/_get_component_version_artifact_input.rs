// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetComponentVersionArtifactInput {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the component version. Specify the ARN of a public or a Lambda component version.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The name of the artifact.</p>
    /// <p>You can use the <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_GetComponent.html">GetComponent</a> operation to download the component recipe, which includes the URI of the artifact. The artifact name is the section of the URI after the scheme. For example, in the artifact URI <code>greengrass:SomeArtifact.zip</code>, the artifact name is <code>SomeArtifact.zip</code>.</p>
    #[doc(hidden)]
    pub artifact_name: std::option::Option<std::string::String>,
}
impl GetComponentVersionArtifactInput {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the component version. Specify the ARN of a public or a Lambda component version.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The name of the artifact.</p>
    /// <p>You can use the <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_GetComponent.html">GetComponent</a> operation to download the component recipe, which includes the URI of the artifact. The artifact name is the section of the URI after the scheme. For example, in the artifact URI <code>greengrass:SomeArtifact.zip</code>, the artifact name is <code>SomeArtifact.zip</code>.</p>
    pub fn artifact_name(&self) -> std::option::Option<&str> {
        self.artifact_name.as_deref()
    }
}
impl GetComponentVersionArtifactInput {
    /// Creates a new builder-style object to manufacture [`GetComponentVersionArtifactInput`](crate::operation::get_component_version_artifact::GetComponentVersionArtifactInput).
    pub fn builder() -> crate::operation::get_component_version_artifact::builders::GetComponentVersionArtifactInputBuilder{
        crate::operation::get_component_version_artifact::builders::GetComponentVersionArtifactInputBuilder::default()
    }
}

/// A builder for [`GetComponentVersionArtifactInput`](crate::operation::get_component_version_artifact::GetComponentVersionArtifactInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetComponentVersionArtifactInputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) artifact_name: std::option::Option<std::string::String>,
}
impl GetComponentVersionArtifactInputBuilder {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the component version. Specify the ARN of a public or a Lambda component version.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the component version. Specify the ARN of a public or a Lambda component version.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The name of the artifact.</p>
    /// <p>You can use the <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_GetComponent.html">GetComponent</a> operation to download the component recipe, which includes the URI of the artifact. The artifact name is the section of the URI after the scheme. For example, in the artifact URI <code>greengrass:SomeArtifact.zip</code>, the artifact name is <code>SomeArtifact.zip</code>.</p>
    pub fn artifact_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.artifact_name = Some(input.into());
        self
    }
    /// <p>The name of the artifact.</p>
    /// <p>You can use the <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_GetComponent.html">GetComponent</a> operation to download the component recipe, which includes the URI of the artifact. The artifact name is the section of the URI after the scheme. For example, in the artifact URI <code>greengrass:SomeArtifact.zip</code>, the artifact name is <code>SomeArtifact.zip</code>.</p>
    pub fn set_artifact_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.artifact_name = input;
        self
    }
    /// Consumes the builder and constructs a [`GetComponentVersionArtifactInput`](crate::operation::get_component_version_artifact::GetComponentVersionArtifactInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_component_version_artifact::GetComponentVersionArtifactInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_component_version_artifact::GetComponentVersionArtifactInput {
                arn: self.arn,
                artifact_name: self.artifact_name,
            },
        )
    }
}
