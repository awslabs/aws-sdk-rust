// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ResolveComponentCandidates`](crate::operation::resolve_component_candidates::builders::ResolveComponentCandidatesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`platform(ComponentPlatform)`](crate::operation::resolve_component_candidates::builders::ResolveComponentCandidatesFluentBuilder::platform) / [`set_platform(Option<ComponentPlatform>)`](crate::operation::resolve_component_candidates::builders::ResolveComponentCandidatesFluentBuilder::set_platform): <p>The platform to use to resolve compatible components.</p>
    ///   - [`component_candidates(Vec<ComponentCandidate>)`](crate::operation::resolve_component_candidates::builders::ResolveComponentCandidatesFluentBuilder::component_candidates) / [`set_component_candidates(Option<Vec<ComponentCandidate>>)`](crate::operation::resolve_component_candidates::builders::ResolveComponentCandidatesFluentBuilder::set_component_candidates): <p>The list of components to resolve.</p>
    /// - On success, responds with [`ResolveComponentCandidatesOutput`](crate::operation::resolve_component_candidates::ResolveComponentCandidatesOutput) with field(s):
    ///   - [`resolved_component_versions(Option<Vec<ResolvedComponentVersion>>)`](crate::operation::resolve_component_candidates::ResolveComponentCandidatesOutput::resolved_component_versions): <p>A list of components that meet the requirements that you specify in the request. This list includes each component's recipe that you can use to install the component.</p>
    /// - On failure, responds with [`SdkError<ResolveComponentCandidatesError>`](crate::operation::resolve_component_candidates::ResolveComponentCandidatesError)
    pub fn resolve_component_candidates(&self) -> crate::operation::resolve_component_candidates::builders::ResolveComponentCandidatesFluentBuilder{
        crate::operation::resolve_component_candidates::builders::ResolveComponentCandidatesFluentBuilder::new(self.handle.clone())
    }
}
