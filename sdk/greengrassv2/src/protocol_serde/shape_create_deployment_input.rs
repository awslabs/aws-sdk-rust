// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_deployment_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_deployment::CreateDeploymentInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("clientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.components {
        #[allow(unused_mut)]
        let mut object_3 = object.key("components").start_object();
        for (key_4, value_5) in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_6 = object_3.key(key_4.as_str()).start_object();
                crate::protocol_serde::shape_component_deployment_specification::ser_component_deployment_specification(&mut object_6, value_5)?;
                object_6.finish();
            }
        }
        object_3.finish();
    }
    if let Some(var_7) = &input.deployment_name {
        object.key("deploymentName").string(var_7.as_str());
    }
    if let Some(var_8) = &input.deployment_policies {
        #[allow(unused_mut)]
        let mut object_9 = object.key("deploymentPolicies").start_object();
        crate::protocol_serde::shape_deployment_policies::ser_deployment_policies(
            &mut object_9,
            var_8,
        )?;
        object_9.finish();
    }
    if let Some(var_10) = &input.iot_job_configuration {
        #[allow(unused_mut)]
        let mut object_11 = object.key("iotJobConfiguration").start_object();
        crate::protocol_serde::shape_deployment_io_t_job_configuration::ser_deployment_io_t_job_configuration(&mut object_11, var_10)?;
        object_11.finish();
    }
    if let Some(var_12) = &input.parent_target_arn {
        object.key("parentTargetArn").string(var_12.as_str());
    }
    if let Some(var_13) = &input.tags {
        #[allow(unused_mut)]
        let mut object_14 = object.key("tags").start_object();
        for (key_15, value_16) in var_13 {
            {
                object_14.key(key_15.as_str()).string(value_16.as_str());
            }
        }
        object_14.finish();
    }
    if let Some(var_17) = &input.target_arn {
        object.key("targetArn").string(var_17.as_str());
    }
    Ok(())
}
