// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains a request to associate a client device with a core device. The <a href="https://docs.aws.amazon.com/greengrass/v2/APIReference/API_BatchAssociateClientDeviceWithCoreDevice.html">BatchAssociateClientDeviceWithCoreDevice</a> operation consumes a list of these requests.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateClientDeviceWithCoreDeviceEntry {
    /// <p>The name of the IoT thing that represents the client device to associate.</p>
    #[doc(hidden)]
    pub thing_name: std::option::Option<std::string::String>,
}
impl AssociateClientDeviceWithCoreDeviceEntry {
    /// <p>The name of the IoT thing that represents the client device to associate.</p>
    pub fn thing_name(&self) -> std::option::Option<&str> {
        self.thing_name.as_deref()
    }
}
impl AssociateClientDeviceWithCoreDeviceEntry {
    /// Creates a new builder-style object to manufacture [`AssociateClientDeviceWithCoreDeviceEntry`](crate::types::AssociateClientDeviceWithCoreDeviceEntry).
    pub fn builder() -> crate::types::builders::AssociateClientDeviceWithCoreDeviceEntryBuilder {
        crate::types::builders::AssociateClientDeviceWithCoreDeviceEntryBuilder::default()
    }
}

/// A builder for [`AssociateClientDeviceWithCoreDeviceEntry`](crate::types::AssociateClientDeviceWithCoreDeviceEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociateClientDeviceWithCoreDeviceEntryBuilder {
    pub(crate) thing_name: std::option::Option<std::string::String>,
}
impl AssociateClientDeviceWithCoreDeviceEntryBuilder {
    /// <p>The name of the IoT thing that represents the client device to associate.</p>
    pub fn thing_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.thing_name = Some(input.into());
        self
    }
    /// <p>The name of the IoT thing that represents the client device to associate.</p>
    pub fn set_thing_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.thing_name = input;
        self
    }
    /// Consumes the builder and constructs a [`AssociateClientDeviceWithCoreDeviceEntry`](crate::types::AssociateClientDeviceWithCoreDeviceEntry).
    pub fn build(self) -> crate::types::AssociateClientDeviceWithCoreDeviceEntry {
        crate::types::AssociateClientDeviceWithCoreDeviceEntry {
            thing_name: self.thing_name,
        }
    }
}
