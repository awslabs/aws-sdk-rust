// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the latest version of a component.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ComponentLatestVersion {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the component version.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The version of the component.</p>
    pub component_version: ::std::option::Option<::std::string::String>,
    /// <p>The time at which the component was created, expressed in ISO 8601 format.</p>
    pub creation_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The description of the component version.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The publisher of the component version.</p>
    pub publisher: ::std::option::Option<::std::string::String>,
    /// <p>The platforms that the component version supports.</p>
    pub platforms: ::std::option::Option<::std::vec::Vec<crate::types::ComponentPlatform>>,
}
impl ComponentLatestVersion {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the component version.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The version of the component.</p>
    pub fn component_version(&self) -> ::std::option::Option<&str> {
        self.component_version.as_deref()
    }
    /// <p>The time at which the component was created, expressed in ISO 8601 format.</p>
    pub fn creation_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_timestamp.as_ref()
    }
    /// <p>The description of the component version.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The publisher of the component version.</p>
    pub fn publisher(&self) -> ::std::option::Option<&str> {
        self.publisher.as_deref()
    }
    /// <p>The platforms that the component version supports.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.platforms.is_none()`.
    pub fn platforms(&self) -> &[crate::types::ComponentPlatform] {
        self.platforms.as_deref().unwrap_or_default()
    }
}
impl ComponentLatestVersion {
    /// Creates a new builder-style object to manufacture [`ComponentLatestVersion`](crate::types::ComponentLatestVersion).
    pub fn builder() -> crate::types::builders::ComponentLatestVersionBuilder {
        crate::types::builders::ComponentLatestVersionBuilder::default()
    }
}

/// A builder for [`ComponentLatestVersion`](crate::types::ComponentLatestVersion).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ComponentLatestVersionBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) component_version: ::std::option::Option<::std::string::String>,
    pub(crate) creation_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) publisher: ::std::option::Option<::std::string::String>,
    pub(crate) platforms: ::std::option::Option<::std::vec::Vec<crate::types::ComponentPlatform>>,
}
impl ComponentLatestVersionBuilder {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the component version.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the component version.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the component version.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The version of the component.</p>
    pub fn component_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.component_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the component.</p>
    pub fn set_component_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.component_version = input;
        self
    }
    /// <p>The version of the component.</p>
    pub fn get_component_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.component_version
    }
    /// <p>The time at which the component was created, expressed in ISO 8601 format.</p>
    pub fn creation_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time at which the component was created, expressed in ISO 8601 format.</p>
    pub fn set_creation_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_timestamp = input;
        self
    }
    /// <p>The time at which the component was created, expressed in ISO 8601 format.</p>
    pub fn get_creation_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_timestamp
    }
    /// <p>The description of the component version.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the component version.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the component version.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The publisher of the component version.</p>
    pub fn publisher(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.publisher = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The publisher of the component version.</p>
    pub fn set_publisher(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.publisher = input;
        self
    }
    /// <p>The publisher of the component version.</p>
    pub fn get_publisher(&self) -> &::std::option::Option<::std::string::String> {
        &self.publisher
    }
    /// Appends an item to `platforms`.
    ///
    /// To override the contents of this collection use [`set_platforms`](Self::set_platforms).
    ///
    /// <p>The platforms that the component version supports.</p>
    pub fn platforms(mut self, input: crate::types::ComponentPlatform) -> Self {
        let mut v = self.platforms.unwrap_or_default();
        v.push(input);
        self.platforms = ::std::option::Option::Some(v);
        self
    }
    /// <p>The platforms that the component version supports.</p>
    pub fn set_platforms(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ComponentPlatform>>) -> Self {
        self.platforms = input;
        self
    }
    /// <p>The platforms that the component version supports.</p>
    pub fn get_platforms(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ComponentPlatform>> {
        &self.platforms
    }
    /// Consumes the builder and constructs a [`ComponentLatestVersion`](crate::types::ComponentLatestVersion).
    pub fn build(self) -> crate::types::ComponentLatestVersion {
        crate::types::ComponentLatestVersion {
            arn: self.arn,
            component_version: self.component_version,
            creation_timestamp: self.creation_timestamp,
            description: self.description,
            publisher: self.publisher,
            platforms: self.platforms,
        }
    }
}
