// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about how long a component on a core device can validate its configuration updates before it times out. Components can use the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interprocess-communication.html#ipc-operation-subscribetovalidateconfigurationupdates">SubscribeToValidateConfigurationUpdates</a> IPC operation to receive notifications when a deployment specifies a configuration update. Then, components can respond with the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interprocess-communication.html#ipc-operation-sendconfigurationvalidityreport">SendConfigurationValidityReport</a> IPC operation. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/create-deployments.html">Create deployments</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeploymentConfigurationValidationPolicy {
    /// <p>The amount of time in seconds that a component can validate its configuration updates. If the validation time exceeds this timeout, then the deployment proceeds for the device.</p>
    /// <p>Default: <code>30</code> </p>
    #[doc(hidden)]
    pub timeout_in_seconds: std::option::Option<i32>,
}
impl DeploymentConfigurationValidationPolicy {
    /// <p>The amount of time in seconds that a component can validate its configuration updates. If the validation time exceeds this timeout, then the deployment proceeds for the device.</p>
    /// <p>Default: <code>30</code> </p>
    pub fn timeout_in_seconds(&self) -> std::option::Option<i32> {
        self.timeout_in_seconds
    }
}
impl DeploymentConfigurationValidationPolicy {
    /// Creates a new builder-style object to manufacture [`DeploymentConfigurationValidationPolicy`](crate::types::DeploymentConfigurationValidationPolicy).
    pub fn builder() -> crate::types::builders::DeploymentConfigurationValidationPolicyBuilder {
        crate::types::builders::DeploymentConfigurationValidationPolicyBuilder::default()
    }
}

/// A builder for [`DeploymentConfigurationValidationPolicy`](crate::types::DeploymentConfigurationValidationPolicy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeploymentConfigurationValidationPolicyBuilder {
    pub(crate) timeout_in_seconds: std::option::Option<i32>,
}
impl DeploymentConfigurationValidationPolicyBuilder {
    /// <p>The amount of time in seconds that a component can validate its configuration updates. If the validation time exceeds this timeout, then the deployment proceeds for the device.</p>
    /// <p>Default: <code>30</code> </p>
    pub fn timeout_in_seconds(mut self, input: i32) -> Self {
        self.timeout_in_seconds = Some(input);
        self
    }
    /// <p>The amount of time in seconds that a component can validate its configuration updates. If the validation time exceeds this timeout, then the deployment proceeds for the device.</p>
    /// <p>Default: <code>30</code> </p>
    pub fn set_timeout_in_seconds(mut self, input: std::option::Option<i32>) -> Self {
        self.timeout_in_seconds = input;
        self
    }
    /// Consumes the builder and constructs a [`DeploymentConfigurationValidationPolicy`](crate::types::DeploymentConfigurationValidationPolicy).
    pub fn build(self) -> crate::types::DeploymentConfigurationValidationPolicy {
        crate::types::DeploymentConfigurationValidationPolicy {
            timeout_in_seconds: self.timeout_in_seconds,
        }
    }
}
