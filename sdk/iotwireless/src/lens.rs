// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_destinations_output_next_token(
    input: &crate::operation::list_destinations::ListDestinationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_device_profiles_output_next_token(
    input: &crate::operation::list_device_profiles::ListDeviceProfilesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_fuota_tasks_output_next_token(
    input: &crate::operation::list_fuota_tasks::ListFuotaTasksOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_multicast_groups_output_next_token(
    input: &crate::operation::list_multicast_groups::ListMulticastGroupsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_multicast_groups_by_fuota_task_output_next_token(
    input: &crate::operation::list_multicast_groups_by_fuota_task::ListMulticastGroupsByFuotaTaskOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_network_analyzer_configurations_output_next_token(
    input: &crate::operation::list_network_analyzer_configurations::ListNetworkAnalyzerConfigurationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_position_configurations_output_next_token(
    input: &crate::operation::list_position_configurations::ListPositionConfigurationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_queued_messages_output_next_token(
    input: &crate::operation::list_queued_messages::ListQueuedMessagesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_service_profiles_output_next_token(
    input: &crate::operation::list_service_profiles::ListServiceProfilesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_wireless_devices_output_next_token(
    input: &crate::operation::list_wireless_devices::ListWirelessDevicesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_wireless_gateways_output_next_token(
    input: &crate::operation::list_wireless_gateways::ListWirelessGatewaysOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
