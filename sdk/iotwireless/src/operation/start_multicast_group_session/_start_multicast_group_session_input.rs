// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartMulticastGroupSessionInput {
    /// <p>The ID of the multicast group.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The LoRaWAN information used with the multicast session.</p>
    #[doc(hidden)]
    pub lo_ra_wan: std::option::Option<crate::types::LoRaWanMulticastSession>,
}
impl StartMulticastGroupSessionInput {
    /// <p>The ID of the multicast group.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The LoRaWAN information used with the multicast session.</p>
    pub fn lo_ra_wan(&self) -> std::option::Option<&crate::types::LoRaWanMulticastSession> {
        self.lo_ra_wan.as_ref()
    }
}
impl StartMulticastGroupSessionInput {
    /// Creates a new builder-style object to manufacture [`StartMulticastGroupSessionInput`](crate::operation::start_multicast_group_session::StartMulticastGroupSessionInput).
    pub fn builder() -> crate::operation::start_multicast_group_session::builders::StartMulticastGroupSessionInputBuilder{
        crate::operation::start_multicast_group_session::builders::StartMulticastGroupSessionInputBuilder::default()
    }
}

/// A builder for [`StartMulticastGroupSessionInput`](crate::operation::start_multicast_group_session::StartMulticastGroupSessionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartMulticastGroupSessionInputBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) lo_ra_wan: std::option::Option<crate::types::LoRaWanMulticastSession>,
}
impl StartMulticastGroupSessionInputBuilder {
    /// <p>The ID of the multicast group.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of the multicast group.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The LoRaWAN information used with the multicast session.</p>
    pub fn lo_ra_wan(mut self, input: crate::types::LoRaWanMulticastSession) -> Self {
        self.lo_ra_wan = Some(input);
        self
    }
    /// <p>The LoRaWAN information used with the multicast session.</p>
    pub fn set_lo_ra_wan(
        mut self,
        input: std::option::Option<crate::types::LoRaWanMulticastSession>,
    ) -> Self {
        self.lo_ra_wan = input;
        self
    }
    /// Consumes the builder and constructs a [`StartMulticastGroupSessionInput`](crate::operation::start_multicast_group_session::StartMulticastGroupSessionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::start_multicast_group_session::StartMulticastGroupSessionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::start_multicast_group_session::StartMulticastGroupSessionInput {
                id: self.id,
                lo_ra_wan: self.lo_ra_wan,
            },
        )
    }
}
