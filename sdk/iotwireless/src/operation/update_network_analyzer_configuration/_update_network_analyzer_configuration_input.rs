// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateNetworkAnalyzerConfigurationInput {
    /// <p>Name of the network analyzer configuration.</p>
    #[doc(hidden)]
    pub configuration_name: std::option::Option<std::string::String>,
    /// <p>Trace content for your wireless gateway and wireless device resources.</p>
    #[doc(hidden)]
    pub trace_content: std::option::Option<crate::types::TraceContent>,
    /// <p>Wireless device resources to add to the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resource to add in the input array.</p>
    #[doc(hidden)]
    pub wireless_devices_to_add: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Wireless device resources to remove from the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resources to remove in the input array.</p>
    #[doc(hidden)]
    pub wireless_devices_to_remove: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Wireless gateway resources to add to the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resource to add in the input array.</p>
    #[doc(hidden)]
    pub wireless_gateways_to_add: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Wireless gateway resources to remove from the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resources to remove in the input array.</p>
    #[doc(hidden)]
    pub wireless_gateways_to_remove: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The description of the new resource.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
}
impl UpdateNetworkAnalyzerConfigurationInput {
    /// <p>Name of the network analyzer configuration.</p>
    pub fn configuration_name(&self) -> std::option::Option<&str> {
        self.configuration_name.as_deref()
    }
    /// <p>Trace content for your wireless gateway and wireless device resources.</p>
    pub fn trace_content(&self) -> std::option::Option<&crate::types::TraceContent> {
        self.trace_content.as_ref()
    }
    /// <p>Wireless device resources to add to the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resource to add in the input array.</p>
    pub fn wireless_devices_to_add(&self) -> std::option::Option<&[std::string::String]> {
        self.wireless_devices_to_add.as_deref()
    }
    /// <p>Wireless device resources to remove from the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resources to remove in the input array.</p>
    pub fn wireless_devices_to_remove(&self) -> std::option::Option<&[std::string::String]> {
        self.wireless_devices_to_remove.as_deref()
    }
    /// <p>Wireless gateway resources to add to the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resource to add in the input array.</p>
    pub fn wireless_gateways_to_add(&self) -> std::option::Option<&[std::string::String]> {
        self.wireless_gateways_to_add.as_deref()
    }
    /// <p>Wireless gateway resources to remove from the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resources to remove in the input array.</p>
    pub fn wireless_gateways_to_remove(&self) -> std::option::Option<&[std::string::String]> {
        self.wireless_gateways_to_remove.as_deref()
    }
    /// <p>The description of the new resource.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl UpdateNetworkAnalyzerConfigurationInput {
    /// Creates a new builder-style object to manufacture [`UpdateNetworkAnalyzerConfigurationInput`](crate::operation::update_network_analyzer_configuration::UpdateNetworkAnalyzerConfigurationInput).
    pub fn builder() -> crate::operation::update_network_analyzer_configuration::builders::UpdateNetworkAnalyzerConfigurationInputBuilder{
        crate::operation::update_network_analyzer_configuration::builders::UpdateNetworkAnalyzerConfigurationInputBuilder::default()
    }
}

/// A builder for [`UpdateNetworkAnalyzerConfigurationInput`](crate::operation::update_network_analyzer_configuration::UpdateNetworkAnalyzerConfigurationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateNetworkAnalyzerConfigurationInputBuilder {
    pub(crate) configuration_name: std::option::Option<std::string::String>,
    pub(crate) trace_content: std::option::Option<crate::types::TraceContent>,
    pub(crate) wireless_devices_to_add: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) wireless_devices_to_remove: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) wireless_gateways_to_add: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) wireless_gateways_to_remove: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) description: std::option::Option<std::string::String>,
}
impl UpdateNetworkAnalyzerConfigurationInputBuilder {
    /// <p>Name of the network analyzer configuration.</p>
    pub fn configuration_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.configuration_name = Some(input.into());
        self
    }
    /// <p>Name of the network analyzer configuration.</p>
    pub fn set_configuration_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.configuration_name = input;
        self
    }
    /// <p>Trace content for your wireless gateway and wireless device resources.</p>
    pub fn trace_content(mut self, input: crate::types::TraceContent) -> Self {
        self.trace_content = Some(input);
        self
    }
    /// <p>Trace content for your wireless gateway and wireless device resources.</p>
    pub fn set_trace_content(
        mut self,
        input: std::option::Option<crate::types::TraceContent>,
    ) -> Self {
        self.trace_content = input;
        self
    }
    /// Appends an item to `wireless_devices_to_add`.
    ///
    /// To override the contents of this collection use [`set_wireless_devices_to_add`](Self::set_wireless_devices_to_add).
    ///
    /// <p>Wireless device resources to add to the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resource to add in the input array.</p>
    pub fn wireless_devices_to_add(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.wireless_devices_to_add.unwrap_or_default();
        v.push(input.into());
        self.wireless_devices_to_add = Some(v);
        self
    }
    /// <p>Wireless device resources to add to the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resource to add in the input array.</p>
    pub fn set_wireless_devices_to_add(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.wireless_devices_to_add = input;
        self
    }
    /// Appends an item to `wireless_devices_to_remove`.
    ///
    /// To override the contents of this collection use [`set_wireless_devices_to_remove`](Self::set_wireless_devices_to_remove).
    ///
    /// <p>Wireless device resources to remove from the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resources to remove in the input array.</p>
    pub fn wireless_devices_to_remove(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.wireless_devices_to_remove.unwrap_or_default();
        v.push(input.into());
        self.wireless_devices_to_remove = Some(v);
        self
    }
    /// <p>Wireless device resources to remove from the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resources to remove in the input array.</p>
    pub fn set_wireless_devices_to_remove(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.wireless_devices_to_remove = input;
        self
    }
    /// Appends an item to `wireless_gateways_to_add`.
    ///
    /// To override the contents of this collection use [`set_wireless_gateways_to_add`](Self::set_wireless_gateways_to_add).
    ///
    /// <p>Wireless gateway resources to add to the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resource to add in the input array.</p>
    pub fn wireless_gateways_to_add(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.wireless_gateways_to_add.unwrap_or_default();
        v.push(input.into());
        self.wireless_gateways_to_add = Some(v);
        self
    }
    /// <p>Wireless gateway resources to add to the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resource to add in the input array.</p>
    pub fn set_wireless_gateways_to_add(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.wireless_gateways_to_add = input;
        self
    }
    /// Appends an item to `wireless_gateways_to_remove`.
    ///
    /// To override the contents of this collection use [`set_wireless_gateways_to_remove`](Self::set_wireless_gateways_to_remove).
    ///
    /// <p>Wireless gateway resources to remove from the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resources to remove in the input array.</p>
    pub fn wireless_gateways_to_remove(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.wireless_gateways_to_remove.unwrap_or_default();
        v.push(input.into());
        self.wireless_gateways_to_remove = Some(v);
        self
    }
    /// <p>Wireless gateway resources to remove from the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resources to remove in the input array.</p>
    pub fn set_wireless_gateways_to_remove(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.wireless_gateways_to_remove = input;
        self
    }
    /// <p>The description of the new resource.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the new resource.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateNetworkAnalyzerConfigurationInput`](crate::operation::update_network_analyzer_configuration::UpdateNetworkAnalyzerConfigurationInput).
    pub fn build(self) -> Result<crate::operation::update_network_analyzer_configuration::UpdateNetworkAnalyzerConfigurationInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::update_network_analyzer_configuration::UpdateNetworkAnalyzerConfigurationInput {
                configuration_name: self.configuration_name
                ,
                trace_content: self.trace_content
                ,
                wireless_devices_to_add: self.wireless_devices_to_add
                ,
                wireless_devices_to_remove: self.wireless_devices_to_remove
                ,
                wireless_gateways_to_add: self.wireless_gateways_to_add
                ,
                wireless_gateways_to_remove: self.wireless_gateways_to_remove
                ,
                description: self.description
                ,
            }
        )
    }
}
