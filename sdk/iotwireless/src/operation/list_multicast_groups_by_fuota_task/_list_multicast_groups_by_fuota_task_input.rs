// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListMulticastGroupsByFuotaTaskInput {
    /// <p>The ID of a FUOTA task.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The maximum number of results to return in this operation.</p>
    #[doc(hidden)]
    pub max_results: i32,
}
impl ListMulticastGroupsByFuotaTaskInput {
    /// <p>The ID of a FUOTA task.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of results to return in this operation.</p>
    pub fn max_results(&self) -> i32 {
        self.max_results
    }
}
impl ListMulticastGroupsByFuotaTaskInput {
    /// Creates a new builder-style object to manufacture [`ListMulticastGroupsByFuotaTaskInput`](crate::operation::list_multicast_groups_by_fuota_task::ListMulticastGroupsByFuotaTaskInput).
    pub fn builder() -> crate::operation::list_multicast_groups_by_fuota_task::builders::ListMulticastGroupsByFuotaTaskInputBuilder{
        crate::operation::list_multicast_groups_by_fuota_task::builders::ListMulticastGroupsByFuotaTaskInputBuilder::default()
    }
}

/// A builder for [`ListMulticastGroupsByFuotaTaskInput`](crate::operation::list_multicast_groups_by_fuota_task::ListMulticastGroupsByFuotaTaskInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListMulticastGroupsByFuotaTaskInputBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
}
impl ListMulticastGroupsByFuotaTaskInputBuilder {
    /// <p>The ID of a FUOTA task.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of a FUOTA task.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The maximum number of results to return in this operation.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to return in this operation.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Consumes the builder and constructs a [`ListMulticastGroupsByFuotaTaskInput`](crate::operation::list_multicast_groups_by_fuota_task::ListMulticastGroupsByFuotaTaskInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_multicast_groups_by_fuota_task::ListMulticastGroupsByFuotaTaskInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_multicast_groups_by_fuota_task::ListMulticastGroupsByFuotaTaskInput {
                id: self.id
                ,
                next_token: self.next_token
                ,
                max_results: self.max_results
                    .unwrap_or_default()
                ,
            }
        )
    }
}
