// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateWirelessDeviceImportTaskInput {
    /// <p>The identifier of the import task to be updated.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The Sidewalk-related parameters of the import task to be updated.</p>
    pub sidewalk: ::std::option::Option<crate::types::SidewalkUpdateImportInfo>,
}
impl UpdateWirelessDeviceImportTaskInput {
    /// <p>The identifier of the import task to be updated.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The Sidewalk-related parameters of the import task to be updated.</p>
    pub fn sidewalk(&self) -> ::std::option::Option<&crate::types::SidewalkUpdateImportInfo> {
        self.sidewalk.as_ref()
    }
}
impl UpdateWirelessDeviceImportTaskInput {
    /// Creates a new builder-style object to manufacture [`UpdateWirelessDeviceImportTaskInput`](crate::operation::update_wireless_device_import_task::UpdateWirelessDeviceImportTaskInput).
    pub fn builder() -> crate::operation::update_wireless_device_import_task::builders::UpdateWirelessDeviceImportTaskInputBuilder {
        crate::operation::update_wireless_device_import_task::builders::UpdateWirelessDeviceImportTaskInputBuilder::default()
    }
}

/// A builder for [`UpdateWirelessDeviceImportTaskInput`](crate::operation::update_wireless_device_import_task::UpdateWirelessDeviceImportTaskInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateWirelessDeviceImportTaskInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) sidewalk: ::std::option::Option<crate::types::SidewalkUpdateImportInfo>,
}
impl UpdateWirelessDeviceImportTaskInputBuilder {
    /// <p>The identifier of the import task to be updated.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the import task to be updated.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The identifier of the import task to be updated.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The Sidewalk-related parameters of the import task to be updated.</p>
    /// This field is required.
    pub fn sidewalk(mut self, input: crate::types::SidewalkUpdateImportInfo) -> Self {
        self.sidewalk = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Sidewalk-related parameters of the import task to be updated.</p>
    pub fn set_sidewalk(mut self, input: ::std::option::Option<crate::types::SidewalkUpdateImportInfo>) -> Self {
        self.sidewalk = input;
        self
    }
    /// <p>The Sidewalk-related parameters of the import task to be updated.</p>
    pub fn get_sidewalk(&self) -> &::std::option::Option<crate::types::SidewalkUpdateImportInfo> {
        &self.sidewalk
    }
    /// Consumes the builder and constructs a [`UpdateWirelessDeviceImportTaskInput`](crate::operation::update_wireless_device_import_task::UpdateWirelessDeviceImportTaskInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_wireless_device_import_task::UpdateWirelessDeviceImportTaskInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_wireless_device_import_task::UpdateWirelessDeviceImportTaskInput {
                id: self.id,
                sidewalk: self.sidewalk,
            },
        )
    }
}
