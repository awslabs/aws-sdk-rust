// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetPosition`](crate::client::fluent_builders::GetPosition) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_identifier(impl Into<String>)`](crate::client::fluent_builders::GetPosition::resource_identifier) / [`set_resource_identifier(Option<String>)`](crate::client::fluent_builders::GetPosition::set_resource_identifier): <p>Resource identifier used to retrieve the position information.</p>
    ///   - [`resource_type(PositionResourceType)`](crate::client::fluent_builders::GetPosition::resource_type) / [`set_resource_type(Option<PositionResourceType>)`](crate::client::fluent_builders::GetPosition::set_resource_type): <p>Resource type of the resource for which position information is retrieved.</p>
    /// - On success, responds with [`GetPositionOutput`](crate::output::GetPositionOutput) with field(s):
    ///   - [`position(Option<Vec<f32>>)`](crate::output::GetPositionOutput::position): <p>The position information of the resource.</p>
    ///   - [`accuracy(Option<Accuracy>)`](crate::output::GetPositionOutput::accuracy): <p>The accuracy of the estimated position in meters. An empty value indicates that no position data is available. A value of ‘0.0’ value indicates that position data is available. This data corresponds to the position information that you specified instead of the position computed by solver.</p>
    ///   - [`solver_type(Option<PositionSolverType>)`](crate::output::GetPositionOutput::solver_type): <p>The type of solver used to identify the position of the resource.</p>
    ///   - [`solver_provider(Option<PositionSolverProvider>)`](crate::output::GetPositionOutput::solver_provider): <p>The vendor of the positioning solver.</p>
    ///   - [`solver_version(Option<String>)`](crate::output::GetPositionOutput::solver_version): <p>The version of the positioning solver.</p>
    ///   - [`timestamp(Option<String>)`](crate::output::GetPositionOutput::timestamp): <p>The timestamp at which the device's position was determined.</p>
    /// - On failure, responds with [`SdkError<GetPositionError>`](crate::error::GetPositionError)
    #[deprecated(note = "This operation is no longer supported.")]
    pub fn get_position(&self) -> crate::client::fluent_builders::GetPosition {
        crate::client::fluent_builders::GetPosition::new(self.handle.clone())
    }
}
