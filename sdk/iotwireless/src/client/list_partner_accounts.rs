// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPartnerAccounts`](crate::operation::list_partner_accounts::builders::ListPartnerAccountsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_partner_accounts::builders::ListPartnerAccountsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_partner_accounts::builders::ListPartnerAccountsFluentBuilder::set_next_token): <p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>
    ///   - [`max_results(i32)`](crate::operation::list_partner_accounts::builders::ListPartnerAccountsFluentBuilder::max_results) / [`set_max_results(i32)`](crate::operation::list_partner_accounts::builders::ListPartnerAccountsFluentBuilder::set_max_results): <p>The maximum number of results to return in this operation.</p>
    /// - On success, responds with [`ListPartnerAccountsOutput`](crate::operation::list_partner_accounts::ListPartnerAccountsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_partner_accounts::ListPartnerAccountsOutput::next_token): <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
    ///   - [`sidewalk(Option<Vec<SidewalkAccountInfoWithFingerprint>>)`](crate::operation::list_partner_accounts::ListPartnerAccountsOutput::sidewalk): <p>The Sidewalk account credentials.</p>
    /// - On failure, responds with [`SdkError<ListPartnerAccountsError>`](crate::operation::list_partner_accounts::ListPartnerAccountsError)
    pub fn list_partner_accounts(
        &self,
    ) -> crate::operation::list_partner_accounts::builders::ListPartnerAccountsFluentBuilder {
        crate::operation::list_partner_accounts::builders::ListPartnerAccountsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
