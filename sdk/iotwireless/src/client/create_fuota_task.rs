// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFuotaTask`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_name):<br>required: **false**<br><p>The name of a FUOTA task.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_description):<br>required: **false**<br><p>The description of the new resource.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_client_request_token):<br>required: **false**<br><p>Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.</p><br>
    ///   - [`lo_ra_wan(LoRaWanFuotaTask)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::lo_ra_wan) / [`set_lo_ra_wan(Option<LoRaWanFuotaTask>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_lo_ra_wan):<br>required: **false**<br><p>The LoRaWAN information used with a FUOTA task.</p><br>
    ///   - [`firmware_update_image(impl Into<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::firmware_update_image) / [`set_firmware_update_image(Option<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_firmware_update_image):<br>required: **true**<br><p>The S3 URI points to a firmware update image that is to be used with a FUOTA task.</p><br>
    ///   - [`firmware_update_role(impl Into<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::firmware_update_role) / [`set_firmware_update_role(Option<String>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_firmware_update_role):<br>required: **true**<br><p>The firmware update role that is to be used with a FUOTA task.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_tags):<br>required: **false**<br><p>The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.</p><br>
    ///   - [`redundancy_percent(i32)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::redundancy_percent) / [`set_redundancy_percent(Option<i32>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_redundancy_percent):<br>required: **false**<br><p>The percentage of the added fragments that are redundant. For example, if the size of the firmware image file is 100 bytes and the fragment size is 10 bytes, with <code>RedundancyPercent</code> set to 50(%), the final number of encoded fragments is (100 / 10) + (100 / 10 * 50%) = 15.</p><br>
    ///   - [`fragment_size_bytes(i32)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::fragment_size_bytes) / [`set_fragment_size_bytes(Option<i32>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_fragment_size_bytes):<br>required: **false**<br><p>The size of each fragment in bytes. This parameter is supported only for FUOTA tasks with multicast groups.</p><br>
    ///   - [`fragment_interval_ms(i32)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::fragment_interval_ms) / [`set_fragment_interval_ms(Option<i32>)`](crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::set_fragment_interval_ms):<br>required: **false**<br><p>The interval for sending fragments in milliseconds, rounded to the nearest second.</p> <note>   <p>This interval only determines the timing for when the Cloud sends down the fragments to yor device. There can be a delay for when your device will receive these fragments. This delay depends on the device's class and the communication delay with the cloud.</p>  </note><br>
    /// - On success, responds with [`CreateFuotaTaskOutput`](crate::operation::create_fuota_task::CreateFuotaTaskOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_fuota_task::CreateFuotaTaskOutput::arn): <p>The arn of a FUOTA task.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_fuota_task::CreateFuotaTaskOutput::id): <p>The ID of a FUOTA task.</p>
    /// - On failure, responds with [`SdkError<CreateFuotaTaskError>`](crate::operation::create_fuota_task::CreateFuotaTaskError)
    pub fn create_fuota_task(&self) -> crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder {
        crate::operation::create_fuota_task::builders::CreateFuotaTaskFluentBuilder::new(self.handle.clone())
    }
}
