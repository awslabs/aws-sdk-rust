// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SendDataToWirelessDevice`](crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder::set_id): <p>The ID of the wireless device to receive the data.</p>
    ///   - [`transmit_mode(i32)`](crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder::transmit_mode) / [`set_transmit_mode(Option<i32>)`](crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder::set_transmit_mode): <p>The transmit mode to use to send data to the wireless device. Can be: <code>0</code> for UM (unacknowledge mode) or <code>1</code> for AM (acknowledge mode).</p>
    ///   - [`payload_data(impl Into<String>)`](crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder::payload_data) / [`set_payload_data(Option<String>)`](crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder::set_payload_data): <p>The binary to be sent to the end device, encoded in base64.</p>
    ///   - [`wireless_metadata(WirelessMetadata)`](crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder::wireless_metadata) / [`set_wireless_metadata(Option<WirelessMetadata>)`](crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder::set_wireless_metadata): <p>Metadata about the message request.</p>
    /// - On success, responds with [`SendDataToWirelessDeviceOutput`](crate::operation::send_data_to_wireless_device::SendDataToWirelessDeviceOutput) with field(s):
    ///   - [`message_id(Option<String>)`](crate::operation::send_data_to_wireless_device::SendDataToWirelessDeviceOutput::message_id): <p>The ID of the message sent to the wireless device.</p>
    /// - On failure, responds with [`SdkError<SendDataToWirelessDeviceError>`](crate::operation::send_data_to_wireless_device::SendDataToWirelessDeviceError)
    pub fn send_data_to_wireless_device(&self) -> crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder{
        crate::operation::send_data_to_wireless_device::builders::SendDataToWirelessDeviceFluentBuilder::new(self.handle.clone())
    }
}
