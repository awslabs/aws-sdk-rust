// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>LoRaWAN object for list functions.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LoRaWanListDevice {
    /// <p>The DevEUI value.</p>
    #[doc(hidden)]
    pub dev_eui: std::option::Option<std::string::String>,
}
impl LoRaWanListDevice {
    /// <p>The DevEUI value.</p>
    pub fn dev_eui(&self) -> std::option::Option<&str> {
        self.dev_eui.as_deref()
    }
}
impl LoRaWanListDevice {
    /// Creates a new builder-style object to manufacture [`LoRaWanListDevice`](crate::types::LoRaWanListDevice).
    pub fn builder() -> crate::types::builders::LoRaWanListDeviceBuilder {
        crate::types::builders::LoRaWanListDeviceBuilder::default()
    }
}

/// A builder for [`LoRaWanListDevice`](crate::types::LoRaWanListDevice).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LoRaWanListDeviceBuilder {
    pub(crate) dev_eui: std::option::Option<std::string::String>,
}
impl LoRaWanListDeviceBuilder {
    /// <p>The DevEUI value.</p>
    pub fn dev_eui(mut self, input: impl Into<std::string::String>) -> Self {
        self.dev_eui = Some(input.into());
        self
    }
    /// <p>The DevEUI value.</p>
    pub fn set_dev_eui(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.dev_eui = input;
        self
    }
    /// Consumes the builder and constructs a [`LoRaWanListDevice`](crate::types::LoRaWanListDevice).
    pub fn build(self) -> crate::types::LoRaWanListDevice {
        crate::types::LoRaWanListDevice {
            dev_eui: self.dev_eui,
        }
    }
}
