// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>OTAA device object for v1.1</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OtaaV11 {
    /// <p>The AppKey value.</p>
    #[doc(hidden)]
    pub app_key: std::option::Option<std::string::String>,
    /// <p>The NwkKey value.</p>
    #[doc(hidden)]
    pub nwk_key: std::option::Option<std::string::String>,
    /// <p>The JoinEUI value.</p>
    #[doc(hidden)]
    pub join_eui: std::option::Option<std::string::String>,
}
impl OtaaV11 {
    /// <p>The AppKey value.</p>
    pub fn app_key(&self) -> std::option::Option<&str> {
        self.app_key.as_deref()
    }
    /// <p>The NwkKey value.</p>
    pub fn nwk_key(&self) -> std::option::Option<&str> {
        self.nwk_key.as_deref()
    }
    /// <p>The JoinEUI value.</p>
    pub fn join_eui(&self) -> std::option::Option<&str> {
        self.join_eui.as_deref()
    }
}
impl OtaaV11 {
    /// Creates a new builder-style object to manufacture [`OtaaV11`](crate::types::OtaaV11).
    pub fn builder() -> crate::types::builders::OtaaV11Builder {
        crate::types::builders::OtaaV11Builder::default()
    }
}

/// A builder for [`OtaaV11`](crate::types::OtaaV11).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OtaaV11Builder {
    pub(crate) app_key: std::option::Option<std::string::String>,
    pub(crate) nwk_key: std::option::Option<std::string::String>,
    pub(crate) join_eui: std::option::Option<std::string::String>,
}
impl OtaaV11Builder {
    /// <p>The AppKey value.</p>
    pub fn app_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.app_key = Some(input.into());
        self
    }
    /// <p>The AppKey value.</p>
    pub fn set_app_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.app_key = input;
        self
    }
    /// <p>The NwkKey value.</p>
    pub fn nwk_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.nwk_key = Some(input.into());
        self
    }
    /// <p>The NwkKey value.</p>
    pub fn set_nwk_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.nwk_key = input;
        self
    }
    /// <p>The JoinEUI value.</p>
    pub fn join_eui(mut self, input: impl Into<std::string::String>) -> Self {
        self.join_eui = Some(input.into());
        self
    }
    /// <p>The JoinEUI value.</p>
    pub fn set_join_eui(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.join_eui = input;
        self
    }
    /// Consumes the builder and constructs a [`OtaaV11`](crate::types::OtaaV11).
    pub fn build(self) -> crate::types::OtaaV11 {
        crate::types::OtaaV11 {
            app_key: self.app_key,
            nwk_key: self.nwk_key,
            join_eui: self.join_eui,
        }
    }
}
