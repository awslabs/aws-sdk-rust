// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Global identity information.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GlobalIdentity {
    /// <p>Location area code of the global identity.</p>
    pub lac: i32,
    /// <p>GERAN (GSM EDGE Radio Access Network) cell global identifier.</p>
    pub geran_cid: i32,
}
impl GlobalIdentity {
    /// <p>Location area code of the global identity.</p>
    pub fn lac(&self) -> i32 {
        self.lac
    }
    /// <p>GERAN (GSM EDGE Radio Access Network) cell global identifier.</p>
    pub fn geran_cid(&self) -> i32 {
        self.geran_cid
    }
}
impl GlobalIdentity {
    /// Creates a new builder-style object to manufacture [`GlobalIdentity`](crate::types::GlobalIdentity).
    pub fn builder() -> crate::types::builders::GlobalIdentityBuilder {
        crate::types::builders::GlobalIdentityBuilder::default()
    }
}

/// A builder for [`GlobalIdentity`](crate::types::GlobalIdentity).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GlobalIdentityBuilder {
    pub(crate) lac: ::std::option::Option<i32>,
    pub(crate) geran_cid: ::std::option::Option<i32>,
}
impl GlobalIdentityBuilder {
    /// <p>Location area code of the global identity.</p>
    /// This field is required.
    pub fn lac(mut self, input: i32) -> Self {
        self.lac = ::std::option::Option::Some(input);
        self
    }
    /// <p>Location area code of the global identity.</p>
    pub fn set_lac(mut self, input: ::std::option::Option<i32>) -> Self {
        self.lac = input;
        self
    }
    /// <p>Location area code of the global identity.</p>
    pub fn get_lac(&self) -> &::std::option::Option<i32> {
        &self.lac
    }
    /// <p>GERAN (GSM EDGE Radio Access Network) cell global identifier.</p>
    /// This field is required.
    pub fn geran_cid(mut self, input: i32) -> Self {
        self.geran_cid = ::std::option::Option::Some(input);
        self
    }
    /// <p>GERAN (GSM EDGE Radio Access Network) cell global identifier.</p>
    pub fn set_geran_cid(mut self, input: ::std::option::Option<i32>) -> Self {
        self.geran_cid = input;
        self
    }
    /// <p>GERAN (GSM EDGE Radio Access Network) cell global identifier.</p>
    pub fn get_geran_cid(&self) -> &::std::option::Option<i32> {
        &self.geran_cid
    }
    /// Consumes the builder and constructs a [`GlobalIdentity`](crate::types::GlobalIdentity).
    /// This method will fail if any of the following fields are not set:
    /// - [`lac`](crate::types::builders::GlobalIdentityBuilder::lac)
    /// - [`geran_cid`](crate::types::builders::GlobalIdentityBuilder::geran_cid)
    pub fn build(self) -> ::std::result::Result<crate::types::GlobalIdentity, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GlobalIdentity {
            lac: self.lac.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "lac",
                    "lac was not specified but it is required when building GlobalIdentity",
                )
            })?,
            geran_cid: self.geran_cid.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "geran_cid",
                    "geran_cid was not specified but it is required when building GlobalIdentity",
                )
            })?,
        })
    }
}
