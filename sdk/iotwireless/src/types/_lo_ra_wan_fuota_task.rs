// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The LoRaWAN information used with a FUOTA task.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LoRaWanFuotaTask {
    /// <p>Supported RfRegions</p>
    #[doc(hidden)]
    pub rf_region: std::option::Option<crate::types::SupportedRfRegion>,
}
impl LoRaWanFuotaTask {
    /// <p>Supported RfRegions</p>
    pub fn rf_region(&self) -> std::option::Option<&crate::types::SupportedRfRegion> {
        self.rf_region.as_ref()
    }
}
impl LoRaWanFuotaTask {
    /// Creates a new builder-style object to manufacture [`LoRaWanFuotaTask`](crate::types::LoRaWanFuotaTask).
    pub fn builder() -> crate::types::builders::LoRaWanFuotaTaskBuilder {
        crate::types::builders::LoRaWanFuotaTaskBuilder::default()
    }
}

/// A builder for [`LoRaWanFuotaTask`](crate::types::LoRaWanFuotaTask).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LoRaWanFuotaTaskBuilder {
    pub(crate) rf_region: std::option::Option<crate::types::SupportedRfRegion>,
}
impl LoRaWanFuotaTaskBuilder {
    /// <p>Supported RfRegions</p>
    pub fn rf_region(mut self, input: crate::types::SupportedRfRegion) -> Self {
        self.rf_region = Some(input);
        self
    }
    /// <p>Supported RfRegions</p>
    pub fn set_rf_region(
        mut self,
        input: std::option::Option<crate::types::SupportedRfRegion>,
    ) -> Self {
        self.rf_region = input;
        self
    }
    /// Consumes the builder and constructs a [`LoRaWanFuotaTask`](crate::types::LoRaWanFuotaTask).
    pub fn build(self) -> crate::types::LoRaWanFuotaTask {
        crate::types::LoRaWanFuotaTask {
            rf_region: self.rf_region,
        }
    }
}
