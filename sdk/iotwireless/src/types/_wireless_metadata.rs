// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>WirelessMetadata object.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct WirelessMetadata {
    /// <p>LoRaWAN device info.</p>
    #[doc(hidden)]
    pub lo_ra_wan: std::option::Option<crate::types::LoRaWanSendDataToDevice>,
    /// <p>The Sidewalk account credentials.</p>
    #[doc(hidden)]
    pub sidewalk: std::option::Option<crate::types::SidewalkSendDataToDevice>,
}
impl WirelessMetadata {
    /// <p>LoRaWAN device info.</p>
    pub fn lo_ra_wan(&self) -> std::option::Option<&crate::types::LoRaWanSendDataToDevice> {
        self.lo_ra_wan.as_ref()
    }
    /// <p>The Sidewalk account credentials.</p>
    pub fn sidewalk(&self) -> std::option::Option<&crate::types::SidewalkSendDataToDevice> {
        self.sidewalk.as_ref()
    }
}
impl WirelessMetadata {
    /// Creates a new builder-style object to manufacture [`WirelessMetadata`](crate::types::WirelessMetadata).
    pub fn builder() -> crate::types::builders::WirelessMetadataBuilder {
        crate::types::builders::WirelessMetadataBuilder::default()
    }
}

/// A builder for [`WirelessMetadata`](crate::types::WirelessMetadata).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct WirelessMetadataBuilder {
    pub(crate) lo_ra_wan: std::option::Option<crate::types::LoRaWanSendDataToDevice>,
    pub(crate) sidewalk: std::option::Option<crate::types::SidewalkSendDataToDevice>,
}
impl WirelessMetadataBuilder {
    /// <p>LoRaWAN device info.</p>
    pub fn lo_ra_wan(mut self, input: crate::types::LoRaWanSendDataToDevice) -> Self {
        self.lo_ra_wan = Some(input);
        self
    }
    /// <p>LoRaWAN device info.</p>
    pub fn set_lo_ra_wan(
        mut self,
        input: std::option::Option<crate::types::LoRaWanSendDataToDevice>,
    ) -> Self {
        self.lo_ra_wan = input;
        self
    }
    /// <p>The Sidewalk account credentials.</p>
    pub fn sidewalk(mut self, input: crate::types::SidewalkSendDataToDevice) -> Self {
        self.sidewalk = Some(input);
        self
    }
    /// <p>The Sidewalk account credentials.</p>
    pub fn set_sidewalk(
        mut self,
        input: std::option::Option<crate::types::SidewalkSendDataToDevice>,
    ) -> Self {
        self.sidewalk = input;
        self
    }
    /// Consumes the builder and constructs a [`WirelessMetadata`](crate::types::WirelessMetadata).
    pub fn build(self) -> crate::types::WirelessMetadata {
        crate::types::WirelessMetadata {
            lo_ra_wan: self.lo_ra_wan,
            sidewalk: self.sidewalk,
        }
    }
}
