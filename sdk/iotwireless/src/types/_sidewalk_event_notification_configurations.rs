// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> <code>SidewalkEventNotificationConfigurations</code> object, which is the event configuration object for Sidewalk-related event topics.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SidewalkEventNotificationConfigurations {
    /// <p>Denotes whether the Amazon ID event topic is enabled or disabled.</p>
    #[doc(hidden)]
    pub amazon_id_event_topic: std::option::Option<crate::types::EventNotificationTopicStatus>,
}
impl SidewalkEventNotificationConfigurations {
    /// <p>Denotes whether the Amazon ID event topic is enabled or disabled.</p>
    pub fn amazon_id_event_topic(
        &self,
    ) -> std::option::Option<&crate::types::EventNotificationTopicStatus> {
        self.amazon_id_event_topic.as_ref()
    }
}
impl SidewalkEventNotificationConfigurations {
    /// Creates a new builder-style object to manufacture [`SidewalkEventNotificationConfigurations`](crate::types::SidewalkEventNotificationConfigurations).
    pub fn builder() -> crate::types::builders::SidewalkEventNotificationConfigurationsBuilder {
        crate::types::builders::SidewalkEventNotificationConfigurationsBuilder::default()
    }
}

/// A builder for [`SidewalkEventNotificationConfigurations`](crate::types::SidewalkEventNotificationConfigurations).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SidewalkEventNotificationConfigurationsBuilder {
    pub(crate) amazon_id_event_topic:
        std::option::Option<crate::types::EventNotificationTopicStatus>,
}
impl SidewalkEventNotificationConfigurationsBuilder {
    /// <p>Denotes whether the Amazon ID event topic is enabled or disabled.</p>
    pub fn amazon_id_event_topic(
        mut self,
        input: crate::types::EventNotificationTopicStatus,
    ) -> Self {
        self.amazon_id_event_topic = Some(input);
        self
    }
    /// <p>Denotes whether the Amazon ID event topic is enabled or disabled.</p>
    pub fn set_amazon_id_event_topic(
        mut self,
        input: std::option::Option<crate::types::EventNotificationTopicStatus>,
    ) -> Self {
        self.amazon_id_event_topic = input;
        self
    }
    /// Consumes the builder and constructs a [`SidewalkEventNotificationConfigurations`](crate::types::SidewalkEventNotificationConfigurations).
    pub fn build(self) -> crate::types::SidewalkEventNotificationConfigurations {
        crate::types::SidewalkEventNotificationConfigurations {
            amazon_id_event_topic: self.amazon_id_event_topic,
        }
    }
}
