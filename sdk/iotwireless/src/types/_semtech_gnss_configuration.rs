// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the Semtech GNSS solver configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SemtechGnssConfiguration {
    /// <p>The status indicating whether the solver is enabled.</p>
    pub status: crate::types::PositionConfigurationStatus,
    /// <p>Whether forward error correction is enabled.</p>
    pub fec: crate::types::PositionConfigurationFec,
}
impl SemtechGnssConfiguration {
    /// <p>The status indicating whether the solver is enabled.</p>
    pub fn status(&self) -> &crate::types::PositionConfigurationStatus {
        &self.status
    }
    /// <p>Whether forward error correction is enabled.</p>
    pub fn fec(&self) -> &crate::types::PositionConfigurationFec {
        &self.fec
    }
}
impl SemtechGnssConfiguration {
    /// Creates a new builder-style object to manufacture [`SemtechGnssConfiguration`](crate::types::SemtechGnssConfiguration).
    pub fn builder() -> crate::types::builders::SemtechGnssConfigurationBuilder {
        crate::types::builders::SemtechGnssConfigurationBuilder::default()
    }
}

/// A builder for [`SemtechGnssConfiguration`](crate::types::SemtechGnssConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SemtechGnssConfigurationBuilder {
    pub(crate) status: ::std::option::Option<crate::types::PositionConfigurationStatus>,
    pub(crate) fec: ::std::option::Option<crate::types::PositionConfigurationFec>,
}
impl SemtechGnssConfigurationBuilder {
    /// <p>The status indicating whether the solver is enabled.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::PositionConfigurationStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status indicating whether the solver is enabled.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::PositionConfigurationStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status indicating whether the solver is enabled.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::PositionConfigurationStatus> {
        &self.status
    }
    /// <p>Whether forward error correction is enabled.</p>
    /// This field is required.
    pub fn fec(mut self, input: crate::types::PositionConfigurationFec) -> Self {
        self.fec = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether forward error correction is enabled.</p>
    pub fn set_fec(mut self, input: ::std::option::Option<crate::types::PositionConfigurationFec>) -> Self {
        self.fec = input;
        self
    }
    /// <p>Whether forward error correction is enabled.</p>
    pub fn get_fec(&self) -> &::std::option::Option<crate::types::PositionConfigurationFec> {
        &self.fec
    }
    /// Consumes the builder and constructs a [`SemtechGnssConfiguration`](crate::types::SemtechGnssConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`status`](crate::types::builders::SemtechGnssConfigurationBuilder::status)
    /// - [`fec`](crate::types::builders::SemtechGnssConfigurationBuilder::fec)
    pub fn build(self) -> ::std::result::Result<crate::types::SemtechGnssConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SemtechGnssConfiguration {
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building SemtechGnssConfiguration",
                )
            })?,
            fec: self.fec.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "fec",
                    "fec was not specified but it is required when building SemtechGnssConfiguration",
                )
            })?,
        })
    }
}
