// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A multicast group that is associated with a FUOTA task.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MulticastGroupByFuotaTask {
    /// <p>The ID of the multicast group.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
}
impl MulticastGroupByFuotaTask {
    /// <p>The ID of the multicast group.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
}
impl MulticastGroupByFuotaTask {
    /// Creates a new builder-style object to manufacture [`MulticastGroupByFuotaTask`](crate::types::MulticastGroupByFuotaTask).
    pub fn builder() -> crate::types::builders::MulticastGroupByFuotaTaskBuilder {
        crate::types::builders::MulticastGroupByFuotaTaskBuilder::default()
    }
}

/// A builder for [`MulticastGroupByFuotaTask`](crate::types::MulticastGroupByFuotaTask).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MulticastGroupByFuotaTaskBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
}
impl MulticastGroupByFuotaTaskBuilder {
    /// <p>The ID of the multicast group.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of the multicast group.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Consumes the builder and constructs a [`MulticastGroupByFuotaTask`](crate::types::MulticastGroupByFuotaTask).
    pub fn build(self) -> crate::types::MulticastGroupByFuotaTask {
        crate::types::MulticastGroupByFuotaTask { id: self.id }
    }
}
