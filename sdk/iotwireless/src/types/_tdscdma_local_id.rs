// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>TD-SCDMA local identification (local Id) information.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TdscdmaLocalId {
    /// <p>TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).</p>
    pub uarfcn: i32,
    /// <p>Cell parameters for TD-SCDMA.</p>
    pub cell_params: i32,
}
impl TdscdmaLocalId {
    /// <p>TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).</p>
    pub fn uarfcn(&self) -> i32 {
        self.uarfcn
    }
    /// <p>Cell parameters for TD-SCDMA.</p>
    pub fn cell_params(&self) -> i32 {
        self.cell_params
    }
}
impl TdscdmaLocalId {
    /// Creates a new builder-style object to manufacture [`TdscdmaLocalId`](crate::types::TdscdmaLocalId).
    pub fn builder() -> crate::types::builders::TdscdmaLocalIdBuilder {
        crate::types::builders::TdscdmaLocalIdBuilder::default()
    }
}

/// A builder for [`TdscdmaLocalId`](crate::types::TdscdmaLocalId).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TdscdmaLocalIdBuilder {
    pub(crate) uarfcn: ::std::option::Option<i32>,
    pub(crate) cell_params: ::std::option::Option<i32>,
}
impl TdscdmaLocalIdBuilder {
    /// <p>TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).</p>
    /// This field is required.
    pub fn uarfcn(mut self, input: i32) -> Self {
        self.uarfcn = ::std::option::Option::Some(input);
        self
    }
    /// <p>TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).</p>
    pub fn set_uarfcn(mut self, input: ::std::option::Option<i32>) -> Self {
        self.uarfcn = input;
        self
    }
    /// <p>TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).</p>
    pub fn get_uarfcn(&self) -> &::std::option::Option<i32> {
        &self.uarfcn
    }
    /// <p>Cell parameters for TD-SCDMA.</p>
    /// This field is required.
    pub fn cell_params(mut self, input: i32) -> Self {
        self.cell_params = ::std::option::Option::Some(input);
        self
    }
    /// <p>Cell parameters for TD-SCDMA.</p>
    pub fn set_cell_params(mut self, input: ::std::option::Option<i32>) -> Self {
        self.cell_params = input;
        self
    }
    /// <p>Cell parameters for TD-SCDMA.</p>
    pub fn get_cell_params(&self) -> &::std::option::Option<i32> {
        &self.cell_params
    }
    /// Consumes the builder and constructs a [`TdscdmaLocalId`](crate::types::TdscdmaLocalId).
    /// This method will fail if any of the following fields are not set:
    /// - [`uarfcn`](crate::types::builders::TdscdmaLocalIdBuilder::uarfcn)
    /// - [`cell_params`](crate::types::builders::TdscdmaLocalIdBuilder::cell_params)
    pub fn build(self) -> ::std::result::Result<crate::types::TdscdmaLocalId, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TdscdmaLocalId {
            uarfcn: self.uarfcn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "uarfcn",
                    "uarfcn was not specified but it is required when building TdscdmaLocalId",
                )
            })?,
            cell_params: self.cell_params.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "cell_params",
                    "cell_params was not specified but it is required when building TdscdmaLocalId",
                )
            })?,
        })
    }
}
