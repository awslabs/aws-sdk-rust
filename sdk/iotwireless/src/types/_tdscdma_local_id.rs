// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>TD-SCDMA local identification (local Id) information.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TdscdmaLocalId {
    /// <p>TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).</p>
    #[doc(hidden)]
    pub uarfcn: std::option::Option<i32>,
    /// <p>Cell parameters for TD-SCDMA.</p>
    #[doc(hidden)]
    pub cell_params: std::option::Option<i32>,
}
impl TdscdmaLocalId {
    /// <p>TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).</p>
    pub fn uarfcn(&self) -> std::option::Option<i32> {
        self.uarfcn
    }
    /// <p>Cell parameters for TD-SCDMA.</p>
    pub fn cell_params(&self) -> std::option::Option<i32> {
        self.cell_params
    }
}
impl TdscdmaLocalId {
    /// Creates a new builder-style object to manufacture [`TdscdmaLocalId`](crate::types::TdscdmaLocalId).
    pub fn builder() -> crate::types::builders::TdscdmaLocalIdBuilder {
        crate::types::builders::TdscdmaLocalIdBuilder::default()
    }
}

/// A builder for [`TdscdmaLocalId`](crate::types::TdscdmaLocalId).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TdscdmaLocalIdBuilder {
    pub(crate) uarfcn: std::option::Option<i32>,
    pub(crate) cell_params: std::option::Option<i32>,
}
impl TdscdmaLocalIdBuilder {
    /// <p>TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).</p>
    pub fn uarfcn(mut self, input: i32) -> Self {
        self.uarfcn = Some(input);
        self
    }
    /// <p>TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).</p>
    pub fn set_uarfcn(mut self, input: std::option::Option<i32>) -> Self {
        self.uarfcn = input;
        self
    }
    /// <p>Cell parameters for TD-SCDMA.</p>
    pub fn cell_params(mut self, input: i32) -> Self {
        self.cell_params = Some(input);
        self
    }
    /// <p>Cell parameters for TD-SCDMA.</p>
    pub fn set_cell_params(mut self, input: std::option::Option<i32>) -> Self {
        self.cell_params = input;
        self
    }
    /// Consumes the builder and constructs a [`TdscdmaLocalId`](crate::types::TdscdmaLocalId).
    pub fn build(self) -> crate::types::TdscdmaLocalId {
        crate::types::TdscdmaLocalId {
            uarfcn: self.uarfcn,
            cell_params: self.cell_params,
        }
    }
}
