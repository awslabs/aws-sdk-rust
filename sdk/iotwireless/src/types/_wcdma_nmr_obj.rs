// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Network Measurement Reports.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct WcdmaNmrObj {
    /// <p>WCDMA UTRA Absolute RF Channel Number downlink.</p>
    #[doc(hidden)]
    pub uarfcndl: std::option::Option<i32>,
    /// <p>Primary Scrambling Code.</p>
    #[doc(hidden)]
    pub psc: std::option::Option<i32>,
    /// <p>UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.</p>
    #[doc(hidden)]
    pub utran_cid: std::option::Option<i32>,
    /// <p>Received Signal Code Power (signal power) (dBm)</p>
    #[doc(hidden)]
    pub rscp: std::option::Option<i32>,
    /// <p>Path loss, or path attenuation, is the reduction in power density of an electromagnetic wave as it propagates through space.</p>
    #[doc(hidden)]
    pub path_loss: std::option::Option<i32>,
}
impl WcdmaNmrObj {
    /// <p>WCDMA UTRA Absolute RF Channel Number downlink.</p>
    pub fn uarfcndl(&self) -> std::option::Option<i32> {
        self.uarfcndl
    }
    /// <p>Primary Scrambling Code.</p>
    pub fn psc(&self) -> std::option::Option<i32> {
        self.psc
    }
    /// <p>UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.</p>
    pub fn utran_cid(&self) -> std::option::Option<i32> {
        self.utran_cid
    }
    /// <p>Received Signal Code Power (signal power) (dBm)</p>
    pub fn rscp(&self) -> std::option::Option<i32> {
        self.rscp
    }
    /// <p>Path loss, or path attenuation, is the reduction in power density of an electromagnetic wave as it propagates through space.</p>
    pub fn path_loss(&self) -> std::option::Option<i32> {
        self.path_loss
    }
}
impl WcdmaNmrObj {
    /// Creates a new builder-style object to manufacture [`WcdmaNmrObj`](crate::types::WcdmaNmrObj).
    pub fn builder() -> crate::types::builders::WcdmaNmrObjBuilder {
        crate::types::builders::WcdmaNmrObjBuilder::default()
    }
}

/// A builder for [`WcdmaNmrObj`](crate::types::WcdmaNmrObj).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct WcdmaNmrObjBuilder {
    pub(crate) uarfcndl: std::option::Option<i32>,
    pub(crate) psc: std::option::Option<i32>,
    pub(crate) utran_cid: std::option::Option<i32>,
    pub(crate) rscp: std::option::Option<i32>,
    pub(crate) path_loss: std::option::Option<i32>,
}
impl WcdmaNmrObjBuilder {
    /// <p>WCDMA UTRA Absolute RF Channel Number downlink.</p>
    pub fn uarfcndl(mut self, input: i32) -> Self {
        self.uarfcndl = Some(input);
        self
    }
    /// <p>WCDMA UTRA Absolute RF Channel Number downlink.</p>
    pub fn set_uarfcndl(mut self, input: std::option::Option<i32>) -> Self {
        self.uarfcndl = input;
        self
    }
    /// <p>Primary Scrambling Code.</p>
    pub fn psc(mut self, input: i32) -> Self {
        self.psc = Some(input);
        self
    }
    /// <p>Primary Scrambling Code.</p>
    pub fn set_psc(mut self, input: std::option::Option<i32>) -> Self {
        self.psc = input;
        self
    }
    /// <p>UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.</p>
    pub fn utran_cid(mut self, input: i32) -> Self {
        self.utran_cid = Some(input);
        self
    }
    /// <p>UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.</p>
    pub fn set_utran_cid(mut self, input: std::option::Option<i32>) -> Self {
        self.utran_cid = input;
        self
    }
    /// <p>Received Signal Code Power (signal power) (dBm)</p>
    pub fn rscp(mut self, input: i32) -> Self {
        self.rscp = Some(input);
        self
    }
    /// <p>Received Signal Code Power (signal power) (dBm)</p>
    pub fn set_rscp(mut self, input: std::option::Option<i32>) -> Self {
        self.rscp = input;
        self
    }
    /// <p>Path loss, or path attenuation, is the reduction in power density of an electromagnetic wave as it propagates through space.</p>
    pub fn path_loss(mut self, input: i32) -> Self {
        self.path_loss = Some(input);
        self
    }
    /// <p>Path loss, or path attenuation, is the reduction in power density of an electromagnetic wave as it propagates through space.</p>
    pub fn set_path_loss(mut self, input: std::option::Option<i32>) -> Self {
        self.path_loss = input;
        self
    }
    /// Consumes the builder and constructs a [`WcdmaNmrObj`](crate::types::WcdmaNmrObj).
    pub fn build(self) -> crate::types::WcdmaNmrObj {
        crate::types::WcdmaNmrObj {
            uarfcndl: self.uarfcndl,
            psc: self.psc,
            utran_cid: self.utran_cid,
            rscp: self.rscp,
            path_loss: self.path_loss,
        }
    }
}
