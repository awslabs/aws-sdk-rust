// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Session keys for ABP v1.1</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SessionKeysAbpV10X {
    /// <p>The NwkSKey value.</p>
    #[doc(hidden)]
    pub nwk_s_key: std::option::Option<std::string::String>,
    /// <p>The AppSKey value.</p>
    #[doc(hidden)]
    pub app_s_key: std::option::Option<std::string::String>,
}
impl SessionKeysAbpV10X {
    /// <p>The NwkSKey value.</p>
    pub fn nwk_s_key(&self) -> std::option::Option<&str> {
        self.nwk_s_key.as_deref()
    }
    /// <p>The AppSKey value.</p>
    pub fn app_s_key(&self) -> std::option::Option<&str> {
        self.app_s_key.as_deref()
    }
}
impl SessionKeysAbpV10X {
    /// Creates a new builder-style object to manufacture [`SessionKeysAbpV10X`](crate::types::SessionKeysAbpV10X).
    pub fn builder() -> crate::types::builders::SessionKeysAbpV10XBuilder {
        crate::types::builders::SessionKeysAbpV10XBuilder::default()
    }
}

/// A builder for [`SessionKeysAbpV10X`](crate::types::SessionKeysAbpV10X).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SessionKeysAbpV10XBuilder {
    pub(crate) nwk_s_key: std::option::Option<std::string::String>,
    pub(crate) app_s_key: std::option::Option<std::string::String>,
}
impl SessionKeysAbpV10XBuilder {
    /// <p>The NwkSKey value.</p>
    pub fn nwk_s_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.nwk_s_key = Some(input.into());
        self
    }
    /// <p>The NwkSKey value.</p>
    pub fn set_nwk_s_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.nwk_s_key = input;
        self
    }
    /// <p>The AppSKey value.</p>
    pub fn app_s_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.app_s_key = Some(input.into());
        self
    }
    /// <p>The AppSKey value.</p>
    pub fn set_app_s_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.app_s_key = input;
        self
    }
    /// Consumes the builder and constructs a [`SessionKeysAbpV10X`](crate::types::SessionKeysAbpV10X).
    pub fn build(self) -> crate::types::SessionKeysAbpV10X {
        crate::types::SessionKeysAbpV10X {
            nwk_s_key: self.nwk_s_key,
            app_s_key: self.app_s_key,
        }
    }
}
