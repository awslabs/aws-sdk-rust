// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The metadata information of the LoRaWAN multicast group.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LoRaWanMulticastMetadata {
    /// <p>The Fport value.</p>
    #[doc(hidden)]
    pub f_port: std::option::Option<i32>,
}
impl LoRaWanMulticastMetadata {
    /// <p>The Fport value.</p>
    pub fn f_port(&self) -> std::option::Option<i32> {
        self.f_port
    }
}
impl LoRaWanMulticastMetadata {
    /// Creates a new builder-style object to manufacture [`LoRaWanMulticastMetadata`](crate::types::LoRaWanMulticastMetadata).
    pub fn builder() -> crate::types::builders::LoRaWanMulticastMetadataBuilder {
        crate::types::builders::LoRaWanMulticastMetadataBuilder::default()
    }
}

/// A builder for [`LoRaWanMulticastMetadata`](crate::types::LoRaWanMulticastMetadata).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LoRaWanMulticastMetadataBuilder {
    pub(crate) f_port: std::option::Option<i32>,
}
impl LoRaWanMulticastMetadataBuilder {
    /// <p>The Fport value.</p>
    pub fn f_port(mut self, input: i32) -> Self {
        self.f_port = Some(input);
        self
    }
    /// <p>The Fport value.</p>
    pub fn set_f_port(mut self, input: std::option::Option<i32>) -> Self {
        self.f_port = input;
        self
    }
    /// Consumes the builder and constructs a [`LoRaWanMulticastMetadata`](crate::types::LoRaWanMulticastMetadata).
    pub fn build(self) -> crate::types::LoRaWanMulticastMetadata {
        crate::types::LoRaWanMulticastMetadata {
            f_port: self.f_port,
        }
    }
}
