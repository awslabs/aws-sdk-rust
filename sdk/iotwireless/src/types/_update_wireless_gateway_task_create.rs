// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>UpdateWirelessGatewayTaskCreate object.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateWirelessGatewayTaskCreate {
    /// <p>The link to the S3 bucket.</p>
    #[doc(hidden)]
    pub update_data_source: std::option::Option<std::string::String>,
    /// <p>The IAM role used to read data from the S3 bucket.</p>
    #[doc(hidden)]
    pub update_data_role: std::option::Option<std::string::String>,
    /// <p>The properties that relate to the LoRaWAN wireless gateway.</p>
    #[doc(hidden)]
    pub lo_ra_wan: std::option::Option<crate::types::LoRaWanUpdateGatewayTaskCreate>,
}
impl UpdateWirelessGatewayTaskCreate {
    /// <p>The link to the S3 bucket.</p>
    pub fn update_data_source(&self) -> std::option::Option<&str> {
        self.update_data_source.as_deref()
    }
    /// <p>The IAM role used to read data from the S3 bucket.</p>
    pub fn update_data_role(&self) -> std::option::Option<&str> {
        self.update_data_role.as_deref()
    }
    /// <p>The properties that relate to the LoRaWAN wireless gateway.</p>
    pub fn lo_ra_wan(&self) -> std::option::Option<&crate::types::LoRaWanUpdateGatewayTaskCreate> {
        self.lo_ra_wan.as_ref()
    }
}
impl UpdateWirelessGatewayTaskCreate {
    /// Creates a new builder-style object to manufacture [`UpdateWirelessGatewayTaskCreate`](crate::types::UpdateWirelessGatewayTaskCreate).
    pub fn builder() -> crate::types::builders::UpdateWirelessGatewayTaskCreateBuilder {
        crate::types::builders::UpdateWirelessGatewayTaskCreateBuilder::default()
    }
}

/// A builder for [`UpdateWirelessGatewayTaskCreate`](crate::types::UpdateWirelessGatewayTaskCreate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateWirelessGatewayTaskCreateBuilder {
    pub(crate) update_data_source: std::option::Option<std::string::String>,
    pub(crate) update_data_role: std::option::Option<std::string::String>,
    pub(crate) lo_ra_wan: std::option::Option<crate::types::LoRaWanUpdateGatewayTaskCreate>,
}
impl UpdateWirelessGatewayTaskCreateBuilder {
    /// <p>The link to the S3 bucket.</p>
    pub fn update_data_source(mut self, input: impl Into<std::string::String>) -> Self {
        self.update_data_source = Some(input.into());
        self
    }
    /// <p>The link to the S3 bucket.</p>
    pub fn set_update_data_source(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.update_data_source = input;
        self
    }
    /// <p>The IAM role used to read data from the S3 bucket.</p>
    pub fn update_data_role(mut self, input: impl Into<std::string::String>) -> Self {
        self.update_data_role = Some(input.into());
        self
    }
    /// <p>The IAM role used to read data from the S3 bucket.</p>
    pub fn set_update_data_role(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.update_data_role = input;
        self
    }
    /// <p>The properties that relate to the LoRaWAN wireless gateway.</p>
    pub fn lo_ra_wan(mut self, input: crate::types::LoRaWanUpdateGatewayTaskCreate) -> Self {
        self.lo_ra_wan = Some(input);
        self
    }
    /// <p>The properties that relate to the LoRaWAN wireless gateway.</p>
    pub fn set_lo_ra_wan(
        mut self,
        input: std::option::Option<crate::types::LoRaWanUpdateGatewayTaskCreate>,
    ) -> Self {
        self.lo_ra_wan = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateWirelessGatewayTaskCreate`](crate::types::UpdateWirelessGatewayTaskCreate).
    pub fn build(self) -> crate::types::UpdateWirelessGatewayTaskCreate {
        crate::types::UpdateWirelessGatewayTaskCreate {
            update_data_source: self.update_data_source,
            update_data_role: self.update_data_role,
            lo_ra_wan: self.lo_ra_wan,
        }
    }
}
