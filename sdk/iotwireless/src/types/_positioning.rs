// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The FPorts for the position information.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Positioning {
    /// <p>The Fport value.</p>
    #[doc(hidden)]
    pub clock_sync: std::option::Option<i32>,
    /// <p>The Fport value.</p>
    #[doc(hidden)]
    pub stream: std::option::Option<i32>,
    /// <p>The Fport value.</p>
    #[doc(hidden)]
    pub gnss: std::option::Option<i32>,
}
impl Positioning {
    /// <p>The Fport value.</p>
    pub fn clock_sync(&self) -> std::option::Option<i32> {
        self.clock_sync
    }
    /// <p>The Fport value.</p>
    pub fn stream(&self) -> std::option::Option<i32> {
        self.stream
    }
    /// <p>The Fport value.</p>
    pub fn gnss(&self) -> std::option::Option<i32> {
        self.gnss
    }
}
impl Positioning {
    /// Creates a new builder-style object to manufacture [`Positioning`](crate::types::Positioning).
    pub fn builder() -> crate::types::builders::PositioningBuilder {
        crate::types::builders::PositioningBuilder::default()
    }
}

/// A builder for [`Positioning`](crate::types::Positioning).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PositioningBuilder {
    pub(crate) clock_sync: std::option::Option<i32>,
    pub(crate) stream: std::option::Option<i32>,
    pub(crate) gnss: std::option::Option<i32>,
}
impl PositioningBuilder {
    /// <p>The Fport value.</p>
    pub fn clock_sync(mut self, input: i32) -> Self {
        self.clock_sync = Some(input);
        self
    }
    /// <p>The Fport value.</p>
    pub fn set_clock_sync(mut self, input: std::option::Option<i32>) -> Self {
        self.clock_sync = input;
        self
    }
    /// <p>The Fport value.</p>
    pub fn stream(mut self, input: i32) -> Self {
        self.stream = Some(input);
        self
    }
    /// <p>The Fport value.</p>
    pub fn set_stream(mut self, input: std::option::Option<i32>) -> Self {
        self.stream = input;
        self
    }
    /// <p>The Fport value.</p>
    pub fn gnss(mut self, input: i32) -> Self {
        self.gnss = Some(input);
        self
    }
    /// <p>The Fport value.</p>
    pub fn set_gnss(mut self, input: std::option::Option<i32>) -> Self {
        self.gnss = input;
        self
    }
    /// Consumes the builder and constructs a [`Positioning`](crate::types::Positioning).
    pub fn build(self) -> crate::types::Positioning {
        crate::types::Positioning {
            clock_sync: self.clock_sync,
            stream: self.stream,
            gnss: self.gnss,
        }
    }
}
