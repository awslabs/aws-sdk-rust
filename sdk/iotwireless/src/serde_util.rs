// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}

pub(crate) fn wireless_device_log_option_correct_errors(
    mut builder: crate::types::builders::WirelessDeviceLogOptionBuilder,
) -> crate::types::builders::WirelessDeviceLogOptionBuilder {
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::WirelessDeviceType>().ok()
    }
    if builder.log_level.is_none() {
        builder.log_level = "no value was set".parse::<crate::types::LogLevel>().ok()
    }
    builder
}

pub(crate) fn wireless_gateway_log_option_correct_errors(
    mut builder: crate::types::builders::WirelessGatewayLogOptionBuilder,
) -> crate::types::builders::WirelessGatewayLogOptionBuilder {
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::WirelessGatewayType>().ok()
    }
    if builder.log_level.is_none() {
        builder.log_level = "no value was set".parse::<crate::types::LogLevel>().ok()
    }
    builder
}

pub(crate) fn certificate_list_correct_errors(
    mut builder: crate::types::builders::CertificateListBuilder,
) -> crate::types::builders::CertificateListBuilder {
    if builder.signing_alg.is_none() {
        builder.signing_alg = "no value was set".parse::<crate::types::SigningAlg>().ok()
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}

pub(crate) fn dak_certificate_metadata_correct_errors(
    mut builder: crate::types::builders::DakCertificateMetadataBuilder,
) -> crate::types::builders::DakCertificateMetadataBuilder {
    if builder.certificate_id.is_none() {
        builder.certificate_id = Some(Default::default())
    }
    builder
}

pub(crate) fn participating_gateways_correct_errors(
    mut builder: crate::types::builders::ParticipatingGatewaysBuilder,
) -> crate::types::builders::ParticipatingGatewaysBuilder {
    if builder.downlink_mode.is_none() {
        builder.downlink_mode = "no value was set".parse::<crate::types::DownlinkMode>().ok()
    }
    if builder.gateway_list.is_none() {
        builder.gateway_list = Some(Default::default())
    }
    if builder.transmission_interval.is_none() {
        builder.transmission_interval = Some(Default::default())
    }
    builder
}

pub(crate) fn wireless_device_event_log_option_correct_errors(
    mut builder: crate::types::builders::WirelessDeviceEventLogOptionBuilder,
) -> crate::types::builders::WirelessDeviceEventLogOptionBuilder {
    if builder.event.is_none() {
        builder.event = "no value was set".parse::<crate::types::WirelessDeviceEvent>().ok()
    }
    if builder.log_level.is_none() {
        builder.log_level = "no value was set".parse::<crate::types::LogLevel>().ok()
    }
    builder
}

pub(crate) fn wireless_gateway_event_log_option_correct_errors(
    mut builder: crate::types::builders::WirelessGatewayEventLogOptionBuilder,
) -> crate::types::builders::WirelessGatewayEventLogOptionBuilder {
    if builder.event.is_none() {
        builder.event = "no value was set".parse::<crate::types::WirelessGatewayEvent>().ok()
    }
    if builder.log_level.is_none() {
        builder.log_level = "no value was set".parse::<crate::types::LogLevel>().ok()
    }
    builder
}

pub(crate) fn gateway_list_item_correct_errors(
    mut builder: crate::types::builders::GatewayListItemBuilder,
) -> crate::types::builders::GatewayListItemBuilder {
    if builder.gateway_id.is_none() {
        builder.gateway_id = Some(Default::default())
    }
    if builder.downlink_frequency.is_none() {
        builder.downlink_frequency = Some(Default::default())
    }
    builder
}
