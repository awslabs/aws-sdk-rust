// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_lo_ra_wan_update_device(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::LoRaWanUpdateDevice,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.device_profile_id {
        object.key("DeviceProfileId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.service_profile_id {
        object.key("ServiceProfileId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.abp_v1_1 {
        #[allow(unused_mut)]
        let mut object_4 = object.key("AbpV1_1").start_object();
        crate::protocol_serde::shape_update_abp_v1_1::ser_update_abp_v1_1(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.abp_v1_0_x {
        #[allow(unused_mut)]
        let mut object_6 = object.key("AbpV1_0_x").start_object();
        crate::protocol_serde::shape_update_abp_v1_0_x::ser_update_abp_v1_0_x(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.f_ports {
        #[allow(unused_mut)]
        let mut object_8 = object.key("FPorts").start_object();
        crate::protocol_serde::shape_update_f_ports::ser_update_f_ports(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
