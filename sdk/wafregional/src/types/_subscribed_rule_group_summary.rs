// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <note>
/// <p>This is <b>AWS WAF Classic</b> documentation. For more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS WAF Classic</a> in the developer guide.</p>
/// <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
/// </note>
/// <p>A summary of the rule groups you are subscribed to.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SubscribedRuleGroupSummary {
    /// <p>A unique identifier for a <code>RuleGroup</code>.</p>
    #[doc(hidden)]
    pub rule_group_id: std::option::Option<std::string::String>,
    /// <p>A friendly name or description of the <code>RuleGroup</code>. You can't change the name of a <code>RuleGroup</code> after you create it.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>A friendly name or description for the metrics for this <code>RuleGroup</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the <code>RuleGroup</code>.</p>
    #[doc(hidden)]
    pub metric_name: std::option::Option<std::string::String>,
}
impl SubscribedRuleGroupSummary {
    /// <p>A unique identifier for a <code>RuleGroup</code>.</p>
    pub fn rule_group_id(&self) -> std::option::Option<&str> {
        self.rule_group_id.as_deref()
    }
    /// <p>A friendly name or description of the <code>RuleGroup</code>. You can't change the name of a <code>RuleGroup</code> after you create it.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>A friendly name or description for the metrics for this <code>RuleGroup</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the <code>RuleGroup</code>.</p>
    pub fn metric_name(&self) -> std::option::Option<&str> {
        self.metric_name.as_deref()
    }
}
impl SubscribedRuleGroupSummary {
    /// Creates a new builder-style object to manufacture [`SubscribedRuleGroupSummary`](crate::types::SubscribedRuleGroupSummary).
    pub fn builder() -> crate::types::builders::SubscribedRuleGroupSummaryBuilder {
        crate::types::builders::SubscribedRuleGroupSummaryBuilder::default()
    }
}

/// A builder for [`SubscribedRuleGroupSummary`](crate::types::SubscribedRuleGroupSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SubscribedRuleGroupSummaryBuilder {
    pub(crate) rule_group_id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) metric_name: std::option::Option<std::string::String>,
}
impl SubscribedRuleGroupSummaryBuilder {
    /// <p>A unique identifier for a <code>RuleGroup</code>.</p>
    pub fn rule_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.rule_group_id = Some(input.into());
        self
    }
    /// <p>A unique identifier for a <code>RuleGroup</code>.</p>
    pub fn set_rule_group_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.rule_group_id = input;
        self
    }
    /// <p>A friendly name or description of the <code>RuleGroup</code>. You can't change the name of a <code>RuleGroup</code> after you create it.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>A friendly name or description of the <code>RuleGroup</code>. You can't change the name of a <code>RuleGroup</code> after you create it.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>A friendly name or description for the metrics for this <code>RuleGroup</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the <code>RuleGroup</code>.</p>
    pub fn metric_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.metric_name = Some(input.into());
        self
    }
    /// <p>A friendly name or description for the metrics for this <code>RuleGroup</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the <code>RuleGroup</code>.</p>
    pub fn set_metric_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.metric_name = input;
        self
    }
    /// Consumes the builder and constructs a [`SubscribedRuleGroupSummary`](crate::types::SubscribedRuleGroupSummary).
    pub fn build(self) -> crate::types::SubscribedRuleGroupSummary {
        crate::types::SubscribedRuleGroupSummary {
            rule_group_id: self.rule_group_id,
            name: self.name,
            metric_name: self.metric_name,
        }
    }
}
