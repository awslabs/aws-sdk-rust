// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <note>
/// <p>This is <b>AWS WAF Classic</b> documentation. For more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS WAF Classic</a> in the developer guide.</p>
/// <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
/// </note>
/// <p>In an <code>UpdateRegexPatternSet</code> request, <code>RegexPatternSetUpdate</code> specifies whether to insert or delete a <code>RegexPatternString</code> and includes the settings for the <code>RegexPatternString</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RegexPatternSetUpdate {
    /// <p>Specifies whether to insert or delete a <code>RegexPatternString</code>.</p>
    #[doc(hidden)]
    pub action: std::option::Option<crate::types::ChangeAction>,
    /// <p>Specifies the regular expression (regex) pattern that you want AWS WAF to search for, such as <code>B[a@]dB[o0]t</code>.</p>
    #[doc(hidden)]
    pub regex_pattern_string: std::option::Option<std::string::String>,
}
impl RegexPatternSetUpdate {
    /// <p>Specifies whether to insert or delete a <code>RegexPatternString</code>.</p>
    pub fn action(&self) -> std::option::Option<&crate::types::ChangeAction> {
        self.action.as_ref()
    }
    /// <p>Specifies the regular expression (regex) pattern that you want AWS WAF to search for, such as <code>B[a@]dB[o0]t</code>.</p>
    pub fn regex_pattern_string(&self) -> std::option::Option<&str> {
        self.regex_pattern_string.as_deref()
    }
}
impl RegexPatternSetUpdate {
    /// Creates a new builder-style object to manufacture [`RegexPatternSetUpdate`](crate::types::RegexPatternSetUpdate).
    pub fn builder() -> crate::types::builders::RegexPatternSetUpdateBuilder {
        crate::types::builders::RegexPatternSetUpdateBuilder::default()
    }
}

/// A builder for [`RegexPatternSetUpdate`](crate::types::RegexPatternSetUpdate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RegexPatternSetUpdateBuilder {
    pub(crate) action: std::option::Option<crate::types::ChangeAction>,
    pub(crate) regex_pattern_string: std::option::Option<std::string::String>,
}
impl RegexPatternSetUpdateBuilder {
    /// <p>Specifies whether to insert or delete a <code>RegexPatternString</code>.</p>
    pub fn action(mut self, input: crate::types::ChangeAction) -> Self {
        self.action = Some(input);
        self
    }
    /// <p>Specifies whether to insert or delete a <code>RegexPatternString</code>.</p>
    pub fn set_action(mut self, input: std::option::Option<crate::types::ChangeAction>) -> Self {
        self.action = input;
        self
    }
    /// <p>Specifies the regular expression (regex) pattern that you want AWS WAF to search for, such as <code>B[a@]dB[o0]t</code>.</p>
    pub fn regex_pattern_string(mut self, input: impl Into<std::string::String>) -> Self {
        self.regex_pattern_string = Some(input.into());
        self
    }
    /// <p>Specifies the regular expression (regex) pattern that you want AWS WAF to search for, such as <code>B[a@]dB[o0]t</code>.</p>
    pub fn set_regex_pattern_string(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.regex_pattern_string = input;
        self
    }
    /// Consumes the builder and constructs a [`RegexPatternSetUpdate`](crate::types::RegexPatternSetUpdate).
    pub fn build(self) -> crate::types::RegexPatternSetUpdate {
        crate::types::RegexPatternSetUpdate {
            action: self.action,
            regex_pattern_string: self.regex_pattern_string,
        }
    }
}
