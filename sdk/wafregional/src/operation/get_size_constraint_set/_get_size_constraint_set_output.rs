// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetSizeConstraintSetOutput {
    /// <p>Information about the <code>SizeConstraintSet</code> that you specified in the <code>GetSizeConstraintSet</code> request. For more information, see the following topics:</p>
    /// <ul>
    /// <li> <p> <code>SizeConstraintSet</code>: Contains <code>SizeConstraintSetId</code>, <code>SizeConstraints</code>, and <code>Name</code> </p> </li>
    /// <li> <p> <code>SizeConstraints</code>: Contains an array of <code>SizeConstraint</code> objects. Each <code>SizeConstraint</code> object contains <code>FieldToMatch</code>, <code>TextTransformation</code>, <code>ComparisonOperator</code>, and <code>Size</code> </p> </li>
    /// <li> <p> <code>FieldToMatch</code>: Contains <code>Data</code> and <code>Type</code> </p> </li>
    /// </ul>
    #[doc(hidden)]
    pub size_constraint_set: std::option::Option<crate::types::SizeConstraintSet>,
    _request_id: Option<String>,
}
impl GetSizeConstraintSetOutput {
    /// <p>Information about the <code>SizeConstraintSet</code> that you specified in the <code>GetSizeConstraintSet</code> request. For more information, see the following topics:</p>
    /// <ul>
    /// <li> <p> <code>SizeConstraintSet</code>: Contains <code>SizeConstraintSetId</code>, <code>SizeConstraints</code>, and <code>Name</code> </p> </li>
    /// <li> <p> <code>SizeConstraints</code>: Contains an array of <code>SizeConstraint</code> objects. Each <code>SizeConstraint</code> object contains <code>FieldToMatch</code>, <code>TextTransformation</code>, <code>ComparisonOperator</code>, and <code>Size</code> </p> </li>
    /// <li> <p> <code>FieldToMatch</code>: Contains <code>Data</code> and <code>Type</code> </p> </li>
    /// </ul>
    pub fn size_constraint_set(&self) -> std::option::Option<&crate::types::SizeConstraintSet> {
        self.size_constraint_set.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetSizeConstraintSetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetSizeConstraintSetOutput {
    /// Creates a new builder-style object to manufacture [`GetSizeConstraintSetOutput`](crate::operation::get_size_constraint_set::GetSizeConstraintSetOutput).
    pub fn builder(
    ) -> crate::operation::get_size_constraint_set::builders::GetSizeConstraintSetOutputBuilder
    {
        crate::operation::get_size_constraint_set::builders::GetSizeConstraintSetOutputBuilder::default()
    }
}

/// A builder for [`GetSizeConstraintSetOutput`](crate::operation::get_size_constraint_set::GetSizeConstraintSetOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetSizeConstraintSetOutputBuilder {
    pub(crate) size_constraint_set: std::option::Option<crate::types::SizeConstraintSet>,
    _request_id: Option<String>,
}
impl GetSizeConstraintSetOutputBuilder {
    /// <p>Information about the <code>SizeConstraintSet</code> that you specified in the <code>GetSizeConstraintSet</code> request. For more information, see the following topics:</p>
    /// <ul>
    /// <li> <p> <code>SizeConstraintSet</code>: Contains <code>SizeConstraintSetId</code>, <code>SizeConstraints</code>, and <code>Name</code> </p> </li>
    /// <li> <p> <code>SizeConstraints</code>: Contains an array of <code>SizeConstraint</code> objects. Each <code>SizeConstraint</code> object contains <code>FieldToMatch</code>, <code>TextTransformation</code>, <code>ComparisonOperator</code>, and <code>Size</code> </p> </li>
    /// <li> <p> <code>FieldToMatch</code>: Contains <code>Data</code> and <code>Type</code> </p> </li>
    /// </ul>
    pub fn size_constraint_set(mut self, input: crate::types::SizeConstraintSet) -> Self {
        self.size_constraint_set = Some(input);
        self
    }
    /// <p>Information about the <code>SizeConstraintSet</code> that you specified in the <code>GetSizeConstraintSet</code> request. For more information, see the following topics:</p>
    /// <ul>
    /// <li> <p> <code>SizeConstraintSet</code>: Contains <code>SizeConstraintSetId</code>, <code>SizeConstraints</code>, and <code>Name</code> </p> </li>
    /// <li> <p> <code>SizeConstraints</code>: Contains an array of <code>SizeConstraint</code> objects. Each <code>SizeConstraint</code> object contains <code>FieldToMatch</code>, <code>TextTransformation</code>, <code>ComparisonOperator</code>, and <code>Size</code> </p> </li>
    /// <li> <p> <code>FieldToMatch</code>: Contains <code>Data</code> and <code>Type</code> </p> </li>
    /// </ul>
    pub fn set_size_constraint_set(
        mut self,
        input: std::option::Option<crate::types::SizeConstraintSet>,
    ) -> Self {
        self.size_constraint_set = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetSizeConstraintSetOutput`](crate::operation::get_size_constraint_set::GetSizeConstraintSetOutput).
    pub fn build(self) -> crate::operation::get_size_constraint_set::GetSizeConstraintSetOutput {
        crate::operation::get_size_constraint_set::GetSizeConstraintSetOutput {
            size_constraint_set: self.size_constraint_set,
            _request_id: self._request_id,
        }
    }
}
