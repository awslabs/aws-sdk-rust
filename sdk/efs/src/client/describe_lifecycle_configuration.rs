// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeLifecycleConfiguration`](crate::operation::describe_lifecycle_configuration::builders::DescribeLifecycleConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`file_system_id(impl Into<String>)`](crate::operation::describe_lifecycle_configuration::builders::DescribeLifecycleConfigurationFluentBuilder::file_system_id) / [`set_file_system_id(Option<String>)`](crate::operation::describe_lifecycle_configuration::builders::DescribeLifecycleConfigurationFluentBuilder::set_file_system_id):<br>required: **true**<br><p>The ID of the file system whose <code>LifecycleConfiguration</code> object you want to retrieve (String).</p><br>
    /// - On success, responds with [`DescribeLifecycleConfigurationOutput`](crate::operation::describe_lifecycle_configuration::DescribeLifecycleConfigurationOutput) with field(s):
    ///   - [`lifecycle_policies(Option<Vec::<LifecyclePolicy>>)`](crate::operation::describe_lifecycle_configuration::DescribeLifecycleConfigurationOutput::lifecycle_policies): <p>An array of lifecycle management policies. EFS supports a maximum of one policy per file system.</p>
    /// - On failure, responds with [`SdkError<DescribeLifecycleConfigurationError>`](crate::operation::describe_lifecycle_configuration::DescribeLifecycleConfigurationError)
    pub fn describe_lifecycle_configuration(
        &self,
    ) -> crate::operation::describe_lifecycle_configuration::builders::DescribeLifecycleConfigurationFluentBuilder {
        crate::operation::describe_lifecycle_configuration::builders::DescribeLifecycleConfigurationFluentBuilder::new(self.handle.clone())
    }
}
