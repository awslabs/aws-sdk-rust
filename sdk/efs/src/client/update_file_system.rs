// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateFileSystem`](crate::operation::update_file_system::builders::UpdateFileSystemFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`file_system_id(impl Into<String>)`](crate::operation::update_file_system::builders::UpdateFileSystemFluentBuilder::file_system_id) / [`set_file_system_id(Option<String>)`](crate::operation::update_file_system::builders::UpdateFileSystemFluentBuilder::set_file_system_id): <p>The ID of the file system that you want to update.</p>
    ///   - [`throughput_mode(ThroughputMode)`](crate::operation::update_file_system::builders::UpdateFileSystemFluentBuilder::throughput_mode) / [`set_throughput_mode(Option<ThroughputMode>)`](crate::operation::update_file_system::builders::UpdateFileSystemFluentBuilder::set_throughput_mode): <p>(Optional) Updates the file system's throughput mode. If you're not updating your throughput mode, you don't need to provide this value in your request. If you are changing the <code>ThroughputMode</code> to <code>provisioned</code>, you must also set a value for <code>ProvisionedThroughputInMibps</code>.</p>
    ///   - [`provisioned_throughput_in_mibps(f64)`](crate::operation::update_file_system::builders::UpdateFileSystemFluentBuilder::provisioned_throughput_in_mibps) / [`set_provisioned_throughput_in_mibps(Option<f64>)`](crate::operation::update_file_system::builders::UpdateFileSystemFluentBuilder::set_provisioned_throughput_in_mibps): <p>(Optional) Sets the amount of provisioned throughput, in MiB/s, for the file system. Valid values are 1-1024. If you are changing the throughput mode to provisioned, you must also provide the amount of provisioned throughput. Required if <code>ThroughputMode</code> is changed to <code>provisioned</code> on update.</p>
    /// - On success, responds with [`UpdateFileSystemOutput`](crate::operation::update_file_system::UpdateFileSystemOutput) with field(s):
    ///   - [`owner_id(Option<String>)`](crate::operation::update_file_system::UpdateFileSystemOutput::owner_id): <p>The Amazon Web Services account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.</p>
    ///   - [`creation_token(Option<String>)`](crate::operation::update_file_system::UpdateFileSystemOutput::creation_token): <p>The opaque string specified in the request.</p>
    ///   - [`file_system_id(Option<String>)`](crate::operation::update_file_system::UpdateFileSystemOutput::file_system_id): <p>The ID of the file system, assigned by Amazon EFS.</p>
    ///   - [`file_system_arn(Option<String>)`](crate::operation::update_file_system::UpdateFileSystemOutput::file_system_arn): <p>The Amazon Resource Name (ARN) for the EFS file system, in the format <code>arn:aws:elasticfilesystem:<i>region</i>:<i>account-id</i>:file-system/<i>file-system-id</i> </code>. Example with sample data: <code>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</code> </p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::update_file_system::UpdateFileSystemOutput::creation_time): <p>The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).</p>
    ///   - [`life_cycle_state(Option<LifeCycleState>)`](crate::operation::update_file_system::UpdateFileSystemOutput::life_cycle_state): <p>The lifecycle phase of the file system.</p>
    ///   - [`name(Option<String>)`](crate::operation::update_file_system::UpdateFileSystemOutput::name): <p>You can add tags to a file system, including a <code>Name</code> tag. For more information, see <code>CreateFileSystem</code>. If the file system has a <code>Name</code> tag, Amazon EFS returns the value in this field. </p>
    ///   - [`number_of_mount_targets(i32)`](crate::operation::update_file_system::UpdateFileSystemOutput::number_of_mount_targets): <p>The current number of mount targets that the file system has. For more information, see <code>CreateMountTarget</code>.</p>
    ///   - [`size_in_bytes(Option<FileSystemSize>)`](crate::operation::update_file_system::UpdateFileSystemOutput::size_in_bytes): <p>The latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z. The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, <code>SizeInBytes</code> represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time. </p>
    ///   - [`performance_mode(Option<PerformanceMode>)`](crate::operation::update_file_system::UpdateFileSystemOutput::performance_mode): <p>The performance mode of the file system.</p>
    ///   - [`encrypted(Option<bool>)`](crate::operation::update_file_system::UpdateFileSystemOutput::encrypted): <p>A Boolean value that, if true, indicates that the file system is encrypted.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::update_file_system::UpdateFileSystemOutput::kms_key_id): <p>The ID of an KMS key used to protect the encrypted file system.</p>
    ///   - [`throughput_mode(Option<ThroughputMode>)`](crate::operation::update_file_system::UpdateFileSystemOutput::throughput_mode): <p>Displays the file system's throughput mode. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#throughput-modes">Throughput modes</a> in the <i>Amazon EFS User Guide</i>. </p>
    ///   - [`provisioned_throughput_in_mibps(Option<f64>)`](crate::operation::update_file_system::UpdateFileSystemOutput::provisioned_throughput_in_mibps): <p>The amount of provisioned throughput, measured in MiB/s, for the file system. Valid for file systems using <code>ThroughputMode</code> set to <code>provisioned</code>.</p>
    ///   - [`availability_zone_name(Option<String>)`](crate::operation::update_file_system::UpdateFileSystemOutput::availability_zone_name): <p>Describes the Amazon Web Services Availability Zone in which the file system is located, and is valid only for file systems using One Zone storage classes. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html">Using EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</p>
    ///   - [`availability_zone_id(Option<String>)`](crate::operation::update_file_system::UpdateFileSystemOutput::availability_zone_id): <p>The unique and consistent identifier of the Availability Zone in which the file system's One Zone storage classes exist. For example, <code>use1-az1</code> is an Availability Zone ID for the us-east-1 Amazon Web Services Region, and it has the same location in every Amazon Web Services account.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::operation::update_file_system::UpdateFileSystemOutput::tags): <p>The tags associated with the file system, presented as an array of <code>Tag</code> objects.</p>
    /// - On failure, responds with [`SdkError<UpdateFileSystemError>`](crate::operation::update_file_system::UpdateFileSystemError)
    pub fn update_file_system(
        &self,
    ) -> crate::operation::update_file_system::builders::UpdateFileSystemFluentBuilder {
        crate::operation::update_file_system::builders::UpdateFileSystemFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
