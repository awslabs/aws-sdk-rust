// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeFileSystems`](crate::client::fluent_builders::DescribeFileSystems) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeFileSystems::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_items(i32)`](crate::client::fluent_builders::DescribeFileSystems::max_items) / [`set_max_items(Option<i32>)`](crate::client::fluent_builders::DescribeFileSystems::set_max_items): <p>(Optional) Specifies the maximum number of file systems to return in the response (integer). This number is automatically set to 100. The response is paginated at 100 per page if you have more than 100 file systems. </p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeFileSystems::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeFileSystems::set_marker): <p>(Optional) Opaque pagination token returned from a previous <code>DescribeFileSystems</code> operation (String). If present, specifies to continue the list from where the returning call had left off. </p>
    ///   - [`creation_token(impl Into<String>)`](crate::client::fluent_builders::DescribeFileSystems::creation_token) / [`set_creation_token(Option<String>)`](crate::client::fluent_builders::DescribeFileSystems::set_creation_token): <p>(Optional) Restricts the list to the file system with this creation token (String). You specify a creation token when you create an Amazon EFS file system.</p>
    ///   - [`file_system_id(impl Into<String>)`](crate::client::fluent_builders::DescribeFileSystems::file_system_id) / [`set_file_system_id(Option<String>)`](crate::client::fluent_builders::DescribeFileSystems::set_file_system_id): <p>(Optional) ID of the file system whose description you want to retrieve (String).</p>
    /// - On success, responds with [`DescribeFileSystemsOutput`](crate::output::DescribeFileSystemsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::output::DescribeFileSystemsOutput::marker): <p>Present if provided by caller in the request (String).</p>
    ///   - [`file_systems(Option<Vec<FileSystemDescription>>)`](crate::output::DescribeFileSystemsOutput::file_systems): <p>An array of file system descriptions.</p>
    ///   - [`next_marker(Option<String>)`](crate::output::DescribeFileSystemsOutput::next_marker): <p>Present if there are more file systems than returned in the response (String). You can use the <code>NextMarker</code> in the subsequent request to fetch the descriptions.</p>
    /// - On failure, responds with [`SdkError<DescribeFileSystemsError>`](crate::error::DescribeFileSystemsError)
    pub fn describe_file_systems(&self) -> crate::client::fluent_builders::DescribeFileSystems {
        crate::client::fluent_builders::DescribeFileSystems::new(self.handle.clone())
    }
}
