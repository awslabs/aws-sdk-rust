// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutBackupPolicyInput {
    /// <p>Specifies which EFS file system to update the backup policy for.</p>
    #[doc(hidden)]
    pub file_system_id: std::option::Option<std::string::String>,
    /// <p>The backup policy included in the <code>PutBackupPolicy</code> request.</p>
    #[doc(hidden)]
    pub backup_policy: std::option::Option<crate::types::BackupPolicy>,
}
impl PutBackupPolicyInput {
    /// <p>Specifies which EFS file system to update the backup policy for.</p>
    pub fn file_system_id(&self) -> std::option::Option<&str> {
        self.file_system_id.as_deref()
    }
    /// <p>The backup policy included in the <code>PutBackupPolicy</code> request.</p>
    pub fn backup_policy(&self) -> std::option::Option<&crate::types::BackupPolicy> {
        self.backup_policy.as_ref()
    }
}
impl PutBackupPolicyInput {
    /// Creates a new builder-style object to manufacture [`PutBackupPolicyInput`](crate::operation::put_backup_policy::PutBackupPolicyInput).
    pub fn builder() -> crate::operation::put_backup_policy::builders::PutBackupPolicyInputBuilder {
        crate::operation::put_backup_policy::builders::PutBackupPolicyInputBuilder::default()
    }
}

/// A builder for [`PutBackupPolicyInput`](crate::operation::put_backup_policy::PutBackupPolicyInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutBackupPolicyInputBuilder {
    pub(crate) file_system_id: std::option::Option<std::string::String>,
    pub(crate) backup_policy: std::option::Option<crate::types::BackupPolicy>,
}
impl PutBackupPolicyInputBuilder {
    /// <p>Specifies which EFS file system to update the backup policy for.</p>
    pub fn file_system_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.file_system_id = Some(input.into());
        self
    }
    /// <p>Specifies which EFS file system to update the backup policy for.</p>
    pub fn set_file_system_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.file_system_id = input;
        self
    }
    /// <p>The backup policy included in the <code>PutBackupPolicy</code> request.</p>
    pub fn backup_policy(mut self, input: crate::types::BackupPolicy) -> Self {
        self.backup_policy = Some(input);
        self
    }
    /// <p>The backup policy included in the <code>PutBackupPolicy</code> request.</p>
    pub fn set_backup_policy(
        mut self,
        input: std::option::Option<crate::types::BackupPolicy>,
    ) -> Self {
        self.backup_policy = input;
        self
    }
    /// Consumes the builder and constructs a [`PutBackupPolicyInput`](crate::operation::put_backup_policy::PutBackupPolicyInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_backup_policy::PutBackupPolicyInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::put_backup_policy::PutBackupPolicyInput {
            file_system_id: self.file_system_id,
            backup_policy: self.backup_policy,
        })
    }
}
