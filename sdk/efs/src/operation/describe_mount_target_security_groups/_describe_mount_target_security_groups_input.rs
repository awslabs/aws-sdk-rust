// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeMountTargetSecurityGroupsInput {
    /// <p>The ID of the mount target whose security groups you want to retrieve.</p>
    pub mount_target_id: ::std::option::Option<::std::string::String>,
}
impl DescribeMountTargetSecurityGroupsInput {
    /// <p>The ID of the mount target whose security groups you want to retrieve.</p>
    pub fn mount_target_id(&self) -> ::std::option::Option<&str> {
        self.mount_target_id.as_deref()
    }
}
impl DescribeMountTargetSecurityGroupsInput {
    /// Creates a new builder-style object to manufacture [`DescribeMountTargetSecurityGroupsInput`](crate::operation::describe_mount_target_security_groups::DescribeMountTargetSecurityGroupsInput).
    pub fn builder() -> crate::operation::describe_mount_target_security_groups::builders::DescribeMountTargetSecurityGroupsInputBuilder {
        crate::operation::describe_mount_target_security_groups::builders::DescribeMountTargetSecurityGroupsInputBuilder::default()
    }
}

/// A builder for [`DescribeMountTargetSecurityGroupsInput`](crate::operation::describe_mount_target_security_groups::DescribeMountTargetSecurityGroupsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeMountTargetSecurityGroupsInputBuilder {
    pub(crate) mount_target_id: ::std::option::Option<::std::string::String>,
}
impl DescribeMountTargetSecurityGroupsInputBuilder {
    /// <p>The ID of the mount target whose security groups you want to retrieve.</p>
    /// This field is required.
    pub fn mount_target_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.mount_target_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the mount target whose security groups you want to retrieve.</p>
    pub fn set_mount_target_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.mount_target_id = input;
        self
    }
    /// <p>The ID of the mount target whose security groups you want to retrieve.</p>
    pub fn get_mount_target_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.mount_target_id
    }
    /// Consumes the builder and constructs a [`DescribeMountTargetSecurityGroupsInput`](crate::operation::describe_mount_target_security_groups::DescribeMountTargetSecurityGroupsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_mount_target_security_groups::DescribeMountTargetSecurityGroupsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::describe_mount_target_security_groups::DescribeMountTargetSecurityGroupsInput {
                mount_target_id: self.mount_target_id,
            },
        )
    }
}
