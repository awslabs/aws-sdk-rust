// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeAccountPreferencesOutput {
    /// <p>Describes the resource ID preference setting for the Amazon Web Services account associated with the user making the request, in the current Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub resource_id_preference: std::option::Option<crate::types::ResourceIdPreference>,
    /// <p>Present if there are more records than returned in the response. You can use the <code>NextToken</code> in the subsequent request to fetch the additional descriptions.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl DescribeAccountPreferencesOutput {
    /// <p>Describes the resource ID preference setting for the Amazon Web Services account associated with the user making the request, in the current Amazon Web Services Region.</p>
    pub fn resource_id_preference(
        &self,
    ) -> std::option::Option<&crate::types::ResourceIdPreference> {
        self.resource_id_preference.as_ref()
    }
    /// <p>Present if there are more records than returned in the response. You can use the <code>NextToken</code> in the subsequent request to fetch the additional descriptions.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeAccountPreferencesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeAccountPreferencesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeAccountPreferencesOutput`](crate::operation::describe_account_preferences::DescribeAccountPreferencesOutput).
    pub fn builder() -> crate::operation::describe_account_preferences::builders::DescribeAccountPreferencesOutputBuilder{
        crate::operation::describe_account_preferences::builders::DescribeAccountPreferencesOutputBuilder::default()
    }
}

/// A builder for [`DescribeAccountPreferencesOutput`](crate::operation::describe_account_preferences::DescribeAccountPreferencesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeAccountPreferencesOutputBuilder {
    pub(crate) resource_id_preference: std::option::Option<crate::types::ResourceIdPreference>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl DescribeAccountPreferencesOutputBuilder {
    /// <p>Describes the resource ID preference setting for the Amazon Web Services account associated with the user making the request, in the current Amazon Web Services Region.</p>
    pub fn resource_id_preference(mut self, input: crate::types::ResourceIdPreference) -> Self {
        self.resource_id_preference = Some(input);
        self
    }
    /// <p>Describes the resource ID preference setting for the Amazon Web Services account associated with the user making the request, in the current Amazon Web Services Region.</p>
    pub fn set_resource_id_preference(
        mut self,
        input: std::option::Option<crate::types::ResourceIdPreference>,
    ) -> Self {
        self.resource_id_preference = input;
        self
    }
    /// <p>Present if there are more records than returned in the response. You can use the <code>NextToken</code> in the subsequent request to fetch the additional descriptions.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Present if there are more records than returned in the response. You can use the <code>NextToken</code> in the subsequent request to fetch the additional descriptions.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeAccountPreferencesOutput`](crate::operation::describe_account_preferences::DescribeAccountPreferencesOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_account_preferences::DescribeAccountPreferencesOutput {
        crate::operation::describe_account_preferences::DescribeAccountPreferencesOutput {
            resource_id_preference: self.resource_id_preference,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
