// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::delete_access_point::_delete_access_point_output::DeleteAccessPointOutputBuilder;

pub use crate::operation::delete_access_point::_delete_access_point_input::DeleteAccessPointInputBuilder;

/// Fluent builder constructing a request to `DeleteAccessPoint`.
///
/// <p>Deletes the specified access point. After deletion is complete, new clients can no longer connect to the access points. Clients connected to the access point at the time of deletion will continue to function until they terminate their connection.</p>
/// <p>This operation requires permissions for the <code>elasticfilesystem:DeleteAccessPoint</code> action.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DeleteAccessPointFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::delete_access_point::builders::DeleteAccessPointInputBuilder,
}
impl DeleteAccessPointFluentBuilder {
    /// Creates a new `DeleteAccessPoint`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::delete_access_point::DeleteAccessPoint,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::delete_access_point::DeleteAccessPointError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::delete_access_point::DeleteAccessPointOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::delete_access_point::DeleteAccessPointError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The ID of the access point that you want to delete.</p>
    pub fn access_point_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.access_point_id(input.into());
        self
    }
    /// <p>The ID of the access point that you want to delete.</p>
    pub fn set_access_point_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_access_point_id(input);
        self
    }
}
