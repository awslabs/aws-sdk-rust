// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_access_point;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_file_system;

pub(crate) mod shape_create_mount_target;

pub(crate) mod shape_create_replication_configuration;

pub(crate) mod shape_create_tags;

pub(crate) mod shape_delete_access_point;

pub(crate) mod shape_delete_file_system;

pub(crate) mod shape_delete_file_system_policy;

pub(crate) mod shape_delete_mount_target;

pub(crate) mod shape_delete_replication_configuration;

pub(crate) mod shape_delete_tags;

pub(crate) mod shape_describe_access_points;

pub(crate) mod shape_describe_account_preferences;

pub(crate) mod shape_describe_backup_policy;

pub(crate) mod shape_describe_file_system_policy;

pub(crate) mod shape_describe_file_systems;

pub(crate) mod shape_describe_lifecycle_configuration;

pub(crate) mod shape_describe_mount_target_security_groups;

pub(crate) mod shape_describe_mount_targets;

pub(crate) mod shape_describe_replication_configurations;

pub(crate) mod shape_describe_tags;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_modify_mount_target_security_groups;

pub(crate) mod shape_put_account_preferences;

pub(crate) mod shape_put_backup_policy;

pub(crate) mod shape_put_file_system_policy;

pub(crate) mod shape_put_lifecycle_configuration;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_file_system;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_point_already_exists;

pub(crate) mod shape_access_point_limit_exceeded;

pub(crate) mod shape_access_point_not_found;

pub(crate) mod shape_availability_zones_mismatch;

pub(crate) mod shape_bad_request;

pub(crate) mod shape_create_access_point_input;

pub(crate) mod shape_create_file_system_input;

pub(crate) mod shape_create_mount_target_input;

pub(crate) mod shape_create_replication_configuration_input;

pub(crate) mod shape_create_tags_input;

pub(crate) mod shape_delete_tags_input;

pub(crate) mod shape_dependency_timeout;

pub(crate) mod shape_describe_account_preferences_input;

pub(crate) mod shape_file_system_already_exists;

pub(crate) mod shape_file_system_in_use;

pub(crate) mod shape_file_system_limit_exceeded;

pub(crate) mod shape_file_system_not_found;

pub(crate) mod shape_incorrect_file_system_life_cycle_state;

pub(crate) mod shape_incorrect_mount_target_state;

pub(crate) mod shape_insufficient_throughput_capacity;

pub(crate) mod shape_internal_server_error;

pub(crate) mod shape_invalid_policy_exception;

pub(crate) mod shape_ip_address_in_use;

pub(crate) mod shape_modify_mount_target_security_groups_input;

pub(crate) mod shape_mount_target_conflict;

pub(crate) mod shape_mount_target_not_found;

pub(crate) mod shape_network_interface_limit_exceeded;

pub(crate) mod shape_no_free_addresses_in_subnet;

pub(crate) mod shape_policy_not_found;

pub(crate) mod shape_put_account_preferences_input;

pub(crate) mod shape_put_backup_policy_input;

pub(crate) mod shape_put_file_system_policy_input;

pub(crate) mod shape_put_lifecycle_configuration_input;

pub(crate) mod shape_replication_not_found;

pub(crate) mod shape_security_group_limit_exceeded;

pub(crate) mod shape_security_group_not_found;

pub(crate) mod shape_subnet_not_found;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_throughput_limit_exceeded;

pub(crate) mod shape_too_many_requests;

pub(crate) mod shape_unsupported_availability_zone;

pub(crate) mod shape_update_file_system_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_access_point_descriptions;

pub(crate) mod shape_backup_policy;

pub(crate) mod shape_destination_to_create;

pub(crate) mod shape_destinations;

pub(crate) mod shape_file_system_descriptions;

pub(crate) mod shape_file_system_size;

pub(crate) mod shape_lifecycle_policies;

pub(crate) mod shape_lifecycle_policy;

pub(crate) mod shape_mount_target_descriptions;

pub(crate) mod shape_posix_user;

pub(crate) mod shape_replication_configuration_descriptions;

pub(crate) mod shape_resource_id_preference;

pub(crate) mod shape_root_directory;

pub(crate) mod shape_security_groups;

pub(crate) mod shape_tag;

pub(crate) mod shape_tags;

pub(crate) mod shape_access_point_description;

pub(crate) mod shape_creation_info;

pub(crate) mod shape_destination;

pub(crate) mod shape_file_system_description;

pub(crate) mod shape_mount_target_description;

pub(crate) mod shape_replication_configuration_description;

pub(crate) mod shape_resources;

pub(crate) mod shape_secondary_gids;
