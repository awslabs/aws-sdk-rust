// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// All possible error types for this service.
#[non_exhaustive]
#[derive(::std::fmt::Debug)]
pub enum Error {
    /// <p>You do not have sufficient permissions to perform this action.</p>
    AccessDeniedException(crate::types::error::AccessDeniedException),
    /// <p>The flow has not been published.</p>
    ContactFlowNotPublishedException(crate::types::error::ContactFlowNotPublishedException),
    /// <p>The contact with the specified ID is not active or does not exist. Applies to Voice calls only, not to Chat or Task contacts.</p>
    ContactNotFoundException(crate::types::error::ContactNotFoundException),
    /// <p>Outbound calls to the destination number are not allowed.</p>
    DestinationNotAllowedException(crate::types::error::DestinationNotAllowedException),
    /// <p>A resource with the specified name already exists.</p>
    DuplicateResourceException(crate::types::error::DuplicateResourceException),
    /// <p>An entity with the same name already exists.</p>
    IdempotencyException(crate::types::error::IdempotencyException),
    /// <p>Request processing failed because of an error or failure with the service.</p>
    InternalServiceException(crate::types::error::InternalServiceException),
    /// <p>The flow is not valid.</p>
    InvalidContactFlowException(crate::types::error::InvalidContactFlowException),
    /// <p>The problems with the module. Please fix before trying again.</p>
    InvalidContactFlowModuleException(crate::types::error::InvalidContactFlowModuleException),
    /// <p>One or more of the specified parameters are not valid.</p>
    InvalidParameterException(crate::types::error::InvalidParameterException),
    /// <p>The request is not valid.</p>
    InvalidRequestException(crate::types::error::InvalidRequestException),
    /// <p>The allowed limit for the resource has been exceeded.</p>
    LimitExceededException(crate::types::error::LimitExceededException),
    /// <p>Maximum number (1000) of tags have been returned with current request. Consider changing request parameters to get more tags.</p>
    MaximumResultReturnedException(crate::types::error::MaximumResultReturnedException),
    /// <p>The contact is not permitted.</p>
    OutboundContactNotPermittedException(crate::types::error::OutboundContactNotPermittedException),
    /// <p>The property is not valid.</p>
    PropertyValidationException(crate::types::error::PropertyValidationException),
    /// <p>A resource already has that name.</p>
    ResourceConflictException(crate::types::error::ResourceConflictException),
    /// <p>That resource is already in use. Please try another.</p>
    ResourceInUseException(crate::types::error::ResourceInUseException),
    /// <p>The specified resource was not found.</p>
    ResourceNotFoundException(crate::types::error::ResourceNotFoundException),
    /// <p>The resource is not ready.</p>
    ResourceNotReadyException(crate::types::error::ResourceNotReadyException),
    /// <p>The service quota has been exceeded.</p>
    ServiceQuotaExceededException(crate::types::error::ServiceQuotaExceededException),
    /// <p>The throttling limit has been exceeded.</p>
    ThrottlingException(crate::types::error::ThrottlingException),
    /// <p>Displayed when rate-related API limits are exceeded.</p>
    TooManyRequestsException(crate::types::error::TooManyRequestsException),
    /// <p>No user with the specified credentials was found in the Amazon Connect instance.</p>
    UserNotFoundException(crate::types::error::UserNotFoundException),
    /// An unexpected error occurred (e.g., invalid JSON returned by the service or an unknown error code).
    Unhandled(::aws_smithy_types::error::Unhandled),
}
impl ::std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::AccessDeniedException(inner) => inner.fmt(f),
            Error::ContactFlowNotPublishedException(inner) => inner.fmt(f),
            Error::ContactNotFoundException(inner) => inner.fmt(f),
            Error::DestinationNotAllowedException(inner) => inner.fmt(f),
            Error::DuplicateResourceException(inner) => inner.fmt(f),
            Error::IdempotencyException(inner) => inner.fmt(f),
            Error::InternalServiceException(inner) => inner.fmt(f),
            Error::InvalidContactFlowException(inner) => inner.fmt(f),
            Error::InvalidContactFlowModuleException(inner) => inner.fmt(f),
            Error::InvalidParameterException(inner) => inner.fmt(f),
            Error::InvalidRequestException(inner) => inner.fmt(f),
            Error::LimitExceededException(inner) => inner.fmt(f),
            Error::MaximumResultReturnedException(inner) => inner.fmt(f),
            Error::OutboundContactNotPermittedException(inner) => inner.fmt(f),
            Error::PropertyValidationException(inner) => inner.fmt(f),
            Error::ResourceConflictException(inner) => inner.fmt(f),
            Error::ResourceInUseException(inner) => inner.fmt(f),
            Error::ResourceNotFoundException(inner) => inner.fmt(f),
            Error::ResourceNotReadyException(inner) => inner.fmt(f),
            Error::ServiceQuotaExceededException(inner) => inner.fmt(f),
            Error::ThrottlingException(inner) => inner.fmt(f),
            Error::TooManyRequestsException(inner) => inner.fmt(f),
            Error::UserNotFoundException(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::activate_evaluation_form::ActivateEvaluationFormError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::activate_evaluation_form::ActivateEvaluationFormError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::activate_evaluation_form::ActivateEvaluationFormError> for Error {
    fn from(err: crate::operation::activate_evaluation_form::ActivateEvaluationFormError) -> Self {
        match err {
            crate::operation::activate_evaluation_form::ActivateEvaluationFormError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::activate_evaluation_form::ActivateEvaluationFormError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::activate_evaluation_form::ActivateEvaluationFormError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::activate_evaluation_form::ActivateEvaluationFormError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::activate_evaluation_form::ActivateEvaluationFormError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::activate_evaluation_form::ActivateEvaluationFormError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_approved_origin::AssociateApprovedOriginError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_approved_origin::AssociateApprovedOriginError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_approved_origin::AssociateApprovedOriginError> for Error {
    fn from(err: crate::operation::associate_approved_origin::AssociateApprovedOriginError) -> Self {
        match err {
            crate::operation::associate_approved_origin::AssociateApprovedOriginError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::associate_approved_origin::AssociateApprovedOriginError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::associate_approved_origin::AssociateApprovedOriginError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::associate_approved_origin::AssociateApprovedOriginError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::associate_approved_origin::AssociateApprovedOriginError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::associate_approved_origin::AssociateApprovedOriginError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::associate_approved_origin::AssociateApprovedOriginError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::associate_approved_origin::AssociateApprovedOriginError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_bot::AssociateBotError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_bot::AssociateBotError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_bot::AssociateBotError> for Error {
    fn from(err: crate::operation::associate_bot::AssociateBotError) -> Self {
        match err {
            crate::operation::associate_bot::AssociateBotError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::associate_bot::AssociateBotError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::associate_bot::AssociateBotError::LimitExceededException(inner) => Error::LimitExceededException(inner),
            crate::operation::associate_bot::AssociateBotError::ResourceConflictException(inner) => Error::ResourceConflictException(inner),
            crate::operation::associate_bot::AssociateBotError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::associate_bot::AssociateBotError::ServiceQuotaExceededException(inner) => Error::ServiceQuotaExceededException(inner),
            crate::operation::associate_bot::AssociateBotError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::associate_bot::AssociateBotError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError> for Error {
    fn from(err: crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError) -> Self {
        match err {
            crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::associate_default_vocabulary::AssociateDefaultVocabularyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError> for Error {
    fn from(err: crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError) -> Self {
        match err {
            crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::associate_instance_storage_config::AssociateInstanceStorageConfigError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_lambda_function::AssociateLambdaFunctionError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_lambda_function::AssociateLambdaFunctionError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_lambda_function::AssociateLambdaFunctionError> for Error {
    fn from(err: crate::operation::associate_lambda_function::AssociateLambdaFunctionError) -> Self {
        match err {
            crate::operation::associate_lambda_function::AssociateLambdaFunctionError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::associate_lambda_function::AssociateLambdaFunctionError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::associate_lambda_function::AssociateLambdaFunctionError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::associate_lambda_function::AssociateLambdaFunctionError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::associate_lambda_function::AssociateLambdaFunctionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::associate_lambda_function::AssociateLambdaFunctionError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::associate_lambda_function::AssociateLambdaFunctionError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::associate_lambda_function::AssociateLambdaFunctionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_lex_bot::AssociateLexBotError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_lex_bot::AssociateLexBotError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_lex_bot::AssociateLexBotError> for Error {
    fn from(err: crate::operation::associate_lex_bot::AssociateLexBotError) -> Self {
        match err {
            crate::operation::associate_lex_bot::AssociateLexBotError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::associate_lex_bot::AssociateLexBotError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::associate_lex_bot::AssociateLexBotError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::associate_lex_bot::AssociateLexBotError::ResourceConflictException(inner) => Error::ResourceConflictException(inner),
            crate::operation::associate_lex_bot::AssociateLexBotError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::associate_lex_bot::AssociateLexBotError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::associate_lex_bot::AssociateLexBotError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::associate_lex_bot::AssociateLexBotError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError> for Error {
    fn from(err: crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError) -> Self {
        match err {
            crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::associate_phone_number_contact_flow::AssociatePhoneNumberContactFlowError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError> for Error {
    fn from(err: crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError) -> Self {
        match err {
            crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::associate_queue_quick_connects::AssociateQueueQuickConnectsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError, R>,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError> for Error {
    fn from(err: crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError) -> Self {
        match err {
            crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::associate_routing_profile_queues::AssociateRoutingProfileQueuesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_security_key::AssociateSecurityKeyError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::associate_security_key::AssociateSecurityKeyError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_security_key::AssociateSecurityKeyError> for Error {
    fn from(err: crate::operation::associate_security_key::AssociateSecurityKeyError) -> Self {
        match err {
            crate::operation::associate_security_key::AssociateSecurityKeyError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::associate_security_key::AssociateSecurityKeyError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::associate_security_key::AssociateSecurityKeyError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::associate_security_key::AssociateSecurityKeyError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::associate_security_key::AssociateSecurityKeyError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::associate_security_key::AssociateSecurityKeyError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::associate_security_key::AssociateSecurityKeyError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::associate_security_key::AssociateSecurityKeyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError> for Error {
    fn from(err: crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError) -> Self {
        match err {
            crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError::InternalServiceException(
                inner,
            ) => Error::InternalServiceException(inner),
            crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError::InvalidRequestException(
                inner,
            ) => Error::InvalidRequestException(inner),
            crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError::ResourceConflictException(
                inner,
            ) => Error::ResourceConflictException(inner),
            crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError::ResourceNotFoundException(
                inner,
            ) => Error::ResourceNotFoundException(inner),
            crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::associate_traffic_distribution_group_user::AssociateTrafficDistributionGroupUserError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::claim_phone_number::ClaimPhoneNumberError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::claim_phone_number::ClaimPhoneNumberError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::claim_phone_number::ClaimPhoneNumberError> for Error {
    fn from(err: crate::operation::claim_phone_number::ClaimPhoneNumberError) -> Self {
        match err {
            crate::operation::claim_phone_number::ClaimPhoneNumberError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::claim_phone_number::ClaimPhoneNumberError::IdempotencyException(inner) => Error::IdempotencyException(inner),
            crate::operation::claim_phone_number::ClaimPhoneNumberError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::claim_phone_number::ClaimPhoneNumberError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::claim_phone_number::ClaimPhoneNumberError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::claim_phone_number::ClaimPhoneNumberError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::claim_phone_number::ClaimPhoneNumberError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_agent_status::CreateAgentStatusError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_agent_status::CreateAgentStatusError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_agent_status::CreateAgentStatusError> for Error {
    fn from(err: crate::operation::create_agent_status::CreateAgentStatusError) -> Self {
        match err {
            crate::operation::create_agent_status::CreateAgentStatusError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::create_agent_status::CreateAgentStatusError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_agent_status::CreateAgentStatusError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_agent_status::CreateAgentStatusError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_agent_status::CreateAgentStatusError::LimitExceededException(inner) => Error::LimitExceededException(inner),
            crate::operation::create_agent_status::CreateAgentStatusError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_agent_status::CreateAgentStatusError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_agent_status::CreateAgentStatusError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_contact_flow::CreateContactFlowError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_contact_flow::CreateContactFlowError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_contact_flow::CreateContactFlowError> for Error {
    fn from(err: crate::operation::create_contact_flow::CreateContactFlowError) -> Self {
        match err {
            crate::operation::create_contact_flow::CreateContactFlowError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::create_contact_flow::CreateContactFlowError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_contact_flow::CreateContactFlowError::InvalidContactFlowException(inner) => {
                Error::InvalidContactFlowException(inner)
            }
            crate::operation::create_contact_flow::CreateContactFlowError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_contact_flow::CreateContactFlowError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_contact_flow::CreateContactFlowError::LimitExceededException(inner) => Error::LimitExceededException(inner),
            crate::operation::create_contact_flow::CreateContactFlowError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_contact_flow::CreateContactFlowError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_contact_flow::CreateContactFlowError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_contact_flow_module::CreateContactFlowModuleError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_contact_flow_module::CreateContactFlowModuleError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_contact_flow_module::CreateContactFlowModuleError> for Error {
    fn from(err: crate::operation::create_contact_flow_module::CreateContactFlowModuleError) -> Self {
        match err {
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::IdempotencyException(inner) => {
                Error::IdempotencyException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::InvalidContactFlowModuleException(inner) => {
                Error::InvalidContactFlowModuleException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::create_contact_flow_module::CreateContactFlowModuleError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_evaluation_form::CreateEvaluationFormError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_evaluation_form::CreateEvaluationFormError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_evaluation_form::CreateEvaluationFormError> for Error {
    fn from(err: crate::operation::create_evaluation_form::CreateEvaluationFormError) -> Self {
        match err {
            crate::operation::create_evaluation_form::CreateEvaluationFormError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_evaluation_form::CreateEvaluationFormError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_evaluation_form::CreateEvaluationFormError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::create_evaluation_form::CreateEvaluationFormError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_evaluation_form::CreateEvaluationFormError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_evaluation_form::CreateEvaluationFormError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_evaluation_form::CreateEvaluationFormError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_hours_of_operation::CreateHoursOfOperationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_hours_of_operation::CreateHoursOfOperationError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_hours_of_operation::CreateHoursOfOperationError> for Error {
    fn from(err: crate::operation::create_hours_of_operation::CreateHoursOfOperationError) -> Self {
        match err {
            crate::operation::create_hours_of_operation::CreateHoursOfOperationError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::create_hours_of_operation::CreateHoursOfOperationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_hours_of_operation::CreateHoursOfOperationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_hours_of_operation::CreateHoursOfOperationError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::create_hours_of_operation::CreateHoursOfOperationError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::create_hours_of_operation::CreateHoursOfOperationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_hours_of_operation::CreateHoursOfOperationError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_hours_of_operation::CreateHoursOfOperationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_instance::CreateInstanceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_instance::CreateInstanceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_instance::CreateInstanceError> for Error {
    fn from(err: crate::operation::create_instance::CreateInstanceError) -> Self {
        match err {
            crate::operation::create_instance::CreateInstanceError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_instance::CreateInstanceError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_instance::CreateInstanceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_instance::CreateInstanceError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_instance::CreateInstanceError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_instance::CreateInstanceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_integration_association::CreateIntegrationAssociationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::create_integration_association::CreateIntegrationAssociationError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_integration_association::CreateIntegrationAssociationError> for Error {
    fn from(err: crate::operation::create_integration_association::CreateIntegrationAssociationError) -> Self {
        match err {
            crate::operation::create_integration_association::CreateIntegrationAssociationError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::create_integration_association::CreateIntegrationAssociationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_integration_association::CreateIntegrationAssociationError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::create_integration_association::CreateIntegrationAssociationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_integration_association::CreateIntegrationAssociationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::create_integration_association::CreateIntegrationAssociationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_participant::CreateParticipantError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_participant::CreateParticipantError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_participant::CreateParticipantError> for Error {
    fn from(err: crate::operation::create_participant::CreateParticipantError) -> Self {
        match err {
            crate::operation::create_participant::CreateParticipantError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_participant::CreateParticipantError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_participant::CreateParticipantError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_participant::CreateParticipantError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_participant::CreateParticipantError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_participant::CreateParticipantError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_prompt::CreatePromptError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_prompt::CreatePromptError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_prompt::CreatePromptError> for Error {
    fn from(err: crate::operation::create_prompt::CreatePromptError) -> Self {
        match err {
            crate::operation::create_prompt::CreatePromptError::DuplicateResourceException(inner) => Error::DuplicateResourceException(inner),
            crate::operation::create_prompt::CreatePromptError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_prompt::CreatePromptError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::create_prompt::CreatePromptError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_prompt::CreatePromptError::LimitExceededException(inner) => Error::LimitExceededException(inner),
            crate::operation::create_prompt::CreatePromptError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_prompt::CreatePromptError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_queue::CreateQueueError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_queue::CreateQueueError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_queue::CreateQueueError> for Error {
    fn from(err: crate::operation::create_queue::CreateQueueError) -> Self {
        match err {
            crate::operation::create_queue::CreateQueueError::DuplicateResourceException(inner) => Error::DuplicateResourceException(inner),
            crate::operation::create_queue::CreateQueueError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_queue::CreateQueueError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::create_queue::CreateQueueError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_queue::CreateQueueError::LimitExceededException(inner) => Error::LimitExceededException(inner),
            crate::operation::create_queue::CreateQueueError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_queue::CreateQueueError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_queue::CreateQueueError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_quick_connect::CreateQuickConnectError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_quick_connect::CreateQuickConnectError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_quick_connect::CreateQuickConnectError> for Error {
    fn from(err: crate::operation::create_quick_connect::CreateQuickConnectError) -> Self {
        match err {
            crate::operation::create_quick_connect::CreateQuickConnectError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::create_quick_connect::CreateQuickConnectError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_quick_connect::CreateQuickConnectError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_quick_connect::CreateQuickConnectError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_quick_connect::CreateQuickConnectError::LimitExceededException(inner) => Error::LimitExceededException(inner),
            crate::operation::create_quick_connect::CreateQuickConnectError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_quick_connect::CreateQuickConnectError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_quick_connect::CreateQuickConnectError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_routing_profile::CreateRoutingProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_routing_profile::CreateRoutingProfileError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_routing_profile::CreateRoutingProfileError> for Error {
    fn from(err: crate::operation::create_routing_profile::CreateRoutingProfileError) -> Self {
        match err {
            crate::operation::create_routing_profile::CreateRoutingProfileError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::create_routing_profile::CreateRoutingProfileError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_routing_profile::CreateRoutingProfileError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_routing_profile::CreateRoutingProfileError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::create_routing_profile::CreateRoutingProfileError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::create_routing_profile::CreateRoutingProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_routing_profile::CreateRoutingProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_routing_profile::CreateRoutingProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_rule::CreateRuleError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_rule::CreateRuleError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_rule::CreateRuleError> for Error {
    fn from(err: crate::operation::create_rule::CreateRuleError) -> Self {
        match err {
            crate::operation::create_rule::CreateRuleError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_rule::CreateRuleError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_rule::CreateRuleError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_rule::CreateRuleError::ResourceConflictException(inner) => Error::ResourceConflictException(inner),
            crate::operation::create_rule::CreateRuleError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_rule::CreateRuleError::ServiceQuotaExceededException(inner) => Error::ServiceQuotaExceededException(inner),
            crate::operation::create_rule::CreateRuleError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_rule::CreateRuleError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_security_profile::CreateSecurityProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_security_profile::CreateSecurityProfileError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_security_profile::CreateSecurityProfileError> for Error {
    fn from(err: crate::operation::create_security_profile::CreateSecurityProfileError) -> Self {
        match err {
            crate::operation::create_security_profile::CreateSecurityProfileError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::create_security_profile::CreateSecurityProfileError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_security_profile::CreateSecurityProfileError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_security_profile::CreateSecurityProfileError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::create_security_profile::CreateSecurityProfileError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::create_security_profile::CreateSecurityProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_security_profile::CreateSecurityProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_security_profile::CreateSecurityProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_task_template::CreateTaskTemplateError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_task_template::CreateTaskTemplateError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_task_template::CreateTaskTemplateError> for Error {
    fn from(err: crate::operation::create_task_template::CreateTaskTemplateError) -> Self {
        match err {
            crate::operation::create_task_template::CreateTaskTemplateError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_task_template::CreateTaskTemplateError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_task_template::CreateTaskTemplateError::PropertyValidationException(inner) => {
                Error::PropertyValidationException(inner)
            }
            crate::operation::create_task_template::CreateTaskTemplateError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_task_template::CreateTaskTemplateError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_task_template::CreateTaskTemplateError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_task_template::CreateTaskTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError> for Error {
    fn from(err: crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError) -> Self {
        match err {
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError::ResourceNotReadyException(inner) => {
                Error::ResourceNotReadyException(inner)
            }
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::create_traffic_distribution_group::CreateTrafficDistributionGroupError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_use_case::CreateUseCaseError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_use_case::CreateUseCaseError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_use_case::CreateUseCaseError> for Error {
    fn from(err: crate::operation::create_use_case::CreateUseCaseError) -> Self {
        match err {
            crate::operation::create_use_case::CreateUseCaseError::DuplicateResourceException(inner) => Error::DuplicateResourceException(inner),
            crate::operation::create_use_case::CreateUseCaseError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_use_case::CreateUseCaseError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_use_case::CreateUseCaseError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_use_case::CreateUseCaseError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_use_case::CreateUseCaseError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_user::CreateUserError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_user::CreateUserError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_user::CreateUserError> for Error {
    fn from(err: crate::operation::create_user::CreateUserError) -> Self {
        match err {
            crate::operation::create_user::CreateUserError::DuplicateResourceException(inner) => Error::DuplicateResourceException(inner),
            crate::operation::create_user::CreateUserError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_user::CreateUserError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::create_user::CreateUserError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_user::CreateUserError::LimitExceededException(inner) => Error::LimitExceededException(inner),
            crate::operation::create_user::CreateUserError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_user::CreateUserError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_user::CreateUserError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError> for Error {
    fn from(err: crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError) -> Self {
        match err {
            crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::create_user_hierarchy_group::CreateUserHierarchyGroupError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_view::CreateViewError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_view::CreateViewError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_view::CreateViewError> for Error {
    fn from(err: crate::operation::create_view::CreateViewError) -> Self {
        match err {
            crate::operation::create_view::CreateViewError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_view::CreateViewError::DuplicateResourceException(inner) => Error::DuplicateResourceException(inner),
            crate::operation::create_view::CreateViewError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_view::CreateViewError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::create_view::CreateViewError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_view::CreateViewError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::create_view::CreateViewError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_view::CreateViewError::ServiceQuotaExceededException(inner) => Error::ServiceQuotaExceededException(inner),
            crate::operation::create_view::CreateViewError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::create_view::CreateViewError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_view_version::CreateViewVersionError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_view_version::CreateViewVersionError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_view_version::CreateViewVersionError> for Error {
    fn from(err: crate::operation::create_view_version::CreateViewVersionError) -> Self {
        match err {
            crate::operation::create_view_version::CreateViewVersionError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_view_version::CreateViewVersionError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_view_version::CreateViewVersionError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::create_view_version::CreateViewVersionError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_view_version::CreateViewVersionError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::create_view_version::CreateViewVersionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_view_version::CreateViewVersionError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_view_version::CreateViewVersionError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::create_view_version::CreateViewVersionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_vocabulary::CreateVocabularyError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_vocabulary::CreateVocabularyError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::create_vocabulary::CreateVocabularyError> for Error {
    fn from(err: crate::operation::create_vocabulary::CreateVocabularyError) -> Self {
        match err {
            crate::operation::create_vocabulary::CreateVocabularyError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_vocabulary::CreateVocabularyError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::create_vocabulary::CreateVocabularyError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::create_vocabulary::CreateVocabularyError::ResourceConflictException(inner) => Error::ResourceConflictException(inner),
            crate::operation::create_vocabulary::CreateVocabularyError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_vocabulary::CreateVocabularyError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_vocabulary::CreateVocabularyError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_vocabulary::CreateVocabularyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError> for Error {
    fn from(err: crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError) -> Self {
        match err {
            crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::deactivate_evaluation_form::DeactivateEvaluationFormError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_contact_evaluation::DeleteContactEvaluationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_contact_evaluation::DeleteContactEvaluationError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_contact_evaluation::DeleteContactEvaluationError> for Error {
    fn from(err: crate::operation::delete_contact_evaluation::DeleteContactEvaluationError) -> Self {
        match err {
            crate::operation::delete_contact_evaluation::DeleteContactEvaluationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_contact_evaluation::DeleteContactEvaluationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_contact_evaluation::DeleteContactEvaluationError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::delete_contact_evaluation::DeleteContactEvaluationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_contact_evaluation::DeleteContactEvaluationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::delete_contact_evaluation::DeleteContactEvaluationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_contact_flow::DeleteContactFlowError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_contact_flow::DeleteContactFlowError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_contact_flow::DeleteContactFlowError> for Error {
    fn from(err: crate::operation::delete_contact_flow::DeleteContactFlowError) -> Self {
        match err {
            crate::operation::delete_contact_flow::DeleteContactFlowError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_contact_flow::DeleteContactFlowError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_contact_flow::DeleteContactFlowError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_contact_flow::DeleteContactFlowError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_contact_flow::DeleteContactFlowError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_contact_flow::DeleteContactFlowError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_contact_flow::DeleteContactFlowError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError> for Error {
    fn from(err: crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError) -> Self {
        match err {
            crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::delete_contact_flow_module::DeleteContactFlowModuleError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_evaluation_form::DeleteEvaluationFormError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_evaluation_form::DeleteEvaluationFormError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_evaluation_form::DeleteEvaluationFormError> for Error {
    fn from(err: crate::operation::delete_evaluation_form::DeleteEvaluationFormError) -> Self {
        match err {
            crate::operation::delete_evaluation_form::DeleteEvaluationFormError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_evaluation_form::DeleteEvaluationFormError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_evaluation_form::DeleteEvaluationFormError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::delete_evaluation_form::DeleteEvaluationFormError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_evaluation_form::DeleteEvaluationFormError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_evaluation_form::DeleteEvaluationFormError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError> for Error {
    fn from(err: crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError) -> Self {
        match err {
            crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_hours_of_operation::DeleteHoursOfOperationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_instance::DeleteInstanceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_instance::DeleteInstanceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_instance::DeleteInstanceError> for Error {
    fn from(err: crate::operation::delete_instance::DeleteInstanceError) -> Self {
        match err {
            crate::operation::delete_instance::DeleteInstanceError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_instance::DeleteInstanceError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_instance::DeleteInstanceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_instance::DeleteInstanceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_integration_association::DeleteIntegrationAssociationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_integration_association::DeleteIntegrationAssociationError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_integration_association::DeleteIntegrationAssociationError> for Error {
    fn from(err: crate::operation::delete_integration_association::DeleteIntegrationAssociationError) -> Self {
        match err {
            crate::operation::delete_integration_association::DeleteIntegrationAssociationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_integration_association::DeleteIntegrationAssociationError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::delete_integration_association::DeleteIntegrationAssociationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_integration_association::DeleteIntegrationAssociationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::delete_integration_association::DeleteIntegrationAssociationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_prompt::DeletePromptError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_prompt::DeletePromptError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_prompt::DeletePromptError> for Error {
    fn from(err: crate::operation::delete_prompt::DeletePromptError) -> Self {
        match err {
            crate::operation::delete_prompt::DeletePromptError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_prompt::DeletePromptError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::delete_prompt::DeletePromptError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_prompt::DeletePromptError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_prompt::DeletePromptError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_prompt::DeletePromptError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_queue::DeleteQueueError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_queue::DeleteQueueError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_queue::DeleteQueueError> for Error {
    fn from(err: crate::operation::delete_queue::DeleteQueueError) -> Self {
        match err {
            crate::operation::delete_queue::DeleteQueueError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_queue::DeleteQueueError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::delete_queue::DeleteQueueError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_queue::DeleteQueueError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::delete_queue::DeleteQueueError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_queue::DeleteQueueError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_queue::DeleteQueueError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_quick_connect::DeleteQuickConnectError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_quick_connect::DeleteQuickConnectError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_quick_connect::DeleteQuickConnectError> for Error {
    fn from(err: crate::operation::delete_quick_connect::DeleteQuickConnectError) -> Self {
        match err {
            crate::operation::delete_quick_connect::DeleteQuickConnectError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_quick_connect::DeleteQuickConnectError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_quick_connect::DeleteQuickConnectError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_quick_connect::DeleteQuickConnectError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_quick_connect::DeleteQuickConnectError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_quick_connect::DeleteQuickConnectError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_routing_profile::DeleteRoutingProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_routing_profile::DeleteRoutingProfileError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_routing_profile::DeleteRoutingProfileError> for Error {
    fn from(err: crate::operation::delete_routing_profile::DeleteRoutingProfileError) -> Self {
        match err {
            crate::operation::delete_routing_profile::DeleteRoutingProfileError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_routing_profile::DeleteRoutingProfileError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_routing_profile::DeleteRoutingProfileError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::delete_routing_profile::DeleteRoutingProfileError::ResourceInUseException(inner) => {
                Error::ResourceInUseException(inner)
            }
            crate::operation::delete_routing_profile::DeleteRoutingProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_routing_profile::DeleteRoutingProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_routing_profile::DeleteRoutingProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_rule::DeleteRuleError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_rule::DeleteRuleError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_rule::DeleteRuleError> for Error {
    fn from(err: crate::operation::delete_rule::DeleteRuleError) -> Self {
        match err {
            crate::operation::delete_rule::DeleteRuleError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_rule::DeleteRuleError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_rule::DeleteRuleError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_rule::DeleteRuleError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_rule::DeleteRuleError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_rule::DeleteRuleError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_security_profile::DeleteSecurityProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_security_profile::DeleteSecurityProfileError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_security_profile::DeleteSecurityProfileError> for Error {
    fn from(err: crate::operation::delete_security_profile::DeleteSecurityProfileError) -> Self {
        match err {
            crate::operation::delete_security_profile::DeleteSecurityProfileError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::delete_security_profile::DeleteSecurityProfileError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_security_profile::DeleteSecurityProfileError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_security_profile::DeleteSecurityProfileError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::delete_security_profile::DeleteSecurityProfileError::ResourceInUseException(inner) => {
                Error::ResourceInUseException(inner)
            }
            crate::operation::delete_security_profile::DeleteSecurityProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_security_profile::DeleteSecurityProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_security_profile::DeleteSecurityProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_task_template::DeleteTaskTemplateError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_task_template::DeleteTaskTemplateError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_task_template::DeleteTaskTemplateError> for Error {
    fn from(err: crate::operation::delete_task_template::DeleteTaskTemplateError) -> Self {
        match err {
            crate::operation::delete_task_template::DeleteTaskTemplateError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_task_template::DeleteTaskTemplateError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_task_template::DeleteTaskTemplateError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_task_template::DeleteTaskTemplateError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_task_template::DeleteTaskTemplateError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_task_template::DeleteTaskTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError> for Error {
    fn from(err: crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError) -> Self {
        match err {
            crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError::ResourceInUseException(inner) => {
                Error::ResourceInUseException(inner)
            }
            crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::delete_traffic_distribution_group::DeleteTrafficDistributionGroupError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_use_case::DeleteUseCaseError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_use_case::DeleteUseCaseError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_use_case::DeleteUseCaseError> for Error {
    fn from(err: crate::operation::delete_use_case::DeleteUseCaseError) -> Self {
        match err {
            crate::operation::delete_use_case::DeleteUseCaseError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_use_case::DeleteUseCaseError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_use_case::DeleteUseCaseError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_use_case::DeleteUseCaseError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_use_case::DeleteUseCaseError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_user::DeleteUserError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_user::DeleteUserError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_user::DeleteUserError> for Error {
    fn from(err: crate::operation::delete_user::DeleteUserError) -> Self {
        match err {
            crate::operation::delete_user::DeleteUserError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_user::DeleteUserError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::delete_user::DeleteUserError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_user::DeleteUserError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_user::DeleteUserError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_user::DeleteUserError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError> for Error {
    fn from(err: crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError) -> Self {
        match err {
            crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError::ResourceInUseException(inner) => {
                Error::ResourceInUseException(inner)
            }
            crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::delete_user_hierarchy_group::DeleteUserHierarchyGroupError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_view::DeleteViewError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_view::DeleteViewError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_view::DeleteViewError> for Error {
    fn from(err: crate::operation::delete_view::DeleteViewError) -> Self {
        match err {
            crate::operation::delete_view::DeleteViewError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_view::DeleteViewError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_view::DeleteViewError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::delete_view::DeleteViewError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_view::DeleteViewError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::delete_view::DeleteViewError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_view::DeleteViewError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::delete_view::DeleteViewError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_view_version::DeleteViewVersionError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_view_version::DeleteViewVersionError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_view_version::DeleteViewVersionError> for Error {
    fn from(err: crate::operation::delete_view_version::DeleteViewVersionError) -> Self {
        match err {
            crate::operation::delete_view_version::DeleteViewVersionError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_view_version::DeleteViewVersionError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_view_version::DeleteViewVersionError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::delete_view_version::DeleteViewVersionError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_view_version::DeleteViewVersionError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::delete_view_version::DeleteViewVersionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_view_version::DeleteViewVersionError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::delete_view_version::DeleteViewVersionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_vocabulary::DeleteVocabularyError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_vocabulary::DeleteVocabularyError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::delete_vocabulary::DeleteVocabularyError> for Error {
    fn from(err: crate::operation::delete_vocabulary::DeleteVocabularyError) -> Self {
        match err {
            crate::operation::delete_vocabulary::DeleteVocabularyError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_vocabulary::DeleteVocabularyError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::delete_vocabulary::DeleteVocabularyError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::delete_vocabulary::DeleteVocabularyError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::delete_vocabulary::DeleteVocabularyError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_vocabulary::DeleteVocabularyError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_vocabulary::DeleteVocabularyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_agent_status::DescribeAgentStatusError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_agent_status::DescribeAgentStatusError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_agent_status::DescribeAgentStatusError> for Error {
    fn from(err: crate::operation::describe_agent_status::DescribeAgentStatusError) -> Self {
        match err {
            crate::operation::describe_agent_status::DescribeAgentStatusError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_agent_status::DescribeAgentStatusError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_agent_status::DescribeAgentStatusError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_agent_status::DescribeAgentStatusError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_agent_status::DescribeAgentStatusError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_agent_status::DescribeAgentStatusError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_contact::DescribeContactError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_contact::DescribeContactError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_contact::DescribeContactError> for Error {
    fn from(err: crate::operation::describe_contact::DescribeContactError) -> Self {
        match err {
            crate::operation::describe_contact::DescribeContactError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::describe_contact::DescribeContactError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::describe_contact::DescribeContactError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::describe_contact::DescribeContactError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::describe_contact::DescribeContactError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_contact::DescribeContactError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_contact_evaluation::DescribeContactEvaluationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_contact_evaluation::DescribeContactEvaluationError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_contact_evaluation::DescribeContactEvaluationError> for Error {
    fn from(err: crate::operation::describe_contact_evaluation::DescribeContactEvaluationError) -> Self {
        match err {
            crate::operation::describe_contact_evaluation::DescribeContactEvaluationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_contact_evaluation::DescribeContactEvaluationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_contact_evaluation::DescribeContactEvaluationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_contact_evaluation::DescribeContactEvaluationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::describe_contact_evaluation::DescribeContactEvaluationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_contact_flow::DescribeContactFlowError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_contact_flow::DescribeContactFlowError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_contact_flow::DescribeContactFlowError> for Error {
    fn from(err: crate::operation::describe_contact_flow::DescribeContactFlowError) -> Self {
        match err {
            crate::operation::describe_contact_flow::DescribeContactFlowError::ContactFlowNotPublishedException(inner) => {
                Error::ContactFlowNotPublishedException(inner)
            }
            crate::operation::describe_contact_flow::DescribeContactFlowError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_contact_flow::DescribeContactFlowError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_contact_flow::DescribeContactFlowError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_contact_flow::DescribeContactFlowError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_contact_flow::DescribeContactFlowError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_contact_flow::DescribeContactFlowError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError> for Error {
    fn from(err: crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError) -> Self {
        match err {
            crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::describe_contact_flow_module::DescribeContactFlowModuleError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_evaluation_form::DescribeEvaluationFormError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_evaluation_form::DescribeEvaluationFormError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_evaluation_form::DescribeEvaluationFormError> for Error {
    fn from(err: crate::operation::describe_evaluation_form::DescribeEvaluationFormError) -> Self {
        match err {
            crate::operation::describe_evaluation_form::DescribeEvaluationFormError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_evaluation_form::DescribeEvaluationFormError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_evaluation_form::DescribeEvaluationFormError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_evaluation_form::DescribeEvaluationFormError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_evaluation_form::DescribeEvaluationFormError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError> for Error {
    fn from(err: crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError) -> Self {
        match err {
            crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::describe_hours_of_operation::DescribeHoursOfOperationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_instance::DescribeInstanceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_instance::DescribeInstanceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_instance::DescribeInstanceError> for Error {
    fn from(err: crate::operation::describe_instance::DescribeInstanceError) -> Self {
        match err {
            crate::operation::describe_instance::DescribeInstanceError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::describe_instance::DescribeInstanceError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::describe_instance::DescribeInstanceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::describe_instance::DescribeInstanceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_instance_attribute::DescribeInstanceAttributeError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_instance_attribute::DescribeInstanceAttributeError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_instance_attribute::DescribeInstanceAttributeError> for Error {
    fn from(err: crate::operation::describe_instance_attribute::DescribeInstanceAttributeError) -> Self {
        match err {
            crate::operation::describe_instance_attribute::DescribeInstanceAttributeError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_instance_attribute::DescribeInstanceAttributeError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_instance_attribute::DescribeInstanceAttributeError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_instance_attribute::DescribeInstanceAttributeError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_instance_attribute::DescribeInstanceAttributeError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::describe_instance_attribute::DescribeInstanceAttributeError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError, R>,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError> for Error {
    fn from(err: crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError) -> Self {
        match err {
            crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_phone_number::DescribePhoneNumberError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_phone_number::DescribePhoneNumberError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_phone_number::DescribePhoneNumberError> for Error {
    fn from(err: crate::operation::describe_phone_number::DescribePhoneNumberError) -> Self {
        match err {
            crate::operation::describe_phone_number::DescribePhoneNumberError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::describe_phone_number::DescribePhoneNumberError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_phone_number::DescribePhoneNumberError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_phone_number::DescribePhoneNumberError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_phone_number::DescribePhoneNumberError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_phone_number::DescribePhoneNumberError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_prompt::DescribePromptError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_prompt::DescribePromptError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_prompt::DescribePromptError> for Error {
    fn from(err: crate::operation::describe_prompt::DescribePromptError) -> Self {
        match err {
            crate::operation::describe_prompt::DescribePromptError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::describe_prompt::DescribePromptError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::describe_prompt::DescribePromptError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::describe_prompt::DescribePromptError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::describe_prompt::DescribePromptError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_prompt::DescribePromptError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_queue::DescribeQueueError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_queue::DescribeQueueError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_queue::DescribeQueueError> for Error {
    fn from(err: crate::operation::describe_queue::DescribeQueueError) -> Self {
        match err {
            crate::operation::describe_queue::DescribeQueueError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::describe_queue::DescribeQueueError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::describe_queue::DescribeQueueError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::describe_queue::DescribeQueueError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::describe_queue::DescribeQueueError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_queue::DescribeQueueError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_quick_connect::DescribeQuickConnectError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_quick_connect::DescribeQuickConnectError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_quick_connect::DescribeQuickConnectError> for Error {
    fn from(err: crate::operation::describe_quick_connect::DescribeQuickConnectError) -> Self {
        match err {
            crate::operation::describe_quick_connect::DescribeQuickConnectError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_quick_connect::DescribeQuickConnectError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_quick_connect::DescribeQuickConnectError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_quick_connect::DescribeQuickConnectError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_quick_connect::DescribeQuickConnectError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_quick_connect::DescribeQuickConnectError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_routing_profile::DescribeRoutingProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_routing_profile::DescribeRoutingProfileError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_routing_profile::DescribeRoutingProfileError> for Error {
    fn from(err: crate::operation::describe_routing_profile::DescribeRoutingProfileError) -> Self {
        match err {
            crate::operation::describe_routing_profile::DescribeRoutingProfileError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_routing_profile::DescribeRoutingProfileError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_routing_profile::DescribeRoutingProfileError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_routing_profile::DescribeRoutingProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_routing_profile::DescribeRoutingProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_routing_profile::DescribeRoutingProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_rule::DescribeRuleError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_rule::DescribeRuleError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_rule::DescribeRuleError> for Error {
    fn from(err: crate::operation::describe_rule::DescribeRuleError) -> Self {
        match err {
            crate::operation::describe_rule::DescribeRuleError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::describe_rule::DescribeRuleError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::describe_rule::DescribeRuleError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::describe_rule::DescribeRuleError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::describe_rule::DescribeRuleError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_rule::DescribeRuleError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_security_profile::DescribeSecurityProfileError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_security_profile::DescribeSecurityProfileError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_security_profile::DescribeSecurityProfileError> for Error {
    fn from(err: crate::operation::describe_security_profile::DescribeSecurityProfileError) -> Self {
        match err {
            crate::operation::describe_security_profile::DescribeSecurityProfileError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_security_profile::DescribeSecurityProfileError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_security_profile::DescribeSecurityProfileError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_security_profile::DescribeSecurityProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_security_profile::DescribeSecurityProfileError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::describe_security_profile::DescribeSecurityProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError> for Error {
    fn from(err: crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError) -> Self {
        match err {
            crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::describe_traffic_distribution_group::DescribeTrafficDistributionGroupError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_user::DescribeUserError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_user::DescribeUserError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_user::DescribeUserError> for Error {
    fn from(err: crate::operation::describe_user::DescribeUserError) -> Self {
        match err {
            crate::operation::describe_user::DescribeUserError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::describe_user::DescribeUserError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::describe_user::DescribeUserError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::describe_user::DescribeUserError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::describe_user::DescribeUserError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_user::DescribeUserError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError> for Error {
    fn from(err: crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError) -> Self {
        match err {
            crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::describe_user_hierarchy_group::DescribeUserHierarchyGroupError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError> for Error {
    fn from(err: crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError) -> Self {
        match err {
            crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::describe_user_hierarchy_structure::DescribeUserHierarchyStructureError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_view::DescribeViewError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_view::DescribeViewError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_view::DescribeViewError> for Error {
    fn from(err: crate::operation::describe_view::DescribeViewError) -> Self {
        match err {
            crate::operation::describe_view::DescribeViewError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::describe_view::DescribeViewError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::describe_view::DescribeViewError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::describe_view::DescribeViewError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::describe_view::DescribeViewError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::describe_view::DescribeViewError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::describe_view::DescribeViewError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_vocabulary::DescribeVocabularyError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::describe_vocabulary::DescribeVocabularyError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::describe_vocabulary::DescribeVocabularyError> for Error {
    fn from(err: crate::operation::describe_vocabulary::DescribeVocabularyError) -> Self {
        match err {
            crate::operation::describe_vocabulary::DescribeVocabularyError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::describe_vocabulary::DescribeVocabularyError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::describe_vocabulary::DescribeVocabularyError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::describe_vocabulary::DescribeVocabularyError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::describe_vocabulary::DescribeVocabularyError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::describe_vocabulary::DescribeVocabularyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError> for Error {
    fn from(err: crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError) -> Self {
        match err {
            crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::disassociate_approved_origin::DisassociateApprovedOriginError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_bot::DisassociateBotError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_bot::DisassociateBotError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_bot::DisassociateBotError> for Error {
    fn from(err: crate::operation::disassociate_bot::DisassociateBotError) -> Self {
        match err {
            crate::operation::disassociate_bot::DisassociateBotError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::disassociate_bot::DisassociateBotError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::disassociate_bot::DisassociateBotError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::disassociate_bot::DisassociateBotError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::disassociate_bot::DisassociateBotError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError> for Error {
    fn from(err: crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError) -> Self {
        match err {
            crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::disassociate_instance_storage_config::DisassociateInstanceStorageConfigError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError> for Error {
    fn from(err: crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError) -> Self {
        match err {
            crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::disassociate_lambda_function::DisassociateLambdaFunctionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_lex_bot::DisassociateLexBotError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_lex_bot::DisassociateLexBotError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_lex_bot::DisassociateLexBotError> for Error {
    fn from(err: crate::operation::disassociate_lex_bot::DisassociateLexBotError) -> Self {
        match err {
            crate::operation::disassociate_lex_bot::DisassociateLexBotError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::disassociate_lex_bot::DisassociateLexBotError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::disassociate_lex_bot::DisassociateLexBotError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::disassociate_lex_bot::DisassociateLexBotError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::disassociate_lex_bot::DisassociateLexBotError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::disassociate_lex_bot::DisassociateLexBotError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError> for Error {
    fn from(err: crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError) -> Self {
        match err {
            crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::disassociate_phone_number_contact_flow::DisassociatePhoneNumberContactFlowError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError> for Error {
    fn from(err: crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError) -> Self {
        match err {
            crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::disassociate_queue_quick_connects::DisassociateQueueQuickConnectsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError> for Error {
    fn from(err: crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError) -> Self {
        match err {
            crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_security_key::DisassociateSecurityKeyError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::disassociate_security_key::DisassociateSecurityKeyError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_security_key::DisassociateSecurityKeyError> for Error {
    fn from(err: crate::operation::disassociate_security_key::DisassociateSecurityKeyError) -> Self {
        match err {
            crate::operation::disassociate_security_key::DisassociateSecurityKeyError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::disassociate_security_key::DisassociateSecurityKeyError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::disassociate_security_key::DisassociateSecurityKeyError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::disassociate_security_key::DisassociateSecurityKeyError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::disassociate_security_key::DisassociateSecurityKeyError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::disassociate_security_key::DisassociateSecurityKeyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError> for Error {
    fn from(err: crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError) -> Self {
        match err {
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError::ResourceConflictException(inner) => Error::ResourceConflictException(inner),
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::dismiss_user_contact::DismissUserContactError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::dismiss_user_contact::DismissUserContactError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::dismiss_user_contact::DismissUserContactError> for Error {
    fn from(err: crate::operation::dismiss_user_contact::DismissUserContactError) -> Self {
        match err {
            crate::operation::dismiss_user_contact::DismissUserContactError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::dismiss_user_contact::DismissUserContactError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::dismiss_user_contact::DismissUserContactError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::dismiss_user_contact::DismissUserContactError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::dismiss_user_contact::DismissUserContactError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::dismiss_user_contact::DismissUserContactError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::dismiss_user_contact::DismissUserContactError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_contact_attributes::GetContactAttributesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_contact_attributes::GetContactAttributesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_contact_attributes::GetContactAttributesError> for Error {
    fn from(err: crate::operation::get_contact_attributes::GetContactAttributesError) -> Self {
        match err {
            crate::operation::get_contact_attributes::GetContactAttributesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::get_contact_attributes::GetContactAttributesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::get_contact_attributes::GetContactAttributesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_contact_attributes::GetContactAttributesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_current_metric_data::GetCurrentMetricDataError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_current_metric_data::GetCurrentMetricDataError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_current_metric_data::GetCurrentMetricDataError> for Error {
    fn from(err: crate::operation::get_current_metric_data::GetCurrentMetricDataError) -> Self {
        match err {
            crate::operation::get_current_metric_data::GetCurrentMetricDataError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::get_current_metric_data::GetCurrentMetricDataError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::get_current_metric_data::GetCurrentMetricDataError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::get_current_metric_data::GetCurrentMetricDataError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_current_metric_data::GetCurrentMetricDataError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_current_metric_data::GetCurrentMetricDataError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_current_user_data::GetCurrentUserDataError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_current_user_data::GetCurrentUserDataError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_current_user_data::GetCurrentUserDataError> for Error {
    fn from(err: crate::operation::get_current_user_data::GetCurrentUserDataError) -> Self {
        match err {
            crate::operation::get_current_user_data::GetCurrentUserDataError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::get_current_user_data::GetCurrentUserDataError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::get_current_user_data::GetCurrentUserDataError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::get_current_user_data::GetCurrentUserDataError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_current_user_data::GetCurrentUserDataError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_current_user_data::GetCurrentUserDataError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_federation_token::GetFederationTokenError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_federation_token::GetFederationTokenError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_federation_token::GetFederationTokenError> for Error {
    fn from(err: crate::operation::get_federation_token::GetFederationTokenError) -> Self {
        match err {
            crate::operation::get_federation_token::GetFederationTokenError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::get_federation_token::GetFederationTokenError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::get_federation_token::GetFederationTokenError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::get_federation_token::GetFederationTokenError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::get_federation_token::GetFederationTokenError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_federation_token::GetFederationTokenError::UserNotFoundException(inner) => Error::UserNotFoundException(inner),
            crate::operation::get_federation_token::GetFederationTokenError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_metric_data::GetMetricDataError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_metric_data::GetMetricDataError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_metric_data::GetMetricDataError> for Error {
    fn from(err: crate::operation::get_metric_data::GetMetricDataError) -> Self {
        match err {
            crate::operation::get_metric_data::GetMetricDataError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::get_metric_data::GetMetricDataError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::get_metric_data::GetMetricDataError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::get_metric_data::GetMetricDataError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_metric_data::GetMetricDataError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_metric_data::GetMetricDataError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_metric_data_v2::GetMetricDataV2Error, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_metric_data_v2::GetMetricDataV2Error, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_metric_data_v2::GetMetricDataV2Error> for Error {
    fn from(err: crate::operation::get_metric_data_v2::GetMetricDataV2Error) -> Self {
        match err {
            crate::operation::get_metric_data_v2::GetMetricDataV2Error::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::get_metric_data_v2::GetMetricDataV2Error::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::get_metric_data_v2::GetMetricDataV2Error::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::get_metric_data_v2::GetMetricDataV2Error::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_metric_data_v2::GetMetricDataV2Error::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_metric_data_v2::GetMetricDataV2Error::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_prompt_file::GetPromptFileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_prompt_file::GetPromptFileError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_prompt_file::GetPromptFileError> for Error {
    fn from(err: crate::operation::get_prompt_file::GetPromptFileError) -> Self {
        match err {
            crate::operation::get_prompt_file::GetPromptFileError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::get_prompt_file::GetPromptFileError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::get_prompt_file::GetPromptFileError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::get_prompt_file::GetPromptFileError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_prompt_file::GetPromptFileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_prompt_file::GetPromptFileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_task_template::GetTaskTemplateError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_task_template::GetTaskTemplateError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_task_template::GetTaskTemplateError> for Error {
    fn from(err: crate::operation::get_task_template::GetTaskTemplateError) -> Self {
        match err {
            crate::operation::get_task_template::GetTaskTemplateError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::get_task_template::GetTaskTemplateError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::get_task_template::GetTaskTemplateError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::get_task_template::GetTaskTemplateError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_task_template::GetTaskTemplateError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_task_template::GetTaskTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_traffic_distribution::GetTrafficDistributionError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_traffic_distribution::GetTrafficDistributionError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::get_traffic_distribution::GetTrafficDistributionError> for Error {
    fn from(err: crate::operation::get_traffic_distribution::GetTrafficDistributionError) -> Self {
        match err {
            crate::operation::get_traffic_distribution::GetTrafficDistributionError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_traffic_distribution::GetTrafficDistributionError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::get_traffic_distribution::GetTrafficDistributionError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::get_traffic_distribution::GetTrafficDistributionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_traffic_distribution::GetTrafficDistributionError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_traffic_distribution::GetTrafficDistributionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_agent_statuses::ListAgentStatusesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_agent_statuses::ListAgentStatusesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_agent_statuses::ListAgentStatusesError> for Error {
    fn from(err: crate::operation::list_agent_statuses::ListAgentStatusesError) -> Self {
        match err {
            crate::operation::list_agent_statuses::ListAgentStatusesError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_agent_statuses::ListAgentStatusesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_agent_statuses::ListAgentStatusesError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_agent_statuses::ListAgentStatusesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_agent_statuses::ListAgentStatusesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_agent_statuses::ListAgentStatusesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_approved_origins::ListApprovedOriginsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_approved_origins::ListApprovedOriginsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_approved_origins::ListApprovedOriginsError> for Error {
    fn from(err: crate::operation::list_approved_origins::ListApprovedOriginsError) -> Self {
        match err {
            crate::operation::list_approved_origins::ListApprovedOriginsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_approved_origins::ListApprovedOriginsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_approved_origins::ListApprovedOriginsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_approved_origins::ListApprovedOriginsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_approved_origins::ListApprovedOriginsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_approved_origins::ListApprovedOriginsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_bots::ListBotsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_bots::ListBotsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_bots::ListBotsError> for Error {
    fn from(err: crate::operation::list_bots::ListBotsError) -> Self {
        match err {
            crate::operation::list_bots::ListBotsError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_bots::ListBotsError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_bots::ListBotsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_bots::ListBotsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_bots::ListBotsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_contact_evaluations::ListContactEvaluationsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_contact_evaluations::ListContactEvaluationsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_contact_evaluations::ListContactEvaluationsError> for Error {
    fn from(err: crate::operation::list_contact_evaluations::ListContactEvaluationsError) -> Self {
        match err {
            crate::operation::list_contact_evaluations::ListContactEvaluationsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_contact_evaluations::ListContactEvaluationsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_contact_evaluations::ListContactEvaluationsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_contact_evaluations::ListContactEvaluationsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_contact_evaluations::ListContactEvaluationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_contact_flow_modules::ListContactFlowModulesError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_contact_flow_modules::ListContactFlowModulesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_contact_flow_modules::ListContactFlowModulesError> for Error {
    fn from(err: crate::operation::list_contact_flow_modules::ListContactFlowModulesError) -> Self {
        match err {
            crate::operation::list_contact_flow_modules::ListContactFlowModulesError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_contact_flow_modules::ListContactFlowModulesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_contact_flow_modules::ListContactFlowModulesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_contact_flow_modules::ListContactFlowModulesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_contact_flow_modules::ListContactFlowModulesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_contact_flow_modules::ListContactFlowModulesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_contact_flow_modules::ListContactFlowModulesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_contact_flows::ListContactFlowsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_contact_flows::ListContactFlowsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_contact_flows::ListContactFlowsError> for Error {
    fn from(err: crate::operation::list_contact_flows::ListContactFlowsError) -> Self {
        match err {
            crate::operation::list_contact_flows::ListContactFlowsError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_contact_flows::ListContactFlowsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::list_contact_flows::ListContactFlowsError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_contact_flows::ListContactFlowsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_contact_flows::ListContactFlowsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_contact_flows::ListContactFlowsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_contact_references::ListContactReferencesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_contact_references::ListContactReferencesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_contact_references::ListContactReferencesError> for Error {
    fn from(err: crate::operation::list_contact_references::ListContactReferencesError) -> Self {
        match err {
            crate::operation::list_contact_references::ListContactReferencesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_contact_references::ListContactReferencesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_contact_references::ListContactReferencesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_contact_references::ListContactReferencesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_contact_references::ListContactReferencesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_contact_references::ListContactReferencesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_default_vocabularies::ListDefaultVocabulariesError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_default_vocabularies::ListDefaultVocabulariesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_default_vocabularies::ListDefaultVocabulariesError> for Error {
    fn from(err: crate::operation::list_default_vocabularies::ListDefaultVocabulariesError) -> Self {
        match err {
            crate::operation::list_default_vocabularies::ListDefaultVocabulariesError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_default_vocabularies::ListDefaultVocabulariesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_default_vocabularies::ListDefaultVocabulariesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_default_vocabularies::ListDefaultVocabulariesError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_default_vocabularies::ListDefaultVocabulariesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_evaluation_forms::ListEvaluationFormsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_evaluation_forms::ListEvaluationFormsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_evaluation_forms::ListEvaluationFormsError> for Error {
    fn from(err: crate::operation::list_evaluation_forms::ListEvaluationFormsError) -> Self {
        match err {
            crate::operation::list_evaluation_forms::ListEvaluationFormsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_evaluation_forms::ListEvaluationFormsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_evaluation_forms::ListEvaluationFormsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_evaluation_forms::ListEvaluationFormsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_evaluation_forms::ListEvaluationFormsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError> for Error {
    fn from(err: crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError) -> Self {
        match err {
            crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_evaluation_form_versions::ListEvaluationFormVersionsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_hours_of_operations::ListHoursOfOperationsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_hours_of_operations::ListHoursOfOperationsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_hours_of_operations::ListHoursOfOperationsError> for Error {
    fn from(err: crate::operation::list_hours_of_operations::ListHoursOfOperationsError) -> Self {
        match err {
            crate::operation::list_hours_of_operations::ListHoursOfOperationsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_hours_of_operations::ListHoursOfOperationsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_hours_of_operations::ListHoursOfOperationsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_hours_of_operations::ListHoursOfOperationsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_hours_of_operations::ListHoursOfOperationsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_hours_of_operations::ListHoursOfOperationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_instance_attributes::ListInstanceAttributesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_instance_attributes::ListInstanceAttributesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_instance_attributes::ListInstanceAttributesError> for Error {
    fn from(err: crate::operation::list_instance_attributes::ListInstanceAttributesError) -> Self {
        match err {
            crate::operation::list_instance_attributes::ListInstanceAttributesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_instance_attributes::ListInstanceAttributesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_instance_attributes::ListInstanceAttributesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_instance_attributes::ListInstanceAttributesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_instance_attributes::ListInstanceAttributesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_instance_attributes::ListInstanceAttributesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_instances::ListInstancesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_instances::ListInstancesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_instances::ListInstancesError> for Error {
    fn from(err: crate::operation::list_instances::ListInstancesError) -> Self {
        match err {
            crate::operation::list_instances::ListInstancesError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_instances::ListInstancesError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_instances::ListInstancesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError> for Error {
    fn from(err: crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError) -> Self {
        match err {
            crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_instance_storage_configs::ListInstanceStorageConfigsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_integration_associations::ListIntegrationAssociationsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_integration_associations::ListIntegrationAssociationsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_integration_associations::ListIntegrationAssociationsError> for Error {
    fn from(err: crate::operation::list_integration_associations::ListIntegrationAssociationsError) -> Self {
        match err {
            crate::operation::list_integration_associations::ListIntegrationAssociationsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_integration_associations::ListIntegrationAssociationsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_integration_associations::ListIntegrationAssociationsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_integration_associations::ListIntegrationAssociationsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_integration_associations::ListIntegrationAssociationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_lambda_functions::ListLambdaFunctionsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_lambda_functions::ListLambdaFunctionsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_lambda_functions::ListLambdaFunctionsError> for Error {
    fn from(err: crate::operation::list_lambda_functions::ListLambdaFunctionsError) -> Self {
        match err {
            crate::operation::list_lambda_functions::ListLambdaFunctionsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_lambda_functions::ListLambdaFunctionsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_lambda_functions::ListLambdaFunctionsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_lambda_functions::ListLambdaFunctionsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_lambda_functions::ListLambdaFunctionsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_lambda_functions::ListLambdaFunctionsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_lex_bots::ListLexBotsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_lex_bots::ListLexBotsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_lex_bots::ListLexBotsError> for Error {
    fn from(err: crate::operation::list_lex_bots::ListLexBotsError) -> Self {
        match err {
            crate::operation::list_lex_bots::ListLexBotsError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_lex_bots::ListLexBotsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::list_lex_bots::ListLexBotsError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_lex_bots::ListLexBotsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_lex_bots::ListLexBotsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_lex_bots::ListLexBotsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_phone_numbers::ListPhoneNumbersError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_phone_numbers::ListPhoneNumbersError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_phone_numbers::ListPhoneNumbersError> for Error {
    fn from(err: crate::operation::list_phone_numbers::ListPhoneNumbersError) -> Self {
        match err {
            crate::operation::list_phone_numbers::ListPhoneNumbersError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_phone_numbers::ListPhoneNumbersError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::list_phone_numbers::ListPhoneNumbersError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_phone_numbers::ListPhoneNumbersError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_phone_numbers::ListPhoneNumbersError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_phone_numbers::ListPhoneNumbersError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error> for Error {
    fn from(err: crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error) -> Self {
        match err {
            crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_prompts::ListPromptsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_prompts::ListPromptsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_prompts::ListPromptsError> for Error {
    fn from(err: crate::operation::list_prompts::ListPromptsError) -> Self {
        match err {
            crate::operation::list_prompts::ListPromptsError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_prompts::ListPromptsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::list_prompts::ListPromptsError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_prompts::ListPromptsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_prompts::ListPromptsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_prompts::ListPromptsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError> for Error {
    fn from(err: crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError) -> Self {
        match err {
            crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_queue_quick_connects::ListQueueQuickConnectsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_queues::ListQueuesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_queues::ListQueuesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_queues::ListQueuesError> for Error {
    fn from(err: crate::operation::list_queues::ListQueuesError) -> Self {
        match err {
            crate::operation::list_queues::ListQueuesError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_queues::ListQueuesError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::list_queues::ListQueuesError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_queues::ListQueuesError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_queues::ListQueuesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_queues::ListQueuesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_quick_connects::ListQuickConnectsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_quick_connects::ListQuickConnectsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_quick_connects::ListQuickConnectsError> for Error {
    fn from(err: crate::operation::list_quick_connects::ListQuickConnectsError) -> Self {
        match err {
            crate::operation::list_quick_connects::ListQuickConnectsError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_quick_connects::ListQuickConnectsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_quick_connects::ListQuickConnectsError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_quick_connects::ListQuickConnectsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_quick_connects::ListQuickConnectsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_quick_connects::ListQuickConnectsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError> for Error {
    fn from(err: crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError) -> Self {
        match err {
            crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_routing_profile_queues::ListRoutingProfileQueuesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_routing_profiles::ListRoutingProfilesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_routing_profiles::ListRoutingProfilesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_routing_profiles::ListRoutingProfilesError> for Error {
    fn from(err: crate::operation::list_routing_profiles::ListRoutingProfilesError) -> Self {
        match err {
            crate::operation::list_routing_profiles::ListRoutingProfilesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_routing_profiles::ListRoutingProfilesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_routing_profiles::ListRoutingProfilesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_routing_profiles::ListRoutingProfilesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_routing_profiles::ListRoutingProfilesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_routing_profiles::ListRoutingProfilesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_rules::ListRulesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_rules::ListRulesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_rules::ListRulesError> for Error {
    fn from(err: crate::operation::list_rules::ListRulesError) -> Self {
        match err {
            crate::operation::list_rules::ListRulesError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_rules::ListRulesError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_rules::ListRulesError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_rules::ListRulesError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_rules::ListRulesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_rules::ListRulesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_security_keys::ListSecurityKeysError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_security_keys::ListSecurityKeysError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_security_keys::ListSecurityKeysError> for Error {
    fn from(err: crate::operation::list_security_keys::ListSecurityKeysError) -> Self {
        match err {
            crate::operation::list_security_keys::ListSecurityKeysError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_security_keys::ListSecurityKeysError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::list_security_keys::ListSecurityKeysError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_security_keys::ListSecurityKeysError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_security_keys::ListSecurityKeysError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_security_keys::ListSecurityKeysError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError> for Error {
    fn from(err: crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError) -> Self {
        match err {
            crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_security_profile_applications::ListSecurityProfileApplicationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError> for Error {
    fn from(err: crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError) -> Self {
        match err {
            crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_security_profile_permissions::ListSecurityProfilePermissionsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_security_profiles::ListSecurityProfilesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_security_profiles::ListSecurityProfilesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_security_profiles::ListSecurityProfilesError> for Error {
    fn from(err: crate::operation::list_security_profiles::ListSecurityProfilesError) -> Self {
        match err {
            crate::operation::list_security_profiles::ListSecurityProfilesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_security_profiles::ListSecurityProfilesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_security_profiles::ListSecurityProfilesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_security_profiles::ListSecurityProfilesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_security_profiles::ListSecurityProfilesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_security_profiles::ListSecurityProfilesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_tags_for_resource::ListTagsForResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_tags_for_resource::ListTagsForResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_tags_for_resource::ListTagsForResourceError> for Error {
    fn from(err: crate::operation::list_tags_for_resource::ListTagsForResourceError) -> Self {
        match err {
            crate::operation::list_tags_for_resource::ListTagsForResourceError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_tags_for_resource::ListTagsForResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_task_templates::ListTaskTemplatesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_task_templates::ListTaskTemplatesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_task_templates::ListTaskTemplatesError> for Error {
    fn from(err: crate::operation::list_task_templates::ListTaskTemplatesError) -> Self {
        match err {
            crate::operation::list_task_templates::ListTaskTemplatesError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_task_templates::ListTaskTemplatesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_task_templates::ListTaskTemplatesError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_task_templates::ListTaskTemplatesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_task_templates::ListTaskTemplatesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_task_templates::ListTaskTemplatesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_traffic_distribution_groups::ListTrafficDistributionGroupsError, R>,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_traffic_distribution_groups::ListTrafficDistributionGroupsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_traffic_distribution_groups::ListTrafficDistributionGroupsError> for Error {
    fn from(err: crate::operation::list_traffic_distribution_groups::ListTrafficDistributionGroupsError) -> Self {
        match err {
            crate::operation::list_traffic_distribution_groups::ListTrafficDistributionGroupsError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_traffic_distribution_groups::ListTrafficDistributionGroupsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_traffic_distribution_groups::ListTrafficDistributionGroupsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_traffic_distribution_groups::ListTrafficDistributionGroupsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_traffic_distribution_groups::ListTrafficDistributionGroupsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError> for Error {
    fn from(err: crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError) -> Self {
        match err {
            crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_traffic_distribution_group_users::ListTrafficDistributionGroupUsersError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_use_cases::ListUseCasesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_use_cases::ListUseCasesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_use_cases::ListUseCasesError> for Error {
    fn from(err: crate::operation::list_use_cases::ListUseCasesError) -> Self {
        match err {
            crate::operation::list_use_cases::ListUseCasesError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_use_cases::ListUseCasesError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_use_cases::ListUseCasesError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_use_cases::ListUseCasesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_use_cases::ListUseCasesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError> for Error {
    fn from(err: crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError) -> Self {
        match err {
            crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_user_hierarchy_groups::ListUserHierarchyGroupsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_users::ListUsersError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_users::ListUsersError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_users::ListUsersError> for Error {
    fn from(err: crate::operation::list_users::ListUsersError) -> Self {
        match err {
            crate::operation::list_users::ListUsersError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_users::ListUsersError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::list_users::ListUsersError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_users::ListUsersError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_users::ListUsersError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_users::ListUsersError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_views::ListViewsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_views::ListViewsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_views::ListViewsError> for Error {
    fn from(err: crate::operation::list_views::ListViewsError) -> Self {
        match err {
            crate::operation::list_views::ListViewsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_views::ListViewsError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_views::ListViewsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::list_views::ListViewsError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_views::ListViewsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_views::ListViewsError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::list_views::ListViewsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_view_versions::ListViewVersionsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_view_versions::ListViewVersionsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::list_view_versions::ListViewVersionsError> for Error {
    fn from(err: crate::operation::list_view_versions::ListViewVersionsError) -> Self {
        match err {
            crate::operation::list_view_versions::ListViewVersionsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_view_versions::ListViewVersionsError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::list_view_versions::ListViewVersionsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::list_view_versions::ListViewVersionsError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::list_view_versions::ListViewVersionsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_view_versions::ListViewVersionsError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::list_view_versions::ListViewVersionsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::monitor_contact::MonitorContactError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::monitor_contact::MonitorContactError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::monitor_contact::MonitorContactError> for Error {
    fn from(err: crate::operation::monitor_contact::MonitorContactError) -> Self {
        match err {
            crate::operation::monitor_contact::MonitorContactError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::monitor_contact::MonitorContactError::IdempotencyException(inner) => Error::IdempotencyException(inner),
            crate::operation::monitor_contact::MonitorContactError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::monitor_contact::MonitorContactError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::monitor_contact::MonitorContactError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::monitor_contact::MonitorContactError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::monitor_contact::MonitorContactError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::monitor_contact::MonitorContactError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::put_user_status::PutUserStatusError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::put_user_status::PutUserStatusError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::put_user_status::PutUserStatusError> for Error {
    fn from(err: crate::operation::put_user_status::PutUserStatusError) -> Self {
        match err {
            crate::operation::put_user_status::PutUserStatusError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::put_user_status::PutUserStatusError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::put_user_status::PutUserStatusError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::put_user_status::PutUserStatusError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::put_user_status::PutUserStatusError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::put_user_status::PutUserStatusError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::put_user_status::PutUserStatusError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::release_phone_number::ReleasePhoneNumberError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::release_phone_number::ReleasePhoneNumberError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::release_phone_number::ReleasePhoneNumberError> for Error {
    fn from(err: crate::operation::release_phone_number::ReleasePhoneNumberError) -> Self {
        match err {
            crate::operation::release_phone_number::ReleasePhoneNumberError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::release_phone_number::ReleasePhoneNumberError::IdempotencyException(inner) => Error::IdempotencyException(inner),
            crate::operation::release_phone_number::ReleasePhoneNumberError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::release_phone_number::ReleasePhoneNumberError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::release_phone_number::ReleasePhoneNumberError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::release_phone_number::ReleasePhoneNumberError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::release_phone_number::ReleasePhoneNumberError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::release_phone_number::ReleasePhoneNumberError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::replicate_instance::ReplicateInstanceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::replicate_instance::ReplicateInstanceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::replicate_instance::ReplicateInstanceError> for Error {
    fn from(err: crate::operation::replicate_instance::ReplicateInstanceError) -> Self {
        match err {
            crate::operation::replicate_instance::ReplicateInstanceError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::replicate_instance::ReplicateInstanceError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::replicate_instance::ReplicateInstanceError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::replicate_instance::ReplicateInstanceError::ResourceConflictException(inner) => Error::ResourceConflictException(inner),
            crate::operation::replicate_instance::ReplicateInstanceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::replicate_instance::ReplicateInstanceError::ResourceNotReadyException(inner) => Error::ResourceNotReadyException(inner),
            crate::operation::replicate_instance::ReplicateInstanceError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::replicate_instance::ReplicateInstanceError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::replicate_instance::ReplicateInstanceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::resume_contact_recording::ResumeContactRecordingError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::resume_contact_recording::ResumeContactRecordingError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::resume_contact_recording::ResumeContactRecordingError> for Error {
    fn from(err: crate::operation::resume_contact_recording::ResumeContactRecordingError) -> Self {
        match err {
            crate::operation::resume_contact_recording::ResumeContactRecordingError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::resume_contact_recording::ResumeContactRecordingError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::resume_contact_recording::ResumeContactRecordingError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::resume_contact_recording::ResumeContactRecordingError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_available_phone_numbers::SearchAvailablePhoneNumbersError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::search_available_phone_numbers::SearchAvailablePhoneNumbersError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_available_phone_numbers::SearchAvailablePhoneNumbersError> for Error {
    fn from(err: crate::operation::search_available_phone_numbers::SearchAvailablePhoneNumbersError) -> Self {
        match err {
            crate::operation::search_available_phone_numbers::SearchAvailablePhoneNumbersError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::search_available_phone_numbers::SearchAvailablePhoneNumbersError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::search_available_phone_numbers::SearchAvailablePhoneNumbersError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::search_available_phone_numbers::SearchAvailablePhoneNumbersError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::search_available_phone_numbers::SearchAvailablePhoneNumbersError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_hours_of_operations::SearchHoursOfOperationsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_hours_of_operations::SearchHoursOfOperationsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_hours_of_operations::SearchHoursOfOperationsError> for Error {
    fn from(err: crate::operation::search_hours_of_operations::SearchHoursOfOperationsError) -> Self {
        match err {
            crate::operation::search_hours_of_operations::SearchHoursOfOperationsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::search_hours_of_operations::SearchHoursOfOperationsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::search_hours_of_operations::SearchHoursOfOperationsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::search_hours_of_operations::SearchHoursOfOperationsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::search_hours_of_operations::SearchHoursOfOperationsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::search_hours_of_operations::SearchHoursOfOperationsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_prompts::SearchPromptsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_prompts::SearchPromptsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_prompts::SearchPromptsError> for Error {
    fn from(err: crate::operation::search_prompts::SearchPromptsError) -> Self {
        match err {
            crate::operation::search_prompts::SearchPromptsError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::search_prompts::SearchPromptsError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::search_prompts::SearchPromptsError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::search_prompts::SearchPromptsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::search_prompts::SearchPromptsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::search_prompts::SearchPromptsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_queues::SearchQueuesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_queues::SearchQueuesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_queues::SearchQueuesError> for Error {
    fn from(err: crate::operation::search_queues::SearchQueuesError) -> Self {
        match err {
            crate::operation::search_queues::SearchQueuesError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::search_queues::SearchQueuesError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::search_queues::SearchQueuesError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::search_queues::SearchQueuesError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::search_queues::SearchQueuesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::search_queues::SearchQueuesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_quick_connects::SearchQuickConnectsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_quick_connects::SearchQuickConnectsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_quick_connects::SearchQuickConnectsError> for Error {
    fn from(err: crate::operation::search_quick_connects::SearchQuickConnectsError) -> Self {
        match err {
            crate::operation::search_quick_connects::SearchQuickConnectsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::search_quick_connects::SearchQuickConnectsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::search_quick_connects::SearchQuickConnectsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::search_quick_connects::SearchQuickConnectsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::search_quick_connects::SearchQuickConnectsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::search_quick_connects::SearchQuickConnectsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_resource_tags::SearchResourceTagsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_resource_tags::SearchResourceTagsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_resource_tags::SearchResourceTagsError> for Error {
    fn from(err: crate::operation::search_resource_tags::SearchResourceTagsError) -> Self {
        match err {
            crate::operation::search_resource_tags::SearchResourceTagsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::search_resource_tags::SearchResourceTagsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::search_resource_tags::SearchResourceTagsError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::search_resource_tags::SearchResourceTagsError::MaximumResultReturnedException(inner) => {
                Error::MaximumResultReturnedException(inner)
            }
            crate::operation::search_resource_tags::SearchResourceTagsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::search_resource_tags::SearchResourceTagsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::search_resource_tags::SearchResourceTagsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_routing_profiles::SearchRoutingProfilesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_routing_profiles::SearchRoutingProfilesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_routing_profiles::SearchRoutingProfilesError> for Error {
    fn from(err: crate::operation::search_routing_profiles::SearchRoutingProfilesError) -> Self {
        match err {
            crate::operation::search_routing_profiles::SearchRoutingProfilesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::search_routing_profiles::SearchRoutingProfilesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::search_routing_profiles::SearchRoutingProfilesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::search_routing_profiles::SearchRoutingProfilesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::search_routing_profiles::SearchRoutingProfilesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::search_routing_profiles::SearchRoutingProfilesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_security_profiles::SearchSecurityProfilesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_security_profiles::SearchSecurityProfilesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_security_profiles::SearchSecurityProfilesError> for Error {
    fn from(err: crate::operation::search_security_profiles::SearchSecurityProfilesError) -> Self {
        match err {
            crate::operation::search_security_profiles::SearchSecurityProfilesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::search_security_profiles::SearchSecurityProfilesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::search_security_profiles::SearchSecurityProfilesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::search_security_profiles::SearchSecurityProfilesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::search_security_profiles::SearchSecurityProfilesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::search_security_profiles::SearchSecurityProfilesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_users::SearchUsersError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_users::SearchUsersError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_users::SearchUsersError> for Error {
    fn from(err: crate::operation::search_users::SearchUsersError) -> Self {
        match err {
            crate::operation::search_users::SearchUsersError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::search_users::SearchUsersError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::search_users::SearchUsersError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::search_users::SearchUsersError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::search_users::SearchUsersError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::search_users::SearchUsersError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_vocabularies::SearchVocabulariesError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::search_vocabularies::SearchVocabulariesError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::search_vocabularies::SearchVocabulariesError> for Error {
    fn from(err: crate::operation::search_vocabularies::SearchVocabulariesError) -> Self {
        match err {
            crate::operation::search_vocabularies::SearchVocabulariesError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::search_vocabularies::SearchVocabulariesError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::search_vocabularies::SearchVocabulariesError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::search_vocabularies::SearchVocabulariesError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::search_vocabularies::SearchVocabulariesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_chat_contact::StartChatContactError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_chat_contact::StartChatContactError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_chat_contact::StartChatContactError> for Error {
    fn from(err: crate::operation::start_chat_contact::StartChatContactError) -> Self {
        match err {
            crate::operation::start_chat_contact::StartChatContactError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::start_chat_contact::StartChatContactError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::start_chat_contact::StartChatContactError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::start_chat_contact::StartChatContactError::LimitExceededException(inner) => Error::LimitExceededException(inner),
            crate::operation::start_chat_contact::StartChatContactError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::start_chat_contact::StartChatContactError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_contact_evaluation::StartContactEvaluationError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_contact_evaluation::StartContactEvaluationError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_contact_evaluation::StartContactEvaluationError> for Error {
    fn from(err: crate::operation::start_contact_evaluation::StartContactEvaluationError) -> Self {
        match err {
            crate::operation::start_contact_evaluation::StartContactEvaluationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::start_contact_evaluation::StartContactEvaluationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::start_contact_evaluation::StartContactEvaluationError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::start_contact_evaluation::StartContactEvaluationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::start_contact_evaluation::StartContactEvaluationError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::start_contact_evaluation::StartContactEvaluationError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::start_contact_evaluation::StartContactEvaluationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_contact_recording::StartContactRecordingError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_contact_recording::StartContactRecordingError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_contact_recording::StartContactRecordingError> for Error {
    fn from(err: crate::operation::start_contact_recording::StartContactRecordingError) -> Self {
        match err {
            crate::operation::start_contact_recording::StartContactRecordingError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::start_contact_recording::StartContactRecordingError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::start_contact_recording::StartContactRecordingError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::start_contact_recording::StartContactRecordingError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::start_contact_recording::StartContactRecordingError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_contact_streaming::StartContactStreamingError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_contact_streaming::StartContactStreamingError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_contact_streaming::StartContactStreamingError> for Error {
    fn from(err: crate::operation::start_contact_streaming::StartContactStreamingError) -> Self {
        match err {
            crate::operation::start_contact_streaming::StartContactStreamingError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::start_contact_streaming::StartContactStreamingError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::start_contact_streaming::StartContactStreamingError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::start_contact_streaming::StartContactStreamingError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::start_contact_streaming::StartContactStreamingError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::start_contact_streaming::StartContactStreamingError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError> for Error {
    fn from(err: crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError) -> Self {
        match err {
            crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError::DestinationNotAllowedException(inner) => {
                Error::DestinationNotAllowedException(inner)
            }
            crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError::OutboundContactNotPermittedException(inner) => {
                Error::OutboundContactNotPermittedException(inner)
            }
            crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::start_outbound_voice_contact::StartOutboundVoiceContactError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_task_contact::StartTaskContactError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::start_task_contact::StartTaskContactError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::start_task_contact::StartTaskContactError> for Error {
    fn from(err: crate::operation::start_task_contact::StartTaskContactError) -> Self {
        match err {
            crate::operation::start_task_contact::StartTaskContactError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::start_task_contact::StartTaskContactError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::start_task_contact::StartTaskContactError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::start_task_contact::StartTaskContactError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::start_task_contact::StartTaskContactError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::start_task_contact::StartTaskContactError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::start_task_contact::StartTaskContactError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_contact::StopContactError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_contact::StopContactError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::stop_contact::StopContactError> for Error {
    fn from(err: crate::operation::stop_contact::StopContactError) -> Self {
        match err {
            crate::operation::stop_contact::StopContactError::ContactNotFoundException(inner) => Error::ContactNotFoundException(inner),
            crate::operation::stop_contact::StopContactError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::stop_contact::StopContactError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::stop_contact::StopContactError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::stop_contact::StopContactError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::stop_contact::StopContactError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_contact_recording::StopContactRecordingError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_contact_recording::StopContactRecordingError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::stop_contact_recording::StopContactRecordingError> for Error {
    fn from(err: crate::operation::stop_contact_recording::StopContactRecordingError) -> Self {
        match err {
            crate::operation::stop_contact_recording::StopContactRecordingError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::stop_contact_recording::StopContactRecordingError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::stop_contact_recording::StopContactRecordingError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::stop_contact_recording::StopContactRecordingError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_contact_streaming::StopContactStreamingError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_contact_streaming::StopContactStreamingError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::stop_contact_streaming::StopContactStreamingError> for Error {
    fn from(err: crate::operation::stop_contact_streaming::StopContactStreamingError) -> Self {
        match err {
            crate::operation::stop_contact_streaming::StopContactStreamingError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::stop_contact_streaming::StopContactStreamingError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::stop_contact_streaming::StopContactStreamingError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::stop_contact_streaming::StopContactStreamingError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::stop_contact_streaming::StopContactStreamingError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::submit_contact_evaluation::SubmitContactEvaluationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::submit_contact_evaluation::SubmitContactEvaluationError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::submit_contact_evaluation::SubmitContactEvaluationError> for Error {
    fn from(err: crate::operation::submit_contact_evaluation::SubmitContactEvaluationError) -> Self {
        match err {
            crate::operation::submit_contact_evaluation::SubmitContactEvaluationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::submit_contact_evaluation::SubmitContactEvaluationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::submit_contact_evaluation::SubmitContactEvaluationError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::submit_contact_evaluation::SubmitContactEvaluationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::submit_contact_evaluation::SubmitContactEvaluationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::submit_contact_evaluation::SubmitContactEvaluationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::suspend_contact_recording::SuspendContactRecordingError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::suspend_contact_recording::SuspendContactRecordingError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::suspend_contact_recording::SuspendContactRecordingError> for Error {
    fn from(err: crate::operation::suspend_contact_recording::SuspendContactRecordingError) -> Self {
        match err {
            crate::operation::suspend_contact_recording::SuspendContactRecordingError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::suspend_contact_recording::SuspendContactRecordingError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::suspend_contact_recording::SuspendContactRecordingError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::suspend_contact_recording::SuspendContactRecordingError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::tag_resource::TagResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::tag_resource::TagResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::tag_resource::TagResourceError> for Error {
    fn from(err: crate::operation::tag_resource::TagResourceError) -> Self {
        match err {
            crate::operation::tag_resource::TagResourceError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::tag_resource::TagResourceError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::tag_resource::TagResourceError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::tag_resource::TagResourceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::tag_resource::TagResourceError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::tag_resource::TagResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::transfer_contact::TransferContactError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::transfer_contact::TransferContactError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::transfer_contact::TransferContactError> for Error {
    fn from(err: crate::operation::transfer_contact::TransferContactError) -> Self {
        match err {
            crate::operation::transfer_contact::TransferContactError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::transfer_contact::TransferContactError::IdempotencyException(inner) => Error::IdempotencyException(inner),
            crate::operation::transfer_contact::TransferContactError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::transfer_contact::TransferContactError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::transfer_contact::TransferContactError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::transfer_contact::TransferContactError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::transfer_contact::TransferContactError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::transfer_contact::TransferContactError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::untag_resource::UntagResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::untag_resource::UntagResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::untag_resource::UntagResourceError> for Error {
    fn from(err: crate::operation::untag_resource::UntagResourceError) -> Self {
        match err {
            crate::operation::untag_resource::UntagResourceError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::untag_resource::UntagResourceError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::untag_resource::UntagResourceError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::untag_resource::UntagResourceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::untag_resource::UntagResourceError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::untag_resource::UntagResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_agent_status::UpdateAgentStatusError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_agent_status::UpdateAgentStatusError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_agent_status::UpdateAgentStatusError> for Error {
    fn from(err: crate::operation::update_agent_status::UpdateAgentStatusError) -> Self {
        match err {
            crate::operation::update_agent_status::UpdateAgentStatusError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::update_agent_status::UpdateAgentStatusError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_agent_status::UpdateAgentStatusError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_agent_status::UpdateAgentStatusError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_agent_status::UpdateAgentStatusError::LimitExceededException(inner) => Error::LimitExceededException(inner),
            crate::operation::update_agent_status::UpdateAgentStatusError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_agent_status::UpdateAgentStatusError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_agent_status::UpdateAgentStatusError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact::UpdateContactError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact::UpdateContactError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_contact::UpdateContactError> for Error {
    fn from(err: crate::operation::update_contact::UpdateContactError) -> Self {
        match err {
            crate::operation::update_contact::UpdateContactError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_contact::UpdateContactError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::update_contact::UpdateContactError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_contact::UpdateContactError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::update_contact::UpdateContactError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_contact::UpdateContactError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_attributes::UpdateContactAttributesError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_attributes::UpdateContactAttributesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_contact_attributes::UpdateContactAttributesError> for Error {
    fn from(err: crate::operation::update_contact_attributes::UpdateContactAttributesError) -> Self {
        match err {
            crate::operation::update_contact_attributes::UpdateContactAttributesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_contact_attributes::UpdateContactAttributesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_contact_attributes::UpdateContactAttributesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_contact_attributes::UpdateContactAttributesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_contact_attributes::UpdateContactAttributesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_evaluation::UpdateContactEvaluationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_evaluation::UpdateContactEvaluationError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_contact_evaluation::UpdateContactEvaluationError> for Error {
    fn from(err: crate::operation::update_contact_evaluation::UpdateContactEvaluationError) -> Self {
        match err {
            crate::operation::update_contact_evaluation::UpdateContactEvaluationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_contact_evaluation::UpdateContactEvaluationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_contact_evaluation::UpdateContactEvaluationError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::update_contact_evaluation::UpdateContactEvaluationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_contact_evaluation::UpdateContactEvaluationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_contact_evaluation::UpdateContactEvaluationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_flow_content::UpdateContactFlowContentError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_flow_content::UpdateContactFlowContentError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_contact_flow_content::UpdateContactFlowContentError> for Error {
    fn from(err: crate::operation::update_contact_flow_content::UpdateContactFlowContentError) -> Self {
        match err {
            crate::operation::update_contact_flow_content::UpdateContactFlowContentError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_contact_flow_content::UpdateContactFlowContentError::InvalidContactFlowException(inner) => {
                Error::InvalidContactFlowException(inner)
            }
            crate::operation::update_contact_flow_content::UpdateContactFlowContentError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_contact_flow_content::UpdateContactFlowContentError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_contact_flow_content::UpdateContactFlowContentError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_contact_flow_content::UpdateContactFlowContentError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_contact_flow_content::UpdateContactFlowContentError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError> for Error {
    fn from(err: crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError) -> Self {
        match err {
            crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_contact_flow_metadata::UpdateContactFlowMetadataError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError> for Error {
    fn from(err: crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError) -> Self {
        match err {
            crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError::InvalidContactFlowModuleException(inner) => {
                Error::InvalidContactFlowModuleException(inner)
            }
            crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_contact_flow_module_content::UpdateContactFlowModuleContentError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError> for Error {
    fn from(err: crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError) -> Self {
        match err {
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_flow_name::UpdateContactFlowNameError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_flow_name::UpdateContactFlowNameError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_contact_flow_name::UpdateContactFlowNameError> for Error {
    fn from(err: crate::operation::update_contact_flow_name::UpdateContactFlowNameError) -> Self {
        match err {
            crate::operation::update_contact_flow_name::UpdateContactFlowNameError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::update_contact_flow_name::UpdateContactFlowNameError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_contact_flow_name::UpdateContactFlowNameError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_contact_flow_name::UpdateContactFlowNameError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_contact_flow_name::UpdateContactFlowNameError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_contact_flow_name::UpdateContactFlowNameError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_contact_flow_name::UpdateContactFlowNameError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_schedule::UpdateContactScheduleError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_contact_schedule::UpdateContactScheduleError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_contact_schedule::UpdateContactScheduleError> for Error {
    fn from(err: crate::operation::update_contact_schedule::UpdateContactScheduleError) -> Self {
        match err {
            crate::operation::update_contact_schedule::UpdateContactScheduleError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_contact_schedule::UpdateContactScheduleError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_contact_schedule::UpdateContactScheduleError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_contact_schedule::UpdateContactScheduleError::LimitExceededException(inner) => {
                Error::LimitExceededException(inner)
            }
            crate::operation::update_contact_schedule::UpdateContactScheduleError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_contact_schedule::UpdateContactScheduleError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_contact_schedule::UpdateContactScheduleError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_evaluation_form::UpdateEvaluationFormError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_evaluation_form::UpdateEvaluationFormError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_evaluation_form::UpdateEvaluationFormError> for Error {
    fn from(err: crate::operation::update_evaluation_form::UpdateEvaluationFormError) -> Self {
        match err {
            crate::operation::update_evaluation_form::UpdateEvaluationFormError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_evaluation_form::UpdateEvaluationFormError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_evaluation_form::UpdateEvaluationFormError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::update_evaluation_form::UpdateEvaluationFormError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_evaluation_form::UpdateEvaluationFormError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::update_evaluation_form::UpdateEvaluationFormError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_evaluation_form::UpdateEvaluationFormError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_hours_of_operation::UpdateHoursOfOperationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_hours_of_operation::UpdateHoursOfOperationError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_hours_of_operation::UpdateHoursOfOperationError> for Error {
    fn from(err: crate::operation::update_hours_of_operation::UpdateHoursOfOperationError) -> Self {
        match err {
            crate::operation::update_hours_of_operation::UpdateHoursOfOperationError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::update_hours_of_operation::UpdateHoursOfOperationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_hours_of_operation::UpdateHoursOfOperationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_hours_of_operation::UpdateHoursOfOperationError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_hours_of_operation::UpdateHoursOfOperationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_hours_of_operation::UpdateHoursOfOperationError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_hours_of_operation::UpdateHoursOfOperationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_instance_attribute::UpdateInstanceAttributeError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_instance_attribute::UpdateInstanceAttributeError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_instance_attribute::UpdateInstanceAttributeError> for Error {
    fn from(err: crate::operation::update_instance_attribute::UpdateInstanceAttributeError) -> Self {
        match err {
            crate::operation::update_instance_attribute::UpdateInstanceAttributeError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_instance_attribute::UpdateInstanceAttributeError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_instance_attribute::UpdateInstanceAttributeError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_instance_attribute::UpdateInstanceAttributeError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_instance_attribute::UpdateInstanceAttributeError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_instance_attribute::UpdateInstanceAttributeError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError> for Error {
    fn from(err: crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError) -> Self {
        match err {
            crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_instance_storage_config::UpdateInstanceStorageConfigError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError> for Error {
    fn from(err: crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError) -> Self {
        match err {
            crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_participant_role_config::UpdateParticipantRoleConfigError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_phone_number::UpdatePhoneNumberError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_phone_number::UpdatePhoneNumberError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_phone_number::UpdatePhoneNumberError> for Error {
    fn from(err: crate::operation::update_phone_number::UpdatePhoneNumberError) -> Self {
        match err {
            crate::operation::update_phone_number::UpdatePhoneNumberError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::update_phone_number::UpdatePhoneNumberError::IdempotencyException(inner) => Error::IdempotencyException(inner),
            crate::operation::update_phone_number::UpdatePhoneNumberError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_phone_number::UpdatePhoneNumberError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_phone_number::UpdatePhoneNumberError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::update_phone_number::UpdatePhoneNumberError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_phone_number::UpdatePhoneNumberError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_phone_number::UpdatePhoneNumberError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError> for Error {
    fn from(err: crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError) -> Self {
        match err {
            crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError::IdempotencyException(inner) => {
                Error::IdempotencyException(inner)
            }
            crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError::ResourceInUseException(inner) => {
                Error::ResourceInUseException(inner)
            }
            crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_phone_number_metadata::UpdatePhoneNumberMetadataError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_prompt::UpdatePromptError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_prompt::UpdatePromptError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_prompt::UpdatePromptError> for Error {
    fn from(err: crate::operation::update_prompt::UpdatePromptError) -> Self {
        match err {
            crate::operation::update_prompt::UpdatePromptError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_prompt::UpdatePromptError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::update_prompt::UpdatePromptError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_prompt::UpdatePromptError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::update_prompt::UpdatePromptError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_prompt::UpdatePromptError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError> for Error {
    fn from(err: crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError) -> Self {
        match err {
            crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_queue_hours_of_operation::UpdateQueueHoursOfOperationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError> for Error {
    fn from(err: crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError) -> Self {
        match err {
            crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_queue_max_contacts::UpdateQueueMaxContactsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_queue_name::UpdateQueueNameError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_queue_name::UpdateQueueNameError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_queue_name::UpdateQueueNameError> for Error {
    fn from(err: crate::operation::update_queue_name::UpdateQueueNameError) -> Self {
        match err {
            crate::operation::update_queue_name::UpdateQueueNameError::DuplicateResourceException(inner) => Error::DuplicateResourceException(inner),
            crate::operation::update_queue_name::UpdateQueueNameError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_queue_name::UpdateQueueNameError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::update_queue_name::UpdateQueueNameError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_queue_name::UpdateQueueNameError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::update_queue_name::UpdateQueueNameError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_queue_name::UpdateQueueNameError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError> for Error {
    fn from(err: crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError) -> Self {
        match err {
            crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_queue_outbound_caller_config::UpdateQueueOutboundCallerConfigError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_queue_status::UpdateQueueStatusError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_queue_status::UpdateQueueStatusError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_queue_status::UpdateQueueStatusError> for Error {
    fn from(err: crate::operation::update_queue_status::UpdateQueueStatusError) -> Self {
        match err {
            crate::operation::update_queue_status::UpdateQueueStatusError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_queue_status::UpdateQueueStatusError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_queue_status::UpdateQueueStatusError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_queue_status::UpdateQueueStatusError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_queue_status::UpdateQueueStatusError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_queue_status::UpdateQueueStatusError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError> for Error {
    fn from(err: crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError) -> Self {
        match err {
            crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_quick_connect_config::UpdateQuickConnectConfigError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_quick_connect_name::UpdateQuickConnectNameError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_quick_connect_name::UpdateQuickConnectNameError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_quick_connect_name::UpdateQuickConnectNameError> for Error {
    fn from(err: crate::operation::update_quick_connect_name::UpdateQuickConnectNameError) -> Self {
        match err {
            crate::operation::update_quick_connect_name::UpdateQuickConnectNameError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_quick_connect_name::UpdateQuickConnectNameError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_quick_connect_name::UpdateQuickConnectNameError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_quick_connect_name::UpdateQuickConnectNameError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_quick_connect_name::UpdateQuickConnectNameError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_quick_connect_name::UpdateQuickConnectNameError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError> for Error {
    fn from(err: crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError) -> Self {
        match err {
            crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_routing_profile_agent_availability_timer::UpdateRoutingProfileAgentAvailabilityTimerError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError> for Error {
    fn from(err: crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError) -> Self {
        match err {
            crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_routing_profile_concurrency::UpdateRoutingProfileConcurrencyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError> for Error {
    fn from(err: crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError) -> Self {
        match err {
            crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError::InvalidParameterException(inner) => Error::InvalidParameterException(inner),
            crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_routing_profile_default_outbound_queue::UpdateRoutingProfileDefaultOutboundQueueError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError> for Error {
    fn from(err: crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError) -> Self {
        match err {
            crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_routing_profile_name::UpdateRoutingProfileNameError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError> for Error {
    fn from(err: crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError) -> Self {
        match err {
            crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_routing_profile_queues::UpdateRoutingProfileQueuesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_rule::UpdateRuleError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_rule::UpdateRuleError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_rule::UpdateRuleError> for Error {
    fn from(err: crate::operation::update_rule::UpdateRuleError) -> Self {
        match err {
            crate::operation::update_rule::UpdateRuleError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::update_rule::UpdateRuleError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_rule::UpdateRuleError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_rule::UpdateRuleError::ResourceConflictException(inner) => Error::ResourceConflictException(inner),
            crate::operation::update_rule::UpdateRuleError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::update_rule::UpdateRuleError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_rule::UpdateRuleError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_security_profile::UpdateSecurityProfileError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_security_profile::UpdateSecurityProfileError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_security_profile::UpdateSecurityProfileError> for Error {
    fn from(err: crate::operation::update_security_profile::UpdateSecurityProfileError) -> Self {
        match err {
            crate::operation::update_security_profile::UpdateSecurityProfileError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_security_profile::UpdateSecurityProfileError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_security_profile::UpdateSecurityProfileError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_security_profile::UpdateSecurityProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_security_profile::UpdateSecurityProfileError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_security_profile::UpdateSecurityProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_task_template::UpdateTaskTemplateError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_task_template::UpdateTaskTemplateError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_task_template::UpdateTaskTemplateError> for Error {
    fn from(err: crate::operation::update_task_template::UpdateTaskTemplateError) -> Self {
        match err {
            crate::operation::update_task_template::UpdateTaskTemplateError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_task_template::UpdateTaskTemplateError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_task_template::UpdateTaskTemplateError::PropertyValidationException(inner) => {
                Error::PropertyValidationException(inner)
            }
            crate::operation::update_task_template::UpdateTaskTemplateError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_task_template::UpdateTaskTemplateError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::update_task_template::UpdateTaskTemplateError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_task_template::UpdateTaskTemplateError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_traffic_distribution::UpdateTrafficDistributionError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_traffic_distribution::UpdateTrafficDistributionError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_traffic_distribution::UpdateTrafficDistributionError> for Error {
    fn from(err: crate::operation::update_traffic_distribution::UpdateTrafficDistributionError) -> Self {
        match err {
            crate::operation::update_traffic_distribution::UpdateTrafficDistributionError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::update_traffic_distribution::UpdateTrafficDistributionError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_traffic_distribution::UpdateTrafficDistributionError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_traffic_distribution::UpdateTrafficDistributionError::ResourceConflictException(inner) => {
                Error::ResourceConflictException(inner)
            }
            crate::operation::update_traffic_distribution::UpdateTrafficDistributionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_traffic_distribution::UpdateTrafficDistributionError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_traffic_distribution::UpdateTrafficDistributionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_hierarchy::UpdateUserHierarchyError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_hierarchy::UpdateUserHierarchyError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_user_hierarchy::UpdateUserHierarchyError> for Error {
    fn from(err: crate::operation::update_user_hierarchy::UpdateUserHierarchyError) -> Self {
        match err {
            crate::operation::update_user_hierarchy::UpdateUserHierarchyError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_user_hierarchy::UpdateUserHierarchyError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_user_hierarchy::UpdateUserHierarchyError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_user_hierarchy::UpdateUserHierarchyError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_user_hierarchy::UpdateUserHierarchyError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_user_hierarchy::UpdateUserHierarchyError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError> for Error {
    fn from(err: crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError) -> Self {
        match err {
            crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_user_hierarchy_group_name::UpdateUserHierarchyGroupNameError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError> for Error {
    fn from(err: crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError) -> Self {
        match err {
            crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError::ResourceInUseException(inner) => {
                Error::ResourceInUseException(inner)
            }
            crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_user_hierarchy_structure::UpdateUserHierarchyStructureError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_identity_info::UpdateUserIdentityInfoError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_identity_info::UpdateUserIdentityInfoError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_user_identity_info::UpdateUserIdentityInfoError> for Error {
    fn from(err: crate::operation::update_user_identity_info::UpdateUserIdentityInfoError) -> Self {
        match err {
            crate::operation::update_user_identity_info::UpdateUserIdentityInfoError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_user_identity_info::UpdateUserIdentityInfoError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_user_identity_info::UpdateUserIdentityInfoError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_user_identity_info::UpdateUserIdentityInfoError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_user_identity_info::UpdateUserIdentityInfoError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_user_identity_info::UpdateUserIdentityInfoError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_phone_config::UpdateUserPhoneConfigError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_phone_config::UpdateUserPhoneConfigError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_user_phone_config::UpdateUserPhoneConfigError> for Error {
    fn from(err: crate::operation::update_user_phone_config::UpdateUserPhoneConfigError) -> Self {
        match err {
            crate::operation::update_user_phone_config::UpdateUserPhoneConfigError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_user_phone_config::UpdateUserPhoneConfigError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_user_phone_config::UpdateUserPhoneConfigError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_user_phone_config::UpdateUserPhoneConfigError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_user_phone_config::UpdateUserPhoneConfigError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_user_phone_config::UpdateUserPhoneConfigError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError> for Error {
    fn from(err: crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError) -> Self {
        match err {
            crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError> for Error {
    fn from(err: crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError) -> Self {
        match err {
            crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError::InvalidRequestException(inner) => {
                Error::InvalidRequestException(inner)
            }
            crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_user_security_profiles::UpdateUserSecurityProfilesError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_view_content::UpdateViewContentError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_view_content::UpdateViewContentError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_view_content::UpdateViewContentError> for Error {
    fn from(err: crate::operation::update_view_content::UpdateViewContentError) -> Self {
        match err {
            crate::operation::update_view_content::UpdateViewContentError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::update_view_content::UpdateViewContentError::InternalServiceException(inner) => Error::InternalServiceException(inner),
            crate::operation::update_view_content::UpdateViewContentError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_view_content::UpdateViewContentError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_view_content::UpdateViewContentError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::update_view_content::UpdateViewContentError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_view_content::UpdateViewContentError::TooManyRequestsException(inner) => Error::TooManyRequestsException(inner),
            crate::operation::update_view_content::UpdateViewContentError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_view_metadata::UpdateViewMetadataError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_view_metadata::UpdateViewMetadataError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(
                ::aws_smithy_types::error::Unhandled::builder()
                    .meta(::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone())
                    .source(err)
                    .build(),
            ),
        }
    }
}
impl From<crate::operation::update_view_metadata::UpdateViewMetadataError> for Error {
    fn from(err: crate::operation::update_view_metadata::UpdateViewMetadataError) -> Self {
        match err {
            crate::operation::update_view_metadata::UpdateViewMetadataError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::update_view_metadata::UpdateViewMetadataError::DuplicateResourceException(inner) => {
                Error::DuplicateResourceException(inner)
            }
            crate::operation::update_view_metadata::UpdateViewMetadataError::InternalServiceException(inner) => {
                Error::InternalServiceException(inner)
            }
            crate::operation::update_view_metadata::UpdateViewMetadataError::InvalidParameterException(inner) => {
                Error::InvalidParameterException(inner)
            }
            crate::operation::update_view_metadata::UpdateViewMetadataError::InvalidRequestException(inner) => Error::InvalidRequestException(inner),
            crate::operation::update_view_metadata::UpdateViewMetadataError::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
            crate::operation::update_view_metadata::UpdateViewMetadataError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_view_metadata::UpdateViewMetadataError::TooManyRequestsException(inner) => {
                Error::TooManyRequestsException(inner)
            }
            crate::operation::update_view_metadata::UpdateViewMetadataError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl ::std::error::Error for Error {
    fn source(&self) -> std::option::Option<&(dyn ::std::error::Error + 'static)> {
        match self {
            Error::AccessDeniedException(inner) => inner.source(),
            Error::ContactFlowNotPublishedException(inner) => inner.source(),
            Error::ContactNotFoundException(inner) => inner.source(),
            Error::DestinationNotAllowedException(inner) => inner.source(),
            Error::DuplicateResourceException(inner) => inner.source(),
            Error::IdempotencyException(inner) => inner.source(),
            Error::InternalServiceException(inner) => inner.source(),
            Error::InvalidContactFlowException(inner) => inner.source(),
            Error::InvalidContactFlowModuleException(inner) => inner.source(),
            Error::InvalidParameterException(inner) => inner.source(),
            Error::InvalidRequestException(inner) => inner.source(),
            Error::LimitExceededException(inner) => inner.source(),
            Error::MaximumResultReturnedException(inner) => inner.source(),
            Error::OutboundContactNotPermittedException(inner) => inner.source(),
            Error::PropertyValidationException(inner) => inner.source(),
            Error::ResourceConflictException(inner) => inner.source(),
            Error::ResourceInUseException(inner) => inner.source(),
            Error::ResourceNotFoundException(inner) => inner.source(),
            Error::ResourceNotReadyException(inner) => inner.source(),
            Error::ServiceQuotaExceededException(inner) => inner.source(),
            Error::ThrottlingException(inner) => inner.source(),
            Error::TooManyRequestsException(inner) => inner.source(),
            Error::UserNotFoundException(inner) => inner.source(),
            Error::Unhandled(inner) => inner.source(),
        }
    }
}
impl ::aws_http::request_id::RequestId for Error {
    fn request_id(&self) -> Option<&str> {
        match self {
            Self::AccessDeniedException(e) => e.request_id(),
            Self::ContactFlowNotPublishedException(e) => e.request_id(),
            Self::ContactNotFoundException(e) => e.request_id(),
            Self::DestinationNotAllowedException(e) => e.request_id(),
            Self::DuplicateResourceException(e) => e.request_id(),
            Self::IdempotencyException(e) => e.request_id(),
            Self::InternalServiceException(e) => e.request_id(),
            Self::InvalidContactFlowException(e) => e.request_id(),
            Self::InvalidContactFlowModuleException(e) => e.request_id(),
            Self::InvalidParameterException(e) => e.request_id(),
            Self::InvalidRequestException(e) => e.request_id(),
            Self::LimitExceededException(e) => e.request_id(),
            Self::MaximumResultReturnedException(e) => e.request_id(),
            Self::OutboundContactNotPermittedException(e) => e.request_id(),
            Self::PropertyValidationException(e) => e.request_id(),
            Self::ResourceConflictException(e) => e.request_id(),
            Self::ResourceInUseException(e) => e.request_id(),
            Self::ResourceNotFoundException(e) => e.request_id(),
            Self::ResourceNotReadyException(e) => e.request_id(),
            Self::ServiceQuotaExceededException(e) => e.request_id(),
            Self::ThrottlingException(e) => e.request_id(),
            Self::TooManyRequestsException(e) => e.request_id(),
            Self::UserNotFoundException(e) => e.request_id(),
            Self::Unhandled(e) => e.request_id(),
        }
    }
}
