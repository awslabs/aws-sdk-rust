// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateRoutingProfileQueuesInput {
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    #[doc(hidden)]
    pub instance_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the routing profile.</p>
    #[doc(hidden)]
    pub routing_profile_id: std::option::Option<std::string::String>,
    /// <p>The queues to disassociate from this routing profile.</p>
    #[doc(hidden)]
    pub queue_references:
        std::option::Option<std::vec::Vec<crate::types::RoutingProfileQueueReference>>,
}
impl DisassociateRoutingProfileQueuesInput {
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn instance_id(&self) -> std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The identifier of the routing profile.</p>
    pub fn routing_profile_id(&self) -> std::option::Option<&str> {
        self.routing_profile_id.as_deref()
    }
    /// <p>The queues to disassociate from this routing profile.</p>
    pub fn queue_references(
        &self,
    ) -> std::option::Option<&[crate::types::RoutingProfileQueueReference]> {
        self.queue_references.as_deref()
    }
}
impl DisassociateRoutingProfileQueuesInput {
    /// Creates a new builder-style object to manufacture [`DisassociateRoutingProfileQueuesInput`](crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesInput).
    pub fn builder() -> crate::operation::disassociate_routing_profile_queues::builders::DisassociateRoutingProfileQueuesInputBuilder{
        crate::operation::disassociate_routing_profile_queues::builders::DisassociateRoutingProfileQueuesInputBuilder::default()
    }
}

/// A builder for [`DisassociateRoutingProfileQueuesInput`](crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisassociateRoutingProfileQueuesInputBuilder {
    pub(crate) instance_id: std::option::Option<std::string::String>,
    pub(crate) routing_profile_id: std::option::Option<std::string::String>,
    pub(crate) queue_references:
        std::option::Option<std::vec::Vec<crate::types::RoutingProfileQueueReference>>,
}
impl DisassociateRoutingProfileQueuesInputBuilder {
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_id = Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn set_instance_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The identifier of the routing profile.</p>
    pub fn routing_profile_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.routing_profile_id = Some(input.into());
        self
    }
    /// <p>The identifier of the routing profile.</p>
    pub fn set_routing_profile_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.routing_profile_id = input;
        self
    }
    /// Appends an item to `queue_references`.
    ///
    /// To override the contents of this collection use [`set_queue_references`](Self::set_queue_references).
    ///
    /// <p>The queues to disassociate from this routing profile.</p>
    pub fn queue_references(mut self, input: crate::types::RoutingProfileQueueReference) -> Self {
        let mut v = self.queue_references.unwrap_or_default();
        v.push(input);
        self.queue_references = Some(v);
        self
    }
    /// <p>The queues to disassociate from this routing profile.</p>
    pub fn set_queue_references(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::RoutingProfileQueueReference>>,
    ) -> Self {
        self.queue_references = input;
        self
    }
    /// Consumes the builder and constructs a [`DisassociateRoutingProfileQueuesInput`](crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesInput).
    pub fn build(self) -> Result<crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::disassociate_routing_profile_queues::DisassociateRoutingProfileQueuesInput {
                instance_id: self.instance_id
                ,
                routing_profile_id: self.routing_profile_id
                ,
                queue_references: self.queue_references
                ,
            }
        )
    }
}
