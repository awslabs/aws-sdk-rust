// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeInstanceStorageConfigInput {
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
    pub association_id: ::std::option::Option<::std::string::String>,
    /// <p>A valid resource type.</p>
    pub resource_type: ::std::option::Option<crate::types::InstanceStorageResourceType>,
}
impl DescribeInstanceStorageConfigInput {
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
    pub fn association_id(&self) -> ::std::option::Option<&str> {
        self.association_id.as_deref()
    }
    /// <p>A valid resource type.</p>
    pub fn resource_type(&self) -> ::std::option::Option<&crate::types::InstanceStorageResourceType> {
        self.resource_type.as_ref()
    }
}
impl DescribeInstanceStorageConfigInput {
    /// Creates a new builder-style object to manufacture [`DescribeInstanceStorageConfigInput`](crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigInput).
    pub fn builder() -> crate::operation::describe_instance_storage_config::builders::DescribeInstanceStorageConfigInputBuilder {
        crate::operation::describe_instance_storage_config::builders::DescribeInstanceStorageConfigInputBuilder::default()
    }
}

/// A builder for [`DescribeInstanceStorageConfigInput`](crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeInstanceStorageConfigInputBuilder {
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) association_id: ::std::option::Option<::std::string::String>,
    pub(crate) resource_type: ::std::option::Option<crate::types::InstanceStorageResourceType>,
}
impl DescribeInstanceStorageConfigInputBuilder {
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
    /// This field is required.
    pub fn association_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.association_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
    pub fn set_association_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.association_id = input;
        self
    }
    /// <p>The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.</p>
    pub fn get_association_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.association_id
    }
    /// <p>A valid resource type.</p>
    /// This field is required.
    pub fn resource_type(mut self, input: crate::types::InstanceStorageResourceType) -> Self {
        self.resource_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>A valid resource type.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<crate::types::InstanceStorageResourceType>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>A valid resource type.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<crate::types::InstanceStorageResourceType> {
        &self.resource_type
    }
    /// Consumes the builder and constructs a [`DescribeInstanceStorageConfigInput`](crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_instance_storage_config::DescribeInstanceStorageConfigInput {
            instance_id: self.instance_id,
            association_id: self.association_id,
            resource_type: self.resource_type,
        })
    }
}
