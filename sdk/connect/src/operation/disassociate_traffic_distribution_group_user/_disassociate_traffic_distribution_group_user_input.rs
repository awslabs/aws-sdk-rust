// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DisassociateTrafficDistributionGroupUserInput {
    /// <p>The identifier of the traffic distribution group. This can be the ID or the ARN if the API is being called in the Region where the traffic distribution group was created. The ARN must be provided if the call is from the replicated Region.</p>
    pub traffic_distribution_group_id: ::std::option::Option<::std::string::String>,
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    pub user_id: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
}
impl DisassociateTrafficDistributionGroupUserInput {
    /// <p>The identifier of the traffic distribution group. This can be the ID or the ARN if the API is being called in the Region where the traffic distribution group was created. The ARN must be provided if the call is from the replicated Region.</p>
    pub fn traffic_distribution_group_id(&self) -> ::std::option::Option<&str> {
        self.traffic_distribution_group_id.as_deref()
    }
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    pub fn user_id(&self) -> ::std::option::Option<&str> {
        self.user_id.as_deref()
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
}
impl DisassociateTrafficDistributionGroupUserInput {
    /// Creates a new builder-style object to manufacture [`DisassociateTrafficDistributionGroupUserInput`](crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserInput).
    pub fn builder() -> crate::operation::disassociate_traffic_distribution_group_user::builders::DisassociateTrafficDistributionGroupUserInputBuilder
    {
        crate::operation::disassociate_traffic_distribution_group_user::builders::DisassociateTrafficDistributionGroupUserInputBuilder::default()
    }
}

/// A builder for [`DisassociateTrafficDistributionGroupUserInput`](crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DisassociateTrafficDistributionGroupUserInputBuilder {
    pub(crate) traffic_distribution_group_id: ::std::option::Option<::std::string::String>,
    pub(crate) user_id: ::std::option::Option<::std::string::String>,
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
}
impl DisassociateTrafficDistributionGroupUserInputBuilder {
    /// <p>The identifier of the traffic distribution group. This can be the ID or the ARN if the API is being called in the Region where the traffic distribution group was created. The ARN must be provided if the call is from the replicated Region.</p>
    /// This field is required.
    pub fn traffic_distribution_group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.traffic_distribution_group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the traffic distribution group. This can be the ID or the ARN if the API is being called in the Region where the traffic distribution group was created. The ARN must be provided if the call is from the replicated Region.</p>
    pub fn set_traffic_distribution_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.traffic_distribution_group_id = input;
        self
    }
    /// <p>The identifier of the traffic distribution group. This can be the ID or the ARN if the API is being called in the Region where the traffic distribution group was created. The ARN must be provided if the call is from the replicated Region.</p>
    pub fn get_traffic_distribution_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.traffic_distribution_group_id
    }
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    /// This field is required.
    pub fn user_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    pub fn set_user_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_id = input;
        self
    }
    /// <p>The identifier for the user. This can be the ID or the ARN of the user.</p>
    pub fn get_user_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_id
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// Consumes the builder and constructs a [`DisassociateTrafficDistributionGroupUserInput`](crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::disassociate_traffic_distribution_group_user::DisassociateTrafficDistributionGroupUserInput {
                traffic_distribution_group_id: self.traffic_distribution_group_id,
                user_id: self.user_id,
                instance_id: self.instance_id,
            },
        )
    }
}
