// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateSecurityProfileInput {
    /// <p>The description of the security profile.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The permissions granted to a security profile. For a list of valid permissions, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html">List of security profile permissions</a>.</p>
    #[doc(hidden)]
    pub permissions: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The identifier for the security profle.</p>
    #[doc(hidden)]
    pub security_profile_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    #[doc(hidden)]
    pub instance_id: std::option::Option<std::string::String>,
    /// <p>The list of tags that a security profile uses to restrict access to resources in Amazon Connect.</p>
    #[doc(hidden)]
    pub allowed_access_control_tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    /// <p>The list of resources that a security profile applies tag restrictions to in Amazon Connect.</p>
    #[doc(hidden)]
    pub tag_restricted_resources: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UpdateSecurityProfileInput {
    /// <p>The description of the security profile.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The permissions granted to a security profile. For a list of valid permissions, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html">List of security profile permissions</a>.</p>
    pub fn permissions(&self) -> std::option::Option<&[std::string::String]> {
        self.permissions.as_deref()
    }
    /// <p>The identifier for the security profle.</p>
    pub fn security_profile_id(&self) -> std::option::Option<&str> {
        self.security_profile_id.as_deref()
    }
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn instance_id(&self) -> std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The list of tags that a security profile uses to restrict access to resources in Amazon Connect.</p>
    pub fn allowed_access_control_tags(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.allowed_access_control_tags.as_ref()
    }
    /// <p>The list of resources that a security profile applies tag restrictions to in Amazon Connect.</p>
    pub fn tag_restricted_resources(&self) -> std::option::Option<&[std::string::String]> {
        self.tag_restricted_resources.as_deref()
    }
}
impl UpdateSecurityProfileInput {
    /// Creates a new builder-style object to manufacture [`UpdateSecurityProfileInput`](crate::operation::update_security_profile::UpdateSecurityProfileInput).
    pub fn builder(
    ) -> crate::operation::update_security_profile::builders::UpdateSecurityProfileInputBuilder
    {
        crate::operation::update_security_profile::builders::UpdateSecurityProfileInputBuilder::default()
    }
}

/// A builder for [`UpdateSecurityProfileInput`](crate::operation::update_security_profile::UpdateSecurityProfileInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateSecurityProfileInputBuilder {
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) permissions: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) security_profile_id: std::option::Option<std::string::String>,
    pub(crate) instance_id: std::option::Option<std::string::String>,
    pub(crate) allowed_access_control_tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    pub(crate) tag_restricted_resources: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UpdateSecurityProfileInputBuilder {
    /// <p>The description of the security profile.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the security profile.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Appends an item to `permissions`.
    ///
    /// To override the contents of this collection use [`set_permissions`](Self::set_permissions).
    ///
    /// <p>The permissions granted to a security profile. For a list of valid permissions, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html">List of security profile permissions</a>.</p>
    pub fn permissions(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.permissions.unwrap_or_default();
        v.push(input.into());
        self.permissions = Some(v);
        self
    }
    /// <p>The permissions granted to a security profile. For a list of valid permissions, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html">List of security profile permissions</a>.</p>
    pub fn set_permissions(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.permissions = input;
        self
    }
    /// <p>The identifier for the security profle.</p>
    pub fn security_profile_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.security_profile_id = Some(input.into());
        self
    }
    /// <p>The identifier for the security profle.</p>
    pub fn set_security_profile_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.security_profile_id = input;
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_id = Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn set_instance_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// Adds a key-value pair to `allowed_access_control_tags`.
    ///
    /// To override the contents of this collection use [`set_allowed_access_control_tags`](Self::set_allowed_access_control_tags).
    ///
    /// <p>The list of tags that a security profile uses to restrict access to resources in Amazon Connect.</p>
    pub fn allowed_access_control_tags(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.allowed_access_control_tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.allowed_access_control_tags = Some(hash_map);
        self
    }
    /// <p>The list of tags that a security profile uses to restrict access to resources in Amazon Connect.</p>
    pub fn set_allowed_access_control_tags(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.allowed_access_control_tags = input;
        self
    }
    /// Appends an item to `tag_restricted_resources`.
    ///
    /// To override the contents of this collection use [`set_tag_restricted_resources`](Self::set_tag_restricted_resources).
    ///
    /// <p>The list of resources that a security profile applies tag restrictions to in Amazon Connect.</p>
    pub fn tag_restricted_resources(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.tag_restricted_resources.unwrap_or_default();
        v.push(input.into());
        self.tag_restricted_resources = Some(v);
        self
    }
    /// <p>The list of resources that a security profile applies tag restrictions to in Amazon Connect.</p>
    pub fn set_tag_restricted_resources(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.tag_restricted_resources = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateSecurityProfileInput`](crate::operation::update_security_profile::UpdateSecurityProfileInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_security_profile::UpdateSecurityProfileInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_security_profile::UpdateSecurityProfileInput {
                description: self.description,
                permissions: self.permissions,
                security_profile_id: self.security_profile_id,
                instance_id: self.instance_id,
                allowed_access_control_tags: self.allowed_access_control_tags,
                tag_restricted_resources: self.tag_restricted_resources,
            },
        )
    }
}
