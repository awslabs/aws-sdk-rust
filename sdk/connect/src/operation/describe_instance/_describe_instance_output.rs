// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeInstanceOutput {
    /// <p>The name of the instance.</p>
    #[doc(hidden)]
    pub instance: std::option::Option<crate::types::Instance>,
    _request_id: Option<String>,
}
impl DescribeInstanceOutput {
    /// <p>The name of the instance.</p>
    pub fn instance(&self) -> std::option::Option<&crate::types::Instance> {
        self.instance.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeInstanceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeInstanceOutput {
    /// Creates a new builder-style object to manufacture [`DescribeInstanceOutput`](crate::operation::describe_instance::DescribeInstanceOutput).
    pub fn builder() -> crate::operation::describe_instance::builders::DescribeInstanceOutputBuilder
    {
        crate::operation::describe_instance::builders::DescribeInstanceOutputBuilder::default()
    }
}

/// A builder for [`DescribeInstanceOutput`](crate::operation::describe_instance::DescribeInstanceOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeInstanceOutputBuilder {
    pub(crate) instance: std::option::Option<crate::types::Instance>,
    _request_id: Option<String>,
}
impl DescribeInstanceOutputBuilder {
    /// <p>The name of the instance.</p>
    pub fn instance(mut self, input: crate::types::Instance) -> Self {
        self.instance = Some(input);
        self
    }
    /// <p>The name of the instance.</p>
    pub fn set_instance(mut self, input: std::option::Option<crate::types::Instance>) -> Self {
        self.instance = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeInstanceOutput`](crate::operation::describe_instance::DescribeInstanceOutput).
    pub fn build(self) -> crate::operation::describe_instance::DescribeInstanceOutput {
        crate::operation::describe_instance::DescribeInstanceOutput {
            instance: self.instance,
            _request_id: self._request_id,
        }
    }
}
