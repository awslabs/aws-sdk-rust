// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateParticipantRoleConfigInput {
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    #[doc(hidden)]
    pub instance_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the contact in this instance of Amazon Connect. </p>
    #[doc(hidden)]
    pub contact_id: std::option::Option<std::string::String>,
    /// <p>The Amazon Connect channel you want to configure.</p>
    #[doc(hidden)]
    pub channel_configuration:
        std::option::Option<crate::types::UpdateParticipantRoleConfigChannelInfo>,
}
impl UpdateParticipantRoleConfigInput {
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn instance_id(&self) -> std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The identifier of the contact in this instance of Amazon Connect. </p>
    pub fn contact_id(&self) -> std::option::Option<&str> {
        self.contact_id.as_deref()
    }
    /// <p>The Amazon Connect channel you want to configure.</p>
    pub fn channel_configuration(
        &self,
    ) -> std::option::Option<&crate::types::UpdateParticipantRoleConfigChannelInfo> {
        self.channel_configuration.as_ref()
    }
}
impl UpdateParticipantRoleConfigInput {
    /// Creates a new builder-style object to manufacture [`UpdateParticipantRoleConfigInput`](crate::operation::update_participant_role_config::UpdateParticipantRoleConfigInput).
    pub fn builder() -> crate::operation::update_participant_role_config::builders::UpdateParticipantRoleConfigInputBuilder{
        crate::operation::update_participant_role_config::builders::UpdateParticipantRoleConfigInputBuilder::default()
    }
}

/// A builder for [`UpdateParticipantRoleConfigInput`](crate::operation::update_participant_role_config::UpdateParticipantRoleConfigInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateParticipantRoleConfigInputBuilder {
    pub(crate) instance_id: std::option::Option<std::string::String>,
    pub(crate) contact_id: std::option::Option<std::string::String>,
    pub(crate) channel_configuration:
        std::option::Option<crate::types::UpdateParticipantRoleConfigChannelInfo>,
}
impl UpdateParticipantRoleConfigInputBuilder {
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_id = Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn set_instance_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The identifier of the contact in this instance of Amazon Connect. </p>
    pub fn contact_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.contact_id = Some(input.into());
        self
    }
    /// <p>The identifier of the contact in this instance of Amazon Connect. </p>
    pub fn set_contact_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.contact_id = input;
        self
    }
    /// <p>The Amazon Connect channel you want to configure.</p>
    pub fn channel_configuration(
        mut self,
        input: crate::types::UpdateParticipantRoleConfigChannelInfo,
    ) -> Self {
        self.channel_configuration = Some(input);
        self
    }
    /// <p>The Amazon Connect channel you want to configure.</p>
    pub fn set_channel_configuration(
        mut self,
        input: std::option::Option<crate::types::UpdateParticipantRoleConfigChannelInfo>,
    ) -> Self {
        self.channel_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateParticipantRoleConfigInput`](crate::operation::update_participant_role_config::UpdateParticipantRoleConfigInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_participant_role_config::UpdateParticipantRoleConfigInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_participant_role_config::UpdateParticipantRoleConfigInput {
                instance_id: self.instance_id,
                contact_id: self.contact_id,
                channel_configuration: self.channel_configuration,
            },
        )
    }
}
