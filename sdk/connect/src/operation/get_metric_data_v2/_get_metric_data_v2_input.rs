// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetMetricDataV2Input {
    /// <p>The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.</p>
    pub resource_arn: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The start and end time depends on the <code>IntervalPeriod</code> selected. By default the time range between start and end time is 35 days. Historical metrics are available for 3 months.</p>
    pub start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp. It cannot be later than the current timestamp.</p>
    pub end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The interval period and timezone to apply to returned metrics.</p>
    /// <ul>
    /// <li> <p> <code>IntervalPeriod</code>: An aggregated grouping applied to request metrics. Valid <code>IntervalPeriod</code> values are: <code>FIFTEEN_MIN</code> | <code>THIRTY_MIN</code> | <code>HOUR</code> | <code>DAY</code> | <code>WEEK</code> | <code>TOTAL</code>. </p> <p>For example, if <code>IntervalPeriod</code> is selected <code>THIRTY_MIN</code>, <code>StartTime</code> and <code>EndTime</code> differs by 1 day, then Amazon Connect returns 48 results in the response. Each result is aggregated by the THIRTY_MIN period. By default Amazon Connect aggregates results based on the <code>TOTAL</code> interval period. </p> <p>The following list describes restrictions on <code>StartTime</code> and <code>EndTime</code> based on which <code>IntervalPeriod</code> is requested. </p>
    /// <ul>
    /// <li> <p> <code>FIFTEEN_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>THIRTY_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>HOUR</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>DAY</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>WEEK</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>TOTAL</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// </ul> </li>
    /// <li> <p> <code>TimeZone</code>: The timezone applied to requested metrics.</p> </li>
    /// </ul>
    pub interval: ::std::option::Option<crate::types::IntervalDetails>,
    /// <p>The filters to apply to returned metrics. You can filter on the following resources:</p>
    /// <ul>
    /// <li> <p>Queues</p> </li>
    /// <li> <p>Routing profiles</p> </li>
    /// <li> <p>Agents</p> </li>
    /// <li> <p>Channels</p> </li>
    /// <li> <p>User hierarchy groups</p> </li>
    /// <li> <p>Feature</p> </li>
    /// </ul>
    /// <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p>
    /// <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <p>Note the following limits:</p>
    /// <ul>
    /// <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> | <code>FEATURE</code> </p> </li>
    /// <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. VOICE, CHAT, and TASK are valid <code>filterValue</code> for the CHANNEL filter key. They do not count towards limitation of 100 filter values. For example, a GetMetricDataV2 request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values, along with 3 channel filters. </p> <p> <code>contact_lens_conversational_analytics</code> is a valid filterValue for the <code>FEATURE</code> filter key. It is available only to contacts analyzed by Contact Lens conversational analytics.</p> </li>
    /// </ul>
    pub filters: ::std::option::Option<::std::vec::Vec<crate::types::FilterV2>>,
    /// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p>
    /// <p>If no grouping is specified, a summary of all metrics is returned.</p>
    /// <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
    pub groupings: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <dl>
    /// <dt>
    /// ABANDONMENT_RATE
    /// </dt>
    /// <dd>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_ADHERENT_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE_WITHOUT_CUSTOMER_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// <p>Data for this metric is available starting from October 1, 2023 0:00:00 GMT.</p>
    /// </dd>
    /// <dt>
    /// AGENT_OCCUPANCY
    /// </dt>
    /// <dd>
    /// <p>Unit: Percentage</p>
    /// <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULE_ADHERENCE
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULED_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_ABANDON_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AFTER_CONTACT_WORK_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_AGENT_CONNECTING_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> <note>
    /// <p>The <code>Negate</code> key in Metric Level Filters is not applicable for this metric.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONTACT_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONVERSATION_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_GREETING_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HANDLE_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME_ALL_CONTACTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HOLDS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_AND_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTIONS_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTION_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_NON_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_QUEUE_ANSWER_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_RESOLUTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_CUSTOMER
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_ABANDONED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_CREATED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HANDLED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HOLD_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_QUEUED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_RESOLVED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code> enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than").</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_BY_AGENT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// MAX_QUEUED_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// SERVICE_LEVEL
    /// </dt>
    /// <dd>
    /// <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ANSWERED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ABANDONED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_DISCONNECTED
    /// </dt>
    /// <dd>
    /// <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_RETRY_CALLBACK_ATTEMPTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// </dl>
    pub metrics: ::std::option::Option<::std::vec::Vec<crate::types::MetricV2>>,
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of results to return per page.</p>
    pub max_results: ::std::option::Option<i32>,
}
impl GetMetricDataV2Input {
    /// <p>The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.</p>
    pub fn resource_arn(&self) -> ::std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The start and end time depends on the <code>IntervalPeriod</code> selected. By default the time range between start and end time is 35 days. Historical metrics are available for 3 months.</p>
    pub fn start_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp. It cannot be later than the current timestamp.</p>
    pub fn end_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The interval period and timezone to apply to returned metrics.</p>
    /// <ul>
    /// <li> <p> <code>IntervalPeriod</code>: An aggregated grouping applied to request metrics. Valid <code>IntervalPeriod</code> values are: <code>FIFTEEN_MIN</code> | <code>THIRTY_MIN</code> | <code>HOUR</code> | <code>DAY</code> | <code>WEEK</code> | <code>TOTAL</code>. </p> <p>For example, if <code>IntervalPeriod</code> is selected <code>THIRTY_MIN</code>, <code>StartTime</code> and <code>EndTime</code> differs by 1 day, then Amazon Connect returns 48 results in the response. Each result is aggregated by the THIRTY_MIN period. By default Amazon Connect aggregates results based on the <code>TOTAL</code> interval period. </p> <p>The following list describes restrictions on <code>StartTime</code> and <code>EndTime</code> based on which <code>IntervalPeriod</code> is requested. </p>
    /// <ul>
    /// <li> <p> <code>FIFTEEN_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>THIRTY_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>HOUR</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>DAY</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>WEEK</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>TOTAL</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// </ul> </li>
    /// <li> <p> <code>TimeZone</code>: The timezone applied to requested metrics.</p> </li>
    /// </ul>
    pub fn interval(&self) -> ::std::option::Option<&crate::types::IntervalDetails> {
        self.interval.as_ref()
    }
    /// <p>The filters to apply to returned metrics. You can filter on the following resources:</p>
    /// <ul>
    /// <li> <p>Queues</p> </li>
    /// <li> <p>Routing profiles</p> </li>
    /// <li> <p>Agents</p> </li>
    /// <li> <p>Channels</p> </li>
    /// <li> <p>User hierarchy groups</p> </li>
    /// <li> <p>Feature</p> </li>
    /// </ul>
    /// <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p>
    /// <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <p>Note the following limits:</p>
    /// <ul>
    /// <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> | <code>FEATURE</code> </p> </li>
    /// <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. VOICE, CHAT, and TASK are valid <code>filterValue</code> for the CHANNEL filter key. They do not count towards limitation of 100 filter values. For example, a GetMetricDataV2 request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values, along with 3 channel filters. </p> <p> <code>contact_lens_conversational_analytics</code> is a valid filterValue for the <code>FEATURE</code> filter key. It is available only to contacts analyzed by Contact Lens conversational analytics.</p> </li>
    /// </ul>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.filters.is_none()`.
    pub fn filters(&self) -> &[crate::types::FilterV2] {
        self.filters.as_deref().unwrap_or_default()
    }
    /// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p>
    /// <p>If no grouping is specified, a summary of all metrics is returned.</p>
    /// <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.groupings.is_none()`.
    pub fn groupings(&self) -> &[::std::string::String] {
        self.groupings.as_deref().unwrap_or_default()
    }
    /// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <dl>
    /// <dt>
    /// ABANDONMENT_RATE
    /// </dt>
    /// <dd>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_ADHERENT_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE_WITHOUT_CUSTOMER_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// <p>Data for this metric is available starting from October 1, 2023 0:00:00 GMT.</p>
    /// </dd>
    /// <dt>
    /// AGENT_OCCUPANCY
    /// </dt>
    /// <dd>
    /// <p>Unit: Percentage</p>
    /// <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULE_ADHERENCE
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULED_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_ABANDON_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AFTER_CONTACT_WORK_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_AGENT_CONNECTING_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> <note>
    /// <p>The <code>Negate</code> key in Metric Level Filters is not applicable for this metric.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONTACT_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONVERSATION_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_GREETING_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HANDLE_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME_ALL_CONTACTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HOLDS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_AND_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTIONS_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTION_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_NON_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_QUEUE_ANSWER_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_RESOLUTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_CUSTOMER
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_ABANDONED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_CREATED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HANDLED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HOLD_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_QUEUED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_RESOLVED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code> enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than").</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_BY_AGENT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// MAX_QUEUED_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// SERVICE_LEVEL
    /// </dt>
    /// <dd>
    /// <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ANSWERED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ABANDONED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_DISCONNECTED
    /// </dt>
    /// <dd>
    /// <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_RETRY_CALLBACK_ATTEMPTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// </dl>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.metrics.is_none()`.
    pub fn metrics(&self) -> &[crate::types::MetricV2] {
        self.metrics.as_deref().unwrap_or_default()
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
}
impl GetMetricDataV2Input {
    /// Creates a new builder-style object to manufacture [`GetMetricDataV2Input`](crate::operation::get_metric_data_v2::GetMetricDataV2Input).
    pub fn builder() -> crate::operation::get_metric_data_v2::builders::GetMetricDataV2InputBuilder {
        crate::operation::get_metric_data_v2::builders::GetMetricDataV2InputBuilder::default()
    }
}

/// A builder for [`GetMetricDataV2Input`](crate::operation::get_metric_data_v2::GetMetricDataV2Input).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetMetricDataV2InputBuilder {
    pub(crate) resource_arn: ::std::option::Option<::std::string::String>,
    pub(crate) start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) interval: ::std::option::Option<crate::types::IntervalDetails>,
    pub(crate) filters: ::std::option::Option<::std::vec::Vec<crate::types::FilterV2>>,
    pub(crate) groupings: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) metrics: ::std::option::Option<::std::vec::Vec<crate::types::MetricV2>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
}
impl GetMetricDataV2InputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.</p>
    /// This field is required.
    pub fn resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.</p>
    pub fn set_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.</p>
    pub fn get_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_arn
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The start and end time depends on the <code>IntervalPeriod</code> selected. By default the time range between start and end time is 35 days. Historical metrics are available for 3 months.</p>
    /// This field is required.
    pub fn start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The start and end time depends on the <code>IntervalPeriod</code> selected. By default the time range between start and end time is 35 days. Historical metrics are available for 3 months.</p>
    pub fn set_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The start and end time depends on the <code>IntervalPeriod</code> selected. By default the time range between start and end time is 35 days. Historical metrics are available for 3 months.</p>
    pub fn get_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_time
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp. It cannot be later than the current timestamp.</p>
    /// This field is required.
    pub fn end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp. It cannot be later than the current timestamp.</p>
    pub fn set_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp. It cannot be later than the current timestamp.</p>
    pub fn get_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_time
    }
    /// <p>The interval period and timezone to apply to returned metrics.</p>
    /// <ul>
    /// <li> <p> <code>IntervalPeriod</code>: An aggregated grouping applied to request metrics. Valid <code>IntervalPeriod</code> values are: <code>FIFTEEN_MIN</code> | <code>THIRTY_MIN</code> | <code>HOUR</code> | <code>DAY</code> | <code>WEEK</code> | <code>TOTAL</code>. </p> <p>For example, if <code>IntervalPeriod</code> is selected <code>THIRTY_MIN</code>, <code>StartTime</code> and <code>EndTime</code> differs by 1 day, then Amazon Connect returns 48 results in the response. Each result is aggregated by the THIRTY_MIN period. By default Amazon Connect aggregates results based on the <code>TOTAL</code> interval period. </p> <p>The following list describes restrictions on <code>StartTime</code> and <code>EndTime</code> based on which <code>IntervalPeriod</code> is requested. </p>
    /// <ul>
    /// <li> <p> <code>FIFTEEN_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>THIRTY_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>HOUR</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>DAY</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>WEEK</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>TOTAL</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// </ul> </li>
    /// <li> <p> <code>TimeZone</code>: The timezone applied to requested metrics.</p> </li>
    /// </ul>
    pub fn interval(mut self, input: crate::types::IntervalDetails) -> Self {
        self.interval = ::std::option::Option::Some(input);
        self
    }
    /// <p>The interval period and timezone to apply to returned metrics.</p>
    /// <ul>
    /// <li> <p> <code>IntervalPeriod</code>: An aggregated grouping applied to request metrics. Valid <code>IntervalPeriod</code> values are: <code>FIFTEEN_MIN</code> | <code>THIRTY_MIN</code> | <code>HOUR</code> | <code>DAY</code> | <code>WEEK</code> | <code>TOTAL</code>. </p> <p>For example, if <code>IntervalPeriod</code> is selected <code>THIRTY_MIN</code>, <code>StartTime</code> and <code>EndTime</code> differs by 1 day, then Amazon Connect returns 48 results in the response. Each result is aggregated by the THIRTY_MIN period. By default Amazon Connect aggregates results based on the <code>TOTAL</code> interval period. </p> <p>The following list describes restrictions on <code>StartTime</code> and <code>EndTime</code> based on which <code>IntervalPeriod</code> is requested. </p>
    /// <ul>
    /// <li> <p> <code>FIFTEEN_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>THIRTY_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>HOUR</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>DAY</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>WEEK</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>TOTAL</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// </ul> </li>
    /// <li> <p> <code>TimeZone</code>: The timezone applied to requested metrics.</p> </li>
    /// </ul>
    pub fn set_interval(mut self, input: ::std::option::Option<crate::types::IntervalDetails>) -> Self {
        self.interval = input;
        self
    }
    /// <p>The interval period and timezone to apply to returned metrics.</p>
    /// <ul>
    /// <li> <p> <code>IntervalPeriod</code>: An aggregated grouping applied to request metrics. Valid <code>IntervalPeriod</code> values are: <code>FIFTEEN_MIN</code> | <code>THIRTY_MIN</code> | <code>HOUR</code> | <code>DAY</code> | <code>WEEK</code> | <code>TOTAL</code>. </p> <p>For example, if <code>IntervalPeriod</code> is selected <code>THIRTY_MIN</code>, <code>StartTime</code> and <code>EndTime</code> differs by 1 day, then Amazon Connect returns 48 results in the response. Each result is aggregated by the THIRTY_MIN period. By default Amazon Connect aggregates results based on the <code>TOTAL</code> interval period. </p> <p>The following list describes restrictions on <code>StartTime</code> and <code>EndTime</code> based on which <code>IntervalPeriod</code> is requested. </p>
    /// <ul>
    /// <li> <p> <code>FIFTEEN_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>THIRTY_MIN</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>HOUR</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 3 days.</p> </li>
    /// <li> <p> <code>DAY</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>WEEK</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// <li> <p> <code>TOTAL</code>: The difference between <code>StartTime</code> and <code>EndTime</code> must be less than 35 days.</p> </li>
    /// </ul> </li>
    /// <li> <p> <code>TimeZone</code>: The timezone applied to requested metrics.</p> </li>
    /// </ul>
    pub fn get_interval(&self) -> &::std::option::Option<crate::types::IntervalDetails> {
        &self.interval
    }
    /// Appends an item to `filters`.
    ///
    /// To override the contents of this collection use [`set_filters`](Self::set_filters).
    ///
    /// <p>The filters to apply to returned metrics. You can filter on the following resources:</p>
    /// <ul>
    /// <li> <p>Queues</p> </li>
    /// <li> <p>Routing profiles</p> </li>
    /// <li> <p>Agents</p> </li>
    /// <li> <p>Channels</p> </li>
    /// <li> <p>User hierarchy groups</p> </li>
    /// <li> <p>Feature</p> </li>
    /// </ul>
    /// <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p>
    /// <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <p>Note the following limits:</p>
    /// <ul>
    /// <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> | <code>FEATURE</code> </p> </li>
    /// <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. VOICE, CHAT, and TASK are valid <code>filterValue</code> for the CHANNEL filter key. They do not count towards limitation of 100 filter values. For example, a GetMetricDataV2 request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values, along with 3 channel filters. </p> <p> <code>contact_lens_conversational_analytics</code> is a valid filterValue for the <code>FEATURE</code> filter key. It is available only to contacts analyzed by Contact Lens conversational analytics.</p> </li>
    /// </ul>
    pub fn filters(mut self, input: crate::types::FilterV2) -> Self {
        let mut v = self.filters.unwrap_or_default();
        v.push(input);
        self.filters = ::std::option::Option::Some(v);
        self
    }
    /// <p>The filters to apply to returned metrics. You can filter on the following resources:</p>
    /// <ul>
    /// <li> <p>Queues</p> </li>
    /// <li> <p>Routing profiles</p> </li>
    /// <li> <p>Agents</p> </li>
    /// <li> <p>Channels</p> </li>
    /// <li> <p>User hierarchy groups</p> </li>
    /// <li> <p>Feature</p> </li>
    /// </ul>
    /// <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p>
    /// <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <p>Note the following limits:</p>
    /// <ul>
    /// <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> | <code>FEATURE</code> </p> </li>
    /// <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. VOICE, CHAT, and TASK are valid <code>filterValue</code> for the CHANNEL filter key. They do not count towards limitation of 100 filter values. For example, a GetMetricDataV2 request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values, along with 3 channel filters. </p> <p> <code>contact_lens_conversational_analytics</code> is a valid filterValue for the <code>FEATURE</code> filter key. It is available only to contacts analyzed by Contact Lens conversational analytics.</p> </li>
    /// </ul>
    pub fn set_filters(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::FilterV2>>) -> Self {
        self.filters = input;
        self
    }
    /// <p>The filters to apply to returned metrics. You can filter on the following resources:</p>
    /// <ul>
    /// <li> <p>Queues</p> </li>
    /// <li> <p>Routing profiles</p> </li>
    /// <li> <p>Agents</p> </li>
    /// <li> <p>Channels</p> </li>
    /// <li> <p>User hierarchy groups</p> </li>
    /// <li> <p>Feature</p> </li>
    /// </ul>
    /// <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p>
    /// <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <p>Note the following limits:</p>
    /// <ul>
    /// <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> | <code>FEATURE</code> </p> </li>
    /// <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. VOICE, CHAT, and TASK are valid <code>filterValue</code> for the CHANNEL filter key. They do not count towards limitation of 100 filter values. For example, a GetMetricDataV2 request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values, along with 3 channel filters. </p> <p> <code>contact_lens_conversational_analytics</code> is a valid filterValue for the <code>FEATURE</code> filter key. It is available only to contacts analyzed by Contact Lens conversational analytics.</p> </li>
    /// </ul>
    pub fn get_filters(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::FilterV2>> {
        &self.filters
    }
    /// Appends an item to `groupings`.
    ///
    /// To override the contents of this collection use [`set_groupings`](Self::set_groupings).
    ///
    /// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p>
    /// <p>If no grouping is specified, a summary of all metrics is returned.</p>
    /// <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
    pub fn groupings(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.groupings.unwrap_or_default();
        v.push(input.into());
        self.groupings = ::std::option::Option::Some(v);
        self
    }
    /// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p>
    /// <p>If no grouping is specified, a summary of all metrics is returned.</p>
    /// <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
    pub fn set_groupings(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.groupings = input;
        self
    }
    /// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p>
    /// <p>If no grouping is specified, a summary of all metrics is returned.</p>
    /// <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
    pub fn get_groupings(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.groupings
    }
    /// Appends an item to `metrics`.
    ///
    /// To override the contents of this collection use [`set_metrics`](Self::set_metrics).
    ///
    /// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <dl>
    /// <dt>
    /// ABANDONMENT_RATE
    /// </dt>
    /// <dd>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_ADHERENT_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE_WITHOUT_CUSTOMER_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// <p>Data for this metric is available starting from October 1, 2023 0:00:00 GMT.</p>
    /// </dd>
    /// <dt>
    /// AGENT_OCCUPANCY
    /// </dt>
    /// <dd>
    /// <p>Unit: Percentage</p>
    /// <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULE_ADHERENCE
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULED_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_ABANDON_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AFTER_CONTACT_WORK_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_AGENT_CONNECTING_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> <note>
    /// <p>The <code>Negate</code> key in Metric Level Filters is not applicable for this metric.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONTACT_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONVERSATION_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_GREETING_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HANDLE_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME_ALL_CONTACTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HOLDS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_AND_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTIONS_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTION_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_NON_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_QUEUE_ANSWER_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_RESOLUTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_CUSTOMER
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_ABANDONED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_CREATED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HANDLED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HOLD_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_QUEUED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_RESOLVED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code> enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than").</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_BY_AGENT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// MAX_QUEUED_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// SERVICE_LEVEL
    /// </dt>
    /// <dd>
    /// <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ANSWERED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ABANDONED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_DISCONNECTED
    /// </dt>
    /// <dd>
    /// <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_RETRY_CALLBACK_ATTEMPTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// </dl>
    pub fn metrics(mut self, input: crate::types::MetricV2) -> Self {
        let mut v = self.metrics.unwrap_or_default();
        v.push(input);
        self.metrics = ::std::option::Option::Some(v);
        self
    }
    /// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <dl>
    /// <dt>
    /// ABANDONMENT_RATE
    /// </dt>
    /// <dd>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_ADHERENT_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE_WITHOUT_CUSTOMER_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// <p>Data for this metric is available starting from October 1, 2023 0:00:00 GMT.</p>
    /// </dd>
    /// <dt>
    /// AGENT_OCCUPANCY
    /// </dt>
    /// <dd>
    /// <p>Unit: Percentage</p>
    /// <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULE_ADHERENCE
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULED_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_ABANDON_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AFTER_CONTACT_WORK_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_AGENT_CONNECTING_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> <note>
    /// <p>The <code>Negate</code> key in Metric Level Filters is not applicable for this metric.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONTACT_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONVERSATION_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_GREETING_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HANDLE_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME_ALL_CONTACTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HOLDS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_AND_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTIONS_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTION_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_NON_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_QUEUE_ANSWER_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_RESOLUTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_CUSTOMER
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_ABANDONED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_CREATED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HANDLED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HOLD_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_QUEUED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_RESOLVED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code> enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than").</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_BY_AGENT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// MAX_QUEUED_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// SERVICE_LEVEL
    /// </dt>
    /// <dd>
    /// <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ANSWERED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ABANDONED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_DISCONNECTED
    /// </dt>
    /// <dd>
    /// <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_RETRY_CALLBACK_ATTEMPTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// </dl>
    pub fn set_metrics(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::MetricV2>>) -> Self {
        self.metrics = input;
        self
    }
    /// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <dl>
    /// <dt>
    /// ABANDONMENT_RATE
    /// </dt>
    /// <dd>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_ADHERENT_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE_WITHOUT_CUSTOMER_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// <p>Data for this metric is available starting from October 1, 2023 0:00:00 GMT.</p>
    /// </dd>
    /// <dt>
    /// AGENT_OCCUPANCY
    /// </dt>
    /// <dd>
    /// <p>Unit: Percentage</p>
    /// <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULE_ADHERENCE
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULED_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_ABANDON_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AFTER_CONTACT_WORK_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_AGENT_CONNECTING_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> <note>
    /// <p>The <code>Negate</code> key in Metric Level Filters is not applicable for this metric.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONTACT_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_CONVERSATION_DURATION
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_GREETING_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HANDLE_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME_ALL_CONTACTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HOLDS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_AND_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTIONS_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERRUPTION_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_NON_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_QUEUE_ANSWER_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// AVG_RESOLUTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_AGENT
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_TALK_TIME_CUSTOMER
    /// </dt>
    /// <dd>
    /// <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_ABANDONED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_CREATED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HANDLED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_HOLD_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_QUEUED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_RESOLVED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code> enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than").</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note>
    /// <p>Feature is a valid filter but not a valid grouping.</p>
    /// </note>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_BY_AGENT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// MAX_QUEUED_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// SERVICE_LEVEL
    /// </dt>
    /// <dd>
    /// <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ANSWERED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ABANDONED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_DISCONNECTED
    /// </dt>
    /// <dd>
    /// <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_RETRY_CALLBACK_ATTEMPTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// </dl>
    pub fn get_metrics(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::MetricV2>> {
        &self.metrics
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Consumes the builder and constructs a [`GetMetricDataV2Input`](crate::operation::get_metric_data_v2::GetMetricDataV2Input).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_metric_data_v2::GetMetricDataV2Input, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_metric_data_v2::GetMetricDataV2Input {
            resource_arn: self.resource_arn,
            start_time: self.start_time,
            end_time: self.end_time,
            interval: self.interval,
            filters: self.filters,
            groupings: self.groupings,
            metrics: self.metrics,
            next_token: self.next_token,
            max_results: self.max_results,
        })
    }
}
