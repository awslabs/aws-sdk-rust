// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetMetricDataV2Input {
    /// <p>The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The time range between the start and end time must be less than 24 hours. The start time cannot be earlier than 14 days before the time of the request. Historical metrics are available for 14 days.</p>
    #[doc(hidden)]
    pub start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp.</p>
    /// <p>The time range between the start and end time must be less than 24 hours.</p>
    #[doc(hidden)]
    pub end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The filters to apply to returned metrics. You can filter on the following resources:</p>
    /// <ul>
    /// <li> <p>Queues</p> </li>
    /// <li> <p>Routing profiles</p> </li>
    /// <li> <p>Agents</p> </li>
    /// <li> <p>Channels</p> </li>
    /// <li> <p>User hierarchy groups</p> </li>
    /// </ul>
    /// <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p>
    /// <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <p>Note the following limits:</p>
    /// <ul>
    /// <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p> </li>
    /// <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. For example, a <code>GetMetricDataV2</code> request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values. <code>VOICE</code>, <code>CHAT</code>, and <code>TASK</code> are valid <code>filterValue</code> for the <code>CHANNEL</code> filter key.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub filters: std::option::Option<std::vec::Vec<crate::types::FilterV2>>,
    /// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p>
    /// <p>If no grouping is specified, a summary of all metrics is returned.</p>
    /// <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
    #[doc(hidden)]
    pub groupings: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <dl>
    /// <dt>
    /// AGENT_ADHERENT_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_OCCUPANCY
    /// </dt>
    /// <dd>
    /// <p>Unit: Percentage</p>
    /// <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULE_ADHERENCE
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULED_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_ABANDON_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AFTER_CONTACT_WORK_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AGENT_CONNECTING_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HANDLE_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_AND_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// AVG_QUEUE_ANSWER_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_ABANDONED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_CREATED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_HANDLED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_HOLD_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_QUEUED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_BY_AGENT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// MAX_QUEUED_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// SERVICE_LEVEL
    /// </dt>
    /// <dd>
    /// <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ANSWERED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ABANDONED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_DISCONNECTED
    /// </dt>
    /// <dd>
    /// <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_RETRY_CALLBACK_ATTEMPTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// </dl>
    #[doc(hidden)]
    pub metrics: std::option::Option<std::vec::Vec<crate::types::MetricV2>>,
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The maximum number of results to return per page.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
}
impl GetMetricDataV2Input {
    /// <p>The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The time range between the start and end time must be less than 24 hours. The start time cannot be earlier than 14 days before the time of the request. Historical metrics are available for 14 days.</p>
    pub fn start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp.</p>
    /// <p>The time range between the start and end time must be less than 24 hours.</p>
    pub fn end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The filters to apply to returned metrics. You can filter on the following resources:</p>
    /// <ul>
    /// <li> <p>Queues</p> </li>
    /// <li> <p>Routing profiles</p> </li>
    /// <li> <p>Agents</p> </li>
    /// <li> <p>Channels</p> </li>
    /// <li> <p>User hierarchy groups</p> </li>
    /// </ul>
    /// <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p>
    /// <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <p>Note the following limits:</p>
    /// <ul>
    /// <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p> </li>
    /// <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. For example, a <code>GetMetricDataV2</code> request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values. <code>VOICE</code>, <code>CHAT</code>, and <code>TASK</code> are valid <code>filterValue</code> for the <code>CHANNEL</code> filter key.</p> </li>
    /// </ul>
    pub fn filters(&self) -> std::option::Option<&[crate::types::FilterV2]> {
        self.filters.as_deref()
    }
    /// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p>
    /// <p>If no grouping is specified, a summary of all metrics is returned.</p>
    /// <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
    pub fn groupings(&self) -> std::option::Option<&[std::string::String]> {
        self.groupings.as_deref()
    }
    /// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <dl>
    /// <dt>
    /// AGENT_ADHERENT_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_OCCUPANCY
    /// </dt>
    /// <dd>
    /// <p>Unit: Percentage</p>
    /// <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULE_ADHERENCE
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULED_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_ABANDON_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AFTER_CONTACT_WORK_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AGENT_CONNECTING_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HANDLE_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_AND_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// AVG_QUEUE_ANSWER_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_ABANDONED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_CREATED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_HANDLED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_HOLD_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_QUEUED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_BY_AGENT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// MAX_QUEUED_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// SERVICE_LEVEL
    /// </dt>
    /// <dd>
    /// <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ANSWERED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ABANDONED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_DISCONNECTED
    /// </dt>
    /// <dd>
    /// <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_RETRY_CALLBACK_ATTEMPTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// </dl>
    pub fn metrics(&self) -> std::option::Option<&[crate::types::MetricV2]> {
        self.metrics.as_deref()
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
}
impl GetMetricDataV2Input {
    /// Creates a new builder-style object to manufacture [`GetMetricDataV2Input`](crate::operation::get_metric_data_v2::GetMetricDataV2Input).
    pub fn builder() -> crate::operation::get_metric_data_v2::builders::GetMetricDataV2InputBuilder
    {
        crate::operation::get_metric_data_v2::builders::GetMetricDataV2InputBuilder::default()
    }
}

/// A builder for [`GetMetricDataV2Input`](crate::operation::get_metric_data_v2::GetMetricDataV2Input).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetMetricDataV2InputBuilder {
    pub(crate) resource_arn: std::option::Option<std::string::String>,
    pub(crate) start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) filters: std::option::Option<std::vec::Vec<crate::types::FilterV2>>,
    pub(crate) groupings: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) metrics: std::option::Option<std::vec::Vec<crate::types::MetricV2>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
}
impl GetMetricDataV2InputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The time range between the start and end time must be less than 24 hours. The start time cannot be earlier than 14 days before the time of the request. Historical metrics are available for 14 days.</p>
    pub fn start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_time = Some(input);
        self
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The time range between the start and end time must be less than 24 hours. The start time cannot be earlier than 14 days before the time of the request. Historical metrics are available for 14 days.</p>
    pub fn set_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp.</p>
    /// <p>The time range between the start and end time must be less than 24 hours.</p>
    pub fn end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_time = Some(input);
        self
    }
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp.</p>
    /// <p>The time range between the start and end time must be less than 24 hours.</p>
    pub fn set_end_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// Appends an item to `filters`.
    ///
    /// To override the contents of this collection use [`set_filters`](Self::set_filters).
    ///
    /// <p>The filters to apply to returned metrics. You can filter on the following resources:</p>
    /// <ul>
    /// <li> <p>Queues</p> </li>
    /// <li> <p>Routing profiles</p> </li>
    /// <li> <p>Agents</p> </li>
    /// <li> <p>Channels</p> </li>
    /// <li> <p>User hierarchy groups</p> </li>
    /// </ul>
    /// <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p>
    /// <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <p>Note the following limits:</p>
    /// <ul>
    /// <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p> </li>
    /// <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. For example, a <code>GetMetricDataV2</code> request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values. <code>VOICE</code>, <code>CHAT</code>, and <code>TASK</code> are valid <code>filterValue</code> for the <code>CHANNEL</code> filter key.</p> </li>
    /// </ul>
    pub fn filters(mut self, input: crate::types::FilterV2) -> Self {
        let mut v = self.filters.unwrap_or_default();
        v.push(input);
        self.filters = Some(v);
        self
    }
    /// <p>The filters to apply to returned metrics. You can filter on the following resources:</p>
    /// <ul>
    /// <li> <p>Queues</p> </li>
    /// <li> <p>Routing profiles</p> </li>
    /// <li> <p>Agents</p> </li>
    /// <li> <p>Channels</p> </li>
    /// <li> <p>User hierarchy groups</p> </li>
    /// </ul>
    /// <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p>
    /// <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <p>Note the following limits:</p>
    /// <ul>
    /// <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p> </li>
    /// <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. For example, a <code>GetMetricDataV2</code> request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values. <code>VOICE</code>, <code>CHAT</code>, and <code>TASK</code> are valid <code>filterValue</code> for the <code>CHANNEL</code> filter key.</p> </li>
    /// </ul>
    pub fn set_filters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::FilterV2>>,
    ) -> Self {
        self.filters = input;
        self
    }
    /// Appends an item to `groupings`.
    ///
    /// To override the contents of this collection use [`set_groupings`](Self::set_groupings).
    ///
    /// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p>
    /// <p>If no grouping is specified, a summary of all metrics is returned.</p>
    /// <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
    pub fn groupings(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.groupings.unwrap_or_default();
        v.push(input.into());
        self.groupings = Some(v);
        self
    }
    /// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p>
    /// <p>If no grouping is specified, a summary of all metrics is returned.</p>
    /// <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
    pub fn set_groupings(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.groupings = input;
        self
    }
    /// Appends an item to `metrics`.
    ///
    /// To override the contents of this collection use [`set_metrics`](Self::set_metrics).
    ///
    /// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <dl>
    /// <dt>
    /// AGENT_ADHERENT_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_OCCUPANCY
    /// </dt>
    /// <dd>
    /// <p>Unit: Percentage</p>
    /// <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULE_ADHERENCE
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULED_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_ABANDON_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AFTER_CONTACT_WORK_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AGENT_CONNECTING_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HANDLE_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_AND_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// AVG_QUEUE_ANSWER_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_ABANDONED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_CREATED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_HANDLED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_HOLD_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_QUEUED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_BY_AGENT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// MAX_QUEUED_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// SERVICE_LEVEL
    /// </dt>
    /// <dd>
    /// <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ANSWERED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ABANDONED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_DISCONNECTED
    /// </dt>
    /// <dd>
    /// <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_RETRY_CALLBACK_ATTEMPTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// </dl>
    pub fn metrics(mut self, input: crate::types::MetricV2) -> Self {
        let mut v = self.metrics.unwrap_or_default();
        v.push(input);
        self.metrics = Some(v);
        self
    }
    /// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
    /// <dl>
    /// <dt>
    /// AGENT_ADHERENT_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_NON_RESPONSE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_OCCUPANCY
    /// </dt>
    /// <dd>
    /// <p>Unit: Percentage</p>
    /// <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULE_ADHERENCE
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AGENT_SCHEDULED_TIME
    /// </dt>
    /// <dd>
    /// <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_ABANDON_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AFTER_CONTACT_WORK_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_AGENT_CONNECTING_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HANDLE_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_AND_HOLD_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// AVG_INTERACTION_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// AVG_QUEUE_ANSWER_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_ABANDONED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_CREATED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_HANDLED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_HOLD_ABANDONS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_QUEUED
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_BY_AGENT
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// MAX_QUEUED_TIME
    /// </dt>
    /// <dd>
    /// <p>Unit: Seconds</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p>
    /// </dd>
    /// <dt>
    /// SERVICE_LEVEL
    /// </dt>
    /// <dd>
    /// <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    /// <p>Unit: Percent</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ANSWERED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_ABANDONED_IN_X
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_CONTACTS_DISCONNECTED
    /// </dt>
    /// <dd>
    /// <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// <dt>
    /// SUM_RETRY_CALLBACK_ATTEMPTS
    /// </dt>
    /// <dd>
    /// <p>Unit: Count</p>
    /// <p>Valid groupings and filters: Queue, Channel, Routing Profile</p>
    /// </dd>
    /// </dl>
    pub fn set_metrics(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::MetricV2>>,
    ) -> Self {
        self.metrics = input;
        self
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to return per page.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Consumes the builder and constructs a [`GetMetricDataV2Input`](crate::operation::get_metric_data_v2::GetMetricDataV2Input).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_metric_data_v2::GetMetricDataV2Input,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_metric_data_v2::GetMetricDataV2Input {
            resource_arn: self.resource_arn,
            start_time: self.start_time,
            end_time: self.end_time,
            filters: self.filters,
            groupings: self.groupings,
            metrics: self.metrics,
            next_token: self.next_token,
            max_results: self.max_results,
        })
    }
}
