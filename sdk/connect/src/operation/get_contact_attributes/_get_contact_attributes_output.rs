// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetContactAttributesOutput {
    /// <p>Information about the attributes.</p>
    #[doc(hidden)]
    pub attributes:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    _request_id: Option<String>,
}
impl GetContactAttributesOutput {
    /// <p>Information about the attributes.</p>
    pub fn attributes(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.attributes.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetContactAttributesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetContactAttributesOutput {
    /// Creates a new builder-style object to manufacture [`GetContactAttributesOutput`](crate::operation::get_contact_attributes::GetContactAttributesOutput).
    pub fn builder(
    ) -> crate::operation::get_contact_attributes::builders::GetContactAttributesOutputBuilder {
        crate::operation::get_contact_attributes::builders::GetContactAttributesOutputBuilder::default()
    }
}

/// A builder for [`GetContactAttributesOutput`](crate::operation::get_contact_attributes::GetContactAttributesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetContactAttributesOutputBuilder {
    pub(crate) attributes:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    _request_id: Option<String>,
}
impl GetContactAttributesOutputBuilder {
    /// Adds a key-value pair to `attributes`.
    ///
    /// To override the contents of this collection use [`set_attributes`](Self::set_attributes).
    ///
    /// <p>Information about the attributes.</p>
    pub fn attributes(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.attributes.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.attributes = Some(hash_map);
        self
    }
    /// <p>Information about the attributes.</p>
    pub fn set_attributes(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.attributes = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetContactAttributesOutput`](crate::operation::get_contact_attributes::GetContactAttributesOutput).
    pub fn build(self) -> crate::operation::get_contact_attributes::GetContactAttributesOutput {
        crate::operation::get_contact_attributes::GetContactAttributesOutput {
            attributes: self.attributes,
            _request_id: self._request_id,
        }
    }
}
