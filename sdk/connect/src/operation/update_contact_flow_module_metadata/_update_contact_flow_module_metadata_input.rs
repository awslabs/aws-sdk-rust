// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateContactFlowModuleMetadataInput {
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    #[doc(hidden)]
    pub instance_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the flow module.</p>
    #[doc(hidden)]
    pub contact_flow_module_id: std::option::Option<std::string::String>,
    /// <p>The name of the flow module.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The description of the flow module.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The state of flow module.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::ContactFlowModuleState>,
}
impl UpdateContactFlowModuleMetadataInput {
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn instance_id(&self) -> std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The identifier of the flow module.</p>
    pub fn contact_flow_module_id(&self) -> std::option::Option<&str> {
        self.contact_flow_module_id.as_deref()
    }
    /// <p>The name of the flow module.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The description of the flow module.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The state of flow module.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::ContactFlowModuleState> {
        self.state.as_ref()
    }
}
impl UpdateContactFlowModuleMetadataInput {
    /// Creates a new builder-style object to manufacture [`UpdateContactFlowModuleMetadataInput`](crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataInput).
    pub fn builder() -> crate::operation::update_contact_flow_module_metadata::builders::UpdateContactFlowModuleMetadataInputBuilder{
        crate::operation::update_contact_flow_module_metadata::builders::UpdateContactFlowModuleMetadataInputBuilder::default()
    }
}

/// A builder for [`UpdateContactFlowModuleMetadataInput`](crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateContactFlowModuleMetadataInputBuilder {
    pub(crate) instance_id: std::option::Option<std::string::String>,
    pub(crate) contact_flow_module_id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) state: std::option::Option<crate::types::ContactFlowModuleState>,
}
impl UpdateContactFlowModuleMetadataInputBuilder {
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_id = Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    pub fn set_instance_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The identifier of the flow module.</p>
    pub fn contact_flow_module_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.contact_flow_module_id = Some(input.into());
        self
    }
    /// <p>The identifier of the flow module.</p>
    pub fn set_contact_flow_module_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.contact_flow_module_id = input;
        self
    }
    /// <p>The name of the flow module.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the flow module.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The description of the flow module.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the flow module.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The state of flow module.</p>
    pub fn state(mut self, input: crate::types::ContactFlowModuleState) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>The state of flow module.</p>
    pub fn set_state(
        mut self,
        input: std::option::Option<crate::types::ContactFlowModuleState>,
    ) -> Self {
        self.state = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateContactFlowModuleMetadataInput`](crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_contact_flow_module_metadata::UpdateContactFlowModuleMetadataInput {
                instance_id: self.instance_id
                ,
                contact_flow_module_id: self.contact_flow_module_id
                ,
                name: self.name
                ,
                description: self.description
                ,
                state: self.state
                ,
            }
        )
    }
}
