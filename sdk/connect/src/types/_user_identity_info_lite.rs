// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The user's first name and last name.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UserIdentityInfoLite {
    /// <p>The user's first name.</p>
    #[doc(hidden)]
    pub first_name: std::option::Option<std::string::String>,
    /// <p>The user's last name.</p>
    #[doc(hidden)]
    pub last_name: std::option::Option<std::string::String>,
}
impl UserIdentityInfoLite {
    /// <p>The user's first name.</p>
    pub fn first_name(&self) -> std::option::Option<&str> {
        self.first_name.as_deref()
    }
    /// <p>The user's last name.</p>
    pub fn last_name(&self) -> std::option::Option<&str> {
        self.last_name.as_deref()
    }
}
impl UserIdentityInfoLite {
    /// Creates a new builder-style object to manufacture [`UserIdentityInfoLite`](crate::types::UserIdentityInfoLite).
    pub fn builder() -> crate::types::builders::UserIdentityInfoLiteBuilder {
        crate::types::builders::UserIdentityInfoLiteBuilder::default()
    }
}

/// A builder for [`UserIdentityInfoLite`](crate::types::UserIdentityInfoLite).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UserIdentityInfoLiteBuilder {
    pub(crate) first_name: std::option::Option<std::string::String>,
    pub(crate) last_name: std::option::Option<std::string::String>,
}
impl UserIdentityInfoLiteBuilder {
    /// <p>The user's first name.</p>
    pub fn first_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.first_name = Some(input.into());
        self
    }
    /// <p>The user's first name.</p>
    pub fn set_first_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.first_name = input;
        self
    }
    /// <p>The user's last name.</p>
    pub fn last_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_name = Some(input.into());
        self
    }
    /// <p>The user's last name.</p>
    pub fn set_last_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.last_name = input;
        self
    }
    /// Consumes the builder and constructs a [`UserIdentityInfoLite`](crate::types::UserIdentityInfoLite).
    pub fn build(self) -> crate::types::UserIdentityInfoLite {
        crate::types::UserIdentityInfoLite {
            first_name: self.first_name,
            last_name: self.last_name,
        }
    }
}
