// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains summary information about a routing profile queue.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RoutingProfileQueueConfigSummary {
    /// <p>The identifier for the queue.</p>
    pub queue_id: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    pub queue_arn: ::std::string::String,
    /// <p>The name of the queue.</p>
    pub queue_name: ::std::string::String,
    /// <p>The order in which contacts are to be handled for the queue. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a>.</p>
    pub priority: i32,
    /// <p>The delay, in seconds, that a contact should be in the queue before they are routed to an available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub delay: i32,
    /// <p>The channels this queue supports.</p>
    pub channel: crate::types::Channel,
}
impl RoutingProfileQueueConfigSummary {
    /// <p>The identifier for the queue.</p>
    pub fn queue_id(&self) -> &str {
        use std::ops::Deref;
        self.queue_id.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    pub fn queue_arn(&self) -> &str {
        use std::ops::Deref;
        self.queue_arn.deref()
    }
    /// <p>The name of the queue.</p>
    pub fn queue_name(&self) -> &str {
        use std::ops::Deref;
        self.queue_name.deref()
    }
    /// <p>The order in which contacts are to be handled for the queue. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a>.</p>
    pub fn priority(&self) -> i32 {
        self.priority
    }
    /// <p>The delay, in seconds, that a contact should be in the queue before they are routed to an available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn delay(&self) -> i32 {
        self.delay
    }
    /// <p>The channels this queue supports.</p>
    pub fn channel(&self) -> &crate::types::Channel {
        &self.channel
    }
}
impl RoutingProfileQueueConfigSummary {
    /// Creates a new builder-style object to manufacture [`RoutingProfileQueueConfigSummary`](crate::types::RoutingProfileQueueConfigSummary).
    pub fn builder() -> crate::types::builders::RoutingProfileQueueConfigSummaryBuilder {
        crate::types::builders::RoutingProfileQueueConfigSummaryBuilder::default()
    }
}

/// A builder for [`RoutingProfileQueueConfigSummary`](crate::types::RoutingProfileQueueConfigSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RoutingProfileQueueConfigSummaryBuilder {
    pub(crate) queue_id: ::std::option::Option<::std::string::String>,
    pub(crate) queue_arn: ::std::option::Option<::std::string::String>,
    pub(crate) queue_name: ::std::option::Option<::std::string::String>,
    pub(crate) priority: ::std::option::Option<i32>,
    pub(crate) delay: ::std::option::Option<i32>,
    pub(crate) channel: ::std::option::Option<crate::types::Channel>,
}
impl RoutingProfileQueueConfigSummaryBuilder {
    /// <p>The identifier for the queue.</p>
    /// This field is required.
    pub fn queue_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.queue_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the queue.</p>
    pub fn set_queue_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.queue_id = input;
        self
    }
    /// <p>The identifier for the queue.</p>
    pub fn get_queue_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.queue_id
    }
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    /// This field is required.
    pub fn queue_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.queue_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    pub fn set_queue_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.queue_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the queue.</p>
    pub fn get_queue_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.queue_arn
    }
    /// <p>The name of the queue.</p>
    /// This field is required.
    pub fn queue_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.queue_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the queue.</p>
    pub fn set_queue_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.queue_name = input;
        self
    }
    /// <p>The name of the queue.</p>
    pub fn get_queue_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.queue_name
    }
    /// <p>The order in which contacts are to be handled for the queue. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a>.</p>
    /// This field is required.
    pub fn priority(mut self, input: i32) -> Self {
        self.priority = ::std::option::Option::Some(input);
        self
    }
    /// <p>The order in which contacts are to be handled for the queue. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a>.</p>
    pub fn set_priority(mut self, input: ::std::option::Option<i32>) -> Self {
        self.priority = input;
        self
    }
    /// <p>The order in which contacts are to be handled for the queue. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a>.</p>
    pub fn get_priority(&self) -> &::std::option::Option<i32> {
        &self.priority
    }
    /// <p>The delay, in seconds, that a contact should be in the queue before they are routed to an available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    /// This field is required.
    pub fn delay(mut self, input: i32) -> Self {
        self.delay = ::std::option::Option::Some(input);
        self
    }
    /// <p>The delay, in seconds, that a contact should be in the queue before they are routed to an available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn set_delay(mut self, input: ::std::option::Option<i32>) -> Self {
        self.delay = input;
        self
    }
    /// <p>The delay, in seconds, that a contact should be in the queue before they are routed to an available agent. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html">Queues: priority and delay</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    pub fn get_delay(&self) -> &::std::option::Option<i32> {
        &self.delay
    }
    /// <p>The channels this queue supports.</p>
    /// This field is required.
    pub fn channel(mut self, input: crate::types::Channel) -> Self {
        self.channel = ::std::option::Option::Some(input);
        self
    }
    /// <p>The channels this queue supports.</p>
    pub fn set_channel(mut self, input: ::std::option::Option<crate::types::Channel>) -> Self {
        self.channel = input;
        self
    }
    /// <p>The channels this queue supports.</p>
    pub fn get_channel(&self) -> &::std::option::Option<crate::types::Channel> {
        &self.channel
    }
    /// Consumes the builder and constructs a [`RoutingProfileQueueConfigSummary`](crate::types::RoutingProfileQueueConfigSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`queue_id`](crate::types::builders::RoutingProfileQueueConfigSummaryBuilder::queue_id)
    /// - [`queue_arn`](crate::types::builders::RoutingProfileQueueConfigSummaryBuilder::queue_arn)
    /// - [`queue_name`](crate::types::builders::RoutingProfileQueueConfigSummaryBuilder::queue_name)
    /// - [`priority`](crate::types::builders::RoutingProfileQueueConfigSummaryBuilder::priority)
    /// - [`channel`](crate::types::builders::RoutingProfileQueueConfigSummaryBuilder::channel)
    pub fn build(self) -> ::std::result::Result<crate::types::RoutingProfileQueueConfigSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RoutingProfileQueueConfigSummary {
            queue_id: self.queue_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "queue_id",
                    "queue_id was not specified but it is required when building RoutingProfileQueueConfigSummary",
                )
            })?,
            queue_arn: self.queue_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "queue_arn",
                    "queue_arn was not specified but it is required when building RoutingProfileQueueConfigSummary",
                )
            })?,
            queue_name: self.queue_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "queue_name",
                    "queue_name was not specified but it is required when building RoutingProfileQueueConfigSummary",
                )
            })?,
            priority: self.priority.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "priority",
                    "priority was not specified but it is required when building RoutingProfileQueueConfigSummary",
                )
            })?,
            delay: self.delay.unwrap_or_default(),
            channel: self.channel.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "channel",
                    "channel was not specified but it is required when building RoutingProfileQueueConfigSummary",
                )
            })?,
        })
    }
}
