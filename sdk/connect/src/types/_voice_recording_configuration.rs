// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the recording configuration settings.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VoiceRecordingConfiguration {
    /// <p>Identifies which track is being recorded.</p>
    #[doc(hidden)]
    pub voice_recording_track: std::option::Option<crate::types::VoiceRecordingTrack>,
}
impl VoiceRecordingConfiguration {
    /// <p>Identifies which track is being recorded.</p>
    pub fn voice_recording_track(&self) -> std::option::Option<&crate::types::VoiceRecordingTrack> {
        self.voice_recording_track.as_ref()
    }
}
impl VoiceRecordingConfiguration {
    /// Creates a new builder-style object to manufacture [`VoiceRecordingConfiguration`](crate::types::VoiceRecordingConfiguration).
    pub fn builder() -> crate::types::builders::VoiceRecordingConfigurationBuilder {
        crate::types::builders::VoiceRecordingConfigurationBuilder::default()
    }
}

/// A builder for [`VoiceRecordingConfiguration`](crate::types::VoiceRecordingConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VoiceRecordingConfigurationBuilder {
    pub(crate) voice_recording_track: std::option::Option<crate::types::VoiceRecordingTrack>,
}
impl VoiceRecordingConfigurationBuilder {
    /// <p>Identifies which track is being recorded.</p>
    pub fn voice_recording_track(mut self, input: crate::types::VoiceRecordingTrack) -> Self {
        self.voice_recording_track = Some(input);
        self
    }
    /// <p>Identifies which track is being recorded.</p>
    pub fn set_voice_recording_track(
        mut self,
        input: std::option::Option<crate::types::VoiceRecordingTrack>,
    ) -> Self {
        self.voice_recording_track = input;
        self
    }
    /// Consumes the builder and constructs a [`VoiceRecordingConfiguration`](crate::types::VoiceRecordingConfiguration).
    pub fn build(self) -> crate::types::VoiceRecordingConfiguration {
        crate::types::VoiceRecordingConfiguration {
            voice_recording_track: self.voice_recording_track,
        }
    }
}
