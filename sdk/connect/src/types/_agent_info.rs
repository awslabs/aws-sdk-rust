// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the agent who accepted the contact.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AgentInfo {
    /// <p>The identifier of the agent who accepted the contact.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The timestamp when the contact was connected to the agent.</p>
    #[doc(hidden)]
    pub connected_to_agent_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl AgentInfo {
    /// <p>The identifier of the agent who accepted the contact.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The timestamp when the contact was connected to the agent.</p>
    pub fn connected_to_agent_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.connected_to_agent_timestamp.as_ref()
    }
}
impl AgentInfo {
    /// Creates a new builder-style object to manufacture [`AgentInfo`](crate::types::AgentInfo).
    pub fn builder() -> crate::types::builders::AgentInfoBuilder {
        crate::types::builders::AgentInfoBuilder::default()
    }
}

/// A builder for [`AgentInfo`](crate::types::AgentInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AgentInfoBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) connected_to_agent_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl AgentInfoBuilder {
    /// <p>The identifier of the agent who accepted the contact.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The identifier of the agent who accepted the contact.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The timestamp when the contact was connected to the agent.</p>
    pub fn connected_to_agent_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.connected_to_agent_timestamp = Some(input);
        self
    }
    /// <p>The timestamp when the contact was connected to the agent.</p>
    pub fn set_connected_to_agent_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.connected_to_agent_timestamp = input;
        self
    }
    /// Consumes the builder and constructs a [`AgentInfo`](crate::types::AgentInfo).
    pub fn build(self) -> crate::types::AgentInfo {
        crate::types::AgentInfo {
            id: self.id,
            connected_to_agent_timestamp: self.connected_to_agent_timestamp,
        }
    }
}
