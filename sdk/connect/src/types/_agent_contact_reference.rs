// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_Contact.html">contact</a> associated to the user.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AgentContactReference {
    /// <p>The identifier of the contact in this instance of Amazon Connect. </p>
    #[doc(hidden)]
    pub contact_id: std::option::Option<std::string::String>,
    /// <p>The channel of the contact.</p>
    #[doc(hidden)]
    pub channel: std::option::Option<crate::types::Channel>,
    /// <p>How the contact was initiated.</p>
    #[doc(hidden)]
    pub initiation_method: std::option::Option<crate::types::ContactInitiationMethod>,
    /// <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html">state of the contact</a>.</p>
    #[doc(hidden)]
    pub agent_contact_state: std::option::Option<crate::types::ContactState>,
    /// <p>The epoch timestamp when the contact state started.</p>
    #[doc(hidden)]
    pub state_start_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time at which the contact was connected to an agent.</p>
    #[doc(hidden)]
    pub connected_to_agent_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Contains information about a queue resource for which metrics are returned.</p>
    #[doc(hidden)]
    pub queue: std::option::Option<crate::types::QueueReference>,
}
impl AgentContactReference {
    /// <p>The identifier of the contact in this instance of Amazon Connect. </p>
    pub fn contact_id(&self) -> std::option::Option<&str> {
        self.contact_id.as_deref()
    }
    /// <p>The channel of the contact.</p>
    pub fn channel(&self) -> std::option::Option<&crate::types::Channel> {
        self.channel.as_ref()
    }
    /// <p>How the contact was initiated.</p>
    pub fn initiation_method(&self) -> std::option::Option<&crate::types::ContactInitiationMethod> {
        self.initiation_method.as_ref()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html">state of the contact</a>.</p>
    pub fn agent_contact_state(&self) -> std::option::Option<&crate::types::ContactState> {
        self.agent_contact_state.as_ref()
    }
    /// <p>The epoch timestamp when the contact state started.</p>
    pub fn state_start_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.state_start_timestamp.as_ref()
    }
    /// <p>The time at which the contact was connected to an agent.</p>
    pub fn connected_to_agent_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.connected_to_agent_timestamp.as_ref()
    }
    /// <p>Contains information about a queue resource for which metrics are returned.</p>
    pub fn queue(&self) -> std::option::Option<&crate::types::QueueReference> {
        self.queue.as_ref()
    }
}
impl AgentContactReference {
    /// Creates a new builder-style object to manufacture [`AgentContactReference`](crate::types::AgentContactReference).
    pub fn builder() -> crate::types::builders::AgentContactReferenceBuilder {
        crate::types::builders::AgentContactReferenceBuilder::default()
    }
}

/// A builder for [`AgentContactReference`](crate::types::AgentContactReference).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AgentContactReferenceBuilder {
    pub(crate) contact_id: std::option::Option<std::string::String>,
    pub(crate) channel: std::option::Option<crate::types::Channel>,
    pub(crate) initiation_method: std::option::Option<crate::types::ContactInitiationMethod>,
    pub(crate) agent_contact_state: std::option::Option<crate::types::ContactState>,
    pub(crate) state_start_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) connected_to_agent_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) queue: std::option::Option<crate::types::QueueReference>,
}
impl AgentContactReferenceBuilder {
    /// <p>The identifier of the contact in this instance of Amazon Connect. </p>
    pub fn contact_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.contact_id = Some(input.into());
        self
    }
    /// <p>The identifier of the contact in this instance of Amazon Connect. </p>
    pub fn set_contact_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.contact_id = input;
        self
    }
    /// <p>The channel of the contact.</p>
    pub fn channel(mut self, input: crate::types::Channel) -> Self {
        self.channel = Some(input);
        self
    }
    /// <p>The channel of the contact.</p>
    pub fn set_channel(mut self, input: std::option::Option<crate::types::Channel>) -> Self {
        self.channel = input;
        self
    }
    /// <p>How the contact was initiated.</p>
    pub fn initiation_method(mut self, input: crate::types::ContactInitiationMethod) -> Self {
        self.initiation_method = Some(input);
        self
    }
    /// <p>How the contact was initiated.</p>
    pub fn set_initiation_method(
        mut self,
        input: std::option::Option<crate::types::ContactInitiationMethod>,
    ) -> Self {
        self.initiation_method = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html">state of the contact</a>.</p>
    pub fn agent_contact_state(mut self, input: crate::types::ContactState) -> Self {
        self.agent_contact_state = Some(input);
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html">state of the contact</a>.</p>
    pub fn set_agent_contact_state(
        mut self,
        input: std::option::Option<crate::types::ContactState>,
    ) -> Self {
        self.agent_contact_state = input;
        self
    }
    /// <p>The epoch timestamp when the contact state started.</p>
    pub fn state_start_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.state_start_timestamp = Some(input);
        self
    }
    /// <p>The epoch timestamp when the contact state started.</p>
    pub fn set_state_start_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.state_start_timestamp = input;
        self
    }
    /// <p>The time at which the contact was connected to an agent.</p>
    pub fn connected_to_agent_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.connected_to_agent_timestamp = Some(input);
        self
    }
    /// <p>The time at which the contact was connected to an agent.</p>
    pub fn set_connected_to_agent_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.connected_to_agent_timestamp = input;
        self
    }
    /// <p>Contains information about a queue resource for which metrics are returned.</p>
    pub fn queue(mut self, input: crate::types::QueueReference) -> Self {
        self.queue = Some(input);
        self
    }
    /// <p>Contains information about a queue resource for which metrics are returned.</p>
    pub fn set_queue(mut self, input: std::option::Option<crate::types::QueueReference>) -> Self {
        self.queue = input;
        self
    }
    /// Consumes the builder and constructs a [`AgentContactReference`](crate::types::AgentContactReference).
    pub fn build(self) -> crate::types::AgentContactReference {
        crate::types::AgentContactReference {
            contact_id: self.contact_id,
            channel: self.channel,
            initiation_method: self.initiation_method,
            agent_contact_state: self.agent_contact_state,
            state_start_timestamp: self.state_start_timestamp,
            connected_to_agent_timestamp: self.connected_to_agent_timestamp,
            queue: self.queue,
        }
    }
}
