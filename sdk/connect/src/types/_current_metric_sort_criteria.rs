// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The way to sort the resulting response based on metrics. By default resources are sorted based on <code>AGENTS_ONLINE</code>, <code>DESCENDING</code>. The metric collection is sorted based on the input metrics.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CurrentMetricSortCriteria {
    /// <p>The current metric names.</p>
    #[doc(hidden)]
    pub sort_by_metric: std::option::Option<crate::types::CurrentMetricName>,
    /// <p>The way to sort.</p>
    #[doc(hidden)]
    pub sort_order: std::option::Option<crate::types::SortOrder>,
}
impl CurrentMetricSortCriteria {
    /// <p>The current metric names.</p>
    pub fn sort_by_metric(&self) -> std::option::Option<&crate::types::CurrentMetricName> {
        self.sort_by_metric.as_ref()
    }
    /// <p>The way to sort.</p>
    pub fn sort_order(&self) -> std::option::Option<&crate::types::SortOrder> {
        self.sort_order.as_ref()
    }
}
impl CurrentMetricSortCriteria {
    /// Creates a new builder-style object to manufacture [`CurrentMetricSortCriteria`](crate::types::CurrentMetricSortCriteria).
    pub fn builder() -> crate::types::builders::CurrentMetricSortCriteriaBuilder {
        crate::types::builders::CurrentMetricSortCriteriaBuilder::default()
    }
}

/// A builder for [`CurrentMetricSortCriteria`](crate::types::CurrentMetricSortCriteria).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CurrentMetricSortCriteriaBuilder {
    pub(crate) sort_by_metric: std::option::Option<crate::types::CurrentMetricName>,
    pub(crate) sort_order: std::option::Option<crate::types::SortOrder>,
}
impl CurrentMetricSortCriteriaBuilder {
    /// <p>The current metric names.</p>
    pub fn sort_by_metric(mut self, input: crate::types::CurrentMetricName) -> Self {
        self.sort_by_metric = Some(input);
        self
    }
    /// <p>The current metric names.</p>
    pub fn set_sort_by_metric(
        mut self,
        input: std::option::Option<crate::types::CurrentMetricName>,
    ) -> Self {
        self.sort_by_metric = input;
        self
    }
    /// <p>The way to sort.</p>
    pub fn sort_order(mut self, input: crate::types::SortOrder) -> Self {
        self.sort_order = Some(input);
        self
    }
    /// <p>The way to sort.</p>
    pub fn set_sort_order(mut self, input: std::option::Option<crate::types::SortOrder>) -> Self {
        self.sort_order = input;
        self
    }
    /// Consumes the builder and constructs a [`CurrentMetricSortCriteria`](crate::types::CurrentMetricSortCriteria).
    pub fn build(self) -> crate::types::CurrentMetricSortCriteria {
        crate::types::CurrentMetricSortCriteria {
            sort_by_metric: self.sort_by_metric,
            sort_order: self.sort_order,
        }
    }
}
