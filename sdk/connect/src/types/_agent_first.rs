// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about agent-first outbound strategy configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AgentFirst {
    /// <p>Information about preview configuration of agent first outbound strategy</p>
    pub preview: ::std::option::Option<crate::types::Preview>,
}
impl AgentFirst {
    /// <p>Information about preview configuration of agent first outbound strategy</p>
    pub fn preview(&self) -> ::std::option::Option<&crate::types::Preview> {
        self.preview.as_ref()
    }
}
impl AgentFirst {
    /// Creates a new builder-style object to manufacture [`AgentFirst`](crate::types::AgentFirst).
    pub fn builder() -> crate::types::builders::AgentFirstBuilder {
        crate::types::builders::AgentFirstBuilder::default()
    }
}

/// A builder for [`AgentFirst`](crate::types::AgentFirst).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AgentFirstBuilder {
    pub(crate) preview: ::std::option::Option<crate::types::Preview>,
}
impl AgentFirstBuilder {
    /// <p>Information about preview configuration of agent first outbound strategy</p>
    pub fn preview(mut self, input: crate::types::Preview) -> Self {
        self.preview = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about preview configuration of agent first outbound strategy</p>
    pub fn set_preview(mut self, input: ::std::option::Option<crate::types::Preview>) -> Self {
        self.preview = input;
        self
    }
    /// <p>Information about preview configuration of agent first outbound strategy</p>
    pub fn get_preview(&self) -> &::std::option::Option<crate::types::Preview> {
        &self.preview
    }
    /// Consumes the builder and constructs a [`AgentFirst`](crate::types::AgentFirst).
    pub fn build(self) -> crate::types::AgentFirst {
        crate::types::AgentFirst { preview: self.preview }
    }
}
