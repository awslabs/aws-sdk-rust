// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The distribution of traffic between the instance and its replicas.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TelephonyConfig {
    /// <p>Information about traffic distributions.</p>
    #[doc(hidden)]
    pub distributions: std::option::Option<std::vec::Vec<crate::types::Distribution>>,
}
impl TelephonyConfig {
    /// <p>Information about traffic distributions.</p>
    pub fn distributions(&self) -> std::option::Option<&[crate::types::Distribution]> {
        self.distributions.as_deref()
    }
}
impl TelephonyConfig {
    /// Creates a new builder-style object to manufacture [`TelephonyConfig`](crate::types::TelephonyConfig).
    pub fn builder() -> crate::types::builders::TelephonyConfigBuilder {
        crate::types::builders::TelephonyConfigBuilder::default()
    }
}

/// A builder for [`TelephonyConfig`](crate::types::TelephonyConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TelephonyConfigBuilder {
    pub(crate) distributions: std::option::Option<std::vec::Vec<crate::types::Distribution>>,
}
impl TelephonyConfigBuilder {
    /// Appends an item to `distributions`.
    ///
    /// To override the contents of this collection use [`set_distributions`](Self::set_distributions).
    ///
    /// <p>Information about traffic distributions.</p>
    pub fn distributions(mut self, input: crate::types::Distribution) -> Self {
        let mut v = self.distributions.unwrap_or_default();
        v.push(input);
        self.distributions = Some(v);
        self
    }
    /// <p>Information about traffic distributions.</p>
    pub fn set_distributions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Distribution>>,
    ) -> Self {
        self.distributions = input;
        self
    }
    /// Consumes the builder and constructs a [`TelephonyConfig`](crate::types::TelephonyConfig).
    pub fn build(self) -> crate::types::TelephonyConfig {
        crate::types::TelephonyConfig {
            distributions: self.distributions,
        }
    }
}
