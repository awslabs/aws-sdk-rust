// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The timestamp condition indicating which contact timestamp should be used and how it should be filtered. It is not an actual timestamp value.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SearchContactsTimestampCondition {
    /// <p>Type of the timestamps to use for the filter.</p>
    pub r#type: crate::types::SearchContactsTimeRangeType,
    /// <p>Condition of the timestamp on the contact.</p>
    pub condition_type: crate::types::SearchContactsTimeRangeConditionType,
}
impl SearchContactsTimestampCondition {
    /// <p>Type of the timestamps to use for the filter.</p>
    pub fn r#type(&self) -> &crate::types::SearchContactsTimeRangeType {
        &self.r#type
    }
    /// <p>Condition of the timestamp on the contact.</p>
    pub fn condition_type(&self) -> &crate::types::SearchContactsTimeRangeConditionType {
        &self.condition_type
    }
}
impl SearchContactsTimestampCondition {
    /// Creates a new builder-style object to manufacture [`SearchContactsTimestampCondition`](crate::types::SearchContactsTimestampCondition).
    pub fn builder() -> crate::types::builders::SearchContactsTimestampConditionBuilder {
        crate::types::builders::SearchContactsTimestampConditionBuilder::default()
    }
}

/// A builder for [`SearchContactsTimestampCondition`](crate::types::SearchContactsTimestampCondition).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SearchContactsTimestampConditionBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::SearchContactsTimeRangeType>,
    pub(crate) condition_type: ::std::option::Option<crate::types::SearchContactsTimeRangeConditionType>,
}
impl SearchContactsTimestampConditionBuilder {
    /// <p>Type of the timestamps to use for the filter.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::SearchContactsTimeRangeType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Type of the timestamps to use for the filter.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::SearchContactsTimeRangeType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>Type of the timestamps to use for the filter.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::SearchContactsTimeRangeType> {
        &self.r#type
    }
    /// <p>Condition of the timestamp on the contact.</p>
    /// This field is required.
    pub fn condition_type(mut self, input: crate::types::SearchContactsTimeRangeConditionType) -> Self {
        self.condition_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Condition of the timestamp on the contact.</p>
    pub fn set_condition_type(mut self, input: ::std::option::Option<crate::types::SearchContactsTimeRangeConditionType>) -> Self {
        self.condition_type = input;
        self
    }
    /// <p>Condition of the timestamp on the contact.</p>
    pub fn get_condition_type(&self) -> &::std::option::Option<crate::types::SearchContactsTimeRangeConditionType> {
        &self.condition_type
    }
    /// Consumes the builder and constructs a [`SearchContactsTimestampCondition`](crate::types::SearchContactsTimestampCondition).
    /// This method will fail if any of the following fields are not set:
    /// - [`r#type`](crate::types::builders::SearchContactsTimestampConditionBuilder::type)
    /// - [`condition_type`](crate::types::builders::SearchContactsTimestampConditionBuilder::condition_type)
    pub fn build(self) -> ::std::result::Result<crate::types::SearchContactsTimestampCondition, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SearchContactsTimestampCondition {
            r#type: self.r#type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "r#type",
                    "r#type was not specified but it is required when building SearchContactsTimestampCondition",
                )
            })?,
            condition_type: self.condition_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "condition_type",
                    "condition_type was not specified but it is required when building SearchContactsTimestampCondition",
                )
            })?,
        })
    }
}
