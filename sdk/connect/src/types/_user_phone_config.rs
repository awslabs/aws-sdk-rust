// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the phone configuration settings for a user.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UserPhoneConfig {
    /// <p>The phone type.</p>
    pub phone_type: crate::types::PhoneType,
    /// <p>The Auto accept setting.</p>
    pub auto_accept: bool,
    /// <p>The After Call Work (ACW) timeout setting, in seconds.</p> <note>
    /// <p>When returned by a <code>SearchUsers</code> call, <code>AfterContactWorkTimeLimit</code> is returned in milliseconds. </p>
    /// </note>
    pub after_contact_work_time_limit: i32,
    /// <p>The phone number for the user's desk phone.</p>
    pub desk_phone_number: ::std::option::Option<::std::string::String>,
}
impl UserPhoneConfig {
    /// <p>The phone type.</p>
    pub fn phone_type(&self) -> &crate::types::PhoneType {
        &self.phone_type
    }
    /// <p>The Auto accept setting.</p>
    pub fn auto_accept(&self) -> bool {
        self.auto_accept
    }
    /// <p>The After Call Work (ACW) timeout setting, in seconds.</p> <note>
    /// <p>When returned by a <code>SearchUsers</code> call, <code>AfterContactWorkTimeLimit</code> is returned in milliseconds. </p>
    /// </note>
    pub fn after_contact_work_time_limit(&self) -> i32 {
        self.after_contact_work_time_limit
    }
    /// <p>The phone number for the user's desk phone.</p>
    pub fn desk_phone_number(&self) -> ::std::option::Option<&str> {
        self.desk_phone_number.as_deref()
    }
}
impl UserPhoneConfig {
    /// Creates a new builder-style object to manufacture [`UserPhoneConfig`](crate::types::UserPhoneConfig).
    pub fn builder() -> crate::types::builders::UserPhoneConfigBuilder {
        crate::types::builders::UserPhoneConfigBuilder::default()
    }
}

/// A builder for [`UserPhoneConfig`](crate::types::UserPhoneConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UserPhoneConfigBuilder {
    pub(crate) phone_type: ::std::option::Option<crate::types::PhoneType>,
    pub(crate) auto_accept: ::std::option::Option<bool>,
    pub(crate) after_contact_work_time_limit: ::std::option::Option<i32>,
    pub(crate) desk_phone_number: ::std::option::Option<::std::string::String>,
}
impl UserPhoneConfigBuilder {
    /// <p>The phone type.</p>
    /// This field is required.
    pub fn phone_type(mut self, input: crate::types::PhoneType) -> Self {
        self.phone_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The phone type.</p>
    pub fn set_phone_type(mut self, input: ::std::option::Option<crate::types::PhoneType>) -> Self {
        self.phone_type = input;
        self
    }
    /// <p>The phone type.</p>
    pub fn get_phone_type(&self) -> &::std::option::Option<crate::types::PhoneType> {
        &self.phone_type
    }
    /// <p>The Auto accept setting.</p>
    pub fn auto_accept(mut self, input: bool) -> Self {
        self.auto_accept = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Auto accept setting.</p>
    pub fn set_auto_accept(mut self, input: ::std::option::Option<bool>) -> Self {
        self.auto_accept = input;
        self
    }
    /// <p>The Auto accept setting.</p>
    pub fn get_auto_accept(&self) -> &::std::option::Option<bool> {
        &self.auto_accept
    }
    /// <p>The After Call Work (ACW) timeout setting, in seconds.</p> <note>
    /// <p>When returned by a <code>SearchUsers</code> call, <code>AfterContactWorkTimeLimit</code> is returned in milliseconds. </p>
    /// </note>
    pub fn after_contact_work_time_limit(mut self, input: i32) -> Self {
        self.after_contact_work_time_limit = ::std::option::Option::Some(input);
        self
    }
    /// <p>The After Call Work (ACW) timeout setting, in seconds.</p> <note>
    /// <p>When returned by a <code>SearchUsers</code> call, <code>AfterContactWorkTimeLimit</code> is returned in milliseconds. </p>
    /// </note>
    pub fn set_after_contact_work_time_limit(mut self, input: ::std::option::Option<i32>) -> Self {
        self.after_contact_work_time_limit = input;
        self
    }
    /// <p>The After Call Work (ACW) timeout setting, in seconds.</p> <note>
    /// <p>When returned by a <code>SearchUsers</code> call, <code>AfterContactWorkTimeLimit</code> is returned in milliseconds. </p>
    /// </note>
    pub fn get_after_contact_work_time_limit(&self) -> &::std::option::Option<i32> {
        &self.after_contact_work_time_limit
    }
    /// <p>The phone number for the user's desk phone.</p>
    pub fn desk_phone_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.desk_phone_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The phone number for the user's desk phone.</p>
    pub fn set_desk_phone_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.desk_phone_number = input;
        self
    }
    /// <p>The phone number for the user's desk phone.</p>
    pub fn get_desk_phone_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.desk_phone_number
    }
    /// Consumes the builder and constructs a [`UserPhoneConfig`](crate::types::UserPhoneConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`phone_type`](crate::types::builders::UserPhoneConfigBuilder::phone_type)
    pub fn build(self) -> ::std::result::Result<crate::types::UserPhoneConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UserPhoneConfig {
            phone_type: self.phone_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "phone_type",
                    "phone_type was not specified but it is required when building UserPhoneConfig",
                )
            })?,
            auto_accept: self.auto_accept.unwrap_or_default(),
            after_contact_work_time_limit: self.after_contact_work_time_limit.unwrap_or_default(),
            desk_phone_number: self.desk_phone_number,
        })
    }
}
