// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActionSummary {
    /// <p>The action type.</p>
    #[doc(hidden)]
    pub action_type: std::option::Option<crate::types::ActionType>,
}
impl ActionSummary {
    /// <p>The action type.</p>
    pub fn action_type(&self) -> std::option::Option<&crate::types::ActionType> {
        self.action_type.as_ref()
    }
}
impl ActionSummary {
    /// Creates a new builder-style object to manufacture [`ActionSummary`](crate::types::ActionSummary).
    pub fn builder() -> crate::types::builders::ActionSummaryBuilder {
        crate::types::builders::ActionSummaryBuilder::default()
    }
}

/// A builder for [`ActionSummary`](crate::types::ActionSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActionSummaryBuilder {
    pub(crate) action_type: std::option::Option<crate::types::ActionType>,
}
impl ActionSummaryBuilder {
    /// <p>The action type.</p>
    pub fn action_type(mut self, input: crate::types::ActionType) -> Self {
        self.action_type = Some(input);
        self
    }
    /// <p>The action type.</p>
    pub fn set_action_type(mut self, input: std::option::Option<crate::types::ActionType>) -> Self {
        self.action_type = input;
        self
    }
    /// Consumes the builder and constructs a [`ActionSummary`](crate::types::ActionSummary).
    pub fn build(self) -> crate::types::ActionSummary {
        crate::types::ActionSummary {
            action_type: self.action_type,
        }
    }
}
