// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the dimensions for a set of metrics.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Dimensions {
    /// <p>Information about the queue for which metrics are returned.</p>
    #[doc(hidden)]
    pub queue: std::option::Option<crate::types::QueueReference>,
    /// <p>The channel used for grouping and filters.</p>
    #[doc(hidden)]
    pub channel: std::option::Option<crate::types::Channel>,
    /// <p>Information about the routing profile assigned to the user.</p>
    #[doc(hidden)]
    pub routing_profile: std::option::Option<crate::types::RoutingProfileReference>,
}
impl Dimensions {
    /// <p>Information about the queue for which metrics are returned.</p>
    pub fn queue(&self) -> std::option::Option<&crate::types::QueueReference> {
        self.queue.as_ref()
    }
    /// <p>The channel used for grouping and filters.</p>
    pub fn channel(&self) -> std::option::Option<&crate::types::Channel> {
        self.channel.as_ref()
    }
    /// <p>Information about the routing profile assigned to the user.</p>
    pub fn routing_profile(&self) -> std::option::Option<&crate::types::RoutingProfileReference> {
        self.routing_profile.as_ref()
    }
}
impl Dimensions {
    /// Creates a new builder-style object to manufacture [`Dimensions`](crate::types::Dimensions).
    pub fn builder() -> crate::types::builders::DimensionsBuilder {
        crate::types::builders::DimensionsBuilder::default()
    }
}

/// A builder for [`Dimensions`](crate::types::Dimensions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DimensionsBuilder {
    pub(crate) queue: std::option::Option<crate::types::QueueReference>,
    pub(crate) channel: std::option::Option<crate::types::Channel>,
    pub(crate) routing_profile: std::option::Option<crate::types::RoutingProfileReference>,
}
impl DimensionsBuilder {
    /// <p>Information about the queue for which metrics are returned.</p>
    pub fn queue(mut self, input: crate::types::QueueReference) -> Self {
        self.queue = Some(input);
        self
    }
    /// <p>Information about the queue for which metrics are returned.</p>
    pub fn set_queue(mut self, input: std::option::Option<crate::types::QueueReference>) -> Self {
        self.queue = input;
        self
    }
    /// <p>The channel used for grouping and filters.</p>
    pub fn channel(mut self, input: crate::types::Channel) -> Self {
        self.channel = Some(input);
        self
    }
    /// <p>The channel used for grouping and filters.</p>
    pub fn set_channel(mut self, input: std::option::Option<crate::types::Channel>) -> Self {
        self.channel = input;
        self
    }
    /// <p>Information about the routing profile assigned to the user.</p>
    pub fn routing_profile(mut self, input: crate::types::RoutingProfileReference) -> Self {
        self.routing_profile = Some(input);
        self
    }
    /// <p>Information about the routing profile assigned to the user.</p>
    pub fn set_routing_profile(
        mut self,
        input: std::option::Option<crate::types::RoutingProfileReference>,
    ) -> Self {
        self.routing_profile = input;
        self
    }
    /// Consumes the builder and constructs a [`Dimensions`](crate::types::Dimensions).
    pub fn build(self) -> crate::types::Dimensions {
        crate::types::Dimensions {
            queue: self.queue,
            channel: self.channel,
            routing_profile: self.routing_profile,
        }
    }
}
