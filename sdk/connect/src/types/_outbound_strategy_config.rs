// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The config of the outbound strategy.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OutboundStrategyConfig {
    /// <p>The config of agent first outbound strategy.</p>
    pub agent_first: ::std::option::Option<crate::types::AgentFirst>,
}
impl OutboundStrategyConfig {
    /// <p>The config of agent first outbound strategy.</p>
    pub fn agent_first(&self) -> ::std::option::Option<&crate::types::AgentFirst> {
        self.agent_first.as_ref()
    }
}
impl OutboundStrategyConfig {
    /// Creates a new builder-style object to manufacture [`OutboundStrategyConfig`](crate::types::OutboundStrategyConfig).
    pub fn builder() -> crate::types::builders::OutboundStrategyConfigBuilder {
        crate::types::builders::OutboundStrategyConfigBuilder::default()
    }
}

/// A builder for [`OutboundStrategyConfig`](crate::types::OutboundStrategyConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OutboundStrategyConfigBuilder {
    pub(crate) agent_first: ::std::option::Option<crate::types::AgentFirst>,
}
impl OutboundStrategyConfigBuilder {
    /// <p>The config of agent first outbound strategy.</p>
    pub fn agent_first(mut self, input: crate::types::AgentFirst) -> Self {
        self.agent_first = ::std::option::Option::Some(input);
        self
    }
    /// <p>The config of agent first outbound strategy.</p>
    pub fn set_agent_first(mut self, input: ::std::option::Option<crate::types::AgentFirst>) -> Self {
        self.agent_first = input;
        self
    }
    /// <p>The config of agent first outbound strategy.</p>
    pub fn get_agent_first(&self) -> &::std::option::Option<crate::types::AgentFirst> {
        &self.agent_first
    }
    /// Consumes the builder and constructs a [`OutboundStrategyConfig`](crate::types::OutboundStrategyConfig).
    pub fn build(self) -> crate::types::OutboundStrategyConfig {
        crate::types::OutboundStrategyConfig {
            agent_first: self.agent_first,
        }
    }
}
