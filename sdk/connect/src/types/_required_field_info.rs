// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a required field.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RequiredFieldInfo {
    /// <p>The unique identifier for the field.</p>
    #[doc(hidden)]
    pub id: std::option::Option<crate::types::TaskTemplateFieldIdentifier>,
}
impl RequiredFieldInfo {
    /// <p>The unique identifier for the field.</p>
    pub fn id(&self) -> std::option::Option<&crate::types::TaskTemplateFieldIdentifier> {
        self.id.as_ref()
    }
}
impl RequiredFieldInfo {
    /// Creates a new builder-style object to manufacture [`RequiredFieldInfo`](crate::types::RequiredFieldInfo).
    pub fn builder() -> crate::types::builders::RequiredFieldInfoBuilder {
        crate::types::builders::RequiredFieldInfoBuilder::default()
    }
}

/// A builder for [`RequiredFieldInfo`](crate::types::RequiredFieldInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RequiredFieldInfoBuilder {
    pub(crate) id: std::option::Option<crate::types::TaskTemplateFieldIdentifier>,
}
impl RequiredFieldInfoBuilder {
    /// <p>The unique identifier for the field.</p>
    pub fn id(mut self, input: crate::types::TaskTemplateFieldIdentifier) -> Self {
        self.id = Some(input);
        self
    }
    /// <p>The unique identifier for the field.</p>
    pub fn set_id(
        mut self,
        input: std::option::Option<crate::types::TaskTemplateFieldIdentifier>,
    ) -> Self {
        self.id = input;
        self
    }
    /// Consumes the builder and constructs a [`RequiredFieldInfo`](crate::types::RequiredFieldInfo).
    pub fn build(self) -> crate::types::RequiredFieldInfo {
        crate::types::RequiredFieldInfo { id: self.id }
    }
}
