// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_task_contact_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_task_contact::StartTaskContactInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.attributes {
        #[allow(unused_mut)]
        let mut object_2 = object.key("Attributes").start_object();
        for (key_3, value_4) in var_1 {
            {
                object_2.key(key_3.as_str()).string(value_4.as_str());
            }
        }
        object_2.finish();
    }
    if let Some(var_5) = &input.client_token {
        object.key("ClientToken").string(var_5.as_str());
    }
    if let Some(var_6) = &input.contact_flow_id {
        object.key("ContactFlowId").string(var_6.as_str());
    }
    if let Some(var_7) = &input.description {
        object.key("Description").string(var_7.as_str());
    }
    if let Some(var_8) = &input.instance_id {
        object.key("InstanceId").string(var_8.as_str());
    }
    if let Some(var_9) = &input.name {
        object.key("Name").string(var_9.as_str());
    }
    if let Some(var_10) = &input.previous_contact_id {
        object.key("PreviousContactId").string(var_10.as_str());
    }
    if let Some(var_11) = &input.quick_connect_id {
        object.key("QuickConnectId").string(var_11.as_str());
    }
    if let Some(var_12) = &input.references {
        #[allow(unused_mut)]
        let mut object_13 = object.key("References").start_object();
        for (key_14, value_15) in var_12 {
            {
                #[allow(unused_mut)]
                let mut object_16 = object_13.key(key_14.as_str()).start_object();
                crate::protocol_serde::shape_reference::ser_reference(&mut object_16, value_15)?;
                object_16.finish();
            }
        }
        object_13.finish();
    }
    if let Some(var_17) = &input.scheduled_time {
        object
            .key("ScheduledTime")
            .date_time(var_17, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_18) = &input.task_template_id {
        object.key("TaskTemplateId").string(var_18.as_str());
    }
    Ok(())
}
