// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_metric_data_v2_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_metric_data_v2::GetMetricDataV2Input,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.end_time {
        object
            .key("EndTime")
            .date_time(var_1, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_2) = &input.filters {
        let mut array_3 = object.key("Filters").start_array();
        for item_4 in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::protocol_serde::shape_filter_v2::ser_filter_v2(&mut object_5, item_4)?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.groupings {
        let mut array_7 = object.key("Groupings").start_array();
        for item_8 in var_6 {
            {
                array_7.value().string(item_8.as_str());
            }
        }
        array_7.finish();
    }
    if let Some(var_9) = &input.interval {
        #[allow(unused_mut)]
        let mut object_10 = object.key("Interval").start_object();
        crate::protocol_serde::shape_interval_details::ser_interval_details(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_11).into()),
        );
    }
    if let Some(var_12) = &input.metrics {
        let mut array_13 = object.key("Metrics").start_array();
        for item_14 in var_12 {
            {
                #[allow(unused_mut)]
                let mut object_15 = array_13.value().start_object();
                crate::protocol_serde::shape_metric_v2::ser_metric_v2(&mut object_15, item_14)?;
                object_15.finish();
            }
        }
        array_13.finish();
    }
    if let Some(var_16) = &input.next_token {
        object.key("NextToken").string(var_16.as_str());
    }
    if let Some(var_17) = &input.resource_arn {
        object.key("ResourceArn").string(var_17.as_str());
    }
    if let Some(var_18) = &input.start_time {
        object
            .key("StartTime")
            .date_time(var_18, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    Ok(())
}
