// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_rule_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_rule::CreateRuleInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.actions {
        let mut array_2 = object.key("Actions").start_array();
        for item_3 in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_4 = array_2.value().start_object();
                crate::protocol_serde::shape_rule_action::ser_rule_action(&mut object_4, item_3)?;
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.client_token {
        object.key("ClientToken").string(var_5.as_str());
    }
    if let Some(var_6) = &input.function {
        object.key("Function").string(var_6.as_str());
    }
    if let Some(var_7) = &input.name {
        object.key("Name").string(var_7.as_str());
    }
    if let Some(var_8) = &input.publish_status {
        object.key("PublishStatus").string(var_8.as_str());
    }
    if let Some(var_9) = &input.trigger_event_source {
        #[allow(unused_mut)]
        let mut object_10 = object.key("TriggerEventSource").start_object();
        crate::protocol_serde::shape_rule_trigger_event_source::ser_rule_trigger_event_source(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}
