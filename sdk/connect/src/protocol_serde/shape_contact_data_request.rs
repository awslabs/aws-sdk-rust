// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_contact_data_request(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ContactDataRequest,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.system_endpoint {
        #[allow(unused_mut)]
        let mut object_2 = object.key("SystemEndpoint").start_object();
        crate::protocol_serde::shape_endpoint::ser_endpoint(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.customer_endpoint {
        #[allow(unused_mut)]
        let mut object_4 = object.key("CustomerEndpoint").start_object();
        crate::protocol_serde::shape_endpoint::ser_endpoint(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.request_identifier {
        object.key("RequestIdentifier").string(var_5.as_str());
    }
    if let Some(var_6) = &input.queue_id {
        object.key("QueueId").string(var_6.as_str());
    }
    if let Some(var_7) = &input.attributes {
        #[allow(unused_mut)]
        let mut object_8 = object.key("Attributes").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9.as_str()).string(value_10.as_str());
            }
        }
        object_8.finish();
    }
    if let Some(var_11) = &input.campaign {
        #[allow(unused_mut)]
        let mut object_12 = object.key("Campaign").start_object();
        crate::protocol_serde::shape_campaign::ser_campaign(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.outbound_strategy {
        #[allow(unused_mut)]
        let mut object_14 = object.key("OutboundStrategy").start_object();
        crate::protocol_serde::shape_outbound_strategy::ser_outbound_strategy(&mut object_14, var_13)?;
        object_14.finish();
    }
    Ok(())
}
