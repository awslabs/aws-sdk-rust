// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_associate_approved_origin_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateApprovedOriginInput,
) {
    if let Some(var_1) = &input.origin {
        object.key("Origin").string(var_1);
    }
}

pub fn serialize_structure_crate_input_associate_bot_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateBotInput,
) {
    if let Some(var_2) = &input.lex_bot {
        let mut object_3 = object.key("LexBot").start_object();
        crate::json_ser::serialize_structure_crate_model_lex_bot(&mut object_3, var_2);
        object_3.finish();
    }
    if let Some(var_4) = &input.lex_v2_bot {
        let mut object_5 = object.key("LexV2Bot").start_object();
        crate::json_ser::serialize_structure_crate_model_lex_v2_bot(&mut object_5, var_4);
        object_5.finish();
    }
}

pub fn serialize_structure_crate_input_associate_instance_storage_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateInstanceStorageConfigInput,
) {
    if let Some(var_6) = &input.resource_type {
        object.key("ResourceType").string(var_6.as_str());
    }
    if let Some(var_7) = &input.storage_config {
        let mut object_8 = object.key("StorageConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_instance_storage_config(
            &mut object_8,
            var_7,
        );
        object_8.finish();
    }
}

pub fn serialize_structure_crate_input_associate_lambda_function_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateLambdaFunctionInput,
) {
    if let Some(var_9) = &input.function_arn {
        object.key("FunctionArn").string(var_9);
    }
}

pub fn serialize_structure_crate_input_associate_lex_bot_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateLexBotInput,
) {
    if let Some(var_10) = &input.lex_bot {
        let mut object_11 = object.key("LexBot").start_object();
        crate::json_ser::serialize_structure_crate_model_lex_bot(&mut object_11, var_10);
        object_11.finish();
    }
}

pub fn serialize_structure_crate_input_associate_queue_quick_connects_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateQueueQuickConnectsInput,
) {
    if let Some(var_12) = &input.quick_connect_ids {
        let mut array_13 = object.key("QuickConnectIds").start_array();
        for item_14 in var_12 {
            {
                array_13.value().string(item_14);
            }
        }
        array_13.finish();
    }
}

pub fn serialize_structure_crate_input_associate_routing_profile_queues_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateRoutingProfileQueuesInput,
) {
    if let Some(var_15) = &input.queue_configs {
        let mut array_16 = object.key("QueueConfigs").start_array();
        for item_17 in var_15 {
            {
                let mut object_18 = array_16.value().start_object();
                crate::json_ser::serialize_structure_crate_model_routing_profile_queue_config(
                    &mut object_18,
                    item_17,
                );
                object_18.finish();
            }
        }
        array_16.finish();
    }
}

pub fn serialize_structure_crate_input_associate_security_key_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateSecurityKeyInput,
) {
    if let Some(var_19) = &input.key {
        object.key("Key").string(var_19);
    }
}

pub fn serialize_structure_crate_input_create_agent_status_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAgentStatusInput,
) {
    if let Some(var_20) = &input.description {
        object.key("Description").string(var_20);
    }
    if let Some(var_21) = &input.display_order {
        object.key("DisplayOrder").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_21).into()),
        );
    }
    if let Some(var_22) = &input.name {
        object.key("Name").string(var_22);
    }
    if let Some(var_23) = &input.state {
        object.key("State").string(var_23.as_str());
    }
    if let Some(var_24) = &input.tags {
        let mut object_25 = object.key("Tags").start_object();
        for (key_26, value_27) in var_24 {
            {
                object_25.key(key_26).string(value_27);
            }
        }
        object_25.finish();
    }
}

pub fn serialize_structure_crate_input_create_contact_flow_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateContactFlowInput,
) {
    if let Some(var_28) = &input.content {
        object.key("Content").string(var_28);
    }
    if let Some(var_29) = &input.description {
        object.key("Description").string(var_29);
    }
    if let Some(var_30) = &input.name {
        object.key("Name").string(var_30);
    }
    if let Some(var_31) = &input.tags {
        let mut object_32 = object.key("Tags").start_object();
        for (key_33, value_34) in var_31 {
            {
                object_32.key(key_33).string(value_34);
            }
        }
        object_32.finish();
    }
    if let Some(var_35) = &input.r#type {
        object.key("Type").string(var_35.as_str());
    }
}

pub fn serialize_structure_crate_input_create_hours_of_operation_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateHoursOfOperationInput,
) {
    if let Some(var_36) = &input.config {
        let mut array_37 = object.key("Config").start_array();
        for item_38 in var_36 {
            {
                let mut object_39 = array_37.value().start_object();
                crate::json_ser::serialize_structure_crate_model_hours_of_operation_config(
                    &mut object_39,
                    item_38,
                );
                object_39.finish();
            }
        }
        array_37.finish();
    }
    if let Some(var_40) = &input.description {
        object.key("Description").string(var_40);
    }
    if let Some(var_41) = &input.name {
        object.key("Name").string(var_41);
    }
    if let Some(var_42) = &input.tags {
        let mut object_43 = object.key("Tags").start_object();
        for (key_44, value_45) in var_42 {
            {
                object_43.key(key_44).string(value_45);
            }
        }
        object_43.finish();
    }
    if let Some(var_46) = &input.time_zone {
        object.key("TimeZone").string(var_46);
    }
}

pub fn serialize_structure_crate_input_create_instance_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateInstanceInput,
) {
    if let Some(var_47) = &input.client_token {
        object.key("ClientToken").string(var_47);
    }
    if let Some(var_48) = &input.directory_id {
        object.key("DirectoryId").string(var_48);
    }
    if let Some(var_49) = &input.identity_management_type {
        object.key("IdentityManagementType").string(var_49.as_str());
    }
    if let Some(var_50) = &input.inbound_calls_enabled {
        object.key("InboundCallsEnabled").boolean(*var_50);
    }
    if let Some(var_51) = &input.instance_alias {
        object.key("InstanceAlias").string(var_51);
    }
    if let Some(var_52) = &input.outbound_calls_enabled {
        object.key("OutboundCallsEnabled").boolean(*var_52);
    }
}

pub fn serialize_structure_crate_input_create_integration_association_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateIntegrationAssociationInput,
) {
    if let Some(var_53) = &input.integration_arn {
        object.key("IntegrationArn").string(var_53);
    }
    if let Some(var_54) = &input.integration_type {
        object.key("IntegrationType").string(var_54.as_str());
    }
    if let Some(var_55) = &input.source_application_name {
        object.key("SourceApplicationName").string(var_55);
    }
    if let Some(var_56) = &input.source_application_url {
        object.key("SourceApplicationUrl").string(var_56);
    }
    if let Some(var_57) = &input.source_type {
        object.key("SourceType").string(var_57.as_str());
    }
    if let Some(var_58) = &input.tags {
        let mut object_59 = object.key("Tags").start_object();
        for (key_60, value_61) in var_58 {
            {
                object_59.key(key_60).string(value_61);
            }
        }
        object_59.finish();
    }
}

pub fn serialize_structure_crate_input_create_queue_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateQueueInput,
) {
    if let Some(var_62) = &input.description {
        object.key("Description").string(var_62);
    }
    if let Some(var_63) = &input.hours_of_operation_id {
        object.key("HoursOfOperationId").string(var_63);
    }
    if let Some(var_64) = &input.max_contacts {
        object.key("MaxContacts").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_64).into()),
        );
    }
    if let Some(var_65) = &input.name {
        object.key("Name").string(var_65);
    }
    if let Some(var_66) = &input.outbound_caller_config {
        let mut object_67 = object.key("OutboundCallerConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_outbound_caller_config(
            &mut object_67,
            var_66,
        );
        object_67.finish();
    }
    if let Some(var_68) = &input.quick_connect_ids {
        let mut array_69 = object.key("QuickConnectIds").start_array();
        for item_70 in var_68 {
            {
                array_69.value().string(item_70);
            }
        }
        array_69.finish();
    }
    if let Some(var_71) = &input.tags {
        let mut object_72 = object.key("Tags").start_object();
        for (key_73, value_74) in var_71 {
            {
                object_72.key(key_73).string(value_74);
            }
        }
        object_72.finish();
    }
}

pub fn serialize_structure_crate_input_create_quick_connect_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateQuickConnectInput,
) {
    if let Some(var_75) = &input.description {
        object.key("Description").string(var_75);
    }
    if let Some(var_76) = &input.name {
        object.key("Name").string(var_76);
    }
    if let Some(var_77) = &input.quick_connect_config {
        let mut object_78 = object.key("QuickConnectConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_quick_connect_config(
            &mut object_78,
            var_77,
        );
        object_78.finish();
    }
    if let Some(var_79) = &input.tags {
        let mut object_80 = object.key("Tags").start_object();
        for (key_81, value_82) in var_79 {
            {
                object_80.key(key_81).string(value_82);
            }
        }
        object_80.finish();
    }
}

pub fn serialize_structure_crate_input_create_routing_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateRoutingProfileInput,
) {
    if let Some(var_83) = &input.default_outbound_queue_id {
        object.key("DefaultOutboundQueueId").string(var_83);
    }
    if let Some(var_84) = &input.description {
        object.key("Description").string(var_84);
    }
    if let Some(var_85) = &input.media_concurrencies {
        let mut array_86 = object.key("MediaConcurrencies").start_array();
        for item_87 in var_85 {
            {
                let mut object_88 = array_86.value().start_object();
                crate::json_ser::serialize_structure_crate_model_media_concurrency(
                    &mut object_88,
                    item_87,
                );
                object_88.finish();
            }
        }
        array_86.finish();
    }
    if let Some(var_89) = &input.name {
        object.key("Name").string(var_89);
    }
    if let Some(var_90) = &input.queue_configs {
        let mut array_91 = object.key("QueueConfigs").start_array();
        for item_92 in var_90 {
            {
                let mut object_93 = array_91.value().start_object();
                crate::json_ser::serialize_structure_crate_model_routing_profile_queue_config(
                    &mut object_93,
                    item_92,
                );
                object_93.finish();
            }
        }
        array_91.finish();
    }
    if let Some(var_94) = &input.tags {
        let mut object_95 = object.key("Tags").start_object();
        for (key_96, value_97) in var_94 {
            {
                object_95.key(key_96).string(value_97);
            }
        }
        object_95.finish();
    }
}

pub fn serialize_structure_crate_input_create_use_case_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateUseCaseInput,
) {
    if let Some(var_98) = &input.tags {
        let mut object_99 = object.key("Tags").start_object();
        for (key_100, value_101) in var_98 {
            {
                object_99.key(key_100).string(value_101);
            }
        }
        object_99.finish();
    }
    if let Some(var_102) = &input.use_case_type {
        object.key("UseCaseType").string(var_102.as_str());
    }
}

pub fn serialize_structure_crate_input_create_user_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateUserInput,
) {
    if let Some(var_103) = &input.directory_user_id {
        object.key("DirectoryUserId").string(var_103);
    }
    if let Some(var_104) = &input.hierarchy_group_id {
        object.key("HierarchyGroupId").string(var_104);
    }
    if let Some(var_105) = &input.identity_info {
        let mut object_106 = object.key("IdentityInfo").start_object();
        crate::json_ser::serialize_structure_crate_model_user_identity_info(
            &mut object_106,
            var_105,
        );
        object_106.finish();
    }
    if let Some(var_107) = &input.password {
        object.key("Password").string(var_107);
    }
    if let Some(var_108) = &input.phone_config {
        let mut object_109 = object.key("PhoneConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_user_phone_config(
            &mut object_109,
            var_108,
        );
        object_109.finish();
    }
    if let Some(var_110) = &input.routing_profile_id {
        object.key("RoutingProfileId").string(var_110);
    }
    if let Some(var_111) = &input.security_profile_ids {
        let mut array_112 = object.key("SecurityProfileIds").start_array();
        for item_113 in var_111 {
            {
                array_112.value().string(item_113);
            }
        }
        array_112.finish();
    }
    if let Some(var_114) = &input.tags {
        let mut object_115 = object.key("Tags").start_object();
        for (key_116, value_117) in var_114 {
            {
                object_115.key(key_116).string(value_117);
            }
        }
        object_115.finish();
    }
    if let Some(var_118) = &input.username {
        object.key("Username").string(var_118);
    }
}

pub fn serialize_structure_crate_input_create_user_hierarchy_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateUserHierarchyGroupInput,
) {
    if let Some(var_119) = &input.name {
        object.key("Name").string(var_119);
    }
    if let Some(var_120) = &input.parent_group_id {
        object.key("ParentGroupId").string(var_120);
    }
}

pub fn serialize_structure_crate_input_disassociate_bot_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateBotInput,
) {
    if let Some(var_121) = &input.lex_bot {
        let mut object_122 = object.key("LexBot").start_object();
        crate::json_ser::serialize_structure_crate_model_lex_bot(&mut object_122, var_121);
        object_122.finish();
    }
    if let Some(var_123) = &input.lex_v2_bot {
        let mut object_124 = object.key("LexV2Bot").start_object();
        crate::json_ser::serialize_structure_crate_model_lex_v2_bot(&mut object_124, var_123);
        object_124.finish();
    }
}

pub fn serialize_structure_crate_input_disassociate_queue_quick_connects_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateQueueQuickConnectsInput,
) {
    if let Some(var_125) = &input.quick_connect_ids {
        let mut array_126 = object.key("QuickConnectIds").start_array();
        for item_127 in var_125 {
            {
                array_126.value().string(item_127);
            }
        }
        array_126.finish();
    }
}

pub fn serialize_structure_crate_input_disassociate_routing_profile_queues_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateRoutingProfileQueuesInput,
) {
    if let Some(var_128) = &input.queue_references {
        let mut array_129 = object.key("QueueReferences").start_array();
        for item_130 in var_128 {
            {
                let mut object_131 = array_129.value().start_object();
                crate::json_ser::serialize_structure_crate_model_routing_profile_queue_reference(
                    &mut object_131,
                    item_130,
                );
                object_131.finish();
            }
        }
        array_129.finish();
    }
}

pub fn serialize_structure_crate_input_get_current_metric_data_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetCurrentMetricDataInput,
) {
    if let Some(var_132) = &input.current_metrics {
        let mut array_133 = object.key("CurrentMetrics").start_array();
        for item_134 in var_132 {
            {
                let mut object_135 = array_133.value().start_object();
                crate::json_ser::serialize_structure_crate_model_current_metric(
                    &mut object_135,
                    item_134,
                );
                object_135.finish();
            }
        }
        array_133.finish();
    }
    if let Some(var_136) = &input.filters {
        let mut object_137 = object.key("Filters").start_object();
        crate::json_ser::serialize_structure_crate_model_filters(&mut object_137, var_136);
        object_137.finish();
    }
    if let Some(var_138) = &input.groupings {
        let mut array_139 = object.key("Groupings").start_array();
        for item_140 in var_138 {
            {
                array_139.value().string(item_140.as_str());
            }
        }
        array_139.finish();
    }
    if let Some(var_141) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_141).into()),
        );
    }
    if let Some(var_142) = &input.next_token {
        object.key("NextToken").string(var_142);
    }
}

pub fn serialize_structure_crate_input_get_metric_data_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetMetricDataInput,
) {
    if let Some(var_143) = &input.end_time {
        object
            .key("EndTime")
            .instant(var_143, aws_smithy_types::instant::Format::EpochSeconds);
    }
    if let Some(var_144) = &input.filters {
        let mut object_145 = object.key("Filters").start_object();
        crate::json_ser::serialize_structure_crate_model_filters(&mut object_145, var_144);
        object_145.finish();
    }
    if let Some(var_146) = &input.groupings {
        let mut array_147 = object.key("Groupings").start_array();
        for item_148 in var_146 {
            {
                array_147.value().string(item_148.as_str());
            }
        }
        array_147.finish();
    }
    if let Some(var_149) = &input.historical_metrics {
        let mut array_150 = object.key("HistoricalMetrics").start_array();
        for item_151 in var_149 {
            {
                let mut object_152 = array_150.value().start_object();
                crate::json_ser::serialize_structure_crate_model_historical_metric(
                    &mut object_152,
                    item_151,
                );
                object_152.finish();
            }
        }
        array_150.finish();
    }
    if let Some(var_153) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_153).into()),
        );
    }
    if let Some(var_154) = &input.next_token {
        object.key("NextToken").string(var_154);
    }
    if let Some(var_155) = &input.start_time {
        object
            .key("StartTime")
            .instant(var_155, aws_smithy_types::instant::Format::EpochSeconds);
    }
}

pub fn serialize_structure_crate_input_resume_contact_recording_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ResumeContactRecordingInput,
) {
    if let Some(var_156) = &input.contact_id {
        object.key("ContactId").string(var_156);
    }
    if let Some(var_157) = &input.initial_contact_id {
        object.key("InitialContactId").string(var_157);
    }
    if let Some(var_158) = &input.instance_id {
        object.key("InstanceId").string(var_158);
    }
}

pub fn serialize_structure_crate_input_start_chat_contact_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartChatContactInput,
) {
    if let Some(var_159) = &input.attributes {
        let mut object_160 = object.key("Attributes").start_object();
        for (key_161, value_162) in var_159 {
            {
                object_160.key(key_161).string(value_162);
            }
        }
        object_160.finish();
    }
    if let Some(var_163) = &input.client_token {
        object.key("ClientToken").string(var_163);
    }
    if let Some(var_164) = &input.contact_flow_id {
        object.key("ContactFlowId").string(var_164);
    }
    if let Some(var_165) = &input.initial_message {
        let mut object_166 = object.key("InitialMessage").start_object();
        crate::json_ser::serialize_structure_crate_model_chat_message(&mut object_166, var_165);
        object_166.finish();
    }
    if let Some(var_167) = &input.instance_id {
        object.key("InstanceId").string(var_167);
    }
    if let Some(var_168) = &input.participant_details {
        let mut object_169 = object.key("ParticipantDetails").start_object();
        crate::json_ser::serialize_structure_crate_model_participant_details(
            &mut object_169,
            var_168,
        );
        object_169.finish();
    }
}

pub fn serialize_structure_crate_input_start_contact_recording_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartContactRecordingInput,
) {
    if let Some(var_170) = &input.contact_id {
        object.key("ContactId").string(var_170);
    }
    if let Some(var_171) = &input.initial_contact_id {
        object.key("InitialContactId").string(var_171);
    }
    if let Some(var_172) = &input.instance_id {
        object.key("InstanceId").string(var_172);
    }
    if let Some(var_173) = &input.voice_recording_configuration {
        let mut object_174 = object.key("VoiceRecordingConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_voice_recording_configuration(
            &mut object_174,
            var_173,
        );
        object_174.finish();
    }
}

pub fn serialize_structure_crate_input_start_outbound_voice_contact_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartOutboundVoiceContactInput,
) {
    if let Some(var_175) = &input.answer_machine_detection_config {
        let mut object_176 = object.key("AnswerMachineDetectionConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_answer_machine_detection_config(
            &mut object_176,
            var_175,
        );
        object_176.finish();
    }
    if let Some(var_177) = &input.attributes {
        let mut object_178 = object.key("Attributes").start_object();
        for (key_179, value_180) in var_177 {
            {
                object_178.key(key_179).string(value_180);
            }
        }
        object_178.finish();
    }
    if let Some(var_181) = &input.campaign_id {
        object.key("CampaignId").string(var_181);
    }
    if let Some(var_182) = &input.client_token {
        object.key("ClientToken").string(var_182);
    }
    if let Some(var_183) = &input.contact_flow_id {
        object.key("ContactFlowId").string(var_183);
    }
    if let Some(var_184) = &input.destination_phone_number {
        object.key("DestinationPhoneNumber").string(var_184);
    }
    if let Some(var_185) = &input.instance_id {
        object.key("InstanceId").string(var_185);
    }
    if let Some(var_186) = &input.queue_id {
        object.key("QueueId").string(var_186);
    }
    if let Some(var_187) = &input.source_phone_number {
        object.key("SourcePhoneNumber").string(var_187);
    }
    if let Some(var_188) = &input.traffic_type {
        object.key("TrafficType").string(var_188.as_str());
    }
}

pub fn serialize_structure_crate_input_start_task_contact_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartTaskContactInput,
) {
    if let Some(var_189) = &input.attributes {
        let mut object_190 = object.key("Attributes").start_object();
        for (key_191, value_192) in var_189 {
            {
                object_190.key(key_191).string(value_192);
            }
        }
        object_190.finish();
    }
    if let Some(var_193) = &input.client_token {
        object.key("ClientToken").string(var_193);
    }
    if let Some(var_194) = &input.contact_flow_id {
        object.key("ContactFlowId").string(var_194);
    }
    if let Some(var_195) = &input.description {
        object.key("Description").string(var_195);
    }
    if let Some(var_196) = &input.instance_id {
        object.key("InstanceId").string(var_196);
    }
    if let Some(var_197) = &input.name {
        object.key("Name").string(var_197);
    }
    if let Some(var_198) = &input.previous_contact_id {
        object.key("PreviousContactId").string(var_198);
    }
    if let Some(var_199) = &input.references {
        let mut object_200 = object.key("References").start_object();
        for (key_201, value_202) in var_199 {
            {
                let mut object_203 = object_200.key(key_201).start_object();
                crate::json_ser::serialize_structure_crate_model_reference(
                    &mut object_203,
                    value_202,
                );
                object_203.finish();
            }
        }
        object_200.finish();
    }
}

pub fn serialize_structure_crate_input_stop_contact_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StopContactInput,
) {
    if let Some(var_204) = &input.contact_id {
        object.key("ContactId").string(var_204);
    }
    if let Some(var_205) = &input.instance_id {
        object.key("InstanceId").string(var_205);
    }
}

pub fn serialize_structure_crate_input_stop_contact_recording_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StopContactRecordingInput,
) {
    if let Some(var_206) = &input.contact_id {
        object.key("ContactId").string(var_206);
    }
    if let Some(var_207) = &input.initial_contact_id {
        object.key("InitialContactId").string(var_207);
    }
    if let Some(var_208) = &input.instance_id {
        object.key("InstanceId").string(var_208);
    }
}

pub fn serialize_structure_crate_input_suspend_contact_recording_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SuspendContactRecordingInput,
) {
    if let Some(var_209) = &input.contact_id {
        object.key("ContactId").string(var_209);
    }
    if let Some(var_210) = &input.initial_contact_id {
        object.key("InitialContactId").string(var_210);
    }
    if let Some(var_211) = &input.instance_id {
        object.key("InstanceId").string(var_211);
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_212) = &input.tags {
        let mut object_213 = object.key("tags").start_object();
        for (key_214, value_215) in var_212 {
            {
                object_213.key(key_214).string(value_215);
            }
        }
        object_213.finish();
    }
}

pub fn serialize_structure_crate_input_update_agent_status_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAgentStatusInput,
) {
    if let Some(var_216) = &input.description {
        object.key("Description").string(var_216);
    }
    if let Some(var_217) = &input.display_order {
        object.key("DisplayOrder").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_217).into()),
        );
    }
    if let Some(var_218) = &input.name {
        object.key("Name").string(var_218);
    }
    if input.reset_order_number {
        object
            .key("ResetOrderNumber")
            .boolean(input.reset_order_number);
    }
    if let Some(var_219) = &input.state {
        object.key("State").string(var_219.as_str());
    }
}

pub fn serialize_structure_crate_input_update_contact_attributes_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateContactAttributesInput,
) {
    if let Some(var_220) = &input.attributes {
        let mut object_221 = object.key("Attributes").start_object();
        for (key_222, value_223) in var_220 {
            {
                object_221.key(key_222).string(value_223);
            }
        }
        object_221.finish();
    }
    if let Some(var_224) = &input.initial_contact_id {
        object.key("InitialContactId").string(var_224);
    }
    if let Some(var_225) = &input.instance_id {
        object.key("InstanceId").string(var_225);
    }
}

pub fn serialize_structure_crate_input_update_contact_flow_content_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateContactFlowContentInput,
) {
    if let Some(var_226) = &input.content {
        object.key("Content").string(var_226);
    }
}

pub fn serialize_structure_crate_input_update_contact_flow_name_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateContactFlowNameInput,
) {
    if let Some(var_227) = &input.description {
        object.key("Description").string(var_227);
    }
    if let Some(var_228) = &input.name {
        object.key("Name").string(var_228);
    }
}

pub fn serialize_structure_crate_input_update_hours_of_operation_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateHoursOfOperationInput,
) {
    if let Some(var_229) = &input.config {
        let mut array_230 = object.key("Config").start_array();
        for item_231 in var_229 {
            {
                let mut object_232 = array_230.value().start_object();
                crate::json_ser::serialize_structure_crate_model_hours_of_operation_config(
                    &mut object_232,
                    item_231,
                );
                object_232.finish();
            }
        }
        array_230.finish();
    }
    if let Some(var_233) = &input.description {
        object.key("Description").string(var_233);
    }
    if let Some(var_234) = &input.name {
        object.key("Name").string(var_234);
    }
    if let Some(var_235) = &input.time_zone {
        object.key("TimeZone").string(var_235);
    }
}

pub fn serialize_structure_crate_input_update_instance_attribute_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateInstanceAttributeInput,
) {
    if let Some(var_236) = &input.value {
        object.key("Value").string(var_236);
    }
}

pub fn serialize_structure_crate_input_update_instance_storage_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateInstanceStorageConfigInput,
) {
    if let Some(var_237) = &input.storage_config {
        let mut object_238 = object.key("StorageConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_instance_storage_config(
            &mut object_238,
            var_237,
        );
        object_238.finish();
    }
}

pub fn serialize_structure_crate_input_update_queue_hours_of_operation_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateQueueHoursOfOperationInput,
) {
    if let Some(var_239) = &input.hours_of_operation_id {
        object.key("HoursOfOperationId").string(var_239);
    }
}

pub fn serialize_structure_crate_input_update_queue_max_contacts_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateQueueMaxContactsInput,
) {
    if let Some(var_240) = &input.max_contacts {
        object.key("MaxContacts").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_240).into()),
        );
    }
}

pub fn serialize_structure_crate_input_update_queue_name_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateQueueNameInput,
) {
    if let Some(var_241) = &input.description {
        object.key("Description").string(var_241);
    }
    if let Some(var_242) = &input.name {
        object.key("Name").string(var_242);
    }
}

pub fn serialize_structure_crate_input_update_queue_outbound_caller_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateQueueOutboundCallerConfigInput,
) {
    if let Some(var_243) = &input.outbound_caller_config {
        let mut object_244 = object.key("OutboundCallerConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_outbound_caller_config(
            &mut object_244,
            var_243,
        );
        object_244.finish();
    }
}

pub fn serialize_structure_crate_input_update_queue_status_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateQueueStatusInput,
) {
    if let Some(var_245) = &input.status {
        object.key("Status").string(var_245.as_str());
    }
}

pub fn serialize_structure_crate_input_update_quick_connect_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateQuickConnectConfigInput,
) {
    if let Some(var_246) = &input.quick_connect_config {
        let mut object_247 = object.key("QuickConnectConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_quick_connect_config(
            &mut object_247,
            var_246,
        );
        object_247.finish();
    }
}

pub fn serialize_structure_crate_input_update_quick_connect_name_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateQuickConnectNameInput,
) {
    if let Some(var_248) = &input.description {
        object.key("Description").string(var_248);
    }
    if let Some(var_249) = &input.name {
        object.key("Name").string(var_249);
    }
}

pub fn serialize_structure_crate_input_update_routing_profile_concurrency_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateRoutingProfileConcurrencyInput,
) {
    if let Some(var_250) = &input.media_concurrencies {
        let mut array_251 = object.key("MediaConcurrencies").start_array();
        for item_252 in var_250 {
            {
                let mut object_253 = array_251.value().start_object();
                crate::json_ser::serialize_structure_crate_model_media_concurrency(
                    &mut object_253,
                    item_252,
                );
                object_253.finish();
            }
        }
        array_251.finish();
    }
}

pub fn serialize_structure_crate_input_update_routing_profile_default_outbound_queue_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateRoutingProfileDefaultOutboundQueueInput,
) {
    if let Some(var_254) = &input.default_outbound_queue_id {
        object.key("DefaultOutboundQueueId").string(var_254);
    }
}

pub fn serialize_structure_crate_input_update_routing_profile_name_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateRoutingProfileNameInput,
) {
    if let Some(var_255) = &input.description {
        object.key("Description").string(var_255);
    }
    if let Some(var_256) = &input.name {
        object.key("Name").string(var_256);
    }
}

pub fn serialize_structure_crate_input_update_routing_profile_queues_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateRoutingProfileQueuesInput,
) {
    if let Some(var_257) = &input.queue_configs {
        let mut array_258 = object.key("QueueConfigs").start_array();
        for item_259 in var_257 {
            {
                let mut object_260 = array_258.value().start_object();
                crate::json_ser::serialize_structure_crate_model_routing_profile_queue_config(
                    &mut object_260,
                    item_259,
                );
                object_260.finish();
            }
        }
        array_258.finish();
    }
}

pub fn serialize_structure_crate_input_update_user_hierarchy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateUserHierarchyInput,
) {
    if let Some(var_261) = &input.hierarchy_group_id {
        object.key("HierarchyGroupId").string(var_261);
    }
}

pub fn serialize_structure_crate_input_update_user_hierarchy_group_name_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateUserHierarchyGroupNameInput,
) {
    if let Some(var_262) = &input.name {
        object.key("Name").string(var_262);
    }
}

pub fn serialize_structure_crate_input_update_user_hierarchy_structure_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateUserHierarchyStructureInput,
) {
    if let Some(var_263) = &input.hierarchy_structure {
        let mut object_264 = object.key("HierarchyStructure").start_object();
        crate::json_ser::serialize_structure_crate_model_hierarchy_structure_update(
            &mut object_264,
            var_263,
        );
        object_264.finish();
    }
}

pub fn serialize_structure_crate_input_update_user_identity_info_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateUserIdentityInfoInput,
) {
    if let Some(var_265) = &input.identity_info {
        let mut object_266 = object.key("IdentityInfo").start_object();
        crate::json_ser::serialize_structure_crate_model_user_identity_info(
            &mut object_266,
            var_265,
        );
        object_266.finish();
    }
}

pub fn serialize_structure_crate_input_update_user_phone_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateUserPhoneConfigInput,
) {
    if let Some(var_267) = &input.phone_config {
        let mut object_268 = object.key("PhoneConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_user_phone_config(
            &mut object_268,
            var_267,
        );
        object_268.finish();
    }
}

pub fn serialize_structure_crate_input_update_user_routing_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateUserRoutingProfileInput,
) {
    if let Some(var_269) = &input.routing_profile_id {
        object.key("RoutingProfileId").string(var_269);
    }
}

pub fn serialize_structure_crate_input_update_user_security_profiles_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateUserSecurityProfilesInput,
) {
    if let Some(var_270) = &input.security_profile_ids {
        let mut array_271 = object.key("SecurityProfileIds").start_array();
        for item_272 in var_270 {
            {
                array_271.value().string(item_272);
            }
        }
        array_271.finish();
    }
}

pub fn serialize_structure_crate_model_lex_bot(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LexBot,
) {
    if let Some(var_273) = &input.name {
        object.key("Name").string(var_273);
    }
    if let Some(var_274) = &input.lex_region {
        object.key("LexRegion").string(var_274);
    }
}

pub fn serialize_structure_crate_model_lex_v2_bot(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LexV2Bot,
) {
    if let Some(var_275) = &input.alias_arn {
        object.key("AliasArn").string(var_275);
    }
}

pub fn serialize_structure_crate_model_instance_storage_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::InstanceStorageConfig,
) {
    if let Some(var_276) = &input.association_id {
        object.key("AssociationId").string(var_276);
    }
    if let Some(var_277) = &input.storage_type {
        object.key("StorageType").string(var_277.as_str());
    }
    if let Some(var_278) = &input.s3_config {
        let mut object_279 = object.key("S3Config").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_config(&mut object_279, var_278);
        object_279.finish();
    }
    if let Some(var_280) = &input.kinesis_video_stream_config {
        let mut object_281 = object.key("KinesisVideoStreamConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_kinesis_video_stream_config(
            &mut object_281,
            var_280,
        );
        object_281.finish();
    }
    if let Some(var_282) = &input.kinesis_stream_config {
        let mut object_283 = object.key("KinesisStreamConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_kinesis_stream_config(
            &mut object_283,
            var_282,
        );
        object_283.finish();
    }
    if let Some(var_284) = &input.kinesis_firehose_config {
        let mut object_285 = object.key("KinesisFirehoseConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_kinesis_firehose_config(
            &mut object_285,
            var_284,
        );
        object_285.finish();
    }
}

pub fn serialize_structure_crate_model_routing_profile_queue_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RoutingProfileQueueConfig,
) {
    if let Some(var_286) = &input.queue_reference {
        let mut object_287 = object.key("QueueReference").start_object();
        crate::json_ser::serialize_structure_crate_model_routing_profile_queue_reference(
            &mut object_287,
            var_286,
        );
        object_287.finish();
    }
    if let Some(var_288) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_288).into()),
        );
    }
    if let Some(var_289) = &input.delay {
        object.key("Delay").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_289).into()),
        );
    }
}

pub fn serialize_structure_crate_model_hours_of_operation_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HoursOfOperationConfig,
) {
    if let Some(var_290) = &input.day {
        object.key("Day").string(var_290.as_str());
    }
    if let Some(var_291) = &input.start_time {
        let mut object_292 = object.key("StartTime").start_object();
        crate::json_ser::serialize_structure_crate_model_hours_of_operation_time_slice(
            &mut object_292,
            var_291,
        );
        object_292.finish();
    }
    if let Some(var_293) = &input.end_time {
        let mut object_294 = object.key("EndTime").start_object();
        crate::json_ser::serialize_structure_crate_model_hours_of_operation_time_slice(
            &mut object_294,
            var_293,
        );
        object_294.finish();
    }
}

pub fn serialize_structure_crate_model_outbound_caller_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::OutboundCallerConfig,
) {
    if let Some(var_295) = &input.outbound_caller_id_name {
        object.key("OutboundCallerIdName").string(var_295);
    }
    if let Some(var_296) = &input.outbound_caller_id_number_id {
        object.key("OutboundCallerIdNumberId").string(var_296);
    }
    if let Some(var_297) = &input.outbound_flow_id {
        object.key("OutboundFlowId").string(var_297);
    }
}

pub fn serialize_structure_crate_model_quick_connect_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::QuickConnectConfig,
) {
    if let Some(var_298) = &input.quick_connect_type {
        object.key("QuickConnectType").string(var_298.as_str());
    }
    if let Some(var_299) = &input.user_config {
        let mut object_300 = object.key("UserConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_user_quick_connect_config(
            &mut object_300,
            var_299,
        );
        object_300.finish();
    }
    if let Some(var_301) = &input.queue_config {
        let mut object_302 = object.key("QueueConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_queue_quick_connect_config(
            &mut object_302,
            var_301,
        );
        object_302.finish();
    }
    if let Some(var_303) = &input.phone_config {
        let mut object_304 = object.key("PhoneConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_phone_number_quick_connect_config(
            &mut object_304,
            var_303,
        );
        object_304.finish();
    }
}

pub fn serialize_structure_crate_model_media_concurrency(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MediaConcurrency,
) {
    if let Some(var_305) = &input.channel {
        object.key("Channel").string(var_305.as_str());
    }
    {
        object.key("Concurrency").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.concurrency).into()),
        );
    }
}

pub fn serialize_structure_crate_model_user_identity_info(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UserIdentityInfo,
) {
    if let Some(var_306) = &input.first_name {
        object.key("FirstName").string(var_306);
    }
    if let Some(var_307) = &input.last_name {
        object.key("LastName").string(var_307);
    }
    if let Some(var_308) = &input.email {
        object.key("Email").string(var_308);
    }
}

pub fn serialize_structure_crate_model_user_phone_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UserPhoneConfig,
) {
    if let Some(var_309) = &input.phone_type {
        object.key("PhoneType").string(var_309.as_str());
    }
    if input.auto_accept {
        object.key("AutoAccept").boolean(input.auto_accept);
    }
    if input.after_contact_work_time_limit != 0 {
        object.key("AfterContactWorkTimeLimit").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.after_contact_work_time_limit).into()),
        );
    }
    if let Some(var_310) = &input.desk_phone_number {
        object.key("DeskPhoneNumber").string(var_310);
    }
}

pub fn serialize_structure_crate_model_routing_profile_queue_reference(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RoutingProfileQueueReference,
) {
    if let Some(var_311) = &input.queue_id {
        object.key("QueueId").string(var_311);
    }
    if let Some(var_312) = &input.channel {
        object.key("Channel").string(var_312.as_str());
    }
}

pub fn serialize_structure_crate_model_current_metric(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CurrentMetric,
) {
    if let Some(var_313) = &input.name {
        object.key("Name").string(var_313.as_str());
    }
    if let Some(var_314) = &input.unit {
        object.key("Unit").string(var_314.as_str());
    }
}

pub fn serialize_structure_crate_model_filters(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Filters,
) {
    if let Some(var_315) = &input.queues {
        let mut array_316 = object.key("Queues").start_array();
        for item_317 in var_315 {
            {
                array_316.value().string(item_317);
            }
        }
        array_316.finish();
    }
    if let Some(var_318) = &input.channels {
        let mut array_319 = object.key("Channels").start_array();
        for item_320 in var_318 {
            {
                array_319.value().string(item_320.as_str());
            }
        }
        array_319.finish();
    }
}

pub fn serialize_structure_crate_model_historical_metric(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HistoricalMetric,
) {
    if let Some(var_321) = &input.name {
        object.key("Name").string(var_321.as_str());
    }
    if let Some(var_322) = &input.threshold {
        let mut object_323 = object.key("Threshold").start_object();
        crate::json_ser::serialize_structure_crate_model_threshold(&mut object_323, var_322);
        object_323.finish();
    }
    if let Some(var_324) = &input.statistic {
        object.key("Statistic").string(var_324.as_str());
    }
    if let Some(var_325) = &input.unit {
        object.key("Unit").string(var_325.as_str());
    }
}

pub fn serialize_structure_crate_model_chat_message(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ChatMessage,
) {
    if let Some(var_326) = &input.content_type {
        object.key("ContentType").string(var_326);
    }
    if let Some(var_327) = &input.content {
        object.key("Content").string(var_327);
    }
}

pub fn serialize_structure_crate_model_participant_details(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ParticipantDetails,
) {
    if let Some(var_328) = &input.display_name {
        object.key("DisplayName").string(var_328);
    }
}

pub fn serialize_structure_crate_model_voice_recording_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::VoiceRecordingConfiguration,
) {
    if let Some(var_329) = &input.voice_recording_track {
        object.key("VoiceRecordingTrack").string(var_329.as_str());
    }
}

pub fn serialize_structure_crate_model_answer_machine_detection_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AnswerMachineDetectionConfig,
) {
    if input.enable_answer_machine_detection {
        object
            .key("EnableAnswerMachineDetection")
            .boolean(input.enable_answer_machine_detection);
    }
    if input.await_answer_machine_prompt {
        object
            .key("AwaitAnswerMachinePrompt")
            .boolean(input.await_answer_machine_prompt);
    }
}

pub fn serialize_structure_crate_model_reference(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Reference,
) {
    if let Some(var_330) = &input.value {
        object.key("Value").string(var_330);
    }
    if let Some(var_331) = &input.r#type {
        object.key("Type").string(var_331.as_str());
    }
}

pub fn serialize_structure_crate_model_hierarchy_structure_update(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HierarchyStructureUpdate,
) {
    if let Some(var_332) = &input.level_one {
        let mut object_333 = object.key("LevelOne").start_object();
        crate::json_ser::serialize_structure_crate_model_hierarchy_level_update(
            &mut object_333,
            var_332,
        );
        object_333.finish();
    }
    if let Some(var_334) = &input.level_two {
        let mut object_335 = object.key("LevelTwo").start_object();
        crate::json_ser::serialize_structure_crate_model_hierarchy_level_update(
            &mut object_335,
            var_334,
        );
        object_335.finish();
    }
    if let Some(var_336) = &input.level_three {
        let mut object_337 = object.key("LevelThree").start_object();
        crate::json_ser::serialize_structure_crate_model_hierarchy_level_update(
            &mut object_337,
            var_336,
        );
        object_337.finish();
    }
    if let Some(var_338) = &input.level_four {
        let mut object_339 = object.key("LevelFour").start_object();
        crate::json_ser::serialize_structure_crate_model_hierarchy_level_update(
            &mut object_339,
            var_338,
        );
        object_339.finish();
    }
    if let Some(var_340) = &input.level_five {
        let mut object_341 = object.key("LevelFive").start_object();
        crate::json_ser::serialize_structure_crate_model_hierarchy_level_update(
            &mut object_341,
            var_340,
        );
        object_341.finish();
    }
}

pub fn serialize_structure_crate_model_s3_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3Config,
) {
    if let Some(var_342) = &input.bucket_name {
        object.key("BucketName").string(var_342);
    }
    if let Some(var_343) = &input.bucket_prefix {
        object.key("BucketPrefix").string(var_343);
    }
    if let Some(var_344) = &input.encryption_config {
        let mut object_345 = object.key("EncryptionConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_encryption_config(
            &mut object_345,
            var_344,
        );
        object_345.finish();
    }
}

pub fn serialize_structure_crate_model_kinesis_video_stream_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::KinesisVideoStreamConfig,
) {
    if let Some(var_346) = &input.prefix {
        object.key("Prefix").string(var_346);
    }
    {
        object.key("RetentionPeriodHours").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.retention_period_hours).into()),
        );
    }
    if let Some(var_347) = &input.encryption_config {
        let mut object_348 = object.key("EncryptionConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_encryption_config(
            &mut object_348,
            var_347,
        );
        object_348.finish();
    }
}

pub fn serialize_structure_crate_model_kinesis_stream_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::KinesisStreamConfig,
) {
    if let Some(var_349) = &input.stream_arn {
        object.key("StreamArn").string(var_349);
    }
}

pub fn serialize_structure_crate_model_kinesis_firehose_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::KinesisFirehoseConfig,
) {
    if let Some(var_350) = &input.firehose_arn {
        object.key("FirehoseArn").string(var_350);
    }
}

pub fn serialize_structure_crate_model_hours_of_operation_time_slice(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HoursOfOperationTimeSlice,
) {
    if let Some(var_351) = &input.hours {
        object.key("Hours").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_351).into()),
        );
    }
    if let Some(var_352) = &input.minutes {
        object.key("Minutes").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_352).into()),
        );
    }
}

pub fn serialize_structure_crate_model_user_quick_connect_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UserQuickConnectConfig,
) {
    if let Some(var_353) = &input.user_id {
        object.key("UserId").string(var_353);
    }
    if let Some(var_354) = &input.contact_flow_id {
        object.key("ContactFlowId").string(var_354);
    }
}

pub fn serialize_structure_crate_model_queue_quick_connect_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::QueueQuickConnectConfig,
) {
    if let Some(var_355) = &input.queue_id {
        object.key("QueueId").string(var_355);
    }
    if let Some(var_356) = &input.contact_flow_id {
        object.key("ContactFlowId").string(var_356);
    }
}

pub fn serialize_structure_crate_model_phone_number_quick_connect_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::PhoneNumberQuickConnectConfig,
) {
    if let Some(var_357) = &input.phone_number {
        object.key("PhoneNumber").string(var_357);
    }
}

pub fn serialize_structure_crate_model_threshold(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Threshold,
) {
    if let Some(var_358) = &input.comparison {
        object.key("Comparison").string(var_358.as_str());
    }
    if let Some(var_359) = &input.threshold_value {
        object.key("ThresholdValue").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_359).into()),
        );
    }
}

pub fn serialize_structure_crate_model_hierarchy_level_update(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HierarchyLevelUpdate,
) {
    if let Some(var_360) = &input.name {
        object.key("Name").string(var_360);
    }
}

pub fn serialize_structure_crate_model_encryption_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::EncryptionConfig,
) {
    if let Some(var_361) = &input.encryption_type {
        object.key("EncryptionType").string(var_361.as_str());
    }
    if let Some(var_362) = &input.key_id {
        object.key("KeyId").string(var_362);
    }
}
