// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMetricData`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::set_instance_id): <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    ///   - [`start_time(DateTime)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::set_start_time): <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p>  <p>The start time cannot be earlier than 24 hours before the time of the request. Historical metrics are available only for 24 hours.</p>
    ///   - [`end_time(DateTime)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::set_end_time): <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p>  <p>The time range between the start and end time must be less than 24 hours.</p>
    ///   - [`filters(Filters)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::filters) / [`set_filters(Option<Filters>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::set_filters): <p>The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is retrieved only for the resources associated with the queues or channels included in the filter. You can include both queue IDs and queue ARNs in the same request. VOICE, CHAT, and TASK channels are supported.</p> <note>   <p>To filter by <code>Queues</code>, enter the queue ID/ARN, not the name of the queue.</p>  </note>
    ///   - [`groupings(Vec<Grouping>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::groupings) / [`set_groupings(Option<Vec<Grouping>>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::set_groupings): <p>The grouping applied to the metrics returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p>  <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>
    ///   - [`historical_metrics(Vec<HistoricalMetric>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::historical_metrics) / [`set_historical_metrics(Option<Vec<HistoricalMetric>>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::set_historical_metrics): <p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <note>   <p>This API does not support a contacts incoming metric (there's no CONTACTS_INCOMING metric missing from the documented list). </p>  </note>  <dl>   <dt>   ABANDON_TIME  </dt>   <dd>    <p>Unit: SECONDS</p>    <p>Statistic: AVG</p>   </dd>   <dt>   AFTER_CONTACT_WORK_TIME  </dt>   <dd>    <p>Unit: SECONDS</p>    <p>Statistic: AVG</p>   </dd>   <dt>   API_CONTACTS_HANDLED  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CALLBACK_CONTACTS_HANDLED  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_ABANDONED  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_AGENT_HUNG_UP_FIRST  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_CONSULTED  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_HANDLED  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_HANDLED_INCOMING  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_HANDLED_OUTBOUND  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_HOLD_ABANDONS  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_MISSED  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_QUEUED  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_TRANSFERRED_IN  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_TRANSFERRED_IN_FROM_QUEUE  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_TRANSFERRED_OUT  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   CONTACTS_TRANSFERRED_OUT_FROM_QUEUE  </dt>   <dd>    <p>Unit: COUNT</p>    <p>Statistic: SUM</p>   </dd>   <dt>   HANDLE_TIME  </dt>   <dd>    <p>Unit: SECONDS</p>    <p>Statistic: AVG</p>   </dd>   <dt>   HOLD_TIME  </dt>   <dd>    <p>Unit: SECONDS</p>    <p>Statistic: AVG</p>   </dd>   <dt>   INTERACTION_AND_HOLD_TIME  </dt>   <dd>    <p>Unit: SECONDS</p>    <p>Statistic: AVG</p>   </dd>   <dt>   INTERACTION_TIME  </dt>   <dd>    <p>Unit: SECONDS</p>    <p>Statistic: AVG</p>   </dd>   <dt>   OCCUPANCY  </dt>   <dd>    <p>Unit: PERCENT</p>    <p>Statistic: AVG</p>   </dd>   <dt>   QUEUE_ANSWER_TIME  </dt>   <dd>    <p>Unit: SECONDS</p>    <p>Statistic: AVG</p>   </dd>   <dt>   QUEUED_TIME  </dt>   <dd>    <p>Unit: SECONDS</p>    <p>Statistic: MAX</p>   </dd>   <dt>   SERVICE_LEVEL  </dt>   <dd>    <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>    <p>Unit: PERCENT</p>    <p>Statistic: AVG</p>    <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p>   </dd>  </dl>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::set_next_token): <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    ///   - [`max_results(i32)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::set_max_results): <p>The maximum number of results to return per page.</p>
    /// - On success, responds with [`GetMetricDataOutput`](crate::operation::get_metric_data::GetMetricDataOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::get_metric_data::GetMetricDataOutput::next_token): <p>If there are additional results, this is the token for the next set of results.</p>  <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>
    ///   - [`metric_results(Option<Vec<HistoricalMetricResult>>)`](crate::operation::get_metric_data::GetMetricDataOutput::metric_results): <p>Information about the historical metrics.</p>  <p>If no grouping is specified, a summary of metric data is returned.</p>
    /// - On failure, responds with [`SdkError<GetMetricDataError>`](crate::operation::get_metric_data::GetMetricDataError)
    pub fn get_metric_data(
        &self,
    ) -> crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder {
        crate::operation::get_metric_data::builders::GetMetricDataFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
