// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateIntegrationAssociation`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::set_instance_id): <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    ///   - [`integration_type(IntegrationType)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::integration_type) / [`set_integration_type(Option<IntegrationType>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::set_integration_type): <p>The type of information to be ingested.</p>
    ///   - [`integration_arn(impl Into<String>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::integration_arn) / [`set_integration_arn(Option<String>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::set_integration_arn): <p>The Amazon Resource Name (ARN) of the integration.</p> <note>   <p>When integrating with Amazon Pinpoint, the Amazon Connect and Amazon Pinpoint instances must be in the same account.</p>  </note>
    ///   - [`source_application_url(impl Into<String>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::source_application_url) / [`set_source_application_url(Option<String>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::set_source_application_url): <p>The URL for the external application. This field is only required for the EVENT integration type.</p>
    ///   - [`source_application_name(impl Into<String>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::source_application_name) / [`set_source_application_name(Option<String>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::set_source_application_name): <p>The name of the external application. This field is only required for the EVENT integration type.</p>
    ///   - [`source_type(SourceType)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::source_type) / [`set_source_type(Option<SourceType>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::set_source_type): <p>The type of the data source. This field is only required for the EVENT integration type.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::set_tags): <p>The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.</p>
    /// - On success, responds with [`CreateIntegrationAssociationOutput`](crate::operation::create_integration_association::CreateIntegrationAssociationOutput) with field(s):
    ///   - [`integration_association_id(Option<String>)`](crate::operation::create_integration_association::CreateIntegrationAssociationOutput::integration_association_id): <p>The identifier for the integration association.</p>
    ///   - [`integration_association_arn(Option<String>)`](crate::operation::create_integration_association::CreateIntegrationAssociationOutput::integration_association_arn): <p>The Amazon Resource Name (ARN) for the association.</p>
    /// - On failure, responds with [`SdkError<CreateIntegrationAssociationError>`](crate::operation::create_integration_association::CreateIntegrationAssociationError)
    pub fn create_integration_association(&self) -> crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder{
        crate::operation::create_integration_association::builders::CreateIntegrationAssociationFluentBuilder::new(self.handle.clone())
    }
}
