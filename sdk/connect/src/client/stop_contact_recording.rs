// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StopContactRecording`](crate::operation::stop_contact_recording::builders::StopContactRecordingFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::stop_contact_recording::builders::StopContactRecordingFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::stop_contact_recording::builders::StopContactRecordingFluentBuilder::set_instance_id): <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    ///   - [`contact_id(impl Into<String>)`](crate::operation::stop_contact_recording::builders::StopContactRecordingFluentBuilder::contact_id) / [`set_contact_id(Option<String>)`](crate::operation::stop_contact_recording::builders::StopContactRecordingFluentBuilder::set_contact_id): <p>The identifier of the contact.</p>
    ///   - [`initial_contact_id(impl Into<String>)`](crate::operation::stop_contact_recording::builders::StopContactRecordingFluentBuilder::initial_contact_id) / [`set_initial_contact_id(Option<String>)`](crate::operation::stop_contact_recording::builders::StopContactRecordingFluentBuilder::set_initial_contact_id): <p>The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.</p>
    /// - On success, responds with [`StopContactRecordingOutput`](crate::operation::stop_contact_recording::StopContactRecordingOutput)
    /// - On failure, responds with [`SdkError<StopContactRecordingError>`](crate::operation::stop_contact_recording::StopContactRecordingError)
    pub fn stop_contact_recording(
        &self,
    ) -> crate::operation::stop_contact_recording::builders::StopContactRecordingFluentBuilder {
        crate::operation::stop_contact_recording::builders::StopContactRecordingFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
