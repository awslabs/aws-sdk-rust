// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateUserRoutingProfile`](crate::operation::update_user_routing_profile::builders::UpdateUserRoutingProfileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`routing_profile_id(impl Into<String>)`](crate::operation::update_user_routing_profile::builders::UpdateUserRoutingProfileFluentBuilder::routing_profile_id) / [`set_routing_profile_id(Option<String>)`](crate::operation::update_user_routing_profile::builders::UpdateUserRoutingProfileFluentBuilder::set_routing_profile_id): <p>The identifier of the routing profile for the user.</p>
    ///   - [`user_id(impl Into<String>)`](crate::operation::update_user_routing_profile::builders::UpdateUserRoutingProfileFluentBuilder::user_id) / [`set_user_id(Option<String>)`](crate::operation::update_user_routing_profile::builders::UpdateUserRoutingProfileFluentBuilder::set_user_id): <p>The identifier of the user account.</p>
    ///   - [`instance_id(impl Into<String>)`](crate::operation::update_user_routing_profile::builders::UpdateUserRoutingProfileFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::update_user_routing_profile::builders::UpdateUserRoutingProfileFluentBuilder::set_instance_id): <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    /// - On success, responds with [`UpdateUserRoutingProfileOutput`](crate::operation::update_user_routing_profile::UpdateUserRoutingProfileOutput)
    /// - On failure, responds with [`SdkError<UpdateUserRoutingProfileError>`](crate::operation::update_user_routing_profile::UpdateUserRoutingProfileError)
    pub fn update_user_routing_profile(&self) -> crate::operation::update_user_routing_profile::builders::UpdateUserRoutingProfileFluentBuilder{
        crate::operation::update_user_routing_profile::builders::UpdateUserRoutingProfileFluentBuilder::new(self.handle.clone())
    }
}
