// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateUser`](crate::operation::create_user::builders::CreateUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`username(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_username): <p>The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.</p>
    ///   - [`password(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::password) / [`set_password(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_password): <p>The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.</p>
    ///   - [`identity_info(UserIdentityInfo)`](crate::operation::create_user::builders::CreateUserFluentBuilder::identity_info) / [`set_identity_info(Option<UserIdentityInfo>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_identity_info): <p>The information about the identity of the user.</p>
    ///   - [`phone_config(UserPhoneConfig)`](crate::operation::create_user::builders::CreateUserFluentBuilder::phone_config) / [`set_phone_config(Option<UserPhoneConfig>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_phone_config): <p>The phone settings for the user.</p>
    ///   - [`directory_user_id(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::directory_user_id) / [`set_directory_user_id(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_directory_user_id): <p>The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory.</p>  <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.</p>
    ///   - [`security_profile_ids(Vec<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::security_profile_ids) / [`set_security_profile_ids(Option<Vec<String>>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_security_profile_ids): <p>The identifier of the security profile for the user.</p>
    ///   - [`routing_profile_id(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::routing_profile_id) / [`set_routing_profile_id(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_routing_profile_id): <p>The identifier of the routing profile for the user.</p>
    ///   - [`hierarchy_group_id(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::hierarchy_group_id) / [`set_hierarchy_group_id(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_hierarchy_group_id): <p>The identifier of the hierarchy group for the user.</p>
    ///   - [`instance_id(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_instance_id): <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_tags): <p>The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.</p>
    /// - On success, responds with [`CreateUserOutput`](crate::operation::create_user::CreateUserOutput) with field(s):
    ///   - [`user_id(Option<String>)`](crate::operation::create_user::CreateUserOutput::user_id): <p>The identifier of the user account.</p>
    ///   - [`user_arn(Option<String>)`](crate::operation::create_user::CreateUserOutput::user_arn): <p>The Amazon Resource Name (ARN) of the user account.</p>
    /// - On failure, responds with [`SdkError<CreateUserError>`](crate::operation::create_user::CreateUserError)
    pub fn create_user(&self) -> crate::operation::create_user::builders::CreateUserFluentBuilder {
        crate::operation::create_user::builders::CreateUserFluentBuilder::new(self.handle.clone())
    }
}
