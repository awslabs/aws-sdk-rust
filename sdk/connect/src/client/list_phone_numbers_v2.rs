// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPhoneNumbersV2`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`target_arn(impl Into<String>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::target_arn) / [`set_target_arn(Option<String>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::set_target_arn): <p>The Amazon Resource Name (ARN) for Amazon Connect instances or traffic distribution groups that phone numbers are claimed to. If <code>TargetArn</code> input is not provided, this API lists numbers claimed to all the Amazon Connect instances belonging to your account in the same Amazon Web Services Region as the request.</p>
    ///   - [`max_results(i32)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::set_max_results): <p>The maximum number of results to return per page.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::set_next_token): <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    ///   - [`phone_number_country_codes(Vec<PhoneNumberCountryCode>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::phone_number_country_codes) / [`set_phone_number_country_codes(Option<Vec<PhoneNumberCountryCode>>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::set_phone_number_country_codes): <p>The ISO country code.</p>
    ///   - [`phone_number_types(Vec<PhoneNumberType>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::phone_number_types) / [`set_phone_number_types(Option<Vec<PhoneNumberType>>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::set_phone_number_types): <p>The type of phone number.</p>
    ///   - [`phone_number_prefix(impl Into<String>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::phone_number_prefix) / [`set_phone_number_prefix(Option<String>)`](crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::set_phone_number_prefix): <p>The prefix of the phone number. If provided, it must contain <code>+</code> as part of the country code.</p>
    /// - On success, responds with [`ListPhoneNumbersV2Output`](crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Output) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Output::next_token): <p>If there are additional results, this is the token for the next set of results.</p>
    ///   - [`list_phone_numbers_summary_list(Option<Vec<ListPhoneNumbersSummary>>)`](crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Output::list_phone_numbers_summary_list): <p>Information about phone numbers that have been claimed to your Amazon Connect instances or traffic distribution groups.</p>
    /// - On failure, responds with [`SdkError<ListPhoneNumbersV2Error>`](crate::operation::list_phone_numbers_v2::ListPhoneNumbersV2Error)
    pub fn list_phone_numbers_v2(
        &self,
    ) -> crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder {
        crate::operation::list_phone_numbers_v2::builders::ListPhoneNumbersV2FluentBuilder::new(
            self.handle.clone(),
        )
    }
}
