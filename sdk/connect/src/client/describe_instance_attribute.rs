// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeInstanceAttribute`](crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeFluentBuilder::set_instance_id):<br>required: **true**<br><p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p><br>
    ///   - [`attribute_type(InstanceAttributeType)`](crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeFluentBuilder::attribute_type) / [`set_attribute_type(Option<InstanceAttributeType>)`](crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeFluentBuilder::set_attribute_type):<br>required: **true**<br><p>The type of attribute.</p><br>
    /// - On success, responds with [`DescribeInstanceAttributeOutput`](crate::operation::describe_instance_attribute::DescribeInstanceAttributeOutput) with field(s):
    ///   - [`attribute(Option<Attribute>)`](crate::operation::describe_instance_attribute::DescribeInstanceAttributeOutput::attribute): <p>The type of attribute.</p>
    /// - On failure, responds with [`SdkError<DescribeInstanceAttributeError>`](crate::operation::describe_instance_attribute::DescribeInstanceAttributeError)
    pub fn describe_instance_attribute(&self) -> crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeFluentBuilder {
        crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeFluentBuilder::new(self.handle.clone())
    }
}
