// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateViewContent`](crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder::set_instance_id):<br>required: **true**<br><p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p><br>
    ///   - [`view_id(impl Into<String>)`](crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder::view_id) / [`set_view_id(Option<String>)`](crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder::set_view_id):<br>required: **true**<br><p>The identifier of the view. Both <code>ViewArn</code> and <code>ViewId</code> can be used.</p><br>
    ///   - [`status(ViewStatus)`](crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder::status) / [`set_status(Option<ViewStatus>)`](crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder::set_status):<br>required: **true**<br><p>Indicates the view status as either <code>SAVED</code> or <code>PUBLISHED</code>. The <code>PUBLISHED</code> status will initiate validation on the content.</p><br>
    ///   - [`content(ViewInputContent)`](crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder::content) / [`set_content(Option<ViewInputContent>)`](crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder::set_content):<br>required: **true**<br><p>View content containing all content necessary to render a view except for runtime input data and the runtime input schema, which is auto-generated by this operation.</p>  <p>The total uncompressed content has a maximum file size of 400kB.</p><br>
    /// - On success, responds with [`UpdateViewContentOutput`](crate::operation::update_view_content::UpdateViewContentOutput) with field(s):
    ///   - [`view(Option<View>)`](crate::operation::update_view_content::UpdateViewContentOutput::view): <p>A view resource object. Contains metadata and content necessary to render the view.</p>
    /// - On failure, responds with [`SdkError<UpdateViewContentError>`](crate::operation::update_view_content::UpdateViewContentError)
    pub fn update_view_content(&self) -> crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder {
        crate::operation::update_view_content::builders::UpdateViewContentFluentBuilder::new(self.handle.clone())
    }
}
