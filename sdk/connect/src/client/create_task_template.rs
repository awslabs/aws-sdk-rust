// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTaskTemplate`](crate::client::fluent_builders::CreateTaskTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::client::fluent_builders::CreateTaskTemplate::instance_id) / [`set_instance_id(Option<String>)`](crate::client::fluent_builders::CreateTaskTemplate::set_instance_id): <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateTaskTemplate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateTaskTemplate::set_name): <p>The name of the task template.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateTaskTemplate::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateTaskTemplate::set_description): <p>The description of the task template.</p>
    ///   - [`contact_flow_id(impl Into<String>)`](crate::client::fluent_builders::CreateTaskTemplate::contact_flow_id) / [`set_contact_flow_id(Option<String>)`](crate::client::fluent_builders::CreateTaskTemplate::set_contact_flow_id): <p>The identifier of the flow that runs by default when a task is created by referencing this template.</p>
    ///   - [`constraints(TaskTemplateConstraints)`](crate::client::fluent_builders::CreateTaskTemplate::constraints) / [`set_constraints(Option<TaskTemplateConstraints>)`](crate::client::fluent_builders::CreateTaskTemplate::set_constraints): <p>Constraints that are applicable to the fields listed.</p>
    ///   - [`defaults(TaskTemplateDefaults)`](crate::client::fluent_builders::CreateTaskTemplate::defaults) / [`set_defaults(Option<TaskTemplateDefaults>)`](crate::client::fluent_builders::CreateTaskTemplate::set_defaults): <p>The default values for fields when a task is created by referencing this template.</p>
    ///   - [`status(TaskTemplateStatus)`](crate::client::fluent_builders::CreateTaskTemplate::status) / [`set_status(Option<TaskTemplateStatus>)`](crate::client::fluent_builders::CreateTaskTemplate::set_status): <p>Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it. Tasks can only be created from <code>ACTIVE</code> templates. If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created. </p>
    ///   - [`fields(Vec<TaskTemplateField>)`](crate::client::fluent_builders::CreateTaskTemplate::fields) / [`set_fields(Option<Vec<TaskTemplateField>>)`](crate::client::fluent_builders::CreateTaskTemplate::set_fields): <p>Fields that are part of the template.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateTaskTemplate::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateTaskTemplate::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p>
    /// - On success, responds with [`CreateTaskTemplateOutput`](crate::output::CreateTaskTemplateOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::CreateTaskTemplateOutput::id): <p>The identifier of the task template resource.</p>
    ///   - [`arn(Option<String>)`](crate::output::CreateTaskTemplateOutput::arn): <p>The Amazon Resource Name (ARN) for the task template resource.</p>
    /// - On failure, responds with [`SdkError<CreateTaskTemplateError>`](crate::error::CreateTaskTemplateError)
    pub fn create_task_template(&self) -> crate::client::fluent_builders::CreateTaskTemplate {
        crate::client::fluent_builders::CreateTaskTemplate::new(self.handle.clone())
    }
}
