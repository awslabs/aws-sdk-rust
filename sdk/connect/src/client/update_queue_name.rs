// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateQueueName`](crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder::set_instance_id): <p>The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.</p>
    ///   - [`queue_id(impl Into<String>)`](crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder::queue_id) / [`set_queue_id(Option<String>)`](crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder::set_queue_id): <p>The identifier for the queue.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder::set_name): <p>The name of the queue.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder::set_description): <p>The description of the queue.</p>
    /// - On success, responds with [`UpdateQueueNameOutput`](crate::operation::update_queue_name::UpdateQueueNameOutput)
    /// - On failure, responds with [`SdkError<UpdateQueueNameError>`](crate::operation::update_queue_name::UpdateQueueNameError)
    pub fn update_queue_name(
        &self,
    ) -> crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder {
        crate::operation::update_queue_name::builders::UpdateQueueNameFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
