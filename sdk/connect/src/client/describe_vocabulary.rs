// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeVocabulary`](crate::operation::describe_vocabulary::builders::DescribeVocabularyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::describe_vocabulary::builders::DescribeVocabularyFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::describe_vocabulary::builders::DescribeVocabularyFluentBuilder::set_instance_id):<br>required: **true**<br><p>The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.</p><br>
    ///   - [`vocabulary_id(impl Into<String>)`](crate::operation::describe_vocabulary::builders::DescribeVocabularyFluentBuilder::vocabulary_id) / [`set_vocabulary_id(Option<String>)`](crate::operation::describe_vocabulary::builders::DescribeVocabularyFluentBuilder::set_vocabulary_id):<br>required: **true**<br><p>The identifier of the custom vocabulary.</p><br>
    /// - On success, responds with [`DescribeVocabularyOutput`](crate::operation::describe_vocabulary::DescribeVocabularyOutput) with field(s):
    ///   - [`vocabulary(Option<Vocabulary>)`](crate::operation::describe_vocabulary::DescribeVocabularyOutput::vocabulary): <p>A list of specific words that you want Contact Lens for Amazon Connect to recognize in your audio input. They are generally domain-specific words and phrases, words that Contact Lens is not recognizing, or proper nouns.</p>
    /// - On failure, responds with [`SdkError<DescribeVocabularyError>`](crate::operation::describe_vocabulary::DescribeVocabularyError)
    pub fn describe_vocabulary(&self) -> crate::operation::describe_vocabulary::builders::DescribeVocabularyFluentBuilder {
        crate::operation::describe_vocabulary::builders::DescribeVocabularyFluentBuilder::new(self.handle.clone())
    }
}
