// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The settings for container log rotation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContainerLogRotationConfiguration {
    /// <p>The file size at which to rotate logs. Minimum of 2KB, Maximum of 2GB.</p>
    pub rotation_size: ::std::string::String,
    /// <p>The number of files to keep in container after rotation.</p>
    pub max_files_to_keep: i32,
}
impl ContainerLogRotationConfiguration {
    /// <p>The file size at which to rotate logs. Minimum of 2KB, Maximum of 2GB.</p>
    pub fn rotation_size(&self) -> &str {
        use std::ops::Deref;
        self.rotation_size.deref()
    }
    /// <p>The number of files to keep in container after rotation.</p>
    pub fn max_files_to_keep(&self) -> i32 {
        self.max_files_to_keep
    }
}
impl ContainerLogRotationConfiguration {
    /// Creates a new builder-style object to manufacture [`ContainerLogRotationConfiguration`](crate::types::ContainerLogRotationConfiguration).
    pub fn builder() -> crate::types::builders::ContainerLogRotationConfigurationBuilder {
        crate::types::builders::ContainerLogRotationConfigurationBuilder::default()
    }
}

/// A builder for [`ContainerLogRotationConfiguration`](crate::types::ContainerLogRotationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ContainerLogRotationConfigurationBuilder {
    pub(crate) rotation_size: ::std::option::Option<::std::string::String>,
    pub(crate) max_files_to_keep: ::std::option::Option<i32>,
}
impl ContainerLogRotationConfigurationBuilder {
    /// <p>The file size at which to rotate logs. Minimum of 2KB, Maximum of 2GB.</p>
    /// This field is required.
    pub fn rotation_size(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.rotation_size = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The file size at which to rotate logs. Minimum of 2KB, Maximum of 2GB.</p>
    pub fn set_rotation_size(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.rotation_size = input;
        self
    }
    /// <p>The file size at which to rotate logs. Minimum of 2KB, Maximum of 2GB.</p>
    pub fn get_rotation_size(&self) -> &::std::option::Option<::std::string::String> {
        &self.rotation_size
    }
    /// <p>The number of files to keep in container after rotation.</p>
    /// This field is required.
    pub fn max_files_to_keep(mut self, input: i32) -> Self {
        self.max_files_to_keep = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of files to keep in container after rotation.</p>
    pub fn set_max_files_to_keep(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_files_to_keep = input;
        self
    }
    /// <p>The number of files to keep in container after rotation.</p>
    pub fn get_max_files_to_keep(&self) -> &::std::option::Option<i32> {
        &self.max_files_to_keep
    }
    /// Consumes the builder and constructs a [`ContainerLogRotationConfiguration`](crate::types::ContainerLogRotationConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`rotation_size`](crate::types::builders::ContainerLogRotationConfigurationBuilder::rotation_size)
    /// - [`max_files_to_keep`](crate::types::builders::ContainerLogRotationConfigurationBuilder::max_files_to_keep)
    pub fn build(self) -> ::std::result::Result<crate::types::ContainerLogRotationConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ContainerLogRotationConfiguration {
            rotation_size: self.rotation_size.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "rotation_size",
                    "rotation_size was not specified but it is required when building ContainerLogRotationConfiguration",
                )
            })?,
            max_files_to_keep: self.max_files_to_keep.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "max_files_to_keep",
                    "max_files_to_keep was not specified but it is required when building ContainerLogRotationConfiguration",
                )
            })?,
        })
    }
}
