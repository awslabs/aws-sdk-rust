// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Amazon S3 configuration for monitoring log publishing. You can configure your jobs to send log information to Amazon S3. This data type allows job template parameters to be specified within.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ParametricS3MonitoringConfiguration {
    /// <p>Amazon S3 destination URI for log publishing.</p>
    #[doc(hidden)]
    pub log_uri: std::option::Option<std::string::String>,
}
impl ParametricS3MonitoringConfiguration {
    /// <p>Amazon S3 destination URI for log publishing.</p>
    pub fn log_uri(&self) -> std::option::Option<&str> {
        self.log_uri.as_deref()
    }
}
impl ParametricS3MonitoringConfiguration {
    /// Creates a new builder-style object to manufacture [`ParametricS3MonitoringConfiguration`](crate::types::ParametricS3MonitoringConfiguration).
    pub fn builder() -> crate::types::builders::ParametricS3MonitoringConfigurationBuilder {
        crate::types::builders::ParametricS3MonitoringConfigurationBuilder::default()
    }
}

/// A builder for [`ParametricS3MonitoringConfiguration`](crate::types::ParametricS3MonitoringConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ParametricS3MonitoringConfigurationBuilder {
    pub(crate) log_uri: std::option::Option<std::string::String>,
}
impl ParametricS3MonitoringConfigurationBuilder {
    /// <p>Amazon S3 destination URI for log publishing.</p>
    pub fn log_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_uri = Some(input.into());
        self
    }
    /// <p>Amazon S3 destination URI for log publishing.</p>
    pub fn set_log_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_uri = input;
        self
    }
    /// Consumes the builder and constructs a [`ParametricS3MonitoringConfiguration`](crate::types::ParametricS3MonitoringConfiguration).
    pub fn build(self) -> crate::types::ParametricS3MonitoringConfiguration {
        crate::types::ParametricS3MonitoringConfiguration {
            log_uri: self.log_uri,
        }
    }
}
