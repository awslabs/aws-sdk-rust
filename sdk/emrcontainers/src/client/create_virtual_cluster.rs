// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateVirtualCluster`](crate::client::fluent_builders::CreateVirtualCluster) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateVirtualCluster::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateVirtualCluster::set_name): <p>The specified name of the virtual cluster.</p>
    ///   - [`container_provider(ContainerProvider)`](crate::client::fluent_builders::CreateVirtualCluster::container_provider) / [`set_container_provider(Option<ContainerProvider>)`](crate::client::fluent_builders::CreateVirtualCluster::set_container_provider): <p>The container provider of the virtual cluster.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateVirtualCluster::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateVirtualCluster::set_client_token): <p>The client token of the virtual cluster.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateVirtualCluster::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateVirtualCluster::set_tags): <p>The tags assigned to the virtual cluster.</p>
    /// - On success, responds with [`CreateVirtualClusterOutput`](crate::output::CreateVirtualClusterOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::CreateVirtualClusterOutput::id): <p>This output contains the virtual cluster ID.</p>
    ///   - [`name(Option<String>)`](crate::output::CreateVirtualClusterOutput::name): <p>This output contains the name of the virtual cluster.</p>
    ///   - [`arn(Option<String>)`](crate::output::CreateVirtualClusterOutput::arn): <p>This output contains the ARN of virtual cluster.</p>
    /// - On failure, responds with [`SdkError<CreateVirtualClusterError>`](crate::error::CreateVirtualClusterError)
    pub fn create_virtual_cluster(&self) -> crate::client::fluent_builders::CreateVirtualCluster {
        crate::client::fluent_builders::CreateVirtualCluster::new(self.handle.clone())
    }
}
