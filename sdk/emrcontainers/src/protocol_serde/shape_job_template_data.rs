// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_job_template_data(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::JobTemplateData,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("executionRoleArn").string(input.execution_role_arn.as_str());
    }
    {
        object.key("releaseLabel").string(input.release_label.as_str());
    }
    if let Some(var_1) = &input.configuration_overrides {
        #[allow(unused_mut)]
        let mut object_2 = object.key("configurationOverrides").start_object();
        crate::protocol_serde::shape_parametric_configuration_overrides::ser_parametric_configuration_overrides(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.job_driver {
        #[allow(unused_mut)]
        let mut object_4 = object.key("jobDriver").start_object();
        crate::protocol_serde::shape_job_driver::ser_job_driver(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.parameter_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object.key("parameterConfiguration").start_object();
        for (key_7, value_8) in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_9 = object_6.key(key_7.as_str()).start_object();
                crate::protocol_serde::shape_template_parameter_configuration::ser_template_parameter_configuration(&mut object_9, value_8)?;
                object_9.finish();
            }
        }
        object_6.finish();
    }
    if let Some(var_10) = &input.job_tags {
        #[allow(unused_mut)]
        let mut object_11 = object.key("jobTags").start_object();
        for (key_12, value_13) in var_10 {
            {
                object_11.key(key_12.as_str()).string(value_13.as_str());
            }
        }
        object_11.finish();
    }
    Ok(())
}

pub(crate) fn de_job_template_data<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::JobTemplateData>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::JobTemplateDataBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "executionRoleArn" => {
                            builder = builder.set_execution_role_arn(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "releaseLabel" => {
                            builder = builder.set_release_label(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "configurationOverrides" => {
                            builder = builder.set_configuration_overrides(
                                crate::protocol_serde::shape_parametric_configuration_overrides::de_parametric_configuration_overrides(tokens)?,
                            );
                        }
                        "jobDriver" => {
                            builder = builder.set_job_driver(crate::protocol_serde::shape_job_driver::de_job_driver(tokens)?);
                        }
                        "parameterConfiguration" => {
                            builder = builder.set_parameter_configuration(
                                crate::protocol_serde::shape_template_parameter_configuration_map::de_template_parameter_configuration_map(tokens)?,
                            );
                        }
                        "jobTags" => {
                            builder = builder.set_job_tags(crate::protocol_serde::shape_tag_map::de_tag_map(tokens)?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(crate::serde_util::job_template_data_correct_errors(builder).build().map_err(
                |err| ::aws_smithy_json::deserialize::error::DeserializeError::custom_source("Response was invalid", err),
            )?))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
