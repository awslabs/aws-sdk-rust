# Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
[package]
name = "aws-sdk-codecommit"
version = "0.0.20-alpha"
description = "<fullname>AWS CodeCommit</fullname>\n        <p>This is the <i>AWS CodeCommit API Reference</i>. This reference provides descriptions of the operations and data types for \n            AWS CodeCommit API along with usage examples.</p>\n        <p>You can use the AWS CodeCommit API to work with the following objects:</p>\n        \n            <p>Repositories, by calling the following:</p>\n          <ul>\n            <li>\n                  <p>\n                  <a>BatchGetRepositories</a>, which returns information about one or more repositories associated with your AWS account.</p>\n            </li>\n            <li>\n                  <p>\n                  <a>CreateRepository</a>, which creates an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n                  <p>\n                  <a>DeleteRepository</a>, which deletes an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n                  <p>\n                  <a>GetRepository</a>, which returns information about a specified repository.</p>\n            </li>\n            <li>\n                  <p>\n                  <a>ListRepositories</a>, which lists all AWS CodeCommit repositories associated with your AWS account.</p>\n            </li>\n            <li>\n                  <p>\n                  <a>UpdateRepositoryDescription</a>, which sets or updates the description of the repository.</p>\n              </li>\n            <li>\n                  <p>\n                  <a>UpdateRepositoryName</a>, which changes the name of the\n                    repository. If you change the name of a repository, no other users of that\n                    repository can access it until you send them the new HTTPS or SSH URL to\n                    use.</p>\n            </li>\n         </ul>\n        \n            <p>Branches, by calling the following:</p>\n            <ul>\n            <li>\n                    <p>\n                  <a>CreateBranch</a>, which creates a branch in a specified\n                    repository.</p>\n            </li>\n            <li>\n                    <p>\n                  <a>DeleteBranch</a>, which deletes the specified branch in a repository unless it is the default branch.</p>\n                </li>\n            <li>\n                    <p>\n                  <a>GetBranch</a>, which returns information about a specified branch.</p>\n            </li>\n            <li>\n                    <p>\n                  <a>ListBranches</a>, which lists all branches for a specified repository.</p>\n            </li>\n            <li>\n                    <p>\n                  <a>UpdateDefaultBranch</a>, which changes the default branch for a repository.</p>\n            </li>\n         </ul>\n        \n        <p>Files, by calling the following:</p>\n        <ul>\n            <li>\n               <p>\n                  <a>DeleteFile</a>, which deletes the content of a specified file from a specified branch.</p>\n            </li>\n            <li>\n                <p>\n                  <a>GetBlob</a>, which returns the base-64 encoded content of an\n                    individual Git blob object in a repository.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetFile</a>, which returns the base-64 encoded content of a specified file.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetFolder</a>, which returns the contents of a specified folder or directory.</p>\n            </li>\n            <li>\n               <p>\n                  <a>PutFile</a>, which adds or modifies a single file in a specified repository and branch.</p>\n            </li>\n         </ul>\n        \n        \n            <p>Commits, by calling the following:</p>\n              <ul>\n            <li>\n                      <p>\n                  <a>BatchGetCommits</a>, which returns information about one or more commits in a repository.</p>\n                  </li>\n            <li>\n               <p>\n                  <a>CreateCommit</a>, which creates a commit for changes to a repository.</p>\n            </li>\n            <li>\n                      <p>\n                  <a>GetCommit</a>, which returns information about  a commit, including commit \n                          messages and author and committer information.</p>\n                  </li>\n            <li>\n                      <p>\n                  <a>GetDifferences</a>, which returns information about the\n                    differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID,\n                    or other fully qualified reference).</p>\n                  </li>\n         </ul>\n        \n\n        <p>Merges, by calling the following:</p>\n        <ul>\n            <li>\n                <p>\n                  <a>BatchDescribeMergeConflicts</a>, which returns information about conflicts in a merge between commits in a repository.</p>\n            </li>\n            <li>\n                <p>\n                  <a>CreateUnreferencedMergeCommit</a>, which creates an unreferenced commit between two branches or commits for the\n                    purpose of comparing them and identifying any potential conflicts.</p>\n            </li>\n            <li>\n                <p>\n                  <a>DescribeMergeConflicts</a>, which returns information about merge conflicts between the base, source, and destination versions\n                    of a file in a potential merge.</p>\n            </li>\n            <li>\n                <p>\n                  <a>GetMergeCommit</a>, which returns information about the merge between a source and destination commit. </p>\n\n            </li>\n            <li>\n                <p>\n                  <a>GetMergeConflicts</a>, which returns information about merge conflicts\n                    between the source and destination branch in a pull request.</p>\n            </li>\n            <li>\n\n                <p>\n                  <a>GetMergeOptions</a>, which returns information about the available merge options between two branches or commit specifiers.</p>\n            </li>\n            <li>\n                <p>\n                  <a>MergeBranchesByFastForward</a>, which merges two branches using the fast-forward merge option.</p>\n            </li>\n            <li>\n                <p>\n                  <a>MergeBranchesBySquash</a>, which merges two branches using the squash merge option.</p>\n            </li>\n            <li>\n                <p>\n                  <a>MergeBranchesByThreeWay</a>, which merges two branches using the three-way merge option.</p>\n            </li>\n         </ul>\n        \n        \n        <p>Pull requests, by calling the following:</p>\n        <ul>\n            <li>\n                <p>\n                  <a>CreatePullRequest</a>, which creates a pull request in a specified repository.</p>\n            </li>\n            <li>\n               <p>\n                  <a>CreatePullRequestApprovalRule</a>, which creates an approval rule for a specified pull request.</p>\n            </li>\n            <li>\n               <p>\n                  <a>DeletePullRequestApprovalRule</a>, which deletes an approval rule for a specified pull request.</p>\n            </li>\n            <li>\n                <p>\n                  <a>DescribePullRequestEvents</a>, which returns information about one or more pull request events.</p>\n            </li>\n            <li>\n               <p>\n                  <a>EvaluatePullRequestApprovalRules</a>, which evaluates whether a pull request has met all the conditions specified in its associated approval rules.</p>\n            </li>\n            <li>\n                <p>\n                  <a>GetCommentsForPullRequest</a>, which returns information about comments on a specified pull request.</p>\n            </li>\n            <li>\n\n                <p>\n                  <a>GetPullRequest</a>, which returns information about a specified pull request.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetPullRequestApprovalStates</a>, which returns information about the approval states for a specified pull request.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetPullRequestOverrideState</a>, which returns information about whether approval rules have been set aside (overriden) for a \n            pull request, and if so, the Amazon Resource Name (ARN) of the user or identity that overrode the rules and their requirements for the pull request.</p>\n            </li>\n            <li> \n                <p>\n                  <a>ListPullRequests</a>, which lists all pull requests for a repository.</p>\n            </li>\n            <li>\n                <p>\n                  <a>MergePullRequestByFastForward</a>, which merges the source destination branch of a pull request into the specified destination\n                    branch for that pull request using the fast-forward merge option.</p>\n            </li>\n            <li>\n                <p>\n                  <a>MergePullRequestBySquash</a>, which merges the source destination branch of a pull request into the specified destination\n                branch for that pull request using the squash merge option.</p>\n            </li>\n            <li>\n                <p>\n                  <a>MergePullRequestByThreeWay</a>. which merges the source destination branch of a pull request into the specified destination\n                branch for that pull request using the three-way merge option.</p>\n            </li>\n            <li>\n               <p>\n                  <a>OverridePullRequestApprovalRules</a>, which sets aside all approval rule requirements for a pull request.</p>\n            </li>\n            <li>\n                <p>\n                  <a>PostCommentForPullRequest</a>, which posts a comment to a pull request at the specified line, file, or request.</p>\n            </li>\n            <li>\n               <p>\n                  <a>UpdatePullRequestApprovalRuleContent</a>, which updates the structure of an approval rule for a pull request.</p>\n            </li>\n            <li>\n               <p>\n                  <a>UpdatePullRequestApprovalState</a>, which updates the state of an approval on a pull request.</p>\n            </li>\n            <li>\n                <p>\n                  <a>UpdatePullRequestDescription</a>, which updates the description of a pull request.</p>\n            </li>\n            <li>\n                <p>\n                  <a>UpdatePullRequestStatus</a>, which updates the status of a pull request.</p>\n            </li>\n            <li>\n                <p>\n                  <a>UpdatePullRequestTitle</a>, which updates the title of a pull request.</p>\n            </li>\n         </ul>\n        \n        <p>Approval rule templates, by calling the following:</p>\n        <ul>\n            <li>\n               <p>\n                  <a>AssociateApprovalRuleTemplateWithRepository</a>, which associates a template\n                    with a specified repository. After the template is associated with a repository,\n                    AWS CodeCommit creates approval rules that match the template conditions on\n                    every pull request created in the specified repository.</p>\n            </li>\n            <li>\n               <p>\n                  <a>BatchAssociateApprovalRuleTemplateWithRepositories</a>, which associates a\n                    template with one or more specified repositories. After the template is\n                    associated with a repository, AWS CodeCommit creates approval rules that match\n                    the template conditions on every pull request created in the specified\n                    repositories.</p>\n            </li>\n            <li>\n               <p>\n                  <a>BatchDisassociateApprovalRuleTemplateFromRepositories</a>, which removes the\n                    association between a template and specified repositories so that approval rules\n                    based on the template are not automatically created when pull requests are\n                    created in those repositories.</p>\n            </li>\n            <li>\n               <p>\n                  <a>CreateApprovalRuleTemplate</a>, which creates a template for approval rules that can then be associated with one or more repositories\n             in your AWS account.</p>\n            </li>\n            <li>\n               <p>\n                  <a>DeleteApprovalRuleTemplate</a>, which deletes the specified template. It does not remove approval rules on pull requests already created with the template.</p>\n            </li>\n            <li>\n               <p>\n                  <a>DisassociateApprovalRuleTemplateFromRepository</a>, which removes the\n                    association between a template and a repository so that approval rules based on\n                    the template are not automatically created when pull requests are created in the\n                    specified repository.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetApprovalRuleTemplate</a>, which returns information about an approval rule template.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListApprovalRuleTemplates</a>, which lists all approval rule templates in the AWS Region in your AWS account.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListAssociatedApprovalRuleTemplatesForRepository</a>, which lists all approval rule templates that are associated with a specified repository.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListRepositoriesForApprovalRuleTemplate</a>, which lists all repositories associated with the specified approval rule template.</p>\n            </li>\n            <li>\n               <p>\n                  <a>UpdateApprovalRuleTemplateDescription</a>, which updates the description of an\n                    approval rule template.</p>\n            </li>\n            <li>\n               <p>\n                  <a>UpdateApprovalRuleTemplateName</a>, which updates the name of an approval rule template.</p>\n            </li>\n            <li>\n               <p>\n                  <a>UpdateApprovalRuleTemplateContent</a>, which updates the content of an approval rule template.</p>\n            </li>\n         </ul>\n        \n        <p>Comments in a repository, by calling the following:</p>\n        <ul>\n            <li>\n                <p>\n                  <a>DeleteCommentContent</a>, which deletes the content of a comment on a commit in a repository.</p>\n            </li>\n            <li>\n                <p>\n                  <a>GetComment</a>, which returns information about a comment on a commit.</p>\n            </li>\n            <li>\n                <p>\n                  <a>GetCommentReactions</a>, which returns information about emoji reactions to comments.</p>\n            </li>\n            <li>\n                <p>\n                  <a>GetCommentsForComparedCommit</a>, which returns information about comments on the comparison between two commit specifiers \n                    in a repository.</p>\n            </li>\n            <li>\n                <p>\n                  <a>PostCommentForComparedCommit</a>, which creates a comment on the comparison between two commit specifiers in a repository.</p>\n            </li>\n            <li>\n                <p>\n                  <a>PostCommentReply</a>, which creates a reply to a comment.</p>\n            </li>\n            <li>\n               <p>\n                  <a>PutCommentReaction</a>, which creates or updates an emoji reaction to a comment.</p>\n            </li>\n            <li>\n                <p>\n                  <a>UpdateComment</a>, which updates the content of a comment on a commit in a repository.</p>\n            </li>\n         </ul>\n        \n        <p>Tags used to tag resources in AWS CodeCommit (not Git tags), by calling the following:</p>\n        <ul>\n            <li>\n               <p>\n                  <a>ListTagsForResource</a>, which gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS CodeCommit.</p>\n            </li>\n            <li>\n               <p>\n                  <a>TagResource</a>, which adds or updates tags for a resource in AWS CodeCommit.</p>\n            </li>\n            <li>\n               <p>\n                  <a>UntagResource</a>, which removes tags for a resource in AWS CodeCommit.</p>\n            </li>\n         </ul>\n         \n            <p>Triggers, by calling the following:</p> \n                <ul>\n            <li>\n                        <p>\n                  <a>GetRepositoryTriggers</a>, which returns information about triggers configured \n                            for a repository.</p>\n            </li>\n            <li>\n                        <p>\n                  <a>PutRepositoryTriggers</a>, which replaces all triggers for a repository and can \n                            be used to create or delete triggers.</p>\n            </li>\n            <li>\n                        <p>\n                  <a>TestRepositoryTriggers</a>, which tests the functionality of a repository trigger \n                            by sending data to the trigger target.</p>\n            </li>\n         </ul>\n                   \n            \n             \n        \n        <p>For information about how to use AWS CodeCommit, see the <a href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html\">AWS CodeCommit User Guide</a>.</p>"
authors = ["AWS Rust SDK Team <aws-sdk-rust@amazon.com>", "Russell Cohen <rcoh@amazon.com>"]
license = "Apache-2.0"
edition = "2018"
[dependencies.aws-auth]
path = "..//aws-auth"
[dependencies.aws-endpoint]
path = "..//aws-endpoint"
[dependencies.aws-http]
path = "..//aws-http"
[dependencies.aws-hyper]
path = "..//aws-hyper"
optional = true
[dependencies.aws-sig-auth]
path = "..//aws-sig-auth"
[dependencies.aws-types]
path = "..//aws-types"
[dependencies.bytes]
version = "1"
[dependencies.fastrand]
version = "1"
[dependencies.http]
version = "0.2"
[dependencies.smithy-client]
path = "..//smithy-client"
optional = true
[dependencies.smithy-http]
path = "..//smithy-http"
[dependencies.smithy-json]
path = "..//smithy-json"
[dependencies.smithy-types]
path = "..//smithy-types"
[features]
client = ["aws-hyper", "smithy-client"]
rustls = ["aws-hyper/rustls"]
native-tls = ["aws-hyper/native-tls"]
default = ["client", "rustls"]


