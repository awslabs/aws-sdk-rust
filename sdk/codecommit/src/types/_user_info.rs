// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the user who made a specified commit.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UserInfo {
    /// <p>The name of the user who made the specified commit.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The email address associated with the user who made the commit, if any.</p>
    #[doc(hidden)]
    pub email: std::option::Option<std::string::String>,
    /// <p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>
    #[doc(hidden)]
    pub date: std::option::Option<std::string::String>,
}
impl UserInfo {
    /// <p>The name of the user who made the specified commit.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The email address associated with the user who made the commit, if any.</p>
    pub fn email(&self) -> std::option::Option<&str> {
        self.email.as_deref()
    }
    /// <p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>
    pub fn date(&self) -> std::option::Option<&str> {
        self.date.as_deref()
    }
}
impl UserInfo {
    /// Creates a new builder-style object to manufacture [`UserInfo`](crate::types::UserInfo).
    pub fn builder() -> crate::types::builders::UserInfoBuilder {
        crate::types::builders::UserInfoBuilder::default()
    }
}

/// A builder for [`UserInfo`](crate::types::UserInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UserInfoBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) email: std::option::Option<std::string::String>,
    pub(crate) date: std::option::Option<std::string::String>,
}
impl UserInfoBuilder {
    /// <p>The name of the user who made the specified commit.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the user who made the specified commit.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The email address associated with the user who made the commit, if any.</p>
    pub fn email(mut self, input: impl Into<std::string::String>) -> Self {
        self.email = Some(input.into());
        self
    }
    /// <p>The email address associated with the user who made the commit, if any.</p>
    pub fn set_email(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.email = input;
        self
    }
    /// <p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>
    pub fn date(mut self, input: impl Into<std::string::String>) -> Self {
        self.date = Some(input.into());
        self
    }
    /// <p>The date when the specified commit was commited, in timestamp format with GMT offset.</p>
    pub fn set_date(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.date = input;
        self
    }
    /// Consumes the builder and constructs a [`UserInfo`](crate::types::UserInfo).
    pub fn build(self) -> crate::types::UserInfo {
        crate::types::UserInfo {
            name: self.name,
            email: self.email,
            date: self.date,
        }
    }
}
