// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the type of an object in a merge operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ObjectTypes {
    /// <p>The type of the object in the source branch.</p>
    #[doc(hidden)]
    pub source: std::option::Option<crate::types::ObjectTypeEnum>,
    /// <p>The type of the object in the destination branch.</p>
    #[doc(hidden)]
    pub destination: std::option::Option<crate::types::ObjectTypeEnum>,
    /// <p>The type of the object in the base commit of the merge.</p>
    #[doc(hidden)]
    pub base: std::option::Option<crate::types::ObjectTypeEnum>,
}
impl ObjectTypes {
    /// <p>The type of the object in the source branch.</p>
    pub fn source(&self) -> std::option::Option<&crate::types::ObjectTypeEnum> {
        self.source.as_ref()
    }
    /// <p>The type of the object in the destination branch.</p>
    pub fn destination(&self) -> std::option::Option<&crate::types::ObjectTypeEnum> {
        self.destination.as_ref()
    }
    /// <p>The type of the object in the base commit of the merge.</p>
    pub fn base(&self) -> std::option::Option<&crate::types::ObjectTypeEnum> {
        self.base.as_ref()
    }
}
impl ObjectTypes {
    /// Creates a new builder-style object to manufacture [`ObjectTypes`](crate::types::ObjectTypes).
    pub fn builder() -> crate::types::builders::ObjectTypesBuilder {
        crate::types::builders::ObjectTypesBuilder::default()
    }
}

/// A builder for [`ObjectTypes`](crate::types::ObjectTypes).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ObjectTypesBuilder {
    pub(crate) source: std::option::Option<crate::types::ObjectTypeEnum>,
    pub(crate) destination: std::option::Option<crate::types::ObjectTypeEnum>,
    pub(crate) base: std::option::Option<crate::types::ObjectTypeEnum>,
}
impl ObjectTypesBuilder {
    /// <p>The type of the object in the source branch.</p>
    pub fn source(mut self, input: crate::types::ObjectTypeEnum) -> Self {
        self.source = Some(input);
        self
    }
    /// <p>The type of the object in the source branch.</p>
    pub fn set_source(mut self, input: std::option::Option<crate::types::ObjectTypeEnum>) -> Self {
        self.source = input;
        self
    }
    /// <p>The type of the object in the destination branch.</p>
    pub fn destination(mut self, input: crate::types::ObjectTypeEnum) -> Self {
        self.destination = Some(input);
        self
    }
    /// <p>The type of the object in the destination branch.</p>
    pub fn set_destination(
        mut self,
        input: std::option::Option<crate::types::ObjectTypeEnum>,
    ) -> Self {
        self.destination = input;
        self
    }
    /// <p>The type of the object in the base commit of the merge.</p>
    pub fn base(mut self, input: crate::types::ObjectTypeEnum) -> Self {
        self.base = Some(input);
        self
    }
    /// <p>The type of the object in the base commit of the merge.</p>
    pub fn set_base(mut self, input: std::option::Option<crate::types::ObjectTypeEnum>) -> Self {
        self.base = input;
        self
    }
    /// Consumes the builder and constructs a [`ObjectTypes`](crate::types::ObjectTypes).
    pub fn build(self) -> crate::types::ObjectTypes {
        crate::types::ObjectTypes {
            source: self.source,
            destination: self.destination,
            base: self.base,
        }
    }
}
