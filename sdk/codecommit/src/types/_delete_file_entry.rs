// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A file that is deleted as part of a commit.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteFileEntry {
    /// <p>The full path of the file to be deleted, including the name of the file.</p>
    #[doc(hidden)]
    pub file_path: std::option::Option<std::string::String>,
}
impl DeleteFileEntry {
    /// <p>The full path of the file to be deleted, including the name of the file.</p>
    pub fn file_path(&self) -> std::option::Option<&str> {
        self.file_path.as_deref()
    }
}
impl DeleteFileEntry {
    /// Creates a new builder-style object to manufacture [`DeleteFileEntry`](crate::types::DeleteFileEntry).
    pub fn builder() -> crate::types::builders::DeleteFileEntryBuilder {
        crate::types::builders::DeleteFileEntryBuilder::default()
    }
}

/// A builder for [`DeleteFileEntry`](crate::types::DeleteFileEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteFileEntryBuilder {
    pub(crate) file_path: std::option::Option<std::string::String>,
}
impl DeleteFileEntryBuilder {
    /// <p>The full path of the file to be deleted, including the name of the file.</p>
    pub fn file_path(mut self, input: impl Into<std::string::String>) -> Self {
        self.file_path = Some(input.into());
        self
    }
    /// <p>The full path of the file to be deleted, including the name of the file.</p>
    pub fn set_file_path(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.file_path = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteFileEntry`](crate::types::DeleteFileEntry).
    pub fn build(self) -> crate::types::DeleteFileEntry {
        crate::types::DeleteFileEntry {
            file_path: self.file_path,
        }
    }
}
