// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the file operation conflicts in a merge operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MergeOperations {
    /// <p>The operation (add, modify, or delete) on a file in the source of a merge or pull request.</p>
    #[doc(hidden)]
    pub source: std::option::Option<crate::types::ChangeTypeEnum>,
    /// <p>The operation on a file in the destination of a merge or pull request.</p>
    #[doc(hidden)]
    pub destination: std::option::Option<crate::types::ChangeTypeEnum>,
}
impl MergeOperations {
    /// <p>The operation (add, modify, or delete) on a file in the source of a merge or pull request.</p>
    pub fn source(&self) -> std::option::Option<&crate::types::ChangeTypeEnum> {
        self.source.as_ref()
    }
    /// <p>The operation on a file in the destination of a merge or pull request.</p>
    pub fn destination(&self) -> std::option::Option<&crate::types::ChangeTypeEnum> {
        self.destination.as_ref()
    }
}
impl MergeOperations {
    /// Creates a new builder-style object to manufacture [`MergeOperations`](crate::types::MergeOperations).
    pub fn builder() -> crate::types::builders::MergeOperationsBuilder {
        crate::types::builders::MergeOperationsBuilder::default()
    }
}

/// A builder for [`MergeOperations`](crate::types::MergeOperations).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MergeOperationsBuilder {
    pub(crate) source: std::option::Option<crate::types::ChangeTypeEnum>,
    pub(crate) destination: std::option::Option<crate::types::ChangeTypeEnum>,
}
impl MergeOperationsBuilder {
    /// <p>The operation (add, modify, or delete) on a file in the source of a merge or pull request.</p>
    pub fn source(mut self, input: crate::types::ChangeTypeEnum) -> Self {
        self.source = Some(input);
        self
    }
    /// <p>The operation (add, modify, or delete) on a file in the source of a merge or pull request.</p>
    pub fn set_source(mut self, input: std::option::Option<crate::types::ChangeTypeEnum>) -> Self {
        self.source = input;
        self
    }
    /// <p>The operation on a file in the destination of a merge or pull request.</p>
    pub fn destination(mut self, input: crate::types::ChangeTypeEnum) -> Self {
        self.destination = Some(input);
        self
    }
    /// <p>The operation on a file in the destination of a merge or pull request.</p>
    pub fn set_destination(
        mut self,
        input: std::option::Option<crate::types::ChangeTypeEnum>,
    ) -> Self {
        self.destination = input;
        self
    }
    /// Consumes the builder and constructs a [`MergeOperations`](crate::types::MergeOperations).
    pub fn build(self) -> crate::types::MergeOperations {
        crate::types::MergeOperations {
            source: self.source,
            destination: self.destination,
        }
    }
}
