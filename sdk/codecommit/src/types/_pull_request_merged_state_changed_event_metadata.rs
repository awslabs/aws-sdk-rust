// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Returns information about the change in the merge state for a pull request event. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PullRequestMergedStateChangedEventMetadata {
    /// <p>The name of the repository where the pull request was created.</p>
    #[doc(hidden)]
    pub repository_name: std::option::Option<std::string::String>,
    /// <p>The name of the branch that the pull request is merged into.</p>
    #[doc(hidden)]
    pub destination_reference: std::option::Option<std::string::String>,
    /// <p>Information about the merge state change event.</p>
    #[doc(hidden)]
    pub merge_metadata: std::option::Option<crate::types::MergeMetadata>,
}
impl PullRequestMergedStateChangedEventMetadata {
    /// <p>The name of the repository where the pull request was created.</p>
    pub fn repository_name(&self) -> std::option::Option<&str> {
        self.repository_name.as_deref()
    }
    /// <p>The name of the branch that the pull request is merged into.</p>
    pub fn destination_reference(&self) -> std::option::Option<&str> {
        self.destination_reference.as_deref()
    }
    /// <p>Information about the merge state change event.</p>
    pub fn merge_metadata(&self) -> std::option::Option<&crate::types::MergeMetadata> {
        self.merge_metadata.as_ref()
    }
}
impl PullRequestMergedStateChangedEventMetadata {
    /// Creates a new builder-style object to manufacture [`PullRequestMergedStateChangedEventMetadata`](crate::types::PullRequestMergedStateChangedEventMetadata).
    pub fn builder() -> crate::types::builders::PullRequestMergedStateChangedEventMetadataBuilder {
        crate::types::builders::PullRequestMergedStateChangedEventMetadataBuilder::default()
    }
}

/// A builder for [`PullRequestMergedStateChangedEventMetadata`](crate::types::PullRequestMergedStateChangedEventMetadata).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PullRequestMergedStateChangedEventMetadataBuilder {
    pub(crate) repository_name: std::option::Option<std::string::String>,
    pub(crate) destination_reference: std::option::Option<std::string::String>,
    pub(crate) merge_metadata: std::option::Option<crate::types::MergeMetadata>,
}
impl PullRequestMergedStateChangedEventMetadataBuilder {
    /// <p>The name of the repository where the pull request was created.</p>
    pub fn repository_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.repository_name = Some(input.into());
        self
    }
    /// <p>The name of the repository where the pull request was created.</p>
    pub fn set_repository_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.repository_name = input;
        self
    }
    /// <p>The name of the branch that the pull request is merged into.</p>
    pub fn destination_reference(mut self, input: impl Into<std::string::String>) -> Self {
        self.destination_reference = Some(input.into());
        self
    }
    /// <p>The name of the branch that the pull request is merged into.</p>
    pub fn set_destination_reference(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.destination_reference = input;
        self
    }
    /// <p>Information about the merge state change event.</p>
    pub fn merge_metadata(mut self, input: crate::types::MergeMetadata) -> Self {
        self.merge_metadata = Some(input);
        self
    }
    /// <p>Information about the merge state change event.</p>
    pub fn set_merge_metadata(
        mut self,
        input: std::option::Option<crate::types::MergeMetadata>,
    ) -> Self {
        self.merge_metadata = input;
        self
    }
    /// Consumes the builder and constructs a [`PullRequestMergedStateChangedEventMetadata`](crate::types::PullRequestMergedStateChangedEventMetadata).
    pub fn build(self) -> crate::types::PullRequestMergedStateChangedEventMetadata {
        crate::types::PullRequestMergedStateChangedEventMetadata {
            repository_name: self.repository_name,
            destination_reference: self.destination_reference,
            merge_metadata: self.merge_metadata,
        }
    }
}
