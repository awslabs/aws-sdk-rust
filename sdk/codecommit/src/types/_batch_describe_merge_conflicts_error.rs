// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Returns information about errors in a BatchDescribeMergeConflicts operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchDescribeMergeConflictsError {
    /// <p>The path to the file.</p>
    pub file_path: ::std::string::String,
    /// <p>The name of the exception.</p>
    pub exception_name: ::std::string::String,
    /// <p>The message provided by the exception.</p>
    pub message: ::std::string::String,
}
impl BatchDescribeMergeConflictsError {
    /// <p>The path to the file.</p>
    pub fn file_path(&self) -> &str {
        use std::ops::Deref;
        self.file_path.deref()
    }
    /// <p>The name of the exception.</p>
    pub fn exception_name(&self) -> &str {
        use std::ops::Deref;
        self.exception_name.deref()
    }
    /// <p>The message provided by the exception.</p>
    pub fn message(&self) -> &str {
        use std::ops::Deref;
        self.message.deref()
    }
}
impl BatchDescribeMergeConflictsError {
    /// Creates a new builder-style object to manufacture [`BatchDescribeMergeConflictsError`](crate::types::BatchDescribeMergeConflictsError).
    pub fn builder() -> crate::types::builders::BatchDescribeMergeConflictsErrorBuilder {
        crate::types::builders::BatchDescribeMergeConflictsErrorBuilder::default()
    }
}

/// A builder for [`BatchDescribeMergeConflictsError`](crate::types::BatchDescribeMergeConflictsError).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchDescribeMergeConflictsErrorBuilder {
    pub(crate) file_path: ::std::option::Option<::std::string::String>,
    pub(crate) exception_name: ::std::option::Option<::std::string::String>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
}
impl BatchDescribeMergeConflictsErrorBuilder {
    /// <p>The path to the file.</p>
    /// This field is required.
    pub fn file_path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.file_path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The path to the file.</p>
    pub fn set_file_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.file_path = input;
        self
    }
    /// <p>The path to the file.</p>
    pub fn get_file_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.file_path
    }
    /// <p>The name of the exception.</p>
    /// This field is required.
    pub fn exception_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.exception_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the exception.</p>
    pub fn set_exception_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.exception_name = input;
        self
    }
    /// <p>The name of the exception.</p>
    pub fn get_exception_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.exception_name
    }
    /// <p>The message provided by the exception.</p>
    /// This field is required.
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The message provided by the exception.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>The message provided by the exception.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Consumes the builder and constructs a [`BatchDescribeMergeConflictsError`](crate::types::BatchDescribeMergeConflictsError).
    /// This method will fail if any of the following fields are not set:
    /// - [`file_path`](crate::types::builders::BatchDescribeMergeConflictsErrorBuilder::file_path)
    /// - [`exception_name`](crate::types::builders::BatchDescribeMergeConflictsErrorBuilder::exception_name)
    /// - [`message`](crate::types::builders::BatchDescribeMergeConflictsErrorBuilder::message)
    pub fn build(self) -> ::std::result::Result<crate::types::BatchDescribeMergeConflictsError, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BatchDescribeMergeConflictsError {
            file_path: self.file_path.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "file_path",
                    "file_path was not specified but it is required when building BatchDescribeMergeConflictsError",
                )
            })?,
            exception_name: self.exception_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "exception_name",
                    "exception_name was not specified but it is required when building BatchDescribeMergeConflictsError",
                )
            })?,
            message: self.message.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "message",
                    "message was not specified but it is required when building BatchDescribeMergeConflictsError",
                )
            })?,
        })
    }
}
