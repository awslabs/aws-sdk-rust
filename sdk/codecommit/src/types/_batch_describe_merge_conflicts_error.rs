// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Returns information about errors in a BatchDescribeMergeConflicts operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchDescribeMergeConflictsError {
    /// <p>The path to the file.</p>
    #[doc(hidden)]
    pub file_path: std::option::Option<std::string::String>,
    /// <p>The name of the exception.</p>
    #[doc(hidden)]
    pub exception_name: std::option::Option<std::string::String>,
    /// <p>The message provided by the exception.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl BatchDescribeMergeConflictsError {
    /// <p>The path to the file.</p>
    pub fn file_path(&self) -> std::option::Option<&str> {
        self.file_path.as_deref()
    }
    /// <p>The name of the exception.</p>
    pub fn exception_name(&self) -> std::option::Option<&str> {
        self.exception_name.as_deref()
    }
    /// <p>The message provided by the exception.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl BatchDescribeMergeConflictsError {
    /// Creates a new builder-style object to manufacture [`BatchDescribeMergeConflictsError`](crate::types::BatchDescribeMergeConflictsError).
    pub fn builder() -> crate::types::builders::BatchDescribeMergeConflictsErrorBuilder {
        crate::types::builders::BatchDescribeMergeConflictsErrorBuilder::default()
    }
}

/// A builder for [`BatchDescribeMergeConflictsError`](crate::types::BatchDescribeMergeConflictsError).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchDescribeMergeConflictsErrorBuilder {
    pub(crate) file_path: std::option::Option<std::string::String>,
    pub(crate) exception_name: std::option::Option<std::string::String>,
    pub(crate) message: std::option::Option<std::string::String>,
}
impl BatchDescribeMergeConflictsErrorBuilder {
    /// <p>The path to the file.</p>
    pub fn file_path(mut self, input: impl Into<std::string::String>) -> Self {
        self.file_path = Some(input.into());
        self
    }
    /// <p>The path to the file.</p>
    pub fn set_file_path(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.file_path = input;
        self
    }
    /// <p>The name of the exception.</p>
    pub fn exception_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.exception_name = Some(input.into());
        self
    }
    /// <p>The name of the exception.</p>
    pub fn set_exception_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.exception_name = input;
        self
    }
    /// <p>The message provided by the exception.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>The message provided by the exception.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchDescribeMergeConflictsError`](crate::types::BatchDescribeMergeConflictsError).
    pub fn build(self) -> crate::types::BatchDescribeMergeConflictsError {
        crate::types::BatchDescribeMergeConflictsError {
            file_path: self.file_path,
            exception_name: self.exception_name,
            message: self.message,
        }
    }
}
