// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the size of files in a merge or pull request.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FileSizes {
    /// <p>The size of a file in the source of a merge or pull request.</p>
    #[doc(hidden)]
    pub source: i64,
    /// <p>The size of a file in the destination of a merge or pull request.</p>
    #[doc(hidden)]
    pub destination: i64,
    /// <p>The size of a file in the base of a merge or pull request.</p>
    #[doc(hidden)]
    pub base: i64,
}
impl FileSizes {
    /// <p>The size of a file in the source of a merge or pull request.</p>
    pub fn source(&self) -> i64 {
        self.source
    }
    /// <p>The size of a file in the destination of a merge or pull request.</p>
    pub fn destination(&self) -> i64 {
        self.destination
    }
    /// <p>The size of a file in the base of a merge or pull request.</p>
    pub fn base(&self) -> i64 {
        self.base
    }
}
impl FileSizes {
    /// Creates a new builder-style object to manufacture [`FileSizes`](crate::types::FileSizes).
    pub fn builder() -> crate::types::builders::FileSizesBuilder {
        crate::types::builders::FileSizesBuilder::default()
    }
}

/// A builder for [`FileSizes`](crate::types::FileSizes).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FileSizesBuilder {
    pub(crate) source: std::option::Option<i64>,
    pub(crate) destination: std::option::Option<i64>,
    pub(crate) base: std::option::Option<i64>,
}
impl FileSizesBuilder {
    /// <p>The size of a file in the source of a merge or pull request.</p>
    pub fn source(mut self, input: i64) -> Self {
        self.source = Some(input);
        self
    }
    /// <p>The size of a file in the source of a merge or pull request.</p>
    pub fn set_source(mut self, input: std::option::Option<i64>) -> Self {
        self.source = input;
        self
    }
    /// <p>The size of a file in the destination of a merge or pull request.</p>
    pub fn destination(mut self, input: i64) -> Self {
        self.destination = Some(input);
        self
    }
    /// <p>The size of a file in the destination of a merge or pull request.</p>
    pub fn set_destination(mut self, input: std::option::Option<i64>) -> Self {
        self.destination = input;
        self
    }
    /// <p>The size of a file in the base of a merge or pull request.</p>
    pub fn base(mut self, input: i64) -> Self {
        self.base = Some(input);
        self
    }
    /// <p>The size of a file in the base of a merge or pull request.</p>
    pub fn set_base(mut self, input: std::option::Option<i64>) -> Self {
        self.base = input;
        self
    }
    /// Consumes the builder and constructs a [`FileSizes`](crate::types::FileSizes).
    pub fn build(self) -> crate::types::FileSizes {
        crate::types::FileSizes {
            source: self.source.unwrap_or_default(),
            destination: self.destination.unwrap_or_default(),
            base: self.base.unwrap_or_default(),
        }
    }
}
