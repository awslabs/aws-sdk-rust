// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_post_comment_for_pull_request_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::post_comment_for_pull_request::PostCommentForPullRequestInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.pull_request_id {
        object.key("pullRequestId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.repository_name {
        object.key("repositoryName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.before_commit_id {
        object.key("beforeCommitId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.after_commit_id {
        object.key("afterCommitId").string(var_4.as_str());
    }
    if let Some(var_5) = &input.location {
        #[allow(unused_mut)]
        let mut object_6 = object.key("location").start_object();
        crate::protocol_serde::shape_location::ser_location(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.content {
        object.key("content").string(var_7.as_str());
    }
    if let Some(var_8) = &input.client_request_token {
        object.key("clientRequestToken").string(var_8.as_str());
    }
    Ok(())
}
