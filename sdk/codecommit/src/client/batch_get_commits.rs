// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchGetCommits`](crate::client::fluent_builders::BatchGetCommits) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`commit_ids(Vec<String>)`](crate::client::fluent_builders::BatchGetCommits::commit_ids) / [`set_commit_ids(Option<Vec<String>>)`](crate::client::fluent_builders::BatchGetCommits::set_commit_ids): <p>The full commit IDs of the commits to get information about.</p> <note>   <p>You must supply the full SHA IDs of each commit. You cannot use shortened SHA IDs.</p>  </note>
    ///   - [`repository_name(impl Into<String>)`](crate::client::fluent_builders::BatchGetCommits::repository_name) / [`set_repository_name(Option<String>)`](crate::client::fluent_builders::BatchGetCommits::set_repository_name): <p>The name of the repository that contains the commits.</p>
    /// - On success, responds with [`BatchGetCommitsOutput`](crate::output::BatchGetCommitsOutput) with field(s):
    ///   - [`commits(Option<Vec<Commit>>)`](crate::output::BatchGetCommitsOutput::commits): <p>An array of commit data type objects, each of which contains information about a specified commit.</p>
    ///   - [`errors(Option<Vec<BatchGetCommitsError>>)`](crate::output::BatchGetCommitsOutput::errors): <p>Returns any commit IDs for which information could not be found. For example, if one of the commit IDs was a shortened SHA ID or that commit was not found in the specified repository, the ID returns an error object with more information.</p>
    /// - On failure, responds with [`SdkError<BatchGetCommitsError>`](crate::error::BatchGetCommitsError)
    pub fn batch_get_commits(&self) -> crate::client::fluent_builders::BatchGetCommits {
        crate::client::fluent_builders::BatchGetCommits::new(self.handle.clone())
    }
}
