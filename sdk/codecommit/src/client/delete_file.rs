// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteFile`](crate::operation::delete_file::builders::DeleteFileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`repository_name(impl Into<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::repository_name) / [`set_repository_name(Option<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::set_repository_name): <p>The name of the repository that contains the file to delete.</p>
    ///   - [`branch_name(impl Into<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::branch_name) / [`set_branch_name(Option<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::set_branch_name): <p>The name of the branch where the commit that deletes the file is made.</p>
    ///   - [`file_path(impl Into<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::file_path) / [`set_file_path(Option<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::set_file_path): <p>The fully qualified path to the file that to be deleted, including the full name and extension of that file. For example, /examples/file.md is a fully qualified path to a file named file.md in a folder named examples.</p>
    ///   - [`parent_commit_id(impl Into<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::parent_commit_id) / [`set_parent_commit_id(Option<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::set_parent_commit_id): <p>The ID of the commit that is the tip of the branch where you want to create the commit that deletes the file. This must be the HEAD commit for the branch. The commit that deletes the file is created from this commit ID.</p>
    ///   - [`keep_empty_folders(bool)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::keep_empty_folders) / [`set_keep_empty_folders(bool)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::set_keep_empty_folders): <p>If a file is the only object in the folder or directory, specifies whether to delete the folder or directory that contains the file. By default, empty folders are deleted. This includes empty folders that are part of the directory structure. For example, if the path to a file is dir1/dir2/dir3/dir4, and dir2 and dir3 are empty, deleting the last file in dir4 also deletes the empty folders dir4, dir3, and dir2.</p>
    ///   - [`commit_message(impl Into<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::commit_message) / [`set_commit_message(Option<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::set_commit_message): <p>The commit message you want to include as part of deleting the file. Commit messages are limited to 256 KB. If no message is specified, a default message is used.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::set_name): <p>The name of the author of the commit that deletes the file. If no name is specified, the user's ARN is used as the author name and committer name.</p>
    ///   - [`email(impl Into<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::email) / [`set_email(Option<String>)`](crate::operation::delete_file::builders::DeleteFileFluentBuilder::set_email): <p>The email address for the commit that deletes the file. If no email address is specified, the email address is left blank.</p>
    /// - On success, responds with [`DeleteFileOutput`](crate::operation::delete_file::DeleteFileOutput) with field(s):
    ///   - [`commit_id(Option<String>)`](crate::operation::delete_file::DeleteFileOutput::commit_id): <p>The full commit ID of the commit that contains the change that deletes the file.</p>
    ///   - [`blob_id(Option<String>)`](crate::operation::delete_file::DeleteFileOutput::blob_id): <p>The blob ID removed from the tree as part of deleting the file.</p>
    ///   - [`tree_id(Option<String>)`](crate::operation::delete_file::DeleteFileOutput::tree_id): <p>The full SHA-1 pointer of the tree information for the commit that contains the delete file change.</p>
    ///   - [`file_path(Option<String>)`](crate::operation::delete_file::DeleteFileOutput::file_path): <p>The fully qualified path to the file to be deleted, including the full name and extension of that file.</p>
    /// - On failure, responds with [`SdkError<DeleteFileError>`](crate::operation::delete_file::DeleteFileError)
    pub fn delete_file(&self) -> crate::operation::delete_file::builders::DeleteFileFluentBuilder {
        crate::operation::delete_file::builders::DeleteFileFluentBuilder::new(self.handle.clone())
    }
}
