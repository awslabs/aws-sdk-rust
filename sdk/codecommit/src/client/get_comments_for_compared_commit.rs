// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCommentsForComparedCommit`](crate::client::fluent_builders::GetCommentsForComparedCommit) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetCommentsForComparedCommit::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`repository_name(impl Into<String>)`](crate::client::fluent_builders::GetCommentsForComparedCommit::repository_name) / [`set_repository_name(Option<String>)`](crate::client::fluent_builders::GetCommentsForComparedCommit::set_repository_name): <p>The name of the repository where you want to compare commits.</p>
    ///   - [`before_commit_id(impl Into<String>)`](crate::client::fluent_builders::GetCommentsForComparedCommit::before_commit_id) / [`set_before_commit_id(Option<String>)`](crate::client::fluent_builders::GetCommentsForComparedCommit::set_before_commit_id): <p>To establish the directionality of the comparison, the full commit ID of the before commit.</p>
    ///   - [`after_commit_id(impl Into<String>)`](crate::client::fluent_builders::GetCommentsForComparedCommit::after_commit_id) / [`set_after_commit_id(Option<String>)`](crate::client::fluent_builders::GetCommentsForComparedCommit::set_after_commit_id): <p>To establish the directionality of the comparison, the full commit ID of the after commit.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetCommentsForComparedCommit::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetCommentsForComparedCommit::set_next_token): <p>An enumeration token that when provided in a request, returns the next batch of the results. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetCommentsForComparedCommit::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetCommentsForComparedCommit::set_max_results): <p>A non-zero, non-negative integer used to limit the number of returned results. The default is 100 comments, but you can configure up to 500.</p>
    /// - On success, responds with [`GetCommentsForComparedCommitOutput`](crate::output::GetCommentsForComparedCommitOutput) with field(s):
    ///   - [`comments_for_compared_commit_data(Option<Vec<CommentsForComparedCommit>>)`](crate::output::GetCommentsForComparedCommitOutput::comments_for_compared_commit_data): <p>A list of comment objects on the compared commit.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetCommentsForComparedCommitOutput::next_token): <p>An enumeration token that can be used in a request to return the next batch of the results.</p>
    /// - On failure, responds with [`SdkError<GetCommentsForComparedCommitError>`](crate::error::GetCommentsForComparedCommitError)
    pub fn get_comments_for_compared_commit(
        &self,
    ) -> crate::client::fluent_builders::GetCommentsForComparedCommit {
        crate::client::fluent_builders::GetCommentsForComparedCommit::new(self.handle.clone())
    }
}
