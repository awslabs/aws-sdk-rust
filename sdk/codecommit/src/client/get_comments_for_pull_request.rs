// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCommentsForPullRequest`](crate::client::fluent_builders::GetCommentsForPullRequest) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetCommentsForPullRequest::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`pull_request_id(impl Into<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::pull_request_id) / [`set_pull_request_id(Option<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::set_pull_request_id): <p>The system-generated ID of the pull request. To get this ID, use <code>ListPullRequests</code>.</p>
    ///   - [`repository_name(impl Into<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::repository_name) / [`set_repository_name(Option<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::set_repository_name): <p>The name of the repository that contains the pull request.</p>
    ///   - [`before_commit_id(impl Into<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::before_commit_id) / [`set_before_commit_id(Option<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::set_before_commit_id): <p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>
    ///   - [`after_commit_id(impl Into<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::after_commit_id) / [`set_after_commit_id(Option<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::set_after_commit_id): <p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetCommentsForPullRequest::set_next_token): <p>An enumeration token that, when provided in a request, returns the next batch of the results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetCommentsForPullRequest::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetCommentsForPullRequest::set_max_results): <p>A non-zero, non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p>
    /// - On success, responds with [`GetCommentsForPullRequestOutput`](crate::output::GetCommentsForPullRequestOutput) with field(s):
    ///   - [`comments_for_pull_request_data(Option<Vec<CommentsForPullRequest>>)`](crate::output::GetCommentsForPullRequestOutput::comments_for_pull_request_data): <p>An array of comment objects on the pull request.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetCommentsForPullRequestOutput::next_token): <p>An enumeration token that can be used in a request to return the next batch of the results.</p>
    /// - On failure, responds with [`SdkError<GetCommentsForPullRequestError>`](crate::error::GetCommentsForPullRequestError)
    pub fn get_comments_for_pull_request(
        &self,
    ) -> crate::client::fluent_builders::GetCommentsForPullRequest {
        crate::client::fluent_builders::GetCommentsForPullRequest::new(self.handle.clone())
    }
}
