// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCommentsForPullRequest`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`pull_request_id(impl Into<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::pull_request_id) / [`set_pull_request_id(Option<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::set_pull_request_id):<br>required: **true**<br><p>The system-generated ID of the pull request. To get this ID, use <code>ListPullRequests</code>.</p><br>
    ///   - [`repository_name(impl Into<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::repository_name) / [`set_repository_name(Option<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::set_repository_name):<br>required: **false**<br><p>The name of the repository that contains the pull request. Requirement is conditional: <code>repositoryName</code> must be specified when <code>beforeCommitId</code> and <code>afterCommitId</code> are included.</p><br>
    ///   - [`before_commit_id(impl Into<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::before_commit_id) / [`set_before_commit_id(Option<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::set_before_commit_id):<br>required: **false**<br><p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created. Requirement is conditional: <code>beforeCommitId</code> must be specified when <code>repositoryName</code> is included.</p><br>
    ///   - [`after_commit_id(impl Into<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::after_commit_id) / [`set_after_commit_id(Option<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::set_after_commit_id):<br>required: **false**<br><p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made. Requirement is conditional: <code>afterCommitId</code> must be specified when <code>repositoryName</code> is included.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::set_next_token):<br>required: **false**<br><p>An enumeration token that, when provided in a request, returns the next batch of the results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::set_max_results):<br>required: **false**<br><p>A non-zero, non-negative integer used to limit the number of returned results. The default is 100 comments. You can return up to 500 comments with a single request.</p><br>
    /// - On success, responds with [`GetCommentsForPullRequestOutput`](crate::operation::get_comments_for_pull_request::GetCommentsForPullRequestOutput) with field(s):
    ///   - [`comments_for_pull_request_data(Option<Vec::<CommentsForPullRequest>>)`](crate::operation::get_comments_for_pull_request::GetCommentsForPullRequestOutput::comments_for_pull_request_data): <p>An array of comment objects on the pull request.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_comments_for_pull_request::GetCommentsForPullRequestOutput::next_token): <p>An enumeration token that can be used in a request to return the next batch of the results.</p>
    /// - On failure, responds with [`SdkError<GetCommentsForPullRequestError>`](crate::operation::get_comments_for_pull_request::GetCommentsForPullRequestError)
    pub fn get_comments_for_pull_request(&self) -> crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder {
        crate::operation::get_comments_for_pull_request::builders::GetCommentsForPullRequestFluentBuilder::new(self.handle.clone())
    }
}
