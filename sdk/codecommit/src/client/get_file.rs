// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetFile`](crate::client::fluent_builders::GetFile) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`repository_name(impl Into<String>)`](crate::client::fluent_builders::GetFile::repository_name) / [`set_repository_name(Option<String>)`](crate::client::fluent_builders::GetFile::set_repository_name): <p>The name of the repository that contains the file.</p>
    ///   - [`commit_specifier(impl Into<String>)`](crate::client::fluent_builders::GetFile::commit_specifier) / [`set_commit_specifier(Option<String>)`](crate::client::fluent_builders::GetFile::set_commit_specifier): <p>The fully quaified reference that identifies the commit that contains the file. For example, you can specify a full commit ID, a tag, a branch name, or a reference such as refs/heads/master. If none is provided, the head commit is used.</p>
    ///   - [`file_path(impl Into<String>)`](crate::client::fluent_builders::GetFile::file_path) / [`set_file_path(Option<String>)`](crate::client::fluent_builders::GetFile::set_file_path): <p>The fully qualified path to the file, including the full name and extension of the file. For example, /examples/file.md is the fully qualified path to a file named file.md in a folder named examples.</p>
    /// - On success, responds with [`GetFileOutput`](crate::output::GetFileOutput) with field(s):
    ///   - [`commit_id(Option<String>)`](crate::output::GetFileOutput::commit_id): <p>The full commit ID of the commit that contains the content returned by GetFile.</p>
    ///   - [`blob_id(Option<String>)`](crate::output::GetFileOutput::blob_id): <p>The blob ID of the object that represents the file content.</p>
    ///   - [`file_path(Option<String>)`](crate::output::GetFileOutput::file_path): <p>The fully qualified path to the specified file. Returns the name and extension of the file.</p>
    ///   - [`file_mode(Option<FileModeTypeEnum>)`](crate::output::GetFileOutput::file_mode): <p>The extrapolated file mode permissions of the blob. Valid values include strings such as EXECUTABLE and not numeric values.</p> <note>   <p>The file mode permissions returned by this API are not the standard file mode permission values, such as 100644, but rather extrapolated values. See the supported return values.</p>  </note>
    ///   - [`file_size(i64)`](crate::output::GetFileOutput::file_size): <p>The size of the contents of the file, in bytes.</p>
    ///   - [`file_content(Option<Blob>)`](crate::output::GetFileOutput::file_content): <p>The base-64 encoded binary data object that represents the content of the file.</p>
    /// - On failure, responds with [`SdkError<GetFileError>`](crate::error::GetFileError)
    pub fn get_file(&self) -> crate::client::fluent_builders::GetFile {
        crate::client::fluent_builders::GetFile::new(self.handle.clone())
    }
}
