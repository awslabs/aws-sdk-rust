// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRepositoryTriggers`](crate::client::fluent_builders::GetRepositoryTriggers) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`repository_name(impl Into<String>)`](crate::client::fluent_builders::GetRepositoryTriggers::repository_name) / [`set_repository_name(Option<String>)`](crate::client::fluent_builders::GetRepositoryTriggers::set_repository_name): <p>The name of the repository for which the trigger is configured.</p>
    /// - On success, responds with [`GetRepositoryTriggersOutput`](crate::output::GetRepositoryTriggersOutput) with field(s):
    ///   - [`configuration_id(Option<String>)`](crate::output::GetRepositoryTriggersOutput::configuration_id): <p>The system-generated unique ID for the trigger.</p>
    ///   - [`triggers(Option<Vec<RepositoryTrigger>>)`](crate::output::GetRepositoryTriggersOutput::triggers): <p>The JSON block of configuration information for each trigger.</p>
    /// - On failure, responds with [`SdkError<GetRepositoryTriggersError>`](crate::error::GetRepositoryTriggersError)
    pub fn get_repository_triggers(&self) -> crate::client::fluent_builders::GetRepositoryTriggers {
        crate::client::fluent_builders::GetRepositoryTriggers::new(self.handle.clone())
    }
}
