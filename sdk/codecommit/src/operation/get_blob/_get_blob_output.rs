// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a get blob operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetBlobOutput {
    /// <p>The content of the blob, usually a file.</p>
    pub content: ::aws_smithy_types::Blob,
    _request_id: Option<String>,
}
impl GetBlobOutput {
    /// <p>The content of the blob, usually a file.</p>
    pub fn content(&self) -> &::aws_smithy_types::Blob {
        &self.content
    }
}
impl ::aws_http::request_id::RequestId for GetBlobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetBlobOutput {
    /// Creates a new builder-style object to manufacture [`GetBlobOutput`](crate::operation::get_blob::GetBlobOutput).
    pub fn builder() -> crate::operation::get_blob::builders::GetBlobOutputBuilder {
        crate::operation::get_blob::builders::GetBlobOutputBuilder::default()
    }
}

/// A builder for [`GetBlobOutput`](crate::operation::get_blob::GetBlobOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetBlobOutputBuilder {
    pub(crate) content: ::std::option::Option<::aws_smithy_types::Blob>,
    _request_id: Option<String>,
}
impl GetBlobOutputBuilder {
    /// <p>The content of the blob, usually a file.</p>
    /// This field is required.
    pub fn content(mut self, input: ::aws_smithy_types::Blob) -> Self {
        self.content = ::std::option::Option::Some(input);
        self
    }
    /// <p>The content of the blob, usually a file.</p>
    pub fn set_content(mut self, input: ::std::option::Option<::aws_smithy_types::Blob>) -> Self {
        self.content = input;
        self
    }
    /// <p>The content of the blob, usually a file.</p>
    pub fn get_content(&self) -> &::std::option::Option<::aws_smithy_types::Blob> {
        &self.content
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetBlobOutput`](crate::operation::get_blob::GetBlobOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`content`](crate::operation::get_blob::builders::GetBlobOutputBuilder::content)
    pub fn build(self) -> ::std::result::Result<crate::operation::get_blob::GetBlobOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_blob::GetBlobOutput {
            content: self.content.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "content",
                    "content was not specified but it is required when building GetBlobOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
