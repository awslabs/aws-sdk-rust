// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetPullRequestOverrideStateOutput {
    /// <p>A Boolean value that indicates whether a pull request has had its rules set aside (TRUE) or whether all approval rules still apply (FALSE).</p>
    #[doc(hidden)]
    pub overridden: bool,
    /// <p>The Amazon Resource Name (ARN) of the user or identity that overrode the rules and their requirements for the pull request.</p>
    #[doc(hidden)]
    pub overrider: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetPullRequestOverrideStateOutput {
    /// <p>A Boolean value that indicates whether a pull request has had its rules set aside (TRUE) or whether all approval rules still apply (FALSE).</p>
    pub fn overridden(&self) -> bool {
        self.overridden
    }
    /// <p>The Amazon Resource Name (ARN) of the user or identity that overrode the rules and their requirements for the pull request.</p>
    pub fn overrider(&self) -> std::option::Option<&str> {
        self.overrider.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetPullRequestOverrideStateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetPullRequestOverrideStateOutput {
    /// Creates a new builder-style object to manufacture [`GetPullRequestOverrideStateOutput`](crate::operation::get_pull_request_override_state::GetPullRequestOverrideStateOutput).
    pub fn builder() -> crate::operation::get_pull_request_override_state::builders::GetPullRequestOverrideStateOutputBuilder{
        crate::operation::get_pull_request_override_state::builders::GetPullRequestOverrideStateOutputBuilder::default()
    }
}

/// A builder for [`GetPullRequestOverrideStateOutput`](crate::operation::get_pull_request_override_state::GetPullRequestOverrideStateOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetPullRequestOverrideStateOutputBuilder {
    pub(crate) overridden: std::option::Option<bool>,
    pub(crate) overrider: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetPullRequestOverrideStateOutputBuilder {
    /// <p>A Boolean value that indicates whether a pull request has had its rules set aside (TRUE) or whether all approval rules still apply (FALSE).</p>
    pub fn overridden(mut self, input: bool) -> Self {
        self.overridden = Some(input);
        self
    }
    /// <p>A Boolean value that indicates whether a pull request has had its rules set aside (TRUE) or whether all approval rules still apply (FALSE).</p>
    pub fn set_overridden(mut self, input: std::option::Option<bool>) -> Self {
        self.overridden = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the user or identity that overrode the rules and their requirements for the pull request.</p>
    pub fn overrider(mut self, input: impl Into<std::string::String>) -> Self {
        self.overrider = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the user or identity that overrode the rules and their requirements for the pull request.</p>
    pub fn set_overrider(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.overrider = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetPullRequestOverrideStateOutput`](crate::operation::get_pull_request_override_state::GetPullRequestOverrideStateOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_pull_request_override_state::GetPullRequestOverrideStateOutput {
        crate::operation::get_pull_request_override_state::GetPullRequestOverrideStateOutput {
            overridden: self.overridden.unwrap_or_default(),
            overrider: self.overrider,
            _request_id: self._request_id,
        }
    }
}
