// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteFileOutput {
    /// <p>The full commit ID of the commit that contains the change that deletes the file.</p>
    #[doc(hidden)]
    pub commit_id: std::option::Option<std::string::String>,
    /// <p>The blob ID removed from the tree as part of deleting the file.</p>
    #[doc(hidden)]
    pub blob_id: std::option::Option<std::string::String>,
    /// <p>The full SHA-1 pointer of the tree information for the commit that contains the delete file change.</p>
    #[doc(hidden)]
    pub tree_id: std::option::Option<std::string::String>,
    /// <p>The fully qualified path to the file to be deleted, including the full name and extension of that file.</p>
    #[doc(hidden)]
    pub file_path: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl DeleteFileOutput {
    /// <p>The full commit ID of the commit that contains the change that deletes the file.</p>
    pub fn commit_id(&self) -> std::option::Option<&str> {
        self.commit_id.as_deref()
    }
    /// <p>The blob ID removed from the tree as part of deleting the file.</p>
    pub fn blob_id(&self) -> std::option::Option<&str> {
        self.blob_id.as_deref()
    }
    /// <p>The full SHA-1 pointer of the tree information for the commit that contains the delete file change.</p>
    pub fn tree_id(&self) -> std::option::Option<&str> {
        self.tree_id.as_deref()
    }
    /// <p>The fully qualified path to the file to be deleted, including the full name and extension of that file.</p>
    pub fn file_path(&self) -> std::option::Option<&str> {
        self.file_path.as_deref()
    }
}
impl aws_http::request_id::RequestId for DeleteFileOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteFileOutput {
    /// Creates a new builder-style object to manufacture [`DeleteFileOutput`](crate::operation::delete_file::DeleteFileOutput).
    pub fn builder() -> crate::operation::delete_file::builders::DeleteFileOutputBuilder {
        crate::operation::delete_file::builders::DeleteFileOutputBuilder::default()
    }
}

/// A builder for [`DeleteFileOutput`](crate::operation::delete_file::DeleteFileOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteFileOutputBuilder {
    pub(crate) commit_id: std::option::Option<std::string::String>,
    pub(crate) blob_id: std::option::Option<std::string::String>,
    pub(crate) tree_id: std::option::Option<std::string::String>,
    pub(crate) file_path: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl DeleteFileOutputBuilder {
    /// <p>The full commit ID of the commit that contains the change that deletes the file.</p>
    pub fn commit_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.commit_id = Some(input.into());
        self
    }
    /// <p>The full commit ID of the commit that contains the change that deletes the file.</p>
    pub fn set_commit_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.commit_id = input;
        self
    }
    /// <p>The blob ID removed from the tree as part of deleting the file.</p>
    pub fn blob_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.blob_id = Some(input.into());
        self
    }
    /// <p>The blob ID removed from the tree as part of deleting the file.</p>
    pub fn set_blob_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.blob_id = input;
        self
    }
    /// <p>The full SHA-1 pointer of the tree information for the commit that contains the delete file change.</p>
    pub fn tree_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.tree_id = Some(input.into());
        self
    }
    /// <p>The full SHA-1 pointer of the tree information for the commit that contains the delete file change.</p>
    pub fn set_tree_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.tree_id = input;
        self
    }
    /// <p>The fully qualified path to the file to be deleted, including the full name and extension of that file.</p>
    pub fn file_path(mut self, input: impl Into<std::string::String>) -> Self {
        self.file_path = Some(input.into());
        self
    }
    /// <p>The fully qualified path to the file to be deleted, including the full name and extension of that file.</p>
    pub fn set_file_path(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.file_path = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteFileOutput`](crate::operation::delete_file::DeleteFileOutput).
    pub fn build(self) -> crate::operation::delete_file::DeleteFileOutput {
        crate::operation::delete_file::DeleteFileOutput {
            commit_id: self.commit_id,
            blob_id: self.blob_id,
            tree_id: self.tree_id,
            file_path: self.file_path,
            _request_id: self._request_id,
        }
    }
}
