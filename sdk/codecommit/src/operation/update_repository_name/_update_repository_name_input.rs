// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input of an update repository description operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateRepositoryNameInput {
    /// <p>The current name of the repository.</p>
    pub old_name: ::std::option::Option<::std::string::String>,
    /// <p>The new name for the repository.</p>
    pub new_name: ::std::option::Option<::std::string::String>,
}
impl UpdateRepositoryNameInput {
    /// <p>The current name of the repository.</p>
    pub fn old_name(&self) -> ::std::option::Option<&str> {
        self.old_name.as_deref()
    }
    /// <p>The new name for the repository.</p>
    pub fn new_name(&self) -> ::std::option::Option<&str> {
        self.new_name.as_deref()
    }
}
impl UpdateRepositoryNameInput {
    /// Creates a new builder-style object to manufacture [`UpdateRepositoryNameInput`](crate::operation::update_repository_name::UpdateRepositoryNameInput).
    pub fn builder() -> crate::operation::update_repository_name::builders::UpdateRepositoryNameInputBuilder {
        crate::operation::update_repository_name::builders::UpdateRepositoryNameInputBuilder::default()
    }
}

/// A builder for [`UpdateRepositoryNameInput`](crate::operation::update_repository_name::UpdateRepositoryNameInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateRepositoryNameInputBuilder {
    pub(crate) old_name: ::std::option::Option<::std::string::String>,
    pub(crate) new_name: ::std::option::Option<::std::string::String>,
}
impl UpdateRepositoryNameInputBuilder {
    /// <p>The current name of the repository.</p>
    /// This field is required.
    pub fn old_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.old_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The current name of the repository.</p>
    pub fn set_old_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.old_name = input;
        self
    }
    /// <p>The current name of the repository.</p>
    pub fn get_old_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.old_name
    }
    /// <p>The new name for the repository.</p>
    /// This field is required.
    pub fn new_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.new_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The new name for the repository.</p>
    pub fn set_new_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.new_name = input;
        self
    }
    /// <p>The new name for the repository.</p>
    pub fn get_new_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.new_name
    }
    /// Consumes the builder and constructs a [`UpdateRepositoryNameInput`](crate::operation::update_repository_name::UpdateRepositoryNameInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_repository_name::UpdateRepositoryNameInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_repository_name::UpdateRepositoryNameInput {
            old_name: self.old_name,
            new_name: self.new_name,
        })
    }
}
