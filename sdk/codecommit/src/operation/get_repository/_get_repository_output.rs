// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a get repository operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetRepositoryOutput {
    /// <p>Information about the repository.</p>
    #[doc(hidden)]
    pub repository_metadata: std::option::Option<crate::types::RepositoryMetadata>,
    _request_id: Option<String>,
}
impl GetRepositoryOutput {
    /// <p>Information about the repository.</p>
    pub fn repository_metadata(&self) -> std::option::Option<&crate::types::RepositoryMetadata> {
        self.repository_metadata.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetRepositoryOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetRepositoryOutput {
    /// Creates a new builder-style object to manufacture [`GetRepositoryOutput`](crate::operation::get_repository::GetRepositoryOutput).
    pub fn builder() -> crate::operation::get_repository::builders::GetRepositoryOutputBuilder {
        crate::operation::get_repository::builders::GetRepositoryOutputBuilder::default()
    }
}

/// A builder for [`GetRepositoryOutput`](crate::operation::get_repository::GetRepositoryOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetRepositoryOutputBuilder {
    pub(crate) repository_metadata: std::option::Option<crate::types::RepositoryMetadata>,
    _request_id: Option<String>,
}
impl GetRepositoryOutputBuilder {
    /// <p>Information about the repository.</p>
    pub fn repository_metadata(mut self, input: crate::types::RepositoryMetadata) -> Self {
        self.repository_metadata = Some(input);
        self
    }
    /// <p>Information about the repository.</p>
    pub fn set_repository_metadata(
        mut self,
        input: std::option::Option<crate::types::RepositoryMetadata>,
    ) -> Self {
        self.repository_metadata = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetRepositoryOutput`](crate::operation::get_repository::GetRepositoryOutput).
    pub fn build(self) -> crate::operation::get_repository::GetRepositoryOutput {
        crate::operation::get_repository::GetRepositoryOutput {
            repository_metadata: self.repository_metadata,
            _request_id: self._request_id,
        }
    }
}
