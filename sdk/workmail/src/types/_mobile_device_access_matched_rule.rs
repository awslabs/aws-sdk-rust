// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The rule that a simulated user matches.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MobileDeviceAccessMatchedRule {
    /// <p>Identifier of the rule that a simulated user matches.</p>
    #[doc(hidden)]
    pub mobile_device_access_rule_id: std::option::Option<std::string::String>,
    /// <p>Name of a rule that a simulated user matches.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl MobileDeviceAccessMatchedRule {
    /// <p>Identifier of the rule that a simulated user matches.</p>
    pub fn mobile_device_access_rule_id(&self) -> std::option::Option<&str> {
        self.mobile_device_access_rule_id.as_deref()
    }
    /// <p>Name of a rule that a simulated user matches.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl MobileDeviceAccessMatchedRule {
    /// Creates a new builder-style object to manufacture [`MobileDeviceAccessMatchedRule`](crate::types::MobileDeviceAccessMatchedRule).
    pub fn builder() -> crate::types::builders::MobileDeviceAccessMatchedRuleBuilder {
        crate::types::builders::MobileDeviceAccessMatchedRuleBuilder::default()
    }
}

/// A builder for [`MobileDeviceAccessMatchedRule`](crate::types::MobileDeviceAccessMatchedRule).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MobileDeviceAccessMatchedRuleBuilder {
    pub(crate) mobile_device_access_rule_id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
}
impl MobileDeviceAccessMatchedRuleBuilder {
    /// <p>Identifier of the rule that a simulated user matches.</p>
    pub fn mobile_device_access_rule_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.mobile_device_access_rule_id = Some(input.into());
        self
    }
    /// <p>Identifier of the rule that a simulated user matches.</p>
    pub fn set_mobile_device_access_rule_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.mobile_device_access_rule_id = input;
        self
    }
    /// <p>Name of a rule that a simulated user matches.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>Name of a rule that a simulated user matches.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`MobileDeviceAccessMatchedRule`](crate::types::MobileDeviceAccessMatchedRule).
    pub fn build(self) -> crate::types::MobileDeviceAccessMatchedRule {
        crate::types::MobileDeviceAccessMatchedRule {
            mobile_device_access_rule_id: self.mobile_device_access_rule_id,
            name: self.name,
        }
    }
}
