// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an EWS based availability provider when returned from the service. It does not contain the password of the endpoint.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RedactedEwsAvailabilityProvider {
    /// <p>The endpoint of the remote EWS server.</p>
    #[doc(hidden)]
    pub ews_endpoint: std::option::Option<std::string::String>,
    /// <p>The username used to authenticate the remote EWS server.</p>
    #[doc(hidden)]
    pub ews_username: std::option::Option<std::string::String>,
}
impl RedactedEwsAvailabilityProvider {
    /// <p>The endpoint of the remote EWS server.</p>
    pub fn ews_endpoint(&self) -> std::option::Option<&str> {
        self.ews_endpoint.as_deref()
    }
    /// <p>The username used to authenticate the remote EWS server.</p>
    pub fn ews_username(&self) -> std::option::Option<&str> {
        self.ews_username.as_deref()
    }
}
impl RedactedEwsAvailabilityProvider {
    /// Creates a new builder-style object to manufacture [`RedactedEwsAvailabilityProvider`](crate::types::RedactedEwsAvailabilityProvider).
    pub fn builder() -> crate::types::builders::RedactedEwsAvailabilityProviderBuilder {
        crate::types::builders::RedactedEwsAvailabilityProviderBuilder::default()
    }
}

/// A builder for [`RedactedEwsAvailabilityProvider`](crate::types::RedactedEwsAvailabilityProvider).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RedactedEwsAvailabilityProviderBuilder {
    pub(crate) ews_endpoint: std::option::Option<std::string::String>,
    pub(crate) ews_username: std::option::Option<std::string::String>,
}
impl RedactedEwsAvailabilityProviderBuilder {
    /// <p>The endpoint of the remote EWS server.</p>
    pub fn ews_endpoint(mut self, input: impl Into<std::string::String>) -> Self {
        self.ews_endpoint = Some(input.into());
        self
    }
    /// <p>The endpoint of the remote EWS server.</p>
    pub fn set_ews_endpoint(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ews_endpoint = input;
        self
    }
    /// <p>The username used to authenticate the remote EWS server.</p>
    pub fn ews_username(mut self, input: impl Into<std::string::String>) -> Self {
        self.ews_username = Some(input.into());
        self
    }
    /// <p>The username used to authenticate the remote EWS server.</p>
    pub fn set_ews_username(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ews_username = input;
        self
    }
    /// Consumes the builder and constructs a [`RedactedEwsAvailabilityProvider`](crate::types::RedactedEwsAvailabilityProvider).
    pub fn build(self) -> crate::types::RedactedEwsAvailabilityProvider {
        crate::types::RedactedEwsAvailabilityProvider {
            ews_endpoint: self.ews_endpoint,
            ews_username: self.ews_username,
        }
    }
}
