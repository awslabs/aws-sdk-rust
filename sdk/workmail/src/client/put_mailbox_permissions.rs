// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutMailboxPermissions`](crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder::set_organization_id): <p>The identifier of the organization under which the user, group, or resource exists.</p>
    ///   - [`entity_id(impl Into<String>)`](crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder::entity_id) / [`set_entity_id(Option<String>)`](crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder::set_entity_id): <p>The identifier of the user, group, or resource for which to update mailbox permissions.</p>
    ///   - [`grantee_id(impl Into<String>)`](crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder::grantee_id) / [`set_grantee_id(Option<String>)`](crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder::set_grantee_id): <p>The identifier of the user, group, or resource to which to grant the permissions.</p>
    ///   - [`permission_values(Vec<PermissionType>)`](crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder::permission_values) / [`set_permission_values(Option<Vec<PermissionType>>)`](crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder::set_permission_values): <p>The permissions granted to the grantee. SEND_AS allows the grantee to send email as the owner of the mailbox (the grantee is not mentioned on these emails). SEND_ON_BEHALF allows the grantee to send email on behalf of the owner of the mailbox (the grantee is not mentioned as the physical sender of these emails). FULL_ACCESS allows the grantee full access to the mailbox, irrespective of other folder-level permissions set on the mailbox.</p>
    /// - On success, responds with [`PutMailboxPermissionsOutput`](crate::operation::put_mailbox_permissions::PutMailboxPermissionsOutput)
    /// - On failure, responds with [`SdkError<PutMailboxPermissionsError>`](crate::operation::put_mailbox_permissions::PutMailboxPermissionsError)
    pub fn put_mailbox_permissions(
        &self,
    ) -> crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder
    {
        crate::operation::put_mailbox_permissions::builders::PutMailboxPermissionsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
