// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAliases`](crate::client::fluent_builders::ListAliases) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAliases::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::ListAliases::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::ListAliases::set_organization_id): <p>The identifier for the organization under which the entity exists.</p>
    ///   - [`entity_id(impl Into<String>)`](crate::client::fluent_builders::ListAliases::entity_id) / [`set_entity_id(Option<String>)`](crate::client::fluent_builders::ListAliases::set_entity_id): <p>The identifier for the entity for which to list the aliases.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAliases::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAliases::set_next_token): <p>The token to use to retrieve the next page of results. The first call does not contain any tokens.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAliases::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAliases::set_max_results): <p>The maximum number of results to return in a single call.</p>
    /// - On success, responds with [`ListAliasesOutput`](crate::output::ListAliasesOutput) with field(s):
    ///   - [`aliases(Option<Vec<String>>)`](crate::output::ListAliasesOutput::aliases): <p>The entity's paginated aliases.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAliasesOutput::next_token): <p>The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListAliasesError>`](crate::error::ListAliasesError)
    pub fn list_aliases(&self) -> crate::client::fluent_builders::ListAliases {
        crate::client::fluent_builders::ListAliases::new(self.handle.clone())
    }
}
