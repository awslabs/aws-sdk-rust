// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeMailboxExportJob`](crate::operation::describe_mailbox_export_job::builders::DescribeMailboxExportJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_id(impl Into<String>)`](crate::operation::describe_mailbox_export_job::builders::DescribeMailboxExportJobFluentBuilder::job_id) / [`set_job_id(Option<String>)`](crate::operation::describe_mailbox_export_job::builders::DescribeMailboxExportJobFluentBuilder::set_job_id):<br>required: **true**<br><p>The mailbox export job ID.</p><br>
    ///   - [`organization_id(impl Into<String>)`](crate::operation::describe_mailbox_export_job::builders::DescribeMailboxExportJobFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::describe_mailbox_export_job::builders::DescribeMailboxExportJobFluentBuilder::set_organization_id):<br>required: **true**<br><p>The organization ID.</p><br>
    /// - On success, responds with [`DescribeMailboxExportJobOutput`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput) with field(s):
    ///   - [`entity_id(Option<String>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::entity_id): <p>The identifier of the user or resource associated with the mailbox.</p>
    ///   - [`description(Option<String>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::description): <p>The mailbox export job description.</p>
    ///   - [`role_arn(Option<String>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::role_arn): <p>The ARN of the AWS Identity and Access Management (IAM) role that grants write permission to the Amazon Simple Storage Service (Amazon S3) bucket.</p>
    ///   - [`kms_key_arn(Option<String>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::kms_key_arn): <p>The Amazon Resource Name (ARN) of the symmetric AWS Key Management Service (AWS KMS) key that encrypts the exported mailbox content.</p>
    ///   - [`s3_bucket_name(Option<String>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::s3_bucket_name): <p>The name of the S3 bucket.</p>
    ///   - [`s3_prefix(Option<String>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::s3_prefix): <p>The S3 bucket prefix.</p>
    ///   - [`s3_path(Option<String>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::s3_path): <p>The path to the S3 bucket and file that the mailbox export job is exporting to.</p>
    ///   - [`estimated_progress(i32)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::estimated_progress): <p>The estimated progress of the mailbox export job, in percentage points.</p>
    ///   - [`state(Option<MailboxExportJobState>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::state): <p>The state of the mailbox export job.</p>
    ///   - [`error_info(Option<String>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::error_info): <p>Error information for failed mailbox export jobs.</p>
    ///   - [`start_time(Option<DateTime>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::start_time): <p>The mailbox export job start timestamp.</p>
    ///   - [`end_time(Option<DateTime>)`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobOutput::end_time): <p>The mailbox export job end timestamp.</p>
    /// - On failure, responds with [`SdkError<DescribeMailboxExportJobError>`](crate::operation::describe_mailbox_export_job::DescribeMailboxExportJobError)
    pub fn describe_mailbox_export_job(&self) -> crate::operation::describe_mailbox_export_job::builders::DescribeMailboxExportJobFluentBuilder {
        crate::operation::describe_mailbox_export_job::builders::DescribeMailboxExportJobFluentBuilder::new(self.handle.clone())
    }
}
