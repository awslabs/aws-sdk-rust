// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateImpersonationRole`](crate::client::fluent_builders::CreateImpersonationRole) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateImpersonationRole::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateImpersonationRole::set_client_token): <p>The idempotency token for the client request.</p>
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::CreateImpersonationRole::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::CreateImpersonationRole::set_organization_id): <p>The WorkMail organization to create the new impersonation role within.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateImpersonationRole::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateImpersonationRole::set_name): <p>The name of the new impersonation role.</p>
    ///   - [`r#type(ImpersonationRoleType)`](crate::client::fluent_builders::CreateImpersonationRole::type) / [`set_type(Option<ImpersonationRoleType>)`](crate::client::fluent_builders::CreateImpersonationRole::set_type): <p>The impersonation role's type. The available impersonation role types are <code>READ_ONLY</code> or <code>FULL_ACCESS</code>.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateImpersonationRole::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateImpersonationRole::set_description): <p>The description of the new impersonation role.</p>
    ///   - [`rules(Vec<ImpersonationRule>)`](crate::client::fluent_builders::CreateImpersonationRole::rules) / [`set_rules(Option<Vec<ImpersonationRule>>)`](crate::client::fluent_builders::CreateImpersonationRole::set_rules): <p>The list of rules for the impersonation role.</p>
    /// - On success, responds with [`CreateImpersonationRoleOutput`](crate::output::CreateImpersonationRoleOutput) with field(s):
    ///   - [`impersonation_role_id(Option<String>)`](crate::output::CreateImpersonationRoleOutput::impersonation_role_id): <p>The new impersonation role ID.</p>
    /// - On failure, responds with [`SdkError<CreateImpersonationRoleError>`](crate::error::CreateImpersonationRoleError)
    pub fn create_impersonation_role(
        &self,
    ) -> crate::client::fluent_builders::CreateImpersonationRole {
        crate::client::fluent_builders::CreateImpersonationRole::new(self.handle.clone())
    }
}
