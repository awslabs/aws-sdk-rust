// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetImpersonationRoleEffect`](crate::operation::get_impersonation_role_effect::builders::GetImpersonationRoleEffectFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::operation::get_impersonation_role_effect::builders::GetImpersonationRoleEffectFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::get_impersonation_role_effect::builders::GetImpersonationRoleEffectFluentBuilder::set_organization_id):<br>required: **true**<br><p>The WorkMail organization where the impersonation role is defined.</p><br>
    ///   - [`impersonation_role_id(impl Into<String>)`](crate::operation::get_impersonation_role_effect::builders::GetImpersonationRoleEffectFluentBuilder::impersonation_role_id) / [`set_impersonation_role_id(Option<String>)`](crate::operation::get_impersonation_role_effect::builders::GetImpersonationRoleEffectFluentBuilder::set_impersonation_role_id):<br>required: **true**<br><p>The impersonation role ID to test.</p><br>
    ///   - [`target_user(impl Into<String>)`](crate::operation::get_impersonation_role_effect::builders::GetImpersonationRoleEffectFluentBuilder::target_user) / [`set_target_user(Option<String>)`](crate::operation::get_impersonation_role_effect::builders::GetImpersonationRoleEffectFluentBuilder::set_target_user):<br>required: **true**<br><p>The WorkMail organization user chosen to test the impersonation role. The following identity formats are available:</p>  <ul>   <li> <p>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code> </p> </li>   <li> <p>Email address: <code>user@domain.tld</code> </p> </li>   <li> <p>User name: <code>user</code> </p> </li>  </ul><br>
    /// - On success, responds with [`GetImpersonationRoleEffectOutput`](crate::operation::get_impersonation_role_effect::GetImpersonationRoleEffectOutput) with field(s):
    ///   - [`r#type(Option<ImpersonationRoleType>)`](crate::operation::get_impersonation_role_effect::GetImpersonationRoleEffectOutput::type): <p>The impersonation role type.</p>
    ///   - [`effect(Option<AccessEffect>)`](crate::operation::get_impersonation_role_effect::GetImpersonationRoleEffectOutput::effect): <p> <code></code>Effect of the impersonation role on the target user based on its rules. Available effects are <code>ALLOW</code> or <code>DENY</code>.</p>
    ///   - [`matched_rules(Option<Vec::<ImpersonationMatchedRule>>)`](crate::operation::get_impersonation_role_effect::GetImpersonationRoleEffectOutput::matched_rules): <p>A list of the rules that match the input and produce the configured effect.</p>
    /// - On failure, responds with [`SdkError<GetImpersonationRoleEffectError>`](crate::operation::get_impersonation_role_effect::GetImpersonationRoleEffectError)
    pub fn get_impersonation_role_effect(
        &self,
    ) -> crate::operation::get_impersonation_role_effect::builders::GetImpersonationRoleEffectFluentBuilder {
        crate::operation::get_impersonation_role_effect::builders::GetImpersonationRoleEffectFluentBuilder::new(self.handle.clone())
    }
}
