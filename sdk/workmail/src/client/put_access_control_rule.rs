// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutAccessControlRule`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_name): <p>The rule name.</p>
    ///   - [`effect(AccessControlRuleEffect)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::effect) / [`set_effect(Option<AccessControlRuleEffect>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_effect): <p>The rule effect.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_description): <p>The rule description.</p>
    ///   - [`ip_ranges(Vec<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::ip_ranges) / [`set_ip_ranges(Option<Vec<String>>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_ip_ranges): <p>IPv4 CIDR ranges to include in the rule.</p>
    ///   - [`not_ip_ranges(Vec<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::not_ip_ranges) / [`set_not_ip_ranges(Option<Vec<String>>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_not_ip_ranges): <p>IPv4 CIDR ranges to exclude from the rule.</p>
    ///   - [`actions(Vec<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::actions) / [`set_actions(Option<Vec<String>>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_actions): <p>Access protocol actions to include in the rule. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.</p>
    ///   - [`not_actions(Vec<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::not_actions) / [`set_not_actions(Option<Vec<String>>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_not_actions): <p>Access protocol actions to exclude from the rule. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>.</p>
    ///   - [`user_ids(Vec<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::user_ids) / [`set_user_ids(Option<Vec<String>>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_user_ids): <p>User IDs to include in the rule.</p>
    ///   - [`not_user_ids(Vec<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::not_user_ids) / [`set_not_user_ids(Option<Vec<String>>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_not_user_ids): <p>User IDs to exclude from the rule.</p>
    ///   - [`organization_id(impl Into<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_organization_id): <p>The identifier of the organization.</p>
    ///   - [`impersonation_role_ids(Vec<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::impersonation_role_ids) / [`set_impersonation_role_ids(Option<Vec<String>>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_impersonation_role_ids): <p>Impersonation role IDs to include in the rule.</p>
    ///   - [`not_impersonation_role_ids(Vec<String>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::not_impersonation_role_ids) / [`set_not_impersonation_role_ids(Option<Vec<String>>)`](crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::set_not_impersonation_role_ids): <p>Impersonation role IDs to exclude from the rule.</p>
    /// - On success, responds with [`PutAccessControlRuleOutput`](crate::operation::put_access_control_rule::PutAccessControlRuleOutput)
    /// - On failure, responds with [`SdkError<PutAccessControlRuleError>`](crate::operation::put_access_control_rule::PutAccessControlRuleError)
    pub fn put_access_control_rule(
        &self,
    ) -> crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder
    {
        crate::operation::put_access_control_rule::builders::PutAccessControlRuleFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
