// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterToWorkMail`](crate::client::fluent_builders::RegisterToWorkMail) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::RegisterToWorkMail::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::RegisterToWorkMail::set_organization_id): <p>The identifier for the organization under which the user, group, or resource exists.</p>
    ///   - [`entity_id(impl Into<String>)`](crate::client::fluent_builders::RegisterToWorkMail::entity_id) / [`set_entity_id(Option<String>)`](crate::client::fluent_builders::RegisterToWorkMail::set_entity_id): <p>The identifier for the user, group, or resource to be updated.</p>
    ///   - [`email(impl Into<String>)`](crate::client::fluent_builders::RegisterToWorkMail::email) / [`set_email(Option<String>)`](crate::client::fluent_builders::RegisterToWorkMail::set_email): <p>The email for the user, group, or resource to be updated.</p>
    /// - On success, responds with [`RegisterToWorkMailOutput`](crate::output::RegisterToWorkMailOutput)
    /// - On failure, responds with [`SdkError<RegisterToWorkMailError>`](crate::error::RegisterToWorkMailError)
    pub fn register_to_work_mail(&self) -> crate::client::fluent_builders::RegisterToWorkMail {
        crate::client::fluent_builders::RegisterToWorkMail::new(self.handle.clone())
    }
}
