// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeregisterFromWorkMail`](crate::operation::deregister_from_work_mail::builders::DeregisterFromWorkMailFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::operation::deregister_from_work_mail::builders::DeregisterFromWorkMailFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::deregister_from_work_mail::builders::DeregisterFromWorkMailFluentBuilder::set_organization_id): <p>The identifier for the organization under which the WorkMail entity exists.</p>
    ///   - [`entity_id(impl Into<String>)`](crate::operation::deregister_from_work_mail::builders::DeregisterFromWorkMailFluentBuilder::entity_id) / [`set_entity_id(Option<String>)`](crate::operation::deregister_from_work_mail::builders::DeregisterFromWorkMailFluentBuilder::set_entity_id): <p>The identifier for the member (user or group) to be updated.</p>
    /// - On success, responds with [`DeregisterFromWorkMailOutput`](crate::operation::deregister_from_work_mail::DeregisterFromWorkMailOutput)
    /// - On failure, responds with [`SdkError<DeregisterFromWorkMailError>`](crate::operation::deregister_from_work_mail::DeregisterFromWorkMailError)
    pub fn deregister_from_work_mail(
        &self,
    ) -> crate::operation::deregister_from_work_mail::builders::DeregisterFromWorkMailFluentBuilder
    {
        crate::operation::deregister_from_work_mail::builders::DeregisterFromWorkMailFluentBuilder::new(self.handle.clone())
    }
}
