// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteMailboxPermissions`](crate::operation::delete_mailbox_permissions::builders::DeleteMailboxPermissionsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::operation::delete_mailbox_permissions::builders::DeleteMailboxPermissionsFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::delete_mailbox_permissions::builders::DeleteMailboxPermissionsFluentBuilder::set_organization_id): <p>The identifier of the organization under which the member (user or group) exists.</p>
    ///   - [`entity_id(impl Into<String>)`](crate::operation::delete_mailbox_permissions::builders::DeleteMailboxPermissionsFluentBuilder::entity_id) / [`set_entity_id(Option<String>)`](crate::operation::delete_mailbox_permissions::builders::DeleteMailboxPermissionsFluentBuilder::set_entity_id): <p>The identifier of the member (user or group) that owns the mailbox.</p>
    ///   - [`grantee_id(impl Into<String>)`](crate::operation::delete_mailbox_permissions::builders::DeleteMailboxPermissionsFluentBuilder::grantee_id) / [`set_grantee_id(Option<String>)`](crate::operation::delete_mailbox_permissions::builders::DeleteMailboxPermissionsFluentBuilder::set_grantee_id): <p>The identifier of the member (user or group) for which to delete granted permissions.</p>
    /// - On success, responds with [`DeleteMailboxPermissionsOutput`](crate::operation::delete_mailbox_permissions::DeleteMailboxPermissionsOutput)
    /// - On failure, responds with [`SdkError<DeleteMailboxPermissionsError>`](crate::operation::delete_mailbox_permissions::DeleteMailboxPermissionsError)
    pub fn delete_mailbox_permissions(
        &self,
    ) -> crate::operation::delete_mailbox_permissions::builders::DeleteMailboxPermissionsFluentBuilder
    {
        crate::operation::delete_mailbox_permissions::builders::DeleteMailboxPermissionsFluentBuilder::new(self.handle.clone())
    }
}
