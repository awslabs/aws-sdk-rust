// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteOrganization`](crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder::set_client_token):<br>required: **false**<br><p>The idempotency token associated with the request.</p><br>
    ///   - [`organization_id(impl Into<String>)`](crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder::set_organization_id):<br>required: **true**<br><p>The organization ID.</p><br>
    ///   - [`delete_directory(bool)`](crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder::delete_directory) / [`set_delete_directory(Option<bool>)`](crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder::set_delete_directory):<br>required: **true**<br><p>If true, deletes the AWS Directory Service directory associated with the organization.</p><br>
    ///   - [`force_delete(bool)`](crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder::force_delete) / [`set_force_delete(Option<bool>)`](crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder::set_force_delete):<br>required: **false**<br><p>Deletes a WorkMail organization even if the organization has enabled users.</p><br>
    /// - On success, responds with [`DeleteOrganizationOutput`](crate::operation::delete_organization::DeleteOrganizationOutput) with field(s):
    ///   - [`organization_id(Option<String>)`](crate::operation::delete_organization::DeleteOrganizationOutput::organization_id): <p>The organization ID.</p>
    ///   - [`state(Option<String>)`](crate::operation::delete_organization::DeleteOrganizationOutput::state): <p>The state of the organization.</p>
    /// - On failure, responds with [`SdkError<DeleteOrganizationError>`](crate::operation::delete_organization::DeleteOrganizationError)
    pub fn delete_organization(&self) -> crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder {
        crate::operation::delete_organization::builders::DeleteOrganizationFluentBuilder::new(self.handle.clone())
    }
}
