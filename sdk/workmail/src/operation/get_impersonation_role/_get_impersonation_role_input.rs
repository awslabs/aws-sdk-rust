// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetImpersonationRoleInput {
    /// <p>The WorkMail organization from which to retrieve the impersonation role.</p>
    #[doc(hidden)]
    pub organization_id: std::option::Option<std::string::String>,
    /// <p>The impersonation role ID to retrieve.</p>
    #[doc(hidden)]
    pub impersonation_role_id: std::option::Option<std::string::String>,
}
impl GetImpersonationRoleInput {
    /// <p>The WorkMail organization from which to retrieve the impersonation role.</p>
    pub fn organization_id(&self) -> std::option::Option<&str> {
        self.organization_id.as_deref()
    }
    /// <p>The impersonation role ID to retrieve.</p>
    pub fn impersonation_role_id(&self) -> std::option::Option<&str> {
        self.impersonation_role_id.as_deref()
    }
}
impl GetImpersonationRoleInput {
    /// Creates a new builder-style object to manufacture [`GetImpersonationRoleInput`](crate::operation::get_impersonation_role::GetImpersonationRoleInput).
    pub fn builder(
    ) -> crate::operation::get_impersonation_role::builders::GetImpersonationRoleInputBuilder {
        crate::operation::get_impersonation_role::builders::GetImpersonationRoleInputBuilder::default()
    }
}

/// A builder for [`GetImpersonationRoleInput`](crate::operation::get_impersonation_role::GetImpersonationRoleInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetImpersonationRoleInputBuilder {
    pub(crate) organization_id: std::option::Option<std::string::String>,
    pub(crate) impersonation_role_id: std::option::Option<std::string::String>,
}
impl GetImpersonationRoleInputBuilder {
    /// <p>The WorkMail organization from which to retrieve the impersonation role.</p>
    pub fn organization_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organization_id = Some(input.into());
        self
    }
    /// <p>The WorkMail organization from which to retrieve the impersonation role.</p>
    pub fn set_organization_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    /// <p>The impersonation role ID to retrieve.</p>
    pub fn impersonation_role_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.impersonation_role_id = Some(input.into());
        self
    }
    /// <p>The impersonation role ID to retrieve.</p>
    pub fn set_impersonation_role_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.impersonation_role_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetImpersonationRoleInput`](crate::operation::get_impersonation_role::GetImpersonationRoleInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_impersonation_role::GetImpersonationRoleInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_impersonation_role::GetImpersonationRoleInput {
                organization_id: self.organization_id,
                impersonation_role_id: self.impersonation_role_id,
            },
        )
    }
}
