// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeUserInput {
    /// <p>The identifier for the organization under which the user exists.</p>
    #[doc(hidden)]
    pub organization_id: std::option::Option<std::string::String>,
    /// <p>The identifier for the user to be described.</p>
    #[doc(hidden)]
    pub user_id: std::option::Option<std::string::String>,
}
impl DescribeUserInput {
    /// <p>The identifier for the organization under which the user exists.</p>
    pub fn organization_id(&self) -> std::option::Option<&str> {
        self.organization_id.as_deref()
    }
    /// <p>The identifier for the user to be described.</p>
    pub fn user_id(&self) -> std::option::Option<&str> {
        self.user_id.as_deref()
    }
}
impl DescribeUserInput {
    /// Creates a new builder-style object to manufacture [`DescribeUserInput`](crate::operation::describe_user::DescribeUserInput).
    pub fn builder() -> crate::operation::describe_user::builders::DescribeUserInputBuilder {
        crate::operation::describe_user::builders::DescribeUserInputBuilder::default()
    }
}

/// A builder for [`DescribeUserInput`](crate::operation::describe_user::DescribeUserInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeUserInputBuilder {
    pub(crate) organization_id: std::option::Option<std::string::String>,
    pub(crate) user_id: std::option::Option<std::string::String>,
}
impl DescribeUserInputBuilder {
    /// <p>The identifier for the organization under which the user exists.</p>
    pub fn organization_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organization_id = Some(input.into());
        self
    }
    /// <p>The identifier for the organization under which the user exists.</p>
    pub fn set_organization_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    /// <p>The identifier for the user to be described.</p>
    pub fn user_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.user_id = Some(input.into());
        self
    }
    /// <p>The identifier for the user to be described.</p>
    pub fn set_user_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.user_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeUserInput`](crate::operation::describe_user::DescribeUserInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_user::DescribeUserInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_user::DescribeUserInput {
            organization_id: self.organization_id,
            user_id: self.user_id,
        })
    }
}
