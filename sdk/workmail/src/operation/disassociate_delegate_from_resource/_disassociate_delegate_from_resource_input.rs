// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateDelegateFromResourceInput {
    /// <p>The identifier for the organization under which the resource exists.</p>
    #[doc(hidden)]
    pub organization_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the resource from which delegates' set members are removed. </p>
    #[doc(hidden)]
    pub resource_id: std::option::Option<std::string::String>,
    /// <p>The identifier for the member (user, group) to be removed from the resource's delegates.</p>
    #[doc(hidden)]
    pub entity_id: std::option::Option<std::string::String>,
}
impl DisassociateDelegateFromResourceInput {
    /// <p>The identifier for the organization under which the resource exists.</p>
    pub fn organization_id(&self) -> std::option::Option<&str> {
        self.organization_id.as_deref()
    }
    /// <p>The identifier of the resource from which delegates' set members are removed. </p>
    pub fn resource_id(&self) -> std::option::Option<&str> {
        self.resource_id.as_deref()
    }
    /// <p>The identifier for the member (user, group) to be removed from the resource's delegates.</p>
    pub fn entity_id(&self) -> std::option::Option<&str> {
        self.entity_id.as_deref()
    }
}
impl DisassociateDelegateFromResourceInput {
    /// Creates a new builder-style object to manufacture [`DisassociateDelegateFromResourceInput`](crate::operation::disassociate_delegate_from_resource::DisassociateDelegateFromResourceInput).
    pub fn builder() -> crate::operation::disassociate_delegate_from_resource::builders::DisassociateDelegateFromResourceInputBuilder{
        crate::operation::disassociate_delegate_from_resource::builders::DisassociateDelegateFromResourceInputBuilder::default()
    }
}

/// A builder for [`DisassociateDelegateFromResourceInput`](crate::operation::disassociate_delegate_from_resource::DisassociateDelegateFromResourceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisassociateDelegateFromResourceInputBuilder {
    pub(crate) organization_id: std::option::Option<std::string::String>,
    pub(crate) resource_id: std::option::Option<std::string::String>,
    pub(crate) entity_id: std::option::Option<std::string::String>,
}
impl DisassociateDelegateFromResourceInputBuilder {
    /// <p>The identifier for the organization under which the resource exists.</p>
    pub fn organization_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organization_id = Some(input.into());
        self
    }
    /// <p>The identifier for the organization under which the resource exists.</p>
    pub fn set_organization_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    /// <p>The identifier of the resource from which delegates' set members are removed. </p>
    pub fn resource_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_id = Some(input.into());
        self
    }
    /// <p>The identifier of the resource from which delegates' set members are removed. </p>
    pub fn set_resource_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// <p>The identifier for the member (user, group) to be removed from the resource's delegates.</p>
    pub fn entity_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.entity_id = Some(input.into());
        self
    }
    /// <p>The identifier for the member (user, group) to be removed from the resource's delegates.</p>
    pub fn set_entity_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.entity_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DisassociateDelegateFromResourceInput`](crate::operation::disassociate_delegate_from_resource::DisassociateDelegateFromResourceInput).
    pub fn build(self) -> Result<crate::operation::disassociate_delegate_from_resource::DisassociateDelegateFromResourceInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::disassociate_delegate_from_resource::DisassociateDelegateFromResourceInput {
                organization_id: self.organization_id
                ,
                resource_id: self.resource_id
                ,
                entity_id: self.entity_id
                ,
            }
        )
    }
}
