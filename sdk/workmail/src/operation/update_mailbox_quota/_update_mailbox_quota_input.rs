// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateMailboxQuotaInput {
    /// <p>The identifier for the organization that contains the user for whom to update the mailbox quota.</p>
    #[doc(hidden)]
    pub organization_id: std::option::Option<std::string::String>,
    /// <p>The identifer for the user for whom to update the mailbox quota.</p>
    #[doc(hidden)]
    pub user_id: std::option::Option<std::string::String>,
    /// <p>The updated mailbox quota, in MB, for the specified user.</p>
    #[doc(hidden)]
    pub mailbox_quota: std::option::Option<i32>,
}
impl UpdateMailboxQuotaInput {
    /// <p>The identifier for the organization that contains the user for whom to update the mailbox quota.</p>
    pub fn organization_id(&self) -> std::option::Option<&str> {
        self.organization_id.as_deref()
    }
    /// <p>The identifer for the user for whom to update the mailbox quota.</p>
    pub fn user_id(&self) -> std::option::Option<&str> {
        self.user_id.as_deref()
    }
    /// <p>The updated mailbox quota, in MB, for the specified user.</p>
    pub fn mailbox_quota(&self) -> std::option::Option<i32> {
        self.mailbox_quota
    }
}
impl UpdateMailboxQuotaInput {
    /// Creates a new builder-style object to manufacture [`UpdateMailboxQuotaInput`](crate::operation::update_mailbox_quota::UpdateMailboxQuotaInput).
    pub fn builder(
    ) -> crate::operation::update_mailbox_quota::builders::UpdateMailboxQuotaInputBuilder {
        crate::operation::update_mailbox_quota::builders::UpdateMailboxQuotaInputBuilder::default()
    }
}

/// A builder for [`UpdateMailboxQuotaInput`](crate::operation::update_mailbox_quota::UpdateMailboxQuotaInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateMailboxQuotaInputBuilder {
    pub(crate) organization_id: std::option::Option<std::string::String>,
    pub(crate) user_id: std::option::Option<std::string::String>,
    pub(crate) mailbox_quota: std::option::Option<i32>,
}
impl UpdateMailboxQuotaInputBuilder {
    /// <p>The identifier for the organization that contains the user for whom to update the mailbox quota.</p>
    pub fn organization_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organization_id = Some(input.into());
        self
    }
    /// <p>The identifier for the organization that contains the user for whom to update the mailbox quota.</p>
    pub fn set_organization_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    /// <p>The identifer for the user for whom to update the mailbox quota.</p>
    pub fn user_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.user_id = Some(input.into());
        self
    }
    /// <p>The identifer for the user for whom to update the mailbox quota.</p>
    pub fn set_user_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.user_id = input;
        self
    }
    /// <p>The updated mailbox quota, in MB, for the specified user.</p>
    pub fn mailbox_quota(mut self, input: i32) -> Self {
        self.mailbox_quota = Some(input);
        self
    }
    /// <p>The updated mailbox quota, in MB, for the specified user.</p>
    pub fn set_mailbox_quota(mut self, input: std::option::Option<i32>) -> Self {
        self.mailbox_quota = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateMailboxQuotaInput`](crate::operation::update_mailbox_quota::UpdateMailboxQuotaInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_mailbox_quota::UpdateMailboxQuotaInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_mailbox_quota::UpdateMailboxQuotaInput {
                organization_id: self.organization_id,
                user_id: self.user_id,
                mailbox_quota: self.mailbox_quota,
            },
        )
    }
}
