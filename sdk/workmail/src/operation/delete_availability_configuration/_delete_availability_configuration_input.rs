// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteAvailabilityConfigurationInput {
    /// <p>The WorkMail organization for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    pub organization_id: ::std::option::Option<::std::string::String>,
    /// <p>The domain for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    pub domain_name: ::std::option::Option<::std::string::String>,
}
impl DeleteAvailabilityConfigurationInput {
    /// <p>The WorkMail organization for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    pub fn organization_id(&self) -> ::std::option::Option<&str> {
        self.organization_id.as_deref()
    }
    /// <p>The domain for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    pub fn domain_name(&self) -> ::std::option::Option<&str> {
        self.domain_name.as_deref()
    }
}
impl DeleteAvailabilityConfigurationInput {
    /// Creates a new builder-style object to manufacture [`DeleteAvailabilityConfigurationInput`](crate::operation::delete_availability_configuration::DeleteAvailabilityConfigurationInput).
    pub fn builder() -> crate::operation::delete_availability_configuration::builders::DeleteAvailabilityConfigurationInputBuilder {
        crate::operation::delete_availability_configuration::builders::DeleteAvailabilityConfigurationInputBuilder::default()
    }
}

/// A builder for [`DeleteAvailabilityConfigurationInput`](crate::operation::delete_availability_configuration::DeleteAvailabilityConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteAvailabilityConfigurationInputBuilder {
    pub(crate) organization_id: ::std::option::Option<::std::string::String>,
    pub(crate) domain_name: ::std::option::Option<::std::string::String>,
}
impl DeleteAvailabilityConfigurationInputBuilder {
    /// <p>The WorkMail organization for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    /// This field is required.
    pub fn organization_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.organization_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The WorkMail organization for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    pub fn set_organization_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    /// <p>The WorkMail organization for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    pub fn get_organization_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.organization_id
    }
    /// <p>The domain for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    /// This field is required.
    pub fn domain_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The domain for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    pub fn set_domain_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>The domain for which the <code>AvailabilityConfiguration</code> will be deleted.</p>
    pub fn get_domain_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_name
    }
    /// Consumes the builder and constructs a [`DeleteAvailabilityConfigurationInput`](crate::operation::delete_availability_configuration::DeleteAvailabilityConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_availability_configuration::DeleteAvailabilityConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_availability_configuration::DeleteAvailabilityConfigurationInput {
                organization_id: self.organization_id,
                domain_name: self.domain_name,
            },
        )
    }
}
