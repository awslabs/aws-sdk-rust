// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteGroupInput {
    /// <p>The organization that contains the group.</p>
    #[doc(hidden)]
    pub organization_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the group to be deleted.</p>
    #[doc(hidden)]
    pub group_id: std::option::Option<std::string::String>,
}
impl DeleteGroupInput {
    /// <p>The organization that contains the group.</p>
    pub fn organization_id(&self) -> std::option::Option<&str> {
        self.organization_id.as_deref()
    }
    /// <p>The identifier of the group to be deleted.</p>
    pub fn group_id(&self) -> std::option::Option<&str> {
        self.group_id.as_deref()
    }
}
impl DeleteGroupInput {
    /// Creates a new builder-style object to manufacture [`DeleteGroupInput`](crate::operation::delete_group::DeleteGroupInput).
    pub fn builder() -> crate::operation::delete_group::builders::DeleteGroupInputBuilder {
        crate::operation::delete_group::builders::DeleteGroupInputBuilder::default()
    }
}

/// A builder for [`DeleteGroupInput`](crate::operation::delete_group::DeleteGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteGroupInputBuilder {
    pub(crate) organization_id: std::option::Option<std::string::String>,
    pub(crate) group_id: std::option::Option<std::string::String>,
}
impl DeleteGroupInputBuilder {
    /// <p>The organization that contains the group.</p>
    pub fn organization_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organization_id = Some(input.into());
        self
    }
    /// <p>The organization that contains the group.</p>
    pub fn set_organization_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    /// <p>The identifier of the group to be deleted.</p>
    pub fn group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.group_id = Some(input.into());
        self
    }
    /// <p>The identifier of the group to be deleted.</p>
    pub fn set_group_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.group_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteGroupInput`](crate::operation::delete_group::DeleteGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_group::DeleteGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_group::DeleteGroupInput {
            organization_id: self.organization_id,
            group_id: self.group_id,
        })
    }
}
