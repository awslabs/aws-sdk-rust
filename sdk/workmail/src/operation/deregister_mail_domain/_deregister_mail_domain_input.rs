// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeregisterMailDomainInput {
    /// <p>The WorkMail organization for which the domain will be deregistered.</p>
    #[doc(hidden)]
    pub organization_id: std::option::Option<std::string::String>,
    /// <p>The domain to deregister in WorkMail and SES.</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
}
impl DeregisterMailDomainInput {
    /// <p>The WorkMail organization for which the domain will be deregistered.</p>
    pub fn organization_id(&self) -> std::option::Option<&str> {
        self.organization_id.as_deref()
    }
    /// <p>The domain to deregister in WorkMail and SES.</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
}
impl DeregisterMailDomainInput {
    /// Creates a new builder-style object to manufacture [`DeregisterMailDomainInput`](crate::operation::deregister_mail_domain::DeregisterMailDomainInput).
    pub fn builder(
    ) -> crate::operation::deregister_mail_domain::builders::DeregisterMailDomainInputBuilder {
        crate::operation::deregister_mail_domain::builders::DeregisterMailDomainInputBuilder::default()
    }
}

/// A builder for [`DeregisterMailDomainInput`](crate::operation::deregister_mail_domain::DeregisterMailDomainInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeregisterMailDomainInputBuilder {
    pub(crate) organization_id: std::option::Option<std::string::String>,
    pub(crate) domain_name: std::option::Option<std::string::String>,
}
impl DeregisterMailDomainInputBuilder {
    /// <p>The WorkMail organization for which the domain will be deregistered.</p>
    pub fn organization_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organization_id = Some(input.into());
        self
    }
    /// <p>The WorkMail organization for which the domain will be deregistered.</p>
    pub fn set_organization_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    /// <p>The domain to deregister in WorkMail and SES.</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>The domain to deregister in WorkMail and SES.</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DeregisterMailDomainInput`](crate::operation::deregister_mail_domain::DeregisterMailDomainInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::deregister_mail_domain::DeregisterMailDomainInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::deregister_mail_domain::DeregisterMailDomainInput {
                organization_id: self.organization_id,
                domain_name: self.domain_name,
            },
        )
    }
}
