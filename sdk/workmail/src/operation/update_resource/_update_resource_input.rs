// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateResourceInput {
    /// <p>The identifier associated with the organization for which the resource is updated.</p>
    pub organization_id: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the resource to be updated.</p>
    /// <p>The identifier can accept <i>ResourceId</i>, <i>Resourcename</i>, or <i>email</i>. The following identity formats are available:</p>
    /// <ul>
    /// <li> <p>Resource ID: r-0123456789a0123456789b0123456789</p> </li>
    /// <li> <p>Email address: resource@domain.tld</p> </li>
    /// <li> <p>Resource name: resource</p> </li>
    /// </ul>
    pub resource_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the resource to be updated.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The resource's booking options to be updated.</p>
    pub booking_options: ::std::option::Option<crate::types::BookingOptions>,
    /// <p>Updates the resource description.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>Updates the resource type.</p>
    pub r#type: ::std::option::Option<crate::types::ResourceType>,
    /// <p>If enabled, the resource is hidden from the global address list.</p>
    pub hidden_from_global_address_list: ::std::option::Option<bool>,
}
impl UpdateResourceInput {
    /// <p>The identifier associated with the organization for which the resource is updated.</p>
    pub fn organization_id(&self) -> ::std::option::Option<&str> {
        self.organization_id.as_deref()
    }
    /// <p>The identifier of the resource to be updated.</p>
    /// <p>The identifier can accept <i>ResourceId</i>, <i>Resourcename</i>, or <i>email</i>. The following identity formats are available:</p>
    /// <ul>
    /// <li> <p>Resource ID: r-0123456789a0123456789b0123456789</p> </li>
    /// <li> <p>Email address: resource@domain.tld</p> </li>
    /// <li> <p>Resource name: resource</p> </li>
    /// </ul>
    pub fn resource_id(&self) -> ::std::option::Option<&str> {
        self.resource_id.as_deref()
    }
    /// <p>The name of the resource to be updated.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The resource's booking options to be updated.</p>
    pub fn booking_options(&self) -> ::std::option::Option<&crate::types::BookingOptions> {
        self.booking_options.as_ref()
    }
    /// <p>Updates the resource description.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>Updates the resource type.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::ResourceType> {
        self.r#type.as_ref()
    }
    /// <p>If enabled, the resource is hidden from the global address list.</p>
    pub fn hidden_from_global_address_list(&self) -> ::std::option::Option<bool> {
        self.hidden_from_global_address_list
    }
}
impl UpdateResourceInput {
    /// Creates a new builder-style object to manufacture [`UpdateResourceInput`](crate::operation::update_resource::UpdateResourceInput).
    pub fn builder() -> crate::operation::update_resource::builders::UpdateResourceInputBuilder {
        crate::operation::update_resource::builders::UpdateResourceInputBuilder::default()
    }
}

/// A builder for [`UpdateResourceInput`](crate::operation::update_resource::UpdateResourceInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateResourceInputBuilder {
    pub(crate) organization_id: ::std::option::Option<::std::string::String>,
    pub(crate) resource_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) booking_options: ::std::option::Option<crate::types::BookingOptions>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) r#type: ::std::option::Option<crate::types::ResourceType>,
    pub(crate) hidden_from_global_address_list: ::std::option::Option<bool>,
}
impl UpdateResourceInputBuilder {
    /// <p>The identifier associated with the organization for which the resource is updated.</p>
    /// This field is required.
    pub fn organization_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.organization_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier associated with the organization for which the resource is updated.</p>
    pub fn set_organization_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    /// <p>The identifier associated with the organization for which the resource is updated.</p>
    pub fn get_organization_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.organization_id
    }
    /// <p>The identifier of the resource to be updated.</p>
    /// <p>The identifier can accept <i>ResourceId</i>, <i>Resourcename</i>, or <i>email</i>. The following identity formats are available:</p>
    /// <ul>
    /// <li> <p>Resource ID: r-0123456789a0123456789b0123456789</p> </li>
    /// <li> <p>Email address: resource@domain.tld</p> </li>
    /// <li> <p>Resource name: resource</p> </li>
    /// </ul>
    /// This field is required.
    pub fn resource_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the resource to be updated.</p>
    /// <p>The identifier can accept <i>ResourceId</i>, <i>Resourcename</i>, or <i>email</i>. The following identity formats are available:</p>
    /// <ul>
    /// <li> <p>Resource ID: r-0123456789a0123456789b0123456789</p> </li>
    /// <li> <p>Email address: resource@domain.tld</p> </li>
    /// <li> <p>Resource name: resource</p> </li>
    /// </ul>
    pub fn set_resource_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// <p>The identifier of the resource to be updated.</p>
    /// <p>The identifier can accept <i>ResourceId</i>, <i>Resourcename</i>, or <i>email</i>. The following identity formats are available:</p>
    /// <ul>
    /// <li> <p>Resource ID: r-0123456789a0123456789b0123456789</p> </li>
    /// <li> <p>Email address: resource@domain.tld</p> </li>
    /// <li> <p>Resource name: resource</p> </li>
    /// </ul>
    pub fn get_resource_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_id
    }
    /// <p>The name of the resource to be updated.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the resource to be updated.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the resource to be updated.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The resource's booking options to be updated.</p>
    pub fn booking_options(mut self, input: crate::types::BookingOptions) -> Self {
        self.booking_options = ::std::option::Option::Some(input);
        self
    }
    /// <p>The resource's booking options to be updated.</p>
    pub fn set_booking_options(mut self, input: ::std::option::Option<crate::types::BookingOptions>) -> Self {
        self.booking_options = input;
        self
    }
    /// <p>The resource's booking options to be updated.</p>
    pub fn get_booking_options(&self) -> &::std::option::Option<crate::types::BookingOptions> {
        &self.booking_options
    }
    /// <p>Updates the resource description.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Updates the resource description.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>Updates the resource description.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>Updates the resource type.</p>
    pub fn r#type(mut self, input: crate::types::ResourceType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Updates the resource type.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::ResourceType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>Updates the resource type.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::ResourceType> {
        &self.r#type
    }
    /// <p>If enabled, the resource is hidden from the global address list.</p>
    pub fn hidden_from_global_address_list(mut self, input: bool) -> Self {
        self.hidden_from_global_address_list = ::std::option::Option::Some(input);
        self
    }
    /// <p>If enabled, the resource is hidden from the global address list.</p>
    pub fn set_hidden_from_global_address_list(mut self, input: ::std::option::Option<bool>) -> Self {
        self.hidden_from_global_address_list = input;
        self
    }
    /// <p>If enabled, the resource is hidden from the global address list.</p>
    pub fn get_hidden_from_global_address_list(&self) -> &::std::option::Option<bool> {
        &self.hidden_from_global_address_list
    }
    /// Consumes the builder and constructs a [`UpdateResourceInput`](crate::operation::update_resource::UpdateResourceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_resource::UpdateResourceInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_resource::UpdateResourceInput {
            organization_id: self.organization_id,
            resource_id: self.resource_id,
            name: self.name,
            booking_options: self.booking_options,
            description: self.description,
            r#type: self.r#type,
            hidden_from_global_address_list: self.hidden_from_global_address_list,
        })
    }
}
