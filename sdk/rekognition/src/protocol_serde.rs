// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_compare_faces;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_copy_project_version;

pub(crate) mod shape_create_collection;

pub(crate) mod shape_create_dataset;

pub(crate) mod shape_create_project;

pub(crate) mod shape_create_project_version;

pub(crate) mod shape_create_stream_processor;

pub(crate) mod shape_delete_collection;

pub(crate) mod shape_delete_dataset;

pub(crate) mod shape_delete_faces;

pub(crate) mod shape_delete_project;

pub(crate) mod shape_delete_project_policy;

pub(crate) mod shape_delete_project_version;

pub(crate) mod shape_delete_stream_processor;

pub(crate) mod shape_describe_collection;

pub(crate) mod shape_describe_dataset;

pub(crate) mod shape_describe_project_versions;

pub(crate) mod shape_describe_projects;

pub(crate) mod shape_describe_stream_processor;

pub(crate) mod shape_detect_custom_labels;

pub(crate) mod shape_detect_faces;

pub(crate) mod shape_detect_labels;

pub(crate) mod shape_detect_moderation_labels;

pub(crate) mod shape_detect_protective_equipment;

pub(crate) mod shape_detect_text;

pub(crate) mod shape_distribute_dataset_entries;

pub(crate) mod shape_get_celebrity_info;

pub(crate) mod shape_get_celebrity_recognition;

pub(crate) mod shape_get_content_moderation;

pub(crate) mod shape_get_face_detection;

pub(crate) mod shape_get_face_search;

pub(crate) mod shape_get_label_detection;

pub(crate) mod shape_get_person_tracking;

pub(crate) mod shape_get_segment_detection;

pub(crate) mod shape_get_text_detection;

pub(crate) mod shape_index_faces;

pub(crate) mod shape_list_collections;

pub(crate) mod shape_list_dataset_entries;

pub(crate) mod shape_list_dataset_labels;

pub(crate) mod shape_list_faces;

pub(crate) mod shape_list_project_policies;

pub(crate) mod shape_list_stream_processors;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_project_policy;

pub(crate) mod shape_recognize_celebrities;

pub(crate) mod shape_search_faces;

pub(crate) mod shape_search_faces_by_image;

pub(crate) mod shape_start_celebrity_recognition;

pub(crate) mod shape_start_content_moderation;

pub(crate) mod shape_start_face_detection;

pub(crate) mod shape_start_face_search;

pub(crate) mod shape_start_label_detection;

pub(crate) mod shape_start_person_tracking;

pub(crate) mod shape_start_project_version;

pub(crate) mod shape_start_segment_detection;

pub(crate) mod shape_start_stream_processor;

pub(crate) mod shape_start_text_detection;

pub(crate) mod shape_stop_project_version;

pub(crate) mod shape_stop_stream_processor;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_dataset_entries;

pub(crate) mod shape_update_stream_processor;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_compare_faces_input;

pub(crate) mod shape_copy_project_version_input;

pub(crate) mod shape_create_collection_input;

pub(crate) mod shape_create_dataset_input;

pub(crate) mod shape_create_project_input;

pub(crate) mod shape_create_project_version_input;

pub(crate) mod shape_create_stream_processor_input;

pub(crate) mod shape_delete_collection_input;

pub(crate) mod shape_delete_dataset_input;

pub(crate) mod shape_delete_faces_input;

pub(crate) mod shape_delete_project_input;

pub(crate) mod shape_delete_project_policy_input;

pub(crate) mod shape_delete_project_version_input;

pub(crate) mod shape_delete_stream_processor_input;

pub(crate) mod shape_describe_collection_input;

pub(crate) mod shape_describe_dataset_input;

pub(crate) mod shape_describe_project_versions_input;

pub(crate) mod shape_describe_projects_input;

pub(crate) mod shape_describe_stream_processor_input;

pub(crate) mod shape_detect_custom_labels_input;

pub(crate) mod shape_detect_faces_input;

pub(crate) mod shape_detect_labels_input;

pub(crate) mod shape_detect_moderation_labels_input;

pub(crate) mod shape_detect_protective_equipment_input;

pub(crate) mod shape_detect_text_input;

pub(crate) mod shape_distribute_dataset_entries_input;

pub(crate) mod shape_get_celebrity_info_input;

pub(crate) mod shape_get_celebrity_recognition_input;

pub(crate) mod shape_get_content_moderation_input;

pub(crate) mod shape_get_face_detection_input;

pub(crate) mod shape_get_face_search_input;

pub(crate) mod shape_get_label_detection_input;

pub(crate) mod shape_get_person_tracking_input;

pub(crate) mod shape_get_segment_detection_input;

pub(crate) mod shape_get_text_detection_input;

pub(crate) mod shape_human_loop_quota_exceeded_exception;

pub(crate) mod shape_idempotent_parameter_mismatch_exception;

pub(crate) mod shape_image_too_large_exception;

pub(crate) mod shape_index_faces_input;

pub(crate) mod shape_internal_server_error;

pub(crate) mod shape_invalid_image_format_exception;

pub(crate) mod shape_invalid_pagination_token_exception;

pub(crate) mod shape_invalid_parameter_exception;

pub(crate) mod shape_invalid_policy_revision_id_exception;

pub(crate) mod shape_invalid_s3_object_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_collections_input;

pub(crate) mod shape_list_dataset_entries_input;

pub(crate) mod shape_list_dataset_labels_input;

pub(crate) mod shape_list_faces_input;

pub(crate) mod shape_list_project_policies_input;

pub(crate) mod shape_list_stream_processors_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_malformed_policy_document_exception;

pub(crate) mod shape_provisioned_throughput_exceeded_exception;

pub(crate) mod shape_put_project_policy_input;

pub(crate) mod shape_recognize_celebrities_input;

pub(crate) mod shape_resource_already_exists_exception;

pub(crate) mod shape_resource_in_use_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_resource_not_ready_exception;

pub(crate) mod shape_search_faces_by_image_input;

pub(crate) mod shape_search_faces_input;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_celebrity_recognition_input;

pub(crate) mod shape_start_content_moderation_input;

pub(crate) mod shape_start_face_detection_input;

pub(crate) mod shape_start_face_search_input;

pub(crate) mod shape_start_label_detection_input;

pub(crate) mod shape_start_person_tracking_input;

pub(crate) mod shape_start_project_version_input;

pub(crate) mod shape_start_segment_detection_input;

pub(crate) mod shape_start_stream_processor_input;

pub(crate) mod shape_start_text_detection_input;

pub(crate) mod shape_stop_project_version_input;

pub(crate) mod shape_stop_stream_processor_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_dataset_entries_input;

pub(crate) mod shape_update_stream_processor_input;

pub(crate) mod shape_video_too_large_exception;

pub(crate) mod shape_audio_metadata_list;

pub(crate) mod shape_bounding_box;

pub(crate) mod shape_celebrity_list;

pub(crate) mod shape_celebrity_recognitions;

pub(crate) mod shape_collection_id_list;

pub(crate) mod shape_compare_faces_match_list;

pub(crate) mod shape_compare_faces_unmatch_list;

pub(crate) mod shape_compared_face_list;

pub(crate) mod shape_compared_source_image_face;

pub(crate) mod shape_content_moderation_detections;

pub(crate) mod shape_custom_labels;

pub(crate) mod shape_dataset_changes;

pub(crate) mod shape_dataset_description;

pub(crate) mod shape_dataset_entries;

pub(crate) mod shape_dataset_label_descriptions;

pub(crate) mod shape_dataset_source;

pub(crate) mod shape_detect_labels_image_properties;

pub(crate) mod shape_detect_labels_settings;

pub(crate) mod shape_detect_text_filters;

pub(crate) mod shape_distribute_dataset;

pub(crate) mod shape_face_detail_list;

pub(crate) mod shape_face_detections;

pub(crate) mod shape_face_id_list;

pub(crate) mod shape_face_list;

pub(crate) mod shape_face_match_list;

pub(crate) mod shape_face_model_version_list;

pub(crate) mod shape_face_record_list;

pub(crate) mod shape_human_loop_activation_output;

pub(crate) mod shape_human_loop_config;

pub(crate) mod shape_image;

pub(crate) mod shape_known_gender;

pub(crate) mod shape_label_detection_settings;

pub(crate) mod shape_label_detections;

pub(crate) mod shape_labels;

pub(crate) mod shape_moderation_labels;

pub(crate) mod shape_notification_channel;

pub(crate) mod shape_output_config;

pub(crate) mod shape_person_detections;

pub(crate) mod shape_person_matches;

pub(crate) mod shape_project_descriptions;

pub(crate) mod shape_project_policies;

pub(crate) mod shape_project_version_descriptions;

pub(crate) mod shape_protective_equipment_persons;

pub(crate) mod shape_protective_equipment_summarization_attributes;

pub(crate) mod shape_protective_equipment_summary;

pub(crate) mod shape_region_of_interest;

pub(crate) mod shape_regions_of_interest;

pub(crate) mod shape_segment_detections;

pub(crate) mod shape_segment_types_info;

pub(crate) mod shape_start_segment_detection_filters;

pub(crate) mod shape_start_text_detection_filters;

pub(crate) mod shape_stream_processing_start_selector;

pub(crate) mod shape_stream_processing_stop_selector;

pub(crate) mod shape_stream_processor_data_sharing_preference;

pub(crate) mod shape_stream_processor_input;

pub(crate) mod shape_stream_processor_list;

pub(crate) mod shape_stream_processor_notification_channel;

pub(crate) mod shape_stream_processor_output;

pub(crate) mod shape_stream_processor_settings;

pub(crate) mod shape_stream_processor_settings_for_update;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_testing_data;

pub(crate) mod shape_text_detection_list;

pub(crate) mod shape_text_detection_results;

pub(crate) mod shape_training_data;

pub(crate) mod shape_unindexed_faces;

pub(crate) mod shape_urls;

pub(crate) mod shape_video;

pub(crate) mod shape_video_metadata;

pub(crate) mod shape_video_metadata_list;

pub(crate) mod shape_asset;

pub(crate) mod shape_audio_metadata;

pub(crate) mod shape_celebrity;

pub(crate) mod shape_celebrity_recognition;

pub(crate) mod shape_compare_faces_match;

pub(crate) mod shape_compared_face;

pub(crate) mod shape_connected_home_settings;

pub(crate) mod shape_connected_home_settings_for_update;

pub(crate) mod shape_content_moderation_detection;

pub(crate) mod shape_custom_label;

pub(crate) mod shape_dataset_label_description;

pub(crate) mod shape_dataset_stats;

pub(crate) mod shape_detect_labels_image_background;

pub(crate) mod shape_detect_labels_image_foreground;

pub(crate) mod shape_detect_labels_image_properties_settings;

pub(crate) mod shape_detect_labels_image_quality;

pub(crate) mod shape_detection_filter;

pub(crate) mod shape_dominant_colors;

pub(crate) mod shape_face;

pub(crate) mod shape_face_detail;

pub(crate) mod shape_face_detection;

pub(crate) mod shape_face_match;

pub(crate) mod shape_face_record;

pub(crate) mod shape_face_search_settings;

pub(crate) mod shape_general_labels_settings;

pub(crate) mod shape_ground_truth_manifest;

pub(crate) mod shape_human_loop_activation_reasons;

pub(crate) mod shape_human_loop_data_attributes;

pub(crate) mod shape_kinesis_data_stream;

pub(crate) mod shape_kinesis_video_stream;

pub(crate) mod shape_kinesis_video_stream_start_selector;

pub(crate) mod shape_label;

pub(crate) mod shape_label_detection;

pub(crate) mod shape_moderation_label;

pub(crate) mod shape_person_detection;

pub(crate) mod shape_person_match;

pub(crate) mod shape_point;

pub(crate) mod shape_project_description;

pub(crate) mod shape_project_policy;

pub(crate) mod shape_project_version_description;

pub(crate) mod shape_protective_equipment_person;

pub(crate) mod shape_protective_equipment_person_ids;

pub(crate) mod shape_s3_destination;

pub(crate) mod shape_s3_object;

pub(crate) mod shape_segment_detection;

pub(crate) mod shape_segment_type_info;

pub(crate) mod shape_start_shot_detection_filter;

pub(crate) mod shape_start_technical_cue_detection_filter;

pub(crate) mod shape_stream_processor;

pub(crate) mod shape_text_detection;

pub(crate) mod shape_text_detection_result;

pub(crate) mod shape_unindexed_face;

pub(crate) mod shape_age_range;

pub(crate) mod shape_beard;

pub(crate) mod shape_black_frame;

pub(crate) mod shape_body_parts;

pub(crate) mod shape_celebrity_detail;

pub(crate) mod shape_connected_home_labels;

pub(crate) mod shape_dataset_label_stats;

pub(crate) mod shape_dataset_metadata_list;

pub(crate) mod shape_dominant_color;

pub(crate) mod shape_emotions;

pub(crate) mod shape_evaluation_result;

pub(crate) mod shape_eye_open;

pub(crate) mod shape_eyeglasses;

pub(crate) mod shape_gender;

pub(crate) mod shape_geometry;

pub(crate) mod shape_image_quality;

pub(crate) mod shape_instances;

pub(crate) mod shape_label_aliases;

pub(crate) mod shape_label_categories;

pub(crate) mod shape_landmarks;

pub(crate) mod shape_mouth_open;

pub(crate) mod shape_mustache;

pub(crate) mod shape_parents;

pub(crate) mod shape_person_detail;

pub(crate) mod shape_polygon;

pub(crate) mod shape_pose;

pub(crate) mod shape_reasons;

pub(crate) mod shape_shot_segment;

pub(crate) mod shape_smile;

pub(crate) mod shape_sunglasses;

pub(crate) mod shape_technical_cue_segment;

pub(crate) mod shape_testing_data_result;

pub(crate) mod shape_training_data_result;

pub(crate) mod shape_dataset_metadata;

pub(crate) mod shape_emotion;

pub(crate) mod shape_instance;

pub(crate) mod shape_label_alias;

pub(crate) mod shape_label_category;

pub(crate) mod shape_landmark;

pub(crate) mod shape_parent;

pub(crate) mod shape_protective_equipment_body_part;

pub(crate) mod shape_summary;

pub(crate) mod shape_validation_data;

pub(crate) mod shape_assets;

pub(crate) mod shape_equipment_detections;

pub(crate) mod shape_equipment_detection;

pub(crate) mod shape_covers_body_part;
