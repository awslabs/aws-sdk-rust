// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartLabelDetection`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`video(Video)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::video) / [`set_video(Option<Video>)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::set_video):<br>required: **true**<br><p>The video in which you want to detect labels. The video must be stored in an Amazon S3 bucket.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::set_client_request_token):<br>required: **false**<br><p>Idempotent token used to identify the start request. If you use the same token with multiple <code>StartLabelDetection</code> requests, the same <code>JobId</code> is returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently started more than once. </p><br>
    ///   - [`min_confidence(f32)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::min_confidence) / [`set_min_confidence(Option<f32>)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::set_min_confidence):<br>required: **false**<br><p>Specifies the minimum confidence that Amazon Rekognition Video must have in order to return a detected label. Confidence represents how certain Amazon Rekognition is that a label is correctly identified.0 is the lowest confidence. 100 is the highest confidence. Amazon Rekognition Video doesn't return any labels with a confidence level lower than this specified value.</p>  <p>If you don't specify <code>MinConfidence</code>, the operation returns labels and bounding boxes (if detected) with confidence values greater than or equal to 50 percent.</p><br>
    ///   - [`notification_channel(NotificationChannel)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::notification_channel) / [`set_notification_channel(Option<NotificationChannel>)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::set_notification_channel):<br>required: **false**<br><p>The Amazon SNS topic ARN you want Amazon Rekognition Video to publish the completion status of the label detection operation to. The Amazon SNS topic must have a topic name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole permissions policy.</p><br>
    ///   - [`job_tag(impl Into<String>)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::job_tag) / [`set_job_tag(Option<String>)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::set_job_tag):<br>required: **false**<br><p>An identifier you specify that's returned in the completion notification that's published to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code> to group related jobs and identify them in the completion notification.</p><br>
    ///   - [`features(LabelDetectionFeatureName)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::features) / [`set_features(Option<Vec::<LabelDetectionFeatureName>>)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::set_features):<br>required: **false**<br><p>The features to return after video analysis. You can specify that GENERAL_LABELS are returned.</p><br>
    ///   - [`settings(LabelDetectionSettings)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::settings) / [`set_settings(Option<LabelDetectionSettings>)`](crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::set_settings):<br>required: **false**<br><p>The settings for a StartLabelDetection request.Contains the specified parameters for the label detection request of an asynchronous label analysis operation. Settings can include filters for GENERAL_LABELS.</p><br>
    /// - On success, responds with [`StartLabelDetectionOutput`](crate::operation::start_label_detection::StartLabelDetectionOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::operation::start_label_detection::StartLabelDetectionOutput::job_id): <p>The identifier for the label detection job. Use <code>JobId</code> to identify the job in a subsequent call to <code>GetLabelDetection</code>. </p>
    /// - On failure, responds with [`SdkError<StartLabelDetectionError>`](crate::operation::start_label_detection::StartLabelDetectionError)
    pub fn start_label_detection(&self) -> crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder {
        crate::operation::start_label_detection::builders::StartLabelDetectionFluentBuilder::new(self.handle.clone())
    }
}
