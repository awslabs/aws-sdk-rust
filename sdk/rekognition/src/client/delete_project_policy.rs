// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteProjectPolicy`](crate::operation::delete_project_policy::builders::DeleteProjectPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_arn(impl Into<String>)`](crate::operation::delete_project_policy::builders::DeleteProjectPolicyFluentBuilder::project_arn) / [`set_project_arn(Option<String>)`](crate::operation::delete_project_policy::builders::DeleteProjectPolicyFluentBuilder::set_project_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the project that the project policy you want to delete is attached to.</p><br>
    ///   - [`policy_name(impl Into<String>)`](crate::operation::delete_project_policy::builders::DeleteProjectPolicyFluentBuilder::policy_name) / [`set_policy_name(Option<String>)`](crate::operation::delete_project_policy::builders::DeleteProjectPolicyFluentBuilder::set_policy_name):<br>required: **true**<br><p>The name of the policy that you want to delete.</p><br>
    ///   - [`policy_revision_id(impl Into<String>)`](crate::operation::delete_project_policy::builders::DeleteProjectPolicyFluentBuilder::policy_revision_id) / [`set_policy_revision_id(Option<String>)`](crate::operation::delete_project_policy::builders::DeleteProjectPolicyFluentBuilder::set_policy_revision_id):<br>required: **false**<br><p>The ID of the project policy revision that you want to delete.</p><br>
    /// - On success, responds with [`DeleteProjectPolicyOutput`](crate::operation::delete_project_policy::DeleteProjectPolicyOutput)
    /// - On failure, responds with [`SdkError<DeleteProjectPolicyError>`](crate::operation::delete_project_policy::DeleteProjectPolicyError)
    pub fn delete_project_policy(&self) -> crate::operation::delete_project_policy::builders::DeleteProjectPolicyFluentBuilder {
        crate::operation::delete_project_policy::builders::DeleteProjectPolicyFluentBuilder::new(self.handle.clone())
    }
}
