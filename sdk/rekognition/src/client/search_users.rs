// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchUsers`](crate::operation::search_users::builders::SearchUsersFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`collection_id(impl Into<String>)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::collection_id) / [`set_collection_id(Option<String>)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::set_collection_id):<br>required: **true**<br><p>The ID of an existing collection containing the UserID, used with a UserId or FaceId. If a FaceId is provided, UserId isnâ€™t required to be present in the Collection.</p><br>
    ///   - [`user_id(impl Into<String>)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::user_id) / [`set_user_id(Option<String>)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::set_user_id):<br>required: **false**<br><p>ID for the existing User.</p><br>
    ///   - [`face_id(impl Into<String>)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::face_id) / [`set_face_id(Option<String>)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::set_face_id):<br>required: **false**<br><p>ID for the existing face.</p><br>
    ///   - [`user_match_threshold(f32)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::user_match_threshold) / [`set_user_match_threshold(Option<f32>)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::set_user_match_threshold):<br>required: **false**<br><p>Optional value that specifies the minimum confidence in the matched UserID to return. Default value of 80.</p><br>
    ///   - [`max_users(i32)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::max_users) / [`set_max_users(Option<i32>)`](crate::operation::search_users::builders::SearchUsersFluentBuilder::set_max_users):<br>required: **false**<br><p>Maximum number of identities to return.</p><br>
    /// - On success, responds with [`SearchUsersOutput`](crate::operation::search_users::SearchUsersOutput) with field(s):
    ///   - [`user_matches(Option<Vec::<UserMatch>>)`](crate::operation::search_users::SearchUsersOutput::user_matches): <p>An array of UserMatch objects that matched the input face along with the confidence in the match. Array will be empty if there are no matches.</p>
    ///   - [`face_model_version(Option<String>)`](crate::operation::search_users::SearchUsersOutput::face_model_version): <p>Version number of the face detection model associated with the input CollectionId.</p>
    ///   - [`searched_face(Option<SearchedFace>)`](crate::operation::search_users::SearchUsersOutput::searched_face): <p>Contains the ID of a face that was used to search for matches in a collection.</p>
    ///   - [`searched_user(Option<SearchedUser>)`](crate::operation::search_users::SearchUsersOutput::searched_user): <p>Contains the ID of the UserID that was used to search for matches in a collection.</p>
    /// - On failure, responds with [`SdkError<SearchUsersError>`](crate::operation::search_users::SearchUsersError)
    pub fn search_users(&self) -> crate::operation::search_users::builders::SearchUsersFluentBuilder {
        crate::operation::search_users::builders::SearchUsersFluentBuilder::new(self.handle.clone())
    }
}
