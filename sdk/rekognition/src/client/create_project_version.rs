// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateProjectVersion`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_arn(impl Into<String>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::project_arn) / [`set_project_arn(Option<String>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::set_project_arn): <p>The ARN of the Amazon Rekognition Custom Labels project that manages the model that you want to train.</p>
    ///   - [`version_name(impl Into<String>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::version_name) / [`set_version_name(Option<String>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::set_version_name): <p>A name for the version of the model. This value must be unique.</p>
    ///   - [`output_config(OutputConfig)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::output_config) / [`set_output_config(Option<OutputConfig>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::set_output_config): <p>The Amazon S3 bucket location to store the results of training. The S3 bucket can be in any AWS account as long as the caller has <code>s3:PutObject</code> permissions on the S3 bucket.</p>
    ///   - [`training_data(TrainingData)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::training_data) / [`set_training_data(Option<TrainingData>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::set_training_data): <p>Specifies an external manifest that the services uses to train the model. If you specify <code>TrainingData</code> you must also specify <code>TestingData</code>. The project must not have any associated datasets. </p>
    ///   - [`testing_data(TestingData)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::testing_data) / [`set_testing_data(Option<TestingData>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::set_testing_data): <p>Specifies an external manifest that the service uses to test the model. If you specify <code>TestingData</code> you must also specify <code>TrainingData</code>. The project must not have any associated datasets.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::set_tags): <p> A set of tags (key-value pairs) that you want to attach to the model. </p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::set_kms_key_id): <p>The identifier for your AWS Key Management Service key (AWS KMS key). You can supply the Amazon Resource Name (ARN) of your KMS key, the ID of your KMS key, an alias for your KMS key, or an alias ARN. The key is used to encrypt training and test images copied into the service for model training. Your source images are unaffected. The key is also used to encrypt training results and manifest files written to the output Amazon S3 bucket (<code>OutputConfig</code>).</p>  <p>If you choose to use your own KMS key, you need the following permissions on the KMS key.</p>  <ul>   <li> <p>kms:CreateGrant</p> </li>   <li> <p>kms:DescribeKey</p> </li>   <li> <p>kms:GenerateDataKey</p> </li>   <li> <p>kms:Decrypt</p> </li>  </ul>  <p>If you don't specify a value for <code>KmsKeyId</code>, images copied into the service are encrypted using a key that AWS owns and manages.</p>
    /// - On success, responds with [`CreateProjectVersionOutput`](crate::operation::create_project_version::CreateProjectVersionOutput) with field(s):
    ///   - [`project_version_arn(Option<String>)`](crate::operation::create_project_version::CreateProjectVersionOutput::project_version_arn): <p>The ARN of the model version that was created. Use <code>DescribeProjectVersion</code> to get the current status of the training operation.</p>
    /// - On failure, responds with [`SdkError<CreateProjectVersionError>`](crate::operation::create_project_version::CreateProjectVersionError)
    pub fn create_project_version(
        &self,
    ) -> crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder {
        crate::operation::create_project_version::builders::CreateProjectVersionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
