// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchFacesByImage`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`collection_id(impl Into<String>)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::collection_id) / [`set_collection_id(Option<String>)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::set_collection_id): <p>ID of the collection to search.</p>
    ///   - [`image(Image)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::image) / [`set_image(Option<Image>)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::set_image): <p>The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to call Amazon Rekognition operations, passing base64-encoded image bytes is not supported. </p>  <p>If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64-encode image bytes passed using the <code>Bytes</code> field. For more information, see Images in the Amazon Rekognition developer guide.</p>
    ///   - [`max_faces(i32)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::max_faces) / [`set_max_faces(Option<i32>)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::set_max_faces): <p>Maximum number of faces to return. The operation returns the maximum number of faces with the highest confidence in the match.</p>
    ///   - [`face_match_threshold(f32)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::face_match_threshold) / [`set_face_match_threshold(Option<f32>)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::set_face_match_threshold): <p>(Optional) Specifies the minimum confidence in the face match to return. For example, don't return any matches where confidence in matches is less than 70%. The default value is 80%.</p>
    ///   - [`quality_filter(QualityFilter)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::quality_filter) / [`set_quality_filter(Option<QualityFilter>)`](crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::set_quality_filter): <p>A filter that specifies a quality bar for how much filtering is done to identify faces. Filtered faces aren't searched for in the collection. If you specify <code>AUTO</code>, Amazon Rekognition chooses the quality bar. If you specify <code>LOW</code>, <code>MEDIUM</code>, or <code>HIGH</code>, filtering removes all faces that donâ€™t meet the chosen quality bar. The quality bar is based on a variety of common use cases. Low-quality detections can occur for a number of reasons. Some examples are an object that's misidentified as a face, a face that's too blurry, or a face with a pose that's too extreme to use. If you specify <code>NONE</code>, no filtering is performed. The default value is <code>NONE</code>. </p>  <p>To use quality filtering, the collection you are using must be associated with version 3 of the face model or higher.</p>
    /// - On success, responds with [`SearchFacesByImageOutput`](crate::operation::search_faces_by_image::SearchFacesByImageOutput) with field(s):
    ///   - [`searched_face_bounding_box(Option<BoundingBox>)`](crate::operation::search_faces_by_image::SearchFacesByImageOutput::searched_face_bounding_box): <p>The bounding box around the face in the input image that Amazon Rekognition used for the search.</p>
    ///   - [`searched_face_confidence(Option<f32>)`](crate::operation::search_faces_by_image::SearchFacesByImageOutput::searched_face_confidence): <p>The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a face.</p>
    ///   - [`face_matches(Option<Vec<FaceMatch>>)`](crate::operation::search_faces_by_image::SearchFacesByImageOutput::face_matches): <p>An array of faces that match the input face, along with the confidence in the match.</p>
    ///   - [`face_model_version(Option<String>)`](crate::operation::search_faces_by_image::SearchFacesByImageOutput::face_model_version): <p>Version number of the face detection model associated with the input collection (<code>CollectionId</code>).</p>
    /// - On failure, responds with [`SdkError<SearchFacesByImageError>`](crate::operation::search_faces_by_image::SearchFacesByImageError)
    pub fn search_faces_by_image(
        &self,
    ) -> crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder {
        crate::operation::search_faces_by_image::builders::SearchFacesByImageFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
