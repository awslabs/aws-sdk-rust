// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateStreamProcessor`](crate::client::fluent_builders::UpdateStreamProcessor) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateStreamProcessor::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateStreamProcessor::set_name): <p> Name of the stream processor that you want to update. </p>
    ///   - [`settings_for_update(StreamProcessorSettingsForUpdate)`](crate::client::fluent_builders::UpdateStreamProcessor::settings_for_update) / [`set_settings_for_update(Option<StreamProcessorSettingsForUpdate>)`](crate::client::fluent_builders::UpdateStreamProcessor::set_settings_for_update): <p> The stream processor settings that you want to update. Label detection settings can be updated to detect different labels with a different minimum confidence. </p>
    ///   - [`regions_of_interest_for_update(Vec<RegionOfInterest>)`](crate::client::fluent_builders::UpdateStreamProcessor::regions_of_interest_for_update) / [`set_regions_of_interest_for_update(Option<Vec<RegionOfInterest>>)`](crate::client::fluent_builders::UpdateStreamProcessor::set_regions_of_interest_for_update): <p> Specifies locations in the frames where Amazon Rekognition checks for objects or people. This is an optional parameter for label detection stream processors. </p>
    ///   - [`data_sharing_preference_for_update(StreamProcessorDataSharingPreference)`](crate::client::fluent_builders::UpdateStreamProcessor::data_sharing_preference_for_update) / [`set_data_sharing_preference_for_update(Option<StreamProcessorDataSharingPreference>)`](crate::client::fluent_builders::UpdateStreamProcessor::set_data_sharing_preference_for_update): <p> Shows whether you are sharing data with Rekognition to improve model performance. You can choose this option at the account level or on a per-stream basis. Note that if you opt out at the account level this setting is ignored on individual streams. </p>
    ///   - [`parameters_to_delete(Vec<StreamProcessorParameterToDelete>)`](crate::client::fluent_builders::UpdateStreamProcessor::parameters_to_delete) / [`set_parameters_to_delete(Option<Vec<StreamProcessorParameterToDelete>>)`](crate::client::fluent_builders::UpdateStreamProcessor::set_parameters_to_delete): <p> A list of parameters you want to delete from the stream processor. </p>
    /// - On success, responds with [`UpdateStreamProcessorOutput`](crate::output::UpdateStreamProcessorOutput)
    /// - On failure, responds with [`SdkError<UpdateStreamProcessorError>`](crate::error::UpdateStreamProcessorError)
    pub fn update_stream_processor(&self) -> crate::client::fluent_builders::UpdateStreamProcessor {
        crate::client::fluent_builders::UpdateStreamProcessor::new(self.handle.clone())
    }
}
