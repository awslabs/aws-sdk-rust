// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateFaces`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`collection_id(impl Into<String>)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::collection_id) / [`set_collection_id(Option<String>)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::set_collection_id):<br>required: **true**<br><p>The ID of an existing collection containing the UserID.</p><br>
    ///   - [`user_id(impl Into<String>)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::user_id) / [`set_user_id(Option<String>)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::set_user_id):<br>required: **true**<br><p>The ID for the existing UserID.</p><br>
    ///   - [`face_ids(impl Into<String>)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::face_ids) / [`set_face_ids(Option<Vec::<String>>)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::set_face_ids):<br>required: **true**<br><p>An array of FaceIDs to associate with the UserID.</p><br>
    ///   - [`user_match_threshold(f32)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::user_match_threshold) / [`set_user_match_threshold(Option<f32>)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::set_user_match_threshold):<br>required: **false**<br><p>An optional value specifying the minimum confidence in the UserID match to return. The default value is 75.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::set_client_request_token):<br>required: **false**<br><p>Idempotent token used to identify the request to <code>AssociateFaces</code>. If you use the same token with multiple <code>AssociateFaces</code> requests, the same response is returned. Use ClientRequestToken to prevent the same request from being processed more than once.</p><br>
    /// - On success, responds with [`AssociateFacesOutput`](crate::operation::associate_faces::AssociateFacesOutput) with field(s):
    ///   - [`associated_faces(Option<Vec::<AssociatedFace>>)`](crate::operation::associate_faces::AssociateFacesOutput::associated_faces): <p>An array of AssociatedFace objects containing FaceIDs that are successfully associated with the UserID is returned. Returned if the AssociateFaces action is successful.</p>
    ///   - [`unsuccessful_face_associations(Option<Vec::<UnsuccessfulFaceAssociation>>)`](crate::operation::associate_faces::AssociateFacesOutput::unsuccessful_face_associations): <p>An array of UnsuccessfulAssociation objects containing FaceIDs that are not successfully associated along with the reasons. Returned if the AssociateFaces action is successful.</p>
    ///   - [`user_status(Option<UserStatus>)`](crate::operation::associate_faces::AssociateFacesOutput::user_status): <p>The status of an update made to a UserID. Reflects if the UserID has been updated for every requested change.</p>
    /// - On failure, responds with [`SdkError<AssociateFacesError>`](crate::operation::associate_faces::AssociateFacesError)
    pub fn associate_faces(&self) -> crate::operation::associate_faces::builders::AssociateFacesFluentBuilder {
        crate::operation::associate_faces::builders::AssociateFacesFluentBuilder::new(self.handle.clone())
    }
}
