// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeStreamProcessor`](crate::operation::describe_stream_processor::builders::DescribeStreamProcessorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::describe_stream_processor::builders::DescribeStreamProcessorFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::describe_stream_processor::builders::DescribeStreamProcessorFluentBuilder::set_name):<br>required: **true**<br><p>Name of the stream processor for which you want information.</p><br>
    /// - On success, responds with [`DescribeStreamProcessorOutput`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::name): <p>Name of the stream processor. </p>
    ///   - [`stream_processor_arn(Option<String>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::stream_processor_arn): <p>ARN of the stream processor.</p>
    ///   - [`status(Option<StreamProcessorStatus>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::status): <p>Current status of the stream processor.</p>
    ///   - [`status_message(Option<String>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::status_message): <p>Detailed status message about the stream processor.</p>
    ///   - [`creation_timestamp(Option<DateTime>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::creation_timestamp): <p>Date and time the stream processor was created</p>
    ///   - [`last_update_timestamp(Option<DateTime>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::last_update_timestamp): <p>The time, in Unix format, the stream processor was last updated. For example, when the stream processor moves from a running state to a failed state, or when the user starts or stops the stream processor.</p>
    ///   - [`input(Option<StreamProcessorInput>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::input): <p>Kinesis video stream that provides the source streaming video.</p>
    ///   - [`output(Option<StreamProcessorOutput>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::output): <p>Kinesis data stream to which Amazon Rekognition Video puts the analysis results.</p>
    ///   - [`role_arn(Option<String>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::role_arn): <p>ARN of the IAM role that allows access to the stream processor.</p>
    ///   - [`settings(Option<StreamProcessorSettings>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::settings): <p>Input parameters used in a streaming video analyzed by a stream processor. You can use <code>FaceSearch</code> to recognize faces in a streaming video, or you can use <code>ConnectedHome</code> to detect labels.</p>
    ///   - [`notification_channel(Option<StreamProcessorNotificationChannel>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::notification_channel): <p>The Amazon Simple Notification Service topic to which Amazon Rekognition publishes the object detection results and completion status of a video analysis operation.</p>  <p>Amazon Rekognition publishes a notification the first time an object of interest or a person is detected in the video stream. For example, if Amazon Rekognition detects a person at second 2, a pet at second 4, and a person again at second 5, Amazon Rekognition sends 2 object class detected notifications, one for a person at second 2 and one for a pet at second 4.</p>  <p>Amazon Rekognition also publishes an an end-of-session notification with a summary when the stream processing session is complete.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::kms_key_id): <p> The identifier for your AWS Key Management Service key (AWS KMS key). This is an optional parameter for label detection stream processors. </p>
    ///   - [`regions_of_interest(Option<Vec::<RegionOfInterest>>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::regions_of_interest): <p> Specifies locations in the frames where Amazon Rekognition checks for objects or people. This is an optional parameter for label detection stream processors. </p>
    ///   - [`data_sharing_preference(Option<StreamProcessorDataSharingPreference>)`](crate::operation::describe_stream_processor::DescribeStreamProcessorOutput::data_sharing_preference): <p> Shows whether you are sharing data with Rekognition to improve model performance. You can choose this option at the account level or on a per-stream basis. Note that if you opt out at the account level this setting is ignored on individual streams. </p>
    /// - On failure, responds with [`SdkError<DescribeStreamProcessorError>`](crate::operation::describe_stream_processor::DescribeStreamProcessorError)
    pub fn describe_stream_processor(&self) -> crate::operation::describe_stream_processor::builders::DescribeStreamProcessorFluentBuilder {
        crate::operation::describe_stream_processor::builders::DescribeStreamProcessorFluentBuilder::new(self.handle.clone())
    }
}
