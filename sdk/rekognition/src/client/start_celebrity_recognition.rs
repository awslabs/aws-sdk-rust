// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartCelebrityRecognition`](crate::client::fluent_builders::StartCelebrityRecognition) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`video(Video)`](crate::client::fluent_builders::StartCelebrityRecognition::video) / [`set_video(Option<Video>)`](crate::client::fluent_builders::StartCelebrityRecognition::set_video): <p>The video in which you want to recognize celebrities. The video must be stored in an Amazon S3 bucket.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::StartCelebrityRecognition::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::StartCelebrityRecognition::set_client_request_token): <p>Idempotent token used to identify the start request. If you use the same token with multiple <code>StartCelebrityRecognition</code> requests, the same <code>JobId</code> is returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently started more than once. </p>
    ///   - [`notification_channel(NotificationChannel)`](crate::client::fluent_builders::StartCelebrityRecognition::notification_channel) / [`set_notification_channel(Option<NotificationChannel>)`](crate::client::fluent_builders::StartCelebrityRecognition::set_notification_channel): <p>The Amazon SNS topic ARN that you want Amazon Rekognition Video to publish the completion status of the celebrity recognition analysis to. The Amazon SNS topic must have a topic name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole permissions policy.</p>
    ///   - [`job_tag(impl Into<String>)`](crate::client::fluent_builders::StartCelebrityRecognition::job_tag) / [`set_job_tag(Option<String>)`](crate::client::fluent_builders::StartCelebrityRecognition::set_job_tag): <p>An identifier you specify that's returned in the completion notification that's published to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code> to group related jobs and identify them in the completion notification.</p>
    /// - On success, responds with [`StartCelebrityRecognitionOutput`](crate::output::StartCelebrityRecognitionOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::output::StartCelebrityRecognitionOutput::job_id): <p>The identifier for the celebrity recognition analysis job. Use <code>JobId</code> to identify the job in a subsequent call to <code>GetCelebrityRecognition</code>.</p>
    /// - On failure, responds with [`SdkError<StartCelebrityRecognitionError>`](crate::error::StartCelebrityRecognitionError)
    pub fn start_celebrity_recognition(
        &self,
    ) -> crate::client::fluent_builders::StartCelebrityRecognition {
        crate::client::fluent_builders::StartCelebrityRecognition::new(self.handle.clone())
    }
}
