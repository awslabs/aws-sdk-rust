// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartCelebrityRecognition`](crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`video(Video)`](crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder::video) / [`set_video(Option<Video>)`](crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder::set_video):<br>required: **true**<br><p>The video in which you want to recognize celebrities. The video must be stored in an Amazon S3 bucket.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder::set_client_request_token):<br>required: **false**<br><p>Idempotent token used to identify the start request. If you use the same token with multiple <code>StartCelebrityRecognition</code> requests, the same <code>JobId</code> is returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently started more than once. </p><br>
    ///   - [`notification_channel(NotificationChannel)`](crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder::notification_channel) / [`set_notification_channel(Option<NotificationChannel>)`](crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder::set_notification_channel):<br>required: **false**<br><p>The Amazon SNS topic ARN that you want Amazon Rekognition Video to publish the completion status of the celebrity recognition analysis to. The Amazon SNS topic must have a topic name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole permissions policy.</p><br>
    ///   - [`job_tag(impl Into<String>)`](crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder::job_tag) / [`set_job_tag(Option<String>)`](crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder::set_job_tag):<br>required: **false**<br><p>An identifier you specify that's returned in the completion notification that's published to your Amazon Simple Notification Service topic. For example, you can use <code>JobTag</code> to group related jobs and identify them in the completion notification.</p><br>
    /// - On success, responds with [`StartCelebrityRecognitionOutput`](crate::operation::start_celebrity_recognition::StartCelebrityRecognitionOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::operation::start_celebrity_recognition::StartCelebrityRecognitionOutput::job_id): <p>The identifier for the celebrity recognition analysis job. Use <code>JobId</code> to identify the job in a subsequent call to <code>GetCelebrityRecognition</code>.</p>
    /// - On failure, responds with [`SdkError<StartCelebrityRecognitionError>`](crate::operation::start_celebrity_recognition::StartCelebrityRecognitionError)
    pub fn start_celebrity_recognition(&self) -> crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder {
        crate::operation::start_celebrity_recognition::builders::StartCelebrityRecognitionFluentBuilder::new(self.handle.clone())
    }
}
