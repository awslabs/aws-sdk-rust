// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateStreamProcessor`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`input(StreamProcessorInput)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::input) / [`set_input(Option<StreamProcessorInput>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_input): <p>Kinesis video stream stream that provides the source streaming video. If you are using the AWS CLI, the parameter name is <code>StreamProcessorInput</code>. This is required for both face search and label detection stream processors.</p>
    ///   - [`output(StreamProcessorOutput)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::output) / [`set_output(Option<StreamProcessorOutput>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_output): <p>Kinesis data stream stream or Amazon S3 bucket location to which Amazon Rekognition Video puts the analysis results. If you are using the AWS CLI, the parameter name is <code>StreamProcessorOutput</code>. This must be a <code>S3Destination</code> of an Amazon S3 bucket that you own for a label detection stream processor or a Kinesis data stream ARN for a face search stream processor.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_name): <p>An identifier you assign to the stream processor. You can use <code>Name</code> to manage the stream processor. For example, you can get the current status of the stream processor by calling <code>DescribeStreamProcessor</code>. <code>Name</code> is idempotent. This is required for both face search and label detection stream processors. </p>
    ///   - [`settings(StreamProcessorSettings)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::settings) / [`set_settings(Option<StreamProcessorSettings>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_settings): <p>Input parameters used in a streaming video analyzed by a stream processor. You can use <code>FaceSearch</code> to recognize faces in a streaming video, or you can use <code>ConnectedHome</code> to detect labels.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_role_arn): <p>The Amazon Resource Number (ARN) of the IAM role that allows access to the stream processor. The IAM role provides Rekognition read permissions for a Kinesis stream. It also provides write permissions to an Amazon S3 bucket and Amazon Simple Notification Service topic for a label detection stream processor. This is required for both face search and label detection stream processors.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_tags): <p> A set of tags (key-value pairs) that you want to attach to the stream processor. </p>
    ///   - [`notification_channel(StreamProcessorNotificationChannel)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::notification_channel) / [`set_notification_channel(Option<StreamProcessorNotificationChannel>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_notification_channel): <p>The Amazon Simple Notification Service topic to which Amazon Rekognition publishes the object detection results and completion status of a video analysis operation.</p>  <p>Amazon Rekognition publishes a notification the first time an object of interest or a person is detected in the video stream. For example, if Amazon Rekognition detects a person at second 2, a pet at second 4, and a person again at second 5, Amazon Rekognition sends 2 object class detected notifications, one for a person at second 2 and one for a pet at second 4.</p>  <p>Amazon Rekognition also publishes an an end-of-session notification with a summary when the stream processing session is complete.</p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_kms_key_id): <p> The identifier for your AWS Key Management Service key (AWS KMS key). This is an optional parameter for label detection stream processors and should not be used to create a face search stream processor. You can supply the Amazon Resource Name (ARN) of your KMS key, the ID of your KMS key, an alias for your KMS key, or an alias ARN. The key is used to encrypt results and data published to your Amazon S3 bucket, which includes image frames and hero images. Your source images are unaffected. </p>  <p> </p>
    ///   - [`regions_of_interest(Vec<RegionOfInterest>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::regions_of_interest) / [`set_regions_of_interest(Option<Vec<RegionOfInterest>>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_regions_of_interest): <p> Specifies locations in the frames where Amazon Rekognition checks for objects or people. You can specify up to 10 regions of interest, and each region has either a polygon or a bounding box. This is an optional parameter for label detection stream processors and should not be used to create a face search stream processor. </p>
    ///   - [`data_sharing_preference(StreamProcessorDataSharingPreference)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::data_sharing_preference) / [`set_data_sharing_preference(Option<StreamProcessorDataSharingPreference>)`](crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::set_data_sharing_preference): <p> Shows whether you are sharing data with Rekognition to improve model performance. You can choose this option at the account level or on a per-stream basis. Note that if you opt out at the account level this setting is ignored on individual streams. </p>
    /// - On success, responds with [`CreateStreamProcessorOutput`](crate::operation::create_stream_processor::CreateStreamProcessorOutput) with field(s):
    ///   - [`stream_processor_arn(Option<String>)`](crate::operation::create_stream_processor::CreateStreamProcessorOutput::stream_processor_arn): <p>Amazon Resource Number for the newly created stream processor.</p>
    /// - On failure, responds with [`SdkError<CreateStreamProcessorError>`](crate::operation::create_stream_processor::CreateStreamProcessorError)
    pub fn create_stream_processor(
        &self,
    ) -> crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder
    {
        crate::operation::create_stream_processor::builders::CreateStreamProcessorFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
