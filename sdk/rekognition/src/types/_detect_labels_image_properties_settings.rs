// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Settings for the IMAGE_PROPERTIES feature type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DetectLabelsImagePropertiesSettings {
    /// <p>The maximum number of dominant colors to return when detecting labels in an image. The default value is 10.</p>
    #[doc(hidden)]
    pub max_dominant_colors: i32,
}
impl DetectLabelsImagePropertiesSettings {
    /// <p>The maximum number of dominant colors to return when detecting labels in an image. The default value is 10.</p>
    pub fn max_dominant_colors(&self) -> i32 {
        self.max_dominant_colors
    }
}
impl DetectLabelsImagePropertiesSettings {
    /// Creates a new builder-style object to manufacture [`DetectLabelsImagePropertiesSettings`](crate::types::DetectLabelsImagePropertiesSettings).
    pub fn builder() -> crate::types::builders::DetectLabelsImagePropertiesSettingsBuilder {
        crate::types::builders::DetectLabelsImagePropertiesSettingsBuilder::default()
    }
}

/// A builder for [`DetectLabelsImagePropertiesSettings`](crate::types::DetectLabelsImagePropertiesSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DetectLabelsImagePropertiesSettingsBuilder {
    pub(crate) max_dominant_colors: std::option::Option<i32>,
}
impl DetectLabelsImagePropertiesSettingsBuilder {
    /// <p>The maximum number of dominant colors to return when detecting labels in an image. The default value is 10.</p>
    pub fn max_dominant_colors(mut self, input: i32) -> Self {
        self.max_dominant_colors = Some(input);
        self
    }
    /// <p>The maximum number of dominant colors to return when detecting labels in an image. The default value is 10.</p>
    pub fn set_max_dominant_colors(mut self, input: std::option::Option<i32>) -> Self {
        self.max_dominant_colors = input;
        self
    }
    /// Consumes the builder and constructs a [`DetectLabelsImagePropertiesSettings`](crate::types::DetectLabelsImagePropertiesSettings).
    pub fn build(self) -> crate::types::DetectLabelsImagePropertiesSettings {
        crate::types::DetectLabelsImagePropertiesSettings {
            max_dominant_colors: self.max_dominant_colors.unwrap_or_default(),
        }
    }
}
