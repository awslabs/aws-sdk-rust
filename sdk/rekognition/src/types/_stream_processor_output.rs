// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the Amazon Kinesis Data Streams stream to which a Amazon Rekognition Video stream processor streams the results of a video analysis. For more information, see CreateStreamProcessor in the Amazon Rekognition Developer Guide.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StreamProcessorOutput {
    /// <p>The Amazon Kinesis Data Streams stream to which the Amazon Rekognition stream processor streams the analysis results.</p>
    #[doc(hidden)]
    pub kinesis_data_stream: std::option::Option<crate::types::KinesisDataStream>,
    /// <p> The Amazon S3 bucket location to which Amazon Rekognition publishes the detailed inference results of a video analysis operation. </p>
    #[doc(hidden)]
    pub s3_destination: std::option::Option<crate::types::S3Destination>,
}
impl StreamProcessorOutput {
    /// <p>The Amazon Kinesis Data Streams stream to which the Amazon Rekognition stream processor streams the analysis results.</p>
    pub fn kinesis_data_stream(&self) -> std::option::Option<&crate::types::KinesisDataStream> {
        self.kinesis_data_stream.as_ref()
    }
    /// <p> The Amazon S3 bucket location to which Amazon Rekognition publishes the detailed inference results of a video analysis operation. </p>
    pub fn s3_destination(&self) -> std::option::Option<&crate::types::S3Destination> {
        self.s3_destination.as_ref()
    }
}
impl StreamProcessorOutput {
    /// Creates a new builder-style object to manufacture [`StreamProcessorOutput`](crate::types::StreamProcessorOutput).
    pub fn builder() -> crate::types::builders::StreamProcessorOutputBuilder {
        crate::types::builders::StreamProcessorOutputBuilder::default()
    }
}

/// A builder for [`StreamProcessorOutput`](crate::types::StreamProcessorOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StreamProcessorOutputBuilder {
    pub(crate) kinesis_data_stream: std::option::Option<crate::types::KinesisDataStream>,
    pub(crate) s3_destination: std::option::Option<crate::types::S3Destination>,
}
impl StreamProcessorOutputBuilder {
    /// <p>The Amazon Kinesis Data Streams stream to which the Amazon Rekognition stream processor streams the analysis results.</p>
    pub fn kinesis_data_stream(mut self, input: crate::types::KinesisDataStream) -> Self {
        self.kinesis_data_stream = Some(input);
        self
    }
    /// <p>The Amazon Kinesis Data Streams stream to which the Amazon Rekognition stream processor streams the analysis results.</p>
    pub fn set_kinesis_data_stream(
        mut self,
        input: std::option::Option<crate::types::KinesisDataStream>,
    ) -> Self {
        self.kinesis_data_stream = input;
        self
    }
    /// <p> The Amazon S3 bucket location to which Amazon Rekognition publishes the detailed inference results of a video analysis operation. </p>
    pub fn s3_destination(mut self, input: crate::types::S3Destination) -> Self {
        self.s3_destination = Some(input);
        self
    }
    /// <p> The Amazon S3 bucket location to which Amazon Rekognition publishes the detailed inference results of a video analysis operation. </p>
    pub fn set_s3_destination(
        mut self,
        input: std::option::Option<crate::types::S3Destination>,
    ) -> Self {
        self.s3_destination = input;
        self
    }
    /// Consumes the builder and constructs a [`StreamProcessorOutput`](crate::types::StreamProcessorOutput).
    pub fn build(self) -> crate::types::StreamProcessorOutput {
        crate::types::StreamProcessorOutput {
            kinesis_data_stream: self.kinesis_data_stream,
            s3_destination: self.s3_destination,
        }
    }
}
