// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Output configuration provided in the job creation request.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MediaAnalysisOutputConfig {
    /// <p>Specifies the Amazon S3 bucket to contain the output of the media analysis job.</p>
    pub s3_bucket: ::std::string::String,
    /// <p>Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for storage.</p>
    pub s3_key_prefix: ::std::option::Option<::std::string::String>,
}
impl MediaAnalysisOutputConfig {
    /// <p>Specifies the Amazon S3 bucket to contain the output of the media analysis job.</p>
    pub fn s3_bucket(&self) -> &str {
        use std::ops::Deref;
        self.s3_bucket.deref()
    }
    /// <p>Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for storage.</p>
    pub fn s3_key_prefix(&self) -> ::std::option::Option<&str> {
        self.s3_key_prefix.as_deref()
    }
}
impl MediaAnalysisOutputConfig {
    /// Creates a new builder-style object to manufacture [`MediaAnalysisOutputConfig`](crate::types::MediaAnalysisOutputConfig).
    pub fn builder() -> crate::types::builders::MediaAnalysisOutputConfigBuilder {
        crate::types::builders::MediaAnalysisOutputConfigBuilder::default()
    }
}

/// A builder for [`MediaAnalysisOutputConfig`](crate::types::MediaAnalysisOutputConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MediaAnalysisOutputConfigBuilder {
    pub(crate) s3_bucket: ::std::option::Option<::std::string::String>,
    pub(crate) s3_key_prefix: ::std::option::Option<::std::string::String>,
}
impl MediaAnalysisOutputConfigBuilder {
    /// <p>Specifies the Amazon S3 bucket to contain the output of the media analysis job.</p>
    /// This field is required.
    pub fn s3_bucket(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_bucket = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the Amazon S3 bucket to contain the output of the media analysis job.</p>
    pub fn set_s3_bucket(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_bucket = input;
        self
    }
    /// <p>Specifies the Amazon S3 bucket to contain the output of the media analysis job.</p>
    pub fn get_s3_bucket(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_bucket
    }
    /// <p>Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for storage.</p>
    pub fn s3_key_prefix(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_key_prefix = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for storage.</p>
    pub fn set_s3_key_prefix(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_key_prefix = input;
        self
    }
    /// <p>Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for storage.</p>
    pub fn get_s3_key_prefix(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_key_prefix
    }
    /// Consumes the builder and constructs a [`MediaAnalysisOutputConfig`](crate::types::MediaAnalysisOutputConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`s3_bucket`](crate::types::builders::MediaAnalysisOutputConfigBuilder::s3_bucket)
    pub fn build(self) -> ::std::result::Result<crate::types::MediaAnalysisOutputConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MediaAnalysisOutputConfig {
            s3_bucket: self.s3_bucket.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "s3_bucket",
                    "s3_bucket was not specified but it is required when building MediaAnalysisOutputConfig",
                )
            })?,
            s3_key_prefix: self.s3_key_prefix,
        })
    }
}
