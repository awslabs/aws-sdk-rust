// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The S3 bucket that contains the training summary. The training summary includes aggregated evaluation metrics for the entire testing dataset and metrics for each individual label. </p>
/// <p>You get the training summary S3 bucket location by calling <code>DescribeProjectVersions</code>. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Summary {
    /// <p>Provides the S3 bucket name and object name.</p>
    /// <p>The region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.</p>
    /// <p>For Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see How Amazon Rekognition works with IAM in the Amazon Rekognition Developer Guide. </p>
    #[doc(hidden)]
    pub s3_object: std::option::Option<crate::types::S3Object>,
}
impl Summary {
    /// <p>Provides the S3 bucket name and object name.</p>
    /// <p>The region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.</p>
    /// <p>For Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see How Amazon Rekognition works with IAM in the Amazon Rekognition Developer Guide. </p>
    pub fn s3_object(&self) -> std::option::Option<&crate::types::S3Object> {
        self.s3_object.as_ref()
    }
}
impl Summary {
    /// Creates a new builder-style object to manufacture [`Summary`](crate::types::Summary).
    pub fn builder() -> crate::types::builders::SummaryBuilder {
        crate::types::builders::SummaryBuilder::default()
    }
}

/// A builder for [`Summary`](crate::types::Summary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SummaryBuilder {
    pub(crate) s3_object: std::option::Option<crate::types::S3Object>,
}
impl SummaryBuilder {
    /// <p>Provides the S3 bucket name and object name.</p>
    /// <p>The region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.</p>
    /// <p>For Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see How Amazon Rekognition works with IAM in the Amazon Rekognition Developer Guide. </p>
    pub fn s3_object(mut self, input: crate::types::S3Object) -> Self {
        self.s3_object = Some(input);
        self
    }
    /// <p>Provides the S3 bucket name and object name.</p>
    /// <p>The region for the S3 bucket containing the S3 object must match the region you use for Amazon Rekognition operations.</p>
    /// <p>For Amazon Rekognition to process an S3 object, the user must have permission to access the S3 object. For more information, see How Amazon Rekognition works with IAM in the Amazon Rekognition Developer Guide. </p>
    pub fn set_s3_object(mut self, input: std::option::Option<crate::types::S3Object>) -> Self {
        self.s3_object = input;
        self
    }
    /// Consumes the builder and constructs a [`Summary`](crate::types::Summary).
    pub fn build(self) -> crate::types::Summary {
        crate::types::Summary {
            s3_object: self.s3_object,
        }
    }
}
