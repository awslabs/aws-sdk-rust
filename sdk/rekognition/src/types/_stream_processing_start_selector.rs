// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This is a required parameter for label detection stream processors and should not be used to start a face search stream processor.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StreamProcessingStartSelector {
    /// <p> Specifies the starting point in the stream to start processing. This can be done with a producer timestamp or a fragment number in a Kinesis stream. </p>
    #[doc(hidden)]
    pub kvs_stream_start_selector:
        std::option::Option<crate::types::KinesisVideoStreamStartSelector>,
}
impl StreamProcessingStartSelector {
    /// <p> Specifies the starting point in the stream to start processing. This can be done with a producer timestamp or a fragment number in a Kinesis stream. </p>
    pub fn kvs_stream_start_selector(
        &self,
    ) -> std::option::Option<&crate::types::KinesisVideoStreamStartSelector> {
        self.kvs_stream_start_selector.as_ref()
    }
}
impl StreamProcessingStartSelector {
    /// Creates a new builder-style object to manufacture [`StreamProcessingStartSelector`](crate::types::StreamProcessingStartSelector).
    pub fn builder() -> crate::types::builders::StreamProcessingStartSelectorBuilder {
        crate::types::builders::StreamProcessingStartSelectorBuilder::default()
    }
}

/// A builder for [`StreamProcessingStartSelector`](crate::types::StreamProcessingStartSelector).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StreamProcessingStartSelectorBuilder {
    pub(crate) kvs_stream_start_selector:
        std::option::Option<crate::types::KinesisVideoStreamStartSelector>,
}
impl StreamProcessingStartSelectorBuilder {
    /// <p> Specifies the starting point in the stream to start processing. This can be done with a producer timestamp or a fragment number in a Kinesis stream. </p>
    pub fn kvs_stream_start_selector(
        mut self,
        input: crate::types::KinesisVideoStreamStartSelector,
    ) -> Self {
        self.kvs_stream_start_selector = Some(input);
        self
    }
    /// <p> Specifies the starting point in the stream to start processing. This can be done with a producer timestamp or a fragment number in a Kinesis stream. </p>
    pub fn set_kvs_stream_start_selector(
        mut self,
        input: std::option::Option<crate::types::KinesisVideoStreamStartSelector>,
    ) -> Self {
        self.kvs_stream_start_selector = input;
        self
    }
    /// Consumes the builder and constructs a [`StreamProcessingStartSelector`](crate::types::StreamProcessingStartSelector).
    pub fn build(self) -> crate::types::StreamProcessingStartSelector {
        crate::types::StreamProcessingStartSelector {
            kvs_stream_start_selector: self.kvs_stream_start_selector,
        }
    }
}
