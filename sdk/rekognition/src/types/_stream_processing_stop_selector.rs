// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Specifies when to stop processing the stream. You can specify a maximum amount of time to process the video. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StreamProcessingStopSelector {
    /// <p> Specifies the maximum amount of time in seconds that you want the stream to be processed. The largest amount of time is 2 minutes. The default is 10 seconds. </p>
    #[doc(hidden)]
    pub max_duration_in_seconds: std::option::Option<i64>,
}
impl StreamProcessingStopSelector {
    /// <p> Specifies the maximum amount of time in seconds that you want the stream to be processed. The largest amount of time is 2 minutes. The default is 10 seconds. </p>
    pub fn max_duration_in_seconds(&self) -> std::option::Option<i64> {
        self.max_duration_in_seconds
    }
}
impl StreamProcessingStopSelector {
    /// Creates a new builder-style object to manufacture [`StreamProcessingStopSelector`](crate::types::StreamProcessingStopSelector).
    pub fn builder() -> crate::types::builders::StreamProcessingStopSelectorBuilder {
        crate::types::builders::StreamProcessingStopSelectorBuilder::default()
    }
}

/// A builder for [`StreamProcessingStopSelector`](crate::types::StreamProcessingStopSelector).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StreamProcessingStopSelectorBuilder {
    pub(crate) max_duration_in_seconds: std::option::Option<i64>,
}
impl StreamProcessingStopSelectorBuilder {
    /// <p> Specifies the maximum amount of time in seconds that you want the stream to be processed. The largest amount of time is 2 minutes. The default is 10 seconds. </p>
    pub fn max_duration_in_seconds(mut self, input: i64) -> Self {
        self.max_duration_in_seconds = Some(input);
        self
    }
    /// <p> Specifies the maximum amount of time in seconds that you want the stream to be processed. The largest amount of time is 2 minutes. The default is 10 seconds. </p>
    pub fn set_max_duration_in_seconds(mut self, input: std::option::Option<i64>) -> Self {
        self.max_duration_in_seconds = input;
        self
    }
    /// Consumes the builder and constructs a [`StreamProcessingStopSelector`](crate::types::StreamProcessingStopSelector).
    pub fn build(self) -> crate::types::StreamProcessingStopSelector {
        crate::types::StreamProcessingStopSelector {
            max_duration_in_seconds: self.max_duration_in_seconds,
        }
    }
}
