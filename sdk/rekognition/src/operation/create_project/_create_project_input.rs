// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateProjectInput {
    /// <p>The name of the project to create.</p>
    #[doc(hidden)]
    pub project_name: std::option::Option<std::string::String>,
}
impl CreateProjectInput {
    /// <p>The name of the project to create.</p>
    pub fn project_name(&self) -> std::option::Option<&str> {
        self.project_name.as_deref()
    }
}
impl CreateProjectInput {
    /// Creates a new builder-style object to manufacture [`CreateProjectInput`](crate::operation::create_project::CreateProjectInput).
    pub fn builder() -> crate::operation::create_project::builders::CreateProjectInputBuilder {
        crate::operation::create_project::builders::CreateProjectInputBuilder::default()
    }
}

/// A builder for [`CreateProjectInput`](crate::operation::create_project::CreateProjectInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateProjectInputBuilder {
    pub(crate) project_name: std::option::Option<std::string::String>,
}
impl CreateProjectInputBuilder {
    /// <p>The name of the project to create.</p>
    pub fn project_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.project_name = Some(input.into());
        self
    }
    /// <p>The name of the project to create.</p>
    pub fn set_project_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.project_name = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateProjectInput`](crate::operation::create_project::CreateProjectInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_project::CreateProjectInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::create_project::CreateProjectInput {
            project_name: self.project_name,
        })
    }
}
