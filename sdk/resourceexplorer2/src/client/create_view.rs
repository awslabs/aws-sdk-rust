// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateView`](crate::operation::create_view::builders::CreateViewFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_view::builders::CreateViewFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_view::builders::CreateViewFluentBuilder::set_client_token): <p>This value helps ensure idempotency. Resource Explorer uses this value to prevent the accidental creation of duplicate versions. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type value</a> to ensure the uniqueness of your views.</p>
    ///   - [`view_name(impl Into<String>)`](crate::operation::create_view::builders::CreateViewFluentBuilder::view_name) / [`set_view_name(Option<String>)`](crate::operation::create_view::builders::CreateViewFluentBuilder::set_view_name): <p>The name of the new view. This name appears in the list of views in Resource Explorer.</p>  <p>The name must be no more than 64 characters long, and can include letters, digits, and the dash (-) character. The name must be unique within its Amazon Web Services Region.</p>
    ///   - [`included_properties(Vec<IncludedProperty>)`](crate::operation::create_view::builders::CreateViewFluentBuilder::included_properties) / [`set_included_properties(Option<Vec<IncludedProperty>>)`](crate::operation::create_view::builders::CreateViewFluentBuilder::set_included_properties): <p>Specifies optional fields that you want included in search results from this view. It is a list of objects that each describe a field to include.</p>  <p>The default is an empty list, with no optional fields included in the results.</p>
    ///   - [`filters(SearchFilter)`](crate::operation::create_view::builders::CreateViewFluentBuilder::filters) / [`set_filters(Option<SearchFilter>)`](crate::operation::create_view::builders::CreateViewFluentBuilder::set_filters): <p>An array of strings that specify which resources are included in the results of queries made using this view. When you use this view in a <code>Search</code> operation, the filter string is combined with the search's <code>QueryString</code> parameter using a logical <code>AND</code> operator.</p>  <p>For information about the supported syntax, see <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html">Search query reference for Resource Explorer</a> in the <i>Amazon Web Services Resource Explorer User Guide</i>.</p> <important>   <p>This query string in the context of this operation supports only <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-filters">filter prefixes</a> with optional <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-operators">operators</a>. It doesn't support free-form text. For example, the string <code>region:us* service:ec2 -tag:stage=prod</code> includes all Amazon EC2 resources in any Amazon Web Services Region that begins with the letters <code>us</code> and is <i>not</i> tagged with a key <code>Stage</code> that has the value <code>prod</code>.</p>  </important>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_view::builders::CreateViewFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_view::builders::CreateViewFluentBuilder::set_tags): <p>Tag key and value pairs that are attached to the view.</p>
    /// - On success, responds with [`CreateViewOutput`](crate::operation::create_view::CreateViewOutput) with field(s):
    ///   - [`view(Option<View>)`](crate::operation::create_view::CreateViewOutput::view): <p>A structure that contains the details about the new view.</p>
    /// - On failure, responds with [`SdkError<CreateViewError>`](crate::operation::create_view::CreateViewError)
    pub fn create_view(&self) -> crate::operation::create_view::builders::CreateViewFluentBuilder {
        crate::operation::create_view::builders::CreateViewFluentBuilder::new(self.handle.clone())
    }
}
