// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for AWS Resource Explorer
///
/// Client for invoking operations on AWS Resource Explorer. Each operation on AWS Resource Explorer is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_resourceexplorer2::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_resourceexplorer2::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_resourceexplorer2::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AssociateDefaultView`](crate::client::fluent_builders::AssociateDefaultView) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`view_arn(impl Into<String>)`](crate::client::fluent_builders::AssociateDefaultView::view_arn) / [`set_view_arn(Option<String>)`](crate::client::fluent_builders::AssociateDefaultView::set_view_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view to set as the default for the Amazon Web Services Region and Amazon Web Services account in which you call this operation. The specified view must already exist in the called Region.</p>
    /// - On success, responds with [`AssociateDefaultViewOutput`](crate::output::AssociateDefaultViewOutput) with field(s):
    ///   - [`view_arn(Option<String>)`](crate::output::AssociateDefaultViewOutput::view_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view that the operation set as the default for queries made in the Amazon Web Services Region and Amazon Web Services account in which you called this operation.</p>
    /// - On failure, responds with [`SdkError<AssociateDefaultViewError>`](crate::error::AssociateDefaultViewError)
    pub fn associate_default_view(&self) -> crate::client::fluent_builders::AssociateDefaultView {
        crate::client::fluent_builders::AssociateDefaultView::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BatchGetView`](crate::client::fluent_builders::BatchGetView) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`view_arns(Vec<String>)`](crate::client::fluent_builders::BatchGetView::view_arns) / [`set_view_arns(Option<Vec<String>>)`](crate::client::fluent_builders::BatchGetView::set_view_arns): <p>A list of <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource names (ARNs)</a> that identify the views you want details for.</p>
    /// - On success, responds with [`BatchGetViewOutput`](crate::output::BatchGetViewOutput) with field(s):
    ///   - [`views(Option<Vec<View>>)`](crate::output::BatchGetViewOutput::views): <p>A structure with a list of objects with details for each of the specified views.</p>
    ///   - [`errors(Option<Vec<BatchGetViewError>>)`](crate::output::BatchGetViewOutput::errors): <p>If any of the specified ARNs result in an error, then this structure describes the error.</p>
    /// - On failure, responds with [`SdkError<BatchGetViewError>`](crate::error::BatchGetViewError)
    pub fn batch_get_view(&self) -> crate::client::fluent_builders::BatchGetView {
        crate::client::fluent_builders::BatchGetView::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateIndex`](crate::client::fluent_builders::CreateIndex) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateIndex::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateIndex::set_client_token): <p>This value helps ensure idempotency. Resource Explorer uses this value to prevent the accidental creation of duplicate versions. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type value</a> to ensure the uniqueness of your views.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateIndex::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateIndex::set_tags): <p>The specified tags are attached only to the index created in this Amazon Web Services Region. The tags aren't attached to any of the resources listed in the index.</p>
    /// - On success, responds with [`CreateIndexOutput`](crate::output::CreateIndexOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::CreateIndexOutput::arn): <p>The ARN of the new local index for the Region. You can reference this ARN in IAM permission policies to authorize the following operations: <code>DeleteIndex</code> | <code>GetIndex</code> | <code>UpdateIndexType</code> | <code>CreateView</code> </p>
    ///   - [`state(Option<IndexState>)`](crate::output::CreateIndexOutput::state): <p>Indicates the current state of the index. You can check for changes to the state for asynchronous operations by calling the <code>GetIndex</code> operation.</p> <note>   <p>The state can remain in the <code>CREATING</code> or <code>UPDATING</code> state for several hours as Resource Explorer discovers the information about your resources and populates the index.</p>  </note>
    ///   - [`created_at(Option<DateTime>)`](crate::output::CreateIndexOutput::created_at): <p>The date and timestamp when the index was created.</p>
    /// - On failure, responds with [`SdkError<CreateIndexError>`](crate::error::CreateIndexError)
    pub fn create_index(&self) -> crate::client::fluent_builders::CreateIndex {
        crate::client::fluent_builders::CreateIndex::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateView`](crate::client::fluent_builders::CreateView) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateView::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateView::set_client_token): <p>This value helps ensure idempotency. Resource Explorer uses this value to prevent the accidental creation of duplicate versions. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type value</a> to ensure the uniqueness of your views.</p>
    ///   - [`view_name(impl Into<String>)`](crate::client::fluent_builders::CreateView::view_name) / [`set_view_name(Option<String>)`](crate::client::fluent_builders::CreateView::set_view_name): <p>The name of the new view. This name appears in the list of views in Resource Explorer.</p>  <p>The name must be no more than 64 characters long, and can include letters, digits, and the dash (-) character. The name must be unique within its Amazon Web Services Region.</p>
    ///   - [`included_properties(Vec<IncludedProperty>)`](crate::client::fluent_builders::CreateView::included_properties) / [`set_included_properties(Option<Vec<IncludedProperty>>)`](crate::client::fluent_builders::CreateView::set_included_properties): <p>Specifies optional fields that you want included in search results from this view. It is a list of objects that each describe a field to include.</p>  <p>The default is an empty list, with no optional fields included in the results.</p>
    ///   - [`filters(SearchFilter)`](crate::client::fluent_builders::CreateView::filters) / [`set_filters(Option<SearchFilter>)`](crate::client::fluent_builders::CreateView::set_filters): <p>An array of strings that specify which resources are included in the results of queries made using this view. When you use this view in a <code>Search</code> operation, the filter string is combined with the search's <code>QueryString</code> parameter using a logical <code>AND</code> operator.</p>  <p>For information about the supported syntax, see <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html">Search query reference for Resource Explorer</a> in the <i>Amazon Web Services Resource Explorer User Guide</i>.</p> <important>   <p>This query string in the context of this operation supports only <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-filters">filter prefixes</a> with optional <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-operators">operators</a>. It doesn't support free-form text. For example, the string <code>region:us* service:ec2 -tag:stage=prod</code> includes all Amazon EC2 resources in any Amazon Web Services Region that begins with the letters <code>us</code> and is <i>not</i> tagged with a key <code>Stage</code> that has the value <code>prod</code>.</p>  </important>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateView::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateView::set_tags): <p>Tag key and value pairs that are attached to the view.</p>
    /// - On success, responds with [`CreateViewOutput`](crate::output::CreateViewOutput) with field(s):
    ///   - [`view(Option<View>)`](crate::output::CreateViewOutput::view): <p>A structure that contains the details about the new view.</p>
    /// - On failure, responds with [`SdkError<CreateViewError>`](crate::error::CreateViewError)
    pub fn create_view(&self) -> crate::client::fluent_builders::CreateView {
        crate::client::fluent_builders::CreateView::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteIndex`](crate::client::fluent_builders::DeleteIndex) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::DeleteIndex::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::DeleteIndex::set_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the index that you want to delete.</p>
    /// - On success, responds with [`DeleteIndexOutput`](crate::output::DeleteIndexOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::DeleteIndexOutput::arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the index that you successfully started the deletion process.</p> <note>   <p>This operation is asynchronous. To check its status, call the <code>GetIndex</code> operation.</p>  </note>
    ///   - [`state(Option<IndexState>)`](crate::output::DeleteIndexOutput::state): <p>Indicates the current state of the index. </p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::output::DeleteIndexOutput::last_updated_at): <p>The date and time when you last updated this index.</p>
    /// - On failure, responds with [`SdkError<DeleteIndexError>`](crate::error::DeleteIndexError)
    pub fn delete_index(&self) -> crate::client::fluent_builders::DeleteIndex {
        crate::client::fluent_builders::DeleteIndex::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteView`](crate::client::fluent_builders::DeleteView) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`view_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteView::view_arn) / [`set_view_arn(Option<String>)`](crate::client::fluent_builders::DeleteView::set_view_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view that you want to delete.</p>
    /// - On success, responds with [`DeleteViewOutput`](crate::output::DeleteViewOutput) with field(s):
    ///   - [`view_arn(Option<String>)`](crate::output::DeleteViewOutput::view_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view that you successfully deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteViewError>`](crate::error::DeleteViewError)
    pub fn delete_view(&self) -> crate::client::fluent_builders::DeleteView {
        crate::client::fluent_builders::DeleteView::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DisassociateDefaultView`](crate::client::fluent_builders::DisassociateDefaultView) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DisassociateDefaultView::send) it.

    /// - On success, responds with [`DisassociateDefaultViewOutput`](crate::output::DisassociateDefaultViewOutput)

    /// - On failure, responds with [`SdkError<DisassociateDefaultViewError>`](crate::error::DisassociateDefaultViewError)
    pub fn disassociate_default_view(
        &self,
    ) -> crate::client::fluent_builders::DisassociateDefaultView {
        crate::client::fluent_builders::DisassociateDefaultView::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDefaultView`](crate::client::fluent_builders::GetDefaultView) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::GetDefaultView::send) it.

    /// - On success, responds with [`GetDefaultViewOutput`](crate::output::GetDefaultViewOutput) with field(s):
    ///   - [`view_arn(Option<String>)`](crate::output::GetDefaultViewOutput::view_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view that is the current default for the Amazon Web Services Region in which you called this operation.</p>
    /// - On failure, responds with [`SdkError<GetDefaultViewError>`](crate::error::GetDefaultViewError)
    pub fn get_default_view(&self) -> crate::client::fluent_builders::GetDefaultView {
        crate::client::fluent_builders::GetDefaultView::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetIndex`](crate::client::fluent_builders::GetIndex) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::GetIndex::send) it.

    /// - On success, responds with [`GetIndexOutput`](crate::output::GetIndexOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::GetIndexOutput::arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the index.</p>
    ///   - [`r#type(Option<IndexType>)`](crate::output::GetIndexOutput::type): <p>The type of the index in this Region. For information about the aggregator index and how it differs from a local index, see <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/manage-aggregator-region.html">Turning on cross-Region search by creating an aggregator index</a>.</p>
    ///   - [`state(Option<IndexState>)`](crate::output::GetIndexOutput::state): <p>The current state of the index in this Amazon Web Services Region.</p>
    ///   - [`replicating_from(Option<Vec<String>>)`](crate::output::GetIndexOutput::replicating_from): <p>This response value is present only if this index is <code>Type=AGGREGATOR</code>.</p>  <p>A list of the Amazon Web Services Regions that replicate their content to the index in this Region.</p>
    ///   - [`replicating_to(Option<Vec<String>>)`](crate::output::GetIndexOutput::replicating_to): <p>This response value is present only if this index is <code>Type=LOCAL</code>.</p>  <p>The Amazon Web Services Region that contains the aggregator index, if one exists. If an aggregator index does exist then the Region in which you called this operation replicates its index information to the Region specified in this response value. </p>
    ///   - [`created_at(Option<DateTime>)`](crate::output::GetIndexOutput::created_at): <p>The date and time when the index was originally created.</p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::output::GetIndexOutput::last_updated_at): <p>The date and time when the index was last updated.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetIndexOutput::tags): <p>Tag key and value pairs that are attached to the index.</p>
    /// - On failure, responds with [`SdkError<GetIndexError>`](crate::error::GetIndexError)
    pub fn get_index(&self) -> crate::client::fluent_builders::GetIndex {
        crate::client::fluent_builders::GetIndex::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetView`](crate::client::fluent_builders::GetView) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`view_arn(impl Into<String>)`](crate::client::fluent_builders::GetView::view_arn) / [`set_view_arn(Option<String>)`](crate::client::fluent_builders::GetView::set_view_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view that you want information about.</p>
    /// - On success, responds with [`GetViewOutput`](crate::output::GetViewOutput) with field(s):
    ///   - [`view(Option<View>)`](crate::output::GetViewOutput::view): <p>A structure that contains the details for the requested view.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetViewOutput::tags): <p>Tag key and value pairs that are attached to the view.</p>
    /// - On failure, responds with [`SdkError<GetViewError>`](crate::error::GetViewError)
    pub fn get_view(&self) -> crate::client::fluent_builders::GetView {
        crate::client::fluent_builders::GetView::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListIndexes`](crate::client::fluent_builders::ListIndexes) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListIndexes::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(IndexType)`](crate::client::fluent_builders::ListIndexes::type) / [`set_type(Option<IndexType>)`](crate::client::fluent_builders::ListIndexes::set_type): <p>If specified, limits the output to only indexes of the specified Type, either <code>LOCAL</code> or <code>AGGREGATOR</code>.</p>  <p>Use this option to discover the aggregator index for your account.</p>
    ///   - [`regions(Vec<String>)`](crate::client::fluent_builders::ListIndexes::regions) / [`set_regions(Option<Vec<String>>)`](crate::client::fluent_builders::ListIndexes::set_regions): <p>If specified, limits the response to only information about the index in the specified list of Amazon Web Services Regions.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListIndexes::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListIndexes::set_max_results): <p>The maximum number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value appropriate to the operation. If additional items exist beyond those included in the current response, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results.</p> <note>   <p>An API operation can return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p>  </note>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListIndexes::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListIndexes::set_next_token): <p>The parameter for receiving additional results if you receive a <code>NextToken</code> response in a previous request. A <code>NextToken</code> response indicates that more output is available. Set this parameter to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.</p>
    /// - On success, responds with [`ListIndexesOutput`](crate::output::ListIndexesOutput) with field(s):
    ///   - [`indexes(Option<Vec<Index>>)`](crate::output::ListIndexesOutput::indexes): <p>A structure that contains the details and status of each index.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListIndexesOutput::next_token): <p>If present, indicates that more output is available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListIndexesError>`](crate::error::ListIndexesError)
    pub fn list_indexes(&self) -> crate::client::fluent_builders::ListIndexes {
        crate::client::fluent_builders::ListIndexes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListSupportedResourceTypes`](crate::client::fluent_builders::ListSupportedResourceTypes) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListSupportedResourceTypes::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListSupportedResourceTypes::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListSupportedResourceTypes::set_next_token): <p>The parameter for receiving additional results if you receive a <code>NextToken</code> response in a previous request. A <code>NextToken</code> response indicates that more output is available. Set this parameter to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListSupportedResourceTypes::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListSupportedResourceTypes::set_max_results): <p>The maximum number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value appropriate to the operation. If additional items exist beyond those included in the current response, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results.</p> <note>   <p>An API operation can return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p>  </note>
    /// - On success, responds with [`ListSupportedResourceTypesOutput`](crate::output::ListSupportedResourceTypesOutput) with field(s):
    ///   - [`resource_types(Option<Vec<SupportedResourceType>>)`](crate::output::ListSupportedResourceTypesOutput::resource_types): <p>The list of resource types supported by Resource Explorer.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListSupportedResourceTypesOutput::next_token): <p>If present, indicates that more output is available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListSupportedResourceTypesError>`](crate::error::ListSupportedResourceTypesError)
    pub fn list_supported_resource_types(
        &self,
    ) -> crate::client::fluent_builders::ListSupportedResourceTypes {
        crate::client::fluent_builders::ListSupportedResourceTypes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view or index that you want to attach tags to.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::ListTagsForResourceOutput::tags): <p>The tag key and value pairs that you want to attach to the specified view or index.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListViews`](crate::client::fluent_builders::ListViews) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListViews::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListViews::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListViews::set_next_token): <p>The parameter for receiving additional results if you receive a <code>NextToken</code> response in a previous request. A <code>NextToken</code> response indicates that more output is available. Set this parameter to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListViews::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListViews::set_max_results): <p>The maximum number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value appropriate to the operation. If additional items exist beyond those included in the current response, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results.</p> <note>   <p>An API operation can return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p>  </note>
    /// - On success, responds with [`ListViewsOutput`](crate::output::ListViewsOutput) with field(s):
    ///   - [`views(Option<Vec<String>>)`](crate::output::ListViewsOutput::views): <p>The list of views available in the Amazon Web Services Region in which you called this operation.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListViewsOutput::next_token): <p>If present, indicates that more output is available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListViewsError>`](crate::error::ListViewsError)
    pub fn list_views(&self) -> crate::client::fluent_builders::ListViews {
        crate::client::fluent_builders::ListViews::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`Search`](crate::client::fluent_builders::Search) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::Search::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`query_string(impl Into<String>)`](crate::client::fluent_builders::Search::query_string) / [`set_query_string(Option<String>)`](crate::client::fluent_builders::Search::set_query_string): <p>A string that includes keywords and filters that specify the resources that you want to include in the results.</p>  <p>For the complete syntax supported by the <code>QueryString</code> parameter, see <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html">Search query syntax reference for Resource Explorer</a>.</p>  <p>The search is completely case insensitive. You can specify an empty string to return all results up to the limit of 1,000 total results.</p> <note>   <p>The operation can return only the first 1,000 results. If the resource you want is not included, then use a different value for <code>QueryString</code> to refine the results.</p>  </note>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::Search::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::Search::set_max_results): <p>The maximum number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value appropriate to the operation. If additional items exist beyond those included in the current response, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results.</p> <note>   <p>An API operation can return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p>  </note>
    ///   - [`view_arn(impl Into<String>)`](crate::client::fluent_builders::Search::view_arn) / [`set_view_arn(Option<String>)`](crate::client::fluent_builders::Search::set_view_arn): <p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view to use for the query. If you don't specify a value for this parameter, then the operation automatically uses the default view for the Amazon Web Services Region in which you called this operation. If the Region either doesn't have a default view or if you don't have permission to use the default view, then the operation fails with a <code>401 Unauthorized</code> exception.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::Search::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::Search::set_next_token): <p>The parameter for receiving additional results if you receive a <code>NextToken</code> response in a previous request. A <code>NextToken</code> response indicates that more output is available. Set this parameter to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.</p>
    /// - On success, responds with [`SearchOutput`](crate::output::SearchOutput) with field(s):
    ///   - [`resources(Option<Vec<Resource>>)`](crate::output::SearchOutput::resources): <p>The list of structures that describe the resources that match the query.</p>
    ///   - [`next_token(Option<String>)`](crate::output::SearchOutput::next_token): <p>If present, indicates that more output is available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
    ///   - [`view_arn(Option<String>)`](crate::output::SearchOutput::view_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view that this operation used to perform the search.</p>
    ///   - [`count(Option<ResourceCount>)`](crate::output::SearchOutput::count): <p>The number of resources that match the query.</p>
    /// - On failure, responds with [`SdkError<SearchError>`](crate::error::SearchError)
    pub fn search(&self) -> crate::client::fluent_builders::Search {
        crate::client::fluent_builders::Search::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the view or index that you want to attach tags to.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>A list of tag key and value pairs that you want to attach to the specified view or index.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the view or index that you want to remove tags from.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>A list of the keys for the tags that you want to remove from the specified view or index.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateIndexType`](crate::client::fluent_builders::UpdateIndexType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::UpdateIndexType::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::UpdateIndexType::set_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the index that you want to update.</p>
    ///   - [`r#type(IndexType)`](crate::client::fluent_builders::UpdateIndexType::type) / [`set_type(Option<IndexType>)`](crate::client::fluent_builders::UpdateIndexType::set_type): <p>The type of the index. To understand the difference between <code>LOCAL</code> and <code>AGGREGATOR</code>, see <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/manage-aggregator-region.html">Turning on cross-Region search</a> in the <i>Amazon Web Services Resource Explorer User Guide</i>.</p>
    /// - On success, responds with [`UpdateIndexTypeOutput`](crate::output::UpdateIndexTypeOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::UpdateIndexTypeOutput::arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the index that you updated.</p>
    ///   - [`r#type(Option<IndexType>)`](crate::output::UpdateIndexTypeOutput::type): <p>Specifies the type of the specified index after the operation completes.</p>
    ///   - [`state(Option<IndexState>)`](crate::output::UpdateIndexTypeOutput::state): <p>Indicates the state of the request to update the index. This operation is asynchronous. Call the <code>GetIndex</code> operation to check for changes.</p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::output::UpdateIndexTypeOutput::last_updated_at): <p>The date and timestamp when the index was last updated.</p>
    /// - On failure, responds with [`SdkError<UpdateIndexTypeError>`](crate::error::UpdateIndexTypeError)
    pub fn update_index_type(&self) -> crate::client::fluent_builders::UpdateIndexType {
        crate::client::fluent_builders::UpdateIndexType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateView`](crate::client::fluent_builders::UpdateView) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`view_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateView::view_arn) / [`set_view_arn(Option<String>)`](crate::client::fluent_builders::UpdateView::set_view_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon resource name (ARN)</a> of the view that you want to modify.</p>
    ///   - [`included_properties(Vec<IncludedProperty>)`](crate::client::fluent_builders::UpdateView::included_properties) / [`set_included_properties(Option<Vec<IncludedProperty>>)`](crate::client::fluent_builders::UpdateView::set_included_properties): <p>Specifies optional fields that you want included in search results from this view. It is a list of objects that each describe a field to include.</p>  <p>The default is an empty list, with no optional fields included in the results.</p>
    ///   - [`filters(SearchFilter)`](crate::client::fluent_builders::UpdateView::filters) / [`set_filters(Option<SearchFilter>)`](crate::client::fluent_builders::UpdateView::set_filters): <p>An array of strings that specify which resources are included in the results of queries made using this view. When you use this view in a <code>Search</code> operation, the filter string is combined with the search's <code>QueryString</code> parameter using a logical <code>AND</code> operator.</p>  <p>For information about the supported syntax, see <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html">Search query reference for Resource Explorer</a> in the <i>Amazon Web Services Resource Explorer User Guide</i>.</p> <important>   <p>This query string in the context of this operation supports only <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-filters">filter prefixes</a> with optional <a href="https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html#query-syntax-operators">operators</a>. It doesn't support free-form text. For example, the string <code>region:us* service:ec2 -tag:stage=prod</code> includes all Amazon EC2 resources in any Amazon Web Services Region that begins with the letters <code>us</code> and is <i>not</i> tagged with a key <code>Stage</code> that has the value <code>prod</code>.</p>  </important>
    /// - On success, responds with [`UpdateViewOutput`](crate::output::UpdateViewOutput) with field(s):
    ///   - [`view(Option<View>)`](crate::output::UpdateViewOutput::view): <p>Details about the view that you changed with this operation.</p>
    /// - On failure, responds with [`SdkError<UpdateViewError>`](crate::error::UpdateViewError)
    pub fn update_view(&self) -> crate::client::fluent_builders::UpdateView {
        crate::client::fluent_builders::UpdateView::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
