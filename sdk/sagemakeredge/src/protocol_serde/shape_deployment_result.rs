// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_deployment_result(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DeploymentResult,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.deployment_name {
        object.key("DeploymentName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.deployment_status {
        object.key("DeploymentStatus").string(var_2.as_str());
    }
    if let Some(var_3) = &input.deployment_status_message {
        object.key("DeploymentStatusMessage").string(var_3.as_str());
    }
    if let Some(var_4) = &input.deployment_start_time {
        object
            .key("DeploymentStartTime")
            .date_time(var_4, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_5) = &input.deployment_end_time {
        object
            .key("DeploymentEndTime")
            .date_time(var_5, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_6) = &input.deployment_models {
        let mut array_7 = object.key("DeploymentModels").start_array();
        for item_8 in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_9 = array_7.value().start_object();
                crate::protocol_serde::shape_deployment_model::ser_deployment_model(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    Ok(())
}
