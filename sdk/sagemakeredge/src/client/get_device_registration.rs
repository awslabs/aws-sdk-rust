// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDeviceRegistration`](crate::operation::get_device_registration::builders::GetDeviceRegistrationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`device_name(impl Into<String>)`](crate::operation::get_device_registration::builders::GetDeviceRegistrationFluentBuilder::device_name) / [`set_device_name(Option<String>)`](crate::operation::get_device_registration::builders::GetDeviceRegistrationFluentBuilder::set_device_name):<br>required: **true**<br><p>The unique name of the device you want to get the registration status from.</p><br>
    ///   - [`device_fleet_name(impl Into<String>)`](crate::operation::get_device_registration::builders::GetDeviceRegistrationFluentBuilder::device_fleet_name) / [`set_device_fleet_name(Option<String>)`](crate::operation::get_device_registration::builders::GetDeviceRegistrationFluentBuilder::set_device_fleet_name):<br>required: **true**<br><p>The name of the fleet that the device belongs to.</p><br>
    /// - On success, responds with [`GetDeviceRegistrationOutput`](crate::operation::get_device_registration::GetDeviceRegistrationOutput) with field(s):
    ///   - [`device_registration(Option<String>)`](crate::operation::get_device_registration::GetDeviceRegistrationOutput::device_registration): <p>Describes if the device is currently registered with SageMaker Edge Manager.</p>
    ///   - [`cache_ttl(Option<String>)`](crate::operation::get_device_registration::GetDeviceRegistrationOutput::cache_ttl): <p>The amount of time, in seconds, that the registration status is stored on the deviceâ€™s cache before it is refreshed.</p>
    /// - On failure, responds with [`SdkError<GetDeviceRegistrationError>`](crate::operation::get_device_registration::GetDeviceRegistrationError)
    pub fn get_device_registration(&self) -> crate::operation::get_device_registration::builders::GetDeviceRegistrationFluentBuilder {
        crate::operation::get_device_registration::builders::GetDeviceRegistrationFluentBuilder::new(self.handle.clone())
    }
}
