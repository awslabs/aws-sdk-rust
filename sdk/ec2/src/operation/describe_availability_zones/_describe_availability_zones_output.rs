// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeAvailabilityZonesOutput {
    /// <p>Information about the Availability Zones, Local Zones, and Wavelength Zones.</p>
    pub availability_zones: ::std::option::Option<::std::vec::Vec<crate::types::AvailabilityZone>>,
    _request_id: Option<String>,
}
impl DescribeAvailabilityZonesOutput {
    /// <p>Information about the Availability Zones, Local Zones, and Wavelength Zones.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.availability_zones.is_none()`.
    pub fn availability_zones(&self) -> &[crate::types::AvailabilityZone] {
        self.availability_zones.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for DescribeAvailabilityZonesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeAvailabilityZonesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeAvailabilityZonesOutput`](crate::operation::describe_availability_zones::DescribeAvailabilityZonesOutput).
    pub fn builder() -> crate::operation::describe_availability_zones::builders::DescribeAvailabilityZonesOutputBuilder {
        crate::operation::describe_availability_zones::builders::DescribeAvailabilityZonesOutputBuilder::default()
    }
}

/// A builder for [`DescribeAvailabilityZonesOutput`](crate::operation::describe_availability_zones::DescribeAvailabilityZonesOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeAvailabilityZonesOutputBuilder {
    pub(crate) availability_zones: ::std::option::Option<::std::vec::Vec<crate::types::AvailabilityZone>>,
    _request_id: Option<String>,
}
impl DescribeAvailabilityZonesOutputBuilder {
    /// Appends an item to `availability_zones`.
    ///
    /// To override the contents of this collection use [`set_availability_zones`](Self::set_availability_zones).
    ///
    /// <p>Information about the Availability Zones, Local Zones, and Wavelength Zones.</p>
    pub fn availability_zones(mut self, input: crate::types::AvailabilityZone) -> Self {
        let mut v = self.availability_zones.unwrap_or_default();
        v.push(input);
        self.availability_zones = ::std::option::Option::Some(v);
        self
    }
    /// <p>Information about the Availability Zones, Local Zones, and Wavelength Zones.</p>
    pub fn set_availability_zones(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AvailabilityZone>>) -> Self {
        self.availability_zones = input;
        self
    }
    /// <p>Information about the Availability Zones, Local Zones, and Wavelength Zones.</p>
    pub fn get_availability_zones(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AvailabilityZone>> {
        &self.availability_zones
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeAvailabilityZonesOutput`](crate::operation::describe_availability_zones::DescribeAvailabilityZonesOutput).
    pub fn build(self) -> crate::operation::describe_availability_zones::DescribeAvailabilityZonesOutput {
        crate::operation::describe_availability_zones::DescribeAvailabilityZonesOutput {
            availability_zones: self.availability_zones,
            _request_id: self._request_id,
        }
    }
}
