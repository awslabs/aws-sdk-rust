// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetIpamPrefixListResolverVersionEntriesInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub dry_run: ::std::option::Option<bool>,
    /// <p>The ID of the IPAM prefix list resolver whose version entries you want to retrieve.</p>
    pub ipam_prefix_list_resolver_id: ::std::option::Option<::std::string::String>,
    /// <p>The version number of the resolver for which to retrieve CIDR entries. If not specified, the latest version is used.</p>
    pub ipam_prefix_list_resolver_version: ::std::option::Option<i64>,
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>The token for the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl GetIpamPrefixListResolverVersionEntriesInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> ::std::option::Option<bool> {
        self.dry_run
    }
    /// <p>The ID of the IPAM prefix list resolver whose version entries you want to retrieve.</p>
    pub fn ipam_prefix_list_resolver_id(&self) -> ::std::option::Option<&str> {
        self.ipam_prefix_list_resolver_id.as_deref()
    }
    /// <p>The version number of the resolver for which to retrieve CIDR entries. If not specified, the latest version is used.</p>
    pub fn ipam_prefix_list_resolver_version(&self) -> ::std::option::Option<i64> {
        self.ipam_prefix_list_resolver_version
    }
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>The token for the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl GetIpamPrefixListResolverVersionEntriesInput {
    /// Creates a new builder-style object to manufacture [`GetIpamPrefixListResolverVersionEntriesInput`](crate::operation::get_ipam_prefix_list_resolver_version_entries::GetIpamPrefixListResolverVersionEntriesInput).
    pub fn builder() -> crate::operation::get_ipam_prefix_list_resolver_version_entries::builders::GetIpamPrefixListResolverVersionEntriesInputBuilder
    {
        crate::operation::get_ipam_prefix_list_resolver_version_entries::builders::GetIpamPrefixListResolverVersionEntriesInputBuilder::default()
    }
}

/// A builder for [`GetIpamPrefixListResolverVersionEntriesInput`](crate::operation::get_ipam_prefix_list_resolver_version_entries::GetIpamPrefixListResolverVersionEntriesInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetIpamPrefixListResolverVersionEntriesInputBuilder {
    pub(crate) dry_run: ::std::option::Option<bool>,
    pub(crate) ipam_prefix_list_resolver_id: ::std::option::Option<::std::string::String>,
    pub(crate) ipam_prefix_list_resolver_version: ::std::option::Option<i64>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl GetIpamPrefixListResolverVersionEntriesInputBuilder {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = ::std::option::Option::Some(input);
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: ::std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn get_dry_run(&self) -> &::std::option::Option<bool> {
        &self.dry_run
    }
    /// <p>The ID of the IPAM prefix list resolver whose version entries you want to retrieve.</p>
    /// This field is required.
    pub fn ipam_prefix_list_resolver_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_prefix_list_resolver_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the IPAM prefix list resolver whose version entries you want to retrieve.</p>
    pub fn set_ipam_prefix_list_resolver_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_prefix_list_resolver_id = input;
        self
    }
    /// <p>The ID of the IPAM prefix list resolver whose version entries you want to retrieve.</p>
    pub fn get_ipam_prefix_list_resolver_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_prefix_list_resolver_id
    }
    /// <p>The version number of the resolver for which to retrieve CIDR entries. If not specified, the latest version is used.</p>
    /// This field is required.
    pub fn ipam_prefix_list_resolver_version(mut self, input: i64) -> Self {
        self.ipam_prefix_list_resolver_version = ::std::option::Option::Some(input);
        self
    }
    /// <p>The version number of the resolver for which to retrieve CIDR entries. If not specified, the latest version is used.</p>
    pub fn set_ipam_prefix_list_resolver_version(mut self, input: ::std::option::Option<i64>) -> Self {
        self.ipam_prefix_list_resolver_version = input;
        self
    }
    /// <p>The version number of the resolver for which to retrieve CIDR entries. If not specified, the latest version is used.</p>
    pub fn get_ipam_prefix_list_resolver_version(&self) -> &::std::option::Option<i64> {
        &self.ipam_prefix_list_resolver_version
    }
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>The token for the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token for the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token for the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`GetIpamPrefixListResolverVersionEntriesInput`](crate::operation::get_ipam_prefix_list_resolver_version_entries::GetIpamPrefixListResolverVersionEntriesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_ipam_prefix_list_resolver_version_entries::GetIpamPrefixListResolverVersionEntriesInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_ipam_prefix_list_resolver_version_entries::GetIpamPrefixListResolverVersionEntriesInput {
                dry_run: self.dry_run,
                ipam_prefix_list_resolver_id: self.ipam_prefix_list_resolver_id,
                ipam_prefix_list_resolver_version: self.ipam_prefix_list_resolver_version,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
