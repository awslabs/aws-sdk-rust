// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the output for DescribeReservedInstances.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeReservedInstancesOutput {
    /// <p>A list of Reserved Instances.</p>
    #[doc(hidden)]
    pub reserved_instances: std::option::Option<std::vec::Vec<crate::types::ReservedInstances>>,
    _request_id: Option<String>,
}
impl DescribeReservedInstancesOutput {
    /// <p>A list of Reserved Instances.</p>
    pub fn reserved_instances(&self) -> std::option::Option<&[crate::types::ReservedInstances]> {
        self.reserved_instances.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeReservedInstancesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeReservedInstancesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeReservedInstancesOutput`](crate::operation::describe_reserved_instances::DescribeReservedInstancesOutput).
    pub fn builder() -> crate::operation::describe_reserved_instances::builders::DescribeReservedInstancesOutputBuilder{
        crate::operation::describe_reserved_instances::builders::DescribeReservedInstancesOutputBuilder::default()
    }
}

/// A builder for [`DescribeReservedInstancesOutput`](crate::operation::describe_reserved_instances::DescribeReservedInstancesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeReservedInstancesOutputBuilder {
    pub(crate) reserved_instances:
        std::option::Option<std::vec::Vec<crate::types::ReservedInstances>>,
    _request_id: Option<String>,
}
impl DescribeReservedInstancesOutputBuilder {
    /// Appends an item to `reserved_instances`.
    ///
    /// To override the contents of this collection use [`set_reserved_instances`](Self::set_reserved_instances).
    ///
    /// <p>A list of Reserved Instances.</p>
    pub fn reserved_instances(mut self, input: crate::types::ReservedInstances) -> Self {
        let mut v = self.reserved_instances.unwrap_or_default();
        v.push(input);
        self.reserved_instances = Some(v);
        self
    }
    /// <p>A list of Reserved Instances.</p>
    pub fn set_reserved_instances(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ReservedInstances>>,
    ) -> Self {
        self.reserved_instances = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeReservedInstancesOutput`](crate::operation::describe_reserved_instances::DescribeReservedInstancesOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_reserved_instances::DescribeReservedInstancesOutput {
        crate::operation::describe_reserved_instances::DescribeReservedInstancesOutput {
            reserved_instances: self.reserved_instances,
            _request_id: self._request_id,
        }
    }
}
