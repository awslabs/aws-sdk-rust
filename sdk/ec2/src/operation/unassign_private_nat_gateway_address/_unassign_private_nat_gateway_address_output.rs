// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UnassignPrivateNatGatewayAddressOutput {
    /// <p>The ID of the NAT gateway.</p>
    pub nat_gateway_id: ::std::option::Option<::std::string::String>,
    /// <p>Information about the NAT gateway IP addresses.</p>
    pub nat_gateway_addresses: ::std::option::Option<::std::vec::Vec<crate::types::NatGatewayAddress>>,
    _request_id: Option<String>,
}
impl UnassignPrivateNatGatewayAddressOutput {
    /// <p>The ID of the NAT gateway.</p>
    pub fn nat_gateway_id(&self) -> ::std::option::Option<&str> {
        self.nat_gateway_id.as_deref()
    }
    /// <p>Information about the NAT gateway IP addresses.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.nat_gateway_addresses.is_none()`.
    pub fn nat_gateway_addresses(&self) -> &[crate::types::NatGatewayAddress] {
        self.nat_gateway_addresses.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for UnassignPrivateNatGatewayAddressOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UnassignPrivateNatGatewayAddressOutput {
    /// Creates a new builder-style object to manufacture [`UnassignPrivateNatGatewayAddressOutput`](crate::operation::unassign_private_nat_gateway_address::UnassignPrivateNatGatewayAddressOutput).
    pub fn builder() -> crate::operation::unassign_private_nat_gateway_address::builders::UnassignPrivateNatGatewayAddressOutputBuilder {
        crate::operation::unassign_private_nat_gateway_address::builders::UnassignPrivateNatGatewayAddressOutputBuilder::default()
    }
}

/// A builder for [`UnassignPrivateNatGatewayAddressOutput`](crate::operation::unassign_private_nat_gateway_address::UnassignPrivateNatGatewayAddressOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UnassignPrivateNatGatewayAddressOutputBuilder {
    pub(crate) nat_gateway_id: ::std::option::Option<::std::string::String>,
    pub(crate) nat_gateway_addresses: ::std::option::Option<::std::vec::Vec<crate::types::NatGatewayAddress>>,
    _request_id: Option<String>,
}
impl UnassignPrivateNatGatewayAddressOutputBuilder {
    /// <p>The ID of the NAT gateway.</p>
    pub fn nat_gateway_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.nat_gateway_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the NAT gateway.</p>
    pub fn set_nat_gateway_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.nat_gateway_id = input;
        self
    }
    /// <p>The ID of the NAT gateway.</p>
    pub fn get_nat_gateway_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.nat_gateway_id
    }
    /// Appends an item to `nat_gateway_addresses`.
    ///
    /// To override the contents of this collection use [`set_nat_gateway_addresses`](Self::set_nat_gateway_addresses).
    ///
    /// <p>Information about the NAT gateway IP addresses.</p>
    pub fn nat_gateway_addresses(mut self, input: crate::types::NatGatewayAddress) -> Self {
        let mut v = self.nat_gateway_addresses.unwrap_or_default();
        v.push(input);
        self.nat_gateway_addresses = ::std::option::Option::Some(v);
        self
    }
    /// <p>Information about the NAT gateway IP addresses.</p>
    pub fn set_nat_gateway_addresses(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::NatGatewayAddress>>) -> Self {
        self.nat_gateway_addresses = input;
        self
    }
    /// <p>Information about the NAT gateway IP addresses.</p>
    pub fn get_nat_gateway_addresses(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::NatGatewayAddress>> {
        &self.nat_gateway_addresses
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UnassignPrivateNatGatewayAddressOutput`](crate::operation::unassign_private_nat_gateway_address::UnassignPrivateNatGatewayAddressOutput).
    pub fn build(self) -> crate::operation::unassign_private_nat_gateway_address::UnassignPrivateNatGatewayAddressOutput {
        crate::operation::unassign_private_nat_gateway_address::UnassignPrivateNatGatewayAddressOutput {
            nat_gateway_id: self.nat_gateway_id,
            nat_gateway_addresses: self.nat_gateway_addresses,
            _request_id: self._request_id,
        }
    }
}
