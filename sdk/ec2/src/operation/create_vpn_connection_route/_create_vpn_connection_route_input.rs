// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the parameters for CreateVpnConnectionRoute.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateVpnConnectionRouteInput {
    /// <p>The CIDR block associated with the local subnet of the customer network.</p>
    pub destination_cidr_block: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the VPN connection.</p>
    pub vpn_connection_id: ::std::option::Option<::std::string::String>,
}
impl CreateVpnConnectionRouteInput {
    /// <p>The CIDR block associated with the local subnet of the customer network.</p>
    pub fn destination_cidr_block(&self) -> ::std::option::Option<&str> {
        self.destination_cidr_block.as_deref()
    }
    /// <p>The ID of the VPN connection.</p>
    pub fn vpn_connection_id(&self) -> ::std::option::Option<&str> {
        self.vpn_connection_id.as_deref()
    }
}
impl CreateVpnConnectionRouteInput {
    /// Creates a new builder-style object to manufacture [`CreateVpnConnectionRouteInput`](crate::operation::create_vpn_connection_route::CreateVpnConnectionRouteInput).
    pub fn builder() -> crate::operation::create_vpn_connection_route::builders::CreateVpnConnectionRouteInputBuilder {
        crate::operation::create_vpn_connection_route::builders::CreateVpnConnectionRouteInputBuilder::default()
    }
}

/// A builder for [`CreateVpnConnectionRouteInput`](crate::operation::create_vpn_connection_route::CreateVpnConnectionRouteInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateVpnConnectionRouteInputBuilder {
    pub(crate) destination_cidr_block: ::std::option::Option<::std::string::String>,
    pub(crate) vpn_connection_id: ::std::option::Option<::std::string::String>,
}
impl CreateVpnConnectionRouteInputBuilder {
    /// <p>The CIDR block associated with the local subnet of the customer network.</p>
    /// This field is required.
    pub fn destination_cidr_block(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.destination_cidr_block = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The CIDR block associated with the local subnet of the customer network.</p>
    pub fn set_destination_cidr_block(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.destination_cidr_block = input;
        self
    }
    /// <p>The CIDR block associated with the local subnet of the customer network.</p>
    pub fn get_destination_cidr_block(&self) -> &::std::option::Option<::std::string::String> {
        &self.destination_cidr_block
    }
    /// <p>The ID of the VPN connection.</p>
    /// This field is required.
    pub fn vpn_connection_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vpn_connection_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the VPN connection.</p>
    pub fn set_vpn_connection_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vpn_connection_id = input;
        self
    }
    /// <p>The ID of the VPN connection.</p>
    pub fn get_vpn_connection_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.vpn_connection_id
    }
    /// Consumes the builder and constructs a [`CreateVpnConnectionRouteInput`](crate::operation::create_vpn_connection_route::CreateVpnConnectionRouteInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_vpn_connection_route::CreateVpnConnectionRouteInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_vpn_connection_route::CreateVpnConnectionRouteInput {
            destination_cidr_block: self.destination_cidr_block,
            vpn_connection_id: self.vpn_connection_id,
        })
    }
}
