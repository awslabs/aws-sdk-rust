// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateTrafficMirrorFilterOutput {
    /// <p>Information about the Traffic Mirror filter.</p>
    #[doc(hidden)]
    pub traffic_mirror_filter: std::option::Option<crate::types::TrafficMirrorFilter>,
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateTrafficMirrorFilterOutput {
    /// <p>Information about the Traffic Mirror filter.</p>
    pub fn traffic_mirror_filter(&self) -> std::option::Option<&crate::types::TrafficMirrorFilter> {
        self.traffic_mirror_filter.as_ref()
    }
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for CreateTrafficMirrorFilterOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateTrafficMirrorFilterOutput {
    /// Creates a new builder-style object to manufacture [`CreateTrafficMirrorFilterOutput`](crate::operation::create_traffic_mirror_filter::CreateTrafficMirrorFilterOutput).
    pub fn builder() -> crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterOutputBuilder{
        crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterOutputBuilder::default()
    }
}

/// A builder for [`CreateTrafficMirrorFilterOutput`](crate::operation::create_traffic_mirror_filter::CreateTrafficMirrorFilterOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateTrafficMirrorFilterOutputBuilder {
    pub(crate) traffic_mirror_filter: std::option::Option<crate::types::TrafficMirrorFilter>,
    pub(crate) client_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateTrafficMirrorFilterOutputBuilder {
    /// <p>Information about the Traffic Mirror filter.</p>
    pub fn traffic_mirror_filter(mut self, input: crate::types::TrafficMirrorFilter) -> Self {
        self.traffic_mirror_filter = Some(input);
        self
    }
    /// <p>Information about the Traffic Mirror filter.</p>
    pub fn set_traffic_mirror_filter(
        mut self,
        input: std::option::Option<crate::types::TrafficMirrorFilter>,
    ) -> Self {
        self.traffic_mirror_filter = input;
        self
    }
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateTrafficMirrorFilterOutput`](crate::operation::create_traffic_mirror_filter::CreateTrafficMirrorFilterOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_traffic_mirror_filter::CreateTrafficMirrorFilterOutput {
        crate::operation::create_traffic_mirror_filter::CreateTrafficMirrorFilterOutput {
            traffic_mirror_filter: self.traffic_mirror_filter,
            client_token: self.client_token,
            _request_id: self._request_id,
        }
    }
}
