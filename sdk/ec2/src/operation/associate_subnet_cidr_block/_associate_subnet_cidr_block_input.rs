// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateSubnetCidrBlockInput {
    /// <p>The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.</p>
    #[doc(hidden)]
    pub ipv6_cidr_block: std::option::Option<std::string::String>,
    /// <p>The ID of your subnet.</p>
    #[doc(hidden)]
    pub subnet_id: std::option::Option<std::string::String>,
}
impl AssociateSubnetCidrBlockInput {
    /// <p>The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.</p>
    pub fn ipv6_cidr_block(&self) -> std::option::Option<&str> {
        self.ipv6_cidr_block.as_deref()
    }
    /// <p>The ID of your subnet.</p>
    pub fn subnet_id(&self) -> std::option::Option<&str> {
        self.subnet_id.as_deref()
    }
}
impl AssociateSubnetCidrBlockInput {
    /// Creates a new builder-style object to manufacture [`AssociateSubnetCidrBlockInput`](crate::operation::associate_subnet_cidr_block::AssociateSubnetCidrBlockInput).
    pub fn builder(
    ) -> crate::operation::associate_subnet_cidr_block::builders::AssociateSubnetCidrBlockInputBuilder
    {
        crate::operation::associate_subnet_cidr_block::builders::AssociateSubnetCidrBlockInputBuilder::default()
    }
}

/// A builder for [`AssociateSubnetCidrBlockInput`](crate::operation::associate_subnet_cidr_block::AssociateSubnetCidrBlockInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociateSubnetCidrBlockInputBuilder {
    pub(crate) ipv6_cidr_block: std::option::Option<std::string::String>,
    pub(crate) subnet_id: std::option::Option<std::string::String>,
}
impl AssociateSubnetCidrBlockInputBuilder {
    /// <p>The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.</p>
    pub fn ipv6_cidr_block(mut self, input: impl Into<std::string::String>) -> Self {
        self.ipv6_cidr_block = Some(input.into());
        self
    }
    /// <p>The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.</p>
    pub fn set_ipv6_cidr_block(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ipv6_cidr_block = input;
        self
    }
    /// <p>The ID of your subnet.</p>
    pub fn subnet_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.subnet_id = Some(input.into());
        self
    }
    /// <p>The ID of your subnet.</p>
    pub fn set_subnet_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.subnet_id = input;
        self
    }
    /// Consumes the builder and constructs a [`AssociateSubnetCidrBlockInput`](crate::operation::associate_subnet_cidr_block::AssociateSubnetCidrBlockInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::associate_subnet_cidr_block::AssociateSubnetCidrBlockInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::associate_subnet_cidr_block::AssociateSubnetCidrBlockInput {
                ipv6_cidr_block: self.ipv6_cidr_block,
                subnet_id: self.subnet_id,
            },
        )
    }
}
