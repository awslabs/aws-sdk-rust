// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyHostsOutput {
    /// <p>The IDs of the Dedicated Hosts that were successfully modified.</p>
    #[doc(hidden)]
    pub successful: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.</p>
    #[doc(hidden)]
    pub unsuccessful: std::option::Option<std::vec::Vec<crate::types::UnsuccessfulItem>>,
    _request_id: Option<String>,
}
impl ModifyHostsOutput {
    /// <p>The IDs of the Dedicated Hosts that were successfully modified.</p>
    pub fn successful(&self) -> std::option::Option<&[std::string::String]> {
        self.successful.as_deref()
    }
    /// <p>The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.</p>
    pub fn unsuccessful(&self) -> std::option::Option<&[crate::types::UnsuccessfulItem]> {
        self.unsuccessful.as_deref()
    }
}
impl aws_http::request_id::RequestId for ModifyHostsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ModifyHostsOutput {
    /// Creates a new builder-style object to manufacture [`ModifyHostsOutput`](crate::operation::modify_hosts::ModifyHostsOutput).
    pub fn builder() -> crate::operation::modify_hosts::builders::ModifyHostsOutputBuilder {
        crate::operation::modify_hosts::builders::ModifyHostsOutputBuilder::default()
    }
}

/// A builder for [`ModifyHostsOutput`](crate::operation::modify_hosts::ModifyHostsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModifyHostsOutputBuilder {
    pub(crate) successful: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) unsuccessful: std::option::Option<std::vec::Vec<crate::types::UnsuccessfulItem>>,
    _request_id: Option<String>,
}
impl ModifyHostsOutputBuilder {
    /// Appends an item to `successful`.
    ///
    /// To override the contents of this collection use [`set_successful`](Self::set_successful).
    ///
    /// <p>The IDs of the Dedicated Hosts that were successfully modified.</p>
    pub fn successful(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.successful.unwrap_or_default();
        v.push(input.into());
        self.successful = Some(v);
        self
    }
    /// <p>The IDs of the Dedicated Hosts that were successfully modified.</p>
    pub fn set_successful(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.successful = input;
        self
    }
    /// Appends an item to `unsuccessful`.
    ///
    /// To override the contents of this collection use [`set_unsuccessful`](Self::set_unsuccessful).
    ///
    /// <p>The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.</p>
    pub fn unsuccessful(mut self, input: crate::types::UnsuccessfulItem) -> Self {
        let mut v = self.unsuccessful.unwrap_or_default();
        v.push(input);
        self.unsuccessful = Some(v);
        self
    }
    /// <p>The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.</p>
    pub fn set_unsuccessful(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::UnsuccessfulItem>>,
    ) -> Self {
        self.unsuccessful = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ModifyHostsOutput`](crate::operation::modify_hosts::ModifyHostsOutput).
    pub fn build(self) -> crate::operation::modify_hosts::ModifyHostsOutput {
        crate::operation::modify_hosts::ModifyHostsOutput {
            successful: self.successful,
            unsuccessful: self.unsuccessful,
            _request_id: self._request_id,
        }
    }
}
