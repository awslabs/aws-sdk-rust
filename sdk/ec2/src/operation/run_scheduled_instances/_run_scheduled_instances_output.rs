// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the output of RunScheduledInstances.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RunScheduledInstancesOutput {
    /// <p>The IDs of the newly launched instances.</p>
    #[doc(hidden)]
    pub instance_id_set: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl RunScheduledInstancesOutput {
    /// <p>The IDs of the newly launched instances.</p>
    pub fn instance_id_set(&self) -> std::option::Option<&[std::string::String]> {
        self.instance_id_set.as_deref()
    }
}
impl aws_http::request_id::RequestId for RunScheduledInstancesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RunScheduledInstancesOutput {
    /// Creates a new builder-style object to manufacture [`RunScheduledInstancesOutput`](crate::operation::run_scheduled_instances::RunScheduledInstancesOutput).
    pub fn builder(
    ) -> crate::operation::run_scheduled_instances::builders::RunScheduledInstancesOutputBuilder
    {
        crate::operation::run_scheduled_instances::builders::RunScheduledInstancesOutputBuilder::default()
    }
}

/// A builder for [`RunScheduledInstancesOutput`](crate::operation::run_scheduled_instances::RunScheduledInstancesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RunScheduledInstancesOutputBuilder {
    pub(crate) instance_id_set: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl RunScheduledInstancesOutputBuilder {
    /// Appends an item to `instance_id_set`.
    ///
    /// To override the contents of this collection use [`set_instance_id_set`](Self::set_instance_id_set).
    ///
    /// <p>The IDs of the newly launched instances.</p>
    pub fn instance_id_set(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.instance_id_set.unwrap_or_default();
        v.push(input.into());
        self.instance_id_set = Some(v);
        self
    }
    /// <p>The IDs of the newly launched instances.</p>
    pub fn set_instance_id_set(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.instance_id_set = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RunScheduledInstancesOutput`](crate::operation::run_scheduled_instances::RunScheduledInstancesOutput).
    pub fn build(self) -> crate::operation::run_scheduled_instances::RunScheduledInstancesOutput {
        crate::operation::run_scheduled_instances::RunScheduledInstancesOutput {
            instance_id_set: self.instance_id_set,
            _request_id: self._request_id,
        }
    }
}
