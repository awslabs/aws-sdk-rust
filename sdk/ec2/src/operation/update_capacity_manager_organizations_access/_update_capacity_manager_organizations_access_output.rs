// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateCapacityManagerOrganizationsAccessOutput {
    /// <p>The current status of Capacity Manager after the update operation.</p>
    pub capacity_manager_status: ::std::option::Option<crate::types::CapacityManagerStatus>,
    /// <p>The updated Organizations access setting indicating whether cross-account data aggregation is enabled.</p>
    pub organizations_access: ::std::option::Option<bool>,
    _request_id: Option<String>,
}
impl UpdateCapacityManagerOrganizationsAccessOutput {
    /// <p>The current status of Capacity Manager after the update operation.</p>
    pub fn capacity_manager_status(&self) -> ::std::option::Option<&crate::types::CapacityManagerStatus> {
        self.capacity_manager_status.as_ref()
    }
    /// <p>The updated Organizations access setting indicating whether cross-account data aggregation is enabled.</p>
    pub fn organizations_access(&self) -> ::std::option::Option<bool> {
        self.organizations_access
    }
}
impl ::aws_types::request_id::RequestId for UpdateCapacityManagerOrganizationsAccessOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateCapacityManagerOrganizationsAccessOutput {
    /// Creates a new builder-style object to manufacture [`UpdateCapacityManagerOrganizationsAccessOutput`](crate::operation::update_capacity_manager_organizations_access::UpdateCapacityManagerOrganizationsAccessOutput).
    pub fn builder() -> crate::operation::update_capacity_manager_organizations_access::builders::UpdateCapacityManagerOrganizationsAccessOutputBuilder
    {
        crate::operation::update_capacity_manager_organizations_access::builders::UpdateCapacityManagerOrganizationsAccessOutputBuilder::default()
    }
}

/// A builder for [`UpdateCapacityManagerOrganizationsAccessOutput`](crate::operation::update_capacity_manager_organizations_access::UpdateCapacityManagerOrganizationsAccessOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateCapacityManagerOrganizationsAccessOutputBuilder {
    pub(crate) capacity_manager_status: ::std::option::Option<crate::types::CapacityManagerStatus>,
    pub(crate) organizations_access: ::std::option::Option<bool>,
    _request_id: Option<String>,
}
impl UpdateCapacityManagerOrganizationsAccessOutputBuilder {
    /// <p>The current status of Capacity Manager after the update operation.</p>
    pub fn capacity_manager_status(mut self, input: crate::types::CapacityManagerStatus) -> Self {
        self.capacity_manager_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of Capacity Manager after the update operation.</p>
    pub fn set_capacity_manager_status(mut self, input: ::std::option::Option<crate::types::CapacityManagerStatus>) -> Self {
        self.capacity_manager_status = input;
        self
    }
    /// <p>The current status of Capacity Manager after the update operation.</p>
    pub fn get_capacity_manager_status(&self) -> &::std::option::Option<crate::types::CapacityManagerStatus> {
        &self.capacity_manager_status
    }
    /// <p>The updated Organizations access setting indicating whether cross-account data aggregation is enabled.</p>
    pub fn organizations_access(mut self, input: bool) -> Self {
        self.organizations_access = ::std::option::Option::Some(input);
        self
    }
    /// <p>The updated Organizations access setting indicating whether cross-account data aggregation is enabled.</p>
    pub fn set_organizations_access(mut self, input: ::std::option::Option<bool>) -> Self {
        self.organizations_access = input;
        self
    }
    /// <p>The updated Organizations access setting indicating whether cross-account data aggregation is enabled.</p>
    pub fn get_organizations_access(&self) -> &::std::option::Option<bool> {
        &self.organizations_access
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateCapacityManagerOrganizationsAccessOutput`](crate::operation::update_capacity_manager_organizations_access::UpdateCapacityManagerOrganizationsAccessOutput).
    pub fn build(self) -> crate::operation::update_capacity_manager_organizations_access::UpdateCapacityManagerOrganizationsAccessOutput {
        crate::operation::update_capacity_manager_organizations_access::UpdateCapacityManagerOrganizationsAccessOutput {
            capacity_manager_status: self.capacity_manager_status,
            organizations_access: self.organizations_access,
            _request_id: self._request_id,
        }
    }
}
