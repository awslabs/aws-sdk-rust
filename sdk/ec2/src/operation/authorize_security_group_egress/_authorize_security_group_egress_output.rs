// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AuthorizeSecurityGroupEgressOutput {
    /// <p>Returns <code>true</code> if the request succeeds; otherwise, returns an error.</p>
    #[doc(hidden)]
    pub r#return: std::option::Option<bool>,
    /// <p>Information about the outbound (egress) security group rules that were added.</p>
    #[doc(hidden)]
    pub security_group_rules: std::option::Option<std::vec::Vec<crate::types::SecurityGroupRule>>,
    _request_id: Option<String>,
}
impl AuthorizeSecurityGroupEgressOutput {
    /// <p>Returns <code>true</code> if the request succeeds; otherwise, returns an error.</p>
    pub fn r#return(&self) -> std::option::Option<bool> {
        self.r#return
    }
    /// <p>Information about the outbound (egress) security group rules that were added.</p>
    pub fn security_group_rules(&self) -> std::option::Option<&[crate::types::SecurityGroupRule]> {
        self.security_group_rules.as_deref()
    }
}
impl aws_http::request_id::RequestId for AuthorizeSecurityGroupEgressOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AuthorizeSecurityGroupEgressOutput {
    /// Creates a new builder-style object to manufacture [`AuthorizeSecurityGroupEgressOutput`](crate::operation::authorize_security_group_egress::AuthorizeSecurityGroupEgressOutput).
    pub fn builder() -> crate::operation::authorize_security_group_egress::builders::AuthorizeSecurityGroupEgressOutputBuilder{
        crate::operation::authorize_security_group_egress::builders::AuthorizeSecurityGroupEgressOutputBuilder::default()
    }
}

/// A builder for [`AuthorizeSecurityGroupEgressOutput`](crate::operation::authorize_security_group_egress::AuthorizeSecurityGroupEgressOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AuthorizeSecurityGroupEgressOutputBuilder {
    pub(crate) r#return: std::option::Option<bool>,
    pub(crate) security_group_rules:
        std::option::Option<std::vec::Vec<crate::types::SecurityGroupRule>>,
    _request_id: Option<String>,
}
impl AuthorizeSecurityGroupEgressOutputBuilder {
    /// <p>Returns <code>true</code> if the request succeeds; otherwise, returns an error.</p>
    pub fn r#return(mut self, input: bool) -> Self {
        self.r#return = Some(input);
        self
    }
    /// <p>Returns <code>true</code> if the request succeeds; otherwise, returns an error.</p>
    pub fn set_return(mut self, input: std::option::Option<bool>) -> Self {
        self.r#return = input;
        self
    }
    /// Appends an item to `security_group_rules`.
    ///
    /// To override the contents of this collection use [`set_security_group_rules`](Self::set_security_group_rules).
    ///
    /// <p>Information about the outbound (egress) security group rules that were added.</p>
    pub fn security_group_rules(mut self, input: crate::types::SecurityGroupRule) -> Self {
        let mut v = self.security_group_rules.unwrap_or_default();
        v.push(input);
        self.security_group_rules = Some(v);
        self
    }
    /// <p>Information about the outbound (egress) security group rules that were added.</p>
    pub fn set_security_group_rules(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::SecurityGroupRule>>,
    ) -> Self {
        self.security_group_rules = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AuthorizeSecurityGroupEgressOutput`](crate::operation::authorize_security_group_egress::AuthorizeSecurityGroupEgressOutput).
    pub fn build(
        self,
    ) -> crate::operation::authorize_security_group_egress::AuthorizeSecurityGroupEgressOutput {
        crate::operation::authorize_security_group_egress::AuthorizeSecurityGroupEgressOutput {
            r#return: self.r#return,
            security_group_rules: self.security_group_rules,
            _request_id: self._request_id,
        }
    }
}
