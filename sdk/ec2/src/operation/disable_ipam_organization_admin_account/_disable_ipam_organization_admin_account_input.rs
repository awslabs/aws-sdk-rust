// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DisableIpamOrganizationAdminAccountInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub dry_run: ::std::option::Option<bool>,
    /// <p>The Organizations member account ID that you want to disable as IPAM account.</p>
    pub delegated_admin_account_id: ::std::option::Option<::std::string::String>,
}
impl DisableIpamOrganizationAdminAccountInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> ::std::option::Option<bool> {
        self.dry_run
    }
    /// <p>The Organizations member account ID that you want to disable as IPAM account.</p>
    pub fn delegated_admin_account_id(&self) -> ::std::option::Option<&str> {
        self.delegated_admin_account_id.as_deref()
    }
}
impl DisableIpamOrganizationAdminAccountInput {
    /// Creates a new builder-style object to manufacture [`DisableIpamOrganizationAdminAccountInput`](crate::operation::disable_ipam_organization_admin_account::DisableIpamOrganizationAdminAccountInput).
    pub fn builder() -> crate::operation::disable_ipam_organization_admin_account::builders::DisableIpamOrganizationAdminAccountInputBuilder {
        crate::operation::disable_ipam_organization_admin_account::builders::DisableIpamOrganizationAdminAccountInputBuilder::default()
    }
}

/// A builder for [`DisableIpamOrganizationAdminAccountInput`](crate::operation::disable_ipam_organization_admin_account::DisableIpamOrganizationAdminAccountInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DisableIpamOrganizationAdminAccountInputBuilder {
    pub(crate) dry_run: ::std::option::Option<bool>,
    pub(crate) delegated_admin_account_id: ::std::option::Option<::std::string::String>,
}
impl DisableIpamOrganizationAdminAccountInputBuilder {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = ::std::option::Option::Some(input);
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: ::std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn get_dry_run(&self) -> &::std::option::Option<bool> {
        &self.dry_run
    }
    /// <p>The Organizations member account ID that you want to disable as IPAM account.</p>
    /// This field is required.
    pub fn delegated_admin_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.delegated_admin_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Organizations member account ID that you want to disable as IPAM account.</p>
    pub fn set_delegated_admin_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.delegated_admin_account_id = input;
        self
    }
    /// <p>The Organizations member account ID that you want to disable as IPAM account.</p>
    pub fn get_delegated_admin_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.delegated_admin_account_id
    }
    /// Consumes the builder and constructs a [`DisableIpamOrganizationAdminAccountInput`](crate::operation::disable_ipam_organization_admin_account::DisableIpamOrganizationAdminAccountInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::disable_ipam_organization_admin_account::DisableIpamOrganizationAdminAccountInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::disable_ipam_organization_admin_account::DisableIpamOrganizationAdminAccountInput {
                dry_run: self.dry_run,
                delegated_admin_account_id: self.delegated_admin_account_id,
            },
        )
    }
}
