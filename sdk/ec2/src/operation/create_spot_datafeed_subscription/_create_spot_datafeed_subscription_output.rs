// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the output of CreateSpotDatafeedSubscription.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateSpotDatafeedSubscriptionOutput {
    /// <p>The Spot Instance data feed subscription.</p>
    #[doc(hidden)]
    pub spot_datafeed_subscription: std::option::Option<crate::types::SpotDatafeedSubscription>,
    _request_id: Option<String>,
}
impl CreateSpotDatafeedSubscriptionOutput {
    /// <p>The Spot Instance data feed subscription.</p>
    pub fn spot_datafeed_subscription(
        &self,
    ) -> std::option::Option<&crate::types::SpotDatafeedSubscription> {
        self.spot_datafeed_subscription.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateSpotDatafeedSubscriptionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateSpotDatafeedSubscriptionOutput {
    /// Creates a new builder-style object to manufacture [`CreateSpotDatafeedSubscriptionOutput`](crate::operation::create_spot_datafeed_subscription::CreateSpotDatafeedSubscriptionOutput).
    pub fn builder() -> crate::operation::create_spot_datafeed_subscription::builders::CreateSpotDatafeedSubscriptionOutputBuilder{
        crate::operation::create_spot_datafeed_subscription::builders::CreateSpotDatafeedSubscriptionOutputBuilder::default()
    }
}

/// A builder for [`CreateSpotDatafeedSubscriptionOutput`](crate::operation::create_spot_datafeed_subscription::CreateSpotDatafeedSubscriptionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateSpotDatafeedSubscriptionOutputBuilder {
    pub(crate) spot_datafeed_subscription:
        std::option::Option<crate::types::SpotDatafeedSubscription>,
    _request_id: Option<String>,
}
impl CreateSpotDatafeedSubscriptionOutputBuilder {
    /// <p>The Spot Instance data feed subscription.</p>
    pub fn spot_datafeed_subscription(
        mut self,
        input: crate::types::SpotDatafeedSubscription,
    ) -> Self {
        self.spot_datafeed_subscription = Some(input);
        self
    }
    /// <p>The Spot Instance data feed subscription.</p>
    pub fn set_spot_datafeed_subscription(
        mut self,
        input: std::option::Option<crate::types::SpotDatafeedSubscription>,
    ) -> Self {
        self.spot_datafeed_subscription = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateSpotDatafeedSubscriptionOutput`](crate::operation::create_spot_datafeed_subscription::CreateSpotDatafeedSubscriptionOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_spot_datafeed_subscription::CreateSpotDatafeedSubscriptionOutput
    {
        crate::operation::create_spot_datafeed_subscription::CreateSpotDatafeedSubscriptionOutput {
            spot_datafeed_subscription: self.spot_datafeed_subscription,
            _request_id: self._request_id,
        }
    }
}
