// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the output of CreateNetworkInterfacePermission.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateNetworkInterfacePermissionOutput {
    /// <p>Information about the permission for the network interface.</p>
    #[doc(hidden)]
    pub interface_permission: std::option::Option<crate::types::NetworkInterfacePermission>,
    _request_id: Option<String>,
}
impl CreateNetworkInterfacePermissionOutput {
    /// <p>Information about the permission for the network interface.</p>
    pub fn interface_permission(
        &self,
    ) -> std::option::Option<&crate::types::NetworkInterfacePermission> {
        self.interface_permission.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateNetworkInterfacePermissionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateNetworkInterfacePermissionOutput {
    /// Creates a new builder-style object to manufacture [`CreateNetworkInterfacePermissionOutput`](crate::operation::create_network_interface_permission::CreateNetworkInterfacePermissionOutput).
    pub fn builder() -> crate::operation::create_network_interface_permission::builders::CreateNetworkInterfacePermissionOutputBuilder{
        crate::operation::create_network_interface_permission::builders::CreateNetworkInterfacePermissionOutputBuilder::default()
    }
}

/// A builder for [`CreateNetworkInterfacePermissionOutput`](crate::operation::create_network_interface_permission::CreateNetworkInterfacePermissionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateNetworkInterfacePermissionOutputBuilder {
    pub(crate) interface_permission: std::option::Option<crate::types::NetworkInterfacePermission>,
    _request_id: Option<String>,
}
impl CreateNetworkInterfacePermissionOutputBuilder {
    /// <p>Information about the permission for the network interface.</p>
    pub fn interface_permission(mut self, input: crate::types::NetworkInterfacePermission) -> Self {
        self.interface_permission = Some(input);
        self
    }
    /// <p>Information about the permission for the network interface.</p>
    pub fn set_interface_permission(
        mut self,
        input: std::option::Option<crate::types::NetworkInterfacePermission>,
    ) -> Self {
        self.interface_permission = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateNetworkInterfacePermissionOutput`](crate::operation::create_network_interface_permission::CreateNetworkInterfacePermissionOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_network_interface_permission::CreateNetworkInterfacePermissionOutput
    {
        crate::operation::create_network_interface_permission::CreateNetworkInterfacePermissionOutput {
            interface_permission: self.interface_permission
            ,
            _request_id: self._request_id,
        }
    }
}
