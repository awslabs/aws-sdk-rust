// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the parameters for PurchaseScheduledInstances.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PurchaseScheduledInstancesInput {
    /// <p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    #[doc(hidden)]
    pub dry_run: std::option::Option<bool>,
    /// <p>The purchase requests.</p>
    #[doc(hidden)]
    pub purchase_requests: std::option::Option<std::vec::Vec<crate::types::PurchaseRequest>>,
}
impl PurchaseScheduledInstancesInput {
    /// <p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> std::option::Option<bool> {
        self.dry_run
    }
    /// <p>The purchase requests.</p>
    pub fn purchase_requests(&self) -> std::option::Option<&[crate::types::PurchaseRequest]> {
        self.purchase_requests.as_deref()
    }
}
impl PurchaseScheduledInstancesInput {
    /// Creates a new builder-style object to manufacture [`PurchaseScheduledInstancesInput`](crate::operation::purchase_scheduled_instances::PurchaseScheduledInstancesInput).
    pub fn builder() -> crate::operation::purchase_scheduled_instances::builders::PurchaseScheduledInstancesInputBuilder{
        crate::operation::purchase_scheduled_instances::builders::PurchaseScheduledInstancesInputBuilder::default()
    }
}

/// A builder for [`PurchaseScheduledInstancesInput`](crate::operation::purchase_scheduled_instances::PurchaseScheduledInstancesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PurchaseScheduledInstancesInputBuilder {
    pub(crate) client_token: std::option::Option<std::string::String>,
    pub(crate) dry_run: std::option::Option<bool>,
    pub(crate) purchase_requests: std::option::Option<std::vec::Vec<crate::types::PurchaseRequest>>,
}
impl PurchaseScheduledInstancesInputBuilder {
    /// <p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// <p>Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = Some(input);
        self
    }
    /// <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// Appends an item to `purchase_requests`.
    ///
    /// To override the contents of this collection use [`set_purchase_requests`](Self::set_purchase_requests).
    ///
    /// <p>The purchase requests.</p>
    pub fn purchase_requests(mut self, input: crate::types::PurchaseRequest) -> Self {
        let mut v = self.purchase_requests.unwrap_or_default();
        v.push(input);
        self.purchase_requests = Some(v);
        self
    }
    /// <p>The purchase requests.</p>
    pub fn set_purchase_requests(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PurchaseRequest>>,
    ) -> Self {
        self.purchase_requests = input;
        self
    }
    /// Consumes the builder and constructs a [`PurchaseScheduledInstancesInput`](crate::operation::purchase_scheduled_instances::PurchaseScheduledInstancesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::purchase_scheduled_instances::PurchaseScheduledInstancesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::purchase_scheduled_instances::PurchaseScheduledInstancesInput {
                client_token: self.client_token,
                dry_run: self.dry_run,
                purchase_requests: self.purchase_requests,
            },
        )
    }
}
