// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DisassociateIpamResourceDiscoveryInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub dry_run: ::std::option::Option<bool>,
    /// <p>A resource discovery association ID.</p>
    pub ipam_resource_discovery_association_id: ::std::option::Option<::std::string::String>,
}
impl DisassociateIpamResourceDiscoveryInput {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(&self) -> ::std::option::Option<bool> {
        self.dry_run
    }
    /// <p>A resource discovery association ID.</p>
    pub fn ipam_resource_discovery_association_id(&self) -> ::std::option::Option<&str> {
        self.ipam_resource_discovery_association_id.as_deref()
    }
}
impl DisassociateIpamResourceDiscoveryInput {
    /// Creates a new builder-style object to manufacture [`DisassociateIpamResourceDiscoveryInput`](crate::operation::disassociate_ipam_resource_discovery::DisassociateIpamResourceDiscoveryInput).
    pub fn builder() -> crate::operation::disassociate_ipam_resource_discovery::builders::DisassociateIpamResourceDiscoveryInputBuilder {
        crate::operation::disassociate_ipam_resource_discovery::builders::DisassociateIpamResourceDiscoveryInputBuilder::default()
    }
}

/// A builder for [`DisassociateIpamResourceDiscoveryInput`](crate::operation::disassociate_ipam_resource_discovery::DisassociateIpamResourceDiscoveryInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DisassociateIpamResourceDiscoveryInputBuilder {
    pub(crate) dry_run: ::std::option::Option<bool>,
    pub(crate) ipam_resource_discovery_association_id: ::std::option::Option<::std::string::String>,
}
impl DisassociateIpamResourceDiscoveryInputBuilder {
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = ::std::option::Option::Some(input);
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn set_dry_run(mut self, input: ::std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    pub fn get_dry_run(&self) -> &::std::option::Option<bool> {
        &self.dry_run
    }
    /// <p>A resource discovery association ID.</p>
    /// This field is required.
    pub fn ipam_resource_discovery_association_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_resource_discovery_association_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A resource discovery association ID.</p>
    pub fn set_ipam_resource_discovery_association_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_resource_discovery_association_id = input;
        self
    }
    /// <p>A resource discovery association ID.</p>
    pub fn get_ipam_resource_discovery_association_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_resource_discovery_association_id
    }
    /// Consumes the builder and constructs a [`DisassociateIpamResourceDiscoveryInput`](crate::operation::disassociate_ipam_resource_discovery::DisassociateIpamResourceDiscoveryInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::disassociate_ipam_resource_discovery::DisassociateIpamResourceDiscoveryInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::disassociate_ipam_resource_discovery::DisassociateIpamResourceDiscoveryInput {
                dry_run: self.dry_run,
                ipam_resource_discovery_association_id: self.ipam_resource_discovery_association_id,
            },
        )
    }
}
