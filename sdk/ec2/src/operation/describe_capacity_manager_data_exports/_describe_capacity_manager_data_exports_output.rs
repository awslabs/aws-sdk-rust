// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeCapacityManagerDataExportsOutput {
    /// <p>Information about the data export configurations, including export settings, delivery status, and recent activity.</p>
    pub capacity_manager_data_exports: ::std::option::Option<::std::vec::Vec<crate::types::CapacityManagerDataExportResponse>>,
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeCapacityManagerDataExportsOutput {
    /// <p>Information about the data export configurations, including export settings, delivery status, and recent activity.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.capacity_manager_data_exports.is_none()`.
    pub fn capacity_manager_data_exports(&self) -> &[crate::types::CapacityManagerDataExportResponse] {
        self.capacity_manager_data_exports.as_deref().unwrap_or_default()
    }
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for DescribeCapacityManagerDataExportsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeCapacityManagerDataExportsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeCapacityManagerDataExportsOutput`](crate::operation::describe_capacity_manager_data_exports::DescribeCapacityManagerDataExportsOutput).
    pub fn builder() -> crate::operation::describe_capacity_manager_data_exports::builders::DescribeCapacityManagerDataExportsOutputBuilder {
        crate::operation::describe_capacity_manager_data_exports::builders::DescribeCapacityManagerDataExportsOutputBuilder::default()
    }
}

/// A builder for [`DescribeCapacityManagerDataExportsOutput`](crate::operation::describe_capacity_manager_data_exports::DescribeCapacityManagerDataExportsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeCapacityManagerDataExportsOutputBuilder {
    pub(crate) capacity_manager_data_exports: ::std::option::Option<::std::vec::Vec<crate::types::CapacityManagerDataExportResponse>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeCapacityManagerDataExportsOutputBuilder {
    /// Appends an item to `capacity_manager_data_exports`.
    ///
    /// To override the contents of this collection use [`set_capacity_manager_data_exports`](Self::set_capacity_manager_data_exports).
    ///
    /// <p>Information about the data export configurations, including export settings, delivery status, and recent activity.</p>
    pub fn capacity_manager_data_exports(mut self, input: crate::types::CapacityManagerDataExportResponse) -> Self {
        let mut v = self.capacity_manager_data_exports.unwrap_or_default();
        v.push(input);
        self.capacity_manager_data_exports = ::std::option::Option::Some(v);
        self
    }
    /// <p>Information about the data export configurations, including export settings, delivery status, and recent activity.</p>
    pub fn set_capacity_manager_data_exports(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::CapacityManagerDataExportResponse>>,
    ) -> Self {
        self.capacity_manager_data_exports = input;
        self
    }
    /// <p>Information about the data export configurations, including export settings, delivery status, and recent activity.</p>
    pub fn get_capacity_manager_data_exports(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::CapacityManagerDataExportResponse>> {
        &self.capacity_manager_data_exports
    }
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeCapacityManagerDataExportsOutput`](crate::operation::describe_capacity_manager_data_exports::DescribeCapacityManagerDataExportsOutput).
    pub fn build(self) -> crate::operation::describe_capacity_manager_data_exports::DescribeCapacityManagerDataExportsOutput {
        crate::operation::describe_capacity_manager_data_exports::DescribeCapacityManagerDataExportsOutput {
            capacity_manager_data_exports: self.capacity_manager_data_exports,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
