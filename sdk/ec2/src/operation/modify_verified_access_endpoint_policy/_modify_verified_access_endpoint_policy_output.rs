// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyVerifiedAccessEndpointPolicyOutput {
    /// <p>The status of the Verified Access policy.</p>
    #[doc(hidden)]
    pub policy_enabled: std::option::Option<bool>,
    /// <p>The Amazon Web Services Verified Access policy document.</p>
    #[doc(hidden)]
    pub policy_document: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ModifyVerifiedAccessEndpointPolicyOutput {
    /// <p>The status of the Verified Access policy.</p>
    pub fn policy_enabled(&self) -> std::option::Option<bool> {
        self.policy_enabled
    }
    /// <p>The Amazon Web Services Verified Access policy document.</p>
    pub fn policy_document(&self) -> std::option::Option<&str> {
        self.policy_document.as_deref()
    }
}
impl aws_http::request_id::RequestId for ModifyVerifiedAccessEndpointPolicyOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ModifyVerifiedAccessEndpointPolicyOutput {
    /// Creates a new builder-style object to manufacture [`ModifyVerifiedAccessEndpointPolicyOutput`](crate::operation::modify_verified_access_endpoint_policy::ModifyVerifiedAccessEndpointPolicyOutput).
    pub fn builder() -> crate::operation::modify_verified_access_endpoint_policy::builders::ModifyVerifiedAccessEndpointPolicyOutputBuilder{
        crate::operation::modify_verified_access_endpoint_policy::builders::ModifyVerifiedAccessEndpointPolicyOutputBuilder::default()
    }
}

/// A builder for [`ModifyVerifiedAccessEndpointPolicyOutput`](crate::operation::modify_verified_access_endpoint_policy::ModifyVerifiedAccessEndpointPolicyOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModifyVerifiedAccessEndpointPolicyOutputBuilder {
    pub(crate) policy_enabled: std::option::Option<bool>,
    pub(crate) policy_document: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ModifyVerifiedAccessEndpointPolicyOutputBuilder {
    /// <p>The status of the Verified Access policy.</p>
    pub fn policy_enabled(mut self, input: bool) -> Self {
        self.policy_enabled = Some(input);
        self
    }
    /// <p>The status of the Verified Access policy.</p>
    pub fn set_policy_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.policy_enabled = input;
        self
    }
    /// <p>The Amazon Web Services Verified Access policy document.</p>
    pub fn policy_document(mut self, input: impl Into<std::string::String>) -> Self {
        self.policy_document = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Verified Access policy document.</p>
    pub fn set_policy_document(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.policy_document = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ModifyVerifiedAccessEndpointPolicyOutput`](crate::operation::modify_verified_access_endpoint_policy::ModifyVerifiedAccessEndpointPolicyOutput).
    pub fn build(self) -> crate::operation::modify_verified_access_endpoint_policy::ModifyVerifiedAccessEndpointPolicyOutput{
        crate::operation::modify_verified_access_endpoint_policy::ModifyVerifiedAccessEndpointPolicyOutput {
            policy_enabled: self.policy_enabled
            ,
            policy_document: self.policy_document
            ,
            _request_id: self._request_id,
        }
    }
}
