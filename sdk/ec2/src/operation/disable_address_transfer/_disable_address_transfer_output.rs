// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisableAddressTransferOutput {
    /// <p>An Elastic IP address transfer.</p>
    #[doc(hidden)]
    pub address_transfer: std::option::Option<crate::types::AddressTransfer>,
    _request_id: Option<String>,
}
impl DisableAddressTransferOutput {
    /// <p>An Elastic IP address transfer.</p>
    pub fn address_transfer(&self) -> std::option::Option<&crate::types::AddressTransfer> {
        self.address_transfer.as_ref()
    }
}
impl aws_http::request_id::RequestId for DisableAddressTransferOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DisableAddressTransferOutput {
    /// Creates a new builder-style object to manufacture [`DisableAddressTransferOutput`](crate::operation::disable_address_transfer::DisableAddressTransferOutput).
    pub fn builder(
    ) -> crate::operation::disable_address_transfer::builders::DisableAddressTransferOutputBuilder
    {
        crate::operation::disable_address_transfer::builders::DisableAddressTransferOutputBuilder::default()
    }
}

/// A builder for [`DisableAddressTransferOutput`](crate::operation::disable_address_transfer::DisableAddressTransferOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisableAddressTransferOutputBuilder {
    pub(crate) address_transfer: std::option::Option<crate::types::AddressTransfer>,
    _request_id: Option<String>,
}
impl DisableAddressTransferOutputBuilder {
    /// <p>An Elastic IP address transfer.</p>
    pub fn address_transfer(mut self, input: crate::types::AddressTransfer) -> Self {
        self.address_transfer = Some(input);
        self
    }
    /// <p>An Elastic IP address transfer.</p>
    pub fn set_address_transfer(
        mut self,
        input: std::option::Option<crate::types::AddressTransfer>,
    ) -> Self {
        self.address_transfer = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DisableAddressTransferOutput`](crate::operation::disable_address_transfer::DisableAddressTransferOutput).
    pub fn build(self) -> crate::operation::disable_address_transfer::DisableAddressTransferOutput {
        crate::operation::disable_address_transfer::DisableAddressTransferOutput {
            address_transfer: self.address_transfer,
            _request_id: self._request_id,
        }
    }
}
