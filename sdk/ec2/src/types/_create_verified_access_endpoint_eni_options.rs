// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Options for a network interface-type endpoint.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateVerifiedAccessEndpointEniOptions {
    /// <p>The ID of the network interface.</p>
    #[doc(hidden)]
    pub network_interface_id: std::option::Option<std::string::String>,
    /// <p>The IP protocol.</p>
    #[doc(hidden)]
    pub protocol: std::option::Option<crate::types::VerifiedAccessEndpointProtocol>,
    /// <p>The IP port number.</p>
    #[doc(hidden)]
    pub port: std::option::Option<i32>,
}
impl CreateVerifiedAccessEndpointEniOptions {
    /// <p>The ID of the network interface.</p>
    pub fn network_interface_id(&self) -> std::option::Option<&str> {
        self.network_interface_id.as_deref()
    }
    /// <p>The IP protocol.</p>
    pub fn protocol(&self) -> std::option::Option<&crate::types::VerifiedAccessEndpointProtocol> {
        self.protocol.as_ref()
    }
    /// <p>The IP port number.</p>
    pub fn port(&self) -> std::option::Option<i32> {
        self.port
    }
}
impl CreateVerifiedAccessEndpointEniOptions {
    /// Creates a new builder-style object to manufacture [`CreateVerifiedAccessEndpointEniOptions`](crate::types::CreateVerifiedAccessEndpointEniOptions).
    pub fn builder() -> crate::types::builders::CreateVerifiedAccessEndpointEniOptionsBuilder {
        crate::types::builders::CreateVerifiedAccessEndpointEniOptionsBuilder::default()
    }
}

/// A builder for [`CreateVerifiedAccessEndpointEniOptions`](crate::types::CreateVerifiedAccessEndpointEniOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateVerifiedAccessEndpointEniOptionsBuilder {
    pub(crate) network_interface_id: std::option::Option<std::string::String>,
    pub(crate) protocol: std::option::Option<crate::types::VerifiedAccessEndpointProtocol>,
    pub(crate) port: std::option::Option<i32>,
}
impl CreateVerifiedAccessEndpointEniOptionsBuilder {
    /// <p>The ID of the network interface.</p>
    pub fn network_interface_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.network_interface_id = Some(input.into());
        self
    }
    /// <p>The ID of the network interface.</p>
    pub fn set_network_interface_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.network_interface_id = input;
        self
    }
    /// <p>The IP protocol.</p>
    pub fn protocol(mut self, input: crate::types::VerifiedAccessEndpointProtocol) -> Self {
        self.protocol = Some(input);
        self
    }
    /// <p>The IP protocol.</p>
    pub fn set_protocol(
        mut self,
        input: std::option::Option<crate::types::VerifiedAccessEndpointProtocol>,
    ) -> Self {
        self.protocol = input;
        self
    }
    /// <p>The IP port number.</p>
    pub fn port(mut self, input: i32) -> Self {
        self.port = Some(input);
        self
    }
    /// <p>The IP port number.</p>
    pub fn set_port(mut self, input: std::option::Option<i32>) -> Self {
        self.port = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateVerifiedAccessEndpointEniOptions`](crate::types::CreateVerifiedAccessEndpointEniOptions).
    pub fn build(self) -> crate::types::CreateVerifiedAccessEndpointEniOptions {
        crate::types::CreateVerifiedAccessEndpointEniOptions {
            network_interface_id: self.network_interface_id,
            protocol: self.protocol,
            port: self.port,
        }
    }
}
