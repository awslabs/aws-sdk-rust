// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the resources associated with the transit gateway multicast domain.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TransitGatewayMulticastDomainAssociation {
    /// <p>The ID of the transit gateway attachment.</p>
    #[doc(hidden)]
    pub transit_gateway_attachment_id: std::option::Option<std::string::String>,
    /// <p>The ID of the resource.</p>
    #[doc(hidden)]
    pub resource_id: std::option::Option<std::string::String>,
    /// <p>The type of resource, for example a VPC attachment.</p>
    #[doc(hidden)]
    pub resource_type: std::option::Option<crate::types::TransitGatewayAttachmentResourceType>,
    /// <p> The ID of the Amazon Web Services account that owns the transit gateway multicast domain association resource.</p>
    #[doc(hidden)]
    pub resource_owner_id: std::option::Option<std::string::String>,
    /// <p>The subnet associated with the transit gateway multicast domain.</p>
    #[doc(hidden)]
    pub subnet: std::option::Option<crate::types::SubnetAssociation>,
}
impl TransitGatewayMulticastDomainAssociation {
    /// <p>The ID of the transit gateway attachment.</p>
    pub fn transit_gateway_attachment_id(&self) -> std::option::Option<&str> {
        self.transit_gateway_attachment_id.as_deref()
    }
    /// <p>The ID of the resource.</p>
    pub fn resource_id(&self) -> std::option::Option<&str> {
        self.resource_id.as_deref()
    }
    /// <p>The type of resource, for example a VPC attachment.</p>
    pub fn resource_type(
        &self,
    ) -> std::option::Option<&crate::types::TransitGatewayAttachmentResourceType> {
        self.resource_type.as_ref()
    }
    /// <p> The ID of the Amazon Web Services account that owns the transit gateway multicast domain association resource.</p>
    pub fn resource_owner_id(&self) -> std::option::Option<&str> {
        self.resource_owner_id.as_deref()
    }
    /// <p>The subnet associated with the transit gateway multicast domain.</p>
    pub fn subnet(&self) -> std::option::Option<&crate::types::SubnetAssociation> {
        self.subnet.as_ref()
    }
}
impl TransitGatewayMulticastDomainAssociation {
    /// Creates a new builder-style object to manufacture [`TransitGatewayMulticastDomainAssociation`](crate::types::TransitGatewayMulticastDomainAssociation).
    pub fn builder() -> crate::types::builders::TransitGatewayMulticastDomainAssociationBuilder {
        crate::types::builders::TransitGatewayMulticastDomainAssociationBuilder::default()
    }
}

/// A builder for [`TransitGatewayMulticastDomainAssociation`](crate::types::TransitGatewayMulticastDomainAssociation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TransitGatewayMulticastDomainAssociationBuilder {
    pub(crate) transit_gateway_attachment_id: std::option::Option<std::string::String>,
    pub(crate) resource_id: std::option::Option<std::string::String>,
    pub(crate) resource_type:
        std::option::Option<crate::types::TransitGatewayAttachmentResourceType>,
    pub(crate) resource_owner_id: std::option::Option<std::string::String>,
    pub(crate) subnet: std::option::Option<crate::types::SubnetAssociation>,
}
impl TransitGatewayMulticastDomainAssociationBuilder {
    /// <p>The ID of the transit gateway attachment.</p>
    pub fn transit_gateway_attachment_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.transit_gateway_attachment_id = Some(input.into());
        self
    }
    /// <p>The ID of the transit gateway attachment.</p>
    pub fn set_transit_gateway_attachment_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.transit_gateway_attachment_id = input;
        self
    }
    /// <p>The ID of the resource.</p>
    pub fn resource_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_id = Some(input.into());
        self
    }
    /// <p>The ID of the resource.</p>
    pub fn set_resource_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// <p>The type of resource, for example a VPC attachment.</p>
    pub fn resource_type(
        mut self,
        input: crate::types::TransitGatewayAttachmentResourceType,
    ) -> Self {
        self.resource_type = Some(input);
        self
    }
    /// <p>The type of resource, for example a VPC attachment.</p>
    pub fn set_resource_type(
        mut self,
        input: std::option::Option<crate::types::TransitGatewayAttachmentResourceType>,
    ) -> Self {
        self.resource_type = input;
        self
    }
    /// <p> The ID of the Amazon Web Services account that owns the transit gateway multicast domain association resource.</p>
    pub fn resource_owner_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_owner_id = Some(input.into());
        self
    }
    /// <p> The ID of the Amazon Web Services account that owns the transit gateway multicast domain association resource.</p>
    pub fn set_resource_owner_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_owner_id = input;
        self
    }
    /// <p>The subnet associated with the transit gateway multicast domain.</p>
    pub fn subnet(mut self, input: crate::types::SubnetAssociation) -> Self {
        self.subnet = Some(input);
        self
    }
    /// <p>The subnet associated with the transit gateway multicast domain.</p>
    pub fn set_subnet(
        mut self,
        input: std::option::Option<crate::types::SubnetAssociation>,
    ) -> Self {
        self.subnet = input;
        self
    }
    /// Consumes the builder and constructs a [`TransitGatewayMulticastDomainAssociation`](crate::types::TransitGatewayMulticastDomainAssociation).
    pub fn build(self) -> crate::types::TransitGatewayMulticastDomainAssociation {
        crate::types::TransitGatewayMulticastDomainAssociation {
            transit_gateway_attachment_id: self.transit_gateway_attachment_id,
            resource_id: self.resource_id,
            resource_type: self.resource_type,
            resource_owner_id: self.resource_owner_id,
            subnet: self.subnet,
        }
    }
}
