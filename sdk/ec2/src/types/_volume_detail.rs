// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an EBS volume.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VolumeDetail {
    /// <p>The size of the volume, in GiB.</p>
    pub size: ::std::option::Option<i64>,
}
impl VolumeDetail {
    /// <p>The size of the volume, in GiB.</p>
    pub fn size(&self) -> ::std::option::Option<i64> {
        self.size
    }
}
impl VolumeDetail {
    /// Creates a new builder-style object to manufacture [`VolumeDetail`](crate::types::VolumeDetail).
    pub fn builder() -> crate::types::builders::VolumeDetailBuilder {
        crate::types::builders::VolumeDetailBuilder::default()
    }
}

/// A builder for [`VolumeDetail`](crate::types::VolumeDetail).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VolumeDetailBuilder {
    pub(crate) size: ::std::option::Option<i64>,
}
impl VolumeDetailBuilder {
    /// <p>The size of the volume, in GiB.</p>
    /// This field is required.
    pub fn size(mut self, input: i64) -> Self {
        self.size = ::std::option::Option::Some(input);
        self
    }
    /// <p>The size of the volume, in GiB.</p>
    pub fn set_size(mut self, input: ::std::option::Option<i64>) -> Self {
        self.size = input;
        self
    }
    /// <p>The size of the volume, in GiB.</p>
    pub fn get_size(&self) -> &::std::option::Option<i64> {
        &self.size
    }
    /// Consumes the builder and constructs a [`VolumeDetail`](crate::types::VolumeDetail).
    pub fn build(self) -> crate::types::VolumeDetail {
        crate::types::VolumeDetail { size: self.size }
    }
}
