// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an update to a security group rule.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SecurityGroupRuleUpdate {
    /// <p>The ID of the security group rule.</p>
    pub security_group_rule_id: ::std::option::Option<::std::string::String>,
    /// <p>Information about the security group rule.</p>
    pub security_group_rule: ::std::option::Option<crate::types::SecurityGroupRuleRequest>,
}
impl SecurityGroupRuleUpdate {
    /// <p>The ID of the security group rule.</p>
    pub fn security_group_rule_id(&self) -> ::std::option::Option<&str> {
        self.security_group_rule_id.as_deref()
    }
    /// <p>Information about the security group rule.</p>
    pub fn security_group_rule(&self) -> ::std::option::Option<&crate::types::SecurityGroupRuleRequest> {
        self.security_group_rule.as_ref()
    }
}
impl SecurityGroupRuleUpdate {
    /// Creates a new builder-style object to manufacture [`SecurityGroupRuleUpdate`](crate::types::SecurityGroupRuleUpdate).
    pub fn builder() -> crate::types::builders::SecurityGroupRuleUpdateBuilder {
        crate::types::builders::SecurityGroupRuleUpdateBuilder::default()
    }
}

/// A builder for [`SecurityGroupRuleUpdate`](crate::types::SecurityGroupRuleUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SecurityGroupRuleUpdateBuilder {
    pub(crate) security_group_rule_id: ::std::option::Option<::std::string::String>,
    pub(crate) security_group_rule: ::std::option::Option<crate::types::SecurityGroupRuleRequest>,
}
impl SecurityGroupRuleUpdateBuilder {
    /// <p>The ID of the security group rule.</p>
    /// This field is required.
    pub fn security_group_rule_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.security_group_rule_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the security group rule.</p>
    pub fn set_security_group_rule_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.security_group_rule_id = input;
        self
    }
    /// <p>The ID of the security group rule.</p>
    pub fn get_security_group_rule_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.security_group_rule_id
    }
    /// <p>Information about the security group rule.</p>
    pub fn security_group_rule(mut self, input: crate::types::SecurityGroupRuleRequest) -> Self {
        self.security_group_rule = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the security group rule.</p>
    pub fn set_security_group_rule(mut self, input: ::std::option::Option<crate::types::SecurityGroupRuleRequest>) -> Self {
        self.security_group_rule = input;
        self
    }
    /// <p>Information about the security group rule.</p>
    pub fn get_security_group_rule(&self) -> &::std::option::Option<crate::types::SecurityGroupRuleRequest> {
        &self.security_group_rule
    }
    /// Consumes the builder and constructs a [`SecurityGroupRuleUpdate`](crate::types::SecurityGroupRuleUpdate).
    pub fn build(self) -> crate::types::SecurityGroupRuleUpdate {
        crate::types::SecurityGroupRuleUpdate {
            security_group_rule_id: self.security_group_rule_id,
            security_group_rule: self.security_group_rule,
        }
    }
}
