// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes information used to set up an EBS volume specified in a block device mapping.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EbsInstanceBlockDeviceSpecification {
    /// <p>Indicates whether the volume is deleted on instance termination.</p>
    #[doc(hidden)]
    pub delete_on_termination: std::option::Option<bool>,
    /// <p>The ID of the EBS volume.</p>
    #[doc(hidden)]
    pub volume_id: std::option::Option<std::string::String>,
}
impl EbsInstanceBlockDeviceSpecification {
    /// <p>Indicates whether the volume is deleted on instance termination.</p>
    pub fn delete_on_termination(&self) -> std::option::Option<bool> {
        self.delete_on_termination
    }
    /// <p>The ID of the EBS volume.</p>
    pub fn volume_id(&self) -> std::option::Option<&str> {
        self.volume_id.as_deref()
    }
}
impl EbsInstanceBlockDeviceSpecification {
    /// Creates a new builder-style object to manufacture [`EbsInstanceBlockDeviceSpecification`](crate::types::EbsInstanceBlockDeviceSpecification).
    pub fn builder() -> crate::types::builders::EbsInstanceBlockDeviceSpecificationBuilder {
        crate::types::builders::EbsInstanceBlockDeviceSpecificationBuilder::default()
    }
}

/// A builder for [`EbsInstanceBlockDeviceSpecification`](crate::types::EbsInstanceBlockDeviceSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EbsInstanceBlockDeviceSpecificationBuilder {
    pub(crate) delete_on_termination: std::option::Option<bool>,
    pub(crate) volume_id: std::option::Option<std::string::String>,
}
impl EbsInstanceBlockDeviceSpecificationBuilder {
    /// <p>Indicates whether the volume is deleted on instance termination.</p>
    pub fn delete_on_termination(mut self, input: bool) -> Self {
        self.delete_on_termination = Some(input);
        self
    }
    /// <p>Indicates whether the volume is deleted on instance termination.</p>
    pub fn set_delete_on_termination(mut self, input: std::option::Option<bool>) -> Self {
        self.delete_on_termination = input;
        self
    }
    /// <p>The ID of the EBS volume.</p>
    pub fn volume_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.volume_id = Some(input.into());
        self
    }
    /// <p>The ID of the EBS volume.</p>
    pub fn set_volume_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.volume_id = input;
        self
    }
    /// Consumes the builder and constructs a [`EbsInstanceBlockDeviceSpecification`](crate::types::EbsInstanceBlockDeviceSpecification).
    pub fn build(self) -> crate::types::EbsInstanceBlockDeviceSpecification {
        crate::types::EbsInstanceBlockDeviceSpecification {
            delete_on_termination: self.delete_on_termination,
            volume_id: self.volume_id,
        }
    }
}
