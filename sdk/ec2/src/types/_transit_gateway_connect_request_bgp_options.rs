// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The BGP options for the Connect attachment.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TransitGatewayConnectRequestBgpOptions {
    /// <p>The peer Autonomous System Number (ASN).</p>
    #[doc(hidden)]
    pub peer_asn: std::option::Option<i64>,
}
impl TransitGatewayConnectRequestBgpOptions {
    /// <p>The peer Autonomous System Number (ASN).</p>
    pub fn peer_asn(&self) -> std::option::Option<i64> {
        self.peer_asn
    }
}
impl TransitGatewayConnectRequestBgpOptions {
    /// Creates a new builder-style object to manufacture [`TransitGatewayConnectRequestBgpOptions`](crate::types::TransitGatewayConnectRequestBgpOptions).
    pub fn builder() -> crate::types::builders::TransitGatewayConnectRequestBgpOptionsBuilder {
        crate::types::builders::TransitGatewayConnectRequestBgpOptionsBuilder::default()
    }
}

/// A builder for [`TransitGatewayConnectRequestBgpOptions`](crate::types::TransitGatewayConnectRequestBgpOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TransitGatewayConnectRequestBgpOptionsBuilder {
    pub(crate) peer_asn: std::option::Option<i64>,
}
impl TransitGatewayConnectRequestBgpOptionsBuilder {
    /// <p>The peer Autonomous System Number (ASN).</p>
    pub fn peer_asn(mut self, input: i64) -> Self {
        self.peer_asn = Some(input);
        self
    }
    /// <p>The peer Autonomous System Number (ASN).</p>
    pub fn set_peer_asn(mut self, input: std::option::Option<i64>) -> Self {
        self.peer_asn = input;
        self
    }
    /// Consumes the builder and constructs a [`TransitGatewayConnectRequestBgpOptions`](crate::types::TransitGatewayConnectRequestBgpOptions).
    pub fn build(self) -> crate::types::TransitGatewayConnectRequestBgpOptions {
        crate::types::TransitGatewayConnectRequestBgpOptions {
            peer_asn: self.peer_asn,
        }
    }
}
