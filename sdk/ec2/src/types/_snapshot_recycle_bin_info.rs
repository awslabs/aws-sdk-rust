// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a snapshot that is currently in the Recycle Bin.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SnapshotRecycleBinInfo {
    /// <p>The ID of the snapshot.</p>
    #[doc(hidden)]
    pub snapshot_id: std::option::Option<std::string::String>,
    /// <p>The date and time when the snaphsot entered the Recycle Bin.</p>
    #[doc(hidden)]
    pub recycle_bin_enter_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date and time when the snapshot is to be permanently deleted from the Recycle Bin.</p>
    #[doc(hidden)]
    pub recycle_bin_exit_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The description for the snapshot.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The ID of the volume from which the snapshot was created.</p>
    #[doc(hidden)]
    pub volume_id: std::option::Option<std::string::String>,
}
impl SnapshotRecycleBinInfo {
    /// <p>The ID of the snapshot.</p>
    pub fn snapshot_id(&self) -> std::option::Option<&str> {
        self.snapshot_id.as_deref()
    }
    /// <p>The date and time when the snaphsot entered the Recycle Bin.</p>
    pub fn recycle_bin_enter_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.recycle_bin_enter_time.as_ref()
    }
    /// <p>The date and time when the snapshot is to be permanently deleted from the Recycle Bin.</p>
    pub fn recycle_bin_exit_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.recycle_bin_exit_time.as_ref()
    }
    /// <p>The description for the snapshot.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The ID of the volume from which the snapshot was created.</p>
    pub fn volume_id(&self) -> std::option::Option<&str> {
        self.volume_id.as_deref()
    }
}
impl SnapshotRecycleBinInfo {
    /// Creates a new builder-style object to manufacture [`SnapshotRecycleBinInfo`](crate::types::SnapshotRecycleBinInfo).
    pub fn builder() -> crate::types::builders::SnapshotRecycleBinInfoBuilder {
        crate::types::builders::SnapshotRecycleBinInfoBuilder::default()
    }
}

/// A builder for [`SnapshotRecycleBinInfo`](crate::types::SnapshotRecycleBinInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SnapshotRecycleBinInfoBuilder {
    pub(crate) snapshot_id: std::option::Option<std::string::String>,
    pub(crate) recycle_bin_enter_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) recycle_bin_exit_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) volume_id: std::option::Option<std::string::String>,
}
impl SnapshotRecycleBinInfoBuilder {
    /// <p>The ID of the snapshot.</p>
    pub fn snapshot_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.snapshot_id = Some(input.into());
        self
    }
    /// <p>The ID of the snapshot.</p>
    pub fn set_snapshot_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.snapshot_id = input;
        self
    }
    /// <p>The date and time when the snaphsot entered the Recycle Bin.</p>
    pub fn recycle_bin_enter_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.recycle_bin_enter_time = Some(input);
        self
    }
    /// <p>The date and time when the snaphsot entered the Recycle Bin.</p>
    pub fn set_recycle_bin_enter_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.recycle_bin_enter_time = input;
        self
    }
    /// <p>The date and time when the snapshot is to be permanently deleted from the Recycle Bin.</p>
    pub fn recycle_bin_exit_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.recycle_bin_exit_time = Some(input);
        self
    }
    /// <p>The date and time when the snapshot is to be permanently deleted from the Recycle Bin.</p>
    pub fn set_recycle_bin_exit_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.recycle_bin_exit_time = input;
        self
    }
    /// <p>The description for the snapshot.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description for the snapshot.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The ID of the volume from which the snapshot was created.</p>
    pub fn volume_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.volume_id = Some(input.into());
        self
    }
    /// <p>The ID of the volume from which the snapshot was created.</p>
    pub fn set_volume_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.volume_id = input;
        self
    }
    /// Consumes the builder and constructs a [`SnapshotRecycleBinInfo`](crate::types::SnapshotRecycleBinInfo).
    pub fn build(self) -> crate::types::SnapshotRecycleBinInfo {
        crate::types::SnapshotRecycleBinInfo {
            snapshot_id: self.snapshot_id,
            recycle_bin_enter_time: self.recycle_bin_enter_time,
            recycle_bin_exit_time: self.recycle_bin_exit_time,
            description: self.description,
            volume_id: self.volume_id,
        }
    }
}
