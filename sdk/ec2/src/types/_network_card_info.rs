// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the network card support of the instance type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NetworkCardInfo {
    /// <p>The index of the network card.</p>
    #[doc(hidden)]
    pub network_card_index: std::option::Option<i32>,
    /// <p>The network performance of the network card.</p>
    #[doc(hidden)]
    pub network_performance: std::option::Option<std::string::String>,
    /// <p>The maximum number of network interfaces for the network card.</p>
    #[doc(hidden)]
    pub maximum_network_interfaces: std::option::Option<i32>,
}
impl NetworkCardInfo {
    /// <p>The index of the network card.</p>
    pub fn network_card_index(&self) -> std::option::Option<i32> {
        self.network_card_index
    }
    /// <p>The network performance of the network card.</p>
    pub fn network_performance(&self) -> std::option::Option<&str> {
        self.network_performance.as_deref()
    }
    /// <p>The maximum number of network interfaces for the network card.</p>
    pub fn maximum_network_interfaces(&self) -> std::option::Option<i32> {
        self.maximum_network_interfaces
    }
}
impl NetworkCardInfo {
    /// Creates a new builder-style object to manufacture [`NetworkCardInfo`](crate::types::NetworkCardInfo).
    pub fn builder() -> crate::types::builders::NetworkCardInfoBuilder {
        crate::types::builders::NetworkCardInfoBuilder::default()
    }
}

/// A builder for [`NetworkCardInfo`](crate::types::NetworkCardInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NetworkCardInfoBuilder {
    pub(crate) network_card_index: std::option::Option<i32>,
    pub(crate) network_performance: std::option::Option<std::string::String>,
    pub(crate) maximum_network_interfaces: std::option::Option<i32>,
}
impl NetworkCardInfoBuilder {
    /// <p>The index of the network card.</p>
    pub fn network_card_index(mut self, input: i32) -> Self {
        self.network_card_index = Some(input);
        self
    }
    /// <p>The index of the network card.</p>
    pub fn set_network_card_index(mut self, input: std::option::Option<i32>) -> Self {
        self.network_card_index = input;
        self
    }
    /// <p>The network performance of the network card.</p>
    pub fn network_performance(mut self, input: impl Into<std::string::String>) -> Self {
        self.network_performance = Some(input.into());
        self
    }
    /// <p>The network performance of the network card.</p>
    pub fn set_network_performance(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.network_performance = input;
        self
    }
    /// <p>The maximum number of network interfaces for the network card.</p>
    pub fn maximum_network_interfaces(mut self, input: i32) -> Self {
        self.maximum_network_interfaces = Some(input);
        self
    }
    /// <p>The maximum number of network interfaces for the network card.</p>
    pub fn set_maximum_network_interfaces(mut self, input: std::option::Option<i32>) -> Self {
        self.maximum_network_interfaces = input;
        self
    }
    /// Consumes the builder and constructs a [`NetworkCardInfo`](crate::types::NetworkCardInfo).
    pub fn build(self) -> crate::types::NetworkCardInfo {
        crate::types::NetworkCardInfo {
            network_card_index: self.network_card_index,
            network_performance: self.network_performance,
            maximum_network_interfaces: self.maximum_network_interfaces,
        }
    }
}
