// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the Elastic Fabric Adapters for the instance type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EfaInfo {
    /// <p>The maximum number of Elastic Fabric Adapters for the instance type.</p>
    #[doc(hidden)]
    pub maximum_efa_interfaces: std::option::Option<i32>,
}
impl EfaInfo {
    /// <p>The maximum number of Elastic Fabric Adapters for the instance type.</p>
    pub fn maximum_efa_interfaces(&self) -> std::option::Option<i32> {
        self.maximum_efa_interfaces
    }
}
impl EfaInfo {
    /// Creates a new builder-style object to manufacture [`EfaInfo`](crate::types::EfaInfo).
    pub fn builder() -> crate::types::builders::EfaInfoBuilder {
        crate::types::builders::EfaInfoBuilder::default()
    }
}

/// A builder for [`EfaInfo`](crate::types::EfaInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EfaInfoBuilder {
    pub(crate) maximum_efa_interfaces: std::option::Option<i32>,
}
impl EfaInfoBuilder {
    /// <p>The maximum number of Elastic Fabric Adapters for the instance type.</p>
    pub fn maximum_efa_interfaces(mut self, input: i32) -> Self {
        self.maximum_efa_interfaces = Some(input);
        self
    }
    /// <p>The maximum number of Elastic Fabric Adapters for the instance type.</p>
    pub fn set_maximum_efa_interfaces(mut self, input: std::option::Option<i32>) -> Self {
        self.maximum_efa_interfaces = input;
        self
    }
    /// Consumes the builder and constructs a [`EfaInfo`](crate::types::EfaInfo).
    pub fn build(self) -> crate::types::EfaInfo {
        crate::types::EfaInfo {
            maximum_efa_interfaces: self.maximum_efa_interfaces,
        }
    }
}
