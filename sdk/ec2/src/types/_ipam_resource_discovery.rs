// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A resource discovery is an IPAM component that enables IPAM to manage and monitor resources that belong to the owning account.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IpamResourceDiscovery {
    /// <p>The ID of the owner.</p>
    pub owner_id: ::std::option::Option<::std::string::String>,
    /// <p>The resource discovery ID.</p>
    pub ipam_resource_discovery_id: ::std::option::Option<::std::string::String>,
    /// <p>The resource discovery Amazon Resource Name (ARN).</p>
    pub ipam_resource_discovery_arn: ::std::option::Option<::std::string::String>,
    /// <p>The resource discovery Region.</p>
    pub ipam_resource_discovery_region: ::std::option::Option<::std::string::String>,
    /// <p>The resource discovery description.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The operating Regions for the resource discovery. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
    pub operating_regions: ::std::option::Option<::std::vec::Vec<crate::types::IpamOperatingRegion>>,
    /// <p>Defines if the resource discovery is the default. The default resource discovery is the resource discovery automatically created when you create an IPAM.</p>
    pub is_default: ::std::option::Option<bool>,
    /// <p>The lifecycle state of the resource discovery.</p>
    /// <ul>
    /// <li> <p> <code>create-in-progress</code> - Resource discovery is being created.</p> </li>
    /// <li> <p> <code>create-complete</code> - Resource discovery creation is complete.</p> </li>
    /// <li> <p> <code>create-failed</code> - Resource discovery creation has failed.</p> </li>
    /// <li> <p> <code>modify-in-progress</code> - Resource discovery is being modified.</p> </li>
    /// <li> <p> <code>modify-complete</code> - Resource discovery modification is complete.</p> </li>
    /// <li> <p> <code>modify-failed</code> - Resource discovery modification has failed.</p> </li>
    /// <li> <p> <code>delete-in-progress</code> - Resource discovery is being deleted.</p> </li>
    /// <li> <p> <code>delete-complete</code> - Resource discovery deletion is complete.</p> </li>
    /// <li> <p> <code>delete-failed</code> - Resource discovery deletion has failed.</p> </li>
    /// <li> <p> <code>isolate-in-progress</code> - Amazon Web Services account that created the resource discovery has been removed and the resource discovery is being isolated.</p> </li>
    /// <li> <p> <code>isolate-complete</code> - Resource discovery isolation is complete.</p> </li>
    /// <li> <p> <code>restore-in-progress</code> - Amazon Web Services account that created the resource discovery and was isolated has been restored.</p> </li>
    /// </ul>
    pub state: ::std::option::Option<crate::types::IpamResourceDiscoveryState>,
    /// <p>A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value. You can use tags to search and filter your resources or track your Amazon Web Services costs.</p>
    pub tags: ::std::option::Option<::std::vec::Vec<crate::types::Tag>>,
}
impl IpamResourceDiscovery {
    /// <p>The ID of the owner.</p>
    pub fn owner_id(&self) -> ::std::option::Option<&str> {
        self.owner_id.as_deref()
    }
    /// <p>The resource discovery ID.</p>
    pub fn ipam_resource_discovery_id(&self) -> ::std::option::Option<&str> {
        self.ipam_resource_discovery_id.as_deref()
    }
    /// <p>The resource discovery Amazon Resource Name (ARN).</p>
    pub fn ipam_resource_discovery_arn(&self) -> ::std::option::Option<&str> {
        self.ipam_resource_discovery_arn.as_deref()
    }
    /// <p>The resource discovery Region.</p>
    pub fn ipam_resource_discovery_region(&self) -> ::std::option::Option<&str> {
        self.ipam_resource_discovery_region.as_deref()
    }
    /// <p>The resource discovery description.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The operating Regions for the resource discovery. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.operating_regions.is_none()`.
    pub fn operating_regions(&self) -> &[crate::types::IpamOperatingRegion] {
        self.operating_regions.as_deref().unwrap_or_default()
    }
    /// <p>Defines if the resource discovery is the default. The default resource discovery is the resource discovery automatically created when you create an IPAM.</p>
    pub fn is_default(&self) -> ::std::option::Option<bool> {
        self.is_default
    }
    /// <p>The lifecycle state of the resource discovery.</p>
    /// <ul>
    /// <li> <p> <code>create-in-progress</code> - Resource discovery is being created.</p> </li>
    /// <li> <p> <code>create-complete</code> - Resource discovery creation is complete.</p> </li>
    /// <li> <p> <code>create-failed</code> - Resource discovery creation has failed.</p> </li>
    /// <li> <p> <code>modify-in-progress</code> - Resource discovery is being modified.</p> </li>
    /// <li> <p> <code>modify-complete</code> - Resource discovery modification is complete.</p> </li>
    /// <li> <p> <code>modify-failed</code> - Resource discovery modification has failed.</p> </li>
    /// <li> <p> <code>delete-in-progress</code> - Resource discovery is being deleted.</p> </li>
    /// <li> <p> <code>delete-complete</code> - Resource discovery deletion is complete.</p> </li>
    /// <li> <p> <code>delete-failed</code> - Resource discovery deletion has failed.</p> </li>
    /// <li> <p> <code>isolate-in-progress</code> - Amazon Web Services account that created the resource discovery has been removed and the resource discovery is being isolated.</p> </li>
    /// <li> <p> <code>isolate-complete</code> - Resource discovery isolation is complete.</p> </li>
    /// <li> <p> <code>restore-in-progress</code> - Amazon Web Services account that created the resource discovery and was isolated has been restored.</p> </li>
    /// </ul>
    pub fn state(&self) -> ::std::option::Option<&crate::types::IpamResourceDiscoveryState> {
        self.state.as_ref()
    }
    /// <p>A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value. You can use tags to search and filter your resources or track your Amazon Web Services costs.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.tags.is_none()`.
    pub fn tags(&self) -> &[crate::types::Tag] {
        self.tags.as_deref().unwrap_or_default()
    }
}
impl IpamResourceDiscovery {
    /// Creates a new builder-style object to manufacture [`IpamResourceDiscovery`](crate::types::IpamResourceDiscovery).
    pub fn builder() -> crate::types::builders::IpamResourceDiscoveryBuilder {
        crate::types::builders::IpamResourceDiscoveryBuilder::default()
    }
}

/// A builder for [`IpamResourceDiscovery`](crate::types::IpamResourceDiscovery).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IpamResourceDiscoveryBuilder {
    pub(crate) owner_id: ::std::option::Option<::std::string::String>,
    pub(crate) ipam_resource_discovery_id: ::std::option::Option<::std::string::String>,
    pub(crate) ipam_resource_discovery_arn: ::std::option::Option<::std::string::String>,
    pub(crate) ipam_resource_discovery_region: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) operating_regions: ::std::option::Option<::std::vec::Vec<crate::types::IpamOperatingRegion>>,
    pub(crate) is_default: ::std::option::Option<bool>,
    pub(crate) state: ::std::option::Option<crate::types::IpamResourceDiscoveryState>,
    pub(crate) tags: ::std::option::Option<::std::vec::Vec<crate::types::Tag>>,
}
impl IpamResourceDiscoveryBuilder {
    /// <p>The ID of the owner.</p>
    pub fn owner_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.owner_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the owner.</p>
    pub fn set_owner_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.owner_id = input;
        self
    }
    /// <p>The ID of the owner.</p>
    pub fn get_owner_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.owner_id
    }
    /// <p>The resource discovery ID.</p>
    pub fn ipam_resource_discovery_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_resource_discovery_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The resource discovery ID.</p>
    pub fn set_ipam_resource_discovery_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_resource_discovery_id = input;
        self
    }
    /// <p>The resource discovery ID.</p>
    pub fn get_ipam_resource_discovery_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_resource_discovery_id
    }
    /// <p>The resource discovery Amazon Resource Name (ARN).</p>
    pub fn ipam_resource_discovery_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_resource_discovery_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The resource discovery Amazon Resource Name (ARN).</p>
    pub fn set_ipam_resource_discovery_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_resource_discovery_arn = input;
        self
    }
    /// <p>The resource discovery Amazon Resource Name (ARN).</p>
    pub fn get_ipam_resource_discovery_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_resource_discovery_arn
    }
    /// <p>The resource discovery Region.</p>
    pub fn ipam_resource_discovery_region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ipam_resource_discovery_region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The resource discovery Region.</p>
    pub fn set_ipam_resource_discovery_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ipam_resource_discovery_region = input;
        self
    }
    /// <p>The resource discovery Region.</p>
    pub fn get_ipam_resource_discovery_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.ipam_resource_discovery_region
    }
    /// <p>The resource discovery description.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The resource discovery description.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The resource discovery description.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Appends an item to `operating_regions`.
    ///
    /// To override the contents of this collection use [`set_operating_regions`](Self::set_operating_regions).
    ///
    /// <p>The operating Regions for the resource discovery. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
    pub fn operating_regions(mut self, input: crate::types::IpamOperatingRegion) -> Self {
        let mut v = self.operating_regions.unwrap_or_default();
        v.push(input);
        self.operating_regions = ::std::option::Option::Some(v);
        self
    }
    /// <p>The operating Regions for the resource discovery. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
    pub fn set_operating_regions(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::IpamOperatingRegion>>) -> Self {
        self.operating_regions = input;
        self
    }
    /// <p>The operating Regions for the resource discovery. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
    pub fn get_operating_regions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::IpamOperatingRegion>> {
        &self.operating_regions
    }
    /// <p>Defines if the resource discovery is the default. The default resource discovery is the resource discovery automatically created when you create an IPAM.</p>
    pub fn is_default(mut self, input: bool) -> Self {
        self.is_default = ::std::option::Option::Some(input);
        self
    }
    /// <p>Defines if the resource discovery is the default. The default resource discovery is the resource discovery automatically created when you create an IPAM.</p>
    pub fn set_is_default(mut self, input: ::std::option::Option<bool>) -> Self {
        self.is_default = input;
        self
    }
    /// <p>Defines if the resource discovery is the default. The default resource discovery is the resource discovery automatically created when you create an IPAM.</p>
    pub fn get_is_default(&self) -> &::std::option::Option<bool> {
        &self.is_default
    }
    /// <p>The lifecycle state of the resource discovery.</p>
    /// <ul>
    /// <li> <p> <code>create-in-progress</code> - Resource discovery is being created.</p> </li>
    /// <li> <p> <code>create-complete</code> - Resource discovery creation is complete.</p> </li>
    /// <li> <p> <code>create-failed</code> - Resource discovery creation has failed.</p> </li>
    /// <li> <p> <code>modify-in-progress</code> - Resource discovery is being modified.</p> </li>
    /// <li> <p> <code>modify-complete</code> - Resource discovery modification is complete.</p> </li>
    /// <li> <p> <code>modify-failed</code> - Resource discovery modification has failed.</p> </li>
    /// <li> <p> <code>delete-in-progress</code> - Resource discovery is being deleted.</p> </li>
    /// <li> <p> <code>delete-complete</code> - Resource discovery deletion is complete.</p> </li>
    /// <li> <p> <code>delete-failed</code> - Resource discovery deletion has failed.</p> </li>
    /// <li> <p> <code>isolate-in-progress</code> - Amazon Web Services account that created the resource discovery has been removed and the resource discovery is being isolated.</p> </li>
    /// <li> <p> <code>isolate-complete</code> - Resource discovery isolation is complete.</p> </li>
    /// <li> <p> <code>restore-in-progress</code> - Amazon Web Services account that created the resource discovery and was isolated has been restored.</p> </li>
    /// </ul>
    pub fn state(mut self, input: crate::types::IpamResourceDiscoveryState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The lifecycle state of the resource discovery.</p>
    /// <ul>
    /// <li> <p> <code>create-in-progress</code> - Resource discovery is being created.</p> </li>
    /// <li> <p> <code>create-complete</code> - Resource discovery creation is complete.</p> </li>
    /// <li> <p> <code>create-failed</code> - Resource discovery creation has failed.</p> </li>
    /// <li> <p> <code>modify-in-progress</code> - Resource discovery is being modified.</p> </li>
    /// <li> <p> <code>modify-complete</code> - Resource discovery modification is complete.</p> </li>
    /// <li> <p> <code>modify-failed</code> - Resource discovery modification has failed.</p> </li>
    /// <li> <p> <code>delete-in-progress</code> - Resource discovery is being deleted.</p> </li>
    /// <li> <p> <code>delete-complete</code> - Resource discovery deletion is complete.</p> </li>
    /// <li> <p> <code>delete-failed</code> - Resource discovery deletion has failed.</p> </li>
    /// <li> <p> <code>isolate-in-progress</code> - Amazon Web Services account that created the resource discovery has been removed and the resource discovery is being isolated.</p> </li>
    /// <li> <p> <code>isolate-complete</code> - Resource discovery isolation is complete.</p> </li>
    /// <li> <p> <code>restore-in-progress</code> - Amazon Web Services account that created the resource discovery and was isolated has been restored.</p> </li>
    /// </ul>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::IpamResourceDiscoveryState>) -> Self {
        self.state = input;
        self
    }
    /// <p>The lifecycle state of the resource discovery.</p>
    /// <ul>
    /// <li> <p> <code>create-in-progress</code> - Resource discovery is being created.</p> </li>
    /// <li> <p> <code>create-complete</code> - Resource discovery creation is complete.</p> </li>
    /// <li> <p> <code>create-failed</code> - Resource discovery creation has failed.</p> </li>
    /// <li> <p> <code>modify-in-progress</code> - Resource discovery is being modified.</p> </li>
    /// <li> <p> <code>modify-complete</code> - Resource discovery modification is complete.</p> </li>
    /// <li> <p> <code>modify-failed</code> - Resource discovery modification has failed.</p> </li>
    /// <li> <p> <code>delete-in-progress</code> - Resource discovery is being deleted.</p> </li>
    /// <li> <p> <code>delete-complete</code> - Resource discovery deletion is complete.</p> </li>
    /// <li> <p> <code>delete-failed</code> - Resource discovery deletion has failed.</p> </li>
    /// <li> <p> <code>isolate-in-progress</code> - Amazon Web Services account that created the resource discovery has been removed and the resource discovery is being isolated.</p> </li>
    /// <li> <p> <code>isolate-complete</code> - Resource discovery isolation is complete.</p> </li>
    /// <li> <p> <code>restore-in-progress</code> - Amazon Web Services account that created the resource discovery and was isolated has been restored.</p> </li>
    /// </ul>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::IpamResourceDiscoveryState> {
        &self.state
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value. You can use tags to search and filter your resources or track your Amazon Web Services costs.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = ::std::option::Option::Some(v);
        self
    }
    /// <p>A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value. You can use tags to search and filter your resources or track your Amazon Web Services costs.</p>
    pub fn set_tags(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Tag>>) -> Self {
        self.tags = input;
        self
    }
    /// <p>A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value. You can use tags to search and filter your resources or track your Amazon Web Services costs.</p>
    pub fn get_tags(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Tag>> {
        &self.tags
    }
    /// Consumes the builder and constructs a [`IpamResourceDiscovery`](crate::types::IpamResourceDiscovery).
    pub fn build(self) -> crate::types::IpamResourceDiscovery {
        crate::types::IpamResourceDiscovery {
            owner_id: self.owner_id,
            ipam_resource_discovery_id: self.ipam_resource_discovery_id,
            ipam_resource_discovery_arn: self.ipam_resource_discovery_arn,
            ipam_resource_discovery_region: self.ipam_resource_discovery_region,
            description: self.description,
            operating_regions: self.operating_regions,
            is_default: self.is_default,
            state: self.state,
            tags: self.tags,
        }
    }
}
