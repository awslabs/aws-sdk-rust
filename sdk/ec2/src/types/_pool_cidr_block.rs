// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a CIDR block for an address pool.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PoolCidrBlock {
    /// <p>The CIDR block.</p>
    #[doc(hidden)]
    pub cidr: std::option::Option<std::string::String>,
}
impl PoolCidrBlock {
    /// <p>The CIDR block.</p>
    pub fn cidr(&self) -> std::option::Option<&str> {
        self.cidr.as_deref()
    }
}
impl PoolCidrBlock {
    /// Creates a new builder-style object to manufacture [`PoolCidrBlock`](crate::types::PoolCidrBlock).
    pub fn builder() -> crate::types::builders::PoolCidrBlockBuilder {
        crate::types::builders::PoolCidrBlockBuilder::default()
    }
}

/// A builder for [`PoolCidrBlock`](crate::types::PoolCidrBlock).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PoolCidrBlockBuilder {
    pub(crate) cidr: std::option::Option<std::string::String>,
}
impl PoolCidrBlockBuilder {
    /// <p>The CIDR block.</p>
    pub fn cidr(mut self, input: impl Into<std::string::String>) -> Self {
        self.cidr = Some(input.into());
        self
    }
    /// <p>The CIDR block.</p>
    pub fn set_cidr(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cidr = input;
        self
    }
    /// Consumes the builder and constructs a [`PoolCidrBlock`](crate::types::PoolCidrBlock).
    pub fn build(self) -> crate::types::PoolCidrBlock {
        crate::types::PoolCidrBlock { cidr: self.cidr }
    }
}
