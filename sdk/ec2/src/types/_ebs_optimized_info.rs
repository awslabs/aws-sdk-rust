// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the optimized EBS performance for supported instance types.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EbsOptimizedInfo {
    /// <p>The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.</p>
    #[doc(hidden)]
    pub baseline_bandwidth_in_mbps: std::option::Option<i32>,
    /// <p>The baseline throughput performance for an EBS-optimized instance type, in MB/s.</p>
    #[doc(hidden)]
    pub baseline_throughput_in_m_bps: std::option::Option<f64>,
    /// <p>The baseline input/output storage operations per seconds for an EBS-optimized instance type.</p>
    #[doc(hidden)]
    pub baseline_iops: std::option::Option<i32>,
    /// <p>The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.</p>
    #[doc(hidden)]
    pub maximum_bandwidth_in_mbps: std::option::Option<i32>,
    /// <p>The maximum throughput performance for an EBS-optimized instance type, in MB/s.</p>
    #[doc(hidden)]
    pub maximum_throughput_in_m_bps: std::option::Option<f64>,
    /// <p>The maximum input/output storage operations per second for an EBS-optimized instance type.</p>
    #[doc(hidden)]
    pub maximum_iops: std::option::Option<i32>,
}
impl EbsOptimizedInfo {
    /// <p>The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.</p>
    pub fn baseline_bandwidth_in_mbps(&self) -> std::option::Option<i32> {
        self.baseline_bandwidth_in_mbps
    }
    /// <p>The baseline throughput performance for an EBS-optimized instance type, in MB/s.</p>
    pub fn baseline_throughput_in_m_bps(&self) -> std::option::Option<f64> {
        self.baseline_throughput_in_m_bps
    }
    /// <p>The baseline input/output storage operations per seconds for an EBS-optimized instance type.</p>
    pub fn baseline_iops(&self) -> std::option::Option<i32> {
        self.baseline_iops
    }
    /// <p>The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.</p>
    pub fn maximum_bandwidth_in_mbps(&self) -> std::option::Option<i32> {
        self.maximum_bandwidth_in_mbps
    }
    /// <p>The maximum throughput performance for an EBS-optimized instance type, in MB/s.</p>
    pub fn maximum_throughput_in_m_bps(&self) -> std::option::Option<f64> {
        self.maximum_throughput_in_m_bps
    }
    /// <p>The maximum input/output storage operations per second for an EBS-optimized instance type.</p>
    pub fn maximum_iops(&self) -> std::option::Option<i32> {
        self.maximum_iops
    }
}
impl EbsOptimizedInfo {
    /// Creates a new builder-style object to manufacture [`EbsOptimizedInfo`](crate::types::EbsOptimizedInfo).
    pub fn builder() -> crate::types::builders::EbsOptimizedInfoBuilder {
        crate::types::builders::EbsOptimizedInfoBuilder::default()
    }
}

/// A builder for [`EbsOptimizedInfo`](crate::types::EbsOptimizedInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EbsOptimizedInfoBuilder {
    pub(crate) baseline_bandwidth_in_mbps: std::option::Option<i32>,
    pub(crate) baseline_throughput_in_m_bps: std::option::Option<f64>,
    pub(crate) baseline_iops: std::option::Option<i32>,
    pub(crate) maximum_bandwidth_in_mbps: std::option::Option<i32>,
    pub(crate) maximum_throughput_in_m_bps: std::option::Option<f64>,
    pub(crate) maximum_iops: std::option::Option<i32>,
}
impl EbsOptimizedInfoBuilder {
    /// <p>The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.</p>
    pub fn baseline_bandwidth_in_mbps(mut self, input: i32) -> Self {
        self.baseline_bandwidth_in_mbps = Some(input);
        self
    }
    /// <p>The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.</p>
    pub fn set_baseline_bandwidth_in_mbps(mut self, input: std::option::Option<i32>) -> Self {
        self.baseline_bandwidth_in_mbps = input;
        self
    }
    /// <p>The baseline throughput performance for an EBS-optimized instance type, in MB/s.</p>
    pub fn baseline_throughput_in_m_bps(mut self, input: f64) -> Self {
        self.baseline_throughput_in_m_bps = Some(input);
        self
    }
    /// <p>The baseline throughput performance for an EBS-optimized instance type, in MB/s.</p>
    pub fn set_baseline_throughput_in_m_bps(mut self, input: std::option::Option<f64>) -> Self {
        self.baseline_throughput_in_m_bps = input;
        self
    }
    /// <p>The baseline input/output storage operations per seconds for an EBS-optimized instance type.</p>
    pub fn baseline_iops(mut self, input: i32) -> Self {
        self.baseline_iops = Some(input);
        self
    }
    /// <p>The baseline input/output storage operations per seconds for an EBS-optimized instance type.</p>
    pub fn set_baseline_iops(mut self, input: std::option::Option<i32>) -> Self {
        self.baseline_iops = input;
        self
    }
    /// <p>The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.</p>
    pub fn maximum_bandwidth_in_mbps(mut self, input: i32) -> Self {
        self.maximum_bandwidth_in_mbps = Some(input);
        self
    }
    /// <p>The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.</p>
    pub fn set_maximum_bandwidth_in_mbps(mut self, input: std::option::Option<i32>) -> Self {
        self.maximum_bandwidth_in_mbps = input;
        self
    }
    /// <p>The maximum throughput performance for an EBS-optimized instance type, in MB/s.</p>
    pub fn maximum_throughput_in_m_bps(mut self, input: f64) -> Self {
        self.maximum_throughput_in_m_bps = Some(input);
        self
    }
    /// <p>The maximum throughput performance for an EBS-optimized instance type, in MB/s.</p>
    pub fn set_maximum_throughput_in_m_bps(mut self, input: std::option::Option<f64>) -> Self {
        self.maximum_throughput_in_m_bps = input;
        self
    }
    /// <p>The maximum input/output storage operations per second for an EBS-optimized instance type.</p>
    pub fn maximum_iops(mut self, input: i32) -> Self {
        self.maximum_iops = Some(input);
        self
    }
    /// <p>The maximum input/output storage operations per second for an EBS-optimized instance type.</p>
    pub fn set_maximum_iops(mut self, input: std::option::Option<i32>) -> Self {
        self.maximum_iops = input;
        self
    }
    /// Consumes the builder and constructs a [`EbsOptimizedInfo`](crate::types::EbsOptimizedInfo).
    pub fn build(self) -> crate::types::EbsOptimizedInfo {
        crate::types::EbsOptimizedInfo {
            baseline_bandwidth_in_mbps: self.baseline_bandwidth_in_mbps,
            baseline_throughput_in_m_bps: self.baseline_throughput_in_m_bps,
            baseline_iops: self.baseline_iops,
            maximum_bandwidth_in_mbps: self.maximum_bandwidth_in_mbps,
            maximum_throughput_in_m_bps: self.maximum_throughput_in_m_bps,
            maximum_iops: self.maximum_iops,
        }
    }
}
