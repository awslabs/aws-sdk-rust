// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the state of a Client VPN endpoint.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClientVpnEndpointStatus {
    /// <p>The state of the Client VPN endpoint. Possible states include:</p>
    /// <ul>
    /// <li> <p> <code>pending-associate</code> - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.</p> </li>
    /// <li> <p> <code>available</code> - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.</p> </li>
    /// <li> <p> <code>deleting</code> - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.</p> </li>
    /// <li> <p> <code>deleted</code> - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub code: std::option::Option<crate::types::ClientVpnEndpointStatusCode>,
    /// <p>A message about the status of the Client VPN endpoint.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl ClientVpnEndpointStatus {
    /// <p>The state of the Client VPN endpoint. Possible states include:</p>
    /// <ul>
    /// <li> <p> <code>pending-associate</code> - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.</p> </li>
    /// <li> <p> <code>available</code> - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.</p> </li>
    /// <li> <p> <code>deleting</code> - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.</p> </li>
    /// <li> <p> <code>deleted</code> - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.</p> </li>
    /// </ul>
    pub fn code(&self) -> std::option::Option<&crate::types::ClientVpnEndpointStatusCode> {
        self.code.as_ref()
    }
    /// <p>A message about the status of the Client VPN endpoint.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl ClientVpnEndpointStatus {
    /// Creates a new builder-style object to manufacture [`ClientVpnEndpointStatus`](crate::types::ClientVpnEndpointStatus).
    pub fn builder() -> crate::types::builders::ClientVpnEndpointStatusBuilder {
        crate::types::builders::ClientVpnEndpointStatusBuilder::default()
    }
}

/// A builder for [`ClientVpnEndpointStatus`](crate::types::ClientVpnEndpointStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClientVpnEndpointStatusBuilder {
    pub(crate) code: std::option::Option<crate::types::ClientVpnEndpointStatusCode>,
    pub(crate) message: std::option::Option<std::string::String>,
}
impl ClientVpnEndpointStatusBuilder {
    /// <p>The state of the Client VPN endpoint. Possible states include:</p>
    /// <ul>
    /// <li> <p> <code>pending-associate</code> - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.</p> </li>
    /// <li> <p> <code>available</code> - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.</p> </li>
    /// <li> <p> <code>deleting</code> - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.</p> </li>
    /// <li> <p> <code>deleted</code> - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.</p> </li>
    /// </ul>
    pub fn code(mut self, input: crate::types::ClientVpnEndpointStatusCode) -> Self {
        self.code = Some(input);
        self
    }
    /// <p>The state of the Client VPN endpoint. Possible states include:</p>
    /// <ul>
    /// <li> <p> <code>pending-associate</code> - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.</p> </li>
    /// <li> <p> <code>available</code> - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.</p> </li>
    /// <li> <p> <code>deleting</code> - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.</p> </li>
    /// <li> <p> <code>deleted</code> - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.</p> </li>
    /// </ul>
    pub fn set_code(
        mut self,
        input: std::option::Option<crate::types::ClientVpnEndpointStatusCode>,
    ) -> Self {
        self.code = input;
        self
    }
    /// <p>A message about the status of the Client VPN endpoint.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>A message about the status of the Client VPN endpoint.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`ClientVpnEndpointStatus`](crate::types::ClientVpnEndpointStatus).
    pub fn build(self) -> crate::types::ClientVpnEndpointStatus {
        crate::types::ClientVpnEndpointStatus {
            code: self.code,
            message: self.message,
        }
    }
}
