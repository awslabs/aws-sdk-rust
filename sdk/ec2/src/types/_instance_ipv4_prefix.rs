// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an IPv4 prefix.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InstanceIpv4Prefix {
    /// <p>One or more IPv4 prefixes assigned to the network interface.</p>
    #[doc(hidden)]
    pub ipv4_prefix: std::option::Option<std::string::String>,
}
impl InstanceIpv4Prefix {
    /// <p>One or more IPv4 prefixes assigned to the network interface.</p>
    pub fn ipv4_prefix(&self) -> std::option::Option<&str> {
        self.ipv4_prefix.as_deref()
    }
}
impl InstanceIpv4Prefix {
    /// Creates a new builder-style object to manufacture [`InstanceIpv4Prefix`](crate::types::InstanceIpv4Prefix).
    pub fn builder() -> crate::types::builders::InstanceIpv4PrefixBuilder {
        crate::types::builders::InstanceIpv4PrefixBuilder::default()
    }
}

/// A builder for [`InstanceIpv4Prefix`](crate::types::InstanceIpv4Prefix).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InstanceIpv4PrefixBuilder {
    pub(crate) ipv4_prefix: std::option::Option<std::string::String>,
}
impl InstanceIpv4PrefixBuilder {
    /// <p>One or more IPv4 prefixes assigned to the network interface.</p>
    pub fn ipv4_prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.ipv4_prefix = Some(input.into());
        self
    }
    /// <p>One or more IPv4 prefixes assigned to the network interface.</p>
    pub fn set_ipv4_prefix(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ipv4_prefix = input;
        self
    }
    /// Consumes the builder and constructs a [`InstanceIpv4Prefix`](crate::types::InstanceIpv4Prefix).
    pub fn build(self) -> crate::types::InstanceIpv4Prefix {
        crate::types::InstanceIpv4Prefix {
            ipv4_prefix: self.ipv4_prefix,
        }
    }
}
