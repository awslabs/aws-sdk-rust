// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of an updated pointer (PTR) record for an Elastic IP address.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PtrUpdateStatus {
    /// <p>The value for the PTR record update.</p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
    /// <p>The status of the PTR record update.</p>
    #[doc(hidden)]
    pub status: std::option::Option<std::string::String>,
    /// <p>The reason for the PTR record update.</p>
    #[doc(hidden)]
    pub reason: std::option::Option<std::string::String>,
}
impl PtrUpdateStatus {
    /// <p>The value for the PTR record update.</p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
    /// <p>The status of the PTR record update.</p>
    pub fn status(&self) -> std::option::Option<&str> {
        self.status.as_deref()
    }
    /// <p>The reason for the PTR record update.</p>
    pub fn reason(&self) -> std::option::Option<&str> {
        self.reason.as_deref()
    }
}
impl PtrUpdateStatus {
    /// Creates a new builder-style object to manufacture [`PtrUpdateStatus`](crate::types::PtrUpdateStatus).
    pub fn builder() -> crate::types::builders::PtrUpdateStatusBuilder {
        crate::types::builders::PtrUpdateStatusBuilder::default()
    }
}

/// A builder for [`PtrUpdateStatus`](crate::types::PtrUpdateStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PtrUpdateStatusBuilder {
    pub(crate) value: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<std::string::String>,
    pub(crate) reason: std::option::Option<std::string::String>,
}
impl PtrUpdateStatusBuilder {
    /// <p>The value for the PTR record update.</p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value for the PTR record update.</p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// <p>The status of the PTR record update.</p>
    pub fn status(mut self, input: impl Into<std::string::String>) -> Self {
        self.status = Some(input.into());
        self
    }
    /// <p>The status of the PTR record update.</p>
    pub fn set_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>The reason for the PTR record update.</p>
    pub fn reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.reason = Some(input.into());
        self
    }
    /// <p>The reason for the PTR record update.</p>
    pub fn set_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.reason = input;
        self
    }
    /// Consumes the builder and constructs a [`PtrUpdateStatus`](crate::types::PtrUpdateStatus).
    pub fn build(self) -> crate::types::PtrUpdateStatus {
        crate::types::PtrUpdateStatus {
            value: self.value,
            status: self.status,
            reason: self.reason,
        }
    }
}
