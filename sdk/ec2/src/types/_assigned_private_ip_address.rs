// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the private IP addresses assigned to a network interface.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssignedPrivateIpAddress {
    /// <p>The private IP address assigned to the network interface.</p>
    #[doc(hidden)]
    pub private_ip_address: std::option::Option<std::string::String>,
}
impl AssignedPrivateIpAddress {
    /// <p>The private IP address assigned to the network interface.</p>
    pub fn private_ip_address(&self) -> std::option::Option<&str> {
        self.private_ip_address.as_deref()
    }
}
impl AssignedPrivateIpAddress {
    /// Creates a new builder-style object to manufacture [`AssignedPrivateIpAddress`](crate::types::AssignedPrivateIpAddress).
    pub fn builder() -> crate::types::builders::AssignedPrivateIpAddressBuilder {
        crate::types::builders::AssignedPrivateIpAddressBuilder::default()
    }
}

/// A builder for [`AssignedPrivateIpAddress`](crate::types::AssignedPrivateIpAddress).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssignedPrivateIpAddressBuilder {
    pub(crate) private_ip_address: std::option::Option<std::string::String>,
}
impl AssignedPrivateIpAddressBuilder {
    /// <p>The private IP address assigned to the network interface.</p>
    pub fn private_ip_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.private_ip_address = Some(input.into());
        self
    }
    /// <p>The private IP address assigned to the network interface.</p>
    pub fn set_private_ip_address(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.private_ip_address = input;
        self
    }
    /// Consumes the builder and constructs a [`AssignedPrivateIpAddress`](crate::types::AssignedPrivateIpAddress).
    pub fn build(self) -> crate::types::AssignedPrivateIpAddress {
        crate::types::AssignedPrivateIpAddress {
            private_ip_address: self.private_ip_address,
        }
    }
}
