// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a virtual private gateway propagating route.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PropagatingVgw {
    /// <p>The ID of the virtual private gateway.</p>
    #[doc(hidden)]
    pub gateway_id: std::option::Option<std::string::String>,
}
impl PropagatingVgw {
    /// <p>The ID of the virtual private gateway.</p>
    pub fn gateway_id(&self) -> std::option::Option<&str> {
        self.gateway_id.as_deref()
    }
}
impl PropagatingVgw {
    /// Creates a new builder-style object to manufacture [`PropagatingVgw`](crate::types::PropagatingVgw).
    pub fn builder() -> crate::types::builders::PropagatingVgwBuilder {
        crate::types::builders::PropagatingVgwBuilder::default()
    }
}

/// A builder for [`PropagatingVgw`](crate::types::PropagatingVgw).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PropagatingVgwBuilder {
    pub(crate) gateway_id: std::option::Option<std::string::String>,
}
impl PropagatingVgwBuilder {
    /// <p>The ID of the virtual private gateway.</p>
    pub fn gateway_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.gateway_id = Some(input.into());
        self
    }
    /// <p>The ID of the virtual private gateway.</p>
    pub fn set_gateway_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.gateway_id = input;
        self
    }
    /// Consumes the builder and constructs a [`PropagatingVgw`](crate::types::PropagatingVgw).
    pub fn build(self) -> crate::types::PropagatingVgw {
        crate::types::PropagatingVgw {
            gateway_id: self.gateway_id,
        }
    }
}
