// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The operating Regions for an IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.</p>
/// <p>For more information about operating Regions, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/create-ipam.html">Create an IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IpamOperatingRegion {
    /// <p>The name of the operating Region.</p>
    #[doc(hidden)]
    pub region_name: std::option::Option<std::string::String>,
}
impl IpamOperatingRegion {
    /// <p>The name of the operating Region.</p>
    pub fn region_name(&self) -> std::option::Option<&str> {
        self.region_name.as_deref()
    }
}
impl IpamOperatingRegion {
    /// Creates a new builder-style object to manufacture [`IpamOperatingRegion`](crate::types::IpamOperatingRegion).
    pub fn builder() -> crate::types::builders::IpamOperatingRegionBuilder {
        crate::types::builders::IpamOperatingRegionBuilder::default()
    }
}

/// A builder for [`IpamOperatingRegion`](crate::types::IpamOperatingRegion).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IpamOperatingRegionBuilder {
    pub(crate) region_name: std::option::Option<std::string::String>,
}
impl IpamOperatingRegionBuilder {
    /// <p>The name of the operating Region.</p>
    pub fn region_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.region_name = Some(input.into());
        self
    }
    /// <p>The name of the operating Region.</p>
    pub fn set_region_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.region_name = input;
        self
    }
    /// Consumes the builder and constructs a [`IpamOperatingRegion`](crate::types::IpamOperatingRegion).
    pub fn build(self) -> crate::types::IpamOperatingRegion {
        crate::types::IpamOperatingRegion {
            region_name: self.region_name,
        }
    }
}
