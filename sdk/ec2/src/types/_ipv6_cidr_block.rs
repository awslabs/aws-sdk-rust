// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an IPv6 CIDR block.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Ipv6CidrBlock {
    /// <p>The IPv6 CIDR block.</p>
    #[doc(hidden)]
    pub ipv6_cidr_block: std::option::Option<std::string::String>,
}
impl Ipv6CidrBlock {
    /// <p>The IPv6 CIDR block.</p>
    pub fn ipv6_cidr_block(&self) -> std::option::Option<&str> {
        self.ipv6_cidr_block.as_deref()
    }
}
impl Ipv6CidrBlock {
    /// Creates a new builder-style object to manufacture [`Ipv6CidrBlock`](crate::types::Ipv6CidrBlock).
    pub fn builder() -> crate::types::builders::Ipv6CidrBlockBuilder {
        crate::types::builders::Ipv6CidrBlockBuilder::default()
    }
}

/// A builder for [`Ipv6CidrBlock`](crate::types::Ipv6CidrBlock).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct Ipv6CidrBlockBuilder {
    pub(crate) ipv6_cidr_block: std::option::Option<std::string::String>,
}
impl Ipv6CidrBlockBuilder {
    /// <p>The IPv6 CIDR block.</p>
    pub fn ipv6_cidr_block(mut self, input: impl Into<std::string::String>) -> Self {
        self.ipv6_cidr_block = Some(input.into());
        self
    }
    /// <p>The IPv6 CIDR block.</p>
    pub fn set_ipv6_cidr_block(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ipv6_cidr_block = input;
        self
    }
    /// Consumes the builder and constructs a [`Ipv6CidrBlock`](crate::types::Ipv6CidrBlock).
    pub fn build(self) -> crate::types::Ipv6CidrBlock {
        crate::types::Ipv6CidrBlock {
            ipv6_cidr_block: self.ipv6_cidr_block,
        }
    }
}
