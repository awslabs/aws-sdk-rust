// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the Connect attachment options.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TransitGatewayConnectOptions {
    /// <p>The tunnel protocol.</p>
    #[doc(hidden)]
    pub protocol: std::option::Option<crate::types::ProtocolValue>,
}
impl TransitGatewayConnectOptions {
    /// <p>The tunnel protocol.</p>
    pub fn protocol(&self) -> std::option::Option<&crate::types::ProtocolValue> {
        self.protocol.as_ref()
    }
}
impl TransitGatewayConnectOptions {
    /// Creates a new builder-style object to manufacture [`TransitGatewayConnectOptions`](crate::types::TransitGatewayConnectOptions).
    pub fn builder() -> crate::types::builders::TransitGatewayConnectOptionsBuilder {
        crate::types::builders::TransitGatewayConnectOptionsBuilder::default()
    }
}

/// A builder for [`TransitGatewayConnectOptions`](crate::types::TransitGatewayConnectOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TransitGatewayConnectOptionsBuilder {
    pub(crate) protocol: std::option::Option<crate::types::ProtocolValue>,
}
impl TransitGatewayConnectOptionsBuilder {
    /// <p>The tunnel protocol.</p>
    pub fn protocol(mut self, input: crate::types::ProtocolValue) -> Self {
        self.protocol = Some(input);
        self
    }
    /// <p>The tunnel protocol.</p>
    pub fn set_protocol(mut self, input: std::option::Option<crate::types::ProtocolValue>) -> Self {
        self.protocol = input;
        self
    }
    /// Consumes the builder and constructs a [`TransitGatewayConnectOptions`](crate::types::TransitGatewayConnectOptions).
    pub fn build(self) -> crate::types::TransitGatewayConnectOptions {
        crate::types::TransitGatewayConnectOptions {
            protocol: self.protocol,
        }
    }
}
