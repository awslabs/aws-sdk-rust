// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an instance to export.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InstanceExportDetails {
    /// <p>The ID of the resource being exported.</p>
    #[doc(hidden)]
    pub instance_id: std::option::Option<std::string::String>,
    /// <p>The target virtualization environment.</p>
    #[doc(hidden)]
    pub target_environment: std::option::Option<crate::types::ExportEnvironment>,
}
impl InstanceExportDetails {
    /// <p>The ID of the resource being exported.</p>
    pub fn instance_id(&self) -> std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The target virtualization environment.</p>
    pub fn target_environment(&self) -> std::option::Option<&crate::types::ExportEnvironment> {
        self.target_environment.as_ref()
    }
}
impl InstanceExportDetails {
    /// Creates a new builder-style object to manufacture [`InstanceExportDetails`](crate::types::InstanceExportDetails).
    pub fn builder() -> crate::types::builders::InstanceExportDetailsBuilder {
        crate::types::builders::InstanceExportDetailsBuilder::default()
    }
}

/// A builder for [`InstanceExportDetails`](crate::types::InstanceExportDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InstanceExportDetailsBuilder {
    pub(crate) instance_id: std::option::Option<std::string::String>,
    pub(crate) target_environment: std::option::Option<crate::types::ExportEnvironment>,
}
impl InstanceExportDetailsBuilder {
    /// <p>The ID of the resource being exported.</p>
    pub fn instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_id = Some(input.into());
        self
    }
    /// <p>The ID of the resource being exported.</p>
    pub fn set_instance_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The target virtualization environment.</p>
    pub fn target_environment(mut self, input: crate::types::ExportEnvironment) -> Self {
        self.target_environment = Some(input);
        self
    }
    /// <p>The target virtualization environment.</p>
    pub fn set_target_environment(
        mut self,
        input: std::option::Option<crate::types::ExportEnvironment>,
    ) -> Self {
        self.target_environment = input;
        self
    }
    /// Consumes the builder and constructs a [`InstanceExportDetails`](crate::types::InstanceExportDetails).
    pub fn build(self) -> crate::types::InstanceExportDetails {
        crate::types::InstanceExportDetails {
            instance_id: self.instance_id,
            target_environment: self.target_environment,
        }
    }
}
