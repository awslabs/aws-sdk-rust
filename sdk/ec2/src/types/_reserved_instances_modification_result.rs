// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the modification request/s.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReservedInstancesModificationResult {
    /// <p>The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.</p>
    #[doc(hidden)]
    pub reserved_instances_id: std::option::Option<std::string::String>,
    /// <p>The target Reserved Instances configurations supplied as part of the modification request.</p>
    #[doc(hidden)]
    pub target_configuration: std::option::Option<crate::types::ReservedInstancesConfiguration>,
}
impl ReservedInstancesModificationResult {
    /// <p>The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.</p>
    pub fn reserved_instances_id(&self) -> std::option::Option<&str> {
        self.reserved_instances_id.as_deref()
    }
    /// <p>The target Reserved Instances configurations supplied as part of the modification request.</p>
    pub fn target_configuration(
        &self,
    ) -> std::option::Option<&crate::types::ReservedInstancesConfiguration> {
        self.target_configuration.as_ref()
    }
}
impl ReservedInstancesModificationResult {
    /// Creates a new builder-style object to manufacture [`ReservedInstancesModificationResult`](crate::types::ReservedInstancesModificationResult).
    pub fn builder() -> crate::types::builders::ReservedInstancesModificationResultBuilder {
        crate::types::builders::ReservedInstancesModificationResultBuilder::default()
    }
}

/// A builder for [`ReservedInstancesModificationResult`](crate::types::ReservedInstancesModificationResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReservedInstancesModificationResultBuilder {
    pub(crate) reserved_instances_id: std::option::Option<std::string::String>,
    pub(crate) target_configuration:
        std::option::Option<crate::types::ReservedInstancesConfiguration>,
}
impl ReservedInstancesModificationResultBuilder {
    /// <p>The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.</p>
    pub fn reserved_instances_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.reserved_instances_id = Some(input.into());
        self
    }
    /// <p>The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.</p>
    pub fn set_reserved_instances_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.reserved_instances_id = input;
        self
    }
    /// <p>The target Reserved Instances configurations supplied as part of the modification request.</p>
    pub fn target_configuration(
        mut self,
        input: crate::types::ReservedInstancesConfiguration,
    ) -> Self {
        self.target_configuration = Some(input);
        self
    }
    /// <p>The target Reserved Instances configurations supplied as part of the modification request.</p>
    pub fn set_target_configuration(
        mut self,
        input: std::option::Option<crate::types::ReservedInstancesConfiguration>,
    ) -> Self {
        self.target_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`ReservedInstancesModificationResult`](crate::types::ReservedInstancesModificationResult).
    pub fn build(self) -> crate::types::ReservedInstancesModificationResult {
        crate::types::ReservedInstancesModificationResult {
            reserved_instances_id: self.reserved_instances_id,
            target_configuration: self.target_configuration,
        }
    }
}
