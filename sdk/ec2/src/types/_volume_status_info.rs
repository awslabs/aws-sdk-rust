// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the status of a volume.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VolumeStatusInfo {
    /// <p>The details of the volume status.</p>
    #[doc(hidden)]
    pub details: std::option::Option<std::vec::Vec<crate::types::VolumeStatusDetails>>,
    /// <p>The status of the volume.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::VolumeStatusInfoStatus>,
}
impl VolumeStatusInfo {
    /// <p>The details of the volume status.</p>
    pub fn details(&self) -> std::option::Option<&[crate::types::VolumeStatusDetails]> {
        self.details.as_deref()
    }
    /// <p>The status of the volume.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::VolumeStatusInfoStatus> {
        self.status.as_ref()
    }
}
impl VolumeStatusInfo {
    /// Creates a new builder-style object to manufacture [`VolumeStatusInfo`](crate::types::VolumeStatusInfo).
    pub fn builder() -> crate::types::builders::VolumeStatusInfoBuilder {
        crate::types::builders::VolumeStatusInfoBuilder::default()
    }
}

/// A builder for [`VolumeStatusInfo`](crate::types::VolumeStatusInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VolumeStatusInfoBuilder {
    pub(crate) details: std::option::Option<std::vec::Vec<crate::types::VolumeStatusDetails>>,
    pub(crate) status: std::option::Option<crate::types::VolumeStatusInfoStatus>,
}
impl VolumeStatusInfoBuilder {
    /// Appends an item to `details`.
    ///
    /// To override the contents of this collection use [`set_details`](Self::set_details).
    ///
    /// <p>The details of the volume status.</p>
    pub fn details(mut self, input: crate::types::VolumeStatusDetails) -> Self {
        let mut v = self.details.unwrap_or_default();
        v.push(input);
        self.details = Some(v);
        self
    }
    /// <p>The details of the volume status.</p>
    pub fn set_details(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::VolumeStatusDetails>>,
    ) -> Self {
        self.details = input;
        self
    }
    /// <p>The status of the volume.</p>
    pub fn status(mut self, input: crate::types::VolumeStatusInfoStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the volume.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::VolumeStatusInfoStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`VolumeStatusInfo`](crate::types::VolumeStatusInfo).
    pub fn build(self) -> crate::types::VolumeStatusInfo {
        crate::types::VolumeStatusInfo {
            details: self.details,
            status: self.status,
        }
    }
}
