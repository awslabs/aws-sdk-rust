// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a Verified Access instance.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VerifiedAccessInstance {
    /// <p>The ID of the Amazon Web Services Verified Access instance.</p>
    #[doc(hidden)]
    pub verified_access_instance_id: std::option::Option<std::string::String>,
    /// <p>A description for the Amazon Web Services Verified Access instance.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The IDs of the Amazon Web Services Verified Access trust providers.</p>
    #[doc(hidden)]
    pub verified_access_trust_providers:
        std::option::Option<std::vec::Vec<crate::types::VerifiedAccessTrustProviderCondensed>>,
    /// <p>The creation time.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<std::string::String>,
    /// <p>The last updated time.</p>
    #[doc(hidden)]
    pub last_updated_time: std::option::Option<std::string::String>,
    /// <p>The tags.</p>
    #[doc(hidden)]
    pub tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl VerifiedAccessInstance {
    /// <p>The ID of the Amazon Web Services Verified Access instance.</p>
    pub fn verified_access_instance_id(&self) -> std::option::Option<&str> {
        self.verified_access_instance_id.as_deref()
    }
    /// <p>A description for the Amazon Web Services Verified Access instance.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The IDs of the Amazon Web Services Verified Access trust providers.</p>
    pub fn verified_access_trust_providers(
        &self,
    ) -> std::option::Option<&[crate::types::VerifiedAccessTrustProviderCondensed]> {
        self.verified_access_trust_providers.as_deref()
    }
    /// <p>The creation time.</p>
    pub fn creation_time(&self) -> std::option::Option<&str> {
        self.creation_time.as_deref()
    }
    /// <p>The last updated time.</p>
    pub fn last_updated_time(&self) -> std::option::Option<&str> {
        self.last_updated_time.as_deref()
    }
    /// <p>The tags.</p>
    pub fn tags(&self) -> std::option::Option<&[crate::types::Tag]> {
        self.tags.as_deref()
    }
}
impl VerifiedAccessInstance {
    /// Creates a new builder-style object to manufacture [`VerifiedAccessInstance`](crate::types::VerifiedAccessInstance).
    pub fn builder() -> crate::types::builders::VerifiedAccessInstanceBuilder {
        crate::types::builders::VerifiedAccessInstanceBuilder::default()
    }
}

/// A builder for [`VerifiedAccessInstance`](crate::types::VerifiedAccessInstance).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VerifiedAccessInstanceBuilder {
    pub(crate) verified_access_instance_id: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) verified_access_trust_providers:
        std::option::Option<std::vec::Vec<crate::types::VerifiedAccessTrustProviderCondensed>>,
    pub(crate) creation_time: std::option::Option<std::string::String>,
    pub(crate) last_updated_time: std::option::Option<std::string::String>,
    pub(crate) tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl VerifiedAccessInstanceBuilder {
    /// <p>The ID of the Amazon Web Services Verified Access instance.</p>
    pub fn verified_access_instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.verified_access_instance_id = Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services Verified Access instance.</p>
    pub fn set_verified_access_instance_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.verified_access_instance_id = input;
        self
    }
    /// <p>A description for the Amazon Web Services Verified Access instance.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>A description for the Amazon Web Services Verified Access instance.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Appends an item to `verified_access_trust_providers`.
    ///
    /// To override the contents of this collection use [`set_verified_access_trust_providers`](Self::set_verified_access_trust_providers).
    ///
    /// <p>The IDs of the Amazon Web Services Verified Access trust providers.</p>
    pub fn verified_access_trust_providers(
        mut self,
        input: crate::types::VerifiedAccessTrustProviderCondensed,
    ) -> Self {
        let mut v = self.verified_access_trust_providers.unwrap_or_default();
        v.push(input);
        self.verified_access_trust_providers = Some(v);
        self
    }
    /// <p>The IDs of the Amazon Web Services Verified Access trust providers.</p>
    pub fn set_verified_access_trust_providers(
        mut self,
        input: std::option::Option<
            std::vec::Vec<crate::types::VerifiedAccessTrustProviderCondensed>,
        >,
    ) -> Self {
        self.verified_access_trust_providers = input;
        self
    }
    /// <p>The creation time.</p>
    pub fn creation_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.creation_time = Some(input.into());
        self
    }
    /// <p>The creation time.</p>
    pub fn set_creation_time(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The last updated time.</p>
    pub fn last_updated_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_updated_time = Some(input.into());
        self
    }
    /// <p>The last updated time.</p>
    pub fn set_last_updated_time(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.last_updated_time = input;
        self
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>The tags.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = Some(v);
        self
    }
    /// <p>The tags.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`VerifiedAccessInstance`](crate::types::VerifiedAccessInstance).
    pub fn build(self) -> crate::types::VerifiedAccessInstance {
        crate::types::VerifiedAccessInstance {
            verified_access_instance_id: self.verified_access_instance_id,
            description: self.description,
            verified_access_trust_providers: self.verified_access_trust_providers,
            creation_time: self.creation_time,
            last_updated_time: self.last_updated_time,
            tags: self.tags,
        }
    }
}
