// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_run_scheduled_instances_input_input(
    input: &crate::operation::run_scheduled_instances::RunScheduledInstancesInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "RunScheduledInstances", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("ClientToken");
    if let Some(var_2) = &input.client_token {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("DryRun");
    if let Some(var_4) = &input.dry_run {
        scope_3.boolean(*var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("InstanceCount");
    if let Some(var_6) = &input.instance_count {
        scope_5.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("LaunchSpecification");
    if let Some(var_8) = &input.launch_specification {
        crate::protocol_serde::shape_scheduled_instances_launch_specification::ser_scheduled_instances_launch_specification(scope_7, var_8)?;
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("ScheduledInstanceId");
    if let Some(var_10) = &input.scheduled_instance_id {
        scope_9.string(var_10);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
