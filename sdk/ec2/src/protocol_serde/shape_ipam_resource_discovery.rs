// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_ipam_resource_discovery(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::IpamResourceDiscovery, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::IpamResourceDiscovery::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ownerId") /* OwnerId com.amazonaws.ec2#IpamResourceDiscovery$OwnerId */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_owner_id(var_1);
            }
            ,
            s if s.matches("ipamResourceDiscoveryId") /* IpamResourceDiscoveryId com.amazonaws.ec2#IpamResourceDiscovery$IpamResourceDiscoveryId */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_ipam_resource_discovery_id(var_2);
            }
            ,
            s if s.matches("ipamResourceDiscoveryArn") /* IpamResourceDiscoveryArn com.amazonaws.ec2#IpamResourceDiscovery$IpamResourceDiscoveryArn */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_ipam_resource_discovery_arn(var_3);
            }
            ,
            s if s.matches("ipamResourceDiscoveryRegion") /* IpamResourceDiscoveryRegion com.amazonaws.ec2#IpamResourceDiscovery$IpamResourceDiscoveryRegion */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_ipam_resource_discovery_region(var_4);
            }
            ,
            s if s.matches("description") /* Description com.amazonaws.ec2#IpamResourceDiscovery$Description */ =>  {
                let var_5 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_5);
            }
            ,
            s if s.matches("operatingRegionSet") /* OperatingRegions com.amazonaws.ec2#IpamResourceDiscovery$OperatingRegions */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_ipam_operating_region_set::de_ipam_operating_region_set(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_operating_regions(var_6);
            }
            ,
            s if s.matches("isDefault") /* IsDefault com.amazonaws.ec2#IpamResourceDiscovery$IsDefault */ =>  {
                let var_7 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.ec2#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_is_default(var_7);
            }
            ,
            s if s.matches("state") /* State com.amazonaws.ec2#IpamResourceDiscovery$State */ =>  {
                let var_8 =
                    Some(
                        Result::<crate::types::IpamResourceDiscoveryState, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::IpamResourceDiscoveryState::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_state(var_8);
            }
            ,
            s if s.matches("tagSet") /* Tags com.amazonaws.ec2#IpamResourceDiscovery$Tags */ =>  {
                let var_9 =
                    Some(
                        crate::protocol_serde::shape_tag_list::de_tag_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tags(var_9);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
