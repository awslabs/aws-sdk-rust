// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_ipam_prefix_list_resolver_rule_request(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::IpamPrefixListResolverRuleRequest,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("RuleType");
    if let Some(var_2) = &input.rule_type {
        scope_1.string(var_2.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("StaticCidr");
    if let Some(var_4) = &input.static_cidr {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("IpamScopeId");
    if let Some(var_6) = &input.ipam_scope_id {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("ResourceType");
    if let Some(var_8) = &input.resource_type {
        scope_7.string(var_8.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("Condition");
    if let Some(var_10) = &input.conditions {
        if !var_10.is_empty() {
            let mut list_12 = scope_9.start_list(true, Some("Condition"));
            for item_11 in var_10 {
                #[allow(unused_mut)]
                let mut entry_13 = list_12.entry();
                crate::protocol_serde::shape_ipam_prefix_list_resolver_rule_condition_request::ser_ipam_prefix_list_resolver_rule_condition_request(
                    entry_13, item_11,
                )?;
            }
            list_12.finish();
        }
    }
    Ok(())
}
