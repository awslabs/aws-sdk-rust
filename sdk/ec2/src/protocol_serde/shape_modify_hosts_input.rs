// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_hosts_input_input(
    input: &crate::operation::modify_hosts::ModifyHostsInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "ModifyHosts", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("AutoPlacement");
    if let Some(var_2) = &input.auto_placement {
        scope_1.string(var_2.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("HostId");
    if let Some(var_4) = &input.host_ids {
        let mut list_6 = scope_3.start_list(true, Some("item"));
        for item_5 in var_4 {
            #[allow(unused_mut)]
            let mut entry_7 = list_6.entry();
            entry_7.string(item_5);
        }
        list_6.finish();
    }
    #[allow(unused_mut)]
    let mut scope_8 = writer.prefix("HostRecovery");
    if let Some(var_9) = &input.host_recovery {
        scope_8.string(var_9.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_10 = writer.prefix("InstanceType");
    if let Some(var_11) = &input.instance_type {
        scope_10.string(var_11);
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("InstanceFamily");
    if let Some(var_13) = &input.instance_family {
        scope_12.string(var_13);
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("HostMaintenance");
    if let Some(var_15) = &input.host_maintenance {
        scope_14.string(var_15.as_str());
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
