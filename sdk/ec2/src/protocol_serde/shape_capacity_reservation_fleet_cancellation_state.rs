// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_capacity_reservation_fleet_cancellation_state(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<
    crate::types::CapacityReservationFleetCancellationState,
    aws_smithy_xml::decode::XmlDecodeError,
> {
    #[allow(unused_mut)]
    let mut builder = crate::types::CapacityReservationFleetCancellationState::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("currentFleetState") /* CurrentFleetState com.amazonaws.ec2#CapacityReservationFleetCancellationState$CurrentFleetState */ =>  {
                let var_1 =
                    Some(
                        Result::<crate::types::CapacityReservationFleetState, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::CapacityReservationFleetState::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_current_fleet_state(var_1);
            }
            ,
            s if s.matches("previousFleetState") /* PreviousFleetState com.amazonaws.ec2#CapacityReservationFleetCancellationState$PreviousFleetState */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::CapacityReservationFleetState, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::CapacityReservationFleetState::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_previous_fleet_state(var_2);
            }
            ,
            s if s.matches("capacityReservationFleetId") /* CapacityReservationFleetId com.amazonaws.ec2#CapacityReservationFleetCancellationState$CapacityReservationFleetId */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_capacity_reservation_fleet_id(var_3);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
