// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_verified_access_endpoint(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::VerifiedAccessEndpoint, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::VerifiedAccessEndpoint::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("verifiedAccessInstanceId") /* VerifiedAccessInstanceId com.amazonaws.ec2#VerifiedAccessEndpoint$VerifiedAccessInstanceId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_verified_access_instance_id(var_1);
            }
            ,
            s if s.matches("verifiedAccessGroupId") /* VerifiedAccessGroupId com.amazonaws.ec2#VerifiedAccessEndpoint$VerifiedAccessGroupId */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_verified_access_group_id(var_2);
            }
            ,
            s if s.matches("verifiedAccessEndpointId") /* VerifiedAccessEndpointId com.amazonaws.ec2#VerifiedAccessEndpoint$VerifiedAccessEndpointId */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_verified_access_endpoint_id(var_3);
            }
            ,
            s if s.matches("applicationDomain") /* ApplicationDomain com.amazonaws.ec2#VerifiedAccessEndpoint$ApplicationDomain */ =>  {
                let var_4 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_application_domain(var_4);
            }
            ,
            s if s.matches("endpointType") /* EndpointType com.amazonaws.ec2#VerifiedAccessEndpoint$EndpointType */ =>  {
                let var_5 =
                    Some(
                        Result::<crate::types::VerifiedAccessEndpointType, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::VerifiedAccessEndpointType::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_endpoint_type(var_5);
            }
            ,
            s if s.matches("attachmentType") /* AttachmentType com.amazonaws.ec2#VerifiedAccessEndpoint$AttachmentType */ =>  {
                let var_6 =
                    Some(
                        Result::<crate::types::VerifiedAccessEndpointAttachmentType, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::VerifiedAccessEndpointAttachmentType::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_attachment_type(var_6);
            }
            ,
            s if s.matches("domainCertificateArn") /* DomainCertificateArn com.amazonaws.ec2#VerifiedAccessEndpoint$DomainCertificateArn */ =>  {
                let var_7 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_domain_certificate_arn(var_7);
            }
            ,
            s if s.matches("endpointDomain") /* EndpointDomain com.amazonaws.ec2#VerifiedAccessEndpoint$EndpointDomain */ =>  {
                let var_8 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_endpoint_domain(var_8);
            }
            ,
            s if s.matches("deviceValidationDomain") /* DeviceValidationDomain com.amazonaws.ec2#VerifiedAccessEndpoint$DeviceValidationDomain */ =>  {
                let var_9 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_device_validation_domain(var_9);
            }
            ,
            s if s.matches("securityGroupIdSet") /* SecurityGroupIds com.amazonaws.ec2#VerifiedAccessEndpoint$SecurityGroupIds */ =>  {
                let var_10 =
                    Some(
                        crate::protocol_serde::shape_security_group_id_list::de_security_group_id_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_security_group_ids(var_10);
            }
            ,
            s if s.matches("loadBalancerOptions") /* LoadBalancerOptions com.amazonaws.ec2#VerifiedAccessEndpoint$LoadBalancerOptions */ =>  {
                let var_11 =
                    Some(
                        crate::protocol_serde::shape_verified_access_endpoint_load_balancer_options::de_verified_access_endpoint_load_balancer_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_load_balancer_options(var_11);
            }
            ,
            s if s.matches("networkInterfaceOptions") /* NetworkInterfaceOptions com.amazonaws.ec2#VerifiedAccessEndpoint$NetworkInterfaceOptions */ =>  {
                let var_12 =
                    Some(
                        crate::protocol_serde::shape_verified_access_endpoint_eni_options::de_verified_access_endpoint_eni_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_network_interface_options(var_12);
            }
            ,
            s if s.matches("status") /* Status com.amazonaws.ec2#VerifiedAccessEndpoint$Status */ =>  {
                let var_13 =
                    Some(
                        crate::protocol_serde::shape_verified_access_endpoint_status::de_verified_access_endpoint_status(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_status(var_13);
            }
            ,
            s if s.matches("description") /* Description com.amazonaws.ec2#VerifiedAccessEndpoint$Description */ =>  {
                let var_14 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_14);
            }
            ,
            s if s.matches("creationTime") /* CreationTime com.amazonaws.ec2#VerifiedAccessEndpoint$CreationTime */ =>  {
                let var_15 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_creation_time(var_15);
            }
            ,
            s if s.matches("lastUpdatedTime") /* LastUpdatedTime com.amazonaws.ec2#VerifiedAccessEndpoint$LastUpdatedTime */ =>  {
                let var_16 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_last_updated_time(var_16);
            }
            ,
            s if s.matches("deletionTime") /* DeletionTime com.amazonaws.ec2#VerifiedAccessEndpoint$DeletionTime */ =>  {
                let var_17 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_deletion_time(var_17);
            }
            ,
            s if s.matches("tagSet") /* Tags com.amazonaws.ec2#VerifiedAccessEndpoint$Tags */ =>  {
                let var_18 =
                    Some(
                        crate::protocol_serde::shape_tag_list::de_tag_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tags(var_18);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
