// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_capacity_reservation_input_input(
    input: &crate::operation::modify_capacity_reservation::ModifyCapacityReservationInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "ModifyCapacityReservation", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("CapacityReservationId");
    if let Some(var_2) = &input.capacity_reservation_id {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("InstanceCount");
    if let Some(var_4) = &input.instance_count {
        scope_3.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("EndDate");
    if let Some(var_6) = &input.end_date {
        scope_5.date_time(var_6, aws_smithy_types::date_time::Format::DateTime)?;
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("EndDateType");
    if let Some(var_8) = &input.end_date_type {
        scope_7.string(var_8.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("Accept");
    if let Some(var_10) = &input.accept {
        scope_9.boolean(*var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("DryRun");
    if let Some(var_12) = &input.dry_run {
        scope_11.boolean(*var_12);
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("AdditionalInfo");
    if let Some(var_14) = &input.additional_info {
        scope_13.string(var_14);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
