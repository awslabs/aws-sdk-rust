// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_launch_template_version_input_input(
    input: &crate::operation::create_launch_template_version::CreateLaunchTemplateVersionInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "CreateLaunchTemplateVersion", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("DryRun");
    if let Some(var_2) = &input.dry_run {
        scope_1.boolean(*var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("ClientToken");
    if let Some(var_4) = &input.client_token {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("LaunchTemplateId");
    if let Some(var_6) = &input.launch_template_id {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("LaunchTemplateName");
    if let Some(var_8) = &input.launch_template_name {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("SourceVersion");
    if let Some(var_10) = &input.source_version {
        scope_9.string(var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("VersionDescription");
    if let Some(var_12) = &input.version_description {
        scope_11.string(var_12);
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("LaunchTemplateData");
    if let Some(var_14) = &input.launch_template_data {
        crate::protocol_serde::shape_request_launch_template_data::ser_request_launch_template_data(scope_13, var_14)?;
    }
    #[allow(unused_mut)]
    let mut scope_15 = writer.prefix("ResolveAlias");
    if let Some(var_16) = &input.resolve_alias {
        scope_15.boolean(*var_16);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
