// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_traffic_mirror_filter_rule_input_input(
    input: &crate::operation::modify_traffic_mirror_filter_rule::ModifyTrafficMirrorFilterRuleInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "ModifyTrafficMirrorFilterRule", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("TrafficMirrorFilterRuleId");
    if let Some(var_2) = &input.traffic_mirror_filter_rule_id {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("TrafficDirection");
    if let Some(var_4) = &input.traffic_direction {
        scope_3.string(var_4.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("RuleNumber");
    if let Some(var_6) = &input.rule_number {
        scope_5.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("RuleAction");
    if let Some(var_8) = &input.rule_action {
        scope_7.string(var_8.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("DestinationPortRange");
    if let Some(var_10) = &input.destination_port_range {
        crate::protocol_serde::shape_traffic_mirror_port_range_request::ser_traffic_mirror_port_range_request(scope_9, var_10)?;
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("SourcePortRange");
    if let Some(var_12) = &input.source_port_range {
        crate::protocol_serde::shape_traffic_mirror_port_range_request::ser_traffic_mirror_port_range_request(scope_11, var_12)?;
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("Protocol");
    if let Some(var_14) = &input.protocol {
        scope_13.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_14).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_15 = writer.prefix("DestinationCidrBlock");
    if let Some(var_16) = &input.destination_cidr_block {
        scope_15.string(var_16);
    }
    #[allow(unused_mut)]
    let mut scope_17 = writer.prefix("SourceCidrBlock");
    if let Some(var_18) = &input.source_cidr_block {
        scope_17.string(var_18);
    }
    #[allow(unused_mut)]
    let mut scope_19 = writer.prefix("Description");
    if let Some(var_20) = &input.description {
        scope_19.string(var_20);
    }
    #[allow(unused_mut)]
    let mut scope_21 = writer.prefix("RemoveField");
    if let Some(var_22) = &input.remove_fields {
        let mut list_24 = scope_21.start_list(true, None);
        for item_23 in var_22 {
            #[allow(unused_mut)]
            let mut entry_25 = list_24.entry();
            entry_25.string(item_23.as_str());
        }
        list_24.finish();
    }
    #[allow(unused_mut)]
    let mut scope_26 = writer.prefix("DryRun");
    if let Some(var_27) = &input.dry_run {
        scope_26.boolean(*var_27);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
