// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_security_group_rule_request(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::SecurityGroupRuleRequest,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("IpProtocol");
    if let Some(var_2) = &input.ip_protocol {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("FromPort");
    if let Some(var_4) = &input.from_port {
        scope_3.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("ToPort");
    if let Some(var_6) = &input.to_port {
        scope_5.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("CidrIpv4");
    if let Some(var_8) = &input.cidr_ipv4 {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("CidrIpv6");
    if let Some(var_10) = &input.cidr_ipv6 {
        scope_9.string(var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("PrefixListId");
    if let Some(var_12) = &input.prefix_list_id {
        scope_11.string(var_12);
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("ReferencedGroupId");
    if let Some(var_14) = &input.referenced_group_id {
        scope_13.string(var_14);
    }
    #[allow(unused_mut)]
    let mut scope_15 = writer.prefix("Description");
    if let Some(var_16) = &input.description {
        scope_15.string(var_16);
    }
    Ok(())
}
