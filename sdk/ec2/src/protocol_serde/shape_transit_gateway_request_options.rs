// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_transit_gateway_request_options(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::TransitGatewayRequestOptions,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("AmazonSideAsn");
    if let Some(var_2) = &input.amazon_side_asn {
        scope_1.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("AutoAcceptSharedAttachments");
    if let Some(var_4) = &input.auto_accept_shared_attachments {
        scope_3.string(var_4.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("DefaultRouteTableAssociation");
    if let Some(var_6) = &input.default_route_table_association {
        scope_5.string(var_6.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("DefaultRouteTablePropagation");
    if let Some(var_8) = &input.default_route_table_propagation {
        scope_7.string(var_8.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("VpnEcmpSupport");
    if let Some(var_10) = &input.vpn_ecmp_support {
        scope_9.string(var_10.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("DnsSupport");
    if let Some(var_12) = &input.dns_support {
        scope_11.string(var_12.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("MulticastSupport");
    if let Some(var_14) = &input.multicast_support {
        scope_13.string(var_14.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_15 = writer.prefix("TransitGatewayCidrBlocks");
    if let Some(var_16) = &input.transit_gateway_cidr_blocks {
        let mut list_18 = scope_15.start_list(true, Some("item"));
        for item_17 in var_16 {
            #[allow(unused_mut)]
            let mut entry_19 = list_18.entry();
            entry_19.string(item_17);
        }
        list_18.finish();
    }
    Ok(())
}
