// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_access_scope_path(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::AccessScopePath, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::AccessScopePath::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("source") /* Source com.amazonaws.ec2#AccessScopePath$Source */ =>  {
                let var_1 =
                    Some(
                        crate::protocol_serde::shape_path_statement::de_path_statement(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_source(var_1);
            }
            ,
            s if s.matches("destination") /* Destination com.amazonaws.ec2#AccessScopePath$Destination */ =>  {
                let var_2 =
                    Some(
                        crate::protocol_serde::shape_path_statement::de_path_statement(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_destination(var_2);
            }
            ,
            s if s.matches("throughResourceSet") /* ThroughResources com.amazonaws.ec2#AccessScopePath$ThroughResources */ =>  {
                let var_3 =
                    Some(
                        crate::protocol_serde::shape_through_resources_statement_list::de_through_resources_statement_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_through_resources(var_3);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
