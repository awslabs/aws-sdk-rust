// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_delete_launch_template_versions_response_error_item(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<
    crate::types::DeleteLaunchTemplateVersionsResponseErrorItem,
    aws_smithy_xml::decode::XmlDecodeError,
> {
    #[allow(unused_mut)]
    let mut builder = crate::types::DeleteLaunchTemplateVersionsResponseErrorItem::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("launchTemplateId") /* LaunchTemplateId com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseErrorItem$LaunchTemplateId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_launch_template_id(var_1);
            }
            ,
            s if s.matches("launchTemplateName") /* LaunchTemplateName com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseErrorItem$LaunchTemplateName */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_launch_template_name(var_2);
            }
            ,
            s if s.matches("versionNumber") /* VersionNumber com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseErrorItem$VersionNumber */ =>  {
                let var_3 =
                    Some(
                         {
                            <i64 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (long: `com.amazonaws.ec2#Long`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_version_number(var_3);
            }
            ,
            s if s.matches("responseError") /* ResponseError com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseErrorItem$ResponseError */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_response_error::de_response_error(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_response_error(var_4);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
