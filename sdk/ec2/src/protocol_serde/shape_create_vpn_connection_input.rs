// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_vpn_connection_input_input(
    input: &crate::operation::create_vpn_connection::CreateVpnConnectionInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "CreateVpnConnection", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("CustomerGatewayId");
    if let Some(var_2) = &input.customer_gateway_id {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Type");
    if let Some(var_4) = &input.r#type {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("VpnGatewayId");
    if let Some(var_6) = &input.vpn_gateway_id {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("TransitGatewayId");
    if let Some(var_8) = &input.transit_gateway_id {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("DryRun");
    if let Some(var_10) = &input.dry_run {
        scope_9.boolean(*var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("Options");
    if let Some(var_12) = &input.options {
        crate::protocol_serde::shape_vpn_connection_options_specification::ser_vpn_connection_options_specification(scope_11, var_12)?;
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("TagSpecification");
    if let Some(var_14) = &input.tag_specifications {
        let mut list_16 = scope_13.start_list(true, Some("item"));
        for item_15 in var_14 {
            #[allow(unused_mut)]
            let mut entry_17 = list_16.entry();
            crate::protocol_serde::shape_tag_specification::ser_tag_specification(
                entry_17, item_15,
            )?;
        }
        list_16.finish();
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
