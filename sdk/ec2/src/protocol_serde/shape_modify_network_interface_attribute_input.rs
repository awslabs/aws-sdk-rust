// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_network_interface_attribute_input_input(
    input: &crate::operation::modify_network_interface_attribute::ModifyNetworkInterfaceAttributeInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = aws_smithy_query::QueryWriter::new(
        &mut out,
        "ModifyNetworkInterfaceAttribute",
        "2016-11-15",
    );
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Attachment");
    if let Some(var_2) = &input.attachment {
        crate::protocol_serde::shape_network_interface_attachment_changes::ser_network_interface_attachment_changes(scope_1, var_2)?;
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Description");
    if let Some(var_4) = &input.description {
        crate::protocol_serde::shape_attribute_value::ser_attribute_value(scope_3, var_4)?;
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("DryRun");
    if let Some(var_6) = &input.dry_run {
        scope_5.boolean(*var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("SecurityGroupId");
    if let Some(var_8) = &input.groups {
        let mut list_10 = scope_7.start_list(true, Some("SecurityGroupId"));
        for item_9 in var_8 {
            #[allow(unused_mut)]
            let mut entry_11 = list_10.entry();
            entry_11.string(item_9);
        }
        list_10.finish();
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("NetworkInterfaceId");
    if let Some(var_13) = &input.network_interface_id {
        scope_12.string(var_13);
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("SourceDestCheck");
    if let Some(var_15) = &input.source_dest_check {
        crate::protocol_serde::shape_attribute_boolean_value::ser_attribute_boolean_value(
            scope_14, var_15,
        )?;
    }
    #[allow(unused_mut)]
    let mut scope_16 = writer.prefix("EnaSrdSpecification");
    if let Some(var_17) = &input.ena_srd_specification {
        crate::protocol_serde::shape_ena_srd_specification::ser_ena_srd_specification(
            scope_16, var_17,
        )?;
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
