// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_ipam_prefix_list_resolver_rule_condition_request(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::IpamPrefixListResolverRuleConditionRequest,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Operation");
    if let Some(var_2) = &input.operation {
        scope_1.string(var_2.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("IpamPoolId");
    if let Some(var_4) = &input.ipam_pool_id {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("ResourceId");
    if let Some(var_6) = &input.resource_id {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("ResourceOwner");
    if let Some(var_8) = &input.resource_owner {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("ResourceRegion");
    if let Some(var_10) = &input.resource_region {
        scope_9.string(var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("ResourceTag");
    if let Some(var_12) = &input.resource_tag {
        crate::protocol_serde::shape_request_ipam_resource_tag::ser_request_ipam_resource_tag(scope_11, var_12)?;
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("Cidr");
    if let Some(var_14) = &input.cidr {
        scope_13.string(var_14);
    }
    Ok(())
}
