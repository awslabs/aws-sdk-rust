// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_describe_fast_snapshot_restore_success_item(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<
    crate::types::DescribeFastSnapshotRestoreSuccessItem,
    aws_smithy_xml::decode::XmlDecodeError,
> {
    #[allow(unused_mut)]
    let mut builder = crate::types::DescribeFastSnapshotRestoreSuccessItem::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("snapshotId") /* SnapshotId com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$SnapshotId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_snapshot_id(var_1);
            }
            ,
            s if s.matches("availabilityZone") /* AvailabilityZone com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$AvailabilityZone */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_availability_zone(var_2);
            }
            ,
            s if s.matches("state") /* State com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$State */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::FastSnapshotRestoreStateCode, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::FastSnapshotRestoreStateCode::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_state(var_3);
            }
            ,
            s if s.matches("stateTransitionReason") /* StateTransitionReason com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$StateTransitionReason */ =>  {
                let var_4 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_state_transition_reason(var_4);
            }
            ,
            s if s.matches("ownerId") /* OwnerId com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$OwnerId */ =>  {
                let var_5 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_owner_id(var_5);
            }
            ,
            s if s.matches("ownerAlias") /* OwnerAlias com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$OwnerAlias */ =>  {
                let var_6 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_owner_alias(var_6);
            }
            ,
            s if s.matches("enablingTime") /* EnablingTime com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$EnablingTime */ =>  {
                let var_7 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_enabling_time(var_7);
            }
            ,
            s if s.matches("optimizingTime") /* OptimizingTime com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$OptimizingTime */ =>  {
                let var_8 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_optimizing_time(var_8);
            }
            ,
            s if s.matches("enabledTime") /* EnabledTime com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$EnabledTime */ =>  {
                let var_9 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_enabled_time(var_9);
            }
            ,
            s if s.matches("disablingTime") /* DisablingTime com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$DisablingTime */ =>  {
                let var_10 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_disabling_time(var_10);
            }
            ,
            s if s.matches("disabledTime") /* DisabledTime com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem$DisabledTime */ =>  {
                let var_11 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_disabled_time(var_11);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
