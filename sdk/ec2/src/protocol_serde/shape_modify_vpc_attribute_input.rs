// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_vpc_attribute_input_input(
    input: &crate::operation::modify_vpc_attribute::ModifyVpcAttributeInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "ModifyVpcAttribute", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("EnableDnsHostnames");
    if let Some(var_2) = &input.enable_dns_hostnames {
        crate::protocol_serde::shape_attribute_boolean_value::ser_attribute_boolean_value(
            scope_1, var_2,
        )?;
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("EnableDnsSupport");
    if let Some(var_4) = &input.enable_dns_support {
        crate::protocol_serde::shape_attribute_boolean_value::ser_attribute_boolean_value(
            scope_3, var_4,
        )?;
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("VpcId");
    if let Some(var_6) = &input.vpc_id {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("EnableNetworkAddressUsageMetrics");
    if let Some(var_8) = &input.enable_network_address_usage_metrics {
        crate::protocol_serde::shape_attribute_boolean_value::ser_attribute_boolean_value(
            scope_7, var_8,
        )?;
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
