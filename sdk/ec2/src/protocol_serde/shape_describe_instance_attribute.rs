// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::unnecessary_wraps)]
pub fn de_describe_instance_attribute_http_error(
    response: &http::Response<bytes::Bytes>,
) -> std::result::Result<
    crate::operation::describe_instance_attribute::DescribeInstanceAttributeOutput,
    crate::operation::describe_instance_attribute::DescribeInstanceAttributeError,
> {
    #[allow(unused_mut)]
    let mut generic_builder = crate::protocol_serde::parse_http_error_metadata(response).map_err(
        crate::operation::describe_instance_attribute::DescribeInstanceAttributeError::unhandled,
    )?;
    generic_builder = aws_http::request_id::apply_request_id(generic_builder, response.headers());
    let generic = generic_builder.build();
    Err(
        crate::operation::describe_instance_attribute::DescribeInstanceAttributeError::generic(
            generic,
        ),
    )
}

#[allow(clippy::unnecessary_wraps)]
pub fn de_describe_instance_attribute_http_response(
    response: &http::Response<bytes::Bytes>,
) -> std::result::Result<
    crate::operation::describe_instance_attribute::DescribeInstanceAttributeOutput,
    crate::operation::describe_instance_attribute::DescribeInstanceAttributeError,
> {
    Ok({
        #[allow(unused_mut)]
        let mut output = crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeOutputBuilder::default();
        let _ = response;
        output = crate::protocol_serde::shape_describe_instance_attribute::de_describe_instance_attribute(response.body().as_ref(), output).map_err(crate::operation::describe_instance_attribute::DescribeInstanceAttributeError::unhandled)?;
        output._set_request_id(
            aws_http::request_id::RequestId::request_id(response).map(str::to_string),
        );
        output.build()
    })
}

#[allow(unused_mut)]
pub fn de_describe_instance_attribute(
    inp: &[u8],
    mut builder: crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeOutputBuilder,
) -> Result<
    crate::operation::describe_instance_attribute::builders::DescribeInstanceAttributeOutputBuilder,
    aws_smithy_xml::decode::XmlDecodeError,
> {
    let mut doc = aws_smithy_xml::decode::Document::try_from(inp)?;

    #[allow(unused_mut)]
    let mut decoder = doc.root_element()?;
    #[allow(unused_variables)]
    let start_el = decoder.start_el();
    if !(start_el.matches("DescribeInstanceAttributeResponse")) {
        return Err(aws_smithy_xml::decode::XmlDecodeError::custom(format!(
            "invalid root, expected DescribeInstanceAttributeResponse got {:?}",
            start_el
        )));
    }
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("groupSet") /* Groups com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$Groups */ =>  {
                let var_1 =
                    Some(
                        crate::protocol_serde::shape_group_identifier_list::de_group_identifier_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_groups(var_1);
            }
            ,
            s if s.matches("blockDeviceMapping") /* BlockDeviceMappings com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$BlockDeviceMappings */ =>  {
                let var_2 =
                    Some(
                        crate::protocol_serde::shape_instance_block_device_mapping_list::de_instance_block_device_mapping_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_block_device_mappings(var_2);
            }
            ,
            s if s.matches("disableApiTermination") /* DisableApiTermination com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$DisableApiTermination */ =>  {
                let var_3 =
                    Some(
                        crate::protocol_serde::shape_attribute_boolean_value::de_attribute_boolean_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_disable_api_termination(var_3);
            }
            ,
            s if s.matches("enaSupport") /* EnaSupport com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$EnaSupport */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_attribute_boolean_value::de_attribute_boolean_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_ena_support(var_4);
            }
            ,
            s if s.matches("enclaveOptions") /* EnclaveOptions com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$EnclaveOptions */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_enclave_options::de_enclave_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_enclave_options(var_5);
            }
            ,
            s if s.matches("ebsOptimized") /* EbsOptimized com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$EbsOptimized */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_attribute_boolean_value::de_attribute_boolean_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_ebs_optimized(var_6);
            }
            ,
            s if s.matches("instanceId") /* InstanceId com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$InstanceId */ =>  {
                let var_7 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_instance_id(var_7);
            }
            ,
            s if s.matches("instanceInitiatedShutdownBehavior") /* InstanceInitiatedShutdownBehavior com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$InstanceInitiatedShutdownBehavior */ =>  {
                let var_8 =
                    Some(
                        crate::protocol_serde::shape_attribute_value::de_attribute_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_instance_initiated_shutdown_behavior(var_8);
            }
            ,
            s if s.matches("instanceType") /* InstanceType com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$InstanceType */ =>  {
                let var_9 =
                    Some(
                        crate::protocol_serde::shape_attribute_value::de_attribute_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_instance_type(var_9);
            }
            ,
            s if s.matches("kernel") /* KernelId com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$KernelId */ =>  {
                let var_10 =
                    Some(
                        crate::protocol_serde::shape_attribute_value::de_attribute_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_kernel_id(var_10);
            }
            ,
            s if s.matches("productCodes") /* ProductCodes com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$ProductCodes */ =>  {
                let var_11 =
                    Some(
                        crate::protocol_serde::shape_product_code_list::de_product_code_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_product_codes(var_11);
            }
            ,
            s if s.matches("ramdisk") /* RamdiskId com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$RamdiskId */ =>  {
                let var_12 =
                    Some(
                        crate::protocol_serde::shape_attribute_value::de_attribute_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_ramdisk_id(var_12);
            }
            ,
            s if s.matches("rootDeviceName") /* RootDeviceName com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$RootDeviceName */ =>  {
                let var_13 =
                    Some(
                        crate::protocol_serde::shape_attribute_value::de_attribute_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_root_device_name(var_13);
            }
            ,
            s if s.matches("sourceDestCheck") /* SourceDestCheck com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$SourceDestCheck */ =>  {
                let var_14 =
                    Some(
                        crate::protocol_serde::shape_attribute_boolean_value::de_attribute_boolean_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_source_dest_check(var_14);
            }
            ,
            s if s.matches("sriovNetSupport") /* SriovNetSupport com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$SriovNetSupport */ =>  {
                let var_15 =
                    Some(
                        crate::protocol_serde::shape_attribute_value::de_attribute_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_sriov_net_support(var_15);
            }
            ,
            s if s.matches("userData") /* UserData com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$UserData */ =>  {
                let var_16 =
                    Some(
                        crate::protocol_serde::shape_attribute_value::de_attribute_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_user_data(var_16);
            }
            ,
            s if s.matches("disableApiStop") /* DisableApiStop com.amazonaws.ec2.synthetic#DescribeInstanceAttributeOutput$DisableApiStop */ =>  {
                let var_17 =
                    Some(
                        crate::protocol_serde::shape_attribute_boolean_value::de_attribute_boolean_value(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_disable_api_stop(var_17);
            }
            ,
            _ => {}
        }
    }
    Ok(builder)
}
