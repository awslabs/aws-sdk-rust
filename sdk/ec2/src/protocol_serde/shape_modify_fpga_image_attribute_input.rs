// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_fpga_image_attribute_input_input(
    input: &crate::operation::modify_fpga_image_attribute::ModifyFpgaImageAttributeInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "ModifyFpgaImageAttribute", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("DryRun");
    if let Some(var_2) = &input.dry_run {
        scope_1.boolean(*var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("FpgaImageId");
    if let Some(var_4) = &input.fpga_image_id {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("Attribute");
    if let Some(var_6) = &input.attribute {
        scope_5.string(var_6.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("OperationType");
    if let Some(var_8) = &input.operation_type {
        scope_7.string(var_8.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("UserId");
    if let Some(var_10) = &input.user_ids {
        let mut list_12 = scope_9.start_list(true, Some("UserId"));
        for item_11 in var_10 {
            #[allow(unused_mut)]
            let mut entry_13 = list_12.entry();
            entry_13.string(item_11);
        }
        list_12.finish();
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("UserGroup");
    if let Some(var_15) = &input.user_groups {
        let mut list_17 = scope_14.start_list(true, Some("UserGroup"));
        for item_16 in var_15 {
            #[allow(unused_mut)]
            let mut entry_18 = list_17.entry();
            entry_18.string(item_16);
        }
        list_17.finish();
    }
    #[allow(unused_mut)]
    let mut scope_19 = writer.prefix("ProductCode");
    if let Some(var_20) = &input.product_codes {
        let mut list_22 = scope_19.start_list(true, Some("ProductCode"));
        for item_21 in var_20 {
            #[allow(unused_mut)]
            let mut entry_23 = list_22.entry();
            entry_23.string(item_21);
        }
        list_22.finish();
    }
    #[allow(unused_mut)]
    let mut scope_24 = writer.prefix("LoadPermission");
    if let Some(var_25) = &input.load_permission {
        crate::protocol_serde::shape_load_permission_modifications::ser_load_permission_modifications(scope_24, var_25)?;
    }
    #[allow(unused_mut)]
    let mut scope_26 = writer.prefix("Description");
    if let Some(var_27) = &input.description {
        scope_26.string(var_27);
    }
    #[allow(unused_mut)]
    let mut scope_28 = writer.prefix("Name");
    if let Some(var_29) = &input.name {
        scope_28.string(var_29);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
