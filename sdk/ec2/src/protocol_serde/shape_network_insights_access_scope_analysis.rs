// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_network_insights_access_scope_analysis(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::NetworkInsightsAccessScopeAnalysis, aws_smithy_xml::decode::XmlDecodeError>
{
    #[allow(unused_mut)]
    let mut builder = crate::types::NetworkInsightsAccessScopeAnalysis::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("networkInsightsAccessScopeAnalysisId") /* NetworkInsightsAccessScopeAnalysisId com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$NetworkInsightsAccessScopeAnalysisId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_network_insights_access_scope_analysis_id(var_1);
            }
            ,
            s if s.matches("networkInsightsAccessScopeAnalysisArn") /* NetworkInsightsAccessScopeAnalysisArn com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$NetworkInsightsAccessScopeAnalysisArn */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_network_insights_access_scope_analysis_arn(var_2);
            }
            ,
            s if s.matches("networkInsightsAccessScopeId") /* NetworkInsightsAccessScopeId com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$NetworkInsightsAccessScopeId */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_network_insights_access_scope_id(var_3);
            }
            ,
            s if s.matches("status") /* Status com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$Status */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::AnalysisStatus, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::AnalysisStatus::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_4);
            }
            ,
            s if s.matches("statusMessage") /* StatusMessage com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$StatusMessage */ =>  {
                let var_5 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_status_message(var_5);
            }
            ,
            s if s.matches("warningMessage") /* WarningMessage com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$WarningMessage */ =>  {
                let var_6 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_warning_message(var_6);
            }
            ,
            s if s.matches("startDate") /* StartDate com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$StartDate */ =>  {
                let var_7 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_start_date(var_7);
            }
            ,
            s if s.matches("endDate") /* EndDate com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$EndDate */ =>  {
                let var_8 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_end_date(var_8);
            }
            ,
            s if s.matches("findingsFound") /* FindingsFound com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$FindingsFound */ =>  {
                let var_9 =
                    Some(
                        Result::<crate::types::FindingsFound, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::FindingsFound::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_findings_found(var_9);
            }
            ,
            s if s.matches("analyzedEniCount") /* AnalyzedEniCount com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$AnalyzedEniCount */ =>  {
                let var_10 =
                    Some(
                         {
                            <i32 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.ec2#Integer`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_analyzed_eni_count(var_10);
            }
            ,
            s if s.matches("tagSet") /* Tags com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis$Tags */ =>  {
                let var_11 =
                    Some(
                        crate::protocol_serde::shape_tag_list::de_tag_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tags(var_11);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
