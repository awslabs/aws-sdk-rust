// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_storage(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::Storage,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("S3");
    if let Some(var_2) = &input.s3 {
        crate::protocol_serde::shape_s3_storage::ser_s3_storage(scope_1, var_2)?;
    }
    Ok(())
}

pub fn de_storage(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::Storage, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::Storage::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("S3") /* S3 com.amazonaws.ec2#Storage$S3 */ =>  {
                let var_3 =
                    Some(
                        crate::protocol_serde::shape_s3_storage::de_s3_storage(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_s3(var_3);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
