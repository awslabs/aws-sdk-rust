// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_network_insights_path(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::NetworkInsightsPath, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::NetworkInsightsPath::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("networkInsightsPathId") /* NetworkInsightsPathId com.amazonaws.ec2#NetworkInsightsPath$NetworkInsightsPathId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_network_insights_path_id(var_1);
            }
            ,
            s if s.matches("networkInsightsPathArn") /* NetworkInsightsPathArn com.amazonaws.ec2#NetworkInsightsPath$NetworkInsightsPathArn */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_network_insights_path_arn(var_2);
            }
            ,
            s if s.matches("createdDate") /* CreatedDate com.amazonaws.ec2#NetworkInsightsPath$CreatedDate */ =>  {
                let var_3 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_created_date(var_3);
            }
            ,
            s if s.matches("source") /* Source com.amazonaws.ec2#NetworkInsightsPath$Source */ =>  {
                let var_4 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_source(var_4);
            }
            ,
            s if s.matches("destination") /* Destination com.amazonaws.ec2#NetworkInsightsPath$Destination */ =>  {
                let var_5 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_destination(var_5);
            }
            ,
            s if s.matches("sourceArn") /* SourceArn com.amazonaws.ec2#NetworkInsightsPath$SourceArn */ =>  {
                let var_6 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_source_arn(var_6);
            }
            ,
            s if s.matches("destinationArn") /* DestinationArn com.amazonaws.ec2#NetworkInsightsPath$DestinationArn */ =>  {
                let var_7 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_destination_arn(var_7);
            }
            ,
            s if s.matches("sourceIp") /* SourceIp com.amazonaws.ec2#NetworkInsightsPath$SourceIp */ =>  {
                let var_8 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_source_ip(var_8);
            }
            ,
            s if s.matches("destinationIp") /* DestinationIp com.amazonaws.ec2#NetworkInsightsPath$DestinationIp */ =>  {
                let var_9 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_destination_ip(var_9);
            }
            ,
            s if s.matches("protocol") /* Protocol com.amazonaws.ec2#NetworkInsightsPath$Protocol */ =>  {
                let var_10 =
                    Some(
                        Result::<crate::types::Protocol, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::Protocol::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_protocol(var_10);
            }
            ,
            s if s.matches("destinationPort") /* DestinationPort com.amazonaws.ec2#NetworkInsightsPath$DestinationPort */ =>  {
                let var_11 =
                    Some(
                         {
                            <i32 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.ec2#Integer`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_destination_port(var_11);
            }
            ,
            s if s.matches("tagSet") /* Tags com.amazonaws.ec2#NetworkInsightsPath$Tags */ =>  {
                let var_12 =
                    Some(
                        crate::protocol_serde::shape_tag_list::de_tag_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tags(var_12);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
