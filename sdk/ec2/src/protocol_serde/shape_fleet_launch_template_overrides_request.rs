// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_fleet_launch_template_overrides_request(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::FleetLaunchTemplateOverridesRequest,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("InstanceType");
    if let Some(var_2) = &input.instance_type {
        scope_1.string(var_2.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("MaxPrice");
    if let Some(var_4) = &input.max_price {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("SubnetId");
    if let Some(var_6) = &input.subnet_id {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("AvailabilityZone");
    if let Some(var_8) = &input.availability_zone {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("WeightedCapacity");
    if let Some(var_10) = &input.weighted_capacity {
        scope_9.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_10).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("Priority");
    if let Some(var_12) = &input.priority {
        scope_11.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_12).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("Placement");
    if let Some(var_14) = &input.placement {
        crate::protocol_serde::shape_placement::ser_placement(scope_13, var_14)?;
    }
    #[allow(unused_mut)]
    let mut scope_15 = writer.prefix("InstanceRequirements");
    if let Some(var_16) = &input.instance_requirements {
        crate::protocol_serde::shape_instance_requirements_request::ser_instance_requirements_request(scope_15, var_16)?;
    }
    #[allow(unused_mut)]
    let mut scope_17 = writer.prefix("ImageId");
    if let Some(var_18) = &input.image_id {
        scope_17.string(var_18);
    }
    Ok(())
}
