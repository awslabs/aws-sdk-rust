// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_ipam_prefix_list_resolver_input_input_input(
    input: &crate::operation::modify_ipam_prefix_list_resolver::ModifyIpamPrefixListResolverInput,
) -> ::std::result::Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "ModifyIpamPrefixListResolver", "2016-11-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("DryRun");
    if let Some(var_2) = &input.dry_run {
        scope_1.boolean(*var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("IpamPrefixListResolverId");
    if let Some(var_4) = &input.ipam_prefix_list_resolver_id {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("Description");
    if let Some(var_6) = &input.description {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("Rule");
    if let Some(var_8) = &input.rules {
        if !var_8.is_empty() {
            let mut list_10 = scope_7.start_list(true, Some("Rule"));
            for item_9 in var_8 {
                #[allow(unused_mut)]
                let mut entry_11 = list_10.entry();
                crate::protocol_serde::shape_ipam_prefix_list_resolver_rule_request::ser_ipam_prefix_list_resolver_rule_request(entry_11, item_9)?;
            }
            list_10.finish();
        }
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
