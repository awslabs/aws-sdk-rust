// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_capacity_manager_data_export_response(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> ::std::result::Result<crate::types::CapacityManagerDataExportResponse, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::CapacityManagerDataExportResponse::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("capacityManagerDataExportId") /* CapacityManagerDataExportId com.amazonaws.ec2#CapacityManagerDataExportResponse$CapacityManagerDataExportId */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_capacity_manager_data_export_id(var_1);
            }
            ,
            s if s.matches("s3BucketName") /* S3BucketName com.amazonaws.ec2#CapacityManagerDataExportResponse$S3BucketName */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_s3_bucket_name(var_2);
            }
            ,
            s if s.matches("s3BucketPrefix") /* S3BucketPrefix com.amazonaws.ec2#CapacityManagerDataExportResponse$S3BucketPrefix */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_s3_bucket_prefix(var_3);
            }
            ,
            s if s.matches("schedule") /* Schedule com.amazonaws.ec2#CapacityManagerDataExportResponse$Schedule */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::Schedule, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::Schedule::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_schedule(var_4);
            }
            ,
            s if s.matches("outputFormat") /* OutputFormat com.amazonaws.ec2#CapacityManagerDataExportResponse$OutputFormat */ =>  {
                let var_5 =
                    Some(
                        Result::<crate::types::OutputFormat, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::OutputFormat::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_output_format(var_5);
            }
            ,
            s if s.matches("createTime") /* CreateTime com.amazonaws.ec2#CapacityManagerDataExportResponse$CreateTime */ =>  {
                let var_6 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_create_time(var_6);
            }
            ,
            s if s.matches("latestDeliveryStatus") /* LatestDeliveryStatus com.amazonaws.ec2#CapacityManagerDataExportResponse$LatestDeliveryStatus */ =>  {
                let var_7 =
                    Some(
                        Result::<crate::types::CapacityManagerDataExportStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::CapacityManagerDataExportStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_latest_delivery_status(var_7);
            }
            ,
            s if s.matches("latestDeliveryStatusMessage") /* LatestDeliveryStatusMessage com.amazonaws.ec2#CapacityManagerDataExportResponse$LatestDeliveryStatusMessage */ =>  {
                let var_8 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_latest_delivery_status_message(var_8);
            }
            ,
            s if s.matches("latestDeliveryS3LocationUri") /* LatestDeliveryS3LocationUri com.amazonaws.ec2#CapacityManagerDataExportResponse$LatestDeliveryS3LocationUri */ =>  {
                let var_9 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_latest_delivery_s3_location_uri(var_9);
            }
            ,
            s if s.matches("latestDeliveryTime") /* LatestDeliveryTime com.amazonaws.ec2#CapacityManagerDataExportResponse$LatestDeliveryTime */ =>  {
                let var_10 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_latest_delivery_time(var_10);
            }
            ,
            s if s.matches("tagSet") /* Tags com.amazonaws.ec2#CapacityManagerDataExportResponse$Tags */ =>  {
                let var_11 =
                    Some(
                        crate::protocol_serde::shape_tag_list::de_tag_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tags(var_11);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
