// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_network_insights_analysis(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::NetworkInsightsAnalysis, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::NetworkInsightsAnalysis::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("networkInsightsAnalysisId") /* NetworkInsightsAnalysisId com.amazonaws.ec2#NetworkInsightsAnalysis$NetworkInsightsAnalysisId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_network_insights_analysis_id(var_1);
            }
            ,
            s if s.matches("networkInsightsAnalysisArn") /* NetworkInsightsAnalysisArn com.amazonaws.ec2#NetworkInsightsAnalysis$NetworkInsightsAnalysisArn */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_network_insights_analysis_arn(var_2);
            }
            ,
            s if s.matches("networkInsightsPathId") /* NetworkInsightsPathId com.amazonaws.ec2#NetworkInsightsAnalysis$NetworkInsightsPathId */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_network_insights_path_id(var_3);
            }
            ,
            s if s.matches("additionalAccountSet") /* AdditionalAccounts com.amazonaws.ec2#NetworkInsightsAnalysis$AdditionalAccounts */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_value_string_list::de_value_string_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_additional_accounts(var_4);
            }
            ,
            s if s.matches("filterInArnSet") /* FilterInArns com.amazonaws.ec2#NetworkInsightsAnalysis$FilterInArns */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_arn_list::de_arn_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_filter_in_arns(var_5);
            }
            ,
            s if s.matches("startDate") /* StartDate com.amazonaws.ec2#NetworkInsightsAnalysis$StartDate */ =>  {
                let var_6 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.ec2#MillisecondDateTime`)"))
                        ?
                    )
                ;
                builder = builder.set_start_date(var_6);
            }
            ,
            s if s.matches("status") /* Status com.amazonaws.ec2#NetworkInsightsAnalysis$Status */ =>  {
                let var_7 =
                    Some(
                        Result::<crate::types::AnalysisStatus, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::AnalysisStatus::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_7);
            }
            ,
            s if s.matches("statusMessage") /* StatusMessage com.amazonaws.ec2#NetworkInsightsAnalysis$StatusMessage */ =>  {
                let var_8 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_status_message(var_8);
            }
            ,
            s if s.matches("warningMessage") /* WarningMessage com.amazonaws.ec2#NetworkInsightsAnalysis$WarningMessage */ =>  {
                let var_9 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_warning_message(var_9);
            }
            ,
            s if s.matches("networkPathFound") /* NetworkPathFound com.amazonaws.ec2#NetworkInsightsAnalysis$NetworkPathFound */ =>  {
                let var_10 =
                    Some(
                         {
                            <bool as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.ec2#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_network_path_found(var_10);
            }
            ,
            s if s.matches("forwardPathComponentSet") /* ForwardPathComponents com.amazonaws.ec2#NetworkInsightsAnalysis$ForwardPathComponents */ =>  {
                let var_11 =
                    Some(
                        crate::protocol_serde::shape_path_component_list::de_path_component_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_forward_path_components(var_11);
            }
            ,
            s if s.matches("returnPathComponentSet") /* ReturnPathComponents com.amazonaws.ec2#NetworkInsightsAnalysis$ReturnPathComponents */ =>  {
                let var_12 =
                    Some(
                        crate::protocol_serde::shape_path_component_list::de_path_component_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_return_path_components(var_12);
            }
            ,
            s if s.matches("explanationSet") /* Explanations com.amazonaws.ec2#NetworkInsightsAnalysis$Explanations */ =>  {
                let var_13 =
                    Some(
                        crate::protocol_serde::shape_explanation_list::de_explanation_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_explanations(var_13);
            }
            ,
            s if s.matches("alternatePathHintSet") /* AlternatePathHints com.amazonaws.ec2#NetworkInsightsAnalysis$AlternatePathHints */ =>  {
                let var_14 =
                    Some(
                        crate::protocol_serde::shape_alternate_path_hint_list::de_alternate_path_hint_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_alternate_path_hints(var_14);
            }
            ,
            s if s.matches("suggestedAccountSet") /* SuggestedAccounts com.amazonaws.ec2#NetworkInsightsAnalysis$SuggestedAccounts */ =>  {
                let var_15 =
                    Some(
                        crate::protocol_serde::shape_value_string_list::de_value_string_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_suggested_accounts(var_15);
            }
            ,
            s if s.matches("tagSet") /* Tags com.amazonaws.ec2#NetworkInsightsAnalysis$Tags */ =>  {
                let var_16 =
                    Some(
                        crate::protocol_serde::shape_tag_list::de_tag_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tags(var_16);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
