// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_ebs_info(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::EbsInfo, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::EbsInfo::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ebsOptimizedSupport") /* EbsOptimizedSupport com.amazonaws.ec2#EbsInfo$EbsOptimizedSupport */ =>  {
                let var_1 =
                    Some(
                        Result::<crate::types::EbsOptimizedSupport, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::EbsOptimizedSupport::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_ebs_optimized_support(var_1);
            }
            ,
            s if s.matches("encryptionSupport") /* EncryptionSupport com.amazonaws.ec2#EbsInfo$EncryptionSupport */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::EbsEncryptionSupport, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::EbsEncryptionSupport::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_encryption_support(var_2);
            }
            ,
            s if s.matches("ebsOptimizedInfo") /* EbsOptimizedInfo com.amazonaws.ec2#EbsInfo$EbsOptimizedInfo */ =>  {
                let var_3 =
                    Some(
                        crate::protocol_serde::shape_ebs_optimized_info::de_ebs_optimized_info(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_ebs_optimized_info(var_3);
            }
            ,
            s if s.matches("nvmeSupport") /* NvmeSupport com.amazonaws.ec2#EbsInfo$NvmeSupport */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::EbsNvmeSupport, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::EbsNvmeSupport::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_nvme_support(var_4);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
