// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_transit_gateway_vpc_attachment_options(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::TransitGatewayVpcAttachmentOptions, aws_smithy_xml::decode::XmlDecodeError>
{
    #[allow(unused_mut)]
    let mut builder = crate::types::TransitGatewayVpcAttachmentOptions::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("dnsSupport") /* DnsSupport com.amazonaws.ec2#TransitGatewayVpcAttachmentOptions$DnsSupport */ =>  {
                let var_1 =
                    Some(
                        Result::<crate::types::DnsSupportValue, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::DnsSupportValue::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_dns_support(var_1);
            }
            ,
            s if s.matches("ipv6Support") /* Ipv6Support com.amazonaws.ec2#TransitGatewayVpcAttachmentOptions$Ipv6Support */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::Ipv6SupportValue, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::Ipv6SupportValue::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_ipv6_support(var_2);
            }
            ,
            s if s.matches("applianceModeSupport") /* ApplianceModeSupport com.amazonaws.ec2#TransitGatewayVpcAttachmentOptions$ApplianceModeSupport */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::ApplianceModeSupportValue, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ApplianceModeSupportValue::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_appliance_mode_support(var_3);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
