// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_response_launch_template_data(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::ResponseLaunchTemplateData, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ResponseLaunchTemplateData::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("kernelId") /* KernelId com.amazonaws.ec2#ResponseLaunchTemplateData$KernelId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_kernel_id(var_1);
            }
            ,
            s if s.matches("ebsOptimized") /* EbsOptimized com.amazonaws.ec2#ResponseLaunchTemplateData$EbsOptimized */ =>  {
                let var_2 =
                    Some(
                         {
                            <bool as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.ec2#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_ebs_optimized(var_2);
            }
            ,
            s if s.matches("iamInstanceProfile") /* IamInstanceProfile com.amazonaws.ec2#ResponseLaunchTemplateData$IamInstanceProfile */ =>  {
                let var_3 =
                    Some(
                        crate::protocol_serde::shape_launch_template_iam_instance_profile_specification::de_launch_template_iam_instance_profile_specification(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_iam_instance_profile(var_3);
            }
            ,
            s if s.matches("blockDeviceMappingSet") /* BlockDeviceMappings com.amazonaws.ec2#ResponseLaunchTemplateData$BlockDeviceMappings */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_launch_template_block_device_mapping_list::de_launch_template_block_device_mapping_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_block_device_mappings(var_4);
            }
            ,
            s if s.matches("networkInterfaceSet") /* NetworkInterfaces com.amazonaws.ec2#ResponseLaunchTemplateData$NetworkInterfaces */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_launch_template_instance_network_interface_specification_list::de_launch_template_instance_network_interface_specification_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_network_interfaces(var_5);
            }
            ,
            s if s.matches("imageId") /* ImageId com.amazonaws.ec2#ResponseLaunchTemplateData$ImageId */ =>  {
                let var_6 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_image_id(var_6);
            }
            ,
            s if s.matches("instanceType") /* InstanceType com.amazonaws.ec2#ResponseLaunchTemplateData$InstanceType */ =>  {
                let var_7 =
                    Some(
                        Result::<crate::types::InstanceType, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::InstanceType::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_instance_type(var_7);
            }
            ,
            s if s.matches("keyName") /* KeyName com.amazonaws.ec2#ResponseLaunchTemplateData$KeyName */ =>  {
                let var_8 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_key_name(var_8);
            }
            ,
            s if s.matches("monitoring") /* Monitoring com.amazonaws.ec2#ResponseLaunchTemplateData$Monitoring */ =>  {
                let var_9 =
                    Some(
                        crate::protocol_serde::shape_launch_templates_monitoring::de_launch_templates_monitoring(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_monitoring(var_9);
            }
            ,
            s if s.matches("placement") /* Placement com.amazonaws.ec2#ResponseLaunchTemplateData$Placement */ =>  {
                let var_10 =
                    Some(
                        crate::protocol_serde::shape_launch_template_placement::de_launch_template_placement(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_placement(var_10);
            }
            ,
            s if s.matches("ramDiskId") /* RamDiskId com.amazonaws.ec2#ResponseLaunchTemplateData$RamDiskId */ =>  {
                let var_11 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_ram_disk_id(var_11);
            }
            ,
            s if s.matches("disableApiTermination") /* DisableApiTermination com.amazonaws.ec2#ResponseLaunchTemplateData$DisableApiTermination */ =>  {
                let var_12 =
                    Some(
                         {
                            <bool as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.ec2#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_disable_api_termination(var_12);
            }
            ,
            s if s.matches("instanceInitiatedShutdownBehavior") /* InstanceInitiatedShutdownBehavior com.amazonaws.ec2#ResponseLaunchTemplateData$InstanceInitiatedShutdownBehavior */ =>  {
                let var_13 =
                    Some(
                        Result::<crate::types::ShutdownBehavior, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ShutdownBehavior::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_instance_initiated_shutdown_behavior(var_13);
            }
            ,
            s if s.matches("userData") /* UserData com.amazonaws.ec2#ResponseLaunchTemplateData$UserData */ =>  {
                let var_14 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_user_data(var_14);
            }
            ,
            s if s.matches("tagSpecificationSet") /* TagSpecifications com.amazonaws.ec2#ResponseLaunchTemplateData$TagSpecifications */ =>  {
                let var_15 =
                    Some(
                        crate::protocol_serde::shape_launch_template_tag_specification_list::de_launch_template_tag_specification_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tag_specifications(var_15);
            }
            ,
            s if s.matches("elasticGpuSpecificationSet") /* ElasticGpuSpecifications com.amazonaws.ec2#ResponseLaunchTemplateData$ElasticGpuSpecifications */ =>  {
                let var_16 =
                    Some(
                        crate::protocol_serde::shape_elastic_gpu_specification_response_list::de_elastic_gpu_specification_response_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_elastic_gpu_specifications(var_16);
            }
            ,
            s if s.matches("elasticInferenceAcceleratorSet") /* ElasticInferenceAccelerators com.amazonaws.ec2#ResponseLaunchTemplateData$ElasticInferenceAccelerators */ =>  {
                let var_17 =
                    Some(
                        crate::protocol_serde::shape_launch_template_elastic_inference_accelerator_response_list::de_launch_template_elastic_inference_accelerator_response_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_elastic_inference_accelerators(var_17);
            }
            ,
            s if s.matches("securityGroupIdSet") /* SecurityGroupIds com.amazonaws.ec2#ResponseLaunchTemplateData$SecurityGroupIds */ =>  {
                let var_18 =
                    Some(
                        crate::protocol_serde::shape_value_string_list::de_value_string_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_security_group_ids(var_18);
            }
            ,
            s if s.matches("securityGroupSet") /* SecurityGroups com.amazonaws.ec2#ResponseLaunchTemplateData$SecurityGroups */ =>  {
                let var_19 =
                    Some(
                        crate::protocol_serde::shape_value_string_list::de_value_string_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_security_groups(var_19);
            }
            ,
            s if s.matches("instanceMarketOptions") /* InstanceMarketOptions com.amazonaws.ec2#ResponseLaunchTemplateData$InstanceMarketOptions */ =>  {
                let var_20 =
                    Some(
                        crate::protocol_serde::shape_launch_template_instance_market_options::de_launch_template_instance_market_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_instance_market_options(var_20);
            }
            ,
            s if s.matches("creditSpecification") /* CreditSpecification com.amazonaws.ec2#ResponseLaunchTemplateData$CreditSpecification */ =>  {
                let var_21 =
                    Some(
                        crate::protocol_serde::shape_credit_specification::de_credit_specification(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_credit_specification(var_21);
            }
            ,
            s if s.matches("cpuOptions") /* CpuOptions com.amazonaws.ec2#ResponseLaunchTemplateData$CpuOptions */ =>  {
                let var_22 =
                    Some(
                        crate::protocol_serde::shape_launch_template_cpu_options::de_launch_template_cpu_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_cpu_options(var_22);
            }
            ,
            s if s.matches("capacityReservationSpecification") /* CapacityReservationSpecification com.amazonaws.ec2#ResponseLaunchTemplateData$CapacityReservationSpecification */ =>  {
                let var_23 =
                    Some(
                        crate::protocol_serde::shape_launch_template_capacity_reservation_specification_response::de_launch_template_capacity_reservation_specification_response(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_capacity_reservation_specification(var_23);
            }
            ,
            s if s.matches("licenseSet") /* LicenseSpecifications com.amazonaws.ec2#ResponseLaunchTemplateData$LicenseSpecifications */ =>  {
                let var_24 =
                    Some(
                        crate::protocol_serde::shape_launch_template_license_list::de_launch_template_license_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_license_specifications(var_24);
            }
            ,
            s if s.matches("hibernationOptions") /* HibernationOptions com.amazonaws.ec2#ResponseLaunchTemplateData$HibernationOptions */ =>  {
                let var_25 =
                    Some(
                        crate::protocol_serde::shape_launch_template_hibernation_options::de_launch_template_hibernation_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_hibernation_options(var_25);
            }
            ,
            s if s.matches("metadataOptions") /* MetadataOptions com.amazonaws.ec2#ResponseLaunchTemplateData$MetadataOptions */ =>  {
                let var_26 =
                    Some(
                        crate::protocol_serde::shape_launch_template_instance_metadata_options::de_launch_template_instance_metadata_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_metadata_options(var_26);
            }
            ,
            s if s.matches("enclaveOptions") /* EnclaveOptions com.amazonaws.ec2#ResponseLaunchTemplateData$EnclaveOptions */ =>  {
                let var_27 =
                    Some(
                        crate::protocol_serde::shape_launch_template_enclave_options::de_launch_template_enclave_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_enclave_options(var_27);
            }
            ,
            s if s.matches("instanceRequirements") /* InstanceRequirements com.amazonaws.ec2#ResponseLaunchTemplateData$InstanceRequirements */ =>  {
                let var_28 =
                    Some(
                        crate::protocol_serde::shape_instance_requirements::de_instance_requirements(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_instance_requirements(var_28);
            }
            ,
            s if s.matches("privateDnsNameOptions") /* PrivateDnsNameOptions com.amazonaws.ec2#ResponseLaunchTemplateData$PrivateDnsNameOptions */ =>  {
                let var_29 =
                    Some(
                        crate::protocol_serde::shape_launch_template_private_dns_name_options::de_launch_template_private_dns_name_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_private_dns_name_options(var_29);
            }
            ,
            s if s.matches("maintenanceOptions") /* MaintenanceOptions com.amazonaws.ec2#ResponseLaunchTemplateData$MaintenanceOptions */ =>  {
                let var_30 =
                    Some(
                        crate::protocol_serde::shape_launch_template_instance_maintenance_options::de_launch_template_instance_maintenance_options(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_maintenance_options(var_30);
            }
            ,
            s if s.matches("disableApiStop") /* DisableApiStop com.amazonaws.ec2#ResponseLaunchTemplateData$DisableApiStop */ =>  {
                let var_31 =
                    Some(
                         {
                            <bool as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.ec2#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_disable_api_stop(var_31);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
