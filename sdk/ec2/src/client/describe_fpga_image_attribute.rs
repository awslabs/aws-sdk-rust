// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeFpgaImageAttribute`](crate::client::fluent_builders::DescribeFpgaImageAttribute) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DescribeFpgaImageAttribute::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DescribeFpgaImageAttribute::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`fpga_image_id(impl Into<String>)`](crate::client::fluent_builders::DescribeFpgaImageAttribute::fpga_image_id) / [`set_fpga_image_id(Option<String>)`](crate::client::fluent_builders::DescribeFpgaImageAttribute::set_fpga_image_id): <p>The ID of the AFI.</p>
    ///   - [`attribute(FpgaImageAttributeName)`](crate::client::fluent_builders::DescribeFpgaImageAttribute::attribute) / [`set_attribute(Option<FpgaImageAttributeName>)`](crate::client::fluent_builders::DescribeFpgaImageAttribute::set_attribute): <p>The AFI attribute.</p>
    /// - On success, responds with [`DescribeFpgaImageAttributeOutput`](crate::output::DescribeFpgaImageAttributeOutput) with field(s):
    ///   - [`fpga_image_attribute(Option<FpgaImageAttribute>)`](crate::output::DescribeFpgaImageAttributeOutput::fpga_image_attribute): <p>Information about the attribute.</p>
    /// - On failure, responds with [`SdkError<DescribeFpgaImageAttributeError>`](crate::error::DescribeFpgaImageAttributeError)
    pub fn describe_fpga_image_attribute(
        &self,
    ) -> crate::client::fluent_builders::DescribeFpgaImageAttribute {
        crate::client::fluent_builders::DescribeFpgaImageAttribute::new(self.handle.clone())
    }
}
