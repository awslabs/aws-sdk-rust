// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ReportInstanceStatus`](crate::client::fluent_builders::ReportInstanceStatus) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::ReportInstanceStatus::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::ReportInstanceStatus::set_description): <p>Descriptive text about the health state of your instance.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ReportInstanceStatus::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ReportInstanceStatus::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::ReportInstanceStatus::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::ReportInstanceStatus::set_end_time): <p>The time at which the reported instance health state ended.</p>
    ///   - [`instances(Vec<String>)`](crate::client::fluent_builders::ReportInstanceStatus::instances) / [`set_instances(Option<Vec<String>>)`](crate::client::fluent_builders::ReportInstanceStatus::set_instances): <p>The instances.</p>
    ///   - [`reason_codes(Vec<ReportInstanceReasonCodes>)`](crate::client::fluent_builders::ReportInstanceStatus::reason_codes) / [`set_reason_codes(Option<Vec<ReportInstanceReasonCodes>>)`](crate::client::fluent_builders::ReportInstanceStatus::set_reason_codes): <p>The reason codes that describe the health state of your instance.</p>  <ul>   <li> <p> <code>instance-stuck-in-state</code>: My instance is stuck in a state.</p> </li>   <li> <p> <code>unresponsive</code>: My instance is unresponsive.</p> </li>   <li> <p> <code>not-accepting-credentials</code>: My instance is not accepting my credentials.</p> </li>   <li> <p> <code>password-not-available</code>: A password is not available for my instance.</p> </li>   <li> <p> <code>performance-network</code>: My instance is experiencing performance problems that I believe are network related.</p> </li>   <li> <p> <code>performance-instance-store</code>: My instance is experiencing performance problems that I believe are related to the instance stores.</p> </li>   <li> <p> <code>performance-ebs-volume</code>: My instance is experiencing performance problems that I believe are related to an EBS volume.</p> </li>   <li> <p> <code>performance-other</code>: My instance is experiencing performance problems.</p> </li>   <li> <p> <code>other</code>: [explain using the description parameter]</p> </li>  </ul>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::ReportInstanceStatus::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::ReportInstanceStatus::set_start_time): <p>The time at which the reported instance health state began.</p>
    ///   - [`status(ReportStatusType)`](crate::client::fluent_builders::ReportInstanceStatus::status) / [`set_status(Option<ReportStatusType>)`](crate::client::fluent_builders::ReportInstanceStatus::set_status): <p>The status of all instances listed.</p>
    /// - On success, responds with [`ReportInstanceStatusOutput`](crate::output::ReportInstanceStatusOutput)
    /// - On failure, responds with [`SdkError<ReportInstanceStatusError>`](crate::error::ReportInstanceStatusError)
    pub fn report_instance_status(&self) -> crate::client::fluent_builders::ReportInstanceStatus {
        crate::client::fluent_builders::ReportInstanceStatus::new(self.handle.clone())
    }
}
