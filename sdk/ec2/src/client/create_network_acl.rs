// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateNetworkAcl`](crate::operation::create_network_acl::builders::CreateNetworkAclFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::create_network_acl::builders::CreateNetworkAclFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_network_acl::builders::CreateNetworkAclFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`vpc_id(impl Into<String>)`](crate::operation::create_network_acl::builders::CreateNetworkAclFluentBuilder::vpc_id) / [`set_vpc_id(Option<String>)`](crate::operation::create_network_acl::builders::CreateNetworkAclFluentBuilder::set_vpc_id): <p>The ID of the VPC.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_network_acl::builders::CreateNetworkAclFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_network_acl::builders::CreateNetworkAclFluentBuilder::set_tag_specifications): <p>The tags to assign to the network ACL.</p>
    /// - On success, responds with [`CreateNetworkAclOutput`](crate::operation::create_network_acl::CreateNetworkAclOutput) with field(s):
    ///   - [`network_acl(Option<NetworkAcl>)`](crate::operation::create_network_acl::CreateNetworkAclOutput::network_acl): <p>Information about the network ACL.</p>
    /// - On failure, responds with [`SdkError<CreateNetworkAclError>`](crate::operation::create_network_acl::CreateNetworkAclError)
    pub fn create_network_acl(
        &self,
    ) -> crate::operation::create_network_acl::builders::CreateNetworkAclFluentBuilder {
        crate::operation::create_network_acl::builders::CreateNetworkAclFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
