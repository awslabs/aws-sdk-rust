// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateClientVpnEndpoint`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_cidr_block(impl Into<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::client_cidr_block) / [`set_client_cidr_block(Option<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_client_cidr_block): <p>The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. Client CIDR range must have a size of at least /22 and must not be greater than /12.</p>
    ///   - [`server_certificate_arn(impl Into<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::server_certificate_arn) / [`set_server_certificate_arn(Option<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_server_certificate_arn): <p>The ARN of the server certificate. For more information, see the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">Certificate Manager User Guide</a>.</p>
    ///   - [`authentication_options(Vec<ClientVpnAuthenticationRequest>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::authentication_options) / [`set_authentication_options(Option<Vec<ClientVpnAuthenticationRequest>>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_authentication_options): <p>Information about the authentication method to be used to authenticate clients.</p>
    ///   - [`connection_log_options(ConnectionLogOptions)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::connection_log_options) / [`set_connection_log_options(Option<ConnectionLogOptions>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_connection_log_options): <p>Information about the client connection logging options.</p>  <p>If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:</p>  <ul>   <li> <p>Client connection requests</p> </li>   <li> <p>Client connection results (successful and unsuccessful)</p> </li>   <li> <p>Reasons for unsuccessful client connection requests</p> </li>   <li> <p>Client connection termination time</p> </li>  </ul>
    ///   - [`dns_servers(Vec<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::dns_servers) / [`set_dns_servers(Option<Vec<String>>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_dns_servers): <p>Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.</p>
    ///   - [`transport_protocol(TransportProtocol)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::transport_protocol) / [`set_transport_protocol(Option<TransportProtocol>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_transport_protocol): <p>The transport protocol to be used by the VPN session.</p>  <p>Default value: <code>udp</code> </p>
    ///   - [`vpn_port(i32)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::vpn_port) / [`set_vpn_port(Option<i32>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_vpn_port): <p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p>  <p>Valid Values: <code>443</code> | <code>1194</code> </p>  <p>Default Value: <code>443</code> </p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_description): <p>A brief description of the Client VPN endpoint.</p>
    ///   - [`split_tunnel(bool)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::split_tunnel) / [`set_split_tunnel(Option<bool>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_split_tunnel): <p>Indicates whether split-tunnel is enabled on the Client VPN endpoint.</p>  <p>By default, split-tunnel on a VPN endpoint is disabled.</p>  <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-tunnel Client VPN endpoint</a> in the <i>Client VPN Administrator Guide</i>.</p>
    ///   - [`dry_run(bool)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_tag_specifications): <p>The tags to apply to the Client VPN endpoint during creation.</p>
    ///   - [`security_group_ids(Vec<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec<String>>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_security_group_ids): <p>The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.</p>
    ///   - [`vpc_id(impl Into<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::vpc_id) / [`set_vpc_id(Option<String>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_vpc_id): <p>The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.</p>
    ///   - [`self_service_portal(SelfServicePortal)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::self_service_portal) / [`set_self_service_portal(Option<SelfServicePortal>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_self_service_portal): <p>Specify whether to enable the self-service portal for the Client VPN endpoint.</p>  <p>Default Value: <code>enabled</code> </p>
    ///   - [`client_connect_options(ClientConnectOptions)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::client_connect_options) / [`set_client_connect_options(Option<ClientConnectOptions>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_client_connect_options): <p>The options for managing connection authorization for new client connections.</p>
    ///   - [`session_timeout_hours(i32)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::session_timeout_hours) / [`set_session_timeout_hours(Option<i32>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_session_timeout_hours): <p>The maximum VPN session duration time in hours.</p>  <p>Valid values: <code>8 | 10 | 12 | 24</code> </p>  <p>Default value: <code>24</code> </p>
    ///   - [`client_login_banner_options(ClientLoginBannerOptions)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::client_login_banner_options) / [`set_client_login_banner_options(Option<ClientLoginBannerOptions>)`](crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::set_client_login_banner_options): <p>Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.</p>
    /// - On success, responds with [`CreateClientVpnEndpointOutput`](crate::operation::create_client_vpn_endpoint::CreateClientVpnEndpointOutput) with field(s):
    ///   - [`client_vpn_endpoint_id(Option<String>)`](crate::operation::create_client_vpn_endpoint::CreateClientVpnEndpointOutput::client_vpn_endpoint_id): <p>The ID of the Client VPN endpoint.</p>
    ///   - [`status(Option<ClientVpnEndpointStatus>)`](crate::operation::create_client_vpn_endpoint::CreateClientVpnEndpointOutput::status): <p>The current state of the Client VPN endpoint.</p>
    ///   - [`dns_name(Option<String>)`](crate::operation::create_client_vpn_endpoint::CreateClientVpnEndpointOutput::dns_name): <p>The DNS name to be used by clients when establishing their VPN session.</p>
    /// - On failure, responds with [`SdkError<CreateClientVpnEndpointError>`](crate::operation::create_client_vpn_endpoint::CreateClientVpnEndpointError)
    pub fn create_client_vpn_endpoint(
        &self,
    ) -> crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder
    {
        crate::operation::create_client_vpn_endpoint::builders::CreateClientVpnEndpointFluentBuilder::new(self.handle.clone())
    }
}
