// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCapacityManagerAttributes`](crate::operation::get_capacity_manager_attributes::builders::GetCapacityManagerAttributesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::get_capacity_manager_attributes::builders::GetCapacityManagerAttributesFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::get_capacity_manager_attributes::builders::GetCapacityManagerAttributesFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`GetCapacityManagerAttributesOutput`](crate::operation::get_capacity_manager_attributes::GetCapacityManagerAttributesOutput) with field(s):
    ///   - [`capacity_manager_status(Option<CapacityManagerStatus>)`](crate::operation::get_capacity_manager_attributes::GetCapacityManagerAttributesOutput::capacity_manager_status): <p>The current status of Capacity Manager.</p>
    ///   - [`organizations_access(Option<bool>)`](crate::operation::get_capacity_manager_attributes::GetCapacityManagerAttributesOutput::organizations_access): <p>Indicates whether Organizations access is enabled for cross-account data aggregation.</p>
    ///   - [`data_export_count(Option<i32>)`](crate::operation::get_capacity_manager_attributes::GetCapacityManagerAttributesOutput::data_export_count): <p>The number of active data export configurations for this account. This count includes all data exports regardless of their current delivery status.</p>
    ///   - [`ingestion_status(Option<IngestionStatus>)`](crate::operation::get_capacity_manager_attributes::GetCapacityManagerAttributesOutput::ingestion_status): <p>The current data ingestion status. Initial ingestion may take several hours after enabling Capacity Manager.</p>
    ///   - [`ingestion_status_message(Option<String>)`](crate::operation::get_capacity_manager_attributes::GetCapacityManagerAttributesOutput::ingestion_status_message): <p>A descriptive message providing additional details about the current ingestion status. This may include error information if ingestion has failed or progress details during initial setup.</p>
    ///   - [`earliest_datapoint_timestamp(Option<DateTime>)`](crate::operation::get_capacity_manager_attributes::GetCapacityManagerAttributesOutput::earliest_datapoint_timestamp): <p>The timestamp of the earliest data point available in Capacity Manager, in milliseconds since epoch. This indicates how far back historical data is available for queries.</p>
    ///   - [`latest_datapoint_timestamp(Option<DateTime>)`](crate::operation::get_capacity_manager_attributes::GetCapacityManagerAttributesOutput::latest_datapoint_timestamp): <p>The timestamp of the most recent data point ingested by Capacity Manager, in milliseconds since epoch. This indicates how current your capacity data is.</p>
    /// - On failure, responds with [`SdkError<GetCapacityManagerAttributesError>`](crate::operation::get_capacity_manager_attributes::GetCapacityManagerAttributesError)
    pub fn get_capacity_manager_attributes(
        &self,
    ) -> crate::operation::get_capacity_manager_attributes::builders::GetCapacityManagerAttributesFluentBuilder {
        crate::operation::get_capacity_manager_attributes::builders::GetCapacityManagerAttributesFluentBuilder::new(self.handle.clone())
    }
}
