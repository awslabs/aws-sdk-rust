// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RevokeSecurityGroupEgress`](crate::client::fluent_builders::RevokeSecurityGroupEgress) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`group_id(impl Into<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::group_id) / [`set_group_id(Option<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_group_id): <p>The ID of the security group.</p>
    ///   - [`ip_permissions(Vec<IpPermission>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::ip_permissions) / [`set_ip_permissions(Option<Vec<IpPermission>>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_ip_permissions): <p>The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.</p>
    ///   - [`security_group_rule_ids(Vec<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::security_group_rule_ids) / [`set_security_group_rule_ids(Option<Vec<String>>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_security_group_rule_ids): <p>The IDs of the security group rules.</p>
    ///   - [`cidr_ip(impl Into<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::cidr_ip) / [`set_cidr_ip(Option<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_cidr_ip): <p>Not supported. Use a set of IP permissions to specify the CIDR.</p>
    ///   - [`from_port(i32)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::from_port) / [`set_from_port(Option<i32>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_from_port): <p>Not supported. Use a set of IP permissions to specify the port.</p>
    ///   - [`ip_protocol(impl Into<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::ip_protocol) / [`set_ip_protocol(Option<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_ip_protocol): <p>Not supported. Use a set of IP permissions to specify the protocol name or number.</p>
    ///   - [`to_port(i32)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::to_port) / [`set_to_port(Option<i32>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_to_port): <p>Not supported. Use a set of IP permissions to specify the port.</p>
    ///   - [`source_security_group_name(impl Into<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::source_security_group_name) / [`set_source_security_group_name(Option<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_source_security_group_name): <p>Not supported. Use a set of IP permissions to specify a destination security group.</p>
    ///   - [`source_security_group_owner_id(impl Into<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::source_security_group_owner_id) / [`set_source_security_group_owner_id(Option<String>)`](crate::client::fluent_builders::RevokeSecurityGroupEgress::set_source_security_group_owner_id): <p>Not supported. Use a set of IP permissions to specify a destination security group.</p>
    /// - On success, responds with [`RevokeSecurityGroupEgressOutput`](crate::output::RevokeSecurityGroupEgressOutput) with field(s):
    ///   - [`r#return(Option<bool>)`](crate::output::RevokeSecurityGroupEgressOutput::return): <p>Returns <code>true</code> if the request succeeds; otherwise, returns an error.</p>
    ///   - [`unknown_ip_permissions(Option<Vec<IpPermission>>)`](crate::output::RevokeSecurityGroupEgressOutput::unknown_ip_permissions): <p>The outbound rules that were unknown to the service. In some cases, <code>unknownIpPermissionSet</code> might be in a different format from the request parameter. </p>
    /// - On failure, responds with [`SdkError<RevokeSecurityGroupEgressError>`](crate::error::RevokeSecurityGroupEgressError)
    pub fn revoke_security_group_egress(
        &self,
    ) -> crate::client::fluent_builders::RevokeSecurityGroupEgress {
        crate::client::fluent_builders::RevokeSecurityGroupEgress::new(self.handle.clone())
    }
}
