// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateVerifiedAccessEndpoint`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`verified_access_group_id(impl Into<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::verified_access_group_id) / [`set_verified_access_group_id(Option<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_verified_access_group_id): <p>The ID of the Verified Access group to associate the endpoint with.</p>
    ///   - [`endpoint_type(VerifiedAccessEndpointType)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::endpoint_type) / [`set_endpoint_type(Option<VerifiedAccessEndpointType>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_endpoint_type): <p>The type of Amazon Web Services Verified Access endpoint to create.</p>
    ///   - [`attachment_type(VerifiedAccessEndpointAttachmentType)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::attachment_type) / [`set_attachment_type(Option<VerifiedAccessEndpointAttachmentType>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_attachment_type): <p>The Amazon Web Services network component Verified Access attaches to.</p>
    ///   - [`domain_certificate_arn(impl Into<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::domain_certificate_arn) / [`set_domain_certificate_arn(Option<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_domain_certificate_arn): <p>The ARN of the public TLS/SSL certificate in Amazon Web Services Certificate Manager to associate with the endpoint. The CN in the certificate must match the DNS name your end users will use to reach your application.</p>
    ///   - [`application_domain(impl Into<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::application_domain) / [`set_application_domain(Option<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_application_domain): <p>The DNS name for users to reach your application.</p>
    ///   - [`endpoint_domain_prefix(impl Into<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::endpoint_domain_prefix) / [`set_endpoint_domain_prefix(Option<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_endpoint_domain_prefix): <p>A custom identifier that gets prepended to a DNS name that is generated for the endpoint.</p>
    ///   - [`security_group_ids(Vec<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::security_group_ids) / [`set_security_group_ids(Option<Vec<String>>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_security_group_ids): <p>The Amazon EC2 security groups to associate with the Amazon Web Services Verified Access endpoint.</p>
    ///   - [`load_balancer_options(CreateVerifiedAccessEndpointLoadBalancerOptions)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::load_balancer_options) / [`set_load_balancer_options(Option<CreateVerifiedAccessEndpointLoadBalancerOptions>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_load_balancer_options): <p>The load balancer details if creating the Amazon Web Services Verified Access endpoint as <code>load-balancer</code>type.</p>
    ///   - [`network_interface_options(CreateVerifiedAccessEndpointEniOptions)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::network_interface_options) / [`set_network_interface_options(Option<CreateVerifiedAccessEndpointEniOptions>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_network_interface_options): <p>The network interface details if creating the Amazon Web Services Verified Access endpoint as <code>network-interface</code>type.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_description): <p>A description for the Amazon Web Services Verified Access endpoint.</p>
    ///   - [`policy_document(impl Into<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::policy_document) / [`set_policy_document(Option<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_policy_document): <p>The Amazon Web Services Verified Access policy document.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_tag_specifications): <p>The tags to assign to the Amazon Web Services Verified Access endpoint.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_client_token): <p>A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::CreateVerifiedAccessEndpoint::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CreateVerifiedAccessEndpointOutput`](crate::output::CreateVerifiedAccessEndpointOutput) with field(s):
    ///   - [`verified_access_endpoint(Option<VerifiedAccessEndpoint>)`](crate::output::CreateVerifiedAccessEndpointOutput::verified_access_endpoint): <p>The ID of the Amazon Web Services Verified Access endpoint.</p>
    /// - On failure, responds with [`SdkError<CreateVerifiedAccessEndpointError>`](crate::error::CreateVerifiedAccessEndpointError)
    pub fn create_verified_access_endpoint(
        &self,
    ) -> crate::client::fluent_builders::CreateVerifiedAccessEndpoint {
        crate::client::fluent_builders::CreateVerifiedAccessEndpoint::new(self.handle.clone())
    }
}
