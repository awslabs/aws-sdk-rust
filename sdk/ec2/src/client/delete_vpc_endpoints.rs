// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteVpcEndpoints`](crate::client::fluent_builders::DeleteVpcEndpoints) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DeleteVpcEndpoints::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DeleteVpcEndpoints::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`vpc_endpoint_ids(Vec<String>)`](crate::client::fluent_builders::DeleteVpcEndpoints::vpc_endpoint_ids) / [`set_vpc_endpoint_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteVpcEndpoints::set_vpc_endpoint_ids): <p>The IDs of the VPC endpoints.</p>
    /// - On success, responds with [`DeleteVpcEndpointsOutput`](crate::output::DeleteVpcEndpointsOutput) with field(s):
    ///   - [`unsuccessful(Option<Vec<UnsuccessfulItem>>)`](crate::output::DeleteVpcEndpointsOutput::unsuccessful): <p>Information about the VPC endpoints that were not successfully deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteVpcEndpointsError>`](crate::error::DeleteVpcEndpointsError)
    pub fn delete_vpc_endpoints(&self) -> crate::client::fluent_builders::DeleteVpcEndpoints {
        crate::client::fluent_builders::DeleteVpcEndpoints::new(self.handle.clone())
    }
}
