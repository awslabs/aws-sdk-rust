// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteNetworkAclEntry`](crate::client::fluent_builders::DeleteNetworkAclEntry) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DeleteNetworkAclEntry::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DeleteNetworkAclEntry::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`egress(bool)`](crate::client::fluent_builders::DeleteNetworkAclEntry::egress) / [`set_egress(Option<bool>)`](crate::client::fluent_builders::DeleteNetworkAclEntry::set_egress): <p>Indicates whether the rule is an egress rule.</p>
    ///   - [`network_acl_id(impl Into<String>)`](crate::client::fluent_builders::DeleteNetworkAclEntry::network_acl_id) / [`set_network_acl_id(Option<String>)`](crate::client::fluent_builders::DeleteNetworkAclEntry::set_network_acl_id): <p>The ID of the network ACL.</p>
    ///   - [`rule_number(i32)`](crate::client::fluent_builders::DeleteNetworkAclEntry::rule_number) / [`set_rule_number(Option<i32>)`](crate::client::fluent_builders::DeleteNetworkAclEntry::set_rule_number): <p>The rule number of the entry to delete.</p>
    /// - On success, responds with [`DeleteNetworkAclEntryOutput`](crate::output::DeleteNetworkAclEntryOutput)
    /// - On failure, responds with [`SdkError<DeleteNetworkAclEntryError>`](crate::error::DeleteNetworkAclEntryError)
    pub fn delete_network_acl_entry(
        &self,
    ) -> crate::client::fluent_builders::DeleteNetworkAclEntry {
        crate::client::fluent_builders::DeleteNetworkAclEntry::new(self.handle.clone())
    }
}
