// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSerialConsoleAccessStatus`](crate::client::fluent_builders::GetSerialConsoleAccessStatus) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::GetSerialConsoleAccessStatus::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::GetSerialConsoleAccessStatus::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`GetSerialConsoleAccessStatusOutput`](crate::output::GetSerialConsoleAccessStatusOutput) with field(s):
    ///   - [`serial_console_access_enabled(Option<bool>)`](crate::output::GetSerialConsoleAccessStatusOutput::serial_console_access_enabled): <p>If <code>true</code>, access to the EC2 serial console of all instances is enabled for your account. If <code>false</code>, access to the EC2 serial console of all instances is disabled for your account.</p>
    /// - On failure, responds with [`SdkError<GetSerialConsoleAccessStatusError>`](crate::error::GetSerialConsoleAccessStatusError)
    pub fn get_serial_console_access_status(
        &self,
    ) -> crate::client::fluent_builders::GetSerialConsoleAccessStatus {
        crate::client::fluent_builders::GetSerialConsoleAccessStatus::new(self.handle.clone())
    }
}
