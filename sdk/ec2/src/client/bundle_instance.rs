// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BundleInstance`](crate::client::fluent_builders::BundleInstance) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::client::fluent_builders::BundleInstance::instance_id) / [`set_instance_id(Option<String>)`](crate::client::fluent_builders::BundleInstance::set_instance_id): <p>The ID of the instance to bundle.</p>  <p>Type: String</p>  <p>Default: None</p>  <p>Required: Yes</p>
    ///   - [`storage(Storage)`](crate::client::fluent_builders::BundleInstance::storage) / [`set_storage(Option<Storage>)`](crate::client::fluent_builders::BundleInstance::set_storage): <p>The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::BundleInstance::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::BundleInstance::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`BundleInstanceOutput`](crate::output::BundleInstanceOutput) with field(s):
    ///   - [`bundle_task(Option<BundleTask>)`](crate::output::BundleInstanceOutput::bundle_task): <p>Information about the bundle task.</p>
    /// - On failure, responds with [`SdkError<BundleInstanceError>`](crate::error::BundleInstanceError)
    pub fn bundle_instance(&self) -> crate::client::fluent_builders::BundleInstance {
        crate::client::fluent_builders::BundleInstance::new(self.handle.clone())
    }
}
