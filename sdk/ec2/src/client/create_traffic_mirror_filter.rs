// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTrafficMirrorFilter`](crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`description(impl Into<String>)`](crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder::set_description):<br>required: **false**<br><p>The description of the Traffic Mirror filter.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to assign to a Traffic Mirror filter.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p><br>
    /// - On success, responds with [`CreateTrafficMirrorFilterOutput`](crate::operation::create_traffic_mirror_filter::CreateTrafficMirrorFilterOutput) with field(s):
    ///   - [`traffic_mirror_filter(Option<TrafficMirrorFilter>)`](crate::operation::create_traffic_mirror_filter::CreateTrafficMirrorFilterOutput::traffic_mirror_filter): <p>Information about the Traffic Mirror filter.</p>
    ///   - [`client_token(Option<String>)`](crate::operation::create_traffic_mirror_filter::CreateTrafficMirrorFilterOutput::client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    /// - On failure, responds with [`SdkError<CreateTrafficMirrorFilterError>`](crate::operation::create_traffic_mirror_filter::CreateTrafficMirrorFilterError)
    pub fn create_traffic_mirror_filter(&self) -> crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder {
        crate::operation::create_traffic_mirror_filter::builders::CreateTrafficMirrorFilterFluentBuilder::new(self.handle.clone())
    }
}
