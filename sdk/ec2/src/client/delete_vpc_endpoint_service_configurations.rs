// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteVpcEndpointServiceConfigurations`](crate::client::fluent_builders::DeleteVpcEndpointServiceConfigurations) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DeleteVpcEndpointServiceConfigurations::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DeleteVpcEndpointServiceConfigurations::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`service_ids(Vec<String>)`](crate::client::fluent_builders::DeleteVpcEndpointServiceConfigurations::service_ids) / [`set_service_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteVpcEndpointServiceConfigurations::set_service_ids): <p>The IDs of the services.</p>
    /// - On success, responds with [`DeleteVpcEndpointServiceConfigurationsOutput`](crate::output::DeleteVpcEndpointServiceConfigurationsOutput) with field(s):
    ///   - [`unsuccessful(Option<Vec<UnsuccessfulItem>>)`](crate::output::DeleteVpcEndpointServiceConfigurationsOutput::unsuccessful): <p>Information about the service configurations that were not deleted, if applicable.</p>
    /// - On failure, responds with [`SdkError<DeleteVpcEndpointServiceConfigurationsError>`](crate::error::DeleteVpcEndpointServiceConfigurationsError)
    pub fn delete_vpc_endpoint_service_configurations(
        &self,
    ) -> crate::client::fluent_builders::DeleteVpcEndpointServiceConfigurations {
        crate::client::fluent_builders::DeleteVpcEndpointServiceConfigurations::new(
            self.handle.clone(),
        )
    }
}
