// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateClientVpnRoute`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_vpn_endpoint_id(impl Into<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::client_vpn_endpoint_id) / [`set_client_vpn_endpoint_id(Option<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::set_client_vpn_endpoint_id): <p>The ID of the Client VPN endpoint to which to add the route.</p>
    ///   - [`destination_cidr_block(impl Into<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::destination_cidr_block) / [`set_destination_cidr_block(Option<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::set_destination_cidr_block): <p>The IPv4 address range, in CIDR notation, of the route destination. For example:</p>  <ul>   <li> <p>To add a route for Internet access, enter <code>0.0.0.0/0</code> </p> </li>   <li> <p>To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range</p> </li>   <li> <p>To add a route for an on-premises network, enter the Amazon Web Services Site-to-Site VPN connection's IPv4 CIDR range</p> </li>   <li> <p>To add a route for the local network, enter the client CIDR range</p> </li>  </ul>
    ///   - [`target_vpc_subnet_id(impl Into<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::target_vpc_subnet_id) / [`set_target_vpc_subnet_id(Option<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::set_target_vpc_subnet_id): <p>The ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.</p>  <p>Alternatively, if you're adding a route for the local network, specify <code>local</code>.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::set_description): <p>A brief description of the route.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    ///   - [`dry_run(bool)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CreateClientVpnRouteOutput`](crate::operation::create_client_vpn_route::CreateClientVpnRouteOutput) with field(s):
    ///   - [`status(Option<ClientVpnRouteStatus>)`](crate::operation::create_client_vpn_route::CreateClientVpnRouteOutput::status): <p>The current state of the route.</p>
    /// - On failure, responds with [`SdkError<CreateClientVpnRouteError>`](crate::operation::create_client_vpn_route::CreateClientVpnRouteError)
    pub fn create_client_vpn_route(
        &self,
    ) -> crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder
    {
        crate::operation::create_client_vpn_route::builders::CreateClientVpnRouteFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
