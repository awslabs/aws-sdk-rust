// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEgressOnlyInternetGateway`](crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    ///   - [`dry_run(bool)`](crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`vpc_id(impl Into<String>)`](crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder::vpc_id) / [`set_vpc_id(Option<String>)`](crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder::set_vpc_id): <p>The ID of the VPC for which to create the egress-only internet gateway.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder::set_tag_specifications): <p>The tags to assign to the egress-only internet gateway.</p>
    /// - On success, responds with [`CreateEgressOnlyInternetGatewayOutput`](crate::operation::create_egress_only_internet_gateway::CreateEgressOnlyInternetGatewayOutput) with field(s):
    ///   - [`client_token(Option<String>)`](crate::operation::create_egress_only_internet_gateway::CreateEgressOnlyInternetGatewayOutput::client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`egress_only_internet_gateway(Option<EgressOnlyInternetGateway>)`](crate::operation::create_egress_only_internet_gateway::CreateEgressOnlyInternetGatewayOutput::egress_only_internet_gateway): <p>Information about the egress-only internet gateway.</p>
    /// - On failure, responds with [`SdkError<CreateEgressOnlyInternetGatewayError>`](crate::operation::create_egress_only_internet_gateway::CreateEgressOnlyInternetGatewayError)
    pub fn create_egress_only_internet_gateway(&self) -> crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder{
        crate::operation::create_egress_only_internet_gateway::builders::CreateEgressOnlyInternetGatewayFluentBuilder::new(self.handle.clone())
    }
}
