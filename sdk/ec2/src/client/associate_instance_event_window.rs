// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateInstanceEventWindow`](crate::client::fluent_builders::AssociateInstanceEventWindow) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::AssociateInstanceEventWindow::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::AssociateInstanceEventWindow::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`instance_event_window_id(impl Into<String>)`](crate::client::fluent_builders::AssociateInstanceEventWindow::instance_event_window_id) / [`set_instance_event_window_id(Option<String>)`](crate::client::fluent_builders::AssociateInstanceEventWindow::set_instance_event_window_id): <p>The ID of the event window.</p>
    ///   - [`association_target(InstanceEventWindowAssociationRequest)`](crate::client::fluent_builders::AssociateInstanceEventWindow::association_target) / [`set_association_target(Option<InstanceEventWindowAssociationRequest>)`](crate::client::fluent_builders::AssociateInstanceEventWindow::set_association_target): <p>One or more targets associated with the specified event window.</p>
    /// - On success, responds with [`AssociateInstanceEventWindowOutput`](crate::output::AssociateInstanceEventWindowOutput) with field(s):
    ///   - [`instance_event_window(Option<InstanceEventWindow>)`](crate::output::AssociateInstanceEventWindowOutput::instance_event_window): <p>Information about the event window.</p>
    /// - On failure, responds with [`SdkError<AssociateInstanceEventWindowError>`](crate::error::AssociateInstanceEventWindowError)
    pub fn associate_instance_event_window(
        &self,
    ) -> crate::client::fluent_builders::AssociateInstanceEventWindow {
        crate::client::fluent_builders::AssociateInstanceEventWindow::new(self.handle.clone())
    }
}
