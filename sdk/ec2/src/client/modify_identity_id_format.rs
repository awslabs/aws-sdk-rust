// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyIdentityIdFormat`](crate::operation::modify_identity_id_format::builders::ModifyIdentityIdFormatFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`principal_arn(impl Into<String>)`](crate::operation::modify_identity_id_format::builders::ModifyIdentityIdFormatFluentBuilder::principal_arn) / [`set_principal_arn(Option<String>)`](crate::operation::modify_identity_id_format::builders::ModifyIdentityIdFormatFluentBuilder::set_principal_arn): <p>The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root user of the account.</p>
    ///   - [`resource(impl Into<String>)`](crate::operation::modify_identity_id_format::builders::ModifyIdentityIdFormatFluentBuilder::resource) / [`set_resource(Option<String>)`](crate::operation::modify_identity_id_format::builders::ModifyIdentityIdFormatFluentBuilder::set_resource): <p>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p>  <p>Alternatively, use the <code>all-current</code> option to include all resource types that are currently within their opt-in period for longer IDs.</p>
    ///   - [`use_long_ids(bool)`](crate::operation::modify_identity_id_format::builders::ModifyIdentityIdFormatFluentBuilder::use_long_ids) / [`set_use_long_ids(Option<bool>)`](crate::operation::modify_identity_id_format::builders::ModifyIdentityIdFormatFluentBuilder::set_use_long_ids): <p>Indicates whether the resource should use longer IDs (17-character IDs)</p>
    /// - On success, responds with [`ModifyIdentityIdFormatOutput`](crate::operation::modify_identity_id_format::ModifyIdentityIdFormatOutput)
    /// - On failure, responds with [`SdkError<ModifyIdentityIdFormatError>`](crate::operation::modify_identity_id_format::ModifyIdentityIdFormatError)
    pub fn modify_identity_id_format(
        &self,
    ) -> crate::operation::modify_identity_id_format::builders::ModifyIdentityIdFormatFluentBuilder
    {
        crate::operation::modify_identity_id_format::builders::ModifyIdentityIdFormatFluentBuilder::new(self.handle.clone())
    }
}
