// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeVpcEndpoints`](crate::client::fluent_builders::DescribeVpcEndpoints) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeVpcEndpoints::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DescribeVpcEndpoints::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DescribeVpcEndpoints::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`vpc_endpoint_ids(Vec<String>)`](crate::client::fluent_builders::DescribeVpcEndpoints::vpc_endpoint_ids) / [`set_vpc_endpoint_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeVpcEndpoints::set_vpc_endpoint_ids): <p>The IDs of the VPC endpoints.</p>
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::DescribeVpcEndpoints::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::DescribeVpcEndpoints::set_filters): <p>The filters.</p>  <ul>   <li> <p> <code>ip-address-type</code> - The IP address type (<code>ipv4</code> | <code>ipv6</code>).</p> </li>   <li> <p> <code>service-name</code> - The name of the service.</p> </li>   <li> <p> <code>tag</code>:<key>      - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key      <code>Owner</code> and the value      <code>TeamA</code>, specify      <code>tag:Owner</code> for the filter name and      <code>TeamA</code> for the filter value.    </key></p> </li>   <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li>   <li> <p> <code>vpc-id</code> - The ID of the VPC in which the endpoint resides.</p> </li>   <li> <p> <code>vpc-endpoint-id</code> - The ID of the endpoint.</p> </li>   <li> <p> <code>vpc-endpoint-state</code> - The state of the endpoint (<code>pendingAcceptance</code> | <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code> | <code>rejected</code> | <code>failed</code>).</p> </li>   <li> <p> <code>vpc-endpoint-type</code> - The type of VPC endpoint (<code>Interface</code> | <code>Gateway</code> | <code>GatewayLoadBalancer</code>).</p> </li>  </ul>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeVpcEndpoints::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeVpcEndpoints::set_max_results): <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p>  <p>Constraint: If the value is greater than 1,000, we return only 1,000 items.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeVpcEndpoints::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeVpcEndpoints::set_next_token): <p>The token for the next set of items to return. (You received this token from a prior call.)</p>
    /// - On success, responds with [`DescribeVpcEndpointsOutput`](crate::output::DescribeVpcEndpointsOutput) with field(s):
    ///   - [`vpc_endpoints(Option<Vec<VpcEndpoint>>)`](crate::output::DescribeVpcEndpointsOutput::vpc_endpoints): <p>Information about the endpoints.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeVpcEndpointsOutput::next_token): <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeVpcEndpointsError>`](crate::error::DescribeVpcEndpointsError)
    pub fn describe_vpc_endpoints(&self) -> crate::client::fluent_builders::DescribeVpcEndpoints {
        crate::client::fluent_builders::DescribeVpcEndpoints::new(self.handle.clone())
    }
}
