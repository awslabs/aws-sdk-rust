// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTrafficMirrorSession`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_interface_id(impl Into<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::network_interface_id) / [`set_network_interface_id(Option<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_network_interface_id):<br>required: **true**<br><p>The ID of the source network interface.</p><br>
    ///   - [`traffic_mirror_target_id(impl Into<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::traffic_mirror_target_id) / [`set_traffic_mirror_target_id(Option<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_traffic_mirror_target_id):<br>required: **true**<br><p>The ID of the Traffic Mirror target.</p><br>
    ///   - [`traffic_mirror_filter_id(impl Into<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::traffic_mirror_filter_id) / [`set_traffic_mirror_filter_id(Option<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_traffic_mirror_filter_id):<br>required: **true**<br><p>The ID of the Traffic Mirror filter.</p><br>
    ///   - [`packet_length(i32)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::packet_length) / [`set_packet_length(Option<i32>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_packet_length):<br>required: **false**<br><p>The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.</p>  <p>If you do not want to mirror the entire packet, use the <code>PacketLength</code> parameter to specify the number of bytes in each packet to mirror.</p>  <p>For sessions with Network Load Balancer (NLB) Traffic Mirror targets the default <code>PacketLength</code> will be set to 8500. Valid values are 1-8500. Setting a <code>PacketLength</code> greater than 8500 will result in an error response.</p><br>
    ///   - [`session_number(i32)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::session_number) / [`set_session_number(Option<i32>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_session_number):<br>required: **true**<br><p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p>  <p>Valid values are 1-32766.</p><br>
    ///   - [`virtual_network_id(i32)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::virtual_network_id) / [`set_virtual_network_id(Option<i32>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_virtual_network_id):<br>required: **false**<br><p>The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see <a href="https://tools.ietf.org/html/rfc7348">RFC 7348</a>. If you do not specify a <code>VirtualNetworkId</code>, an account-wide unique id is chosen at random.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_description):<br>required: **false**<br><p>The description of the Traffic Mirror session.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to assign to a Traffic Mirror session.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p><br>
    /// - On success, responds with [`CreateTrafficMirrorSessionOutput`](crate::operation::create_traffic_mirror_session::CreateTrafficMirrorSessionOutput) with field(s):
    ///   - [`traffic_mirror_session(Option<TrafficMirrorSession>)`](crate::operation::create_traffic_mirror_session::CreateTrafficMirrorSessionOutput::traffic_mirror_session): <p>Information about the Traffic Mirror session.</p>
    ///   - [`client_token(Option<String>)`](crate::operation::create_traffic_mirror_session::CreateTrafficMirrorSessionOutput::client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    /// - On failure, responds with [`SdkError<CreateTrafficMirrorSessionError>`](crate::operation::create_traffic_mirror_session::CreateTrafficMirrorSessionError)
    pub fn create_traffic_mirror_session(
        &self,
    ) -> crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder {
        crate::operation::create_traffic_mirror_session::builders::CreateTrafficMirrorSessionFluentBuilder::new(self.handle.clone())
    }
}
