// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCapacityManagerMetricDimensions`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`group_by(GroupBy)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::group_by) / [`set_group_by(Option<Vec::<GroupBy>>)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::set_group_by):<br>required: **true**<br><p>The dimensions to group by when retrieving available dimension values. This determines which dimension combinations are returned. Required parameter.</p><br>
    ///   - [`filter_by(CapacityManagerCondition)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::filter_by) / [`set_filter_by(Option<Vec::<CapacityManagerCondition>>)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::set_filter_by):<br>required: **false**<br><p>Conditions to filter which dimension values are returned. Each filter specifies a dimension, comparison operator, and values to match against.</p><br>
    ///   - [`start_time(DateTime)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::set_start_time):<br>required: **true**<br><p>The start time for the dimension query, in ISO 8601 format. Only dimensions with data in this time range will be returned.</p><br>
    ///   - [`end_time(DateTime)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::set_end_time):<br>required: **true**<br><p>The end time for the dimension query, in ISO 8601 format. Only dimensions with data in this time range will be returned.</p><br>
    ///   - [`metric_names(Metric)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::metric_names) / [`set_metric_names(Option<Vec::<Metric>>)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::set_metric_names):<br>required: **true**<br><p>The metric names to use as an additional filter when retrieving dimensions. Only dimensions that have data for these metrics will be returned. Required parameter with maximum size of 1 for v1.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of dimension combinations to return. Valid range is 1 to 1000. Use with NextToken for pagination.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next page of results. Use this value in a subsequent call to retrieve additional dimension values.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`GetCapacityManagerMetricDimensionsOutput`](crate::operation::get_capacity_manager_metric_dimensions::GetCapacityManagerMetricDimensionsOutput) with field(s):
    ///   - [`metric_dimension_results(Option<Vec::<CapacityManagerDimension>>)`](crate::operation::get_capacity_manager_metric_dimensions::GetCapacityManagerMetricDimensionsOutput::metric_dimension_results): <p>The available dimension combinations that have data within the specified time range and filters.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_capacity_manager_metric_dimensions::GetCapacityManagerMetricDimensionsOutput::next_token): <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<GetCapacityManagerMetricDimensionsError>`](crate::operation::get_capacity_manager_metric_dimensions::GetCapacityManagerMetricDimensionsError)
    pub fn get_capacity_manager_metric_dimensions(
        &self,
    ) -> crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder {
        crate::operation::get_capacity_manager_metric_dimensions::builders::GetCapacityManagerMetricDimensionsFluentBuilder::new(self.handle.clone())
    }
}
