// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ExportImage`](crate::client::fluent_builders::ExportImage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::ExportImage::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::ExportImage::set_client_token): <p>Token to enable idempotency for export image requests.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::ExportImage::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::ExportImage::set_description): <p>A description of the image being exported. The maximum length is 255 characters.</p>
    ///   - [`disk_image_format(DiskImageFormat)`](crate::client::fluent_builders::ExportImage::disk_image_format) / [`set_disk_image_format(Option<DiskImageFormat>)`](crate::client::fluent_builders::ExportImage::set_disk_image_format): <p>The disk image format.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ExportImage::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ExportImage::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`image_id(impl Into<String>)`](crate::client::fluent_builders::ExportImage::image_id) / [`set_image_id(Option<String>)`](crate::client::fluent_builders::ExportImage::set_image_id): <p>The ID of the image.</p>
    ///   - [`s3_export_location(ExportTaskS3LocationRequest)`](crate::client::fluent_builders::ExportImage::s3_export_location) / [`set_s3_export_location(Option<ExportTaskS3LocationRequest>)`](crate::client::fluent_builders::ExportImage::set_s3_export_location): <p>The Amazon S3 bucket for the destination image. The destination bucket must exist.</p>
    ///   - [`role_name(impl Into<String>)`](crate::client::fluent_builders::ExportImage::role_name) / [`set_role_name(Option<String>)`](crate::client::fluent_builders::ExportImage::set_role_name): <p>The name of the role that grants VM Import/Export permission to export images to your Amazon S3 bucket. If this parameter is not specified, the default role is named 'vmimport'.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::client::fluent_builders::ExportImage::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::client::fluent_builders::ExportImage::set_tag_specifications): <p>The tags to apply to the export image task during creation.</p>
    /// - On success, responds with [`ExportImageOutput`](crate::output::ExportImageOutput) with field(s):
    ///   - [`description(Option<String>)`](crate::output::ExportImageOutput::description): <p>A description of the image being exported.</p>
    ///   - [`disk_image_format(Option<DiskImageFormat>)`](crate::output::ExportImageOutput::disk_image_format): <p>The disk image format for the exported image.</p>
    ///   - [`export_image_task_id(Option<String>)`](crate::output::ExportImageOutput::export_image_task_id): <p>The ID of the export image task.</p>
    ///   - [`image_id(Option<String>)`](crate::output::ExportImageOutput::image_id): <p>The ID of the image.</p>
    ///   - [`role_name(Option<String>)`](crate::output::ExportImageOutput::role_name): <p>The name of the role that grants VM Import/Export permission to export images to your Amazon S3 bucket.</p>
    ///   - [`progress(Option<String>)`](crate::output::ExportImageOutput::progress): <p>The percent complete of the export image task.</p>
    ///   - [`s3_export_location(Option<ExportTaskS3Location>)`](crate::output::ExportImageOutput::s3_export_location): <p>Information about the destination Amazon S3 bucket.</p>
    ///   - [`status(Option<String>)`](crate::output::ExportImageOutput::status): <p>The status of the export image task. The possible values are <code>active</code>, <code>completed</code>, <code>deleting</code>, and <code>deleted</code>.</p>
    ///   - [`status_message(Option<String>)`](crate::output::ExportImageOutput::status_message): <p>The status message for the export image task.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::ExportImageOutput::tags): <p>Any tags assigned to the export image task.</p>
    /// - On failure, responds with [`SdkError<ExportImageError>`](crate::error::ExportImageError)
    pub fn export_image(&self) -> crate::client::fluent_builders::ExportImage {
        crate::client::fluent_builders::ExportImage::new(self.handle.clone())
    }
}
