// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeSecurityGroupRules`](crate::client::fluent_builders::DescribeSecurityGroupRules) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeSecurityGroupRules::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::DescribeSecurityGroupRules::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::DescribeSecurityGroupRules::set_filters): <p>One or more filters.</p>  <ul>   <li> <p> <code>group-id</code> - The ID of the security group.</p> </li>   <li> <p> <code>security-group-rule-id</code> - The ID of the security group rule.</p> </li>   <li> <p> <code>tag</code>:<key>      - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key      <code>Owner</code> and the value      <code>TeamA</code>, specify      <code>tag:Owner</code> for the filter name and      <code>TeamA</code> for the filter value.    </key></p> </li>  </ul>
    ///   - [`security_group_rule_ids(Vec<String>)`](crate::client::fluent_builders::DescribeSecurityGroupRules::security_group_rule_ids) / [`set_security_group_rule_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeSecurityGroupRules::set_security_group_rule_ids): <p>The IDs of the security group rules.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DescribeSecurityGroupRules::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DescribeSecurityGroupRules::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeSecurityGroupRules::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeSecurityGroupRules::set_next_token): <p>The token for the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeSecurityGroupRules::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeSecurityGroupRules::set_max_results): <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.</p>
    /// - On success, responds with [`DescribeSecurityGroupRulesOutput`](crate::output::DescribeSecurityGroupRulesOutput) with field(s):
    ///   - [`security_group_rules(Option<Vec<SecurityGroupRule>>)`](crate::output::DescribeSecurityGroupRulesOutput::security_group_rules): <p>Information about security group rules.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeSecurityGroupRulesOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. </p>
    /// - On failure, responds with [`SdkError<DescribeSecurityGroupRulesError>`](crate::error::DescribeSecurityGroupRulesError)
    pub fn describe_security_group_rules(
        &self,
    ) -> crate::client::fluent_builders::DescribeSecurityGroupRules {
        crate::client::fluent_builders::DescribeSecurityGroupRules::new(self.handle.clone())
    }
}
