// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribePlacementGroups`](crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder::set_filters): <p>The filters.</p>  <ul>   <li> <p> <code>group-name</code> - The name of the placement group.</p> </li>   <li> <p> <code>group-arn</code> - The Amazon Resource Name (ARN) of the placement group.</p> </li>   <li> <p> <code>spread-level</code> - The spread level for the placement group (<code>host</code> | <code>rack</code>). </p> </li>   <li> <p> <code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li>   <li> <p> <code>strategy</code> - The strategy of the placement group (<code>cluster</code> | <code>spread</code> | <code>partition</code>).</p> </li>   <li> <p> <code>tag:     <key></key></code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li>   <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li>  </ul>
    ///   - [`dry_run(bool)`](crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`group_names(Vec<String>)`](crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder::group_names) / [`set_group_names(Option<Vec<String>>)`](crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder::set_group_names): <p>The names of the placement groups.</p>  <p>Default: Describes all your placement groups, or only those otherwise specified.</p>
    ///   - [`group_ids(Vec<String>)`](crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder::group_ids) / [`set_group_ids(Option<Vec<String>>)`](crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder::set_group_ids): <p>The IDs of the placement groups.</p>
    /// - On success, responds with [`DescribePlacementGroupsOutput`](crate::operation::describe_placement_groups::DescribePlacementGroupsOutput) with field(s):
    ///   - [`placement_groups(Option<Vec<PlacementGroup>>)`](crate::operation::describe_placement_groups::DescribePlacementGroupsOutput::placement_groups): <p>Information about the placement groups.</p>
    /// - On failure, responds with [`SdkError<DescribePlacementGroupsError>`](crate::operation::describe_placement_groups::DescribePlacementGroupsError)
    pub fn describe_placement_groups(
        &self,
    ) -> crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder
    {
        crate::operation::describe_placement_groups::builders::DescribePlacementGroupsFluentBuilder::new(self.handle.clone())
    }
}
