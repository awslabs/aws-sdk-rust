// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportSnapshot`](crate::client::fluent_builders::ImportSnapshot) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_data(ClientData)`](crate::client::fluent_builders::ImportSnapshot::client_data) / [`set_client_data(Option<ClientData>)`](crate::client::fluent_builders::ImportSnapshot::set_client_data): <p>The client-specific data.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::ImportSnapshot::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::ImportSnapshot::set_client_token): <p>Token to enable idempotency for VM import requests.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::ImportSnapshot::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::ImportSnapshot::set_description): <p>The description string for the import snapshot task.</p>
    ///   - [`disk_container(SnapshotDiskContainer)`](crate::client::fluent_builders::ImportSnapshot::disk_container) / [`set_disk_container(Option<SnapshotDiskContainer>)`](crate::client::fluent_builders::ImportSnapshot::set_disk_container): <p>Information about the disk container.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ImportSnapshot::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ImportSnapshot::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`encrypted(bool)`](crate::client::fluent_builders::ImportSnapshot::encrypted) / [`set_encrypted(Option<bool>)`](crate::client::fluent_builders::ImportSnapshot::set_encrypted): <p>Specifies whether the destination snapshot of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::client::fluent_builders::ImportSnapshot::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::client::fluent_builders::ImportSnapshot::set_kms_key_id): <p>An identifier for the symmetric KMS key to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set. </p>  <p>The KMS key identifier may be provided in any of the following formats: </p>  <ul>   <li> <p>Key ID</p> </li>   <li> <p>Key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p> </li>   <li> <p>ARN using key ID. The ID ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>key</code> namespace, and then the key ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p> </li>   <li> <p>ARN using key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>. </p> </li>  </ul>  <p>Amazon Web Services parses <code>KmsKeyId</code> asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure. </p>  <p>The specified KMS key must exist in the Region that the snapshot is being copied to.</p>  <p>Amazon EBS does not support asymmetric KMS keys.</p>
    ///   - [`role_name(impl Into<String>)`](crate::client::fluent_builders::ImportSnapshot::role_name) / [`set_role_name(Option<String>)`](crate::client::fluent_builders::ImportSnapshot::set_role_name): <p>The name of the role to use when not using the default role, 'vmimport'.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::client::fluent_builders::ImportSnapshot::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::client::fluent_builders::ImportSnapshot::set_tag_specifications): <p>The tags to apply to the import snapshot task during creation.</p>
    /// - On success, responds with [`ImportSnapshotOutput`](crate::output::ImportSnapshotOutput) with field(s):
    ///   - [`description(Option<String>)`](crate::output::ImportSnapshotOutput::description): <p>A description of the import snapshot task.</p>
    ///   - [`import_task_id(Option<String>)`](crate::output::ImportSnapshotOutput::import_task_id): <p>The ID of the import snapshot task.</p>
    ///   - [`snapshot_task_detail(Option<SnapshotTaskDetail>)`](crate::output::ImportSnapshotOutput::snapshot_task_detail): <p>Information about the import snapshot task.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::ImportSnapshotOutput::tags): <p>Any tags assigned to the import snapshot task.</p>
    /// - On failure, responds with [`SdkError<ImportSnapshotError>`](crate::error::ImportSnapshotError)
    pub fn import_snapshot(&self) -> crate::client::fluent_builders::ImportSnapshot {
        crate::client::fluent_builders::ImportSnapshot::new(self.handle.clone())
    }
}
