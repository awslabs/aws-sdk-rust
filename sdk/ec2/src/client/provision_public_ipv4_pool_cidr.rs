// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ProvisionPublicIpv4PoolCidr`](crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr::set_dry_run): <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`ipam_pool_id(impl Into<String>)`](crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr::ipam_pool_id) / [`set_ipam_pool_id(Option<String>)`](crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr::set_ipam_pool_id): <p>The ID of the IPAM pool you would like to use to allocate this CIDR.</p>
    ///   - [`pool_id(impl Into<String>)`](crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr::pool_id) / [`set_pool_id(Option<String>)`](crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr::set_pool_id): <p>The ID of the public IPv4 pool you would like to use for this CIDR.</p>
    ///   - [`netmask_length(i32)`](crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr::netmask_length) / [`set_netmask_length(Option<i32>)`](crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr::set_netmask_length): <p>The netmask length of the CIDR you would like to allocate to the public IPv4 pool.</p>
    /// - On success, responds with [`ProvisionPublicIpv4PoolCidrOutput`](crate::output::ProvisionPublicIpv4PoolCidrOutput) with field(s):
    ///   - [`pool_id(Option<String>)`](crate::output::ProvisionPublicIpv4PoolCidrOutput::pool_id): <p>The ID of the pool that you want to provision the CIDR to.</p>
    ///   - [`pool_address_range(Option<PublicIpv4PoolRange>)`](crate::output::ProvisionPublicIpv4PoolCidrOutput::pool_address_range): <p>Information about the address range of the public IPv4 pool.</p>
    /// - On failure, responds with [`SdkError<ProvisionPublicIpv4PoolCidrError>`](crate::error::ProvisionPublicIpv4PoolCidrError)
    pub fn provision_public_ipv4_pool_cidr(
        &self,
    ) -> crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr {
        crate::client::fluent_builders::ProvisionPublicIpv4PoolCidr::new(self.handle.clone())
    }
}
