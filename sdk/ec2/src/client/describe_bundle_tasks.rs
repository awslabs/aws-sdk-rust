// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeBundleTasks`](crate::operation::describe_bundle_tasks::builders::DescribeBundleTasksFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bundle_ids(Vec<String>)`](crate::operation::describe_bundle_tasks::builders::DescribeBundleTasksFluentBuilder::bundle_ids) / [`set_bundle_ids(Option<Vec<String>>)`](crate::operation::describe_bundle_tasks::builders::DescribeBundleTasksFluentBuilder::set_bundle_ids): <p>The bundle task IDs.</p>  <p>Default: Describes all your bundle tasks.</p>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_bundle_tasks::builders::DescribeBundleTasksFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_bundle_tasks::builders::DescribeBundleTasksFluentBuilder::set_filters): <p>The filters.</p>  <ul>   <li> <p> <code>bundle-id</code> - The ID of the bundle task.</p> </li>   <li> <p> <code>error-code</code> - If the task failed, the error code returned.</p> </li>   <li> <p> <code>error-message</code> - If the task failed, the error message returned.</p> </li>   <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li>   <li> <p> <code>progress</code> - The level of task completion, as a percentage (for example, 20%).</p> </li>   <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.</p> </li>   <li> <p> <code>s3-prefix</code> - The beginning of the AMI name.</p> </li>   <li> <p> <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).</p> </li>   <li> <p> <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code> | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code> | <code>failed</code>).</p> </li>   <li> <p> <code>update-time</code> - The time of the most recent update for the task.</p> </li>  </ul>
    ///   - [`dry_run(bool)`](crate::operation::describe_bundle_tasks::builders::DescribeBundleTasksFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::describe_bundle_tasks::builders::DescribeBundleTasksFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DescribeBundleTasksOutput`](crate::operation::describe_bundle_tasks::DescribeBundleTasksOutput) with field(s):
    ///   - [`bundle_tasks(Option<Vec<BundleTask>>)`](crate::operation::describe_bundle_tasks::DescribeBundleTasksOutput::bundle_tasks): <p>Information about the bundle tasks.</p>
    /// - On failure, responds with [`SdkError<DescribeBundleTasksError>`](crate::operation::describe_bundle_tasks::DescribeBundleTasksError)
    pub fn describe_bundle_tasks(
        &self,
    ) -> crate::operation::describe_bundle_tasks::builders::DescribeBundleTasksFluentBuilder {
        crate::operation::describe_bundle_tasks::builders::DescribeBundleTasksFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
