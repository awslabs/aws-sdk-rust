// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchLocalGatewayRoutes`](crate::client::fluent_builders::SearchLocalGatewayRoutes) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::SearchLocalGatewayRoutes::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`local_gateway_route_table_id(impl Into<String>)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::local_gateway_route_table_id) / [`set_local_gateway_route_table_id(Option<String>)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::set_local_gateway_route_table_id): <p>The ID of the local gateway route table.</p>
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::set_filters): <p>One or more filters.</p>  <ul>   <li> <p> <code>route-search.exact-match</code> - The exact match of the specified filter.</p> </li>   <li> <p> <code>route-search.longest-prefix-match</code> - The longest prefix that matches the route.</p> </li>   <li> <p> <code>route-search.subnet-of-match</code> - The routes with a subnet that match the specified CIDR filter.</p> </li>   <li> <p> <code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify <code>supernet-of-match</code> as 10.0.1.0/30, then the result returns 10.0.1.0/29.</p> </li>   <li> <p> <code>state</code> - The state of the route.</p> </li>   <li> <p> <code>type</code> - The route type.</p> </li>  </ul>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::set_next_token): <p>The token for the next page of results.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::SearchLocalGatewayRoutes::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`SearchLocalGatewayRoutesOutput`](crate::output::SearchLocalGatewayRoutesOutput) with field(s):
    ///   - [`routes(Option<Vec<LocalGatewayRoute>>)`](crate::output::SearchLocalGatewayRoutesOutput::routes): <p>Information about the routes.</p>
    ///   - [`next_token(Option<String>)`](crate::output::SearchLocalGatewayRoutesOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<SearchLocalGatewayRoutesError>`](crate::error::SearchLocalGatewayRoutesError)
    pub fn search_local_gateway_routes(
        &self,
    ) -> crate::client::fluent_builders::SearchLocalGatewayRoutes {
        crate::client::fluent_builders::SearchLocalGatewayRoutes::new(self.handle.clone())
    }
}
