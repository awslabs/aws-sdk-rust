// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyLaunchTemplate`](crate::client::fluent_builders::ModifyLaunchTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ModifyLaunchTemplate::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ModifyLaunchTemplate::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::ModifyLaunchTemplate::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::ModifyLaunchTemplate::set_client_token): <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a>.</p>  <p>Constraint: Maximum 128 ASCII characters.</p>
    ///   - [`launch_template_id(impl Into<String>)`](crate::client::fluent_builders::ModifyLaunchTemplate::launch_template_id) / [`set_launch_template_id(Option<String>)`](crate::client::fluent_builders::ModifyLaunchTemplate::set_launch_template_id): <p>The ID of the launch template.</p>  <p>You must specify either the <code>LaunchTemplateId</code> or the <code>LaunchTemplateName</code>, but not both.</p>
    ///   - [`launch_template_name(impl Into<String>)`](crate::client::fluent_builders::ModifyLaunchTemplate::launch_template_name) / [`set_launch_template_name(Option<String>)`](crate::client::fluent_builders::ModifyLaunchTemplate::set_launch_template_name): <p>The name of the launch template.</p>  <p>You must specify either the <code>LaunchTemplateName</code> or the <code>LaunchTemplateId</code>, but not both.</p>
    ///   - [`default_version(impl Into<String>)`](crate::client::fluent_builders::ModifyLaunchTemplate::default_version) / [`set_default_version(Option<String>)`](crate::client::fluent_builders::ModifyLaunchTemplate::set_default_version): <p>The version number of the launch template to set as the default version.</p>
    /// - On success, responds with [`ModifyLaunchTemplateOutput`](crate::output::ModifyLaunchTemplateOutput) with field(s):
    ///   - [`launch_template(Option<LaunchTemplate>)`](crate::output::ModifyLaunchTemplateOutput::launch_template): <p>Information about the launch template.</p>
    /// - On failure, responds with [`SdkError<ModifyLaunchTemplateError>`](crate::error::ModifyLaunchTemplateError)
    pub fn modify_launch_template(&self) -> crate::client::fluent_builders::ModifyLaunchTemplate {
        crate::client::fluent_builders::ModifyLaunchTemplate::new(self.handle.clone())
    }
}
