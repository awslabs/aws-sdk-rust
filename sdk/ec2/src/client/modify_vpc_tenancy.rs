// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyVpcTenancy`](crate::client::fluent_builders::ModifyVpcTenancy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`vpc_id(impl Into<String>)`](crate::client::fluent_builders::ModifyVpcTenancy::vpc_id) / [`set_vpc_id(Option<String>)`](crate::client::fluent_builders::ModifyVpcTenancy::set_vpc_id): <p>The ID of the VPC.</p>
    ///   - [`instance_tenancy(VpcTenancy)`](crate::client::fluent_builders::ModifyVpcTenancy::instance_tenancy) / [`set_instance_tenancy(Option<VpcTenancy>)`](crate::client::fluent_builders::ModifyVpcTenancy::set_instance_tenancy): <p>The instance tenancy attribute for the VPC. </p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ModifyVpcTenancy::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ModifyVpcTenancy::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`ModifyVpcTenancyOutput`](crate::output::ModifyVpcTenancyOutput) with field(s):
    ///   - [`return_value(Option<bool>)`](crate::output::ModifyVpcTenancyOutput::return_value): <p>Returns <code>true</code> if the request succeeds; otherwise, returns an error.</p>
    /// - On failure, responds with [`SdkError<ModifyVpcTenancyError>`](crate::error::ModifyVpcTenancyError)
    pub fn modify_vpc_tenancy(&self) -> crate::client::fluent_builders::ModifyVpcTenancy {
        crate::client::fluent_builders::ModifyVpcTenancy::new(self.handle.clone())
    }
}
