// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetNetworkInsightsAccessScopeContent`](crate::client::fluent_builders::GetNetworkInsightsAccessScopeContent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_insights_access_scope_id(impl Into<String>)`](crate::client::fluent_builders::GetNetworkInsightsAccessScopeContent::network_insights_access_scope_id) / [`set_network_insights_access_scope_id(Option<String>)`](crate::client::fluent_builders::GetNetworkInsightsAccessScopeContent::set_network_insights_access_scope_id): <p>The ID of the Network Access Scope.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::GetNetworkInsightsAccessScopeContent::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::GetNetworkInsightsAccessScopeContent::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`GetNetworkInsightsAccessScopeContentOutput`](crate::output::GetNetworkInsightsAccessScopeContentOutput) with field(s):
    ///   - [`network_insights_access_scope_content(Option<NetworkInsightsAccessScopeContent>)`](crate::output::GetNetworkInsightsAccessScopeContentOutput::network_insights_access_scope_content): <p>The Network Access Scope content.</p>
    /// - On failure, responds with [`SdkError<GetNetworkInsightsAccessScopeContentError>`](crate::error::GetNetworkInsightsAccessScopeContentError)
    pub fn get_network_insights_access_scope_content(
        &self,
    ) -> crate::client::fluent_builders::GetNetworkInsightsAccessScopeContent {
        crate::client::fluent_builders::GetNetworkInsightsAccessScopeContent::new(
            self.handle.clone(),
        )
    }
}
