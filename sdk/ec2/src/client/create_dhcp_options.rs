// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDhcpOptions`](crate::operation::create_dhcp_options::builders::CreateDhcpOptionsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dhcp_configurations(Vec<NewDhcpConfiguration>)`](crate::operation::create_dhcp_options::builders::CreateDhcpOptionsFluentBuilder::dhcp_configurations) / [`set_dhcp_configurations(Option<Vec<NewDhcpConfiguration>>)`](crate::operation::create_dhcp_options::builders::CreateDhcpOptionsFluentBuilder::set_dhcp_configurations): <p>A DHCP configuration option.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_dhcp_options::builders::CreateDhcpOptionsFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_dhcp_options::builders::CreateDhcpOptionsFluentBuilder::set_tag_specifications): <p>The tags to assign to the DHCP option.</p>
    ///   - [`dry_run(bool)`](crate::operation::create_dhcp_options::builders::CreateDhcpOptionsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_dhcp_options::builders::CreateDhcpOptionsFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CreateDhcpOptionsOutput`](crate::operation::create_dhcp_options::CreateDhcpOptionsOutput) with field(s):
    ///   - [`dhcp_options(Option<DhcpOptions>)`](crate::operation::create_dhcp_options::CreateDhcpOptionsOutput::dhcp_options): <p>A set of DHCP options.</p>
    /// - On failure, responds with [`SdkError<CreateDhcpOptionsError>`](crate::operation::create_dhcp_options::CreateDhcpOptionsError)
    pub fn create_dhcp_options(
        &self,
    ) -> crate::operation::create_dhcp_options::builders::CreateDhcpOptionsFluentBuilder {
        crate::operation::create_dhcp_options::builders::CreateDhcpOptionsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
