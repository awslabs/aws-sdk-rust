// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteVerifiedAccessGroup`](crate::operation::delete_verified_access_group::builders::DeleteVerifiedAccessGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`verified_access_group_id(impl Into<String>)`](crate::operation::delete_verified_access_group::builders::DeleteVerifiedAccessGroupFluentBuilder::verified_access_group_id) / [`set_verified_access_group_id(Option<String>)`](crate::operation::delete_verified_access_group::builders::DeleteVerifiedAccessGroupFluentBuilder::set_verified_access_group_id):<br>required: **true**<br><p>The ID of the Verified Access group.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_verified_access_group::builders::DeleteVerifiedAccessGroupFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_verified_access_group::builders::DeleteVerifiedAccessGroupFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::delete_verified_access_group::builders::DeleteVerifiedAccessGroupFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::delete_verified_access_group::builders::DeleteVerifiedAccessGroupFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`DeleteVerifiedAccessGroupOutput`](crate::operation::delete_verified_access_group::DeleteVerifiedAccessGroupOutput) with field(s):
    ///   - [`verified_access_group(Option<VerifiedAccessGroup>)`](crate::operation::delete_verified_access_group::DeleteVerifiedAccessGroupOutput::verified_access_group): <p>The ID of the Verified Access group.</p>
    /// - On failure, responds with [`SdkError<DeleteVerifiedAccessGroupError>`](crate::operation::delete_verified_access_group::DeleteVerifiedAccessGroupError)
    pub fn delete_verified_access_group(&self) -> crate::operation::delete_verified_access_group::builders::DeleteVerifiedAccessGroupFluentBuilder {
        crate::operation::delete_verified_access_group::builders::DeleteVerifiedAccessGroupFluentBuilder::new(self.handle.clone())
    }
}
