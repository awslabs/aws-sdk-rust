// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteVpcEndpointConnectionNotifications`](crate::client::fluent_builders::DeleteVpcEndpointConnectionNotifications) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DeleteVpcEndpointConnectionNotifications::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DeleteVpcEndpointConnectionNotifications::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`connection_notification_ids(Vec<String>)`](crate::client::fluent_builders::DeleteVpcEndpointConnectionNotifications::connection_notification_ids) / [`set_connection_notification_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteVpcEndpointConnectionNotifications::set_connection_notification_ids): <p>The IDs of the notifications.</p>
    /// - On success, responds with [`DeleteVpcEndpointConnectionNotificationsOutput`](crate::output::DeleteVpcEndpointConnectionNotificationsOutput) with field(s):
    ///   - [`unsuccessful(Option<Vec<UnsuccessfulItem>>)`](crate::output::DeleteVpcEndpointConnectionNotificationsOutput::unsuccessful): <p>Information about the notifications that could not be deleted successfully.</p>
    /// - On failure, responds with [`SdkError<DeleteVpcEndpointConnectionNotificationsError>`](crate::error::DeleteVpcEndpointConnectionNotificationsError)
    pub fn delete_vpc_endpoint_connection_notifications(
        &self,
    ) -> crate::client::fluent_builders::DeleteVpcEndpointConnectionNotifications {
        crate::client::fluent_builders::DeleteVpcEndpointConnectionNotifications::new(
            self.handle.clone(),
        )
    }
}
