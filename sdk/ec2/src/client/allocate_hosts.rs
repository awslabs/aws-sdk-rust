// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AllocateHosts`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_placement(AutoPlacement)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::auto_placement) / [`set_auto_placement(Option<AutoPlacement>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::set_auto_placement): <p>Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding"> Understanding auto-placement and affinity</a> in the <i>Amazon EC2 User Guide</i>.</p>  <p>Default: <code>on</code> </p>
    ///   - [`availability_zone(impl Into<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::availability_zone) / [`set_availability_zone(Option<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::set_availability_zone): <p>The Availability Zone in which to allocate the Dedicated Host.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    ///   - [`instance_type(impl Into<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::instance_type) / [`set_instance_type(Option<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::set_instance_type): <p>Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.</p>  <p>If you want the Dedicated Hosts to support multiple instance types in a specific instance family, omit this parameter and specify <b>InstanceFamily</b> instead. You cannot specify <b>InstanceType</b> and <b>InstanceFamily</b> in the same request.</p>
    ///   - [`instance_family(impl Into<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::instance_family) / [`set_instance_family(Option<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::set_instance_family): <p>Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family.</p>  <p>If you want the Dedicated Hosts to support a specific instance type only, omit this parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b> and <b>InstanceType</b> in the same request.</p>
    ///   - [`quantity(i32)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::quantity) / [`set_quantity(Option<i32>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::set_quantity): <p>The number of Dedicated Hosts to allocate to your account with these parameters.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::set_tag_specifications): <p>The tags to apply to the Dedicated Host during creation.</p>
    ///   - [`host_recovery(HostRecovery)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::host_recovery) / [`set_host_recovery(Option<HostRecovery>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::set_host_recovery): <p>Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html"> Host recovery</a> in the <i>Amazon EC2 User Guide</i>.</p>  <p>Default: <code>off</code> </p>
    ///   - [`outpost_arn(impl Into<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::outpost_arn) / [`set_outpost_arn(Option<String>)`](crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::set_outpost_arn): <p>The Amazon Resource Name (ARN) of the Amazon Web Services Outpost on which to allocate the Dedicated Host.</p>
    /// - On success, responds with [`AllocateHostsOutput`](crate::operation::allocate_hosts::AllocateHostsOutput) with field(s):
    ///   - [`host_ids(Option<Vec<String>>)`](crate::operation::allocate_hosts::AllocateHostsOutput::host_ids): <p>The ID of the allocated Dedicated Host. This is used to launch an instance onto a specific host.</p>
    /// - On failure, responds with [`SdkError<AllocateHostsError>`](crate::operation::allocate_hosts::AllocateHostsError)
    pub fn allocate_hosts(
        &self,
    ) -> crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder {
        crate::operation::allocate_hosts::builders::AllocateHostsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
