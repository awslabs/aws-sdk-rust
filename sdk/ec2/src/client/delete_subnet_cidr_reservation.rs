// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteSubnetCidrReservation`](crate::operation::delete_subnet_cidr_reservation::builders::DeleteSubnetCidrReservationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subnet_cidr_reservation_id(impl Into<String>)`](crate::operation::delete_subnet_cidr_reservation::builders::DeleteSubnetCidrReservationFluentBuilder::subnet_cidr_reservation_id) / [`set_subnet_cidr_reservation_id(Option<String>)`](crate::operation::delete_subnet_cidr_reservation::builders::DeleteSubnetCidrReservationFluentBuilder::set_subnet_cidr_reservation_id): <p>The ID of the subnet CIDR reservation.</p>
    ///   - [`dry_run(bool)`](crate::operation::delete_subnet_cidr_reservation::builders::DeleteSubnetCidrReservationFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::delete_subnet_cidr_reservation::builders::DeleteSubnetCidrReservationFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DeleteSubnetCidrReservationOutput`](crate::operation::delete_subnet_cidr_reservation::DeleteSubnetCidrReservationOutput) with field(s):
    ///   - [`deleted_subnet_cidr_reservation(Option<SubnetCidrReservation>)`](crate::operation::delete_subnet_cidr_reservation::DeleteSubnetCidrReservationOutput::deleted_subnet_cidr_reservation): <p>Information about the deleted subnet CIDR reservation.</p>
    /// - On failure, responds with [`SdkError<DeleteSubnetCidrReservationError>`](crate::operation::delete_subnet_cidr_reservation::DeleteSubnetCidrReservationError)
    pub fn delete_subnet_cidr_reservation(&self) -> crate::operation::delete_subnet_cidr_reservation::builders::DeleteSubnetCidrReservationFluentBuilder{
        crate::operation::delete_subnet_cidr_reservation::builders::DeleteSubnetCidrReservationFluentBuilder::new(self.handle.clone())
    }
}
