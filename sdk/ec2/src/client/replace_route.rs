// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ReplaceRoute`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`destination_cidr_block(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::destination_cidr_block) / [`set_destination_cidr_block(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_destination_cidr_block): <p>The IPv4 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.</p>
    ///   - [`destination_ipv6_cidr_block(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::destination_ipv6_cidr_block) / [`set_destination_ipv6_cidr_block(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_destination_ipv6_cidr_block): <p>The IPv6 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.</p>
    ///   - [`destination_prefix_list_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::destination_prefix_list_id) / [`set_destination_prefix_list_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_destination_prefix_list_id): <p>The ID of the prefix list for the route.</p>
    ///   - [`dry_run(bool)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`vpc_endpoint_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::vpc_endpoint_id) / [`set_vpc_endpoint_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_vpc_endpoint_id): <p>The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.</p>
    ///   - [`egress_only_internet_gateway_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::egress_only_internet_gateway_id) / [`set_egress_only_internet_gateway_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_egress_only_internet_gateway_id): <p>[IPv6 traffic only] The ID of an egress-only internet gateway.</p>
    ///   - [`gateway_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::gateway_id) / [`set_gateway_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_gateway_id): <p>The ID of an internet gateway or virtual private gateway.</p>
    ///   - [`instance_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_instance_id): <p>The ID of a NAT instance in your VPC.</p>
    ///   - [`local_target(bool)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::local_target) / [`set_local_target(Option<bool>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_local_target): <p>Specifies whether to reset the local route to its default target (<code>local</code>).</p>
    ///   - [`nat_gateway_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::nat_gateway_id) / [`set_nat_gateway_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_nat_gateway_id): <p>[IPv4 traffic only] The ID of a NAT gateway.</p>
    ///   - [`transit_gateway_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::transit_gateway_id) / [`set_transit_gateway_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_transit_gateway_id): <p>The ID of a transit gateway.</p>
    ///   - [`local_gateway_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::local_gateway_id) / [`set_local_gateway_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_local_gateway_id): <p>The ID of the local gateway.</p>
    ///   - [`carrier_gateway_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::carrier_gateway_id) / [`set_carrier_gateway_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_carrier_gateway_id): <p>[IPv4 traffic only] The ID of a carrier gateway.</p>
    ///   - [`network_interface_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::network_interface_id) / [`set_network_interface_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_network_interface_id): <p>The ID of a network interface.</p>
    ///   - [`route_table_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::route_table_id) / [`set_route_table_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_route_table_id): <p>The ID of the route table.</p>
    ///   - [`vpc_peering_connection_id(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::vpc_peering_connection_id) / [`set_vpc_peering_connection_id(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_vpc_peering_connection_id): <p>The ID of a VPC peering connection.</p>
    ///   - [`core_network_arn(impl Into<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::core_network_arn) / [`set_core_network_arn(Option<String>)`](crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::set_core_network_arn): <p>The Amazon Resource Name (ARN) of the core network.</p>
    /// - On success, responds with [`ReplaceRouteOutput`](crate::operation::replace_route::ReplaceRouteOutput)
    /// - On failure, responds with [`SdkError<ReplaceRouteError>`](crate::operation::replace_route::ReplaceRouteError)
    pub fn replace_route(
        &self,
    ) -> crate::operation::replace_route::builders::ReplaceRouteFluentBuilder {
        crate::operation::replace_route::builders::ReplaceRouteFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
