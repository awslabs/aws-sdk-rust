// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeClientVpnRoutes`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_vpn_endpoint_id(impl Into<String>)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::client_vpn_endpoint_id) / [`set_client_vpn_endpoint_id(Option<String>)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::set_client_vpn_endpoint_id): <p>The ID of the Client VPN endpoint.</p>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::set_filters): <p>One or more filters. Filter names and values are case-sensitive.</p>  <ul>   <li> <p> <code>destination-cidr</code> - The CIDR of the route destination.</p> </li>   <li> <p> <code>origin</code> - How the route was associated with the Client VPN endpoint (<code>associate</code> | <code>add-route</code>).</p> </li>   <li> <p> <code>target-subnet</code> - The ID of the subnet through which traffic is routed.</p> </li>  </ul>
    ///   - [`max_results(i32)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::set_max_results): <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::set_next_token): <p>The token to retrieve the next page of results.</p>
    ///   - [`dry_run(bool)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DescribeClientVpnRoutesOutput`](crate::operation::describe_client_vpn_routes::DescribeClientVpnRoutesOutput) with field(s):
    ///   - [`routes(Option<Vec<ClientVpnRoute>>)`](crate::operation::describe_client_vpn_routes::DescribeClientVpnRoutesOutput::routes): <p>Information about the Client VPN endpoint routes.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_client_vpn_routes::DescribeClientVpnRoutesOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<DescribeClientVpnRoutesError>`](crate::operation::describe_client_vpn_routes::DescribeClientVpnRoutesError)
    pub fn describe_client_vpn_routes(
        &self,
    ) -> crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder
    {
        crate::operation::describe_client_vpn_routes::builders::DescribeClientVpnRoutesFluentBuilder::new(self.handle.clone())
    }
}
