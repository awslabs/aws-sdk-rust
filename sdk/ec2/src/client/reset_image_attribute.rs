// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ResetImageAttribute`](crate::client::fluent_builders::ResetImageAttribute) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`attribute(ResetImageAttributeName)`](crate::client::fluent_builders::ResetImageAttribute::attribute) / [`set_attribute(Option<ResetImageAttributeName>)`](crate::client::fluent_builders::ResetImageAttribute::set_attribute): <p>The attribute to reset (currently you can only reset the launch permission attribute).</p>
    ///   - [`image_id(impl Into<String>)`](crate::client::fluent_builders::ResetImageAttribute::image_id) / [`set_image_id(Option<String>)`](crate::client::fluent_builders::ResetImageAttribute::set_image_id): <p>The ID of the AMI.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ResetImageAttribute::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ResetImageAttribute::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`ResetImageAttributeOutput`](crate::output::ResetImageAttributeOutput)
    /// - On failure, responds with [`SdkError<ResetImageAttributeError>`](crate::error::ResetImageAttributeError)
    pub fn reset_image_attribute(&self) -> crate::client::fluent_builders::ResetImageAttribute {
        crate::client::fluent_builders::ResetImageAttribute::new(self.handle.clone())
    }
}
