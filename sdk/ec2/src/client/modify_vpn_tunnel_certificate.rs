// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyVpnTunnelCertificate`](crate::client::fluent_builders::ModifyVpnTunnelCertificate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`vpn_connection_id(impl Into<String>)`](crate::client::fluent_builders::ModifyVpnTunnelCertificate::vpn_connection_id) / [`set_vpn_connection_id(Option<String>)`](crate::client::fluent_builders::ModifyVpnTunnelCertificate::set_vpn_connection_id): <p>The ID of the Amazon Web Services Site-to-Site VPN connection.</p>
    ///   - [`vpn_tunnel_outside_ip_address(impl Into<String>)`](crate::client::fluent_builders::ModifyVpnTunnelCertificate::vpn_tunnel_outside_ip_address) / [`set_vpn_tunnel_outside_ip_address(Option<String>)`](crate::client::fluent_builders::ModifyVpnTunnelCertificate::set_vpn_tunnel_outside_ip_address): <p>The external IP address of the VPN tunnel.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ModifyVpnTunnelCertificate::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ModifyVpnTunnelCertificate::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`ModifyVpnTunnelCertificateOutput`](crate::output::ModifyVpnTunnelCertificateOutput) with field(s):
    ///   - [`vpn_connection(Option<VpnConnection>)`](crate::output::ModifyVpnTunnelCertificateOutput::vpn_connection): <p>Information about the VPN connection.</p>
    /// - On failure, responds with [`SdkError<ModifyVpnTunnelCertificateError>`](crate::error::ModifyVpnTunnelCertificateError)
    pub fn modify_vpn_tunnel_certificate(
        &self,
    ) -> crate::client::fluent_builders::ModifyVpnTunnelCertificate {
        crate::client::fluent_builders::ModifyVpnTunnelCertificate::new(self.handle.clone())
    }
}
