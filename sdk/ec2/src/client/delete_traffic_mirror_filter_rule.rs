// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteTrafficMirrorFilterRule`](crate::client::fluent_builders::DeleteTrafficMirrorFilterRule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`traffic_mirror_filter_rule_id(impl Into<String>)`](crate::client::fluent_builders::DeleteTrafficMirrorFilterRule::traffic_mirror_filter_rule_id) / [`set_traffic_mirror_filter_rule_id(Option<String>)`](crate::client::fluent_builders::DeleteTrafficMirrorFilterRule::set_traffic_mirror_filter_rule_id): <p>The ID of the Traffic Mirror rule.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DeleteTrafficMirrorFilterRule::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DeleteTrafficMirrorFilterRule::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DeleteTrafficMirrorFilterRuleOutput`](crate::output::DeleteTrafficMirrorFilterRuleOutput) with field(s):
    ///   - [`traffic_mirror_filter_rule_id(Option<String>)`](crate::output::DeleteTrafficMirrorFilterRuleOutput::traffic_mirror_filter_rule_id): <p>The ID of the deleted Traffic Mirror rule.</p>
    /// - On failure, responds with [`SdkError<DeleteTrafficMirrorFilterRuleError>`](crate::error::DeleteTrafficMirrorFilterRuleError)
    pub fn delete_traffic_mirror_filter_rule(
        &self,
    ) -> crate::client::fluent_builders::DeleteTrafficMirrorFilterRule {
        crate::client::fluent_builders::DeleteTrafficMirrorFilterRule::new(self.handle.clone())
    }
}
