// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateNetworkInsightsAccessScope`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`match_paths(Vec<AccessScopePathRequest>)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::match_paths) / [`set_match_paths(Option<Vec<AccessScopePathRequest>>)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::set_match_paths): <p>The paths to match.</p>
    ///   - [`exclude_paths(Vec<AccessScopePathRequest>)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::exclude_paths) / [`set_exclude_paths(Option<Vec<AccessScopePathRequest>>)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::set_exclude_paths): <p>The paths to exclude.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::set_tag_specifications): <p>The tags to apply.</p>
    ///   - [`dry_run(bool)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CreateNetworkInsightsAccessScopeOutput`](crate::operation::create_network_insights_access_scope::CreateNetworkInsightsAccessScopeOutput) with field(s):
    ///   - [`network_insights_access_scope(Option<NetworkInsightsAccessScope>)`](crate::operation::create_network_insights_access_scope::CreateNetworkInsightsAccessScopeOutput::network_insights_access_scope): <p>The Network Access Scope.</p>
    ///   - [`network_insights_access_scope_content(Option<NetworkInsightsAccessScopeContent>)`](crate::operation::create_network_insights_access_scope::CreateNetworkInsightsAccessScopeOutput::network_insights_access_scope_content): <p>The Network Access Scope content.</p>
    /// - On failure, responds with [`SdkError<CreateNetworkInsightsAccessScopeError>`](crate::operation::create_network_insights_access_scope::CreateNetworkInsightsAccessScopeError)
    pub fn create_network_insights_access_scope(&self) -> crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder{
        crate::operation::create_network_insights_access_scope::builders::CreateNetworkInsightsAccessScopeFluentBuilder::new(self.handle.clone())
    }
}
