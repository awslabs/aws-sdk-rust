// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeNetworkInsightsPaths`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_insights_path_ids(Vec<String>)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::network_insights_path_ids) / [`set_network_insights_path_ids(Option<Vec<String>>)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::set_network_insights_path_ids): <p>The IDs of the paths.</p>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::set_filters): <p>The filters. The following are the possible values:</p>  <ul>   <li> <p>destination - The ID of the resource.</p> </li>   <li> <p>destination-port - The destination port.</p> </li>   <li> <p>protocol - The protocol.</p> </li>   <li> <p>source - The ID of the resource.</p> </li>  </ul>
    ///   - [`max_results(i32)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`dry_run(bool)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::set_next_token): <p>The token for the next page of results.</p>
    /// - On success, responds with [`DescribeNetworkInsightsPathsOutput`](crate::operation::describe_network_insights_paths::DescribeNetworkInsightsPathsOutput) with field(s):
    ///   - [`network_insights_paths(Option<Vec<NetworkInsightsPath>>)`](crate::operation::describe_network_insights_paths::DescribeNetworkInsightsPathsOutput::network_insights_paths): <p>Information about the paths.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_network_insights_paths::DescribeNetworkInsightsPathsOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<DescribeNetworkInsightsPathsError>`](crate::operation::describe_network_insights_paths::DescribeNetworkInsightsPathsError)
    pub fn describe_network_insights_paths(&self) -> crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder{
        crate::operation::describe_network_insights_paths::builders::DescribeNetworkInsightsPathsFluentBuilder::new(self.handle.clone())
    }
}
