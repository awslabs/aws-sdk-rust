// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteCoipPool`](crate::client::fluent_builders::DeleteCoipPool) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`coip_pool_id(impl Into<String>)`](crate::client::fluent_builders::DeleteCoipPool::coip_pool_id) / [`set_coip_pool_id(Option<String>)`](crate::client::fluent_builders::DeleteCoipPool::set_coip_pool_id): <p>The ID of the CoIP pool that you want to delete. </p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DeleteCoipPool::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DeleteCoipPool::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DeleteCoipPoolOutput`](crate::output::DeleteCoipPoolOutput) with field(s):
    ///   - [`coip_pool(Option<CoipPool>)`](crate::output::DeleteCoipPoolOutput::coip_pool): <p>Information about the CoIP address pool.</p>
    /// - On failure, responds with [`SdkError<DeleteCoipPoolError>`](crate::error::DeleteCoipPoolError)
    pub fn delete_coip_pool(&self) -> crate::client::fluent_builders::DeleteCoipPool {
        crate::client::fluent_builders::DeleteCoipPool::new(self.handle.clone())
    }
}
