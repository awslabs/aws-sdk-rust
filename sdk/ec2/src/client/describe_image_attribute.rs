// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeImageAttribute`](crate::client::fluent_builders::DescribeImageAttribute) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`attribute(ImageAttributeName)`](crate::client::fluent_builders::DescribeImageAttribute::attribute) / [`set_attribute(Option<ImageAttributeName>)`](crate::client::fluent_builders::DescribeImageAttribute::set_attribute): <p>The AMI attribute.</p>  <p> <b>Note</b>: The <code>blockDeviceMapping</code> attribute is deprecated. Using this attribute returns the <code>Client.AuthFailure</code> error. To get information about the block device mappings for an AMI, use the <code>DescribeImages</code> action.</p>
    ///   - [`image_id(impl Into<String>)`](crate::client::fluent_builders::DescribeImageAttribute::image_id) / [`set_image_id(Option<String>)`](crate::client::fluent_builders::DescribeImageAttribute::set_image_id): <p>The ID of the AMI.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DescribeImageAttribute::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DescribeImageAttribute::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DescribeImageAttributeOutput`](crate::output::DescribeImageAttributeOutput) with field(s):
    ///   - [`block_device_mappings(Option<Vec<BlockDeviceMapping>>)`](crate::output::DescribeImageAttributeOutput::block_device_mappings): <p>The block device mapping entries.</p>
    ///   - [`image_id(Option<String>)`](crate::output::DescribeImageAttributeOutput::image_id): <p>The ID of the AMI.</p>
    ///   - [`launch_permissions(Option<Vec<LaunchPermission>>)`](crate::output::DescribeImageAttributeOutput::launch_permissions): <p>The launch permissions.</p>
    ///   - [`product_codes(Option<Vec<ProductCode>>)`](crate::output::DescribeImageAttributeOutput::product_codes): <p>The product codes.</p>
    ///   - [`description(Option<AttributeValue>)`](crate::output::DescribeImageAttributeOutput::description): <p>A description for the AMI.</p>
    ///   - [`kernel_id(Option<AttributeValue>)`](crate::output::DescribeImageAttributeOutput::kernel_id): <p>The kernel ID.</p>
    ///   - [`ramdisk_id(Option<AttributeValue>)`](crate::output::DescribeImageAttributeOutput::ramdisk_id): <p>The RAM disk ID.</p>
    ///   - [`sriov_net_support(Option<AttributeValue>)`](crate::output::DescribeImageAttributeOutput::sriov_net_support): <p>Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
    ///   - [`boot_mode(Option<AttributeValue>)`](crate::output::DescribeImageAttributeOutput::boot_mode): <p>The boot mode.</p>
    ///   - [`tpm_support(Option<AttributeValue>)`](crate::output::DescribeImageAttributeOutput::tpm_support): <p>If the image is configured for NitroTPM support, the value is <code>v2.0</code>.</p>
    ///   - [`uefi_data(Option<AttributeValue>)`](crate::output::DescribeImageAttributeOutput::uefi_data): <p>Base64 representation of the non-volatile UEFI variable store. To retrieve the UEFI data, use the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceUefiData">GetInstanceUefiData</a> command. You can inspect and modify the UEFI data by using the <a href="https://github.com/awslabs/python-uefivars">python-uefivars tool</a> on GitHub. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html">UEFI Secure Boot</a> in the <i>Amazon EC2 User Guide</i>.</p>
    ///   - [`last_launched_time(Option<AttributeValue>)`](crate::output::DescribeImageAttributeOutput::last_launched_time): <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported.</p> <note>   <p> <code>lastLaunchedTime</code> data is available starting April 2017.</p>  </note>
    ///   - [`imds_support(Option<AttributeValue>)`](crate::output::DescribeImageAttributeOutput::imds_support): <p>If <code>v2.0</code>, it indicates that IMDSv2 is specified in the AMI. Instances launched from this AMI will have <code>HttpTokens</code> automatically set to <code>required</code> so that, by default, the instance requires that IMDSv2 is used when requesting instance metadata. In addition, <code>HttpPutResponseHopLimit</code> is set to <code>2</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration">Configure the AMI</a> in the <i>Amazon EC2 User Guide</i>.</p>
    /// - On failure, responds with [`SdkError<DescribeImageAttributeError>`](crate::error::DescribeImageAttributeError)
    pub fn describe_image_attribute(
        &self,
    ) -> crate::client::fluent_builders::DescribeImageAttribute {
        crate::client::fluent_builders::DescribeImageAttribute::new(self.handle.clone())
    }
}
