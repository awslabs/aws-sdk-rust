// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportVolume`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`availability_zone(impl Into<String>)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::availability_zone) / [`set_availability_zone(Option<String>)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::set_availability_zone): <p>The Availability Zone for the resulting EBS volume.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::set_description): <p>A description of the volume.</p>
    ///   - [`dry_run(bool)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`image(DiskImageDetail)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::image) / [`set_image(Option<DiskImageDetail>)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::set_image): <p>The disk image.</p>
    ///   - [`volume(VolumeDetail)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::volume) / [`set_volume(Option<VolumeDetail>)`](crate::operation::import_volume::builders::ImportVolumeFluentBuilder::set_volume): <p>The volume size.</p>
    /// - On success, responds with [`ImportVolumeOutput`](crate::operation::import_volume::ImportVolumeOutput) with field(s):
    ///   - [`conversion_task(Option<ConversionTask>)`](crate::operation::import_volume::ImportVolumeOutput::conversion_task): <p>Information about the conversion task.</p>
    /// - On failure, responds with [`SdkError<ImportVolumeError>`](crate::operation::import_volume::ImportVolumeError)
    pub fn import_volume(
        &self,
    ) -> crate::operation::import_volume::builders::ImportVolumeFluentBuilder {
        crate::operation::import_volume::builders::ImportVolumeFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
