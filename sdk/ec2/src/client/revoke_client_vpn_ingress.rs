// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RevokeClientVpnIngress`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_vpn_endpoint_id(impl Into<String>)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::client_vpn_endpoint_id) / [`set_client_vpn_endpoint_id(Option<String>)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::set_client_vpn_endpoint_id):<br>required: **true**<br><p>The ID of the Client VPN endpoint with which the authorization rule is associated.</p><br>
    ///   - [`target_network_cidr(impl Into<String>)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::target_network_cidr) / [`set_target_network_cidr(Option<String>)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::set_target_network_cidr):<br>required: **true**<br><p>The IPv4 address range, in CIDR notation, of the network for which access is being removed.</p><br>
    ///   - [`access_group_id(impl Into<String>)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::access_group_id) / [`set_access_group_id(Option<String>)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::set_access_group_id):<br>required: **false**<br><p>The ID of the Active Directory group for which to revoke access. </p><br>
    ///   - [`revoke_all_groups(bool)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::revoke_all_groups) / [`set_revoke_all_groups(Option<bool>)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::set_revoke_all_groups):<br>required: **false**<br><p>Indicates whether access should be revoked for all clients.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`RevokeClientVpnIngressOutput`](crate::operation::revoke_client_vpn_ingress::RevokeClientVpnIngressOutput) with field(s):
    ///   - [`status(Option<ClientVpnAuthorizationRuleStatus>)`](crate::operation::revoke_client_vpn_ingress::RevokeClientVpnIngressOutput::status): <p>The current state of the authorization rule.</p>
    /// - On failure, responds with [`SdkError<RevokeClientVpnIngressError>`](crate::operation::revoke_client_vpn_ingress::RevokeClientVpnIngressError)
    pub fn revoke_client_vpn_ingress(&self) -> crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder {
        crate::operation::revoke_client_vpn_ingress::builders::RevokeClientVpnIngressFluentBuilder::new(self.handle.clone())
    }
}
