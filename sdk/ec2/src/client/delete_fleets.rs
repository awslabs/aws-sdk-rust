// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteFleets`](crate::operation::delete_fleets::builders::DeleteFleetsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::delete_fleets::builders::DeleteFleetsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::delete_fleets::builders::DeleteFleetsFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`fleet_ids(Vec<String>)`](crate::operation::delete_fleets::builders::DeleteFleetsFluentBuilder::fleet_ids) / [`set_fleet_ids(Option<Vec<String>>)`](crate::operation::delete_fleets::builders::DeleteFleetsFluentBuilder::set_fleet_ids): <p>The IDs of the EC2 Fleets.</p>
    ///   - [`terminate_instances(bool)`](crate::operation::delete_fleets::builders::DeleteFleetsFluentBuilder::terminate_instances) / [`set_terminate_instances(Option<bool>)`](crate::operation::delete_fleets::builders::DeleteFleetsFluentBuilder::set_terminate_instances): <p>Indicates whether to terminate the instances when the EC2 Fleet is deleted. The default is to terminate the instances.</p>  <p>To let the instances continue to run after the EC2 Fleet is deleted, specify <code>NoTerminateInstances</code>. Supported only for fleets of type <code>maintain</code> and <code>request</code>.</p>  <p>For <code>instant</code> fleets, you cannot specify <code>NoTerminateInstances</code>. A deleted <code>instant</code> fleet with running instances is not supported.</p>
    /// - On success, responds with [`DeleteFleetsOutput`](crate::operation::delete_fleets::DeleteFleetsOutput) with field(s):
    ///   - [`successful_fleet_deletions(Option<Vec<DeleteFleetSuccessItem>>)`](crate::operation::delete_fleets::DeleteFleetsOutput::successful_fleet_deletions): <p>Information about the EC2 Fleets that are successfully deleted.</p>
    ///   - [`unsuccessful_fleet_deletions(Option<Vec<DeleteFleetErrorItem>>)`](crate::operation::delete_fleets::DeleteFleetsOutput::unsuccessful_fleet_deletions): <p>Information about the EC2 Fleets that are not successfully deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteFleetsError>`](crate::operation::delete_fleets::DeleteFleetsError)
    pub fn delete_fleets(
        &self,
    ) -> crate::operation::delete_fleets::builders::DeleteFleetsFluentBuilder {
        crate::operation::delete_fleets::builders::DeleteFleetsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
