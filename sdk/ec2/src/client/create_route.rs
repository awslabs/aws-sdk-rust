// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRoute`](crate::client::fluent_builders::CreateRoute) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`destination_cidr_block(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::destination_cidr_block) / [`set_destination_cidr_block(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_destination_cidr_block): <p>The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.</p>
    ///   - [`destination_ipv6_cidr_block(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::destination_ipv6_cidr_block) / [`set_destination_ipv6_cidr_block(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_destination_ipv6_cidr_block): <p>The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.</p>
    ///   - [`destination_prefix_list_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::destination_prefix_list_id) / [`set_destination_prefix_list_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_destination_prefix_list_id): <p>The ID of a prefix list used for the destination match.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::CreateRoute::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::CreateRoute::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`vpc_endpoint_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::vpc_endpoint_id) / [`set_vpc_endpoint_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_vpc_endpoint_id): <p>The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.</p>
    ///   - [`egress_only_internet_gateway_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::egress_only_internet_gateway_id) / [`set_egress_only_internet_gateway_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_egress_only_internet_gateway_id): <p>[IPv6 traffic only] The ID of an egress-only internet gateway.</p>
    ///   - [`gateway_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::gateway_id) / [`set_gateway_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_gateway_id): <p>The ID of an internet gateway or virtual private gateway attached to your VPC.</p>
    ///   - [`instance_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::instance_id) / [`set_instance_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_instance_id): <p>The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.</p>
    ///   - [`nat_gateway_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::nat_gateway_id) / [`set_nat_gateway_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_nat_gateway_id): <p>[IPv4 traffic only] The ID of a NAT gateway.</p>
    ///   - [`transit_gateway_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::transit_gateway_id) / [`set_transit_gateway_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_transit_gateway_id): <p>The ID of a transit gateway.</p>
    ///   - [`local_gateway_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::local_gateway_id) / [`set_local_gateway_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_local_gateway_id): <p>The ID of the local gateway.</p>
    ///   - [`carrier_gateway_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::carrier_gateway_id) / [`set_carrier_gateway_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_carrier_gateway_id): <p>The ID of the carrier gateway.</p>  <p>You can only use this option when the VPC contains a subnet which is associated with a Wavelength Zone.</p>
    ///   - [`network_interface_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::network_interface_id) / [`set_network_interface_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_network_interface_id): <p>The ID of a network interface.</p>
    ///   - [`route_table_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::route_table_id) / [`set_route_table_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_route_table_id): <p>The ID of the route table for the route.</p>
    ///   - [`vpc_peering_connection_id(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::vpc_peering_connection_id) / [`set_vpc_peering_connection_id(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_vpc_peering_connection_id): <p>The ID of a VPC peering connection.</p>
    ///   - [`core_network_arn(impl Into<String>)`](crate::client::fluent_builders::CreateRoute::core_network_arn) / [`set_core_network_arn(Option<String>)`](crate::client::fluent_builders::CreateRoute::set_core_network_arn): <p>The Amazon Resource Name (ARN) of the core network.</p>
    /// - On success, responds with [`CreateRouteOutput`](crate::output::CreateRouteOutput) with field(s):
    ///   - [`r#return(Option<bool>)`](crate::output::CreateRouteOutput::return): <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    /// - On failure, responds with [`SdkError<CreateRouteError>`](crate::error::CreateRouteError)
    pub fn create_route(&self) -> crate::client::fluent_builders::CreateRoute {
        crate::client::fluent_builders::CreateRoute::new(self.handle.clone())
    }
}
