// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportInstance`](crate::client::fluent_builders::ImportInstance) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::ImportInstance::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::ImportInstance::set_description): <p>A description for the instance being imported.</p>
    ///   - [`disk_images(Vec<DiskImage>)`](crate::client::fluent_builders::ImportInstance::disk_images) / [`set_disk_images(Option<Vec<DiskImage>>)`](crate::client::fluent_builders::ImportInstance::set_disk_images): <p>The disk image.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ImportInstance::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ImportInstance::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`launch_specification(ImportInstanceLaunchSpecification)`](crate::client::fluent_builders::ImportInstance::launch_specification) / [`set_launch_specification(Option<ImportInstanceLaunchSpecification>)`](crate::client::fluent_builders::ImportInstance::set_launch_specification): <p>The launch specification.</p>
    ///   - [`platform(PlatformValues)`](crate::client::fluent_builders::ImportInstance::platform) / [`set_platform(Option<PlatformValues>)`](crate::client::fluent_builders::ImportInstance::set_platform): <p>The instance operating system.</p>
    /// - On success, responds with [`ImportInstanceOutput`](crate::output::ImportInstanceOutput) with field(s):
    ///   - [`conversion_task(Option<ConversionTask>)`](crate::output::ImportInstanceOutput::conversion_task): <p>Information about the conversion task.</p>
    /// - On failure, responds with [`SdkError<ImportInstanceError>`](crate::error::ImportInstanceError)
    pub fn import_instance(&self) -> crate::client::fluent_builders::ImportInstance {
        crate::client::fluent_builders::ImportInstance::new(self.handle.clone())
    }
}
