// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisableCapacityManager`](crate::operation::disable_capacity_manager::builders::DisableCapacityManagerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::disable_capacity_manager::builders::DisableCapacityManagerFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::disable_capacity_manager::builders::DisableCapacityManagerFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::disable_capacity_manager::builders::DisableCapacityManagerFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::disable_capacity_manager::builders::DisableCapacityManagerFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p><br>
    /// - On success, responds with [`DisableCapacityManagerOutput`](crate::operation::disable_capacity_manager::DisableCapacityManagerOutput) with field(s):
    ///   - [`capacity_manager_status(Option<CapacityManagerStatus>)`](crate::operation::disable_capacity_manager::DisableCapacityManagerOutput::capacity_manager_status): <p>The current status of Capacity Manager after the disable operation.</p>
    ///   - [`organizations_access(Option<bool>)`](crate::operation::disable_capacity_manager::DisableCapacityManagerOutput::organizations_access): <p>Indicates whether Organizations access is enabled. This will be <code>false</code> after disabling Capacity Manager.</p>
    /// - On failure, responds with [`SdkError<DisableCapacityManagerError>`](crate::operation::disable_capacity_manager::DisableCapacityManagerError)
    pub fn disable_capacity_manager(&self) -> crate::operation::disable_capacity_manager::builders::DisableCapacityManagerFluentBuilder {
        crate::operation::disable_capacity_manager::builders::DisableCapacityManagerFluentBuilder::new(self.handle.clone())
    }
}
