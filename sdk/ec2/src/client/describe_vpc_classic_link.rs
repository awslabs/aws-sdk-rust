// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeVpcClassicLink`](crate::client::fluent_builders::DescribeVpcClassicLink) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::DescribeVpcClassicLink::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::DescribeVpcClassicLink::set_filters): <p>One or more filters.</p>  <ul>   <li> <p> <code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink (<code>true</code> | <code>false</code>).</p> </li>   <li> <p> <code>tag</code>:<key>      - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key      <code>Owner</code> and the value      <code>TeamA</code>, specify      <code>tag:Owner</code> for the filter name and      <code>TeamA</code> for the filter value.    </key></p> </li>   <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li>  </ul>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DescribeVpcClassicLink::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DescribeVpcClassicLink::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`vpc_ids(Vec<String>)`](crate::client::fluent_builders::DescribeVpcClassicLink::vpc_ids) / [`set_vpc_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeVpcClassicLink::set_vpc_ids): <p>One or more VPCs for which you want to describe the ClassicLink status.</p>
    /// - On success, responds with [`DescribeVpcClassicLinkOutput`](crate::output::DescribeVpcClassicLinkOutput) with field(s):
    ///   - [`vpcs(Option<Vec<VpcClassicLink>>)`](crate::output::DescribeVpcClassicLinkOutput::vpcs): <p>The ClassicLink status of one or more VPCs.</p>
    /// - On failure, responds with [`SdkError<DescribeVpcClassicLinkError>`](crate::error::DescribeVpcClassicLinkError)
    pub fn describe_vpc_classic_link(
        &self,
    ) -> crate::client::fluent_builders::DescribeVpcClassicLink {
        crate::client::fluent_builders::DescribeVpcClassicLink::new(self.handle.clone())
    }
}
