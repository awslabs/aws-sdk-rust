// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterTransitGatewayMulticastGroupSources`](crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`transit_gateway_multicast_domain_id(impl Into<String>)`](crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources::transit_gateway_multicast_domain_id) / [`set_transit_gateway_multicast_domain_id(Option<String>)`](crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources::set_transit_gateway_multicast_domain_id): <p>The ID of the transit gateway multicast domain.</p>
    ///   - [`group_ip_address(impl Into<String>)`](crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources::group_ip_address) / [`set_group_ip_address(Option<String>)`](crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources::set_group_ip_address): <p>The IP address assigned to the transit gateway multicast group.</p>
    ///   - [`network_interface_ids(Vec<String>)`](crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources::network_interface_ids) / [`set_network_interface_ids(Option<Vec<String>>)`](crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources::set_network_interface_ids): <p>The group sources' network interface IDs to register with the transit gateway multicast group.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`RegisterTransitGatewayMulticastGroupSourcesOutput`](crate::output::RegisterTransitGatewayMulticastGroupSourcesOutput) with field(s):
    ///   - [`registered_multicast_group_sources(Option<TransitGatewayMulticastRegisteredGroupSources>)`](crate::output::RegisterTransitGatewayMulticastGroupSourcesOutput::registered_multicast_group_sources): <p>Information about the transit gateway multicast group sources.</p>
    /// - On failure, responds with [`SdkError<RegisterTransitGatewayMulticastGroupSourcesError>`](crate::error::RegisterTransitGatewayMulticastGroupSourcesError)
    pub fn register_transit_gateway_multicast_group_sources(
        &self,
    ) -> crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources {
        crate::client::fluent_builders::RegisterTransitGatewayMulticastGroupSources::new(
            self.handle.clone(),
        )
    }
}
