// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartNetworkInsightsAccessScopeAnalysis`](crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_insights_access_scope_id(impl Into<String>)`](crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder::network_insights_access_scope_id) / [`set_network_insights_access_scope_id(Option<String>)`](crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder::set_network_insights_access_scope_id):<br>required: **true**<br><p>The ID of the Network Access Scope.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to apply.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder::set_client_token):<br>required: **true**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p><br>
    /// - On success, responds with [`StartNetworkInsightsAccessScopeAnalysisOutput`](crate::operation::start_network_insights_access_scope_analysis::StartNetworkInsightsAccessScopeAnalysisOutput) with field(s):
    ///   - [`network_insights_access_scope_analysis(Option<NetworkInsightsAccessScopeAnalysis>)`](crate::operation::start_network_insights_access_scope_analysis::StartNetworkInsightsAccessScopeAnalysisOutput::network_insights_access_scope_analysis): <p>The Network Access Scope analysis.</p>
    /// - On failure, responds with [`SdkError<StartNetworkInsightsAccessScopeAnalysisError>`](crate::operation::start_network_insights_access_scope_analysis::StartNetworkInsightsAccessScopeAnalysisError)
    pub fn start_network_insights_access_scope_analysis(
        &self,
    ) -> crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder {
        crate::operation::start_network_insights_access_scope_analysis::builders::StartNetworkInsightsAccessScopeAnalysisFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
