// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCapacityManagerDataExport`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`s3_bucket_name(impl Into<String>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::s3_bucket_name) / [`set_s3_bucket_name(Option<String>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::set_s3_bucket_name):<br>required: **true**<br><p>The name of the S3 bucket where the capacity data export files will be delivered. The bucket must exist and you must have write permissions to it.</p><br>
    ///   - [`s3_bucket_prefix(impl Into<String>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::s3_bucket_prefix) / [`set_s3_bucket_prefix(Option<String>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::set_s3_bucket_prefix):<br>required: **false**<br><p>The S3 key prefix for the exported data files. This allows you to organize exports in a specific folder structure within your bucket. If not specified, files are placed at the bucket root.</p><br>
    ///   - [`schedule(Schedule)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::schedule) / [`set_schedule(Option<Schedule>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::set_schedule):<br>required: **true**<br><p>The frequency at which data exports are generated.</p><br>
    ///   - [`output_format(OutputFormat)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::output_format) / [`set_output_format(Option<OutputFormat>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::set_output_format):<br>required: **true**<br><p>The file format for the exported data. Parquet format is recommended for large datasets and better compression.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see Ensure Idempotency.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to apply to the data export configuration. You can tag the export for organization and cost tracking purposes.</p><br>
    /// - On success, responds with [`CreateCapacityManagerDataExportOutput`](crate::operation::create_capacity_manager_data_export::CreateCapacityManagerDataExportOutput) with field(s):
    ///   - [`capacity_manager_data_export_id(Option<String>)`](crate::operation::create_capacity_manager_data_export::CreateCapacityManagerDataExportOutput::capacity_manager_data_export_id): <p>The unique identifier for the created data export configuration. Use this ID to reference the export in other API calls.</p>
    /// - On failure, responds with [`SdkError<CreateCapacityManagerDataExportError>`](crate::operation::create_capacity_manager_data_export::CreateCapacityManagerDataExportError)
    pub fn create_capacity_manager_data_export(
        &self,
    ) -> crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder {
        crate::operation::create_capacity_manager_data_export::builders::CreateCapacityManagerDataExportFluentBuilder::new(self.handle.clone())
    }
}
