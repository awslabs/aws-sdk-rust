// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateNetworkInterface`](crate::client::fluent_builders::CreateNetworkInterface) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkInterface::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateNetworkInterface::set_description): <p>A description for the network interface.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::CreateNetworkInterface::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::CreateNetworkInterface::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`groups(Vec<String>)`](crate::client::fluent_builders::CreateNetworkInterface::groups) / [`set_groups(Option<Vec<String>>)`](crate::client::fluent_builders::CreateNetworkInterface::set_groups): <p>The IDs of one or more security groups.</p>
    ///   - [`ipv6_address_count(i32)`](crate::client::fluent_builders::CreateNetworkInterface::ipv6_address_count) / [`set_ipv6_address_count(Option<i32>)`](crate::client::fluent_builders::CreateNetworkInterface::set_ipv6_address_count): <p>The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range.</p>  <p>You can't specify a count of IPv6 addresses using this parameter if you've specified one of the following: specific IPv6 addresses, specific IPv6 prefixes, or a count of IPv6 prefixes.</p>  <p>If your subnet has the <code>AssignIpv6AddressOnCreation</code> attribute set, you can override that setting by specifying 0 as the IPv6 address count.</p>
    ///   - [`ipv6_addresses(Vec<InstanceIpv6Address>)`](crate::client::fluent_builders::CreateNetworkInterface::ipv6_addresses) / [`set_ipv6_addresses(Option<Vec<InstanceIpv6Address>>)`](crate::client::fluent_builders::CreateNetworkInterface::set_ipv6_addresses): <p>The IPv6 addresses from the IPv6 CIDR block range of your subnet.</p>  <p>You can't specify IPv6 addresses using this parameter if you've specified one of the following: a count of IPv6 addresses, specific IPv6 prefixes, or a count of IPv6 prefixes.</p>
    ///   - [`private_ip_address(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkInterface::private_ip_address) / [`set_private_ip_address(Option<String>)`](crate::client::fluent_builders::CreateNetworkInterface::set_private_ip_address): <p>The primary private IPv4 address of the network interface. If you don't specify an IPv4 address, Amazon EC2 selects one for you from the subnet's IPv4 CIDR range. If you specify an IP address, you cannot indicate any IP addresses specified in <code>privateIpAddresses</code> as primary (only one IP address can be designated as primary).</p>
    ///   - [`private_ip_addresses(Vec<PrivateIpAddressSpecification>)`](crate::client::fluent_builders::CreateNetworkInterface::private_ip_addresses) / [`set_private_ip_addresses(Option<Vec<PrivateIpAddressSpecification>>)`](crate::client::fluent_builders::CreateNetworkInterface::set_private_ip_addresses): <p>The private IPv4 addresses.</p>  <p>You can't specify private IPv4 addresses if you've specified one of the following: a count of private IPv4 addresses, specific IPv4 prefixes, or a count of IPv4 prefixes.</p>
    ///   - [`secondary_private_ip_address_count(i32)`](crate::client::fluent_builders::CreateNetworkInterface::secondary_private_ip_address_count) / [`set_secondary_private_ip_address_count(Option<i32>)`](crate::client::fluent_builders::CreateNetworkInterface::set_secondary_private_ip_address_count): <p>The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using <code>privateIpAddresses</code>.</p>  <p>You can't specify a count of private IPv4 addresses if you've specified one of the following: specific private IPv4 addresses, specific IPv4 prefixes, or a count of IPv4 prefixes.</p>
    ///   - [`ipv4_prefixes(Vec<Ipv4PrefixSpecificationRequest>)`](crate::client::fluent_builders::CreateNetworkInterface::ipv4_prefixes) / [`set_ipv4_prefixes(Option<Vec<Ipv4PrefixSpecificationRequest>>)`](crate::client::fluent_builders::CreateNetworkInterface::set_ipv4_prefixes): <p>The IPv4 prefixes assigned to the network interface.</p>  <p>You can't specify IPv4 prefixes if you've specified one of the following: a count of IPv4 prefixes, specific private IPv4 addresses, or a count of private IPv4 addresses.</p>
    ///   - [`ipv4_prefix_count(i32)`](crate::client::fluent_builders::CreateNetworkInterface::ipv4_prefix_count) / [`set_ipv4_prefix_count(Option<i32>)`](crate::client::fluent_builders::CreateNetworkInterface::set_ipv4_prefix_count): <p>The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface.</p>  <p>You can't specify a count of IPv4 prefixes if you've specified one of the following: specific IPv4 prefixes, specific private IPv4 addresses, or a count of private IPv4 addresses.</p>
    ///   - [`ipv6_prefixes(Vec<Ipv6PrefixSpecificationRequest>)`](crate::client::fluent_builders::CreateNetworkInterface::ipv6_prefixes) / [`set_ipv6_prefixes(Option<Vec<Ipv6PrefixSpecificationRequest>>)`](crate::client::fluent_builders::CreateNetworkInterface::set_ipv6_prefixes): <p>The IPv6 prefixes assigned to the network interface.</p>  <p>You can't specify IPv6 prefixes if you've specified one of the following: a count of IPv6 prefixes, specific IPv6 addresses, or a count of IPv6 addresses.</p>
    ///   - [`ipv6_prefix_count(i32)`](crate::client::fluent_builders::CreateNetworkInterface::ipv6_prefix_count) / [`set_ipv6_prefix_count(Option<i32>)`](crate::client::fluent_builders::CreateNetworkInterface::set_ipv6_prefix_count): <p>The number of IPv6 prefixes that Amazon Web Services automatically assigns to the network interface.</p>  <p>You can't specify a count of IPv6 prefixes if you've specified one of the following: specific IPv6 prefixes, specific IPv6 addresses, or a count of IPv6 addresses.</p>
    ///   - [`interface_type(NetworkInterfaceCreationType)`](crate::client::fluent_builders::CreateNetworkInterface::interface_type) / [`set_interface_type(Option<NetworkInterfaceCreationType>)`](crate::client::fluent_builders::CreateNetworkInterface::set_interface_type): <p>The type of network interface. The default is <code>interface</code>.</p>  <p>The only supported values are <code>efa</code> and <code>trunk</code>.</p>
    ///   - [`subnet_id(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkInterface::subnet_id) / [`set_subnet_id(Option<String>)`](crate::client::fluent_builders::CreateNetworkInterface::set_subnet_id): <p>The ID of the subnet to associate with the network interface.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::client::fluent_builders::CreateNetworkInterface::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::client::fluent_builders::CreateNetworkInterface::set_tag_specifications): <p>The tags to apply to the new network interface.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkInterface::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateNetworkInterface::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    /// - On success, responds with [`CreateNetworkInterfaceOutput`](crate::output::CreateNetworkInterfaceOutput) with field(s):
    ///   - [`network_interface(Option<NetworkInterface>)`](crate::output::CreateNetworkInterfaceOutput::network_interface): <p>Information about the network interface.</p>
    ///   - [`client_token(Option<String>)`](crate::output::CreateNetworkInterfaceOutput::client_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<CreateNetworkInterfaceError>`](crate::error::CreateNetworkInterfaceError)
    pub fn create_network_interface(
        &self,
    ) -> crate::client::fluent_builders::CreateNetworkInterface {
        crate::client::fluent_builders::CreateNetworkInterface::new(self.handle.clone())
    }
}
