// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetInstanceTypesFromInstanceRequirements`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`architecture_types(Vec<ArchitectureType>)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::architecture_types) / [`set_architecture_types(Option<Vec<ArchitectureType>>)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::set_architecture_types): <p>The processor architecture type.</p>
    ///   - [`virtualization_types(Vec<VirtualizationType>)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::virtualization_types) / [`set_virtualization_types(Option<Vec<VirtualizationType>>)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::set_virtualization_types): <p>The virtualization type.</p>
    ///   - [`instance_requirements(InstanceRequirementsRequest)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::instance_requirements) / [`set_instance_requirements(Option<InstanceRequirementsRequest>)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::set_instance_requirements): <p>The attributes required for the instance types.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::set_max_results): <p>The maximum number of results to return in a single call. Specify a value between 1 and  1000. The default value is 1000. To retrieve the remaining results, make another call with  the returned <code>NextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::set_next_token): <p>The token for the next set of results.</p>
    /// - On success, responds with [`GetInstanceTypesFromInstanceRequirementsOutput`](crate::output::GetInstanceTypesFromInstanceRequirementsOutput) with field(s):
    ///   - [`instance_types(Option<Vec<InstanceTypeInfoFromInstanceRequirements>>)`](crate::output::GetInstanceTypesFromInstanceRequirementsOutput::instance_types): <p>The instance types with the specified instance attributes.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetInstanceTypesFromInstanceRequirementsOutput::next_token): <p>The token for the next set of results.</p>
    /// - On failure, responds with [`SdkError<GetInstanceTypesFromInstanceRequirementsError>`](crate::error::GetInstanceTypesFromInstanceRequirementsError)
    pub fn get_instance_types_from_instance_requirements(
        &self,
    ) -> crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements {
        crate::client::fluent_builders::GetInstanceTypesFromInstanceRequirements::new(
            self.handle.clone(),
        )
    }
}
