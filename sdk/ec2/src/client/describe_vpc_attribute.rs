// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeVpcAttribute`](crate::client::fluent_builders::DescribeVpcAttribute) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`attribute(VpcAttributeName)`](crate::client::fluent_builders::DescribeVpcAttribute::attribute) / [`set_attribute(Option<VpcAttributeName>)`](crate::client::fluent_builders::DescribeVpcAttribute::set_attribute): <p>The VPC attribute.</p>
    ///   - [`vpc_id(impl Into<String>)`](crate::client::fluent_builders::DescribeVpcAttribute::vpc_id) / [`set_vpc_id(Option<String>)`](crate::client::fluent_builders::DescribeVpcAttribute::set_vpc_id): <p>The ID of the VPC.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DescribeVpcAttribute::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DescribeVpcAttribute::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DescribeVpcAttributeOutput`](crate::output::DescribeVpcAttributeOutput) with field(s):
    ///   - [`vpc_id(Option<String>)`](crate::output::DescribeVpcAttributeOutput::vpc_id): <p>The ID of the VPC.</p>
    ///   - [`enable_dns_hostnames(Option<AttributeBooleanValue>)`](crate::output::DescribeVpcAttributeOutput::enable_dns_hostnames): <p>Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not.</p>
    ///   - [`enable_dns_support(Option<AttributeBooleanValue>)`](crate::output::DescribeVpcAttributeOutput::enable_dns_support): <p>Indicates whether DNS resolution is enabled for the VPC. If this attribute is <code>true</code>, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.</p>
    ///   - [`enable_network_address_usage_metrics(Option<AttributeBooleanValue>)`](crate::output::DescribeVpcAttributeOutput::enable_network_address_usage_metrics): <p>Indicates whether Network Address Usage metrics are enabled for your VPC.</p>
    /// - On failure, responds with [`SdkError<DescribeVpcAttributeError>`](crate::error::DescribeVpcAttributeError)
    pub fn describe_vpc_attribute(&self) -> crate::client::fluent_builders::DescribeVpcAttribute {
        crate::client::fluent_builders::DescribeVpcAttribute::new(self.handle.clone())
    }
}
