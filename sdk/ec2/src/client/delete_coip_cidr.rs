// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteCoipCidr`](crate::operation::delete_coip_cidr::builders::DeleteCoipCidrFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cidr(impl Into<String>)`](crate::operation::delete_coip_cidr::builders::DeleteCoipCidrFluentBuilder::cidr) / [`set_cidr(Option<String>)`](crate::operation::delete_coip_cidr::builders::DeleteCoipCidrFluentBuilder::set_cidr): <p> A customer-owned IP address range that you want to delete. </p>
    ///   - [`coip_pool_id(impl Into<String>)`](crate::operation::delete_coip_cidr::builders::DeleteCoipCidrFluentBuilder::coip_pool_id) / [`set_coip_pool_id(Option<String>)`](crate::operation::delete_coip_cidr::builders::DeleteCoipCidrFluentBuilder::set_coip_pool_id): <p> The ID of the customer-owned address pool. </p>
    ///   - [`dry_run(bool)`](crate::operation::delete_coip_cidr::builders::DeleteCoipCidrFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::delete_coip_cidr::builders::DeleteCoipCidrFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DeleteCoipCidrOutput`](crate::operation::delete_coip_cidr::DeleteCoipCidrOutput) with field(s):
    ///   - [`coip_cidr(Option<CoipCidr>)`](crate::operation::delete_coip_cidr::DeleteCoipCidrOutput::coip_cidr): <p> Information about a range of customer-owned IP addresses. </p>
    /// - On failure, responds with [`SdkError<DeleteCoipCidrError>`](crate::operation::delete_coip_cidr::DeleteCoipCidrError)
    pub fn delete_coip_cidr(
        &self,
    ) -> crate::operation::delete_coip_cidr::builders::DeleteCoipCidrFluentBuilder {
        crate::operation::delete_coip_cidr::builders::DeleteCoipCidrFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
