// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RevokeSecurityGroupIngress`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cidr_ip(impl Into<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::cidr_ip) / [`set_cidr_ip(Option<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_cidr_ip):<br>required: **false**<br><p>The CIDR IP address range. You can't specify this parameter when specifying a source security group.</p><br>
    ///   - [`from_port(i32)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::from_port) / [`set_from_port(Option<i32>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_from_port):<br>required: **false**<br><p>If the protocol is TCP or UDP, this is the start of the port range. If the protocol is ICMP, this is the type number. A value of -1 indicates all ICMP types.</p><br>
    ///   - [`group_id(impl Into<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::group_id) / [`set_group_id(Option<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_group_id):<br>required: **false**<br><p>The ID of the security group.</p><br>
    ///   - [`group_name(impl Into<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::group_name) / [`set_group_name(Option<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_group_name):<br>required: **false**<br><p>[Default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.</p><br>
    ///   - [`ip_permissions(IpPermission)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::ip_permissions) / [`set_ip_permissions(Option<Vec::<IpPermission>>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_ip_permissions):<br>required: **false**<br><p>The sets of IP permissions. You can't specify a source security group and a CIDR IP address range in the same set of permissions.</p><br>
    ///   - [`ip_protocol(impl Into<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::ip_protocol) / [`set_ip_protocol(Option<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_ip_protocol):<br>required: **false**<br><p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). Use <code>-1</code> to specify all.</p><br>
    ///   - [`source_security_group_name(impl Into<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::source_security_group_name) / [`set_source_security_group_name(Option<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_source_security_group_name):<br>required: **false**<br><p>[Default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. The source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.</p><br>
    ///   - [`source_security_group_owner_id(impl Into<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::source_security_group_owner_id) / [`set_source_security_group_owner_id(Option<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_source_security_group_owner_id):<br>required: **false**<br><p>Not supported.</p><br>
    ///   - [`to_port(i32)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::to_port) / [`set_to_port(Option<i32>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_to_port):<br>required: **false**<br><p>If the protocol is TCP or UDP, this is the end of the port range. If the protocol is ICMP, this is the code. A value of -1 indicates all ICMP codes.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`security_group_rule_ids(impl Into<String>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::security_group_rule_ids) / [`set_security_group_rule_ids(Option<Vec::<String>>)`](crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::set_security_group_rule_ids):<br>required: **false**<br><p>The IDs of the security group rules.</p><br>
    /// - On success, responds with [`RevokeSecurityGroupIngressOutput`](crate::operation::revoke_security_group_ingress::RevokeSecurityGroupIngressOutput) with field(s):
    ///   - [`r#return(Option<bool>)`](crate::operation::revoke_security_group_ingress::RevokeSecurityGroupIngressOutput::return): <p>Returns <code>true</code> if the request succeeds; otherwise, returns an error.</p>
    ///   - [`unknown_ip_permissions(Option<Vec::<IpPermission>>)`](crate::operation::revoke_security_group_ingress::RevokeSecurityGroupIngressOutput::unknown_ip_permissions): <p>The inbound rules that were unknown to the service. In some cases, <code>unknownIpPermissionSet</code> might be in a different format from the request parameter. </p>
    /// - On failure, responds with [`SdkError<RevokeSecurityGroupIngressError>`](crate::operation::revoke_security_group_ingress::RevokeSecurityGroupIngressError)
    pub fn revoke_security_group_ingress(
        &self,
    ) -> crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder {
        crate::operation::revoke_security_group_ingress::builders::RevokeSecurityGroupIngressFluentBuilder::new(self.handle.clone())
    }
}
