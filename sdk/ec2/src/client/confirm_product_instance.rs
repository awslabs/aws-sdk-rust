// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ConfirmProductInstance`](crate::client::fluent_builders::ConfirmProductInstance) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::client::fluent_builders::ConfirmProductInstance::instance_id) / [`set_instance_id(Option<String>)`](crate::client::fluent_builders::ConfirmProductInstance::set_instance_id): <p>The ID of the instance.</p>
    ///   - [`product_code(impl Into<String>)`](crate::client::fluent_builders::ConfirmProductInstance::product_code) / [`set_product_code(Option<String>)`](crate::client::fluent_builders::ConfirmProductInstance::set_product_code): <p>The product code. This must be a product code that you own.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ConfirmProductInstance::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ConfirmProductInstance::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`ConfirmProductInstanceOutput`](crate::output::ConfirmProductInstanceOutput) with field(s):
    ///   - [`owner_id(Option<String>)`](crate::output::ConfirmProductInstanceOutput::owner_id): <p>The Amazon Web Services account ID of the instance owner. This is only present if the product code is attached to the instance.</p>
    ///   - [`r#return(Option<bool>)`](crate::output::ConfirmProductInstanceOutput::return): <p>The return value of the request. Returns <code>true</code> if the specified product code is owned by the requester and associated with the specified instance.</p>
    /// - On failure, responds with [`SdkError<ConfirmProductInstanceError>`](crate::error::ConfirmProductInstanceError)
    pub fn confirm_product_instance(
        &self,
    ) -> crate::client::fluent_builders::ConfirmProductInstance {
        crate::client::fluent_builders::ConfirmProductInstance::new(self.handle.clone())
    }
}
