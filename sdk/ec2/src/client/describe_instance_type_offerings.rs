// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeInstanceTypeOfferings`](crate::client::fluent_builders::DescribeInstanceTypeOfferings) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`location_type(LocationType)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::location_type) / [`set_location_type(Option<LocationType>)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::set_location_type): <p>The location type.</p>
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::set_filters): <p>One or more filters. Filter names and values are case-sensitive.</p>  <ul>   <li> <p> <code>location</code> - This depends on the location type. For example, if the location type is <code>region</code> (default), the location is the Region code (for example, <code>us-east-2</code>.)</p> </li>   <li> <p> <code>instance-type</code> - The instance type. For example, <code>c5.2xlarge</code>.</p> </li>  </ul>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::set_max_results): <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeInstanceTypeOfferings::set_next_token): <p>The token to retrieve the next page of results.</p>
    /// - On success, responds with [`DescribeInstanceTypeOfferingsOutput`](crate::output::DescribeInstanceTypeOfferingsOutput) with field(s):
    ///   - [`instance_type_offerings(Option<Vec<InstanceTypeOffering>>)`](crate::output::DescribeInstanceTypeOfferingsOutput::instance_type_offerings): <p>The instance types offered.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeInstanceTypeOfferingsOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<DescribeInstanceTypeOfferingsError>`](crate::error::DescribeInstanceTypeOfferingsError)
    pub fn describe_instance_type_offerings(
        &self,
    ) -> crate::client::fluent_builders::DescribeInstanceTypeOfferings {
        crate::client::fluent_builders::DescribeInstanceTypeOfferings::new(self.handle.clone())
    }
}
