// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StopInstances`](crate::operation::stop_instances::builders::StopInstancesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_ids(Vec<String>)`](crate::operation::stop_instances::builders::StopInstancesFluentBuilder::instance_ids) / [`set_instance_ids(Option<Vec<String>>)`](crate::operation::stop_instances::builders::StopInstancesFluentBuilder::set_instance_ids): <p>The IDs of the instances.</p>
    ///   - [`hibernate(bool)`](crate::operation::stop_instances::builders::StopInstancesFluentBuilder::hibernate) / [`set_hibernate(Option<bool>)`](crate::operation::stop_instances::builders::StopInstancesFluentBuilder::set_hibernate): <p>Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p>  <p> Default: <code>false</code> </p>
    ///   - [`dry_run(bool)`](crate::operation::stop_instances::builders::StopInstancesFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::stop_instances::builders::StopInstancesFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`force(bool)`](crate::operation::stop_instances::builders::StopInstancesFluentBuilder::force) / [`set_force(Option<bool>)`](crate::operation::stop_instances::builders::StopInstancesFluentBuilder::set_force): <p>Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.</p>  <p>Default: <code>false</code> </p>
    /// - On success, responds with [`StopInstancesOutput`](crate::operation::stop_instances::StopInstancesOutput) with field(s):
    ///   - [`stopping_instances(Option<Vec<InstanceStateChange>>)`](crate::operation::stop_instances::StopInstancesOutput::stopping_instances): <p>Information about the stopped instances.</p>
    /// - On failure, responds with [`SdkError<StopInstancesError>`](crate::operation::stop_instances::StopInstancesError)
    pub fn stop_instances(
        &self,
    ) -> crate::operation::stop_instances::builders::StopInstancesFluentBuilder {
        crate::operation::stop_instances::builders::StopInstancesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
