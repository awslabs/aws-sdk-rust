// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`TerminateClientVpnConnections`](crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_vpn_endpoint_id(impl Into<String>)`](crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder::client_vpn_endpoint_id) / [`set_client_vpn_endpoint_id(Option<String>)`](crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder::set_client_vpn_endpoint_id): <p>The ID of the Client VPN endpoint to which the client is connected.</p>
    ///   - [`connection_id(impl Into<String>)`](crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder::connection_id) / [`set_connection_id(Option<String>)`](crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder::set_connection_id): <p>The ID of the client connection to be terminated.</p>
    ///   - [`username(impl Into<String>)`](crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder::set_username): <p>The name of the user who initiated the connection. Use this option to terminate all active connections for the specified user. This option can only be used if the user has established up to five connections.</p>
    ///   - [`dry_run(bool)`](crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`TerminateClientVpnConnectionsOutput`](crate::operation::terminate_client_vpn_connections::TerminateClientVpnConnectionsOutput) with field(s):
    ///   - [`client_vpn_endpoint_id(Option<String>)`](crate::operation::terminate_client_vpn_connections::TerminateClientVpnConnectionsOutput::client_vpn_endpoint_id): <p>The ID of the Client VPN endpoint.</p>
    ///   - [`username(Option<String>)`](crate::operation::terminate_client_vpn_connections::TerminateClientVpnConnectionsOutput::username): <p>The user who established the terminated client connections.</p>
    ///   - [`connection_statuses(Option<Vec<TerminateConnectionStatus>>)`](crate::operation::terminate_client_vpn_connections::TerminateClientVpnConnectionsOutput::connection_statuses): <p>The current state of the client connections.</p>
    /// - On failure, responds with [`SdkError<TerminateClientVpnConnectionsError>`](crate::operation::terminate_client_vpn_connections::TerminateClientVpnConnectionsError)
    pub fn terminate_client_vpn_connections(&self) -> crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder{
        crate::operation::terminate_client_vpn_connections::builders::TerminateClientVpnConnectionsFluentBuilder::new(self.handle.clone())
    }
}
