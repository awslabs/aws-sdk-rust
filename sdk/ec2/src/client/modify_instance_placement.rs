// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyInstancePlacement`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`affinity(Affinity)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::affinity) / [`set_affinity(Option<Affinity>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::set_affinity): <p>The affinity setting for the instance.</p>
    ///   - [`group_name(impl Into<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::group_name) / [`set_group_name(Option<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::set_group_name): <p>The name of the placement group in which to place the instance. For spread placement groups, the instance must have a tenancy of <code>default</code>. For cluster and partition placement groups, the instance must have a tenancy of <code>default</code> or <code>dedicated</code>.</p>  <p>To remove an instance from a placement group, specify an empty string ("").</p>
    ///   - [`host_id(impl Into<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::host_id) / [`set_host_id(Option<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::set_host_id): <p>The ID of the Dedicated Host with which to associate the instance.</p>
    ///   - [`instance_id(impl Into<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::set_instance_id): <p>The ID of the instance that you are modifying.</p>
    ///   - [`tenancy(HostTenancy)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::tenancy) / [`set_tenancy(Option<HostTenancy>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::set_tenancy): <p>The tenancy for the instance.</p> <note>   <p>For T3 instances, you can't change the tenancy from <code>dedicated</code> to <code>host</code>, or from <code>host</code> to <code>dedicated</code>. Attempting to make one of these unsupported tenancy changes results in the <code>InvalidTenancy</code> error code.</p>  </note>
    ///   - [`partition_number(i32)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::partition_number) / [`set_partition_number(Option<i32>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::set_partition_number): <p>The number of the partition in which to place the instance. Valid only if the placement group strategy is set to <code>partition</code>.</p>
    ///   - [`host_resource_group_arn(impl Into<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::host_resource_group_arn) / [`set_host_resource_group_arn(Option<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::set_host_resource_group_arn): <p>The ARN of the host resource group in which to place the instance.</p>
    ///   - [`group_id(impl Into<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::group_id) / [`set_group_id(Option<String>)`](crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::set_group_id): <p>The Group Id of a placement group. You must specify the Placement Group <b>Group Id</b> to launch an instance in a shared placement group.</p>
    /// - On success, responds with [`ModifyInstancePlacementOutput`](crate::operation::modify_instance_placement::ModifyInstancePlacementOutput) with field(s):
    ///   - [`r#return(Option<bool>)`](crate::operation::modify_instance_placement::ModifyInstancePlacementOutput::return): <p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>
    /// - On failure, responds with [`SdkError<ModifyInstancePlacementError>`](crate::operation::modify_instance_placement::ModifyInstancePlacementError)
    pub fn modify_instance_placement(
        &self,
    ) -> crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder
    {
        crate::operation::modify_instance_placement::builders::ModifyInstancePlacementFluentBuilder::new(self.handle.clone())
    }
}
