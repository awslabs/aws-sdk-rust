// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteClientVpnRoute`](crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_vpn_endpoint_id(impl Into<String>)`](crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder::client_vpn_endpoint_id) / [`set_client_vpn_endpoint_id(Option<String>)`](crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder::set_client_vpn_endpoint_id): <p>The ID of the Client VPN endpoint from which the route is to be deleted.</p>
    ///   - [`target_vpc_subnet_id(impl Into<String>)`](crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder::target_vpc_subnet_id) / [`set_target_vpc_subnet_id(Option<String>)`](crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder::set_target_vpc_subnet_id): <p>The ID of the target subnet used by the route.</p>
    ///   - [`destination_cidr_block(impl Into<String>)`](crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder::destination_cidr_block) / [`set_destination_cidr_block(Option<String>)`](crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder::set_destination_cidr_block): <p>The IPv4 address range, in CIDR notation, of the route to be deleted.</p>
    ///   - [`dry_run(bool)`](crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DeleteClientVpnRouteOutput`](crate::operation::delete_client_vpn_route::DeleteClientVpnRouteOutput) with field(s):
    ///   - [`status(Option<ClientVpnRouteStatus>)`](crate::operation::delete_client_vpn_route::DeleteClientVpnRouteOutput::status): <p>The current state of the route.</p>
    /// - On failure, responds with [`SdkError<DeleteClientVpnRouteError>`](crate::operation::delete_client_vpn_route::DeleteClientVpnRouteError)
    pub fn delete_client_vpn_route(
        &self,
    ) -> crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder
    {
        crate::operation::delete_client_vpn_route::builders::DeleteClientVpnRouteFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
