// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTransitGatewayRouteTableAnnouncement`](crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`transit_gateway_route_table_id(impl Into<String>)`](crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder::transit_gateway_route_table_id) / [`set_transit_gateway_route_table_id(Option<String>)`](crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder::set_transit_gateway_route_table_id):<br>required: **true**<br><p>The ID of the transit gateway route table.</p><br>
    ///   - [`peering_attachment_id(impl Into<String>)`](crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder::peering_attachment_id) / [`set_peering_attachment_id(Option<String>)`](crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder::set_peering_attachment_id):<br>required: **true**<br><p>The ID of the peering attachment.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags specifications applied to the transit gateway route table announcement.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`CreateTransitGatewayRouteTableAnnouncementOutput`](crate::operation::create_transit_gateway_route_table_announcement::CreateTransitGatewayRouteTableAnnouncementOutput) with field(s):
    ///   - [`transit_gateway_route_table_announcement(Option<TransitGatewayRouteTableAnnouncement>)`](crate::operation::create_transit_gateway_route_table_announcement::CreateTransitGatewayRouteTableAnnouncementOutput::transit_gateway_route_table_announcement): <p>Provides details about the transit gateway route table announcement.</p>
    /// - On failure, responds with [`SdkError<CreateTransitGatewayRouteTableAnnouncementError>`](crate::operation::create_transit_gateway_route_table_announcement::CreateTransitGatewayRouteTableAnnouncementError)
    pub fn create_transit_gateway_route_table_announcement(
        &self,
    ) -> crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder {
        crate::operation::create_transit_gateway_route_table_announcement::builders::CreateTransitGatewayRouteTableAnnouncementFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
