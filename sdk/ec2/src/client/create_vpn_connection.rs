// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateVpnConnection`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`customer_gateway_id(impl Into<String>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::customer_gateway_id) / [`set_customer_gateway_id(Option<String>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::set_customer_gateway_id):<br>required: **true**<br><p>The ID of the customer gateway.</p><br>
    ///   - [`r#type(impl Into<String>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::type) / [`set_type(Option<String>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::set_type):<br>required: **true**<br><p>The type of VPN connection (<code>ipsec.1</code>).</p><br>
    ///   - [`vpn_gateway_id(impl Into<String>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::vpn_gateway_id) / [`set_vpn_gateway_id(Option<String>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::set_vpn_gateway_id):<br>required: **false**<br><p>The ID of the virtual private gateway. If you specify a virtual private gateway, you cannot specify a transit gateway.</p><br>
    ///   - [`transit_gateway_id(impl Into<String>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::transit_gateway_id) / [`set_transit_gateway_id(Option<String>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::set_transit_gateway_id):<br>required: **false**<br><p>The ID of the transit gateway. If you specify a transit gateway, you cannot specify a virtual private gateway.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`options(VpnConnectionOptionsSpecification)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::options) / [`set_options(Option<VpnConnectionOptionsSpecification>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::set_options):<br>required: **false**<br><p>The options for the VPN connection.</p><br>
    ///   - [`tag_specifications(TagSpecification)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec::<TagSpecification>>)`](crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::set_tag_specifications):<br>required: **false**<br><p>The tags to apply to the VPN connection.</p><br>
    /// - On success, responds with [`CreateVpnConnectionOutput`](crate::operation::create_vpn_connection::CreateVpnConnectionOutput) with field(s):
    ///   - [`vpn_connection(Option<VpnConnection>)`](crate::operation::create_vpn_connection::CreateVpnConnectionOutput::vpn_connection): <p>Information about the VPN connection.</p>
    /// - On failure, responds with [`SdkError<CreateVpnConnectionError>`](crate::operation::create_vpn_connection::CreateVpnConnectionError)
    pub fn create_vpn_connection(&self) -> crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder {
        crate::operation::create_vpn_connection::builders::CreateVpnConnectionFluentBuilder::new(self.handle.clone())
    }
}
