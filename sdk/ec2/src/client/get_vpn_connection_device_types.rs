// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetVpnConnectionDeviceTypes`](crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder::set_max_results): <p>The maximum number of results returned by <code>GetVpnConnectionDeviceTypes</code> in paginated output. When this parameter is used, <code>GetVpnConnectionDeviceTypes</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>GetVpnConnectionDeviceTypes</code> request with the returned <code>NextToken</code> value. This value can be between 200 and 1000. If this parameter is not used, then <code>GetVpnConnectionDeviceTypes</code> returns all results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder::set_next_token): <p>The <code>NextToken</code> value returned from a previous paginated <code>GetVpnConnectionDeviceTypes</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is null when there are no more results to return. </p>
    ///   - [`dry_run(bool)`](crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`GetVpnConnectionDeviceTypesOutput`](crate::operation::get_vpn_connection_device_types::GetVpnConnectionDeviceTypesOutput) with field(s):
    ///   - [`vpn_connection_device_types(Option<Vec<VpnConnectionDeviceType>>)`](crate::operation::get_vpn_connection_device_types::GetVpnConnectionDeviceTypesOutput::vpn_connection_device_types): <p>List of customer gateway devices that have a sample configuration file available for use.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_vpn_connection_device_types::GetVpnConnectionDeviceTypesOutput::next_token): <p>The <code>NextToken</code> value to include in a future <code>GetVpnConnectionDeviceTypes</code> request. When the results of a <code>GetVpnConnectionDeviceTypes</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<GetVpnConnectionDeviceTypesError>`](crate::operation::get_vpn_connection_device_types::GetVpnConnectionDeviceTypesError)
    pub fn get_vpn_connection_device_types(&self) -> crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder{
        crate::operation::get_vpn_connection_device_types::builders::GetVpnConnectionDeviceTypesFluentBuilder::new(self.handle.clone())
    }
}
