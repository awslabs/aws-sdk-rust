// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisableImageDeprecation`](crate::operation::disable_image_deprecation::builders::DisableImageDeprecationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`image_id(impl Into<String>)`](crate::operation::disable_image_deprecation::builders::DisableImageDeprecationFluentBuilder::image_id) / [`set_image_id(Option<String>)`](crate::operation::disable_image_deprecation::builders::DisableImageDeprecationFluentBuilder::set_image_id): <p>The ID of the AMI.</p>
    ///   - [`dry_run(bool)`](crate::operation::disable_image_deprecation::builders::DisableImageDeprecationFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::disable_image_deprecation::builders::DisableImageDeprecationFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DisableImageDeprecationOutput`](crate::operation::disable_image_deprecation::DisableImageDeprecationOutput) with field(s):
    ///   - [`r#return(Option<bool>)`](crate::operation::disable_image_deprecation::DisableImageDeprecationOutput::return): <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    /// - On failure, responds with [`SdkError<DisableImageDeprecationError>`](crate::operation::disable_image_deprecation::DisableImageDeprecationError)
    pub fn disable_image_deprecation(
        &self,
    ) -> crate::operation::disable_image_deprecation::builders::DisableImageDeprecationFluentBuilder
    {
        crate::operation::disable_image_deprecation::builders::DisableImageDeprecationFluentBuilder::new(self.handle.clone())
    }
}
