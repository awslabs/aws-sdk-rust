// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportKeyPair`](crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`key_name(impl Into<String>)`](crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder::key_name) / [`set_key_name(Option<String>)`](crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder::set_key_name): <p>A unique name for the key pair.</p>
    ///   - [`public_key_material(Blob)`](crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder::public_key_material) / [`set_public_key_material(Option<Blob>)`](crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder::set_public_key_material): <p>The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder::set_tag_specifications): <p>The tags to apply to the imported key pair.</p>
    /// - On success, responds with [`ImportKeyPairOutput`](crate::operation::import_key_pair::ImportKeyPairOutput) with field(s):
    ///   - [`key_fingerprint(Option<String>)`](crate::operation::import_key_pair::ImportKeyPairOutput::key_fingerprint): <ul>   <li> <p>For RSA key pairs, the key fingerprint is the MD5 public key fingerprint as specified in section 4 of RFC 4716.</p> </li>   <li> <p>For ED25519 key pairs, the key fingerprint is the base64-encoded SHA-256 digest, which is the default for OpenSSH, starting with <a href="http://www.openssh.com/txt/release-6.8">OpenSSH 6.8</a>.</p> </li>  </ul>
    ///   - [`key_name(Option<String>)`](crate::operation::import_key_pair::ImportKeyPairOutput::key_name): <p>The key pair name that you provided.</p>
    ///   - [`key_pair_id(Option<String>)`](crate::operation::import_key_pair::ImportKeyPairOutput::key_pair_id): <p>The ID of the resulting key pair.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::operation::import_key_pair::ImportKeyPairOutput::tags): <p>The tags applied to the imported key pair.</p>
    /// - On failure, responds with [`SdkError<ImportKeyPairError>`](crate::operation::import_key_pair::ImportKeyPairError)
    pub fn import_key_pair(
        &self,
    ) -> crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder {
        crate::operation::import_key_pair::builders::ImportKeyPairFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
