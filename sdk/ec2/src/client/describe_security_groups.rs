// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeSecurityGroups`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::set_filters): <p>The filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.</p>  <ul>   <li> <p> <code>description</code> - The description of the security group.</p> </li>   <li> <p> <code>egress.ip-permission.cidr</code> - An IPv4 CIDR block for an outbound security group rule.</p> </li>   <li> <p> <code>egress.ip-permission.from-port</code> - For an outbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li>   <li> <p> <code>egress.ip-permission.group-id</code> - The ID of a security group that has been referenced in an outbound security group rule.</p> </li>   <li> <p> <code>egress.ip-permission.group-name</code> - The name of a security group that is referenced in an outbound security group rule.</p> </li>   <li> <p> <code>egress.ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an outbound security group rule.</p> </li>   <li> <p> <code>egress.ip-permission.prefix-list-id</code> - The ID of a prefix list to which a security group rule allows outbound access.</p> </li>   <li> <p> <code>egress.ip-permission.protocol</code> - The IP protocol for an outbound security group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code>, a protocol number, or -1 for all protocols).</p> </li>   <li> <p> <code>egress.ip-permission.to-port</code> - For an outbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li>   <li> <p> <code>egress.ip-permission.user-id</code> - The ID of an Amazon Web Services account that has been referenced in an outbound security group rule.</p> </li>   <li> <p> <code>group-id</code> - The ID of the security group. </p> </li>   <li> <p> <code>group-name</code> - The name of the security group.</p> </li>   <li> <p> <code>ip-permission.cidr</code> - An IPv4 CIDR block for an inbound security group rule.</p> </li>   <li> <p> <code>ip-permission.from-port</code> - For an inbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li>   <li> <p> <code>ip-permission.group-id</code> - The ID of a security group that has been referenced in an inbound security group rule.</p> </li>   <li> <p> <code>ip-permission.group-name</code> - The name of a security group that is referenced in an inbound security group rule.</p> </li>   <li> <p> <code>ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an inbound security group rule.</p> </li>   <li> <p> <code>ip-permission.prefix-list-id</code> - The ID of a prefix list from which a security group rule allows inbound access.</p> </li>   <li> <p> <code>ip-permission.protocol</code> - The IP protocol for an inbound security group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code>, a protocol number, or -1 for all protocols).</p> </li>   <li> <p> <code>ip-permission.to-port</code> - For an inbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li>   <li> <p> <code>ip-permission.user-id</code> - The ID of an Amazon Web Services account that has been referenced in an inbound security group rule.</p> </li>   <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner of the security group.</p> </li>   <li> <p> <code>tag</code>:<key>      - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key      <code>Owner</code> and the value      <code>TeamA</code>, specify      <code>tag:Owner</code> for the filter name and      <code>TeamA</code> for the filter value.    </key></p> </li>   <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li>   <li> <p> <code>vpc-id</code> - The ID of the VPC specified when the security group was created.</p> </li>  </ul>
    ///   - [`group_ids(Vec<String>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::group_ids) / [`set_group_ids(Option<Vec<String>>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::set_group_ids): <p>The IDs of the security groups. Required for security groups in a nondefault VPC.</p>  <p>Default: Describes all of your security groups.</p>
    ///   - [`group_names(Vec<String>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::group_names) / [`set_group_names(Option<Vec<String>>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::set_group_names): <p>[EC2-Classic and default VPC only] The names of the security groups. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the <code>group-name</code> filter to describe security groups by name.</p>  <p>Default: Describes all of your security groups.</p>
    ///   - [`dry_run(bool)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::set_next_token): <p>The token to request the next page of results.</p>
    ///   - [`max_results(i32)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::set_max_results): <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.</p>
    /// - On success, responds with [`DescribeSecurityGroupsOutput`](crate::operation::describe_security_groups::DescribeSecurityGroupsOutput) with field(s):
    ///   - [`security_groups(Option<Vec<SecurityGroup>>)`](crate::operation::describe_security_groups::DescribeSecurityGroupsOutput::security_groups): <p>Information about the security groups.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_security_groups::DescribeSecurityGroupsOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<DescribeSecurityGroupsError>`](crate::operation::describe_security_groups::DescribeSecurityGroupsError)
    pub fn describe_security_groups(
        &self,
    ) -> crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder
    {
        crate::operation::describe_security_groups::builders::DescribeSecurityGroupsFluentBuilder::new(self.handle.clone())
    }
}
