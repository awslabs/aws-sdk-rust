// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelSpotFleetRequests`](crate::client::fluent_builders::CancelSpotFleetRequests) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::CancelSpotFleetRequests::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::CancelSpotFleetRequests::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`spot_fleet_request_ids(Vec<String>)`](crate::client::fluent_builders::CancelSpotFleetRequests::spot_fleet_request_ids) / [`set_spot_fleet_request_ids(Option<Vec<String>>)`](crate::client::fluent_builders::CancelSpotFleetRequests::set_spot_fleet_request_ids): <p>The IDs of the Spot Fleet requests.</p>
    ///   - [`terminate_instances(bool)`](crate::client::fluent_builders::CancelSpotFleetRequests::terminate_instances) / [`set_terminate_instances(Option<bool>)`](crate::client::fluent_builders::CancelSpotFleetRequests::set_terminate_instances): <p>Indicates whether to terminate instances for a Spot Fleet request if it is canceled successfully.</p>
    /// - On success, responds with [`CancelSpotFleetRequestsOutput`](crate::output::CancelSpotFleetRequestsOutput) with field(s):
    ///   - [`successful_fleet_requests(Option<Vec<CancelSpotFleetRequestsSuccessItem>>)`](crate::output::CancelSpotFleetRequestsOutput::successful_fleet_requests): <p>Information about the Spot Fleet requests that are successfully canceled.</p>
    ///   - [`unsuccessful_fleet_requests(Option<Vec<CancelSpotFleetRequestsErrorItem>>)`](crate::output::CancelSpotFleetRequestsOutput::unsuccessful_fleet_requests): <p>Information about the Spot Fleet requests that are not successfully canceled.</p>
    /// - On failure, responds with [`SdkError<CancelSpotFleetRequestsError>`](crate::error::CancelSpotFleetRequestsError)
    pub fn cancel_spot_fleet_requests(
        &self,
    ) -> crate::client::fluent_builders::CancelSpotFleetRequests {
        crate::client::fluent_builders::CancelSpotFleetRequests::new(self.handle.clone())
    }
}
