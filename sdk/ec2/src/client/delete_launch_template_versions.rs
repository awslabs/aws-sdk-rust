// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteLaunchTemplateVersions`](crate::client::fluent_builders::DeleteLaunchTemplateVersions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DeleteLaunchTemplateVersions::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DeleteLaunchTemplateVersions::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`launch_template_id(impl Into<String>)`](crate::client::fluent_builders::DeleteLaunchTemplateVersions::launch_template_id) / [`set_launch_template_id(Option<String>)`](crate::client::fluent_builders::DeleteLaunchTemplateVersions::set_launch_template_id): <p>The ID of the launch template.</p>  <p>You must specify either the <code>LaunchTemplateId</code> or the <code>LaunchTemplateName</code>, but not both.</p>
    ///   - [`launch_template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteLaunchTemplateVersions::launch_template_name) / [`set_launch_template_name(Option<String>)`](crate::client::fluent_builders::DeleteLaunchTemplateVersions::set_launch_template_name): <p>The name of the launch template.</p>  <p>You must specify either the <code>LaunchTemplateName</code> or the <code>LaunchTemplateId</code>, but not both.</p>
    ///   - [`versions(Vec<String>)`](crate::client::fluent_builders::DeleteLaunchTemplateVersions::versions) / [`set_versions(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteLaunchTemplateVersions::set_versions): <p>The version numbers of one or more launch template versions to delete.</p>
    /// - On success, responds with [`DeleteLaunchTemplateVersionsOutput`](crate::output::DeleteLaunchTemplateVersionsOutput) with field(s):
    ///   - [`successfully_deleted_launch_template_versions(Option<Vec<DeleteLaunchTemplateVersionsResponseSuccessItem>>)`](crate::output::DeleteLaunchTemplateVersionsOutput::successfully_deleted_launch_template_versions): <p>Information about the launch template versions that were successfully deleted.</p>
    ///   - [`unsuccessfully_deleted_launch_template_versions(Option<Vec<DeleteLaunchTemplateVersionsResponseErrorItem>>)`](crate::output::DeleteLaunchTemplateVersionsOutput::unsuccessfully_deleted_launch_template_versions): <p>Information about the launch template versions that could not be deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteLaunchTemplateVersionsError>`](crate::error::DeleteLaunchTemplateVersionsError)
    pub fn delete_launch_template_versions(
        &self,
    ) -> crate::client::fluent_builders::DeleteLaunchTemplateVersions {
        crate::client::fluent_builders::DeleteLaunchTemplateVersions::new(self.handle.clone())
    }
}
