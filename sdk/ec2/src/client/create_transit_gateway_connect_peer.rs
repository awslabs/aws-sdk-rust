// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTransitGatewayConnectPeer`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`transit_gateway_attachment_id(impl Into<String>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::transit_gateway_attachment_id) / [`set_transit_gateway_attachment_id(Option<String>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::set_transit_gateway_attachment_id): <p>The ID of the Connect attachment.</p>
    ///   - [`transit_gateway_address(impl Into<String>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::transit_gateway_address) / [`set_transit_gateway_address(Option<String>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::set_transit_gateway_address): <p>The peer IP address (GRE outer IP address) on the transit gateway side of the Connect peer, which must be specified from a transit gateway CIDR block. If not specified, Amazon automatically assigns the first available IP address from the transit gateway CIDR block.</p>
    ///   - [`peer_address(impl Into<String>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::peer_address) / [`set_peer_address(Option<String>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::set_peer_address): <p>The peer IP address (GRE outer IP address) on the appliance side of the Connect peer.</p>
    ///   - [`bgp_options(TransitGatewayConnectRequestBgpOptions)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::bgp_options) / [`set_bgp_options(Option<TransitGatewayConnectRequestBgpOptions>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::set_bgp_options): <p>The BGP options for the Connect peer.</p>
    ///   - [`inside_cidr_blocks(Vec<String>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::inside_cidr_blocks) / [`set_inside_cidr_blocks(Option<Vec<String>>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::set_inside_cidr_blocks): <p>The range of inside IP addresses that are used for BGP peering. You must specify a size /29 IPv4 CIDR block from the <code>169.254.0.0/16</code> range. The first address from the range must be configured on the appliance as the BGP IP address. You can also optionally specify a size /125 IPv6 CIDR block from the <code>fd00::/8</code> range.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::set_tag_specifications): <p>The tags to apply to the Connect peer.</p>
    ///   - [`dry_run(bool)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CreateTransitGatewayConnectPeerOutput`](crate::operation::create_transit_gateway_connect_peer::CreateTransitGatewayConnectPeerOutput) with field(s):
    ///   - [`transit_gateway_connect_peer(Option<TransitGatewayConnectPeer>)`](crate::operation::create_transit_gateway_connect_peer::CreateTransitGatewayConnectPeerOutput::transit_gateway_connect_peer): <p>Information about the Connect peer.</p>
    /// - On failure, responds with [`SdkError<CreateTransitGatewayConnectPeerError>`](crate::operation::create_transit_gateway_connect_peer::CreateTransitGatewayConnectPeerError)
    pub fn create_transit_gateway_connect_peer(&self) -> crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder{
        crate::operation::create_transit_gateway_connect_peer::builders::CreateTransitGatewayConnectPeerFluentBuilder::new(self.handle.clone())
    }
}
