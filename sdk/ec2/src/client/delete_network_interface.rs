// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteNetworkInterface`](crate::operation::delete_network_interface::builders::DeleteNetworkInterfaceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::delete_network_interface::builders::DeleteNetworkInterfaceFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::delete_network_interface::builders::DeleteNetworkInterfaceFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`network_interface_id(impl Into<String>)`](crate::operation::delete_network_interface::builders::DeleteNetworkInterfaceFluentBuilder::network_interface_id) / [`set_network_interface_id(Option<String>)`](crate::operation::delete_network_interface::builders::DeleteNetworkInterfaceFluentBuilder::set_network_interface_id): <p>The ID of the network interface.</p>
    /// - On success, responds with [`DeleteNetworkInterfaceOutput`](crate::operation::delete_network_interface::DeleteNetworkInterfaceOutput)
    /// - On failure, responds with [`SdkError<DeleteNetworkInterfaceError>`](crate::operation::delete_network_interface::DeleteNetworkInterfaceError)
    pub fn delete_network_interface(
        &self,
    ) -> crate::operation::delete_network_interface::builders::DeleteNetworkInterfaceFluentBuilder
    {
        crate::operation::delete_network_interface::builders::DeleteNetworkInterfaceFluentBuilder::new(self.handle.clone())
    }
}
