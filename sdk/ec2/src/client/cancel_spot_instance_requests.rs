// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelSpotInstanceRequests`](crate::client::fluent_builders::CancelSpotInstanceRequests) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::CancelSpotInstanceRequests::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::CancelSpotInstanceRequests::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`spot_instance_request_ids(Vec<String>)`](crate::client::fluent_builders::CancelSpotInstanceRequests::spot_instance_request_ids) / [`set_spot_instance_request_ids(Option<Vec<String>>)`](crate::client::fluent_builders::CancelSpotInstanceRequests::set_spot_instance_request_ids): <p>One or more Spot Instance request IDs.</p>
    /// - On success, responds with [`CancelSpotInstanceRequestsOutput`](crate::output::CancelSpotInstanceRequestsOutput) with field(s):
    ///   - [`cancelled_spot_instance_requests(Option<Vec<CancelledSpotInstanceRequest>>)`](crate::output::CancelSpotInstanceRequestsOutput::cancelled_spot_instance_requests): <p>One or more Spot Instance requests.</p>
    /// - On failure, responds with [`SdkError<CancelSpotInstanceRequestsError>`](crate::error::CancelSpotInstanceRequestsError)
    pub fn cancel_spot_instance_requests(
        &self,
    ) -> crate::client::fluent_builders::CancelSpotInstanceRequests {
        crate::client::fluent_builders::CancelSpotInstanceRequests::new(self.handle.clone())
    }
}
