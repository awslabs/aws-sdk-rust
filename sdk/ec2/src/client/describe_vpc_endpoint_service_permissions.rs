// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeVpcEndpointServicePermissions`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`service_id(impl Into<String>)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::service_id) / [`set_service_id(Option<String>)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::set_service_id): <p>The ID of the service.</p>
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::set_filters): <p>The filters.</p>  <ul>   <li> <p> <code>principal</code> - The ARN of the principal.</p> </li>   <li> <p> <code>principal-type</code> - The principal type (<code>All</code> | <code>Service</code> | <code>OrganizationUnit</code> | <code>Account</code> | <code>User</code> | <code>Role</code>).</p> </li>  </ul>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::set_max_results): <p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::set_next_token): <p>The token to retrieve the next page of results.</p>
    /// - On success, responds with [`DescribeVpcEndpointServicePermissionsOutput`](crate::output::DescribeVpcEndpointServicePermissionsOutput) with field(s):
    ///   - [`allowed_principals(Option<Vec<AllowedPrincipal>>)`](crate::output::DescribeVpcEndpointServicePermissionsOutput::allowed_principals): <p>Information about the allowed principals.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeVpcEndpointServicePermissionsOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<DescribeVpcEndpointServicePermissionsError>`](crate::error::DescribeVpcEndpointServicePermissionsError)
    pub fn describe_vpc_endpoint_service_permissions(
        &self,
    ) -> crate::client::fluent_builders::DescribeVpcEndpointServicePermissions {
        crate::client::fluent_builders::DescribeVpcEndpointServicePermissions::new(
            self.handle.clone(),
        )
    }
}
