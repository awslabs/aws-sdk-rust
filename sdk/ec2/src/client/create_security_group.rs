// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSecurityGroup`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`description(impl Into<String>)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::set_description): <p>A description for the security group. This is informational only.</p>  <p>Constraints: Up to 255 characters in length</p>  <p>Constraints for EC2-Classic: ASCII characters</p>  <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>
    ///   - [`group_name(impl Into<String>)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::group_name) / [`set_group_name(Option<String>)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::set_group_name): <p>The name of the security group.</p>  <p>Constraints: Up to 255 characters in length. Cannot start with <code>sg-</code>.</p>  <p>Constraints for EC2-Classic: ASCII characters</p>  <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>
    ///   - [`vpc_id(impl Into<String>)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::vpc_id) / [`set_vpc_id(Option<String>)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::set_vpc_id): <p>[EC2-VPC] The ID of the VPC. Required for EC2-VPC.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::set_tag_specifications): <p>The tags to assign to the security group.</p>
    ///   - [`dry_run(bool)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CreateSecurityGroupOutput`](crate::operation::create_security_group::CreateSecurityGroupOutput) with field(s):
    ///   - [`group_id(Option<String>)`](crate::operation::create_security_group::CreateSecurityGroupOutput::group_id): <p>The ID of the security group.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::operation::create_security_group::CreateSecurityGroupOutput::tags): <p>The tags assigned to the security group.</p>
    /// - On failure, responds with [`SdkError<CreateSecurityGroupError>`](crate::operation::create_security_group::CreateSecurityGroupError)
    pub fn create_security_group(
        &self,
    ) -> crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder {
        crate::operation::create_security_group::builders::CreateSecurityGroupFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
