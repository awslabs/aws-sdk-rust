// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelImageLaunchPermission`](crate::client::fluent_builders::CancelImageLaunchPermission) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`image_id(impl Into<String>)`](crate::client::fluent_builders::CancelImageLaunchPermission::image_id) / [`set_image_id(Option<String>)`](crate::client::fluent_builders::CancelImageLaunchPermission::set_image_id): <p>The ID of the AMI that was shared with your Amazon Web Services account.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::CancelImageLaunchPermission::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::CancelImageLaunchPermission::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CancelImageLaunchPermissionOutput`](crate::output::CancelImageLaunchPermissionOutput) with field(s):
    ///   - [`r#return(Option<bool>)`](crate::output::CancelImageLaunchPermissionOutput::return): <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
    /// - On failure, responds with [`SdkError<CancelImageLaunchPermissionError>`](crate::error::CancelImageLaunchPermissionError)
    pub fn cancel_image_launch_permission(
        &self,
    ) -> crate::client::fluent_builders::CancelImageLaunchPermission {
        crate::client::fluent_builders::CancelImageLaunchPermission::new(self.handle.clone())
    }
}
