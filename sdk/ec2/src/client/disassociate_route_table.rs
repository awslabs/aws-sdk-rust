// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisassociateRouteTable`](crate::client::fluent_builders::DisassociateRouteTable) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`association_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateRouteTable::association_id) / [`set_association_id(Option<String>)`](crate::client::fluent_builders::DisassociateRouteTable::set_association_id): <p>The association ID representing the current association between the route table and subnet or gateway.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DisassociateRouteTable::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DisassociateRouteTable::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`DisassociateRouteTableOutput`](crate::output::DisassociateRouteTableOutput)
    /// - On failure, responds with [`SdkError<DisassociateRouteTableError>`](crate::error::DisassociateRouteTableError)
    pub fn disassociate_route_table(
        &self,
    ) -> crate::client::fluent_builders::DisassociateRouteTable {
        crate::client::fluent_builders::DisassociateRouteTable::new(self.handle.clone())
    }
}
