// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCoipPool`](crate::client::fluent_builders::CreateCoipPool) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`local_gateway_route_table_id(impl Into<String>)`](crate::client::fluent_builders::CreateCoipPool::local_gateway_route_table_id) / [`set_local_gateway_route_table_id(Option<String>)`](crate::client::fluent_builders::CreateCoipPool::set_local_gateway_route_table_id): <p> The ID of the local gateway route table. </p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::client::fluent_builders::CreateCoipPool::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::client::fluent_builders::CreateCoipPool::set_tag_specifications): <p> The tags to assign to the CoIP address pool. </p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::CreateCoipPool::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::CreateCoipPool::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CreateCoipPoolOutput`](crate::output::CreateCoipPoolOutput) with field(s):
    ///   - [`coip_pool(Option<CoipPool>)`](crate::output::CreateCoipPoolOutput::coip_pool): <p>Information about the CoIP address pool.</p>
    /// - On failure, responds with [`SdkError<CreateCoipPoolError>`](crate::error::CreateCoipPoolError)
    pub fn create_coip_pool(&self) -> crate::client::fluent_builders::CreateCoipPool {
        crate::client::fluent_builders::CreateCoipPool::new(self.handle.clone())
    }
}
