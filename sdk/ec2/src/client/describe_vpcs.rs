// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeVpcs`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(Filter)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::set_filters):<br>required: **false**<br><p>The filters.</p>  <ul>   <li> <p> <code>cidr</code> - The primary IPv4 CIDR block of the VPC. The CIDR block you specify must exactly match the VPC's CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, <code>/28</code>).</p> </li>   <li> <p> <code>cidr-block-association.cidr-block</code> - An IPv4 CIDR block associated with the VPC.</p> </li>   <li> <p> <code>cidr-block-association.association-id</code> - The association ID for an IPv4 CIDR block associated with the VPC.</p> </li>   <li> <p> <code>cidr-block-association.state</code> - The state of an IPv4 CIDR block associated with the VPC.</p> </li>   <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li>   <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the VPC.</p> </li>   <li> <p> <code>ipv6-cidr-block-association.ipv6-pool</code> - The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.</p> </li>   <li> <p> <code>ipv6-cidr-block-association.association-id</code> - The association ID for an IPv6 CIDR block associated with the VPC.</p> </li>   <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the VPC.</p> </li>   <li> <p> <code>is-default</code> - Indicates whether the VPC is the default VPC.</p> </li>   <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the VPC.</p> </li>   <li> <p> <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p> </li>   <li> <p> <code>tag</code>:<key>      - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key      <code>Owner</code> and the value      <code>TeamA</code>, specify      <code>tag:Owner</code> for the filter name and      <code>TeamA</code> for the filter value.    </key></p> </li>   <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li>   <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li>  </ul><br>
    ///   - [`vpc_ids(impl Into<String>)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::vpc_ids) / [`set_vpc_ids(Option<Vec::<String>>)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::set_vpc_ids):<br>required: **false**<br><p>The IDs of the VPCs.</p>  <p>Default: Describes all your VPCs.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token returned from a previous paginated request. Pagination continues from the end of the items returned by the previous request.</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.</p><br>
    /// - On success, responds with [`DescribeVpcsOutput`](crate::operation::describe_vpcs::DescribeVpcsOutput) with field(s):
    ///   - [`vpcs(Option<Vec::<Vpc>>)`](crate::operation::describe_vpcs::DescribeVpcsOutput::vpcs): <p>Information about one or more VPCs.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_vpcs::DescribeVpcsOutput::next_token): <p>The token to include in another request to get the next page of items. This value is <code>null</code> when there are no more items to return.</p>
    /// - On failure, responds with [`SdkError<DescribeVpcsError>`](crate::operation::describe_vpcs::DescribeVpcsError)
    pub fn describe_vpcs(&self) -> crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder {
        crate::operation::describe_vpcs::builders::DescribeVpcsFluentBuilder::new(self.handle.clone())
    }
}
