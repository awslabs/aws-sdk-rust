// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyIpamScope`](crate::client::fluent_builders::ModifyIpamScope) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::ModifyIpamScope::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::ModifyIpamScope::set_dry_run): <p>A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`ipam_scope_id(impl Into<String>)`](crate::client::fluent_builders::ModifyIpamScope::ipam_scope_id) / [`set_ipam_scope_id(Option<String>)`](crate::client::fluent_builders::ModifyIpamScope::set_ipam_scope_id): <p>The ID of the scope you want to modify.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::ModifyIpamScope::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::ModifyIpamScope::set_description): <p>The description of the scope you want to modify.</p>
    /// - On success, responds with [`ModifyIpamScopeOutput`](crate::output::ModifyIpamScopeOutput) with field(s):
    ///   - [`ipam_scope(Option<IpamScope>)`](crate::output::ModifyIpamScopeOutput::ipam_scope): <p>The results of the modification.</p>
    /// - On failure, responds with [`SdkError<ModifyIpamScopeError>`](crate::error::ModifyIpamScopeError)
    pub fn modify_ipam_scope(&self) -> crate::client::fluent_builders::ModifyIpamScope {
        crate::client::fluent_builders::ModifyIpamScope::new(self.handle.clone())
    }
}
