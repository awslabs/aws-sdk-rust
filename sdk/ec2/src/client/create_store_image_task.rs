// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateStoreImageTask`](crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`image_id(impl Into<String>)`](crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder::image_id) / [`set_image_id(Option<String>)`](crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder::set_image_id): <p>The ID of the AMI.</p>
    ///   - [`bucket(impl Into<String>)`](crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder::set_bucket): <p>The name of the Amazon S3 bucket in which the AMI object will be stored. The bucket must be in the Region in which the request is being made. The AMI object appears in the bucket only after the upload task has completed. </p>
    ///   - [`s3_object_tags(Vec<S3ObjectTag>)`](crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder::s3_object_tags) / [`set_s3_object_tags(Option<Vec<S3ObjectTag>>)`](crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder::set_s3_object_tags): <p>The tags to apply to the AMI object that will be stored in the Amazon S3 bucket. </p>
    ///   - [`dry_run(bool)`](crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CreateStoreImageTaskOutput`](crate::operation::create_store_image_task::CreateStoreImageTaskOutput) with field(s):
    ///   - [`object_key(Option<String>)`](crate::operation::create_store_image_task::CreateStoreImageTaskOutput::object_key): <p>The name of the stored AMI object in the S3 bucket.</p>
    /// - On failure, responds with [`SdkError<CreateStoreImageTaskError>`](crate::operation::create_store_image_task::CreateStoreImageTaskError)
    pub fn create_store_image_task(
        &self,
    ) -> crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder
    {
        crate::operation::create_store_image_task::builders::CreateStoreImageTaskFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
