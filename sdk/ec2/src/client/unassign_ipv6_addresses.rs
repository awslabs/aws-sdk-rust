// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UnassignIpv6Addresses`](crate::client::fluent_builders::UnassignIpv6Addresses) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ipv6_addresses(Vec<String>)`](crate::client::fluent_builders::UnassignIpv6Addresses::ipv6_addresses) / [`set_ipv6_addresses(Option<Vec<String>>)`](crate::client::fluent_builders::UnassignIpv6Addresses::set_ipv6_addresses): <p>The IPv6 addresses to unassign from the network interface.</p>
    ///   - [`ipv6_prefixes(Vec<String>)`](crate::client::fluent_builders::UnassignIpv6Addresses::ipv6_prefixes) / [`set_ipv6_prefixes(Option<Vec<String>>)`](crate::client::fluent_builders::UnassignIpv6Addresses::set_ipv6_prefixes): <p>The IPv6 prefixes to unassign from the network interface.</p>
    ///   - [`network_interface_id(impl Into<String>)`](crate::client::fluent_builders::UnassignIpv6Addresses::network_interface_id) / [`set_network_interface_id(Option<String>)`](crate::client::fluent_builders::UnassignIpv6Addresses::set_network_interface_id): <p>The ID of the network interface.</p>
    /// - On success, responds with [`UnassignIpv6AddressesOutput`](crate::output::UnassignIpv6AddressesOutput) with field(s):
    ///   - [`network_interface_id(Option<String>)`](crate::output::UnassignIpv6AddressesOutput::network_interface_id): <p>The ID of the network interface.</p>
    ///   - [`unassigned_ipv6_addresses(Option<Vec<String>>)`](crate::output::UnassignIpv6AddressesOutput::unassigned_ipv6_addresses): <p>The IPv6 addresses that have been unassigned from the network interface.</p>
    ///   - [`unassigned_ipv6_prefixes(Option<Vec<String>>)`](crate::output::UnassignIpv6AddressesOutput::unassigned_ipv6_prefixes): <p>The IPv4 prefixes that have been unassigned from the network interface.</p>
    /// - On failure, responds with [`SdkError<UnassignIpv6AddressesError>`](crate::error::UnassignIpv6AddressesError)
    pub fn unassign_ipv6_addresses(&self) -> crate::client::fluent_builders::UnassignIpv6Addresses {
        crate::client::fluent_builders::UnassignIpv6Addresses::new(self.handle.clone())
    }
}
