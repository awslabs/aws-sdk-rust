// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeElasticGpus`](crate::client::fluent_builders::DescribeElasticGpus) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`elastic_gpu_ids(Vec<String>)`](crate::client::fluent_builders::DescribeElasticGpus::elastic_gpu_ids) / [`set_elastic_gpu_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeElasticGpus::set_elastic_gpu_ids): <p>The Elastic Graphics accelerator IDs.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::DescribeElasticGpus::dry_run) / [`set_dry_run(Option<bool>)`](crate::client::fluent_builders::DescribeElasticGpus::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::DescribeElasticGpus::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::DescribeElasticGpus::set_filters): <p>The filters.</p>  <ul>   <li> <p> <code>availability-zone</code> - The Availability Zone in which the Elastic Graphics accelerator resides.</p> </li>   <li> <p> <code>elastic-gpu-health</code> - The status of the Elastic Graphics accelerator (<code>OK</code> | <code>IMPAIRED</code>).</p> </li>   <li> <p> <code>elastic-gpu-state</code> - The state of the Elastic Graphics accelerator (<code>ATTACHED</code>).</p> </li>   <li> <p> <code>elastic-gpu-type</code> - The type of Elastic Graphics accelerator; for example, <code>eg1.medium</code>.</p> </li>   <li> <p> <code>instance-id</code> - The ID of the instance to which the Elastic Graphics accelerator is associated.</p> </li>  </ul>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeElasticGpus::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeElasticGpus::set_max_results): <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeElasticGpus::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeElasticGpus::set_next_token): <p>The token to request the next page of results.</p>
    /// - On success, responds with [`DescribeElasticGpusOutput`](crate::output::DescribeElasticGpusOutput) with field(s):
    ///   - [`elastic_gpu_set(Option<Vec<ElasticGpus>>)`](crate::output::DescribeElasticGpusOutput::elastic_gpu_set): <p>Information about the Elastic Graphics accelerators.</p>
    ///   - [`max_results(Option<i32>)`](crate::output::DescribeElasticGpusOutput::max_results): <p>The total number of items to return. If the total number of items available is more than the value specified in max-items then a Next-Token will be provided in the output that you can use to resume pagination.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeElasticGpusOutput::next_token): <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<DescribeElasticGpusError>`](crate::error::DescribeElasticGpusError)
    pub fn describe_elastic_gpus(&self) -> crate::client::fluent_builders::DescribeElasticGpus {
        crate::client::fluent_builders::DescribeElasticGpus::new(self.handle.clone())
    }
}
