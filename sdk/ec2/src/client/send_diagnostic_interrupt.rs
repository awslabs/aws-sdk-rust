// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SendDiagnosticInterrupt`](crate::operation::send_diagnostic_interrupt::builders::SendDiagnosticInterruptFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::send_diagnostic_interrupt::builders::SendDiagnosticInterruptFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::send_diagnostic_interrupt::builders::SendDiagnosticInterruptFluentBuilder::set_instance_id):<br>required: **true**<br><p>The ID of the instance.</p><br>
    ///   - [`dry_run(bool)`](crate::operation::send_diagnostic_interrupt::builders::SendDiagnosticInterruptFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::send_diagnostic_interrupt::builders::SendDiagnosticInterruptFluentBuilder::set_dry_run):<br>required: **false**<br><p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p><br>
    /// - On success, responds with [`SendDiagnosticInterruptOutput`](crate::operation::send_diagnostic_interrupt::SendDiagnosticInterruptOutput)
    /// - On failure, responds with [`SdkError<SendDiagnosticInterruptError>`](crate::operation::send_diagnostic_interrupt::SendDiagnosticInterruptError)
    pub fn send_diagnostic_interrupt(&self) -> crate::operation::send_diagnostic_interrupt::builders::SendDiagnosticInterruptFluentBuilder {
        crate::operation::send_diagnostic_interrupt::builders::SendDiagnosticInterruptFluentBuilder::new(self.handle.clone())
    }
}
