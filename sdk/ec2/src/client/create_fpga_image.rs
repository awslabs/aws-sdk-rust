// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFpgaImage`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`input_storage_location(StorageLocation)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::input_storage_location) / [`set_input_storage_location(Option<StorageLocation>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::set_input_storage_location): <p>The location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.</p>
    ///   - [`logs_storage_location(StorageLocation)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::logs_storage_location) / [`set_logs_storage_location(Option<StorageLocation>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::set_logs_storage_location): <p>The location in Amazon S3 for the output logs.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::set_description): <p>A description for the AFI.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::set_name): <p>A name for the AFI.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::set_tag_specifications): <p>The tags to apply to the FPGA image during creation.</p>
    /// - On success, responds with [`CreateFpgaImageOutput`](crate::operation::create_fpga_image::CreateFpgaImageOutput) with field(s):
    ///   - [`fpga_image_id(Option<String>)`](crate::operation::create_fpga_image::CreateFpgaImageOutput::fpga_image_id): <p>The FPGA image identifier (AFI ID).</p>
    ///   - [`fpga_image_global_id(Option<String>)`](crate::operation::create_fpga_image::CreateFpgaImageOutput::fpga_image_global_id): <p>The global FPGA image identifier (AGFI ID).</p>
    /// - On failure, responds with [`SdkError<CreateFpgaImageError>`](crate::operation::create_fpga_image::CreateFpgaImageError)
    pub fn create_fpga_image(
        &self,
    ) -> crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder {
        crate::operation::create_fpga_image::builders::CreateFpgaImageFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
