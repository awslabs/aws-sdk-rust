// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_parallel_data;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_delete_parallel_data;

pub(crate) mod shape_delete_terminology;

pub(crate) mod shape_describe_text_translation_job;

pub(crate) mod shape_get_parallel_data;

pub(crate) mod shape_get_terminology;

pub(crate) mod shape_import_terminology;

pub(crate) mod shape_list_languages;

pub(crate) mod shape_list_parallel_data;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_terminologies;

pub(crate) mod shape_list_text_translation_jobs;

pub(crate) mod shape_start_text_translation_job;

pub(crate) mod shape_stop_text_translation_job;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_translate_text;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_parallel_data;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_concurrent_modification_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_parallel_data_input;

pub(crate) mod shape_delete_parallel_data_input;

pub(crate) mod shape_delete_terminology_input;

pub(crate) mod shape_describe_text_translation_job_input;

pub(crate) mod shape_detected_language_low_confidence_exception;

pub(crate) mod shape_get_parallel_data_input;

pub(crate) mod shape_get_terminology_input;

pub(crate) mod shape_import_terminology_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_invalid_filter_exception;

pub(crate) mod shape_invalid_parameter_value_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_languages_input;

pub(crate) mod shape_list_parallel_data_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_list_terminologies_input;

pub(crate) mod shape_list_text_translation_jobs_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_start_text_translation_job_input;

pub(crate) mod shape_stop_text_translation_job_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_text_size_limit_exceeded_exception;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_too_many_tags_exception;

pub(crate) mod shape_translate_text_input;

pub(crate) mod shape_unsupported_display_language_code_exception;

pub(crate) mod shape_unsupported_language_pair_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_parallel_data_input;

pub(crate) mod shape_applied_terminology_list;

pub(crate) mod shape_encryption_key;

pub(crate) mod shape_input_data_config;

pub(crate) mod shape_languages_list;

pub(crate) mod shape_output_data_config;

pub(crate) mod shape_parallel_data_config;

pub(crate) mod shape_parallel_data_data_location;

pub(crate) mod shape_parallel_data_properties;

pub(crate) mod shape_parallel_data_properties_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_terminology_data;

pub(crate) mod shape_terminology_data_location;

pub(crate) mod shape_terminology_properties;

pub(crate) mod shape_terminology_properties_list;

pub(crate) mod shape_text_translation_job_filter;

pub(crate) mod shape_text_translation_job_properties;

pub(crate) mod shape_text_translation_job_properties_list;

pub(crate) mod shape_translation_settings;

pub(crate) mod shape_applied_terminology;

pub(crate) mod shape_job_details;

pub(crate) mod shape_language;

pub(crate) mod shape_language_code_string_list;

pub(crate) mod shape_resource_name_list;

pub(crate) mod shape_target_language_code_string_list;

pub(crate) mod shape_term_list;

pub(crate) mod shape_term;
