// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output configuration properties for a batch translation job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OutputDataConfig {
    /// <p>The URI of the S3 folder that contains a translation job's output file. The folder must be in the same Region as the API endpoint that you are calling.</p>
    #[doc(hidden)]
    pub s3_uri: std::option::Option<std::string::String>,
    /// <p>The encryption key used to encrypt this object.</p>
    #[doc(hidden)]
    pub encryption_key: std::option::Option<crate::types::EncryptionKey>,
}
impl OutputDataConfig {
    /// <p>The URI of the S3 folder that contains a translation job's output file. The folder must be in the same Region as the API endpoint that you are calling.</p>
    pub fn s3_uri(&self) -> std::option::Option<&str> {
        self.s3_uri.as_deref()
    }
    /// <p>The encryption key used to encrypt this object.</p>
    pub fn encryption_key(&self) -> std::option::Option<&crate::types::EncryptionKey> {
        self.encryption_key.as_ref()
    }
}
impl OutputDataConfig {
    /// Creates a new builder-style object to manufacture [`OutputDataConfig`](crate::types::OutputDataConfig).
    pub fn builder() -> crate::types::builders::OutputDataConfigBuilder {
        crate::types::builders::OutputDataConfigBuilder::default()
    }
}

/// A builder for [`OutputDataConfig`](crate::types::OutputDataConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OutputDataConfigBuilder {
    pub(crate) s3_uri: std::option::Option<std::string::String>,
    pub(crate) encryption_key: std::option::Option<crate::types::EncryptionKey>,
}
impl OutputDataConfigBuilder {
    /// <p>The URI of the S3 folder that contains a translation job's output file. The folder must be in the same Region as the API endpoint that you are calling.</p>
    pub fn s3_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_uri = Some(input.into());
        self
    }
    /// <p>The URI of the S3 folder that contains a translation job's output file. The folder must be in the same Region as the API endpoint that you are calling.</p>
    pub fn set_s3_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_uri = input;
        self
    }
    /// <p>The encryption key used to encrypt this object.</p>
    pub fn encryption_key(mut self, input: crate::types::EncryptionKey) -> Self {
        self.encryption_key = Some(input);
        self
    }
    /// <p>The encryption key used to encrypt this object.</p>
    pub fn set_encryption_key(
        mut self,
        input: std::option::Option<crate::types::EncryptionKey>,
    ) -> Self {
        self.encryption_key = input;
        self
    }
    /// Consumes the builder and constructs a [`OutputDataConfig`](crate::types::OutputDataConfig).
    pub fn build(self) -> crate::types::OutputDataConfig {
        crate::types::OutputDataConfig {
            s3_uri: self.s3_uri,
            encryption_key: self.encryption_key,
        }
    }
}
