// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportTerminology`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::set_name): <p>The name of the custom terminology being imported.</p>
    ///   - [`merge_strategy(MergeStrategy)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::merge_strategy) / [`set_merge_strategy(Option<MergeStrategy>)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::set_merge_strategy): <p>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::set_description): <p>The description of the custom terminology being imported.</p>
    ///   - [`terminology_data(TerminologyData)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::terminology_data) / [`set_terminology_data(Option<TerminologyData>)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::set_terminology_data): <p>The terminology data for the custom terminology being imported.</p>
    ///   - [`encryption_key(EncryptionKey)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::encryption_key) / [`set_encryption_key(Option<EncryptionKey>)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::set_encryption_key): <p>The encryption key for the custom terminology being imported.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::set_tags): <p>Tags to be associated with this resource. A tag is a key-value pair that adds metadata to a resource. Each tag key for the resource must be unique. For more information, see <a href="https://docs.aws.amazon.com/translate/latest/dg/tagging.html"> Tagging your resources</a>.</p>
    /// - On success, responds with [`ImportTerminologyOutput`](crate::operation::import_terminology::ImportTerminologyOutput) with field(s):
    ///   - [`terminology_properties(Option<TerminologyProperties>)`](crate::operation::import_terminology::ImportTerminologyOutput::terminology_properties): <p>The properties of the custom terminology being imported.</p>
    ///   - [`auxiliary_data_location(Option<TerminologyDataLocation>)`](crate::operation::import_terminology::ImportTerminologyOutput::auxiliary_data_location): <p>The Amazon S3 location of a file that provides any errors or warnings that were produced by your input file. This file was created when Amazon Translate attempted to create a terminology resource. The location is returned as a presigned URL to that has a 30 minute expiration.</p>
    /// - On failure, responds with [`SdkError<ImportTerminologyError>`](crate::operation::import_terminology::ImportTerminologyError)
    pub fn import_terminology(
        &self,
    ) -> crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder {
        crate::operation::import_terminology::builders::ImportTerminologyFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
