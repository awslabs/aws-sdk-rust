// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_associate_assessment_report_evidence_folder_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateAssessmentReportEvidenceFolderInput,
) {
    if let Some(var_1) = &input.evidence_folder_id {
        object.key("evidenceFolderId").string(var_1);
    }
}

pub fn serialize_structure_crate_input_batch_associate_assessment_report_evidence_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchAssociateAssessmentReportEvidenceInput,
) {
    if let Some(var_2) = &input.evidence_folder_id {
        object.key("evidenceFolderId").string(var_2);
    }
    if let Some(var_3) = &input.evidence_ids {
        let mut array_4 = object.key("evidenceIds").start_array();
        for item_5 in var_3 {
            {
                array_4.value().string(item_5);
            }
        }
        array_4.finish();
    }
}

pub fn serialize_structure_crate_input_batch_create_delegation_by_assessment_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchCreateDelegationByAssessmentInput,
) {
    if let Some(var_6) = &input.create_delegation_requests {
        let mut array_7 = object.key("createDelegationRequests").start_array();
        for item_8 in var_6 {
            {
                let mut object_9 = array_7.value().start_object();
                crate::json_ser::serialize_structure_crate_model_create_delegation_request(
                    &mut object_9,
                    item_8,
                );
                object_9.finish();
            }
        }
        array_7.finish();
    }
}

pub fn serialize_structure_crate_input_batch_delete_delegation_by_assessment_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchDeleteDelegationByAssessmentInput,
) {
    if let Some(var_10) = &input.delegation_ids {
        let mut array_11 = object.key("delegationIds").start_array();
        for item_12 in var_10 {
            {
                array_11.value().string(item_12);
            }
        }
        array_11.finish();
    }
}

pub fn serialize_structure_crate_input_batch_disassociate_assessment_report_evidence_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchDisassociateAssessmentReportEvidenceInput,
) {
    if let Some(var_13) = &input.evidence_folder_id {
        object.key("evidenceFolderId").string(var_13);
    }
    if let Some(var_14) = &input.evidence_ids {
        let mut array_15 = object.key("evidenceIds").start_array();
        for item_16 in var_14 {
            {
                array_15.value().string(item_16);
            }
        }
        array_15.finish();
    }
}

pub fn serialize_structure_crate_input_batch_import_evidence_to_assessment_control_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchImportEvidenceToAssessmentControlInput,
) {
    if let Some(var_17) = &input.manual_evidence {
        let mut array_18 = object.key("manualEvidence").start_array();
        for item_19 in var_17 {
            {
                let mut object_20 = array_18.value().start_object();
                crate::json_ser::serialize_structure_crate_model_manual_evidence(
                    &mut object_20,
                    item_19,
                );
                object_20.finish();
            }
        }
        array_18.finish();
    }
}

pub fn serialize_structure_crate_input_create_assessment_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAssessmentInput,
) {
    if let Some(var_21) = &input.assessment_reports_destination {
        let mut object_22 = object.key("assessmentReportsDestination").start_object();
        crate::json_ser::serialize_structure_crate_model_assessment_reports_destination(
            &mut object_22,
            var_21,
        );
        object_22.finish();
    }
    if let Some(var_23) = &input.description {
        object.key("description").string(var_23);
    }
    if let Some(var_24) = &input.framework_id {
        object.key("frameworkId").string(var_24);
    }
    if let Some(var_25) = &input.name {
        object.key("name").string(var_25);
    }
    if let Some(var_26) = &input.roles {
        let mut array_27 = object.key("roles").start_array();
        for item_28 in var_26 {
            {
                let mut object_29 = array_27.value().start_object();
                crate::json_ser::serialize_structure_crate_model_role(&mut object_29, item_28);
                object_29.finish();
            }
        }
        array_27.finish();
    }
    if let Some(var_30) = &input.scope {
        let mut object_31 = object.key("scope").start_object();
        crate::json_ser::serialize_structure_crate_model_scope(&mut object_31, var_30);
        object_31.finish();
    }
    if let Some(var_32) = &input.tags {
        let mut object_33 = object.key("tags").start_object();
        for (key_34, value_35) in var_32 {
            {
                object_33.key(key_34).string(value_35);
            }
        }
        object_33.finish();
    }
}

pub fn serialize_structure_crate_input_create_assessment_framework_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAssessmentFrameworkInput,
) {
    if let Some(var_36) = &input.compliance_type {
        object.key("complianceType").string(var_36);
    }
    if let Some(var_37) = &input.control_sets {
        let mut array_38 = object.key("controlSets").start_array();
        for item_39 in var_37 {
            {
                let mut object_40 = array_38.value().start_object();
                crate::json_ser::serialize_structure_crate_model_create_assessment_framework_control_set(&mut object_40, item_39);
                object_40.finish();
            }
        }
        array_38.finish();
    }
    if let Some(var_41) = &input.description {
        object.key("description").string(var_41);
    }
    if let Some(var_42) = &input.name {
        object.key("name").string(var_42);
    }
    if let Some(var_43) = &input.tags {
        let mut object_44 = object.key("tags").start_object();
        for (key_45, value_46) in var_43 {
            {
                object_44.key(key_45).string(value_46);
            }
        }
        object_44.finish();
    }
}

pub fn serialize_structure_crate_input_create_assessment_report_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAssessmentReportInput,
) {
    if let Some(var_47) = &input.description {
        object.key("description").string(var_47);
    }
    if let Some(var_48) = &input.name {
        object.key("name").string(var_48);
    }
}

pub fn serialize_structure_crate_input_create_control_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateControlInput,
) {
    if let Some(var_49) = &input.action_plan_instructions {
        object.key("actionPlanInstructions").string(var_49);
    }
    if let Some(var_50) = &input.action_plan_title {
        object.key("actionPlanTitle").string(var_50);
    }
    if let Some(var_51) = &input.control_mapping_sources {
        let mut array_52 = object.key("controlMappingSources").start_array();
        for item_53 in var_51 {
            {
                let mut object_54 = array_52.value().start_object();
                crate::json_ser::serialize_structure_crate_model_create_control_mapping_source(
                    &mut object_54,
                    item_53,
                );
                object_54.finish();
            }
        }
        array_52.finish();
    }
    if let Some(var_55) = &input.description {
        object.key("description").string(var_55);
    }
    if let Some(var_56) = &input.name {
        object.key("name").string(var_56);
    }
    if let Some(var_57) = &input.tags {
        let mut object_58 = object.key("tags").start_object();
        for (key_59, value_60) in var_57 {
            {
                object_58.key(key_59).string(value_60);
            }
        }
        object_58.finish();
    }
    if let Some(var_61) = &input.testing_information {
        object.key("testingInformation").string(var_61);
    }
}

pub fn serialize_structure_crate_input_deregister_organization_admin_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeregisterOrganizationAdminAccountInput,
) {
    if let Some(var_62) = &input.admin_account_id {
        object.key("adminAccountId").string(var_62);
    }
}

pub fn serialize_structure_crate_input_disassociate_assessment_report_evidence_folder_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateAssessmentReportEvidenceFolderInput,
) {
    if let Some(var_63) = &input.evidence_folder_id {
        object.key("evidenceFolderId").string(var_63);
    }
}

pub fn serialize_structure_crate_input_register_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RegisterAccountInput,
) {
    if let Some(var_64) = &input.delegated_admin_account {
        object.key("delegatedAdminAccount").string(var_64);
    }
    if let Some(var_65) = &input.kms_key {
        object.key("kmsKey").string(var_65);
    }
}

pub fn serialize_structure_crate_input_register_organization_admin_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RegisterOrganizationAdminAccountInput,
) {
    if let Some(var_66) = &input.admin_account_id {
        object.key("adminAccountId").string(var_66);
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_67) = &input.tags {
        let mut object_68 = object.key("tags").start_object();
        for (key_69, value_70) in var_67 {
            {
                object_68.key(key_69).string(value_70);
            }
        }
        object_68.finish();
    }
}

pub fn serialize_structure_crate_input_update_assessment_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAssessmentInput,
) {
    if let Some(var_71) = &input.assessment_description {
        object.key("assessmentDescription").string(var_71);
    }
    if let Some(var_72) = &input.assessment_name {
        object.key("assessmentName").string(var_72);
    }
    if let Some(var_73) = &input.assessment_reports_destination {
        let mut object_74 = object.key("assessmentReportsDestination").start_object();
        crate::json_ser::serialize_structure_crate_model_assessment_reports_destination(
            &mut object_74,
            var_73,
        );
        object_74.finish();
    }
    if let Some(var_75) = &input.roles {
        let mut array_76 = object.key("roles").start_array();
        for item_77 in var_75 {
            {
                let mut object_78 = array_76.value().start_object();
                crate::json_ser::serialize_structure_crate_model_role(&mut object_78, item_77);
                object_78.finish();
            }
        }
        array_76.finish();
    }
    if let Some(var_79) = &input.scope {
        let mut object_80 = object.key("scope").start_object();
        crate::json_ser::serialize_structure_crate_model_scope(&mut object_80, var_79);
        object_80.finish();
    }
}

pub fn serialize_structure_crate_input_update_assessment_control_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAssessmentControlInput,
) {
    if let Some(var_81) = &input.comment_body {
        object.key("commentBody").string(var_81);
    }
    if let Some(var_82) = &input.control_status {
        object.key("controlStatus").string(var_82.as_str());
    }
}

pub fn serialize_structure_crate_input_update_assessment_control_set_status_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAssessmentControlSetStatusInput,
) {
    if let Some(var_83) = &input.comment {
        object.key("comment").string(var_83);
    }
    if let Some(var_84) = &input.status {
        object.key("status").string(var_84.as_str());
    }
}

pub fn serialize_structure_crate_input_update_assessment_framework_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAssessmentFrameworkInput,
) {
    if let Some(var_85) = &input.compliance_type {
        object.key("complianceType").string(var_85);
    }
    if let Some(var_86) = &input.control_sets {
        let mut array_87 = object.key("controlSets").start_array();
        for item_88 in var_86 {
            {
                let mut object_89 = array_87.value().start_object();
                crate::json_ser::serialize_structure_crate_model_update_assessment_framework_control_set(&mut object_89, item_88);
                object_89.finish();
            }
        }
        array_87.finish();
    }
    if let Some(var_90) = &input.description {
        object.key("description").string(var_90);
    }
    if let Some(var_91) = &input.name {
        object.key("name").string(var_91);
    }
}

pub fn serialize_structure_crate_input_update_assessment_status_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAssessmentStatusInput,
) {
    if let Some(var_92) = &input.status {
        object.key("status").string(var_92.as_str());
    }
}

pub fn serialize_structure_crate_input_update_control_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateControlInput,
) {
    if let Some(var_93) = &input.action_plan_instructions {
        object.key("actionPlanInstructions").string(var_93);
    }
    if let Some(var_94) = &input.action_plan_title {
        object.key("actionPlanTitle").string(var_94);
    }
    if let Some(var_95) = &input.control_mapping_sources {
        let mut array_96 = object.key("controlMappingSources").start_array();
        for item_97 in var_95 {
            {
                let mut object_98 = array_96.value().start_object();
                crate::json_ser::serialize_structure_crate_model_control_mapping_source(
                    &mut object_98,
                    item_97,
                );
                object_98.finish();
            }
        }
        array_96.finish();
    }
    if let Some(var_99) = &input.description {
        object.key("description").string(var_99);
    }
    if let Some(var_100) = &input.name {
        object.key("name").string(var_100);
    }
    if let Some(var_101) = &input.testing_information {
        object.key("testingInformation").string(var_101);
    }
}

pub fn serialize_structure_crate_input_update_settings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateSettingsInput,
) {
    if let Some(var_102) = &input.default_assessment_reports_destination {
        let mut object_103 = object
            .key("defaultAssessmentReportsDestination")
            .start_object();
        crate::json_ser::serialize_structure_crate_model_assessment_reports_destination(
            &mut object_103,
            var_102,
        );
        object_103.finish();
    }
    if let Some(var_104) = &input.default_process_owners {
        let mut array_105 = object.key("defaultProcessOwners").start_array();
        for item_106 in var_104 {
            {
                let mut object_107 = array_105.value().start_object();
                crate::json_ser::serialize_structure_crate_model_role(&mut object_107, item_106);
                object_107.finish();
            }
        }
        array_105.finish();
    }
    if let Some(var_108) = &input.kms_key {
        object.key("kmsKey").string(var_108);
    }
    if let Some(var_109) = &input.sns_topic {
        object.key("snsTopic").string(var_109);
    }
}

pub fn serialize_structure_crate_input_validate_assessment_report_integrity_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ValidateAssessmentReportIntegrityInput,
) {
    if let Some(var_110) = &input.s3_relative_path {
        object.key("s3RelativePath").string(var_110);
    }
}

pub fn serialize_structure_crate_model_create_delegation_request(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CreateDelegationRequest,
) {
    if let Some(var_111) = &input.comment {
        object.key("comment").string(var_111);
    }
    if let Some(var_112) = &input.control_set_id {
        object.key("controlSetId").string(var_112);
    }
    if let Some(var_113) = &input.role_arn {
        object.key("roleArn").string(var_113);
    }
    if let Some(var_114) = &input.role_type {
        object.key("roleType").string(var_114.as_str());
    }
}

pub fn serialize_structure_crate_model_manual_evidence(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ManualEvidence,
) {
    if let Some(var_115) = &input.s3_resource_path {
        object.key("s3ResourcePath").string(var_115);
    }
}

pub fn serialize_structure_crate_model_assessment_reports_destination(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AssessmentReportsDestination,
) {
    if let Some(var_116) = &input.destination_type {
        object.key("destinationType").string(var_116.as_str());
    }
    if let Some(var_117) = &input.destination {
        object.key("destination").string(var_117);
    }
}

pub fn serialize_structure_crate_model_role(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Role,
) {
    if let Some(var_118) = &input.role_type {
        object.key("roleType").string(var_118.as_str());
    }
    if let Some(var_119) = &input.role_arn {
        object.key("roleArn").string(var_119);
    }
}

pub fn serialize_structure_crate_model_scope(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Scope,
) {
    if let Some(var_120) = &input.aws_accounts {
        let mut array_121 = object.key("awsAccounts").start_array();
        for item_122 in var_120 {
            {
                let mut object_123 = array_121.value().start_object();
                crate::json_ser::serialize_structure_crate_model_aws_account(
                    &mut object_123,
                    item_122,
                );
                object_123.finish();
            }
        }
        array_121.finish();
    }
    if let Some(var_124) = &input.aws_services {
        let mut array_125 = object.key("awsServices").start_array();
        for item_126 in var_124 {
            {
                let mut object_127 = array_125.value().start_object();
                crate::json_ser::serialize_structure_crate_model_aws_service(
                    &mut object_127,
                    item_126,
                );
                object_127.finish();
            }
        }
        array_125.finish();
    }
}

pub fn serialize_structure_crate_model_create_assessment_framework_control_set(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CreateAssessmentFrameworkControlSet,
) {
    if let Some(var_128) = &input.name {
        object.key("name").string(var_128);
    }
    if let Some(var_129) = &input.controls {
        let mut array_130 = object.key("controls").start_array();
        for item_131 in var_129 {
            {
                let mut object_132 = array_130.value().start_object();
                crate::json_ser::serialize_structure_crate_model_create_assessment_framework_control(&mut object_132, item_131);
                object_132.finish();
            }
        }
        array_130.finish();
    }
}

pub fn serialize_structure_crate_model_create_control_mapping_source(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CreateControlMappingSource,
) {
    if let Some(var_133) = &input.source_name {
        object.key("sourceName").string(var_133);
    }
    if let Some(var_134) = &input.source_description {
        object.key("sourceDescription").string(var_134);
    }
    if let Some(var_135) = &input.source_set_up_option {
        object.key("sourceSetUpOption").string(var_135.as_str());
    }
    if let Some(var_136) = &input.source_type {
        object.key("sourceType").string(var_136.as_str());
    }
    if let Some(var_137) = &input.source_keyword {
        let mut object_138 = object.key("sourceKeyword").start_object();
        crate::json_ser::serialize_structure_crate_model_source_keyword(&mut object_138, var_137);
        object_138.finish();
    }
    if let Some(var_139) = &input.source_frequency {
        object.key("sourceFrequency").string(var_139.as_str());
    }
    if let Some(var_140) = &input.troubleshooting_text {
        object.key("troubleshootingText").string(var_140);
    }
}

pub fn serialize_structure_crate_model_update_assessment_framework_control_set(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UpdateAssessmentFrameworkControlSet,
) {
    if let Some(var_141) = &input.id {
        object.key("id").string(var_141);
    }
    if let Some(var_142) = &input.name {
        object.key("name").string(var_142);
    }
    if let Some(var_143) = &input.controls {
        let mut array_144 = object.key("controls").start_array();
        for item_145 in var_143 {
            {
                let mut object_146 = array_144.value().start_object();
                crate::json_ser::serialize_structure_crate_model_create_assessment_framework_control(&mut object_146, item_145);
                object_146.finish();
            }
        }
        array_144.finish();
    }
}

pub fn serialize_structure_crate_model_control_mapping_source(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ControlMappingSource,
) {
    if let Some(var_147) = &input.source_id {
        object.key("sourceId").string(var_147);
    }
    if let Some(var_148) = &input.source_name {
        object.key("sourceName").string(var_148);
    }
    if let Some(var_149) = &input.source_description {
        object.key("sourceDescription").string(var_149);
    }
    if let Some(var_150) = &input.source_set_up_option {
        object.key("sourceSetUpOption").string(var_150.as_str());
    }
    if let Some(var_151) = &input.source_type {
        object.key("sourceType").string(var_151.as_str());
    }
    if let Some(var_152) = &input.source_keyword {
        let mut object_153 = object.key("sourceKeyword").start_object();
        crate::json_ser::serialize_structure_crate_model_source_keyword(&mut object_153, var_152);
        object_153.finish();
    }
    if let Some(var_154) = &input.source_frequency {
        object.key("sourceFrequency").string(var_154.as_str());
    }
    if let Some(var_155) = &input.troubleshooting_text {
        object.key("troubleshootingText").string(var_155);
    }
}

pub fn serialize_structure_crate_model_aws_account(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AwsAccount,
) {
    if let Some(var_156) = &input.id {
        object.key("id").string(var_156);
    }
    if let Some(var_157) = &input.email_address {
        object.key("emailAddress").string(var_157);
    }
    if let Some(var_158) = &input.name {
        object.key("name").string(var_158);
    }
}

pub fn serialize_structure_crate_model_aws_service(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AwsService,
) {
    if let Some(var_159) = &input.service_name {
        object.key("serviceName").string(var_159);
    }
}

pub fn serialize_structure_crate_model_create_assessment_framework_control(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CreateAssessmentFrameworkControl,
) {
    if let Some(var_160) = &input.id {
        object.key("id").string(var_160);
    }
}

pub fn serialize_structure_crate_model_source_keyword(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SourceKeyword,
) {
    if let Some(var_161) = &input.keyword_input_type {
        object.key("keywordInputType").string(var_161.as_str());
    }
    if let Some(var_162) = &input.keyword_value {
        object.key("keywordValue").string(var_162);
    }
}
