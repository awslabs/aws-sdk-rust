// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The wrapper of Amazon Web Services account details, such as account ID or email address. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsAccount {
    /// <p> The identifier for the Amazon Web Services account. </p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p> The email address that's associated with the Amazon Web Services account. </p>
    #[doc(hidden)]
    pub email_address: std::option::Option<std::string::String>,
    /// <p> The name of the Amazon Web Services account. </p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl AwsAccount {
    /// <p> The identifier for the Amazon Web Services account. </p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p> The email address that's associated with the Amazon Web Services account. </p>
    pub fn email_address(&self) -> std::option::Option<&str> {
        self.email_address.as_deref()
    }
    /// <p> The name of the Amazon Web Services account. </p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl AwsAccount {
    /// Creates a new builder-style object to manufacture [`AwsAccount`](crate::types::AwsAccount).
    pub fn builder() -> crate::types::builders::AwsAccountBuilder {
        crate::types::builders::AwsAccountBuilder::default()
    }
}

/// A builder for [`AwsAccount`](crate::types::AwsAccount).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsAccountBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) email_address: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
}
impl AwsAccountBuilder {
    /// <p> The identifier for the Amazon Web Services account. </p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p> The identifier for the Amazon Web Services account. </p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p> The email address that's associated with the Amazon Web Services account. </p>
    pub fn email_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.email_address = Some(input.into());
        self
    }
    /// <p> The email address that's associated with the Amazon Web Services account. </p>
    pub fn set_email_address(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.email_address = input;
        self
    }
    /// <p> The name of the Amazon Web Services account. </p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p> The name of the Amazon Web Services account. </p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsAccount`](crate::types::AwsAccount).
    pub fn build(self) -> crate::types::AwsAccount {
        crate::types::AwsAccount {
            id: self.id,
            email_address: self.email_address,
            name: self.name,
        }
    }
}
