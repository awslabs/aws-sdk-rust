// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> An error entity for the <code>BatchCreateDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchCreateDelegationByAssessmentError {
    /// <p> The API request to batch create delegations in Audit Manager. </p>
    #[doc(hidden)]
    pub create_delegation_request: std::option::Option<crate::types::CreateDelegationRequest>,
    /// <p> The error code that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>
    #[doc(hidden)]
    pub error_code: std::option::Option<std::string::String>,
    /// <p> The error message that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>
    #[doc(hidden)]
    pub error_message: std::option::Option<std::string::String>,
}
impl BatchCreateDelegationByAssessmentError {
    /// <p> The API request to batch create delegations in Audit Manager. </p>
    pub fn create_delegation_request(
        &self,
    ) -> std::option::Option<&crate::types::CreateDelegationRequest> {
        self.create_delegation_request.as_ref()
    }
    /// <p> The error code that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>
    pub fn error_code(&self) -> std::option::Option<&str> {
        self.error_code.as_deref()
    }
    /// <p> The error message that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>
    pub fn error_message(&self) -> std::option::Option<&str> {
        self.error_message.as_deref()
    }
}
impl BatchCreateDelegationByAssessmentError {
    /// Creates a new builder-style object to manufacture [`BatchCreateDelegationByAssessmentError`](crate::types::BatchCreateDelegationByAssessmentError).
    pub fn builder() -> crate::types::builders::BatchCreateDelegationByAssessmentErrorBuilder {
        crate::types::builders::BatchCreateDelegationByAssessmentErrorBuilder::default()
    }
}

/// A builder for [`BatchCreateDelegationByAssessmentError`](crate::types::BatchCreateDelegationByAssessmentError).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchCreateDelegationByAssessmentErrorBuilder {
    pub(crate) create_delegation_request:
        std::option::Option<crate::types::CreateDelegationRequest>,
    pub(crate) error_code: std::option::Option<std::string::String>,
    pub(crate) error_message: std::option::Option<std::string::String>,
}
impl BatchCreateDelegationByAssessmentErrorBuilder {
    /// <p> The API request to batch create delegations in Audit Manager. </p>
    pub fn create_delegation_request(
        mut self,
        input: crate::types::CreateDelegationRequest,
    ) -> Self {
        self.create_delegation_request = Some(input);
        self
    }
    /// <p> The API request to batch create delegations in Audit Manager. </p>
    pub fn set_create_delegation_request(
        mut self,
        input: std::option::Option<crate::types::CreateDelegationRequest>,
    ) -> Self {
        self.create_delegation_request = input;
        self
    }
    /// <p> The error code that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>
    pub fn error_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.error_code = Some(input.into());
        self
    }
    /// <p> The error code that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>
    pub fn set_error_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error_code = input;
        self
    }
    /// <p> The error message that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>
    pub fn error_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.error_message = Some(input.into());
        self
    }
    /// <p> The error message that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>
    pub fn set_error_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchCreateDelegationByAssessmentError`](crate::types::BatchCreateDelegationByAssessmentError).
    pub fn build(self) -> crate::types::BatchCreateDelegationByAssessmentError {
        crate::types::BatchCreateDelegationByAssessmentError {
            create_delegation_request: self.create_delegation_request,
            error_code: self.error_code,
            error_message: self.error_message,
        }
    }
}
