// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Evidence that's uploaded to Audit Manager manually. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ManualEvidence {
    /// <p> The Amazon S3 URL that points to a manual evidence object. </p>
    #[doc(hidden)]
    pub s3_resource_path: std::option::Option<std::string::String>,
}
impl ManualEvidence {
    /// <p> The Amazon S3 URL that points to a manual evidence object. </p>
    pub fn s3_resource_path(&self) -> std::option::Option<&str> {
        self.s3_resource_path.as_deref()
    }
}
impl ManualEvidence {
    /// Creates a new builder-style object to manufacture [`ManualEvidence`](crate::types::ManualEvidence).
    pub fn builder() -> crate::types::builders::ManualEvidenceBuilder {
        crate::types::builders::ManualEvidenceBuilder::default()
    }
}

/// A builder for [`ManualEvidence`](crate::types::ManualEvidence).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ManualEvidenceBuilder {
    pub(crate) s3_resource_path: std::option::Option<std::string::String>,
}
impl ManualEvidenceBuilder {
    /// <p> The Amazon S3 URL that points to a manual evidence object. </p>
    pub fn s3_resource_path(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_resource_path = Some(input.into());
        self
    }
    /// <p> The Amazon S3 URL that points to a manual evidence object. </p>
    pub fn set_s3_resource_path(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_resource_path = input;
        self
    }
    /// Consumes the builder and constructs a [`ManualEvidence`](crate::types::ManualEvidence).
    pub fn build(self) -> crate::types::ManualEvidence {
        crate::types::ManualEvidence {
            s3_resource_path: self.s3_resource_path,
        }
    }
}
