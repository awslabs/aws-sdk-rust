// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartAssessmentFrameworkShareInput {
    /// <p> The unique identifier for the custom framework to be shared. </p>
    #[doc(hidden)]
    pub framework_id: std::option::Option<std::string::String>,
    /// <p> The Amazon Web Services account of the recipient. </p>
    #[doc(hidden)]
    pub destination_account: std::option::Option<std::string::String>,
    /// <p> The Amazon Web Services Region of the recipient. </p>
    #[doc(hidden)]
    pub destination_region: std::option::Option<std::string::String>,
    /// <p> An optional comment from the sender about the share request. </p>
    #[doc(hidden)]
    pub comment: std::option::Option<std::string::String>,
}
impl StartAssessmentFrameworkShareInput {
    /// <p> The unique identifier for the custom framework to be shared. </p>
    pub fn framework_id(&self) -> std::option::Option<&str> {
        self.framework_id.as_deref()
    }
    /// <p> The Amazon Web Services account of the recipient. </p>
    pub fn destination_account(&self) -> std::option::Option<&str> {
        self.destination_account.as_deref()
    }
    /// <p> The Amazon Web Services Region of the recipient. </p>
    pub fn destination_region(&self) -> std::option::Option<&str> {
        self.destination_region.as_deref()
    }
    /// <p> An optional comment from the sender about the share request. </p>
    pub fn comment(&self) -> std::option::Option<&str> {
        self.comment.as_deref()
    }
}
impl StartAssessmentFrameworkShareInput {
    /// Creates a new builder-style object to manufacture [`StartAssessmentFrameworkShareInput`](crate::operation::start_assessment_framework_share::StartAssessmentFrameworkShareInput).
    pub fn builder() -> crate::operation::start_assessment_framework_share::builders::StartAssessmentFrameworkShareInputBuilder{
        crate::operation::start_assessment_framework_share::builders::StartAssessmentFrameworkShareInputBuilder::default()
    }
}

/// A builder for [`StartAssessmentFrameworkShareInput`](crate::operation::start_assessment_framework_share::StartAssessmentFrameworkShareInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartAssessmentFrameworkShareInputBuilder {
    pub(crate) framework_id: std::option::Option<std::string::String>,
    pub(crate) destination_account: std::option::Option<std::string::String>,
    pub(crate) destination_region: std::option::Option<std::string::String>,
    pub(crate) comment: std::option::Option<std::string::String>,
}
impl StartAssessmentFrameworkShareInputBuilder {
    /// <p> The unique identifier for the custom framework to be shared. </p>
    pub fn framework_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.framework_id = Some(input.into());
        self
    }
    /// <p> The unique identifier for the custom framework to be shared. </p>
    pub fn set_framework_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.framework_id = input;
        self
    }
    /// <p> The Amazon Web Services account of the recipient. </p>
    pub fn destination_account(mut self, input: impl Into<std::string::String>) -> Self {
        self.destination_account = Some(input.into());
        self
    }
    /// <p> The Amazon Web Services account of the recipient. </p>
    pub fn set_destination_account(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.destination_account = input;
        self
    }
    /// <p> The Amazon Web Services Region of the recipient. </p>
    pub fn destination_region(mut self, input: impl Into<std::string::String>) -> Self {
        self.destination_region = Some(input.into());
        self
    }
    /// <p> The Amazon Web Services Region of the recipient. </p>
    pub fn set_destination_region(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.destination_region = input;
        self
    }
    /// <p> An optional comment from the sender about the share request. </p>
    pub fn comment(mut self, input: impl Into<std::string::String>) -> Self {
        self.comment = Some(input.into());
        self
    }
    /// <p> An optional comment from the sender about the share request. </p>
    pub fn set_comment(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.comment = input;
        self
    }
    /// Consumes the builder and constructs a [`StartAssessmentFrameworkShareInput`](crate::operation::start_assessment_framework_share::StartAssessmentFrameworkShareInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::start_assessment_framework_share::StartAssessmentFrameworkShareInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::start_assessment_framework_share::StartAssessmentFrameworkShareInput {
                framework_id: self.framework_id
                ,
                destination_account: self.destination_account
                ,
                destination_region: self.destination_region
                ,
                comment: self.comment
                ,
            }
        )
    }
}
