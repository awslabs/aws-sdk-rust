// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetOrganizationAdminAccountOutput {
    /// <p> The identifier for the administrator account. </p>
    #[doc(hidden)]
    pub admin_account_id: std::option::Option<std::string::String>,
    /// <p> The identifier for the organization. </p>
    #[doc(hidden)]
    pub organization_id: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetOrganizationAdminAccountOutput {
    /// <p> The identifier for the administrator account. </p>
    pub fn admin_account_id(&self) -> std::option::Option<&str> {
        self.admin_account_id.as_deref()
    }
    /// <p> The identifier for the organization. </p>
    pub fn organization_id(&self) -> std::option::Option<&str> {
        self.organization_id.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetOrganizationAdminAccountOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetOrganizationAdminAccountOutput {
    /// Creates a new builder-style object to manufacture [`GetOrganizationAdminAccountOutput`](crate::operation::get_organization_admin_account::GetOrganizationAdminAccountOutput).
    pub fn builder() -> crate::operation::get_organization_admin_account::builders::GetOrganizationAdminAccountOutputBuilder{
        crate::operation::get_organization_admin_account::builders::GetOrganizationAdminAccountOutputBuilder::default()
    }
}

/// A builder for [`GetOrganizationAdminAccountOutput`](crate::operation::get_organization_admin_account::GetOrganizationAdminAccountOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetOrganizationAdminAccountOutputBuilder {
    pub(crate) admin_account_id: std::option::Option<std::string::String>,
    pub(crate) organization_id: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetOrganizationAdminAccountOutputBuilder {
    /// <p> The identifier for the administrator account. </p>
    pub fn admin_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.admin_account_id = Some(input.into());
        self
    }
    /// <p> The identifier for the administrator account. </p>
    pub fn set_admin_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.admin_account_id = input;
        self
    }
    /// <p> The identifier for the organization. </p>
    pub fn organization_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organization_id = Some(input.into());
        self
    }
    /// <p> The identifier for the organization. </p>
    pub fn set_organization_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetOrganizationAdminAccountOutput`](crate::operation::get_organization_admin_account::GetOrganizationAdminAccountOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_organization_admin_account::GetOrganizationAdminAccountOutput {
        crate::operation::get_organization_admin_account::GetOrganizationAdminAccountOutput {
            admin_account_id: self.admin_account_id,
            organization_id: self.organization_id,
            _request_id: self._request_id,
        }
    }
}
