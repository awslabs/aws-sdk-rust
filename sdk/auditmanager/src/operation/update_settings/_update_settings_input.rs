// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateSettingsInput {
    /// <p> The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. </p>
    #[doc(hidden)]
    pub sns_topic: std::option::Option<std::string::String>,
    /// <p> The default storage destination for assessment reports. </p>
    #[doc(hidden)]
    pub default_assessment_reports_destination:
        std::option::Option<crate::types::AssessmentReportsDestination>,
    /// <p> A list of the default audit owners. </p>
    #[doc(hidden)]
    pub default_process_owners: std::option::Option<std::vec::Vec<crate::types::Role>>,
    /// <p> The KMS key details. </p>
    #[doc(hidden)]
    pub kms_key: std::option::Option<std::string::String>,
    /// <p>Specifies whether the evidence finder feature is enabled. Change this attribute to enable or disable evidence finder.</p> <important>
    /// <p>When you use this attribute to disable evidence finder, Audit Manager deletes the event data store that’s used to query your evidence data. As a result, you can’t re-enable evidence finder and use the feature again. Your only alternative is to <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html">deregister</a> and then <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html">re-register</a> Audit Manager. </p>
    /// </important>
    #[doc(hidden)]
    pub evidence_finder_enabled: std::option::Option<bool>,
    /// <p>The deregistration policy for your Audit Manager data. You can use this attribute to determine how your data is handled when you deregister Audit Manager.</p>
    #[doc(hidden)]
    pub deregistration_policy: std::option::Option<crate::types::DeregistrationPolicy>,
}
impl UpdateSettingsInput {
    /// <p> The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. </p>
    pub fn sns_topic(&self) -> std::option::Option<&str> {
        self.sns_topic.as_deref()
    }
    /// <p> The default storage destination for assessment reports. </p>
    pub fn default_assessment_reports_destination(
        &self,
    ) -> std::option::Option<&crate::types::AssessmentReportsDestination> {
        self.default_assessment_reports_destination.as_ref()
    }
    /// <p> A list of the default audit owners. </p>
    pub fn default_process_owners(&self) -> std::option::Option<&[crate::types::Role]> {
        self.default_process_owners.as_deref()
    }
    /// <p> The KMS key details. </p>
    pub fn kms_key(&self) -> std::option::Option<&str> {
        self.kms_key.as_deref()
    }
    /// <p>Specifies whether the evidence finder feature is enabled. Change this attribute to enable or disable evidence finder.</p> <important>
    /// <p>When you use this attribute to disable evidence finder, Audit Manager deletes the event data store that’s used to query your evidence data. As a result, you can’t re-enable evidence finder and use the feature again. Your only alternative is to <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html">deregister</a> and then <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html">re-register</a> Audit Manager. </p>
    /// </important>
    pub fn evidence_finder_enabled(&self) -> std::option::Option<bool> {
        self.evidence_finder_enabled
    }
    /// <p>The deregistration policy for your Audit Manager data. You can use this attribute to determine how your data is handled when you deregister Audit Manager.</p>
    pub fn deregistration_policy(
        &self,
    ) -> std::option::Option<&crate::types::DeregistrationPolicy> {
        self.deregistration_policy.as_ref()
    }
}
impl UpdateSettingsInput {
    /// Creates a new builder-style object to manufacture [`UpdateSettingsInput`](crate::operation::update_settings::UpdateSettingsInput).
    pub fn builder() -> crate::operation::update_settings::builders::UpdateSettingsInputBuilder {
        crate::operation::update_settings::builders::UpdateSettingsInputBuilder::default()
    }
}

/// A builder for [`UpdateSettingsInput`](crate::operation::update_settings::UpdateSettingsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateSettingsInputBuilder {
    pub(crate) sns_topic: std::option::Option<std::string::String>,
    pub(crate) default_assessment_reports_destination:
        std::option::Option<crate::types::AssessmentReportsDestination>,
    pub(crate) default_process_owners: std::option::Option<std::vec::Vec<crate::types::Role>>,
    pub(crate) kms_key: std::option::Option<std::string::String>,
    pub(crate) evidence_finder_enabled: std::option::Option<bool>,
    pub(crate) deregistration_policy: std::option::Option<crate::types::DeregistrationPolicy>,
}
impl UpdateSettingsInputBuilder {
    /// <p> The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. </p>
    pub fn sns_topic(mut self, input: impl Into<std::string::String>) -> Self {
        self.sns_topic = Some(input.into());
        self
    }
    /// <p> The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. </p>
    pub fn set_sns_topic(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.sns_topic = input;
        self
    }
    /// <p> The default storage destination for assessment reports. </p>
    pub fn default_assessment_reports_destination(
        mut self,
        input: crate::types::AssessmentReportsDestination,
    ) -> Self {
        self.default_assessment_reports_destination = Some(input);
        self
    }
    /// <p> The default storage destination for assessment reports. </p>
    pub fn set_default_assessment_reports_destination(
        mut self,
        input: std::option::Option<crate::types::AssessmentReportsDestination>,
    ) -> Self {
        self.default_assessment_reports_destination = input;
        self
    }
    /// Appends an item to `default_process_owners`.
    ///
    /// To override the contents of this collection use [`set_default_process_owners`](Self::set_default_process_owners).
    ///
    /// <p> A list of the default audit owners. </p>
    pub fn default_process_owners(mut self, input: crate::types::Role) -> Self {
        let mut v = self.default_process_owners.unwrap_or_default();
        v.push(input);
        self.default_process_owners = Some(v);
        self
    }
    /// <p> A list of the default audit owners. </p>
    pub fn set_default_process_owners(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Role>>,
    ) -> Self {
        self.default_process_owners = input;
        self
    }
    /// <p> The KMS key details. </p>
    pub fn kms_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.kms_key = Some(input.into());
        self
    }
    /// <p> The KMS key details. </p>
    pub fn set_kms_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.kms_key = input;
        self
    }
    /// <p>Specifies whether the evidence finder feature is enabled. Change this attribute to enable or disable evidence finder.</p> <important>
    /// <p>When you use this attribute to disable evidence finder, Audit Manager deletes the event data store that’s used to query your evidence data. As a result, you can’t re-enable evidence finder and use the feature again. Your only alternative is to <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html">deregister</a> and then <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html">re-register</a> Audit Manager. </p>
    /// </important>
    pub fn evidence_finder_enabled(mut self, input: bool) -> Self {
        self.evidence_finder_enabled = Some(input);
        self
    }
    /// <p>Specifies whether the evidence finder feature is enabled. Change this attribute to enable or disable evidence finder.</p> <important>
    /// <p>When you use this attribute to disable evidence finder, Audit Manager deletes the event data store that’s used to query your evidence data. As a result, you can’t re-enable evidence finder and use the feature again. Your only alternative is to <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html">deregister</a> and then <a href="https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html">re-register</a> Audit Manager. </p>
    /// </important>
    pub fn set_evidence_finder_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.evidence_finder_enabled = input;
        self
    }
    /// <p>The deregistration policy for your Audit Manager data. You can use this attribute to determine how your data is handled when you deregister Audit Manager.</p>
    pub fn deregistration_policy(mut self, input: crate::types::DeregistrationPolicy) -> Self {
        self.deregistration_policy = Some(input);
        self
    }
    /// <p>The deregistration policy for your Audit Manager data. You can use this attribute to determine how your data is handled when you deregister Audit Manager.</p>
    pub fn set_deregistration_policy(
        mut self,
        input: std::option::Option<crate::types::DeregistrationPolicy>,
    ) -> Self {
        self.deregistration_policy = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateSettingsInput`](crate::operation::update_settings::UpdateSettingsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_settings::UpdateSettingsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::update_settings::UpdateSettingsInput {
            sns_topic: self.sns_topic,
            default_assessment_reports_destination: self.default_assessment_reports_destination,
            default_process_owners: self.default_process_owners,
            kms_key: self.kms_key,
            evidence_finder_enabled: self.evidence_finder_enabled,
            deregistration_policy: self.deregistration_policy,
        })
    }
}
