// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchDeleteDelegationByAssessmentInput {
    /// <p> The identifiers for the delegations. </p>
    #[doc(hidden)]
    pub delegation_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p> The identifier for the assessment. </p>
    #[doc(hidden)]
    pub assessment_id: std::option::Option<std::string::String>,
}
impl BatchDeleteDelegationByAssessmentInput {
    /// <p> The identifiers for the delegations. </p>
    pub fn delegation_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.delegation_ids.as_deref()
    }
    /// <p> The identifier for the assessment. </p>
    pub fn assessment_id(&self) -> std::option::Option<&str> {
        self.assessment_id.as_deref()
    }
}
impl BatchDeleteDelegationByAssessmentInput {
    /// Creates a new builder-style object to manufacture [`BatchDeleteDelegationByAssessmentInput`](crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentInput).
    pub fn builder() -> crate::operation::batch_delete_delegation_by_assessment::builders::BatchDeleteDelegationByAssessmentInputBuilder{
        crate::operation::batch_delete_delegation_by_assessment::builders::BatchDeleteDelegationByAssessmentInputBuilder::default()
    }
}

/// A builder for [`BatchDeleteDelegationByAssessmentInput`](crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchDeleteDelegationByAssessmentInputBuilder {
    pub(crate) delegation_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) assessment_id: std::option::Option<std::string::String>,
}
impl BatchDeleteDelegationByAssessmentInputBuilder {
    /// Appends an item to `delegation_ids`.
    ///
    /// To override the contents of this collection use [`set_delegation_ids`](Self::set_delegation_ids).
    ///
    /// <p> The identifiers for the delegations. </p>
    pub fn delegation_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.delegation_ids.unwrap_or_default();
        v.push(input.into());
        self.delegation_ids = Some(v);
        self
    }
    /// <p> The identifiers for the delegations. </p>
    pub fn set_delegation_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.delegation_ids = input;
        self
    }
    /// <p> The identifier for the assessment. </p>
    pub fn assessment_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.assessment_id = Some(input.into());
        self
    }
    /// <p> The identifier for the assessment. </p>
    pub fn set_assessment_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.assessment_id = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchDeleteDelegationByAssessmentInput`](crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentInput).
    pub fn build(self) -> Result<crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentInput {
                delegation_ids: self.delegation_ids
                ,
                assessment_id: self.assessment_id
                ,
            }
        )
    }
}
