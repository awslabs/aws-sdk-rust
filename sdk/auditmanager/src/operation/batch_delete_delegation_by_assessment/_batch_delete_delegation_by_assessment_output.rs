// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchDeleteDelegationByAssessmentOutput {
    /// <p> A list of errors that the <code>BatchDeleteDelegationByAssessment</code> API returned. </p>
    #[doc(hidden)]
    pub errors:
        std::option::Option<std::vec::Vec<crate::types::BatchDeleteDelegationByAssessmentError>>,
    _request_id: Option<String>,
}
impl BatchDeleteDelegationByAssessmentOutput {
    /// <p> A list of errors that the <code>BatchDeleteDelegationByAssessment</code> API returned. </p>
    pub fn errors(
        &self,
    ) -> std::option::Option<&[crate::types::BatchDeleteDelegationByAssessmentError]> {
        self.errors.as_deref()
    }
}
impl aws_http::request_id::RequestId for BatchDeleteDelegationByAssessmentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchDeleteDelegationByAssessmentOutput {
    /// Creates a new builder-style object to manufacture [`BatchDeleteDelegationByAssessmentOutput`](crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentOutput).
    pub fn builder() -> crate::operation::batch_delete_delegation_by_assessment::builders::BatchDeleteDelegationByAssessmentOutputBuilder{
        crate::operation::batch_delete_delegation_by_assessment::builders::BatchDeleteDelegationByAssessmentOutputBuilder::default()
    }
}

/// A builder for [`BatchDeleteDelegationByAssessmentOutput`](crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchDeleteDelegationByAssessmentOutputBuilder {
    pub(crate) errors:
        std::option::Option<std::vec::Vec<crate::types::BatchDeleteDelegationByAssessmentError>>,
    _request_id: Option<String>,
}
impl BatchDeleteDelegationByAssessmentOutputBuilder {
    /// Appends an item to `errors`.
    ///
    /// To override the contents of this collection use [`set_errors`](Self::set_errors).
    ///
    /// <p> A list of errors that the <code>BatchDeleteDelegationByAssessment</code> API returned. </p>
    pub fn errors(mut self, input: crate::types::BatchDeleteDelegationByAssessmentError) -> Self {
        let mut v = self.errors.unwrap_or_default();
        v.push(input);
        self.errors = Some(v);
        self
    }
    /// <p> A list of errors that the <code>BatchDeleteDelegationByAssessment</code> API returned. </p>
    pub fn set_errors(
        mut self,
        input: std::option::Option<
            std::vec::Vec<crate::types::BatchDeleteDelegationByAssessmentError>,
        >,
    ) -> Self {
        self.errors = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchDeleteDelegationByAssessmentOutput`](crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentOutput).
    pub fn build(self) -> crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentOutput{
        crate::operation::batch_delete_delegation_by_assessment::BatchDeleteDelegationByAssessmentOutput {
            errors: self.errors
            ,
            _request_id: self._request_id,
        }
    }
}
