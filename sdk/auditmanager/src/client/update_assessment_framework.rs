// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateAssessmentFramework`](crate::client::fluent_builders::UpdateAssessmentFramework) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`framework_id(impl Into<String>)`](crate::client::fluent_builders::UpdateAssessmentFramework::framework_id) / [`set_framework_id(Option<String>)`](crate::client::fluent_builders::UpdateAssessmentFramework::set_framework_id): <p> The unique identifier for the framework. </p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateAssessmentFramework::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateAssessmentFramework::set_name): <p> The name of the framework to be updated. </p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateAssessmentFramework::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateAssessmentFramework::set_description): <p> The description of the updated framework. </p>
    ///   - [`compliance_type(impl Into<String>)`](crate::client::fluent_builders::UpdateAssessmentFramework::compliance_type) / [`set_compliance_type(Option<String>)`](crate::client::fluent_builders::UpdateAssessmentFramework::set_compliance_type): <p> The compliance type that the new custom framework supports, such as CIS or HIPAA. </p>
    ///   - [`control_sets(Vec<UpdateAssessmentFrameworkControlSet>)`](crate::client::fluent_builders::UpdateAssessmentFramework::control_sets) / [`set_control_sets(Option<Vec<UpdateAssessmentFrameworkControlSet>>)`](crate::client::fluent_builders::UpdateAssessmentFramework::set_control_sets): <p> The control sets that are associated with the framework. </p>
    /// - On success, responds with [`UpdateAssessmentFrameworkOutput`](crate::output::UpdateAssessmentFrameworkOutput) with field(s):
    ///   - [`framework(Option<Framework>)`](crate::output::UpdateAssessmentFrameworkOutput::framework): <p> The name of the framework. </p>
    /// - On failure, responds with [`SdkError<UpdateAssessmentFrameworkError>`](crate::error::UpdateAssessmentFrameworkError)
    pub fn update_assessment_framework(
        &self,
    ) -> crate::client::fluent_builders::UpdateAssessmentFramework {
        crate::client::fluent_builders::UpdateAssessmentFramework::new(self.handle.clone())
    }
}
