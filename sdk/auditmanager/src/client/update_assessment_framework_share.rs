// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateAssessmentFrameworkShare`](crate::client::fluent_builders::UpdateAssessmentFrameworkShare) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`request_id(impl Into<String>)`](crate::client::fluent_builders::UpdateAssessmentFrameworkShare::request_id) / [`set_request_id(Option<String>)`](crate::client::fluent_builders::UpdateAssessmentFrameworkShare::set_request_id): <p> The unique identifier for the share request. </p>
    ///   - [`request_type(ShareRequestType)`](crate::client::fluent_builders::UpdateAssessmentFrameworkShare::request_type) / [`set_request_type(Option<ShareRequestType>)`](crate::client::fluent_builders::UpdateAssessmentFrameworkShare::set_request_type): <p>Specifies whether the share request is a sent request or a received request.</p>
    ///   - [`action(ShareRequestAction)`](crate::client::fluent_builders::UpdateAssessmentFrameworkShare::action) / [`set_action(Option<ShareRequestAction>)`](crate::client::fluent_builders::UpdateAssessmentFrameworkShare::set_action): <p>Specifies the update action for the share request.</p>
    /// - On success, responds with [`UpdateAssessmentFrameworkShareOutput`](crate::output::UpdateAssessmentFrameworkShareOutput) with field(s):
    ///   - [`assessment_framework_share_request(Option<AssessmentFrameworkShareRequest>)`](crate::output::UpdateAssessmentFrameworkShareOutput::assessment_framework_share_request): <p> The updated share request that's returned by the <code>UpdateAssessmentFrameworkShare</code> operation. </p>
    /// - On failure, responds with [`SdkError<UpdateAssessmentFrameworkShareError>`](crate::error::UpdateAssessmentFrameworkShareError)
    pub fn update_assessment_framework_share(
        &self,
    ) -> crate::client::fluent_builders::UpdateAssessmentFrameworkShare {
        crate::client::fluent_builders::UpdateAssessmentFrameworkShare::new(self.handle.clone())
    }
}
