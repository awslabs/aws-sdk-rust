// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAssessmentControlInsightsByControlDomain`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`control_domain_id(impl Into<String>)`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::control_domain_id) / [`set_control_domain_id(Option<String>)`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::set_control_domain_id):<br>required: **true**<br><p>The unique identifier for the control domain. </p><br>
    ///   - [`assessment_id(impl Into<String>)`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::assessment_id) / [`set_assessment_id(Option<String>)`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::set_assessment_id):<br>required: **true**<br><p>The unique identifier for the active assessment. </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token that's used to fetch the next set of results. </p><br>
    ///   - [`max_results(i32)`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::set_max_results):<br>required: **false**<br><p>Represents the maximum number of results on a page or for an API request call. </p><br>
    /// - On success, responds with [`ListAssessmentControlInsightsByControlDomainOutput`](crate::operation::list_assessment_control_insights_by_control_domain::ListAssessmentControlInsightsByControlDomainOutput) with field(s):
    ///   - [`control_insights_by_assessment(Option<Vec::<ControlInsightsMetadataByAssessmentItem>>)`](crate::operation::list_assessment_control_insights_by_control_domain::ListAssessmentControlInsightsByControlDomainOutput::control_insights_by_assessment): <p>The assessment control analytics data that the <code>ListAssessmentControlInsightsByControlDomain</code> API returned. </p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_assessment_control_insights_by_control_domain::ListAssessmentControlInsightsByControlDomainOutput::next_token): <p>The pagination token that's used to fetch the next set of results. </p>
    /// - On failure, responds with [`SdkError<ListAssessmentControlInsightsByControlDomainError>`](crate::operation::list_assessment_control_insights_by_control_domain::ListAssessmentControlInsightsByControlDomainError)
    pub fn list_assessment_control_insights_by_control_domain(
        &self,
    ) -> crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder
    {
        crate::operation::list_assessment_control_insights_by_control_domain::builders::ListAssessmentControlInsightsByControlDomainFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
