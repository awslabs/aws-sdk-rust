// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListControlInsightsByControlDomain`](crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`control_domain_id(impl Into<String>)`](crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder::control_domain_id) / [`set_control_domain_id(Option<String>)`](crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder::set_control_domain_id):<br>required: **true**<br><p>The unique identifier for the control domain. </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token that's used to fetch the next set of results. </p><br>
    ///   - [`max_results(i32)`](crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder::set_max_results):<br>required: **false**<br><p>Represents the maximum number of results on a page or for an API request call. </p><br>
    /// - On success, responds with [`ListControlInsightsByControlDomainOutput`](crate::operation::list_control_insights_by_control_domain::ListControlInsightsByControlDomainOutput) with field(s):
    ///   - [`control_insights_metadata(Option<Vec::<ControlInsightsMetadataItem>>)`](crate::operation::list_control_insights_by_control_domain::ListControlInsightsByControlDomainOutput::control_insights_metadata): <p>The control analytics data that the <code>ListControlInsightsByControlDomain</code> API returned. </p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_control_insights_by_control_domain::ListControlInsightsByControlDomainOutput::next_token): <p>The pagination token that's used to fetch the next set of results. </p>
    /// - On failure, responds with [`SdkError<ListControlInsightsByControlDomainError>`](crate::operation::list_control_insights_by_control_domain::ListControlInsightsByControlDomainError)
    pub fn list_control_insights_by_control_domain(
        &self,
    ) -> crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder {
        crate::operation::list_control_insights_by_control_domain::builders::ListControlInsightsByControlDomainFluentBuilder::new(self.handle.clone())
    }
}
