// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateControl`](crate::operation::create_control::builders::CreateControlFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::set_name):<br>required: **true**<br><p> The name of the control. </p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::set_description):<br>required: **false**<br><p> The description of the control. </p><br>
    ///   - [`testing_information(impl Into<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::testing_information) / [`set_testing_information(Option<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::set_testing_information):<br>required: **false**<br><p> The steps to follow to determine if the control is satisfied. </p><br>
    ///   - [`action_plan_title(impl Into<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::action_plan_title) / [`set_action_plan_title(Option<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::set_action_plan_title):<br>required: **false**<br><p> The title of the action plan for remediating the control. </p><br>
    ///   - [`action_plan_instructions(impl Into<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::action_plan_instructions) / [`set_action_plan_instructions(Option<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::set_action_plan_instructions):<br>required: **false**<br><p> The recommended actions to carry out if the control isn't fulfilled. </p><br>
    ///   - [`control_mapping_sources(CreateControlMappingSource)`](crate::operation::create_control::builders::CreateControlFluentBuilder::control_mapping_sources) / [`set_control_mapping_sources(Option<Vec::<CreateControlMappingSource>>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::set_control_mapping_sources):<br>required: **true**<br><p> The data mapping sources for the control. </p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_control::builders::CreateControlFluentBuilder::set_tags):<br>required: **false**<br><p> The tags that are associated with the control. </p><br>
    /// - On success, responds with [`CreateControlOutput`](crate::operation::create_control::CreateControlOutput) with field(s):
    ///   - [`control(Option<Control>)`](crate::operation::create_control::CreateControlOutput::control): <p> The new control that the <code>CreateControl</code> API returned. </p>
    /// - On failure, responds with [`SdkError<CreateControlError>`](crate::operation::create_control::CreateControlError)
    pub fn create_control(&self) -> crate::operation::create_control::builders::CreateControlFluentBuilder {
        crate::operation::create_control::builders::CreateControlFluentBuilder::new(self.handle.clone())
    }
}
