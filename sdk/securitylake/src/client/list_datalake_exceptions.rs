// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListDatalakeExceptions`](crate::client::fluent_builders::ListDatalakeExceptions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListDatalakeExceptions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`region_set(Vec<Region>)`](crate::client::fluent_builders::ListDatalakeExceptions::region_set) / [`set_region_set(Option<Vec<Region>>)`](crate::client::fluent_builders::ListDatalakeExceptions::set_region_set): <p>List the Amazon Web Services Regions from which exceptions are retrieved.</p>
    ///   - [`max_failures(i32)`](crate::client::fluent_builders::ListDatalakeExceptions::max_failures) / [`set_max_failures(Option<i32>)`](crate::client::fluent_builders::ListDatalakeExceptions::set_max_failures): <p>List the maximum number of failures in Security Lake.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListDatalakeExceptions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListDatalakeExceptions::set_next_token): <p>List if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged. </p>  <p>Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
    /// - On success, responds with [`ListDatalakeExceptionsOutput`](crate::output::ListDatalakeExceptionsOutput) with field(s):
    ///   - [`non_retryable_failures(Option<Vec<FailuresResponse>>)`](crate::output::ListDatalakeExceptionsOutput::non_retryable_failures): <p>Lists the failures that cannot be retried in the current Region.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListDatalakeExceptionsOutput::next_token): <p>List if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged. </p>  <p>Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>
    /// - On failure, responds with [`SdkError<ListDatalakeExceptionsError>`](crate::error::ListDatalakeExceptionsError)
    pub fn list_datalake_exceptions(
        &self,
    ) -> crate::client::fluent_builders::ListDatalakeExceptions {
        crate::client::fluent_builders::ListDatalakeExceptions::new(self.handle.clone())
    }
}
