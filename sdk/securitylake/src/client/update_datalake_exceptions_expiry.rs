// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDatalakeExceptionsExpiry`](crate::operation::update_datalake_exceptions_expiry::builders::UpdateDatalakeExceptionsExpiryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`exception_message_expiry(i64)`](crate::operation::update_datalake_exceptions_expiry::builders::UpdateDatalakeExceptionsExpiryFluentBuilder::exception_message_expiry) / [`set_exception_message_expiry(Option<i64>)`](crate::operation::update_datalake_exceptions_expiry::builders::UpdateDatalakeExceptionsExpiryFluentBuilder::set_exception_message_expiry): <p>The time-to-live (TTL) for the exception message to remain.</p>
    /// - On success, responds with [`UpdateDatalakeExceptionsExpiryOutput`](crate::operation::update_datalake_exceptions_expiry::UpdateDatalakeExceptionsExpiryOutput)
    /// - On failure, responds with [`SdkError<UpdateDatalakeExceptionsExpiryError>`](crate::operation::update_datalake_exceptions_expiry::UpdateDatalakeExceptionsExpiryError)
    pub fn update_datalake_exceptions_expiry(&self) -> crate::operation::update_datalake_exceptions_expiry::builders::UpdateDatalakeExceptionsExpiryFluentBuilder{
        crate::operation::update_datalake_exceptions_expiry::builders::UpdateDatalakeExceptionsExpiryFluentBuilder::new(self.handle.clone())
    }
}
