// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSubscriberNotification`](crate::operation::create_subscriber_notification::builders::CreateSubscriberNotificationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscriber_id(impl Into<String>)`](crate::operation::create_subscriber_notification::builders::CreateSubscriberNotificationFluentBuilder::subscriber_id) / [`set_subscriber_id(Option<String>)`](crate::operation::create_subscriber_notification::builders::CreateSubscriberNotificationFluentBuilder::set_subscriber_id):<br>required: **true**<br><p>The subscriber ID for the notification subscription.</p><br>
    ///   - [`configuration(NotificationConfiguration)`](crate::operation::create_subscriber_notification::builders::CreateSubscriberNotificationFluentBuilder::configuration) / [`set_configuration(Option<NotificationConfiguration>)`](crate::operation::create_subscriber_notification::builders::CreateSubscriberNotificationFluentBuilder::set_configuration):<br>required: **true**<br><p>Specify the configuration using which you want to create the subscriber notification.</p><br>
    /// - On success, responds with [`CreateSubscriberNotificationOutput`](crate::operation::create_subscriber_notification::CreateSubscriberNotificationOutput) with field(s):
    ///   - [`subscriber_endpoint(Option<String>)`](crate::operation::create_subscriber_notification::CreateSubscriberNotificationOutput::subscriber_endpoint): <p>The subscriber endpoint to which exception messages are posted.</p>
    /// - On failure, responds with [`SdkError<CreateSubscriberNotificationError>`](crate::operation::create_subscriber_notification::CreateSubscriberNotificationError)
    pub fn create_subscriber_notification(
        &self,
    ) -> crate::operation::create_subscriber_notification::builders::CreateSubscriberNotificationFluentBuilder {
        crate::operation::create_subscriber_notification::builders::CreateSubscriberNotificationFluentBuilder::new(self.handle.clone())
    }
}
