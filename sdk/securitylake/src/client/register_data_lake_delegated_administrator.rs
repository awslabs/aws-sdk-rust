// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterDataLakeDelegatedAdministrator`](crate::operation::register_data_lake_delegated_administrator::builders::RegisterDataLakeDelegatedAdministratorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::operation::register_data_lake_delegated_administrator::builders::RegisterDataLakeDelegatedAdministratorFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::register_data_lake_delegated_administrator::builders::RegisterDataLakeDelegatedAdministratorFluentBuilder::set_account_id):<br>required: **true**<br><p>The Amazon Web Services account ID of the Security Lake delegated administrator.</p><br>
    /// - On success, responds with [`RegisterDataLakeDelegatedAdministratorOutput`](crate::operation::register_data_lake_delegated_administrator::RegisterDataLakeDelegatedAdministratorOutput)
    /// - On failure, responds with [`SdkError<RegisterDataLakeDelegatedAdministratorError>`](crate::operation::register_data_lake_delegated_administrator::RegisterDataLakeDelegatedAdministratorError)
    pub fn register_data_lake_delegated_administrator(
        &self,
    ) -> crate::operation::register_data_lake_delegated_administrator::builders::RegisterDataLakeDelegatedAdministratorFluentBuilder {
        crate::operation::register_data_lake_delegated_administrator::builders::RegisterDataLakeDelegatedAdministratorFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
