// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDataLakeOrganizationConfiguration`](crate::operation::delete_data_lake_organization_configuration::builders::DeleteDataLakeOrganizationConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_enable_new_account(DataLakeAutoEnableNewAccountConfiguration)`](crate::operation::delete_data_lake_organization_configuration::builders::DeleteDataLakeOrganizationConfigurationFluentBuilder::auto_enable_new_account) / [`set_auto_enable_new_account(Option<Vec::<DataLakeAutoEnableNewAccountConfiguration>>)`](crate::operation::delete_data_lake_organization_configuration::builders::DeleteDataLakeOrganizationConfigurationFluentBuilder::set_auto_enable_new_account):<br>required: **true**<br><p>Turns off automatic enablement of Security Lake for member accounts that are added to an organization.</p><br>
    /// - On success, responds with [`DeleteDataLakeOrganizationConfigurationOutput`](crate::operation::delete_data_lake_organization_configuration::DeleteDataLakeOrganizationConfigurationOutput)
    /// - On failure, responds with [`SdkError<DeleteDataLakeOrganizationConfigurationError>`](crate::operation::delete_data_lake_organization_configuration::DeleteDataLakeOrganizationConfigurationError)
    pub fn delete_data_lake_organization_configuration(
        &self,
    ) -> crate::operation::delete_data_lake_organization_configuration::builders::DeleteDataLakeOrganizationConfigurationFluentBuilder {
        crate::operation::delete_data_lake_organization_configuration::builders::DeleteDataLakeOrganizationConfigurationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
