// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSubscriber`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_types(Vec<SourceType>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::source_types) / [`set_source_types(Option<Vec<SourceType>>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::set_source_types): <p>The supported Amazon Web Services from which logs and events are collected. Security Lake supports log and event collection for natively supported Amazon Web Services.</p>
    ///   - [`account_id(impl Into<String>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::set_account_id): <p>The Amazon Web Services account ID used to access your data.</p>
    ///   - [`external_id(impl Into<String>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::external_id) / [`set_external_id(Option<String>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::set_external_id): <p>The external ID of the subscriber. This lets the user that is assuming the role assert the circumstances in which they are operating. It also provides a way for the account owner to permit the role to be assumed only under specific circumstances.</p>
    ///   - [`access_types(Vec<AccessType>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::access_types) / [`set_access_types(Option<Vec<AccessType>>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::set_access_types): <p>The Amazon S3 or Lake Formation access type.</p>
    ///   - [`subscriber_name(impl Into<String>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::subscriber_name) / [`set_subscriber_name(Option<String>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::set_subscriber_name): <p>The name of your Security Lake subscriber account.</p>
    ///   - [`subscriber_description(impl Into<String>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::subscriber_description) / [`set_subscriber_description(Option<String>)`](crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::set_subscriber_description): <p>The description for your subscriber account in Security Lake. </p>
    /// - On success, responds with [`CreateSubscriberOutput`](crate::operation::create_subscriber::CreateSubscriberOutput) with field(s):
    ///   - [`subscription_id(Option<String>)`](crate::operation::create_subscriber::CreateSubscriberOutput::subscription_id): <p>The <code>subscriptionId</code> created by the <code>CreateSubscriber</code> API call.</p>
    ///   - [`role_arn(Option<String>)`](crate::operation::create_subscriber::CreateSubscriberOutput::role_arn): <p>The Amazon Resource Name (ARN) created by you to provide to the subscriber. For more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM identifiers in the Identity and Access Management (IAM) User Guide</a>. .</p>
    ///   - [`sns_arn(Option<String>)`](crate::operation::create_subscriber::CreateSubscriberOutput::sns_arn): <p>The ARN for the Amazon Simple Notification Service.</p>
    ///   - [`s3_bucket_arn(Option<String>)`](crate::operation::create_subscriber::CreateSubscriberOutput::s3_bucket_arn): <p>The ARN for the Amazon S3 bucket. </p>
    /// - On failure, responds with [`SdkError<CreateSubscriberError>`](crate::operation::create_subscriber::CreateSubscriberError)
    pub fn create_subscriber(
        &self,
    ) -> crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder {
        crate::operation::create_subscriber::builders::CreateSubscriberFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
