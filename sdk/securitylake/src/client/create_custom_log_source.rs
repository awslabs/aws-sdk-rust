// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCustomLogSource`](crate::client::fluent_builders::CreateCustomLogSource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`custom_source_name(impl Into<String>)`](crate::client::fluent_builders::CreateCustomLogSource::custom_source_name) / [`set_custom_source_name(Option<String>)`](crate::client::fluent_builders::CreateCustomLogSource::set_custom_source_name): <p>The name for a third-party custom source. This must be a Regionally unique value.</p>
    ///   - [`event_class(OcsfEventClass)`](crate::client::fluent_builders::CreateCustomLogSource::event_class) / [`set_event_class(Option<OcsfEventClass>)`](crate::client::fluent_builders::CreateCustomLogSource::set_event_class): <p>The Open Cybersecurity Schema Framework (OCSF) event class which describes the type of data that the custom source will send to Security Lake.</p>
    ///   - [`glue_invocation_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateCustomLogSource::glue_invocation_role_arn) / [`set_glue_invocation_role_arn(Option<String>)`](crate::client::fluent_builders::CreateCustomLogSource::set_glue_invocation_role_arn): <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be used by the Glue crawler. The recommended IAM policies are:</p>  <ul>   <li> <p>The managed policy <code>AWSGlueServiceRole</code> </p> </li>   <li> <p>A custom policy granting access to your Amazon S3 Data Lake</p> </li>  </ul>
    ///   - [`log_provider_account_id(impl Into<String>)`](crate::client::fluent_builders::CreateCustomLogSource::log_provider_account_id) / [`set_log_provider_account_id(Option<String>)`](crate::client::fluent_builders::CreateCustomLogSource::set_log_provider_account_id): <p>The Amazon Web Services account ID of the custom source that will write logs and events into the Amazon S3 Data Lake.</p>
    /// - On success, responds with [`CreateCustomLogSourceOutput`](crate::output::CreateCustomLogSourceOutput) with field(s):
    ///   - [`custom_data_location(Option<String>)`](crate::output::CreateCustomLogSourceOutput::custom_data_location): <p>The location of the partition in the Amazon S3 bucket for Security Lake.</p>
    ///   - [`glue_crawler_name(Option<String>)`](crate::output::CreateCustomLogSourceOutput::glue_crawler_name): <p>The name of the Glue crawler.</p>
    ///   - [`glue_table_name(Option<String>)`](crate::output::CreateCustomLogSourceOutput::glue_table_name): <p>The table name of the Glue crawler.</p>
    ///   - [`glue_database_name(Option<String>)`](crate::output::CreateCustomLogSourceOutput::glue_database_name): <p>The Glue database where results are written, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.</p>
    ///   - [`log_provider_access_role_arn(Option<String>)`](crate::output::CreateCustomLogSourceOutput::log_provider_access_role_arn): <p>The ARN of the IAM role to be used by the entity putting logs into your custom source partition. Security Lake will apply the correct access policies to this role, but you must first manually create the trust policy for this role. The IAM role name must start with the text 'Security Lake'. The IAM role must trust the <code>logProviderAccountId</code> to assume the role.</p>
    /// - On failure, responds with [`SdkError<CreateCustomLogSourceError>`](crate::error::CreateCustomLogSourceError)
    pub fn create_custom_log_source(
        &self,
    ) -> crate::client::fluent_builders::CreateCustomLogSource {
        crate::client::fluent_builders::CreateCustomLogSource::new(self.handle.clone())
    }
}
