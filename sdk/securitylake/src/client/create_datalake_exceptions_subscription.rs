// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDatalakeExceptionsSubscription`](crate::client::fluent_builders::CreateDatalakeExceptionsSubscription) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscription_protocol(SubscriptionProtocolType)`](crate::client::fluent_builders::CreateDatalakeExceptionsSubscription::subscription_protocol) / [`set_subscription_protocol(Option<SubscriptionProtocolType>)`](crate::client::fluent_builders::CreateDatalakeExceptionsSubscription::set_subscription_protocol): <p>The subscription protocol to which exception notifications are posted. </p>
    ///   - [`notification_endpoint(impl Into<String>)`](crate::client::fluent_builders::CreateDatalakeExceptionsSubscription::notification_endpoint) / [`set_notification_endpoint(Option<String>)`](crate::client::fluent_builders::CreateDatalakeExceptionsSubscription::set_notification_endpoint): <p>The Amazon Web Services account where you want to receive exception notifications.</p>
    /// - On success, responds with [`CreateDatalakeExceptionsSubscriptionOutput`](crate::output::CreateDatalakeExceptionsSubscriptionOutput)
    /// - On failure, responds with [`SdkError<CreateDatalakeExceptionsSubscriptionError>`](crate::error::CreateDatalakeExceptionsSubscriptionError)
    pub fn create_datalake_exceptions_subscription(
        &self,
    ) -> crate::client::fluent_builders::CreateDatalakeExceptionsSubscription {
        crate::client::fluent_builders::CreateDatalakeExceptionsSubscription::new(
            self.handle.clone(),
        )
    }
}
