// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAwsLogSource`](crate::client::fluent_builders::CreateAwsLogSource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`input_order(Vec<Dimension>)`](crate::client::fluent_builders::CreateAwsLogSource::input_order) / [`set_input_order(Option<Vec<Dimension>>)`](crate::client::fluent_builders::CreateAwsLogSource::set_input_order): <p>Specifies the input order to enable dimensions in Security Lake, namely Region, source type, and member account.</p>
    ///   - [`enable_all_dimensions(HashMap<String, HashMap<String, Vec<String>>>)`](crate::client::fluent_builders::CreateAwsLogSource::enable_all_dimensions) / [`set_enable_all_dimensions(Option<HashMap<String, HashMap<String, Vec<String>>>>)`](crate::client::fluent_builders::CreateAwsLogSource::set_enable_all_dimensions): <p>Enables data collection from specific Amazon Web Services sources in all specific accounts and specific Regions.</p>
    ///   - [`enable_two_dimensions(HashMap<String, Vec<String>>)`](crate::client::fluent_builders::CreateAwsLogSource::enable_two_dimensions) / [`set_enable_two_dimensions(Option<HashMap<String, Vec<String>>>)`](crate::client::fluent_builders::CreateAwsLogSource::set_enable_two_dimensions): <p>Enables data collection from specific Amazon Web Services sources in specific accounts or Regions.</p>
    ///   - [`enable_single_dimension(Vec<String>)`](crate::client::fluent_builders::CreateAwsLogSource::enable_single_dimension) / [`set_enable_single_dimension(Option<Vec<String>>)`](crate::client::fluent_builders::CreateAwsLogSource::set_enable_single_dimension): <p>Enables data collection from all Amazon Web Services sources in specific accounts or Regions.</p>
    /// - On success, responds with [`CreateAwsLogSourceOutput`](crate::output::CreateAwsLogSourceOutput) with field(s):
    ///   - [`processing(Option<Vec<String>>)`](crate::output::CreateAwsLogSourceOutput::processing): <p>Lists the accounts that are in the process of enabling a natively supported Amazon Web Service as a Security Lake source.</p>
    ///   - [`failed(Option<Vec<String>>)`](crate::output::CreateAwsLogSourceOutput::failed): <p>Lists all accounts in which enabling a natively supported Amazon Web Service as a Security Lake source failed. The failure occurred as these accounts are not part of an organization.</p>
    /// - On failure, responds with [`SdkError<CreateAwsLogSourceError>`](crate::error::CreateAwsLogSourceError)
    pub fn create_aws_log_source(&self) -> crate::client::fluent_builders::CreateAwsLogSource {
        crate::client::fluent_builders::CreateAwsLogSource::new(self.handle.clone())
    }
}
