// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDatalakeExceptionsExpiry`](crate::operation::get_datalake_exceptions_expiry::builders::GetDatalakeExceptionsExpiryFluentBuilder) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::operation::get_datalake_exceptions_expiry::builders::GetDatalakeExceptionsExpiryFluentBuilder::send) it.
    /// - On success, responds with [`GetDatalakeExceptionsExpiryOutput`](crate::operation::get_datalake_exceptions_expiry::GetDatalakeExceptionsExpiryOutput) with field(s):
    ///   - [`exception_message_expiry(Option<i64>)`](crate::operation::get_datalake_exceptions_expiry::GetDatalakeExceptionsExpiryOutput::exception_message_expiry): <p>The expiration period and time-to-live (TTL).</p>
    /// - On failure, responds with [`SdkError<GetDatalakeExceptionsExpiryError>`](crate::operation::get_datalake_exceptions_expiry::GetDatalakeExceptionsExpiryError)
    pub fn get_datalake_exceptions_expiry(&self) -> crate::operation::get_datalake_exceptions_expiry::builders::GetDatalakeExceptionsExpiryFluentBuilder{
        crate::operation::get_datalake_exceptions_expiry::builders::GetDatalakeExceptionsExpiryFluentBuilder::new(self.handle.clone())
    }
}
