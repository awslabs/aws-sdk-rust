// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_subscriber_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_subscriber::CreateSubscriberInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.access_types {
        let mut array_2 = object.key("accessTypes").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.account_id {
        object.key("accountId").string(var_4.as_str());
    }
    if let Some(var_5) = &input.external_id {
        object.key("externalId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.source_types {
        let mut array_7 = object.key("sourceTypes").start_array();
        for item_8 in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_9 = array_7.value().start_object();
                crate::protocol_serde::shape_source_type::ser_source_type(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    if let Some(var_10) = &input.subscriber_description {
        object.key("subscriberDescription").string(var_10.as_str());
    }
    if let Some(var_11) = &input.subscriber_name {
        object.key("subscriberName").string(var_11.as_str());
    }
    Ok(())
}
