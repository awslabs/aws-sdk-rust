// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_datalake_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_datalake::CreateDatalakeInput,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.configurations {
        #[allow(unused_mut)]
        let mut object_2 = object.key("configurations").start_object();
        for (key_3, value_4) in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_5 = object_2.key(key_3.as_str()).start_object();
                crate::protocol_serde::shape_lake_configuration_request::ser_lake_configuration_request(&mut object_5, value_4)?;
                object_5.finish();
            }
        }
        object_2.finish();
    }
    if let Some(var_6) = &input.enable_all {
        object.key("enableAll").boolean(*var_6);
    }
    if let Some(var_7) = &input.meta_store_manager_role_arn {
        object.key("metaStoreManagerRoleArn").string(var_7.as_str());
    }
    if let Some(var_8) = &input.regions {
        let mut array_9 = object.key("regions").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10.as_str());
            }
        }
        array_9.finish();
    }
    Ok(())
}
