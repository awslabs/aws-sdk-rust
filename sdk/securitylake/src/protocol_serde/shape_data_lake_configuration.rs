// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_data_lake_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DataLakeConfiguration,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("region").string(input.region.as_str());
    }
    if let Some(var_1) = &input.encryption_configuration {
        #[allow(unused_mut)]
        let mut object_2 = object.key("encryptionConfiguration").start_object();
        crate::protocol_serde::shape_data_lake_encryption_configuration::ser_data_lake_encryption_configuration(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.lifecycle_configuration {
        #[allow(unused_mut)]
        let mut object_4 = object.key("lifecycleConfiguration").start_object();
        crate::protocol_serde::shape_data_lake_lifecycle_configuration::ser_data_lake_lifecycle_configuration(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.replication_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object.key("replicationConfiguration").start_object();
        crate::protocol_serde::shape_data_lake_replication_configuration::ser_data_lake_replication_configuration(&mut object_6, var_5)?;
        object_6.finish();
    }
    Ok(())
}
