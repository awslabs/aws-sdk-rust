// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteSubscriptionNotificationConfigurationInput {
    /// <p>The ID of the Security Lake subscriber account.</p>
    #[doc(hidden)]
    pub subscription_id: ::std::option::Option<::std::string::String>,
}
impl DeleteSubscriptionNotificationConfigurationInput {
    /// <p>The ID of the Security Lake subscriber account.</p>
    pub fn subscription_id(&self) -> ::std::option::Option<&str> {
        self.subscription_id.as_deref()
    }
}
impl DeleteSubscriptionNotificationConfigurationInput {
    /// Creates a new builder-style object to manufacture [`DeleteSubscriptionNotificationConfigurationInput`](crate::operation::delete_subscription_notification_configuration::DeleteSubscriptionNotificationConfigurationInput).
    pub fn builder() -> crate::operation::delete_subscription_notification_configuration::builders::DeleteSubscriptionNotificationConfigurationInputBuilder{
        crate::operation::delete_subscription_notification_configuration::builders::DeleteSubscriptionNotificationConfigurationInputBuilder::default()
    }
}

/// A builder for [`DeleteSubscriptionNotificationConfigurationInput`](crate::operation::delete_subscription_notification_configuration::DeleteSubscriptionNotificationConfigurationInput).
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug,
)]
pub struct DeleteSubscriptionNotificationConfigurationInputBuilder {
    pub(crate) subscription_id: ::std::option::Option<::std::string::String>,
}
impl DeleteSubscriptionNotificationConfigurationInputBuilder {
    /// <p>The ID of the Security Lake subscriber account.</p>
    pub fn subscription_id(
        mut self,
        input: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        self.subscription_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Security Lake subscriber account.</p>
    pub fn set_subscription_id(
        mut self,
        input: ::std::option::Option<::std::string::String>,
    ) -> Self {
        self.subscription_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteSubscriptionNotificationConfigurationInput`](crate::operation::delete_subscription_notification_configuration::DeleteSubscriptionNotificationConfigurationInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::delete_subscription_notification_configuration::DeleteSubscriptionNotificationConfigurationInput, ::aws_smithy_http::operation::error::BuildError>{
        ::std::result::Result::Ok(
            crate::operation::delete_subscription_notification_configuration::DeleteSubscriptionNotificationConfigurationInput {
                subscription_id: self.subscription_id
                ,
            }
        )
    }
}
