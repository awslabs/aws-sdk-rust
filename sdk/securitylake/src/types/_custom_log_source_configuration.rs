// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for the third-party custom source.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomLogSourceConfiguration {
    /// <p>The configuration for the Glue Crawler for the third-party custom source.</p>
    pub crawler_configuration: ::std::option::Option<crate::types::CustomLogSourceCrawlerConfiguration>,
    /// <p>The identity of the log provider for the third-party custom source.</p>
    pub provider_identity: ::std::option::Option<crate::types::AwsIdentity>,
}
impl CustomLogSourceConfiguration {
    /// <p>The configuration for the Glue Crawler for the third-party custom source.</p>
    pub fn crawler_configuration(&self) -> ::std::option::Option<&crate::types::CustomLogSourceCrawlerConfiguration> {
        self.crawler_configuration.as_ref()
    }
    /// <p>The identity of the log provider for the third-party custom source.</p>
    pub fn provider_identity(&self) -> ::std::option::Option<&crate::types::AwsIdentity> {
        self.provider_identity.as_ref()
    }
}
impl CustomLogSourceConfiguration {
    /// Creates a new builder-style object to manufacture [`CustomLogSourceConfiguration`](crate::types::CustomLogSourceConfiguration).
    pub fn builder() -> crate::types::builders::CustomLogSourceConfigurationBuilder {
        crate::types::builders::CustomLogSourceConfigurationBuilder::default()
    }
}

/// A builder for [`CustomLogSourceConfiguration`](crate::types::CustomLogSourceConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CustomLogSourceConfigurationBuilder {
    pub(crate) crawler_configuration: ::std::option::Option<crate::types::CustomLogSourceCrawlerConfiguration>,
    pub(crate) provider_identity: ::std::option::Option<crate::types::AwsIdentity>,
}
impl CustomLogSourceConfigurationBuilder {
    /// <p>The configuration for the Glue Crawler for the third-party custom source.</p>
    /// This field is required.
    pub fn crawler_configuration(mut self, input: crate::types::CustomLogSourceCrawlerConfiguration) -> Self {
        self.crawler_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for the Glue Crawler for the third-party custom source.</p>
    pub fn set_crawler_configuration(mut self, input: ::std::option::Option<crate::types::CustomLogSourceCrawlerConfiguration>) -> Self {
        self.crawler_configuration = input;
        self
    }
    /// <p>The configuration for the Glue Crawler for the third-party custom source.</p>
    pub fn get_crawler_configuration(&self) -> &::std::option::Option<crate::types::CustomLogSourceCrawlerConfiguration> {
        &self.crawler_configuration
    }
    /// <p>The identity of the log provider for the third-party custom source.</p>
    /// This field is required.
    pub fn provider_identity(mut self, input: crate::types::AwsIdentity) -> Self {
        self.provider_identity = ::std::option::Option::Some(input);
        self
    }
    /// <p>The identity of the log provider for the third-party custom source.</p>
    pub fn set_provider_identity(mut self, input: ::std::option::Option<crate::types::AwsIdentity>) -> Self {
        self.provider_identity = input;
        self
    }
    /// <p>The identity of the log provider for the third-party custom source.</p>
    pub fn get_provider_identity(&self) -> &::std::option::Option<crate::types::AwsIdentity> {
        &self.provider_identity
    }
    /// Consumes the builder and constructs a [`CustomLogSourceConfiguration`](crate::types::CustomLogSourceConfiguration).
    pub fn build(self) -> crate::types::CustomLogSourceConfiguration {
        crate::types::CustomLogSourceConfiguration {
            crawler_configuration: self.crawler_configuration,
            provider_identity: self.provider_identity,
        }
    }
}
