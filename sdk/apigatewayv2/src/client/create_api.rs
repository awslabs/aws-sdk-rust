// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateApi`](crate::client::fluent_builders::CreateApi) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`api_key_selection_expression(impl Into<String>)`](crate::client::fluent_builders::CreateApi::api_key_selection_expression) / [`set_api_key_selection_expression(Option<String>)`](crate::client::fluent_builders::CreateApi::set_api_key_selection_expression): <p>An API key selection expression. Supported only for WebSocket APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">API Key Selection Expressions</a>.</p>
    ///   - [`cors_configuration(Cors)`](crate::client::fluent_builders::CreateApi::cors_configuration) / [`set_cors_configuration(Option<Cors>)`](crate::client::fluent_builders::CreateApi::set_cors_configuration): <p>A CORS configuration. Supported only for HTTP APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html">Configuring CORS</a> for more information.</p>
    ///   - [`credentials_arn(impl Into<String>)`](crate::client::fluent_builders::CreateApi::credentials_arn) / [`set_credentials_arn(Option<String>)`](crate::client::fluent_builders::CreateApi::set_credentials_arn): <p>This property is part of quick create. It specifies the credentials required for the integration, if any. For a Lambda integration, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null. Currently, this property is not used for HTTP integrations. Supported only for HTTP APIs.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateApi::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateApi::set_description): <p>The description of the API.</p>
    ///   - [`disable_schema_validation(bool)`](crate::client::fluent_builders::CreateApi::disable_schema_validation) / [`set_disable_schema_validation(bool)`](crate::client::fluent_builders::CreateApi::set_disable_schema_validation): <p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>
    ///   - [`disable_execute_api_endpoint(bool)`](crate::client::fluent_builders::CreateApi::disable_execute_api_endpoint) / [`set_disable_execute_api_endpoint(bool)`](crate::client::fluent_builders::CreateApi::set_disable_execute_api_endpoint): <p>Specifies whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateApi::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateApi::set_name): <p>The name of the API.</p>
    ///   - [`protocol_type(ProtocolType)`](crate::client::fluent_builders::CreateApi::protocol_type) / [`set_protocol_type(Option<ProtocolType>)`](crate::client::fluent_builders::CreateApi::set_protocol_type): <p>The API protocol.</p>
    ///   - [`route_key(impl Into<String>)`](crate::client::fluent_builders::CreateApi::route_key) / [`set_route_key(Option<String>)`](crate::client::fluent_builders::CreateApi::set_route_key): <p>This property is part of quick create. If you don't specify a routeKey, a default route of $default is created. The $default route acts as a catch-all for any request made to your API, for a particular stage. The $default route key can't be modified. You can add routes after creating the API, and you can update the route keys of additional routes. Supported only for HTTP APIs.</p>
    ///   - [`route_selection_expression(impl Into<String>)`](crate::client::fluent_builders::CreateApi::route_selection_expression) / [`set_route_selection_expression(Option<String>)`](crate::client::fluent_builders::CreateApi::set_route_selection_expression): <p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateApi::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateApi::set_tags): <p>The collection of tags. Each tag element is associated with a given resource.</p>
    ///   - [`target(impl Into<String>)`](crate::client::fluent_builders::CreateApi::target) / [`set_target(Option<String>)`](crate::client::fluent_builders::CreateApi::set_target): <p>This property is part of quick create. Quick create produces an API with an integration, a default catch-all route, and a default stage which is configured to automatically deploy changes. For HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN. The type of the integration will be HTTP_PROXY or AWS_PROXY, respectively. Supported only for HTTP APIs.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::CreateApi::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::CreateApi::set_version): <p>A version identifier for the API.</p>
    /// - On success, responds with [`CreateApiOutput`](crate::output::CreateApiOutput) with field(s):
    ///   - [`api_endpoint(Option<String>)`](crate::output::CreateApiOutput::api_endpoint): <p>The URI of the API, of the form {api-id}.execute-api.{region}.amazonaws.com. The stage name is typically appended to this URI to form a complete path to a deployed API stage.</p>
    ///   - [`api_gateway_managed(bool)`](crate::output::CreateApiOutput::api_gateway_managed): <p>Specifies whether an API is managed by API Gateway. You can't update or delete a managed API by using API Gateway. A managed API can be deleted only through the tooling or service that created it.</p>
    ///   - [`api_id(Option<String>)`](crate::output::CreateApiOutput::api_id): <p>The API ID.</p>
    ///   - [`api_key_selection_expression(Option<String>)`](crate::output::CreateApiOutput::api_key_selection_expression): <p>An API key selection expression. Supported only for WebSocket APIs. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">API Key Selection Expressions</a>.</p>
    ///   - [`cors_configuration(Option<Cors>)`](crate::output::CreateApiOutput::cors_configuration): <p>A CORS configuration. Supported only for HTTP APIs.</p>
    ///   - [`created_date(Option<DateTime>)`](crate::output::CreateApiOutput::created_date): <p>The timestamp when the API was created.</p>
    ///   - [`description(Option<String>)`](crate::output::CreateApiOutput::description): <p>The description of the API.</p>
    ///   - [`disable_schema_validation(bool)`](crate::output::CreateApiOutput::disable_schema_validation): <p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>
    ///   - [`disable_execute_api_endpoint(bool)`](crate::output::CreateApiOutput::disable_execute_api_endpoint): <p>Specifies whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint.</p>
    ///   - [`import_info(Option<Vec<String>>)`](crate::output::CreateApiOutput::import_info): <p>The validation information during API import. This may include particular properties of your OpenAPI definition which are ignored during import. Supported only for HTTP APIs.</p>
    ///   - [`name(Option<String>)`](crate::output::CreateApiOutput::name): <p>The name of the API.</p>
    ///   - [`protocol_type(Option<ProtocolType>)`](crate::output::CreateApiOutput::protocol_type): <p>The API protocol.</p>
    ///   - [`route_selection_expression(Option<String>)`](crate::output::CreateApiOutput::route_selection_expression): <p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::CreateApiOutput::tags): <p>A collection of tags associated with the API.</p>
    ///   - [`version(Option<String>)`](crate::output::CreateApiOutput::version): <p>A version identifier for the API.</p>
    ///   - [`warnings(Option<Vec<String>>)`](crate::output::CreateApiOutput::warnings): <p>The warning messages reported when failonwarnings is turned on during API import.</p>
    /// - On failure, responds with [`SdkError<CreateApiError>`](crate::error::CreateApiError)
    pub fn create_api(&self) -> crate::client::fluent_builders::CreateApi {
        crate::client::fluent_builders::CreateApi::new(self.handle.clone())
    }
}
