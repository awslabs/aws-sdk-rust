// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAuthorizers`](crate::operation::get_authorizers::builders::GetAuthorizersFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`api_id(impl Into<String>)`](crate::operation::get_authorizers::builders::GetAuthorizersFluentBuilder::api_id) / [`set_api_id(Option<String>)`](crate::operation::get_authorizers::builders::GetAuthorizersFluentBuilder::set_api_id): <p>The API identifier.</p>
    ///   - [`max_results(impl Into<String>)`](crate::operation::get_authorizers::builders::GetAuthorizersFluentBuilder::max_results) / [`set_max_results(Option<String>)`](crate::operation::get_authorizers::builders::GetAuthorizersFluentBuilder::set_max_results): <p>The maximum number of elements to be returned for this resource.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_authorizers::builders::GetAuthorizersFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_authorizers::builders::GetAuthorizersFluentBuilder::set_next_token): <p>The next page of elements from this collection. Not valid for the last element of the collection.</p>
    /// - On success, responds with [`GetAuthorizersOutput`](crate::operation::get_authorizers::GetAuthorizersOutput) with field(s):
    ///   - [`items(Option<Vec<Authorizer>>)`](crate::operation::get_authorizers::GetAuthorizersOutput::items): <p>The elements from this collection.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_authorizers::GetAuthorizersOutput::next_token): <p>The next page of elements from this collection. Not valid for the last element of the collection.</p>
    /// - On failure, responds with [`SdkError<GetAuthorizersError>`](crate::operation::get_authorizers::GetAuthorizersError)
    pub fn get_authorizers(
        &self,
    ) -> crate::operation::get_authorizers::builders::GetAuthorizersFluentBuilder {
        crate::operation::get_authorizers::builders::GetAuthorizersFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
