// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_stage_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_stage::CreateStageInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.access_log_settings {
        #[allow(unused_mut)]
        let mut object_2 = object.key("accessLogSettings").start_object();
        crate::protocol_serde::shape_access_log_settings::ser_access_log_settings(
            &mut object_2,
            var_1,
        )?;
        object_2.finish();
    }
    if input.auto_deploy {
        object.key("autoDeploy").boolean(input.auto_deploy);
    }
    if let Some(var_3) = &input.client_certificate_id {
        object.key("clientCertificateId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.default_route_settings {
        #[allow(unused_mut)]
        let mut object_5 = object.key("defaultRouteSettings").start_object();
        crate::protocol_serde::shape_route_settings::ser_route_settings(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.deployment_id {
        object.key("deploymentId").string(var_6.as_str());
    }
    if let Some(var_7) = &input.description {
        object.key("description").string(var_7.as_str());
    }
    if let Some(var_8) = &input.route_settings {
        #[allow(unused_mut)]
        let mut object_9 = object.key("routeSettings").start_object();
        for (key_10, value_11) in var_8 {
            {
                #[allow(unused_mut)]
                let mut object_12 = object_9.key(key_10.as_str()).start_object();
                crate::protocol_serde::shape_route_settings::ser_route_settings(
                    &mut object_12,
                    value_11,
                )?;
                object_12.finish();
            }
        }
        object_9.finish();
    }
    if let Some(var_13) = &input.stage_name {
        object.key("stageName").string(var_13.as_str());
    }
    if let Some(var_14) = &input.stage_variables {
        #[allow(unused_mut)]
        let mut object_15 = object.key("stageVariables").start_object();
        for (key_16, value_17) in var_14 {
            {
                object_15.key(key_16.as_str()).string(value_17.as_str());
            }
        }
        object_15.finish();
    }
    if let Some(var_18) = &input.tags {
        #[allow(unused_mut)]
        let mut object_19 = object.key("tags").start_object();
        for (key_20, value_21) in var_18 {
            {
                object_19.key(key_20.as_str()).string(value_21.as_str());
            }
        }
        object_19.finish();
    }
    Ok(())
}
