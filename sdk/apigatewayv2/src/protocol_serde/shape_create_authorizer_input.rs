// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_authorizer_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_authorizer::CreateAuthorizerInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.authorizer_credentials_arn {
        object
            .key("authorizerCredentialsArn")
            .string(var_1.as_str());
    }
    if let Some(var_2) = &input.authorizer_payload_format_version {
        object
            .key("authorizerPayloadFormatVersion")
            .string(var_2.as_str());
    }
    if input.authorizer_result_ttl_in_seconds != 0 {
        object.key("authorizerResultTtlInSeconds").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.authorizer_result_ttl_in_seconds).into()),
        );
    }
    if let Some(var_3) = &input.authorizer_type {
        object.key("authorizerType").string(var_3.as_str());
    }
    if let Some(var_4) = &input.authorizer_uri {
        object.key("authorizerUri").string(var_4.as_str());
    }
    if input.enable_simple_responses {
        object
            .key("enableSimpleResponses")
            .boolean(input.enable_simple_responses);
    }
    if let Some(var_5) = &input.identity_source {
        let mut array_6 = object.key("identitySource").start_array();
        for item_7 in var_5 {
            {
                array_6.value().string(item_7.as_str());
            }
        }
        array_6.finish();
    }
    if let Some(var_8) = &input.identity_validation_expression {
        object
            .key("identityValidationExpression")
            .string(var_8.as_str());
    }
    if let Some(var_9) = &input.jwt_configuration {
        #[allow(unused_mut)]
        let mut object_10 = object.key("jwtConfiguration").start_object();
        crate::protocol_serde::shape_jwt_configuration::ser_jwt_configuration(
            &mut object_10,
            var_9,
        )?;
        object_10.finish();
    }
    if let Some(var_11) = &input.name {
        object.key("name").string(var_11.as_str());
    }
    Ok(())
}
