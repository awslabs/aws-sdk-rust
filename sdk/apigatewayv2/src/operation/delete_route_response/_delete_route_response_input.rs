// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteRouteResponseInput {
    /// <p>The API identifier.</p>
    #[doc(hidden)]
    pub api_id: std::option::Option<std::string::String>,
    /// <p>The route ID.</p>
    #[doc(hidden)]
    pub route_id: std::option::Option<std::string::String>,
    /// <p>The route response ID.</p>
    #[doc(hidden)]
    pub route_response_id: std::option::Option<std::string::String>,
}
impl DeleteRouteResponseInput {
    /// <p>The API identifier.</p>
    pub fn api_id(&self) -> std::option::Option<&str> {
        self.api_id.as_deref()
    }
    /// <p>The route ID.</p>
    pub fn route_id(&self) -> std::option::Option<&str> {
        self.route_id.as_deref()
    }
    /// <p>The route response ID.</p>
    pub fn route_response_id(&self) -> std::option::Option<&str> {
        self.route_response_id.as_deref()
    }
}
impl DeleteRouteResponseInput {
    /// Creates a new builder-style object to manufacture [`DeleteRouteResponseInput`](crate::operation::delete_route_response::DeleteRouteResponseInput).
    pub fn builder(
    ) -> crate::operation::delete_route_response::builders::DeleteRouteResponseInputBuilder {
        crate::operation::delete_route_response::builders::DeleteRouteResponseInputBuilder::default(
        )
    }
}

/// A builder for [`DeleteRouteResponseInput`](crate::operation::delete_route_response::DeleteRouteResponseInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteRouteResponseInputBuilder {
    pub(crate) api_id: std::option::Option<std::string::String>,
    pub(crate) route_id: std::option::Option<std::string::String>,
    pub(crate) route_response_id: std::option::Option<std::string::String>,
}
impl DeleteRouteResponseInputBuilder {
    /// <p>The API identifier.</p>
    pub fn api_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.api_id = Some(input.into());
        self
    }
    /// <p>The API identifier.</p>
    pub fn set_api_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.api_id = input;
        self
    }
    /// <p>The route ID.</p>
    pub fn route_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.route_id = Some(input.into());
        self
    }
    /// <p>The route ID.</p>
    pub fn set_route_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.route_id = input;
        self
    }
    /// <p>The route response ID.</p>
    pub fn route_response_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.route_response_id = Some(input.into());
        self
    }
    /// <p>The route response ID.</p>
    pub fn set_route_response_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.route_response_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteRouteResponseInput`](crate::operation::delete_route_response::DeleteRouteResponseInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_route_response::DeleteRouteResponseInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_route_response::DeleteRouteResponseInput {
                api_id: self.api_id,
                route_id: self.route_id,
                route_response_id: self.route_response_id,
            },
        )
    }
}
