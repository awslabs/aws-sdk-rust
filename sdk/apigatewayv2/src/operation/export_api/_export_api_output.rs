// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExportApiOutput {
    /// <p>Represents an exported definition of an API in a particular output format, for example, YAML. The API is serialized to the requested specification, for example, OpenAPI 3.0.</p>
    #[doc(hidden)]
    pub body: std::option::Option<aws_smithy_types::Blob>,
    _request_id: Option<String>,
}
impl ExportApiOutput {
    /// <p>Represents an exported definition of an API in a particular output format, for example, YAML. The API is serialized to the requested specification, for example, OpenAPI 3.0.</p>
    pub fn body(&self) -> std::option::Option<&aws_smithy_types::Blob> {
        self.body.as_ref()
    }
}
impl aws_http::request_id::RequestId for ExportApiOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ExportApiOutput {
    /// Creates a new builder-style object to manufacture [`ExportApiOutput`](crate::operation::export_api::ExportApiOutput).
    pub fn builder() -> crate::operation::export_api::builders::ExportApiOutputBuilder {
        crate::operation::export_api::builders::ExportApiOutputBuilder::default()
    }
}

/// A builder for [`ExportApiOutput`](crate::operation::export_api::ExportApiOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExportApiOutputBuilder {
    pub(crate) body: std::option::Option<aws_smithy_types::Blob>,
    _request_id: Option<String>,
}
impl ExportApiOutputBuilder {
    /// <p>Represents an exported definition of an API in a particular output format, for example, YAML. The API is serialized to the requested specification, for example, OpenAPI 3.0.</p>
    pub fn body(mut self, input: aws_smithy_types::Blob) -> Self {
        self.body = Some(input);
        self
    }
    /// <p>Represents an exported definition of an API in a particular output format, for example, YAML. The API is serialized to the requested specification, for example, OpenAPI 3.0.</p>
    pub fn set_body(mut self, input: std::option::Option<aws_smithy_types::Blob>) -> Self {
        self.body = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ExportApiOutput`](crate::operation::export_api::ExportApiOutput).
    pub fn build(self) -> crate::operation::export_api::ExportApiOutput {
        crate::operation::export_api::ExportApiOutput {
            body: self.body,
            _request_id: self._request_id,
        }
    }
}
