// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetRouteResponseOutput {
    /// <p>Represents the model selection expression of a route response. Supported only for WebSocket APIs.</p>
    #[doc(hidden)]
    pub model_selection_expression: std::option::Option<std::string::String>,
    /// <p>Represents the response models of a route response.</p>
    #[doc(hidden)]
    pub response_models:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    /// <p>Represents the response parameters of a route response.</p>
    #[doc(hidden)]
    pub response_parameters: std::option::Option<
        std::collections::HashMap<std::string::String, crate::types::ParameterConstraints>,
    >,
    /// <p>Represents the identifier of a route response.</p>
    #[doc(hidden)]
    pub route_response_id: std::option::Option<std::string::String>,
    /// <p>Represents the route response key of a route response.</p>
    #[doc(hidden)]
    pub route_response_key: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetRouteResponseOutput {
    /// <p>Represents the model selection expression of a route response. Supported only for WebSocket APIs.</p>
    pub fn model_selection_expression(&self) -> std::option::Option<&str> {
        self.model_selection_expression.as_deref()
    }
    /// <p>Represents the response models of a route response.</p>
    pub fn response_models(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.response_models.as_ref()
    }
    /// <p>Represents the response parameters of a route response.</p>
    pub fn response_parameters(
        &self,
    ) -> std::option::Option<
        &std::collections::HashMap<std::string::String, crate::types::ParameterConstraints>,
    > {
        self.response_parameters.as_ref()
    }
    /// <p>Represents the identifier of a route response.</p>
    pub fn route_response_id(&self) -> std::option::Option<&str> {
        self.route_response_id.as_deref()
    }
    /// <p>Represents the route response key of a route response.</p>
    pub fn route_response_key(&self) -> std::option::Option<&str> {
        self.route_response_key.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetRouteResponseOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetRouteResponseOutput {
    /// Creates a new builder-style object to manufacture [`GetRouteResponseOutput`](crate::operation::get_route_response::GetRouteResponseOutput).
    pub fn builder() -> crate::operation::get_route_response::builders::GetRouteResponseOutputBuilder
    {
        crate::operation::get_route_response::builders::GetRouteResponseOutputBuilder::default()
    }
}

/// A builder for [`GetRouteResponseOutput`](crate::operation::get_route_response::GetRouteResponseOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetRouteResponseOutputBuilder {
    pub(crate) model_selection_expression: std::option::Option<std::string::String>,
    pub(crate) response_models:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    pub(crate) response_parameters: std::option::Option<
        std::collections::HashMap<std::string::String, crate::types::ParameterConstraints>,
    >,
    pub(crate) route_response_id: std::option::Option<std::string::String>,
    pub(crate) route_response_key: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetRouteResponseOutputBuilder {
    /// <p>Represents the model selection expression of a route response. Supported only for WebSocket APIs.</p>
    pub fn model_selection_expression(mut self, input: impl Into<std::string::String>) -> Self {
        self.model_selection_expression = Some(input.into());
        self
    }
    /// <p>Represents the model selection expression of a route response. Supported only for WebSocket APIs.</p>
    pub fn set_model_selection_expression(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.model_selection_expression = input;
        self
    }
    /// Adds a key-value pair to `response_models`.
    ///
    /// To override the contents of this collection use [`set_response_models`](Self::set_response_models).
    ///
    /// <p>Represents the response models of a route response.</p>
    pub fn response_models(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.response_models.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.response_models = Some(hash_map);
        self
    }
    /// <p>Represents the response models of a route response.</p>
    pub fn set_response_models(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.response_models = input;
        self
    }
    /// Adds a key-value pair to `response_parameters`.
    ///
    /// To override the contents of this collection use [`set_response_parameters`](Self::set_response_parameters).
    ///
    /// <p>Represents the response parameters of a route response.</p>
    pub fn response_parameters(
        mut self,
        k: impl Into<std::string::String>,
        v: crate::types::ParameterConstraints,
    ) -> Self {
        let mut hash_map = self.response_parameters.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.response_parameters = Some(hash_map);
        self
    }
    /// <p>Represents the response parameters of a route response.</p>
    pub fn set_response_parameters(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, crate::types::ParameterConstraints>,
        >,
    ) -> Self {
        self.response_parameters = input;
        self
    }
    /// <p>Represents the identifier of a route response.</p>
    pub fn route_response_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.route_response_id = Some(input.into());
        self
    }
    /// <p>Represents the identifier of a route response.</p>
    pub fn set_route_response_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.route_response_id = input;
        self
    }
    /// <p>Represents the route response key of a route response.</p>
    pub fn route_response_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.route_response_key = Some(input.into());
        self
    }
    /// <p>Represents the route response key of a route response.</p>
    pub fn set_route_response_key(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.route_response_key = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetRouteResponseOutput`](crate::operation::get_route_response::GetRouteResponseOutput).
    pub fn build(self) -> crate::operation::get_route_response::GetRouteResponseOutput {
        crate::operation::get_route_response::GetRouteResponseOutput {
            model_selection_expression: self.model_selection_expression,
            response_models: self.response_models,
            response_parameters: self.response_parameters,
            route_response_id: self.route_response_id,
            route_response_key: self.route_response_key,
            _request_id: self._request_id,
        }
    }
}
