// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImportApiInput {
    /// <p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>
    pub basepath: ::std::option::Option<::std::string::String>,
    /// <p>The OpenAPI definition. Supported only for HTTP APIs.</p>
    pub body: ::std::option::Option<::std::string::String>,
    /// <p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>
    pub fail_on_warnings: ::std::option::Option<bool>,
}
impl ImportApiInput {
    /// <p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>
    pub fn basepath(&self) -> ::std::option::Option<&str> {
        self.basepath.as_deref()
    }
    /// <p>The OpenAPI definition. Supported only for HTTP APIs.</p>
    pub fn body(&self) -> ::std::option::Option<&str> {
        self.body.as_deref()
    }
    /// <p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>
    pub fn fail_on_warnings(&self) -> ::std::option::Option<bool> {
        self.fail_on_warnings
    }
}
impl ImportApiInput {
    /// Creates a new builder-style object to manufacture [`ImportApiInput`](crate::operation::import_api::ImportApiInput).
    pub fn builder() -> crate::operation::import_api::builders::ImportApiInputBuilder {
        crate::operation::import_api::builders::ImportApiInputBuilder::default()
    }
}

/// A builder for [`ImportApiInput`](crate::operation::import_api::ImportApiInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ImportApiInputBuilder {
    pub(crate) basepath: ::std::option::Option<::std::string::String>,
    pub(crate) body: ::std::option::Option<::std::string::String>,
    pub(crate) fail_on_warnings: ::std::option::Option<bool>,
}
impl ImportApiInputBuilder {
    /// <p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>
    pub fn basepath(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.basepath = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>
    pub fn set_basepath(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.basepath = input;
        self
    }
    /// <p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>
    pub fn get_basepath(&self) -> &::std::option::Option<::std::string::String> {
        &self.basepath
    }
    /// <p>The OpenAPI definition. Supported only for HTTP APIs.</p>
    /// This field is required.
    pub fn body(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.body = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The OpenAPI definition. Supported only for HTTP APIs.</p>
    pub fn set_body(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.body = input;
        self
    }
    /// <p>The OpenAPI definition. Supported only for HTTP APIs.</p>
    pub fn get_body(&self) -> &::std::option::Option<::std::string::String> {
        &self.body
    }
    /// <p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>
    pub fn fail_on_warnings(mut self, input: bool) -> Self {
        self.fail_on_warnings = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>
    pub fn set_fail_on_warnings(mut self, input: ::std::option::Option<bool>) -> Self {
        self.fail_on_warnings = input;
        self
    }
    /// <p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>
    pub fn get_fail_on_warnings(&self) -> &::std::option::Option<bool> {
        &self.fail_on_warnings
    }
    /// Consumes the builder and constructs a [`ImportApiInput`](crate::operation::import_api::ImportApiInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::import_api::ImportApiInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::import_api::ImportApiInput {
            basepath: self.basepath,
            body: self.body,
            fail_on_warnings: self.fail_on_warnings,
        })
    }
}
