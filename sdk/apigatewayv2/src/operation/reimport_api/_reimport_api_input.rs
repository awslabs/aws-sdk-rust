// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReimportApiInput {
    /// <p>The API identifier.</p>
    #[doc(hidden)]
    pub api_id: std::option::Option<std::string::String>,
    /// <p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>
    #[doc(hidden)]
    pub basepath: std::option::Option<std::string::String>,
    /// <p>The OpenAPI definition. Supported only for HTTP APIs.</p>
    #[doc(hidden)]
    pub body: std::option::Option<std::string::String>,
    /// <p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>
    #[doc(hidden)]
    pub fail_on_warnings: bool,
}
impl ReimportApiInput {
    /// <p>The API identifier.</p>
    pub fn api_id(&self) -> std::option::Option<&str> {
        self.api_id.as_deref()
    }
    /// <p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>
    pub fn basepath(&self) -> std::option::Option<&str> {
        self.basepath.as_deref()
    }
    /// <p>The OpenAPI definition. Supported only for HTTP APIs.</p>
    pub fn body(&self) -> std::option::Option<&str> {
        self.body.as_deref()
    }
    /// <p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>
    pub fn fail_on_warnings(&self) -> bool {
        self.fail_on_warnings
    }
}
impl ReimportApiInput {
    /// Creates a new builder-style object to manufacture [`ReimportApiInput`](crate::operation::reimport_api::ReimportApiInput).
    pub fn builder() -> crate::operation::reimport_api::builders::ReimportApiInputBuilder {
        crate::operation::reimport_api::builders::ReimportApiInputBuilder::default()
    }
}

/// A builder for [`ReimportApiInput`](crate::operation::reimport_api::ReimportApiInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReimportApiInputBuilder {
    pub(crate) api_id: std::option::Option<std::string::String>,
    pub(crate) basepath: std::option::Option<std::string::String>,
    pub(crate) body: std::option::Option<std::string::String>,
    pub(crate) fail_on_warnings: std::option::Option<bool>,
}
impl ReimportApiInputBuilder {
    /// <p>The API identifier.</p>
    pub fn api_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.api_id = Some(input.into());
        self
    }
    /// <p>The API identifier.</p>
    pub fn set_api_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.api_id = input;
        self
    }
    /// <p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>
    pub fn basepath(mut self, input: impl Into<std::string::String>) -> Self {
        self.basepath = Some(input.into());
        self
    }
    /// <p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>
    pub fn set_basepath(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.basepath = input;
        self
    }
    /// <p>The OpenAPI definition. Supported only for HTTP APIs.</p>
    pub fn body(mut self, input: impl Into<std::string::String>) -> Self {
        self.body = Some(input.into());
        self
    }
    /// <p>The OpenAPI definition. Supported only for HTTP APIs.</p>
    pub fn set_body(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.body = input;
        self
    }
    /// <p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>
    pub fn fail_on_warnings(mut self, input: bool) -> Self {
        self.fail_on_warnings = Some(input);
        self
    }
    /// <p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>
    pub fn set_fail_on_warnings(mut self, input: std::option::Option<bool>) -> Self {
        self.fail_on_warnings = input;
        self
    }
    /// Consumes the builder and constructs a [`ReimportApiInput`](crate::operation::reimport_api::ReimportApiInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::reimport_api::ReimportApiInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::reimport_api::ReimportApiInput {
            api_id: self.api_id,
            basepath: self.basepath,
            body: self.body,
            fail_on_warnings: self.fail_on_warnings.unwrap_or_default(),
        })
    }
}
