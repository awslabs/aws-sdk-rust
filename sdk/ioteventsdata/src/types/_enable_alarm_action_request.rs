// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information needed to enable the alarm.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnableAlarmActionRequest {
    /// <p>The request ID. Each ID must be unique within each batch.</p>
    pub request_id: ::std::string::String,
    /// <p>The name of the alarm model.</p>
    pub alarm_model_name: ::std::string::String,
    /// <p>The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.</p>
    pub key_value: ::std::option::Option<::std::string::String>,
    /// <p>The note that you can leave when you enable the alarm.</p>
    pub note: ::std::option::Option<::std::string::String>,
}
impl EnableAlarmActionRequest {
    /// <p>The request ID. Each ID must be unique within each batch.</p>
    pub fn request_id(&self) -> &str {
        use std::ops::Deref;
        self.request_id.deref()
    }
    /// <p>The name of the alarm model.</p>
    pub fn alarm_model_name(&self) -> &str {
        use std::ops::Deref;
        self.alarm_model_name.deref()
    }
    /// <p>The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.</p>
    pub fn key_value(&self) -> ::std::option::Option<&str> {
        self.key_value.as_deref()
    }
    /// <p>The note that you can leave when you enable the alarm.</p>
    pub fn note(&self) -> ::std::option::Option<&str> {
        self.note.as_deref()
    }
}
impl EnableAlarmActionRequest {
    /// Creates a new builder-style object to manufacture [`EnableAlarmActionRequest`](crate::types::EnableAlarmActionRequest).
    pub fn builder() -> crate::types::builders::EnableAlarmActionRequestBuilder {
        crate::types::builders::EnableAlarmActionRequestBuilder::default()
    }
}

/// A builder for [`EnableAlarmActionRequest`](crate::types::EnableAlarmActionRequest).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EnableAlarmActionRequestBuilder {
    pub(crate) request_id: ::std::option::Option<::std::string::String>,
    pub(crate) alarm_model_name: ::std::option::Option<::std::string::String>,
    pub(crate) key_value: ::std::option::Option<::std::string::String>,
    pub(crate) note: ::std::option::Option<::std::string::String>,
}
impl EnableAlarmActionRequestBuilder {
    /// <p>The request ID. Each ID must be unique within each batch.</p>
    /// This field is required.
    pub fn request_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.request_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The request ID. Each ID must be unique within each batch.</p>
    pub fn set_request_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.request_id = input;
        self
    }
    /// <p>The request ID. Each ID must be unique within each batch.</p>
    pub fn get_request_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.request_id
    }
    /// <p>The name of the alarm model.</p>
    /// This field is required.
    pub fn alarm_model_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.alarm_model_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the alarm model.</p>
    pub fn set_alarm_model_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.alarm_model_name = input;
        self
    }
    /// <p>The name of the alarm model.</p>
    pub fn get_alarm_model_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.alarm_model_name
    }
    /// <p>The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.</p>
    pub fn key_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.key_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.</p>
    pub fn set_key_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.key_value = input;
        self
    }
    /// <p>The value of the key used as a filter to select only the alarms associated with the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_CreateAlarmModel.html#iotevents-CreateAlarmModel-request-key">key</a>.</p>
    pub fn get_key_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.key_value
    }
    /// <p>The note that you can leave when you enable the alarm.</p>
    pub fn note(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.note = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The note that you can leave when you enable the alarm.</p>
    pub fn set_note(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.note = input;
        self
    }
    /// <p>The note that you can leave when you enable the alarm.</p>
    pub fn get_note(&self) -> &::std::option::Option<::std::string::String> {
        &self.note
    }
    /// Consumes the builder and constructs a [`EnableAlarmActionRequest`](crate::types::EnableAlarmActionRequest).
    /// This method will fail if any of the following fields are not set:
    /// - [`request_id`](crate::types::builders::EnableAlarmActionRequestBuilder::request_id)
    /// - [`alarm_model_name`](crate::types::builders::EnableAlarmActionRequestBuilder::alarm_model_name)
    pub fn build(self) -> ::std::result::Result<crate::types::EnableAlarmActionRequest, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::EnableAlarmActionRequest {
            request_id: self.request_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "request_id",
                    "request_id was not specified but it is required when building EnableAlarmActionRequest",
                )
            })?,
            alarm_model_name: self.alarm_model_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "alarm_model_name",
                    "alarm_model_name was not specified but it is required when building EnableAlarmActionRequest",
                )
            })?,
            key_value: self.key_value,
            note: self.note,
        })
    }
}
