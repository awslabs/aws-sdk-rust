// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the detector state.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DetectorStateSummary {
    /// <p>The name of the state.</p>
    #[doc(hidden)]
    pub state_name: std::option::Option<std::string::String>,
}
impl DetectorStateSummary {
    /// <p>The name of the state.</p>
    pub fn state_name(&self) -> std::option::Option<&str> {
        self.state_name.as_deref()
    }
}
impl DetectorStateSummary {
    /// Creates a new builder-style object to manufacture [`DetectorStateSummary`](crate::types::DetectorStateSummary).
    pub fn builder() -> crate::types::builders::DetectorStateSummaryBuilder {
        crate::types::builders::DetectorStateSummaryBuilder::default()
    }
}

/// A builder for [`DetectorStateSummary`](crate::types::DetectorStateSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DetectorStateSummaryBuilder {
    pub(crate) state_name: std::option::Option<std::string::String>,
}
impl DetectorStateSummaryBuilder {
    /// <p>The name of the state.</p>
    pub fn state_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.state_name = Some(input.into());
        self
    }
    /// <p>The name of the state.</p>
    pub fn set_state_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.state_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DetectorStateSummary`](crate::types::DetectorStateSummary).
    pub fn build(self) -> crate::types::DetectorStateSummary {
        crate::types::DetectorStateSummary {
            state_name: self.state_name,
        }
    }
}
