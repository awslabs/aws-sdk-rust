// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the detector (instance).</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DetectorSummary {
    /// <p>The name of the detector model that created this detector (instance).</p>
    #[doc(hidden)]
    pub detector_model_name: std::option::Option<std::string::String>,
    /// <p>The value of the key (identifying the device or system) that caused the creation of this detector (instance).</p>
    #[doc(hidden)]
    pub key_value: std::option::Option<std::string::String>,
    /// <p>The version of the detector model that created this detector (instance).</p>
    #[doc(hidden)]
    pub detector_model_version: std::option::Option<std::string::String>,
    /// <p>The current state of the detector (instance).</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::DetectorStateSummary>,
    /// <p>The time the detector (instance) was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time the detector (instance) was last updated.</p>
    #[doc(hidden)]
    pub last_update_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl DetectorSummary {
    /// <p>The name of the detector model that created this detector (instance).</p>
    pub fn detector_model_name(&self) -> std::option::Option<&str> {
        self.detector_model_name.as_deref()
    }
    /// <p>The value of the key (identifying the device or system) that caused the creation of this detector (instance).</p>
    pub fn key_value(&self) -> std::option::Option<&str> {
        self.key_value.as_deref()
    }
    /// <p>The version of the detector model that created this detector (instance).</p>
    pub fn detector_model_version(&self) -> std::option::Option<&str> {
        self.detector_model_version.as_deref()
    }
    /// <p>The current state of the detector (instance).</p>
    pub fn state(&self) -> std::option::Option<&crate::types::DetectorStateSummary> {
        self.state.as_ref()
    }
    /// <p>The time the detector (instance) was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The time the detector (instance) was last updated.</p>
    pub fn last_update_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_update_time.as_ref()
    }
}
impl DetectorSummary {
    /// Creates a new builder-style object to manufacture [`DetectorSummary`](crate::types::DetectorSummary).
    pub fn builder() -> crate::types::builders::DetectorSummaryBuilder {
        crate::types::builders::DetectorSummaryBuilder::default()
    }
}

/// A builder for [`DetectorSummary`](crate::types::DetectorSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DetectorSummaryBuilder {
    pub(crate) detector_model_name: std::option::Option<std::string::String>,
    pub(crate) key_value: std::option::Option<std::string::String>,
    pub(crate) detector_model_version: std::option::Option<std::string::String>,
    pub(crate) state: std::option::Option<crate::types::DetectorStateSummary>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_update_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl DetectorSummaryBuilder {
    /// <p>The name of the detector model that created this detector (instance).</p>
    pub fn detector_model_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.detector_model_name = Some(input.into());
        self
    }
    /// <p>The name of the detector model that created this detector (instance).</p>
    pub fn set_detector_model_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.detector_model_name = input;
        self
    }
    /// <p>The value of the key (identifying the device or system) that caused the creation of this detector (instance).</p>
    pub fn key_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.key_value = Some(input.into());
        self
    }
    /// <p>The value of the key (identifying the device or system) that caused the creation of this detector (instance).</p>
    pub fn set_key_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.key_value = input;
        self
    }
    /// <p>The version of the detector model that created this detector (instance).</p>
    pub fn detector_model_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.detector_model_version = Some(input.into());
        self
    }
    /// <p>The version of the detector model that created this detector (instance).</p>
    pub fn set_detector_model_version(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.detector_model_version = input;
        self
    }
    /// <p>The current state of the detector (instance).</p>
    pub fn state(mut self, input: crate::types::DetectorStateSummary) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>The current state of the detector (instance).</p>
    pub fn set_state(
        mut self,
        input: std::option::Option<crate::types::DetectorStateSummary>,
    ) -> Self {
        self.state = input;
        self
    }
    /// <p>The time the detector (instance) was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>The time the detector (instance) was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time the detector (instance) was last updated.</p>
    pub fn last_update_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_update_time = Some(input);
        self
    }
    /// <p>The time the detector (instance) was last updated.</p>
    pub fn set_last_update_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_update_time = input;
        self
    }
    /// Consumes the builder and constructs a [`DetectorSummary`](crate::types::DetectorSummary).
    pub fn build(self) -> crate::types::DetectorSummary {
        crate::types::DetectorSummary {
            detector_model_name: self.detector_model_name,
            key_value: self.key_value,
            detector_model_version: self.detector_model_version,
            state: self.state,
            creation_time: self.creation_time,
            last_update_time: self.last_update_time,
        }
    }
}
