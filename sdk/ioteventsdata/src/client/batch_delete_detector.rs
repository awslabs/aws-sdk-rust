// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchDeleteDetector`](crate::client::fluent_builders::BatchDeleteDetector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`detectors(Vec<DeleteDetectorRequest>)`](crate::client::fluent_builders::BatchDeleteDetector::detectors) / [`set_detectors(Option<Vec<DeleteDetectorRequest>>)`](crate::client::fluent_builders::BatchDeleteDetector::set_detectors): <p>The list of one or more detectors to be deleted.</p>
    /// - On success, responds with [`BatchDeleteDetectorOutput`](crate::output::BatchDeleteDetectorOutput) with field(s):
    ///   - [`batch_delete_detector_error_entries(Option<Vec<BatchDeleteDetectorErrorEntry>>)`](crate::output::BatchDeleteDetectorOutput::batch_delete_detector_error_entries): <p>A list of errors associated with the request, or an empty array (<code>[]</code>) if there are no errors. Each error entry contains a <code>messageId</code> that helps you identify the entry that failed.</p>
    /// - On failure, responds with [`SdkError<BatchDeleteDetectorError>`](crate::error::BatchDeleteDetectorError)
    pub fn batch_delete_detector(&self) -> crate::client::fluent_builders::BatchDeleteDetector {
        crate::client::fluent_builders::BatchDeleteDetector::new(self.handle.clone())
    }
}
