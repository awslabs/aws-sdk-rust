// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListDetectors`](crate::client::fluent_builders::ListDetectors) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`detector_model_name(impl Into<String>)`](crate::client::fluent_builders::ListDetectors::detector_model_name) / [`set_detector_model_name(Option<String>)`](crate::client::fluent_builders::ListDetectors::set_detector_model_name): <p>The name of the detector model whose detectors (instances) are listed.</p>
    ///   - [`state_name(impl Into<String>)`](crate::client::fluent_builders::ListDetectors::state_name) / [`set_state_name(Option<String>)`](crate::client::fluent_builders::ListDetectors::set_state_name): <p>A filter that limits results to those detectors (instances) in the given state.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListDetectors::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListDetectors::set_next_token): <p>The token that you can use to return the next set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListDetectors::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListDetectors::set_max_results): <p>The maximum number of results to be returned per request.</p>
    /// - On success, responds with [`ListDetectorsOutput`](crate::output::ListDetectorsOutput) with field(s):
    ///   - [`detector_summaries(Option<Vec<DetectorSummary>>)`](crate::output::ListDetectorsOutput::detector_summaries): <p>A list of summary information about the detectors (instances).</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListDetectorsOutput::next_token): <p>The token that you can use to return the next set of results, or <code>null</code> if there are no more results.</p>
    /// - On failure, responds with [`SdkError<ListDetectorsError>`](crate::error::ListDetectorsError)
    pub fn list_detectors(&self) -> crate::client::fluent_builders::ListDetectors {
        crate::client::fluent_builders::ListDetectors::new(self.handle.clone())
    }
}
