// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchEnableAlarm`](crate::operation::batch_enable_alarm::builders::BatchEnableAlarmFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`enable_action_requests(Vec<EnableAlarmActionRequest>)`](crate::operation::batch_enable_alarm::builders::BatchEnableAlarmFluentBuilder::enable_action_requests) / [`set_enable_action_requests(Option<Vec<EnableAlarmActionRequest>>)`](crate::operation::batch_enable_alarm::builders::BatchEnableAlarmFluentBuilder::set_enable_action_requests): <p>The list of enable action requests. You can specify up to 10 requests per operation.</p>
    /// - On success, responds with [`BatchEnableAlarmOutput`](crate::operation::batch_enable_alarm::BatchEnableAlarmOutput) with field(s):
    ///   - [`error_entries(Option<Vec<BatchAlarmActionErrorEntry>>)`](crate::operation::batch_enable_alarm::BatchEnableAlarmOutput::error_entries): <p>A list of errors associated with the request, or <code>null</code> if there are no errors. Each error entry contains an entry ID that helps you identify the entry that failed.</p>
    /// - On failure, responds with [`SdkError<BatchEnableAlarmError>`](crate::operation::batch_enable_alarm::BatchEnableAlarmError)
    pub fn batch_enable_alarm(
        &self,
    ) -> crate::operation::batch_enable_alarm::builders::BatchEnableAlarmFluentBuilder {
        crate::operation::batch_enable_alarm::builders::BatchEnableAlarmFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
