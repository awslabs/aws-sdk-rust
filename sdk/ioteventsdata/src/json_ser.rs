// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_batch_acknowledge_alarm_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchAcknowledgeAlarmInput,
) {
    if let Some(var_1) = &input.acknowledge_action_requests {
        let mut array_2 = object.key("acknowledgeActionRequests").start_array();
        for item_3 in var_1 {
            {
                let mut object_4 = array_2.value().start_object();
                crate::json_ser::serialize_structure_crate_model_acknowledge_alarm_action_request(
                    &mut object_4,
                    item_3,
                );
                object_4.finish();
            }
        }
        array_2.finish();
    }
}

pub fn serialize_structure_crate_input_batch_disable_alarm_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchDisableAlarmInput,
) {
    if let Some(var_5) = &input.disable_action_requests {
        let mut array_6 = object.key("disableActionRequests").start_array();
        for item_7 in var_5 {
            {
                let mut object_8 = array_6.value().start_object();
                crate::json_ser::serialize_structure_crate_model_disable_alarm_action_request(
                    &mut object_8,
                    item_7,
                );
                object_8.finish();
            }
        }
        array_6.finish();
    }
}

pub fn serialize_structure_crate_input_batch_enable_alarm_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchEnableAlarmInput,
) {
    if let Some(var_9) = &input.enable_action_requests {
        let mut array_10 = object.key("enableActionRequests").start_array();
        for item_11 in var_9 {
            {
                let mut object_12 = array_10.value().start_object();
                crate::json_ser::serialize_structure_crate_model_enable_alarm_action_request(
                    &mut object_12,
                    item_11,
                );
                object_12.finish();
            }
        }
        array_10.finish();
    }
}

pub fn serialize_structure_crate_input_batch_put_message_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchPutMessageInput,
) {
    if let Some(var_13) = &input.messages {
        let mut array_14 = object.key("messages").start_array();
        for item_15 in var_13 {
            {
                let mut object_16 = array_14.value().start_object();
                crate::json_ser::serialize_structure_crate_model_message(&mut object_16, item_15);
                object_16.finish();
            }
        }
        array_14.finish();
    }
}

pub fn serialize_structure_crate_input_batch_reset_alarm_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchResetAlarmInput,
) {
    if let Some(var_17) = &input.reset_action_requests {
        let mut array_18 = object.key("resetActionRequests").start_array();
        for item_19 in var_17 {
            {
                let mut object_20 = array_18.value().start_object();
                crate::json_ser::serialize_structure_crate_model_reset_alarm_action_request(
                    &mut object_20,
                    item_19,
                );
                object_20.finish();
            }
        }
        array_18.finish();
    }
}

pub fn serialize_structure_crate_input_batch_snooze_alarm_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchSnoozeAlarmInput,
) {
    if let Some(var_21) = &input.snooze_action_requests {
        let mut array_22 = object.key("snoozeActionRequests").start_array();
        for item_23 in var_21 {
            {
                let mut object_24 = array_22.value().start_object();
                crate::json_ser::serialize_structure_crate_model_snooze_alarm_action_request(
                    &mut object_24,
                    item_23,
                );
                object_24.finish();
            }
        }
        array_22.finish();
    }
}

pub fn serialize_structure_crate_input_batch_update_detector_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchUpdateDetectorInput,
) {
    if let Some(var_25) = &input.detectors {
        let mut array_26 = object.key("detectors").start_array();
        for item_27 in var_25 {
            {
                let mut object_28 = array_26.value().start_object();
                crate::json_ser::serialize_structure_crate_model_update_detector_request(
                    &mut object_28,
                    item_27,
                );
                object_28.finish();
            }
        }
        array_26.finish();
    }
}

pub fn serialize_structure_crate_model_acknowledge_alarm_action_request(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AcknowledgeAlarmActionRequest,
) {
    if let Some(var_29) = &input.request_id {
        object.key("requestId").string(var_29);
    }
    if let Some(var_30) = &input.alarm_model_name {
        object.key("alarmModelName").string(var_30);
    }
    if let Some(var_31) = &input.key_value {
        object.key("keyValue").string(var_31);
    }
    if let Some(var_32) = &input.note {
        object.key("note").string(var_32);
    }
}

pub fn serialize_structure_crate_model_disable_alarm_action_request(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DisableAlarmActionRequest,
) {
    if let Some(var_33) = &input.request_id {
        object.key("requestId").string(var_33);
    }
    if let Some(var_34) = &input.alarm_model_name {
        object.key("alarmModelName").string(var_34);
    }
    if let Some(var_35) = &input.key_value {
        object.key("keyValue").string(var_35);
    }
    if let Some(var_36) = &input.note {
        object.key("note").string(var_36);
    }
}

pub fn serialize_structure_crate_model_enable_alarm_action_request(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::EnableAlarmActionRequest,
) {
    if let Some(var_37) = &input.request_id {
        object.key("requestId").string(var_37);
    }
    if let Some(var_38) = &input.alarm_model_name {
        object.key("alarmModelName").string(var_38);
    }
    if let Some(var_39) = &input.key_value {
        object.key("keyValue").string(var_39);
    }
    if let Some(var_40) = &input.note {
        object.key("note").string(var_40);
    }
}

pub fn serialize_structure_crate_model_message(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Message,
) {
    if let Some(var_41) = &input.message_id {
        object.key("messageId").string(var_41);
    }
    if let Some(var_42) = &input.input_name {
        object.key("inputName").string(var_42);
    }
    if let Some(var_43) = &input.payload {
        object
            .key("payload")
            .string_unchecked(&smithy_types::base64::encode(var_43));
    }
    if let Some(var_44) = &input.timestamp {
        let mut object_45 = object.key("timestamp").start_object();
        crate::json_ser::serialize_structure_crate_model_timestamp_value(&mut object_45, var_44);
        object_45.finish();
    }
}

pub fn serialize_structure_crate_model_reset_alarm_action_request(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ResetAlarmActionRequest,
) {
    if let Some(var_46) = &input.request_id {
        object.key("requestId").string(var_46);
    }
    if let Some(var_47) = &input.alarm_model_name {
        object.key("alarmModelName").string(var_47);
    }
    if let Some(var_48) = &input.key_value {
        object.key("keyValue").string(var_48);
    }
    if let Some(var_49) = &input.note {
        object.key("note").string(var_49);
    }
}

pub fn serialize_structure_crate_model_snooze_alarm_action_request(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SnoozeAlarmActionRequest,
) {
    if let Some(var_50) = &input.request_id {
        object.key("requestId").string(var_50);
    }
    if let Some(var_51) = &input.alarm_model_name {
        object.key("alarmModelName").string(var_51);
    }
    if let Some(var_52) = &input.key_value {
        object.key("keyValue").string(var_52);
    }
    if let Some(var_53) = &input.note {
        object.key("note").string(var_53);
    }
    if let Some(var_54) = &input.snooze_duration {
        object.key("snoozeDuration").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_54).into()),
        );
    }
}

pub fn serialize_structure_crate_model_update_detector_request(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UpdateDetectorRequest,
) {
    if let Some(var_55) = &input.message_id {
        object.key("messageId").string(var_55);
    }
    if let Some(var_56) = &input.detector_model_name {
        object.key("detectorModelName").string(var_56);
    }
    if let Some(var_57) = &input.key_value {
        object.key("keyValue").string(var_57);
    }
    if let Some(var_58) = &input.state {
        let mut object_59 = object.key("state").start_object();
        crate::json_ser::serialize_structure_crate_model_detector_state_definition(
            &mut object_59,
            var_58,
        );
        object_59.finish();
    }
}

pub fn serialize_structure_crate_model_timestamp_value(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TimestampValue,
) {
    if let Some(var_60) = &input.time_in_millis {
        object.key("timeInMillis").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_60).into()),
        );
    }
}

pub fn serialize_structure_crate_model_detector_state_definition(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DetectorStateDefinition,
) {
    if let Some(var_61) = &input.state_name {
        object.key("stateName").string(var_61);
    }
    if let Some(var_62) = &input.variables {
        let mut array_63 = object.key("variables").start_array();
        for item_64 in var_62 {
            {
                let mut object_65 = array_63.value().start_object();
                crate::json_ser::serialize_structure_crate_model_variable_definition(
                    &mut object_65,
                    item_64,
                );
                object_65.finish();
            }
        }
        array_63.finish();
    }
    if let Some(var_66) = &input.timers {
        let mut array_67 = object.key("timers").start_array();
        for item_68 in var_66 {
            {
                let mut object_69 = array_67.value().start_object();
                crate::json_ser::serialize_structure_crate_model_timer_definition(
                    &mut object_69,
                    item_68,
                );
                object_69.finish();
            }
        }
        array_67.finish();
    }
}

pub fn serialize_structure_crate_model_variable_definition(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::VariableDefinition,
) {
    if let Some(var_70) = &input.name {
        object.key("name").string(var_70);
    }
    if let Some(var_71) = &input.value {
        object.key("value").string(var_71);
    }
}

pub fn serialize_structure_crate_model_timer_definition(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TimerDefinition,
) {
    if let Some(var_72) = &input.name {
        object.key("name").string(var_72);
    }
    if let Some(var_73) = &input.seconds {
        object.key("seconds").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_73).into()),
        );
    }
}
