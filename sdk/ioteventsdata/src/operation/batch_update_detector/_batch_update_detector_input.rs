// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchUpdateDetectorInput {
    /// <p>The list of detectors (instances) to update, along with the values to update.</p>
    #[doc(hidden)]
    pub detectors: std::option::Option<std::vec::Vec<crate::types::UpdateDetectorRequest>>,
}
impl BatchUpdateDetectorInput {
    /// <p>The list of detectors (instances) to update, along with the values to update.</p>
    pub fn detectors(&self) -> std::option::Option<&[crate::types::UpdateDetectorRequest]> {
        self.detectors.as_deref()
    }
}
impl BatchUpdateDetectorInput {
    /// Creates a new builder-style object to manufacture [`BatchUpdateDetectorInput`](crate::operation::batch_update_detector::BatchUpdateDetectorInput).
    pub fn builder(
    ) -> crate::operation::batch_update_detector::builders::BatchUpdateDetectorInputBuilder {
        crate::operation::batch_update_detector::builders::BatchUpdateDetectorInputBuilder::default(
        )
    }
}

/// A builder for [`BatchUpdateDetectorInput`](crate::operation::batch_update_detector::BatchUpdateDetectorInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchUpdateDetectorInputBuilder {
    pub(crate) detectors: std::option::Option<std::vec::Vec<crate::types::UpdateDetectorRequest>>,
}
impl BatchUpdateDetectorInputBuilder {
    /// Appends an item to `detectors`.
    ///
    /// To override the contents of this collection use [`set_detectors`](Self::set_detectors).
    ///
    /// <p>The list of detectors (instances) to update, along with the values to update.</p>
    pub fn detectors(mut self, input: crate::types::UpdateDetectorRequest) -> Self {
        let mut v = self.detectors.unwrap_or_default();
        v.push(input);
        self.detectors = Some(v);
        self
    }
    /// <p>The list of detectors (instances) to update, along with the values to update.</p>
    pub fn set_detectors(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::UpdateDetectorRequest>>,
    ) -> Self {
        self.detectors = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchUpdateDetectorInput`](crate::operation::batch_update_detector::BatchUpdateDetectorInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_update_detector::BatchUpdateDetectorInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::batch_update_detector::BatchUpdateDetectorInput {
                detectors: self.detectors,
            },
        )
    }
}
