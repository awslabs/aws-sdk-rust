// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartExperiment`](crate::operation::start_experiment::builders::StartExperimentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::start_experiment::builders::StartExperimentFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::start_experiment::builders::StartExperimentFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`experiment_template_id(impl Into<String>)`](crate::operation::start_experiment::builders::StartExperimentFluentBuilder::experiment_template_id) / [`set_experiment_template_id(Option<String>)`](crate::operation::start_experiment::builders::StartExperimentFluentBuilder::set_experiment_template_id): <p>The ID of the experiment template.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::start_experiment::builders::StartExperimentFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::start_experiment::builders::StartExperimentFluentBuilder::set_tags): <p>The tags to apply to the experiment.</p>
    /// - On success, responds with [`StartExperimentOutput`](crate::operation::start_experiment::StartExperimentOutput) with field(s):
    ///   - [`experiment(Option<Experiment>)`](crate::operation::start_experiment::StartExperimentOutput::experiment): <p>Information about the experiment.</p>
    /// - On failure, responds with [`SdkError<StartExperimentError>`](crate::operation::start_experiment::StartExperimentError)
    pub fn start_experiment(
        &self,
    ) -> crate::operation::start_experiment::builders::StartExperimentFluentBuilder {
        crate::operation::start_experiment::builders::StartExperimentFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
