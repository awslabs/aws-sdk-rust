// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateTargetAccountConfigurationInput {
    /// <p>The ID of the experiment template.</p>
    pub experiment_template_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services account ID of the target account.</p>
    pub account_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
    /// <p>The description of the target account.</p>
    pub description: ::std::option::Option<::std::string::String>,
}
impl UpdateTargetAccountConfigurationInput {
    /// <p>The ID of the experiment template.</p>
    pub fn experiment_template_id(&self) -> ::std::option::Option<&str> {
        self.experiment_template_id.as_deref()
    }
    /// <p>The Amazon Web Services account ID of the target account.</p>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The description of the target account.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl UpdateTargetAccountConfigurationInput {
    /// Creates a new builder-style object to manufacture [`UpdateTargetAccountConfigurationInput`](crate::operation::update_target_account_configuration::UpdateTargetAccountConfigurationInput).
    pub fn builder() -> crate::operation::update_target_account_configuration::builders::UpdateTargetAccountConfigurationInputBuilder {
        crate::operation::update_target_account_configuration::builders::UpdateTargetAccountConfigurationInputBuilder::default()
    }
}

/// A builder for [`UpdateTargetAccountConfigurationInput`](crate::operation::update_target_account_configuration::UpdateTargetAccountConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateTargetAccountConfigurationInputBuilder {
    pub(crate) experiment_template_id: ::std::option::Option<::std::string::String>,
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl UpdateTargetAccountConfigurationInputBuilder {
    /// <p>The ID of the experiment template.</p>
    /// This field is required.
    pub fn experiment_template_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.experiment_template_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the experiment template.</p>
    pub fn set_experiment_template_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.experiment_template_id = input;
        self
    }
    /// <p>The ID of the experiment template.</p>
    pub fn get_experiment_template_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.experiment_template_id
    }
    /// <p>The Amazon Web Services account ID of the target account.</p>
    /// This field is required.
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID of the target account.</p>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The Amazon Web Services account ID of the target account.</p>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The description of the target account.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the target account.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the target account.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`UpdateTargetAccountConfigurationInput`](crate::operation::update_target_account_configuration::UpdateTargetAccountConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_target_account_configuration::UpdateTargetAccountConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_target_account_configuration::UpdateTargetAccountConfigurationInput {
                experiment_template_id: self.experiment_template_id,
                account_id: self.account_id,
                role_arn: self.role_arn,
                description: self.description,
            },
        )
    }
}
