// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the configuration for experiment logging to Amazon S3.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExperimentTemplateS3LogConfiguration {
    /// <p>The name of the destination bucket.</p>
    #[doc(hidden)]
    pub bucket_name: std::option::Option<std::string::String>,
    /// <p>The bucket prefix.</p>
    #[doc(hidden)]
    pub prefix: std::option::Option<std::string::String>,
}
impl ExperimentTemplateS3LogConfiguration {
    /// <p>The name of the destination bucket.</p>
    pub fn bucket_name(&self) -> std::option::Option<&str> {
        self.bucket_name.as_deref()
    }
    /// <p>The bucket prefix.</p>
    pub fn prefix(&self) -> std::option::Option<&str> {
        self.prefix.as_deref()
    }
}
impl ExperimentTemplateS3LogConfiguration {
    /// Creates a new builder-style object to manufacture [`ExperimentTemplateS3LogConfiguration`](crate::types::ExperimentTemplateS3LogConfiguration).
    pub fn builder() -> crate::types::builders::ExperimentTemplateS3LogConfigurationBuilder {
        crate::types::builders::ExperimentTemplateS3LogConfigurationBuilder::default()
    }
}

/// A builder for [`ExperimentTemplateS3LogConfiguration`](crate::types::ExperimentTemplateS3LogConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExperimentTemplateS3LogConfigurationBuilder {
    pub(crate) bucket_name: std::option::Option<std::string::String>,
    pub(crate) prefix: std::option::Option<std::string::String>,
}
impl ExperimentTemplateS3LogConfigurationBuilder {
    /// <p>The name of the destination bucket.</p>
    pub fn bucket_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_name = Some(input.into());
        self
    }
    /// <p>The name of the destination bucket.</p>
    pub fn set_bucket_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket_name = input;
        self
    }
    /// <p>The bucket prefix.</p>
    pub fn prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.prefix = Some(input.into());
        self
    }
    /// <p>The bucket prefix.</p>
    pub fn set_prefix(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.prefix = input;
        self
    }
    /// Consumes the builder and constructs a [`ExperimentTemplateS3LogConfiguration`](crate::types::ExperimentTemplateS3LogConfiguration).
    pub fn build(self) -> crate::types::ExperimentTemplateS3LogConfiguration {
        crate::types::ExperimentTemplateS3LogConfiguration {
            bucket_name: self.bucket_name,
            prefix: self.prefix,
        }
    }
}
