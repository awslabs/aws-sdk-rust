// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies experiment options for running an experiment.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartExperimentExperimentOptionsInput {
    /// <p>Specifies the actions mode for experiment options.</p>
    pub actions_mode: ::std::option::Option<crate::types::ActionsMode>,
}
impl StartExperimentExperimentOptionsInput {
    /// <p>Specifies the actions mode for experiment options.</p>
    pub fn actions_mode(&self) -> ::std::option::Option<&crate::types::ActionsMode> {
        self.actions_mode.as_ref()
    }
}
impl StartExperimentExperimentOptionsInput {
    /// Creates a new builder-style object to manufacture [`StartExperimentExperimentOptionsInput`](crate::types::StartExperimentExperimentOptionsInput).
    pub fn builder() -> crate::types::builders::StartExperimentExperimentOptionsInputBuilder {
        crate::types::builders::StartExperimentExperimentOptionsInputBuilder::default()
    }
}

/// A builder for [`StartExperimentExperimentOptionsInput`](crate::types::StartExperimentExperimentOptionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StartExperimentExperimentOptionsInputBuilder {
    pub(crate) actions_mode: ::std::option::Option<crate::types::ActionsMode>,
}
impl StartExperimentExperimentOptionsInputBuilder {
    /// <p>Specifies the actions mode for experiment options.</p>
    pub fn actions_mode(mut self, input: crate::types::ActionsMode) -> Self {
        self.actions_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the actions mode for experiment options.</p>
    pub fn set_actions_mode(mut self, input: ::std::option::Option<crate::types::ActionsMode>) -> Self {
        self.actions_mode = input;
        self
    }
    /// <p>Specifies the actions mode for experiment options.</p>
    pub fn get_actions_mode(&self) -> &::std::option::Option<crate::types::ActionsMode> {
        &self.actions_mode
    }
    /// Consumes the builder and constructs a [`StartExperimentExperimentOptionsInput`](crate::types::StartExperimentExperimentOptionsInput).
    pub fn build(self) -> crate::types::StartExperimentExperimentOptionsInput {
        crate::types::StartExperimentExperimentOptionsInput {
            actions_mode: self.actions_mode,
        }
    }
}
