// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a target account configuration for an experiment.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExperimentTargetAccountConfiguration {
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services account ID of the target account.</p>
    pub account_id: ::std::option::Option<::std::string::String>,
    /// <p>The description of the target account.</p>
    pub description: ::std::option::Option<::std::string::String>,
}
impl ExperimentTargetAccountConfiguration {
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The Amazon Web Services account ID of the target account.</p>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The description of the target account.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl ExperimentTargetAccountConfiguration {
    /// Creates a new builder-style object to manufacture [`ExperimentTargetAccountConfiguration`](crate::types::ExperimentTargetAccountConfiguration).
    pub fn builder() -> crate::types::builders::ExperimentTargetAccountConfigurationBuilder {
        crate::types::builders::ExperimentTargetAccountConfigurationBuilder::default()
    }
}

/// A builder for [`ExperimentTargetAccountConfiguration`](crate::types::ExperimentTargetAccountConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExperimentTargetAccountConfigurationBuilder {
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl ExperimentTargetAccountConfigurationBuilder {
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an IAM role for the target account.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The Amazon Web Services account ID of the target account.</p>
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID of the target account.</p>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The Amazon Web Services account ID of the target account.</p>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// <p>The description of the target account.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the target account.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the target account.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`ExperimentTargetAccountConfiguration`](crate::types::ExperimentTargetAccountConfiguration).
    pub fn build(self) -> crate::types::ExperimentTargetAccountConfiguration {
        crate::types::ExperimentTargetAccountConfiguration {
            role_arn: self.role_arn,
            account_id: self.account_id,
            description: self.description,
        }
    }
}
