// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_experiment_template;

pub(crate) mod shape_create_target_account_configuration;

pub(crate) mod shape_delete_experiment_template;

pub(crate) mod shape_delete_target_account_configuration;

pub(crate) mod shape_get_action;

pub(crate) mod shape_get_experiment;

pub(crate) mod shape_get_experiment_target_account_configuration;

pub(crate) mod shape_get_experiment_template;

pub(crate) mod shape_get_target_account_configuration;

pub(crate) mod shape_get_target_resource_type;

pub(crate) mod shape_list_actions;

pub(crate) mod shape_list_experiment_resolved_targets;

pub(crate) mod shape_list_experiment_target_account_configurations;

pub(crate) mod shape_list_experiment_templates;

pub(crate) mod shape_list_experiments;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_target_account_configurations;

pub(crate) mod shape_list_target_resource_types;

pub(crate) mod shape_start_experiment;

pub(crate) mod shape_stop_experiment;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_experiment_template;

pub(crate) mod shape_update_target_account_configuration;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_experiment_template_input;

pub(crate) mod shape_create_target_account_configuration_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_experiment_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_experiment_template_input;

pub(crate) mod shape_update_target_account_configuration_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_action;

pub(crate) mod shape_action_summary_list;

pub(crate) mod shape_create_experiment_template_action_input;

pub(crate) mod shape_create_experiment_template_experiment_options_input;

pub(crate) mod shape_create_experiment_template_log_configuration_input;

pub(crate) mod shape_create_experiment_template_stop_condition_input;

pub(crate) mod shape_create_experiment_template_target_input;

pub(crate) mod shape_experiment;

pub(crate) mod shape_experiment_summary_list;

pub(crate) mod shape_experiment_target_account_configuration;

pub(crate) mod shape_experiment_target_account_configuration_list;

pub(crate) mod shape_experiment_template;

pub(crate) mod shape_experiment_template_summary_list;

pub(crate) mod shape_resolved_target_list;

pub(crate) mod shape_start_experiment_experiment_options_input;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_target_account_configuration;

pub(crate) mod shape_target_account_configuration_list;

pub(crate) mod shape_target_resource_type;

pub(crate) mod shape_target_resource_type_summary_list;

pub(crate) mod shape_update_experiment_template_action_input_item;

pub(crate) mod shape_update_experiment_template_experiment_options_input;

pub(crate) mod shape_update_experiment_template_log_configuration_input;

pub(crate) mod shape_update_experiment_template_stop_condition_input;

pub(crate) mod shape_update_experiment_template_target_input;

pub(crate) mod shape_action_parameter_map;

pub(crate) mod shape_action_summary;

pub(crate) mod shape_action_target_map;

pub(crate) mod shape_experiment_action_map;

pub(crate) mod shape_experiment_log_configuration;

pub(crate) mod shape_experiment_options;

pub(crate) mod shape_experiment_state;

pub(crate) mod shape_experiment_stop_condition_list;

pub(crate) mod shape_experiment_summary;

pub(crate) mod shape_experiment_target_account_configuration_summary;

pub(crate) mod shape_experiment_target_map;

pub(crate) mod shape_experiment_template_action_map;

pub(crate) mod shape_experiment_template_cloud_watch_logs_log_configuration_input;

pub(crate) mod shape_experiment_template_experiment_options;

pub(crate) mod shape_experiment_template_log_configuration;

pub(crate) mod shape_experiment_template_s3_log_configuration_input;

pub(crate) mod shape_experiment_template_stop_condition_list;

pub(crate) mod shape_experiment_template_summary;

pub(crate) mod shape_experiment_template_target_input_filter;

pub(crate) mod shape_experiment_template_target_map;

pub(crate) mod shape_resolved_target;

pub(crate) mod shape_target_account_configuration_summary;

pub(crate) mod shape_target_resource_type_parameter_map;

pub(crate) mod shape_target_resource_type_summary;

pub(crate) mod shape_action_parameter;

pub(crate) mod shape_action_target;

pub(crate) mod shape_experiment_action;

pub(crate) mod shape_experiment_cloud_watch_logs_log_configuration;

pub(crate) mod shape_experiment_s3_log_configuration;

pub(crate) mod shape_experiment_stop_condition;

pub(crate) mod shape_experiment_target;

pub(crate) mod shape_experiment_template_action;

pub(crate) mod shape_experiment_template_cloud_watch_logs_log_configuration;

pub(crate) mod shape_experiment_template_s3_log_configuration;

pub(crate) mod shape_experiment_template_stop_condition;

pub(crate) mod shape_experiment_template_target;

pub(crate) mod shape_target_information_map;

pub(crate) mod shape_target_resource_type_parameter;

pub(crate) mod shape_experiment_action_parameter_map;

pub(crate) mod shape_experiment_action_start_after_list;

pub(crate) mod shape_experiment_action_state;

pub(crate) mod shape_experiment_action_target_map;

pub(crate) mod shape_experiment_target_filter_list;

pub(crate) mod shape_experiment_target_parameter_map;

pub(crate) mod shape_experiment_template_action_parameter_map;

pub(crate) mod shape_experiment_template_action_start_after_list;

pub(crate) mod shape_experiment_template_action_target_map;

pub(crate) mod shape_experiment_template_target_filter_list;

pub(crate) mod shape_experiment_template_target_parameter_map;

pub(crate) mod shape_resource_arn_list;

pub(crate) mod shape_experiment_target_filter;

pub(crate) mod shape_experiment_template_target_filter;

pub(crate) mod shape_experiment_target_filter_values;

pub(crate) mod shape_experiment_template_target_filter_values;
