#![allow(deprecated)]
#![allow(clippy::module_inception)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::large_enum_variant)]
#![allow(clippy::wrong_self_convention)]
#![allow(clippy::should_implement_trait)]
#![allow(clippy::blacklisted_name)]
#![allow(clippy::vec_init_then_push)]
#![allow(clippy::type_complexity)]
#![allow(clippy::needless_return)]
#![allow(clippy::derive_partial_eq_without_eq)]
#![allow(rustdoc::bare_urls)]
#![warn(missing_docs)]
//! <note>
//! <p>
//! <b>Amazon CodeCatalyst is in preview release and subject to change.</b>
//! </p>
//! </note>
//! <p>Welcome to the Amazon CodeCatalyst API reference. This reference provides descriptions of operations and data types for Amazon CodeCatalyst. You can use the Amazon CodeCatalyst
//! API to work with the following objects. </p>
//! <p>Dev Environments and the Amazon Web Services Toolkits, by calling the following:</p>
//! <ul>
//! <li>
//! <p>
//! <a>CreateAccessToken</a>, which creates a personal access token (PAT) for the current user.</p>
//! </li>
//! <li>
//! <p>
//! <a>CreateDevEnvironment</a>, which creates a Dev Environment,
//! where you can quickly work on the code stored in the source repositories of your project.</p>
//! </li>
//! <li>
//! <p>
//! <a>CreateProject</a> which creates a project in a specified space.</p>
//! </li>
//! <li>
//! <p>
//! <a>CreateSourceRepositoryBranch</a>, which creates a branch in a specified repository where you can work on code.</p>
//! </li>
//! <li>
//! <p>
//! <a>DeleteDevEnvironment</a>, which deletes a Dev Environment.</p>
//! </li>
//! <li>
//! <p>
//! <a>GetDevEnvironment</a>, which returns information about a Dev Environment.</p>
//! </li>
//! <li>
//! <p>
//! <a>GetProject</a>, which returns information about a project.</p>
//! </li>
//! <li>
//! <p>
//! <a>GetSourceRepositoryCloneUrls</a>, which returns information about the URLs that can be used with a Git client to clone a source
//! repository.</p>
//! </li>
//! <li>
//! <p>
//! <a>GetSubscription</a>, which returns information about the Amazon Web Services account used for billing purposes
//! and the billing plan for the space.</p>
//! </li>
//! <li>
//! <p>
//! <a>GetUserDetails</a>, which returns information about a user in Amazon CodeCatalyst.</p>
//! </li>
//! <li>
//! <p>
//! <a>ListDevEnvironments</a>, which retrives a list of Dev Environments in a project.</p>
//! </li>
//! <li>
//! <p>
//! <a>ListProjects</a>, which retrieves a list of projects in a space.</p>
//! </li>
//! <li>
//! <p>
//! <a>ListSourceRepositories</a>, which retrieves a list of source repositories in a project.</p>
//! </li>
//! <li>
//! <p>
//! <a>ListSourceRepositoryBranches</a>, which retrieves a list of branches in a source repository.</p>
//! </li>
//! <li>
//! <p>
//! <a>ListSpaces</a>, which retrieves a list of spaces.</p>
//! </li>
//! <li>
//! <p>
//! <a>StartDevEnvironment</a>, which starts a specified Dev Environment and puts it into an active state.</p>
//! </li>
//! <li>
//! <p>
//! <a>StartDevEnvironmentSession</a>, which starts a session to a specified Dev Environment.</p>
//! </li>
//! <li>
//! <p>
//! <a>StopDevEnvironment</a>, which stops a specified Dev Environment and puts it into an stopped state.</p>
//! </li>
//! <li>
//! <p>
//! <a>UpdateDevEnvironment</a>, which changes one or more values for a Dev Environment.</p>
//! </li>
//! <li>
//! <p>
//! <a>VerifySession</a>, which verifies whether the calling user has a valid Amazon CodeCatalyst login and session.</p>
//! </li>
//! </ul>
//! <p>Security, activity, and resource management in Amazon CodeCatalyst, by calling the following:</p>
//! <ul>
//! <li>
//! <p>
//! <a>DeleteAccessToken</a>, which deletes a specified personal access token (PAT).</p>
//! </li>
//! <li>
//! <p>
//! <a>ListAccessTokens</a>, which lists all personal access tokens (PATs) associated with a user.</p>
//! </li>
//! <li>
//! <p>
//! <a>ListEventLogs</a>, which retrieves a list of events that occurred during a specified time period in a space.</p>
//! </li>
//! </ul>
//!
//! # Crate Organization
//!
//! The entry point for most customers will be [`Client`]. [`Client`] exposes one method for each API offered
//! by the service.
//!
//! Some APIs require complex or nested arguments. These exist in [`model`](crate::model).
//!
//! Lastly, errors that can be returned by the service are contained within [`error`]. [`Error`] defines a meta
//! error encompassing all possible errors that can be returned by the service.
//!
//! The other modules within this crate are not required for normal usage.

// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use error_meta::Error;

#[doc(inline)]
pub use config::Config;

pub use aws_credential_types::Credentials;

pub use aws_types::region::Region;

pub(crate) static API_METADATA: aws_http::user_agent::ApiMetadata =
    aws_http::user_agent::ApiMetadata::new("codecatalyst", crate::PKG_VERSION);

pub use aws_types::app_name::AppName;

pub use aws_smithy_http::endpoint::Endpoint;

/// Crate version number.
pub static PKG_VERSION: &str = env!("CARGO_PKG_VERSION");

/// Client and fluent builders for calling Amazon CodeCatalyst.
pub mod client;

/// Configuration for Amazon CodeCatalyst.
pub mod config;

/// Endpoint resolution functionality.
pub mod endpoint;

/// All error types that operations can return. Documentation on these types is copied from the model.
pub mod error;

mod error_meta;

/// Input structures for operations. Documentation on these types is copied from the model.
pub mod input;

/// Data structures used by operation inputs/outputs.
pub mod model;

/// All operations that this crate can perform.
pub mod operation;

/// Output structures for operations. Documentation on these types is copied from the model.
pub mod output;

/// Data primitives referenced by other data types.
pub mod types;

///
pub mod middleware;

///
mod no_credentials;

/// Paginators for the service
pub mod paginator;

mod lens;

pub(crate) mod protocol_serde;

mod endpoint_lib;

mod json_errors;

#[doc(inline)]
pub use client::Client;
