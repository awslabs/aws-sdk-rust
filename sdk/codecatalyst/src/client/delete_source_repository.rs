// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteSourceRepository`](crate::operation::delete_source_repository::builders::DeleteSourceRepositoryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`space_name(impl Into<String>)`](crate::operation::delete_source_repository::builders::DeleteSourceRepositoryFluentBuilder::space_name) / [`set_space_name(Option<String>)`](crate::operation::delete_source_repository::builders::DeleteSourceRepositoryFluentBuilder::set_space_name):<br>required: **true**<br><p>The name of the space.</p><br>
    ///   - [`project_name(impl Into<String>)`](crate::operation::delete_source_repository::builders::DeleteSourceRepositoryFluentBuilder::project_name) / [`set_project_name(Option<String>)`](crate::operation::delete_source_repository::builders::DeleteSourceRepositoryFluentBuilder::set_project_name):<br>required: **true**<br><p>The name of the project in the space.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::delete_source_repository::builders::DeleteSourceRepositoryFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::delete_source_repository::builders::DeleteSourceRepositoryFluentBuilder::set_name):<br>required: **true**<br><p>The name of the source repository.</p><br>
    /// - On success, responds with [`DeleteSourceRepositoryOutput`](crate::operation::delete_source_repository::DeleteSourceRepositoryOutput) with field(s):
    ///   - [`space_name(String)`](crate::operation::delete_source_repository::DeleteSourceRepositoryOutput::space_name): <p>The name of the space.</p>
    ///   - [`project_name(String)`](crate::operation::delete_source_repository::DeleteSourceRepositoryOutput::project_name): <p>The name of the project in the space.</p>
    ///   - [`name(String)`](crate::operation::delete_source_repository::DeleteSourceRepositoryOutput::name): <p>The name of the repository.</p>
    /// - On failure, responds with [`SdkError<DeleteSourceRepositoryError>`](crate::operation::delete_source_repository::DeleteSourceRepositoryError)
    pub fn delete_source_repository(&self) -> crate::operation::delete_source_repository::builders::DeleteSourceRepositoryFluentBuilder {
        crate::operation::delete_source_repository::builders::DeleteSourceRepositoryFluentBuilder::new(self.handle.clone())
    }
}
