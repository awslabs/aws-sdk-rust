// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDevEnvironment`](crate::operation::delete_dev_environment::builders::DeleteDevEnvironmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`space_name(impl Into<String>)`](crate::operation::delete_dev_environment::builders::DeleteDevEnvironmentFluentBuilder::space_name) / [`set_space_name(Option<String>)`](crate::operation::delete_dev_environment::builders::DeleteDevEnvironmentFluentBuilder::set_space_name): <p>The name of the space.</p>
    ///   - [`project_name(impl Into<String>)`](crate::operation::delete_dev_environment::builders::DeleteDevEnvironmentFluentBuilder::project_name) / [`set_project_name(Option<String>)`](crate::operation::delete_dev_environment::builders::DeleteDevEnvironmentFluentBuilder::set_project_name): <p>The name of the project in the space.</p>
    ///   - [`id(impl Into<String>)`](crate::operation::delete_dev_environment::builders::DeleteDevEnvironmentFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::delete_dev_environment::builders::DeleteDevEnvironmentFluentBuilder::set_id): <p>The system-generated unique ID of the Dev Environment you want to delete. To retrieve a list of Dev Environment IDs, use <code>ListDevEnvironments</code>.</p>
    /// - On success, responds with [`DeleteDevEnvironmentOutput`](crate::operation::delete_dev_environment::DeleteDevEnvironmentOutput) with field(s):
    ///   - [`space_name(Option<String>)`](crate::operation::delete_dev_environment::DeleteDevEnvironmentOutput::space_name): <p>The name of the space.</p>
    ///   - [`project_name(Option<String>)`](crate::operation::delete_dev_environment::DeleteDevEnvironmentOutput::project_name): <p>The name of the project in the space.</p>
    ///   - [`id(Option<String>)`](crate::operation::delete_dev_environment::DeleteDevEnvironmentOutput::id): <p>The system-generated unique ID of the deleted Dev Environment. </p>
    /// - On failure, responds with [`SdkError<DeleteDevEnvironmentError>`](crate::operation::delete_dev_environment::DeleteDevEnvironmentError)
    pub fn delete_dev_environment(
        &self,
    ) -> crate::operation::delete_dev_environment::builders::DeleteDevEnvironmentFluentBuilder {
        crate::operation::delete_dev_environment::builders::DeleteDevEnvironmentFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
