// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetSubscriptionInput {
    /// <p>The name of the space.</p>
    #[doc(hidden)]
    pub space_name: std::option::Option<std::string::String>,
}
impl GetSubscriptionInput {
    /// <p>The name of the space.</p>
    pub fn space_name(&self) -> std::option::Option<&str> {
        self.space_name.as_deref()
    }
}
impl GetSubscriptionInput {
    /// Creates a new builder-style object to manufacture [`GetSubscriptionInput`](crate::operation::get_subscription::GetSubscriptionInput).
    pub fn builder() -> crate::operation::get_subscription::builders::GetSubscriptionInputBuilder {
        crate::operation::get_subscription::builders::GetSubscriptionInputBuilder::default()
    }
}

/// A builder for [`GetSubscriptionInput`](crate::operation::get_subscription::GetSubscriptionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetSubscriptionInputBuilder {
    pub(crate) space_name: std::option::Option<std::string::String>,
}
impl GetSubscriptionInputBuilder {
    /// <p>The name of the space.</p>
    pub fn space_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.space_name = Some(input.into());
        self
    }
    /// <p>The name of the space.</p>
    pub fn set_space_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.space_name = input;
        self
    }
    /// Consumes the builder and constructs a [`GetSubscriptionInput`](crate::operation::get_subscription::GetSubscriptionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_subscription::GetSubscriptionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_subscription::GetSubscriptionInput {
            space_name: self.space_name,
        })
    }
}
