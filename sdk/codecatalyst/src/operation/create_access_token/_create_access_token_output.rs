// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct CreateAccessTokenOutput {
    /// <p>The secret value of the personal access token.</p>
    #[doc(hidden)]
    pub secret: std::option::Option<std::string::String>,
    /// <p>The friendly name of the personal access token.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The date and time the personal access token expires, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>. If not specified, the default is one year from creation.</p>
    #[doc(hidden)]
    pub expires_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl CreateAccessTokenOutput {
    /// <p>The secret value of the personal access token.</p>
    pub fn secret(&self) -> std::option::Option<&str> {
        self.secret.as_deref()
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The date and time the personal access token expires, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>. If not specified, the default is one year from creation.</p>
    pub fn expires_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.expires_time.as_ref()
    }
}
impl std::fmt::Debug for CreateAccessTokenOutput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("CreateAccessTokenOutput");
        formatter.field("secret", &"*** Sensitive Data Redacted ***");
        formatter.field("name", &self.name);
        formatter.field("expires_time", &self.expires_time);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
impl aws_http::request_id::RequestId for CreateAccessTokenOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateAccessTokenOutput {
    /// Creates a new builder-style object to manufacture [`CreateAccessTokenOutput`](crate::operation::create_access_token::CreateAccessTokenOutput).
    pub fn builder(
    ) -> crate::operation::create_access_token::builders::CreateAccessTokenOutputBuilder {
        crate::operation::create_access_token::builders::CreateAccessTokenOutputBuilder::default()
    }
}

/// A builder for [`CreateAccessTokenOutput`](crate::operation::create_access_token::CreateAccessTokenOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct CreateAccessTokenOutputBuilder {
    pub(crate) secret: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) expires_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl CreateAccessTokenOutputBuilder {
    /// <p>The secret value of the personal access token.</p>
    pub fn secret(mut self, input: impl Into<std::string::String>) -> Self {
        self.secret = Some(input.into());
        self
    }
    /// <p>The secret value of the personal access token.</p>
    pub fn set_secret(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.secret = input;
        self
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The date and time the personal access token expires, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>. If not specified, the default is one year from creation.</p>
    pub fn expires_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.expires_time = Some(input);
        self
    }
    /// <p>The date and time the personal access token expires, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>. If not specified, the default is one year from creation.</p>
    pub fn set_expires_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.expires_time = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateAccessTokenOutput`](crate::operation::create_access_token::CreateAccessTokenOutput).
    pub fn build(self) -> crate::operation::create_access_token::CreateAccessTokenOutput {
        crate::operation::create_access_token::CreateAccessTokenOutput {
            secret: self.secret,
            name: self.name,
            expires_time: self.expires_time,
            _request_id: self._request_id,
        }
    }
}
impl std::fmt::Debug for CreateAccessTokenOutputBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("CreateAccessTokenOutputBuilder");
        formatter.field("secret", &"*** Sensitive Data Redacted ***");
        formatter.field("name", &self.name);
        formatter.field("expires_time", &self.expires_time);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
