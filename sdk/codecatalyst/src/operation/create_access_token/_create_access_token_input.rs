// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateAccessTokenInput {
    /// <p>The friendly name of the personal access token.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The date and time the personal access token expires, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub expires_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CreateAccessTokenInput {
    /// <p>The friendly name of the personal access token.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The date and time the personal access token expires, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn expires_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.expires_time.as_ref()
    }
}
impl CreateAccessTokenInput {
    /// Creates a new builder-style object to manufacture [`CreateAccessTokenInput`](crate::operation::create_access_token::CreateAccessTokenInput).
    pub fn builder() -> crate::operation::create_access_token::builders::CreateAccessTokenInputBuilder {
        crate::operation::create_access_token::builders::CreateAccessTokenInputBuilder::default()
    }
}

/// A builder for [`CreateAccessTokenInput`](crate::operation::create_access_token::CreateAccessTokenInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateAccessTokenInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) expires_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CreateAccessTokenInputBuilder {
    /// <p>The friendly name of the personal access token.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The date and time the personal access token expires, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn expires_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expires_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time the personal access token expires, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn set_expires_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expires_time = input;
        self
    }
    /// <p>The date and time the personal access token expires, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn get_expires_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expires_time
    }
    /// Consumes the builder and constructs a [`CreateAccessTokenInput`](crate::operation::create_access_token::CreateAccessTokenInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_access_token::CreateAccessTokenInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::create_access_token::CreateAccessTokenInput {
            name: self.name,
            expires_time: self.expires_time,
        })
    }
}
