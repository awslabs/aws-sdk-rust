// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a specified personal access token (PAT).</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AccessTokenSummary {
    /// <p>The system-generated ID of the personal access token.</p>
    pub id: ::std::string::String,
    /// <p>The friendly name of the personal access token.</p>
    pub name: ::std::string::String,
    /// <p>The date and time when the personal access token will expire, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub expires_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl AccessTokenSummary {
    /// <p>The system-generated ID of the personal access token.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The date and time when the personal access token will expire, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn expires_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.expires_time.as_ref()
    }
}
impl AccessTokenSummary {
    /// Creates a new builder-style object to manufacture [`AccessTokenSummary`](crate::types::AccessTokenSummary).
    pub fn builder() -> crate::types::builders::AccessTokenSummaryBuilder {
        crate::types::builders::AccessTokenSummaryBuilder::default()
    }
}

/// A builder for [`AccessTokenSummary`](crate::types::AccessTokenSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AccessTokenSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) expires_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl AccessTokenSummaryBuilder {
    /// <p>The system-generated ID of the personal access token.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The system-generated ID of the personal access token.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The system-generated ID of the personal access token.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The friendly name of the personal access token.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The date and time when the personal access token will expire, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn expires_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expires_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the personal access token will expire, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn set_expires_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expires_time = input;
        self
    }
    /// <p>The date and time when the personal access token will expire, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn get_expires_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expires_time
    }
    /// Consumes the builder and constructs a [`AccessTokenSummary`](crate::types::AccessTokenSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::AccessTokenSummaryBuilder::id)
    /// - [`name`](crate::types::builders::AccessTokenSummaryBuilder::name)
    pub fn build(self) -> ::std::result::Result<crate::types::AccessTokenSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AccessTokenSummary {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building AccessTokenSummary",
                )
            })?,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building AccessTokenSummary",
                )
            })?,
            expires_time: self.expires_time,
        })
    }
}
