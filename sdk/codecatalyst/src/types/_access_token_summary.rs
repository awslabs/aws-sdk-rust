// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a specified personal access token (PAT).</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AccessTokenSummary {
    /// <p>The system-generated ID of the personal access token.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The friendly name of the personal access token.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The date and time when the personal access token will expire, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    #[doc(hidden)]
    pub expires_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl AccessTokenSummary {
    /// <p>The system-generated ID of the personal access token.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The date and time when the personal access token will expire, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn expires_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.expires_time.as_ref()
    }
}
impl AccessTokenSummary {
    /// Creates a new builder-style object to manufacture [`AccessTokenSummary`](crate::types::AccessTokenSummary).
    pub fn builder() -> crate::types::builders::AccessTokenSummaryBuilder {
        crate::types::builders::AccessTokenSummaryBuilder::default()
    }
}

/// A builder for [`AccessTokenSummary`](crate::types::AccessTokenSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccessTokenSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) expires_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl AccessTokenSummaryBuilder {
    /// <p>The system-generated ID of the personal access token.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The system-generated ID of the personal access token.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The friendly name of the personal access token.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The date and time when the personal access token will expire, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn expires_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.expires_time = Some(input);
        self
    }
    /// <p>The date and time when the personal access token will expire, in coordinated universal time (UTC) timestamp format as specified in <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339</a>.</p>
    pub fn set_expires_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.expires_time = input;
        self
    }
    /// Consumes the builder and constructs a [`AccessTokenSummary`](crate::types::AccessTokenSummary).
    pub fn build(self) -> crate::types::AccessTokenSummary {
        crate::types::AccessTokenSummary {
            id: self.id,
            name: self.name,
            expires_time: self.expires_time,
        }
    }
}
