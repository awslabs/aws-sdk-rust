// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the source repsitory for a Dev Environment. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DevEnvironmentRepositorySummary {
    /// <p>The name of the source repository.</p>
    pub repository_name: ::std::string::String,
    /// <p>The name of the branch in a source repository cloned into the Dev Environment. </p>
    pub branch_name: ::std::option::Option<::std::string::String>,
}
impl DevEnvironmentRepositorySummary {
    /// <p>The name of the source repository.</p>
    pub fn repository_name(&self) -> &str {
        use std::ops::Deref;
        self.repository_name.deref()
    }
    /// <p>The name of the branch in a source repository cloned into the Dev Environment. </p>
    pub fn branch_name(&self) -> ::std::option::Option<&str> {
        self.branch_name.as_deref()
    }
}
impl DevEnvironmentRepositorySummary {
    /// Creates a new builder-style object to manufacture [`DevEnvironmentRepositorySummary`](crate::types::DevEnvironmentRepositorySummary).
    pub fn builder() -> crate::types::builders::DevEnvironmentRepositorySummaryBuilder {
        crate::types::builders::DevEnvironmentRepositorySummaryBuilder::default()
    }
}

/// A builder for [`DevEnvironmentRepositorySummary`](crate::types::DevEnvironmentRepositorySummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DevEnvironmentRepositorySummaryBuilder {
    pub(crate) repository_name: ::std::option::Option<::std::string::String>,
    pub(crate) branch_name: ::std::option::Option<::std::string::String>,
}
impl DevEnvironmentRepositorySummaryBuilder {
    /// <p>The name of the source repository.</p>
    /// This field is required.
    pub fn repository_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.repository_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the source repository.</p>
    pub fn set_repository_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.repository_name = input;
        self
    }
    /// <p>The name of the source repository.</p>
    pub fn get_repository_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.repository_name
    }
    /// <p>The name of the branch in a source repository cloned into the Dev Environment. </p>
    pub fn branch_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.branch_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the branch in a source repository cloned into the Dev Environment. </p>
    pub fn set_branch_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.branch_name = input;
        self
    }
    /// <p>The name of the branch in a source repository cloned into the Dev Environment. </p>
    pub fn get_branch_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.branch_name
    }
    /// Consumes the builder and constructs a [`DevEnvironmentRepositorySummary`](crate::types::DevEnvironmentRepositorySummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`repository_name`](crate::types::builders::DevEnvironmentRepositorySummaryBuilder::repository_name)
    pub fn build(self) -> ::std::result::Result<crate::types::DevEnvironmentRepositorySummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DevEnvironmentRepositorySummary {
            repository_name: self.repository_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "repository_name",
                    "repository_name was not specified but it is required when building DevEnvironmentRepositorySummary",
                )
            })?,
            branch_name: self.branch_name,
        })
    }
}
