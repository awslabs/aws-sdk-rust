// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about connection details for a Dev Environment.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct DevEnvironmentAccessDetails {
    /// <p>The URL used to send commands to and from the Dev Environment.</p>
    pub stream_url: ::std::string::String,
    /// <p>An encrypted token value that contains session and caller information used to authenticate the connection.</p>
    pub token_value: ::std::string::String,
}
impl DevEnvironmentAccessDetails {
    /// <p>The URL used to send commands to and from the Dev Environment.</p>
    pub fn stream_url(&self) -> &str {
        use std::ops::Deref;
        self.stream_url.deref()
    }
    /// <p>An encrypted token value that contains session and caller information used to authenticate the connection.</p>
    pub fn token_value(&self) -> &str {
        use std::ops::Deref;
        self.token_value.deref()
    }
}
impl ::std::fmt::Debug for DevEnvironmentAccessDetails {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("DevEnvironmentAccessDetails");
        formatter.field("stream_url", &"*** Sensitive Data Redacted ***");
        formatter.field("token_value", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl DevEnvironmentAccessDetails {
    /// Creates a new builder-style object to manufacture [`DevEnvironmentAccessDetails`](crate::types::DevEnvironmentAccessDetails).
    pub fn builder() -> crate::types::builders::DevEnvironmentAccessDetailsBuilder {
        crate::types::builders::DevEnvironmentAccessDetailsBuilder::default()
    }
}

/// A builder for [`DevEnvironmentAccessDetails`](crate::types::DevEnvironmentAccessDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct DevEnvironmentAccessDetailsBuilder {
    pub(crate) stream_url: ::std::option::Option<::std::string::String>,
    pub(crate) token_value: ::std::option::Option<::std::string::String>,
}
impl DevEnvironmentAccessDetailsBuilder {
    /// <p>The URL used to send commands to and from the Dev Environment.</p>
    /// This field is required.
    pub fn stream_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.stream_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The URL used to send commands to and from the Dev Environment.</p>
    pub fn set_stream_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.stream_url = input;
        self
    }
    /// <p>The URL used to send commands to and from the Dev Environment.</p>
    pub fn get_stream_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.stream_url
    }
    /// <p>An encrypted token value that contains session and caller information used to authenticate the connection.</p>
    /// This field is required.
    pub fn token_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.token_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An encrypted token value that contains session and caller information used to authenticate the connection.</p>
    pub fn set_token_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.token_value = input;
        self
    }
    /// <p>An encrypted token value that contains session and caller information used to authenticate the connection.</p>
    pub fn get_token_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.token_value
    }
    /// Consumes the builder and constructs a [`DevEnvironmentAccessDetails`](crate::types::DevEnvironmentAccessDetails).
    /// This method will fail if any of the following fields are not set:
    /// - [`stream_url`](crate::types::builders::DevEnvironmentAccessDetailsBuilder::stream_url)
    /// - [`token_value`](crate::types::builders::DevEnvironmentAccessDetailsBuilder::token_value)
    pub fn build(self) -> ::std::result::Result<crate::types::DevEnvironmentAccessDetails, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DevEnvironmentAccessDetails {
            stream_url: self.stream_url.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "stream_url",
                    "stream_url was not specified but it is required when building DevEnvironmentAccessDetails",
                )
            })?,
            token_value: self.token_value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "token_value",
                    "token_value was not specified but it is required when building DevEnvironmentAccessDetails",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for DevEnvironmentAccessDetailsBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("DevEnvironmentAccessDetailsBuilder");
        formatter.field("stream_url", &"*** Sensitive Data Redacted ***");
        formatter.field("token_value", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
