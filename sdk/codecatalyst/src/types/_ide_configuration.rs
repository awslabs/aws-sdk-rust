// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the configuration of an integrated development environment (IDE) for a Dev Environment.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IdeConfiguration {
    /// <p>A link to the IDE runtime image.</p>
    #[doc(hidden)]
    pub runtime: std::option::Option<std::string::String>,
    /// <p>The name of the IDE.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl IdeConfiguration {
    /// <p>A link to the IDE runtime image.</p>
    pub fn runtime(&self) -> std::option::Option<&str> {
        self.runtime.as_deref()
    }
    /// <p>The name of the IDE.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl IdeConfiguration {
    /// Creates a new builder-style object to manufacture [`IdeConfiguration`](crate::types::IdeConfiguration).
    pub fn builder() -> crate::types::builders::IdeConfigurationBuilder {
        crate::types::builders::IdeConfigurationBuilder::default()
    }
}

/// A builder for [`IdeConfiguration`](crate::types::IdeConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IdeConfigurationBuilder {
    pub(crate) runtime: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
}
impl IdeConfigurationBuilder {
    /// <p>A link to the IDE runtime image.</p>
    pub fn runtime(mut self, input: impl Into<std::string::String>) -> Self {
        self.runtime = Some(input.into());
        self
    }
    /// <p>A link to the IDE runtime image.</p>
    pub fn set_runtime(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.runtime = input;
        self
    }
    /// <p>The name of the IDE.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the IDE.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`IdeConfiguration`](crate::types::IdeConfiguration).
    pub fn build(self) -> crate::types::IdeConfiguration {
        crate::types::IdeConfiguration {
            runtime: self.runtime,
            name: self.name,
        }
    }
}
