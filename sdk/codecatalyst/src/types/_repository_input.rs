// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a repository that will be cloned to a Dev Environment.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RepositoryInput {
    /// <p>The name of the source repository.</p>
    #[doc(hidden)]
    pub repository_name: std::option::Option<std::string::String>,
    /// <p>The name of the branch in a source repository.</p>
    #[doc(hidden)]
    pub branch_name: std::option::Option<std::string::String>,
}
impl RepositoryInput {
    /// <p>The name of the source repository.</p>
    pub fn repository_name(&self) -> std::option::Option<&str> {
        self.repository_name.as_deref()
    }
    /// <p>The name of the branch in a source repository.</p>
    pub fn branch_name(&self) -> std::option::Option<&str> {
        self.branch_name.as_deref()
    }
}
impl RepositoryInput {
    /// Creates a new builder-style object to manufacture [`RepositoryInput`](crate::types::RepositoryInput).
    pub fn builder() -> crate::types::builders::RepositoryInputBuilder {
        crate::types::builders::RepositoryInputBuilder::default()
    }
}

/// A builder for [`RepositoryInput`](crate::types::RepositoryInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RepositoryInputBuilder {
    pub(crate) repository_name: std::option::Option<std::string::String>,
    pub(crate) branch_name: std::option::Option<std::string::String>,
}
impl RepositoryInputBuilder {
    /// <p>The name of the source repository.</p>
    pub fn repository_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.repository_name = Some(input.into());
        self
    }
    /// <p>The name of the source repository.</p>
    pub fn set_repository_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.repository_name = input;
        self
    }
    /// <p>The name of the branch in a source repository.</p>
    pub fn branch_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.branch_name = Some(input.into());
        self
    }
    /// <p>The name of the branch in a source repository.</p>
    pub fn set_branch_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.branch_name = input;
        self
    }
    /// Consumes the builder and constructs a [`RepositoryInput`](crate::types::RepositoryInput).
    pub fn build(self) -> crate::types::RepositoryInput {
        crate::types::RepositoryInput {
            repository_name: self.repository_name,
            branch_name: self.branch_name,
        }
    }
}
