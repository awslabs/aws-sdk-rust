// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetHealthEvent`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitor_name(impl Into<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::monitor_name) / [`set_monitor_name(Option<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::set_monitor_name):<br>required: **true**<br><p>The name of the monitor.</p><br>
    ///   - [`event_id(impl Into<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::event_id) / [`set_event_id(Option<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::set_event_id):<br>required: **true**<br><p>The internally-generated identifier of a health event. Because <code>EventID</code> contains the forward slash (“/”) character, you must URL-encode the <code>EventID</code> field in the request URL.</p><br>
    ///   - [`linked_account_id(impl Into<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::linked_account_id) / [`set_linked_account_id(Option<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::set_linked_account_id):<br>required: **false**<br><p>The account ID for an account that you've set up cross-account sharing for in Amazon CloudWatch Internet Monitor. You configure cross-account sharing by using Amazon CloudWatch Observability Access Manager. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cwim-cross-account.html">Internet Monitor cross-account observability</a> in the Amazon CloudWatch Internet Monitor User Guide.</p><br>
    /// - On success, responds with [`GetHealthEventOutput`](crate::operation::get_health_event::GetHealthEventOutput) with field(s):
    ///   - [`event_arn(String)`](crate::operation::get_health_event::GetHealthEventOutput::event_arn): <p>The Amazon Resource Name (ARN) of the event.</p>
    ///   - [`event_id(String)`](crate::operation::get_health_event::GetHealthEventOutput::event_id): <p>The internally-generated identifier of a health event.</p>
    ///   - [`started_at(DateTime)`](crate::operation::get_health_event::GetHealthEventOutput::started_at): <p>The time when a health event started.</p>
    ///   - [`ended_at(Option<DateTime>)`](crate::operation::get_health_event::GetHealthEventOutput::ended_at): <p>The time when a health event was resolved. If the health event is still active, the end time is not set.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::get_health_event::GetHealthEventOutput::created_at): <p>The time when a health event was created.</p>
    ///   - [`last_updated_at(DateTime)`](crate::operation::get_health_event::GetHealthEventOutput::last_updated_at): <p>The time when a health event was last updated or recalculated.</p>
    ///   - [`impacted_locations(Vec::<ImpactedLocation>)`](crate::operation::get_health_event::GetHealthEventOutput::impacted_locations): <p>The locations affected by a health event.</p>
    ///   - [`status(HealthEventStatus)`](crate::operation::get_health_event::GetHealthEventOutput::status): <p>The status of a health event.</p>
    ///   - [`percent_of_total_traffic_impacted(Option<f64>)`](crate::operation::get_health_event::GetHealthEventOutput::percent_of_total_traffic_impacted): <p>The impact on total traffic that a health event has, in increased latency or reduced availability. This is the percentage of how much latency has increased or availability has decreased during the event, compared to what is typical for traffic from this client location to the Amazon Web Services location using this client network.</p>
    ///   - [`impact_type(HealthEventImpactType)`](crate::operation::get_health_event::GetHealthEventOutput::impact_type): <p>The type of impairment of a specific health event.</p>
    ///   - [`health_score_threshold(f64)`](crate::operation::get_health_event::GetHealthEventOutput::health_score_threshold): <p>The threshold percentage for a health score that determines, along with other configuration information, when Internet Monitor creates a health event when there's an internet issue that affects your application end users.</p>
    /// - On failure, responds with [`SdkError<GetHealthEventError>`](crate::operation::get_health_event::GetHealthEventError)
    pub fn get_health_event(&self) -> crate::operation::get_health_event::builders::GetHealthEventFluentBuilder {
        crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::new(self.handle.clone())
    }
}
