// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_monitor;

pub(crate) mod shape_delete_monitor;

pub(crate) mod shape_get_health_event;

pub(crate) mod shape_get_monitor;

pub(crate) mod shape_list_health_events;

pub(crate) mod shape_list_monitors;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_monitor;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_monitor_input;

pub(crate) mod shape_internal_server_error_exception;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_update_monitor_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_health_event_list;

pub(crate) mod shape_health_events_config;

pub(crate) mod shape_impacted_locations_list;

pub(crate) mod shape_internet_measurements_log_delivery;

pub(crate) mod shape_monitor_list;

pub(crate) mod shape_set_of_arns;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_health_event;

pub(crate) mod shape_impacted_location;

pub(crate) mod shape_local_health_events_config;

pub(crate) mod shape_monitor;

pub(crate) mod shape_s3_config;

pub(crate) mod shape_internet_health;

pub(crate) mod shape_network_impairment;

pub(crate) mod shape_availability_measurement;

pub(crate) mod shape_network_list;

pub(crate) mod shape_performance_measurement;

pub(crate) mod shape_network;

pub(crate) mod shape_round_trip_time;
