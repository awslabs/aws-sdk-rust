// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn deser_payload_send_api_asset_send_api_asset_output_body(
    body: &[u8],
) -> std::result::Result<std::option::Option<std::string::String>, crate::error::SendApiAssetError>
{
    (!body.is_empty())
        .then(|| {
            let body_str =
                std::str::from_utf8(body).map_err(crate::error::SendApiAssetError::unhandled)?;
            Ok(body_str.to_string())
        })
        .transpose()
}

pub fn deser_prefix_header_send_api_asset_send_api_asset_output_response_headers(
    header_map: &http::HeaderMap,
) -> std::result::Result<
    std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    aws_smithy_http::header::ParseError,
> {
    let headers = aws_smithy_http::header::headers_for_prefix(header_map, "");
    let out: std::result::Result<_, _> = headers.map(|(key, header_name)| {
                            let values = header_map.get_all(header_name);
                            crate::http_serde::deser_prefix_header_send_api_asset_send_api_asset_output_response_headers_inner(values.iter()).map(|v| (key.to_string(), v.unwrap()))
                        }).collect();
    out.map(Some)
}

pub fn deser_prefix_header_send_api_asset_send_api_asset_output_response_headers_inner(
    headers: http::header::ValueIter<http::HeaderValue>,
) -> std::result::Result<Option<std::string::String>, aws_smithy_http::header::ParseError> {
    aws_smithy_http::header::one_or_none(headers)
}
