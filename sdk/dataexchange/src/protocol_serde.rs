// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_cancel_job;

pub(crate) mod shape_create_data_set;

pub(crate) mod shape_create_event_action;

pub(crate) mod shape_create_job;

pub(crate) mod shape_create_revision;

pub(crate) mod shape_delete_asset;

pub(crate) mod shape_delete_data_set;

pub(crate) mod shape_delete_event_action;

pub(crate) mod shape_delete_revision;

pub(crate) mod shape_get_asset;

pub(crate) mod shape_get_data_set;

pub(crate) mod shape_get_event_action;

pub(crate) mod shape_get_job;

pub(crate) mod shape_get_revision;

pub(crate) mod shape_list_data_set_revisions;

pub(crate) mod shape_list_data_sets;

pub(crate) mod shape_list_event_actions;

pub(crate) mod shape_list_jobs;

pub(crate) mod shape_list_revision_assets;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_revoke_revision;

pub(crate) mod shape_send_api_asset;

pub(crate) mod shape_send_api_asset_input;

pub(crate) mod shape_start_job;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_asset;

pub(crate) mod shape_update_data_set;

pub(crate) mod shape_update_event_action;

pub(crate) mod shape_update_revision;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_data_set_input;

pub(crate) mod shape_create_event_action_input;

pub(crate) mod shape_create_job_input;

pub(crate) mod shape_create_revision_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_revoke_revision_input;

pub(crate) mod shape_send_api_asset_output;

pub(crate) mod shape_service_limit_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_asset_input;

pub(crate) mod shape_update_data_set_input;

pub(crate) mod shape_update_event_action_input;

pub(crate) mod shape_update_revision_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_action;

pub(crate) mod shape_asset_details;

pub(crate) mod shape_event;

pub(crate) mod shape_list_of_asset_entry;

pub(crate) mod shape_list_of_data_set_entry;

pub(crate) mod shape_list_of_event_action_entry;

pub(crate) mod shape_list_of_job_entry;

pub(crate) mod shape_list_of_job_error;

pub(crate) mod shape_list_of_revision_entry;

#[allow(non_snake_case)]
pub(crate) mod shape_map_of__string;

pub(crate) mod shape_origin_details;

pub(crate) mod shape_request_details;

pub(crate) mod shape_response_details;

pub(crate) mod shape_api_gateway_api_asset;

pub(crate) mod shape_asset_entry;

pub(crate) mod shape_auto_export_revision_to_s3_request_details;

pub(crate) mod shape_create_s3_data_access_from_s3_bucket_request_details;

pub(crate) mod shape_create_s3_data_access_from_s3_bucket_response_details;

pub(crate) mod shape_data_set_entry;

pub(crate) mod shape_event_action_entry;

pub(crate) mod shape_export_asset_to_signed_url_request_details;

pub(crate) mod shape_export_asset_to_signed_url_response_details;

pub(crate) mod shape_export_assets_to_s3_request_details;

pub(crate) mod shape_export_assets_to_s3_response_details;

pub(crate) mod shape_export_revisions_to_s3_request_details;

pub(crate) mod shape_export_revisions_to_s3_response_details;

pub(crate) mod shape_import_asset_from_api_gateway_api_request_details;

pub(crate) mod shape_import_asset_from_api_gateway_api_response_details;

pub(crate) mod shape_import_asset_from_signed_url_request_details;

pub(crate) mod shape_import_asset_from_signed_url_response_details;

pub(crate) mod shape_import_assets_from_lake_formation_tag_policy_request_details;

pub(crate) mod shape_import_assets_from_lake_formation_tag_policy_response_details;

pub(crate) mod shape_import_assets_from_redshift_data_shares_request_details;

pub(crate) mod shape_import_assets_from_redshift_data_shares_response_details;

pub(crate) mod shape_import_assets_from_s3_request_details;

pub(crate) mod shape_import_assets_from_s3_response_details;

pub(crate) mod shape_job_entry;

pub(crate) mod shape_job_error;

pub(crate) mod shape_lake_formation_data_permission_asset;

pub(crate) mod shape_redshift_data_share_asset;

pub(crate) mod shape_revision_entry;

pub(crate) mod shape_revision_published;

pub(crate) mod shape_s3_data_access_asset;

pub(crate) mod shape_s3_snapshot_asset;

pub(crate) mod shape_asset_destination_entry;

pub(crate) mod shape_asset_source_entry;

pub(crate) mod shape_auto_export_revision_destination_entry;

pub(crate) mod shape_database_lf_tag_policy_and_permissions;

pub(crate) mod shape_details;

pub(crate) mod shape_export_server_side_encryption;

pub(crate) mod shape_lake_formation_data_permission_details;

#[allow(non_snake_case)]
pub(crate) mod shape_list_of__string;

pub(crate) mod shape_list_of_asset_destination_entry;

pub(crate) mod shape_list_of_asset_source_entry;

pub(crate) mod shape_list_of_lf_permissions;

pub(crate) mod shape_list_of_redshift_data_share_asset_source_entry;

pub(crate) mod shape_list_of_revision_destination_entry;

pub(crate) mod shape_redshift_data_share_asset_source_entry;

pub(crate) mod shape_revision_destination_entry;

pub(crate) mod shape_s3_data_access_asset_source_entry;

pub(crate) mod shape_table_lf_tag_policy_and_permissions;

pub(crate) mod shape_import_asset_from_signed_url_job_error_details;

pub(crate) mod shape_lf_tag;

pub(crate) mod shape_lf_tag_policy_details;

pub(crate) mod shape_list_of_database_lf_tag_policy_permissions;

pub(crate) mod shape_list_of_lf_tags;

pub(crate) mod shape_list_of_table_tag_policy_lf_permissions;

pub(crate) mod shape_lf_resource_details;

pub(crate) mod shape_database_lf_tag_policy;

pub(crate) mod shape_list_of_lf_tag_values;

pub(crate) mod shape_table_lf_tag_policy;
