// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateEventActionInput {
    /// <p>What occurs after a certain event.</p>
    #[doc(hidden)]
    pub action: std::option::Option<crate::types::Action>,
    /// <p>What occurs to start an action.</p>
    #[doc(hidden)]
    pub event: std::option::Option<crate::types::Event>,
}
impl CreateEventActionInput {
    /// <p>What occurs after a certain event.</p>
    pub fn action(&self) -> std::option::Option<&crate::types::Action> {
        self.action.as_ref()
    }
    /// <p>What occurs to start an action.</p>
    pub fn event(&self) -> std::option::Option<&crate::types::Event> {
        self.event.as_ref()
    }
}
impl CreateEventActionInput {
    /// Creates a new builder-style object to manufacture [`CreateEventActionInput`](crate::operation::create_event_action::CreateEventActionInput).
    pub fn builder(
    ) -> crate::operation::create_event_action::builders::CreateEventActionInputBuilder {
        crate::operation::create_event_action::builders::CreateEventActionInputBuilder::default()
    }
}

/// A builder for [`CreateEventActionInput`](crate::operation::create_event_action::CreateEventActionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateEventActionInputBuilder {
    pub(crate) action: std::option::Option<crate::types::Action>,
    pub(crate) event: std::option::Option<crate::types::Event>,
}
impl CreateEventActionInputBuilder {
    /// <p>What occurs after a certain event.</p>
    pub fn action(mut self, input: crate::types::Action) -> Self {
        self.action = Some(input);
        self
    }
    /// <p>What occurs after a certain event.</p>
    pub fn set_action(mut self, input: std::option::Option<crate::types::Action>) -> Self {
        self.action = input;
        self
    }
    /// <p>What occurs to start an action.</p>
    pub fn event(mut self, input: crate::types::Event) -> Self {
        self.event = Some(input);
        self
    }
    /// <p>What occurs to start an action.</p>
    pub fn set_event(mut self, input: std::option::Option<crate::types::Event>) -> Self {
        self.event = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateEventActionInput`](crate::operation::create_event_action::CreateEventActionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_event_action::CreateEventActionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_event_action::CreateEventActionInput {
                action: self.action,
                event: self.event,
            },
        )
    }
}
