// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Extra details specific to the affected scope in this LF data set.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LakeFormationTagPolicyDetails {
    /// <p>The underlying Glue database that the notification is referring to.</p>
    pub database: ::std::option::Option<::std::string::String>,
    /// <p>The underlying Glue table that the notification is referring to.</p>
    pub table: ::std::option::Option<::std::string::String>,
}
impl LakeFormationTagPolicyDetails {
    /// <p>The underlying Glue database that the notification is referring to.</p>
    pub fn database(&self) -> ::std::option::Option<&str> {
        self.database.as_deref()
    }
    /// <p>The underlying Glue table that the notification is referring to.</p>
    pub fn table(&self) -> ::std::option::Option<&str> {
        self.table.as_deref()
    }
}
impl LakeFormationTagPolicyDetails {
    /// Creates a new builder-style object to manufacture [`LakeFormationTagPolicyDetails`](crate::types::LakeFormationTagPolicyDetails).
    pub fn builder() -> crate::types::builders::LakeFormationTagPolicyDetailsBuilder {
        crate::types::builders::LakeFormationTagPolicyDetailsBuilder::default()
    }
}

/// A builder for [`LakeFormationTagPolicyDetails`](crate::types::LakeFormationTagPolicyDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LakeFormationTagPolicyDetailsBuilder {
    pub(crate) database: ::std::option::Option<::std::string::String>,
    pub(crate) table: ::std::option::Option<::std::string::String>,
}
impl LakeFormationTagPolicyDetailsBuilder {
    /// <p>The underlying Glue database that the notification is referring to.</p>
    pub fn database(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.database = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The underlying Glue database that the notification is referring to.</p>
    pub fn set_database(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.database = input;
        self
    }
    /// <p>The underlying Glue database that the notification is referring to.</p>
    pub fn get_database(&self) -> &::std::option::Option<::std::string::String> {
        &self.database
    }
    /// <p>The underlying Glue table that the notification is referring to.</p>
    pub fn table(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.table = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The underlying Glue table that the notification is referring to.</p>
    pub fn set_table(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.table = input;
        self
    }
    /// <p>The underlying Glue table that the notification is referring to.</p>
    pub fn get_table(&self) -> &::std::option::Option<::std::string::String> {
        &self.table
    }
    /// Consumes the builder and constructs a [`LakeFormationTagPolicyDetails`](crate::types::LakeFormationTagPolicyDetails).
    pub fn build(self) -> crate::types::LakeFormationTagPolicyDetails {
        crate::types::LakeFormationTagPolicyDetails {
            database: self.database,
            table: self.table,
        }
    }
}
