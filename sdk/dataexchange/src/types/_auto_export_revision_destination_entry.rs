// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A revision destination is the Amazon S3 bucket folder destination to where the export will be sent.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AutoExportRevisionDestinationEntry {
    /// <p>The Amazon S3 bucket that is the destination for the event action.</p>
    #[doc(hidden)]
    pub bucket: std::option::Option<std::string::String>,
    /// <p>A string representing the pattern for generated names of the individual assets in the revision. For more information about key patterns, see <a href="https://docs.aws.amazon.com/data-exchange/latest/userguide/jobs.html#revision-export-keypatterns">Key patterns when exporting revisions</a>.</p>
    #[doc(hidden)]
    pub key_pattern: std::option::Option<std::string::String>,
}
impl AutoExportRevisionDestinationEntry {
    /// <p>The Amazon S3 bucket that is the destination for the event action.</p>
    pub fn bucket(&self) -> std::option::Option<&str> {
        self.bucket.as_deref()
    }
    /// <p>A string representing the pattern for generated names of the individual assets in the revision. For more information about key patterns, see <a href="https://docs.aws.amazon.com/data-exchange/latest/userguide/jobs.html#revision-export-keypatterns">Key patterns when exporting revisions</a>.</p>
    pub fn key_pattern(&self) -> std::option::Option<&str> {
        self.key_pattern.as_deref()
    }
}
impl AutoExportRevisionDestinationEntry {
    /// Creates a new builder-style object to manufacture [`AutoExportRevisionDestinationEntry`](crate::types::AutoExportRevisionDestinationEntry).
    pub fn builder() -> crate::types::builders::AutoExportRevisionDestinationEntryBuilder {
        crate::types::builders::AutoExportRevisionDestinationEntryBuilder::default()
    }
}

/// A builder for [`AutoExportRevisionDestinationEntry`](crate::types::AutoExportRevisionDestinationEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AutoExportRevisionDestinationEntryBuilder {
    pub(crate) bucket: std::option::Option<std::string::String>,
    pub(crate) key_pattern: std::option::Option<std::string::String>,
}
impl AutoExportRevisionDestinationEntryBuilder {
    /// <p>The Amazon S3 bucket that is the destination for the event action.</p>
    pub fn bucket(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket = Some(input.into());
        self
    }
    /// <p>The Amazon S3 bucket that is the destination for the event action.</p>
    pub fn set_bucket(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket = input;
        self
    }
    /// <p>A string representing the pattern for generated names of the individual assets in the revision. For more information about key patterns, see <a href="https://docs.aws.amazon.com/data-exchange/latest/userguide/jobs.html#revision-export-keypatterns">Key patterns when exporting revisions</a>.</p>
    pub fn key_pattern(mut self, input: impl Into<std::string::String>) -> Self {
        self.key_pattern = Some(input.into());
        self
    }
    /// <p>A string representing the pattern for generated names of the individual assets in the revision. For more information about key patterns, see <a href="https://docs.aws.amazon.com/data-exchange/latest/userguide/jobs.html#revision-export-keypatterns">Key patterns when exporting revisions</a>.</p>
    pub fn set_key_pattern(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.key_pattern = input;
        self
    }
    /// Consumes the builder and constructs a [`AutoExportRevisionDestinationEntry`](crate::types::AutoExportRevisionDestinationEntry).
    pub fn build(self) -> crate::types::AutoExportRevisionDestinationEntry {
        crate::types::AutoExportRevisionDestinationEntry {
            bucket: self.bucket,
            key_pattern: self.key_pattern,
        }
    }
}
