// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The AWS Lake Formation data permission asset.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LakeFormationDataPermissionAsset {
    /// <p>Details about the AWS Lake Formation data permission.</p>
    #[doc(hidden)]
    pub lake_formation_data_permission_details:
        std::option::Option<crate::types::LakeFormationDataPermissionDetails>,
    /// <p>The data permission type.</p>
    #[doc(hidden)]
    pub lake_formation_data_permission_type:
        std::option::Option<crate::types::LakeFormationDataPermissionType>,
    /// <p>The permissions granted to the subscribers on the resource.</p>
    #[doc(hidden)]
    pub permissions: std::option::Option<std::vec::Vec<crate::types::LfPermission>>,
    /// <p>The IAM role's ARN that allows AWS Data Exchange to assume the role and grant and revoke permissions to AWS Lake Formation data permissions.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
}
impl LakeFormationDataPermissionAsset {
    /// <p>Details about the AWS Lake Formation data permission.</p>
    pub fn lake_formation_data_permission_details(
        &self,
    ) -> std::option::Option<&crate::types::LakeFormationDataPermissionDetails> {
        self.lake_formation_data_permission_details.as_ref()
    }
    /// <p>The data permission type.</p>
    pub fn lake_formation_data_permission_type(
        &self,
    ) -> std::option::Option<&crate::types::LakeFormationDataPermissionType> {
        self.lake_formation_data_permission_type.as_ref()
    }
    /// <p>The permissions granted to the subscribers on the resource.</p>
    pub fn permissions(&self) -> std::option::Option<&[crate::types::LfPermission]> {
        self.permissions.as_deref()
    }
    /// <p>The IAM role's ARN that allows AWS Data Exchange to assume the role and grant and revoke permissions to AWS Lake Formation data permissions.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
}
impl LakeFormationDataPermissionAsset {
    /// Creates a new builder-style object to manufacture [`LakeFormationDataPermissionAsset`](crate::types::LakeFormationDataPermissionAsset).
    pub fn builder() -> crate::types::builders::LakeFormationDataPermissionAssetBuilder {
        crate::types::builders::LakeFormationDataPermissionAssetBuilder::default()
    }
}

/// A builder for [`LakeFormationDataPermissionAsset`](crate::types::LakeFormationDataPermissionAsset).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LakeFormationDataPermissionAssetBuilder {
    pub(crate) lake_formation_data_permission_details:
        std::option::Option<crate::types::LakeFormationDataPermissionDetails>,
    pub(crate) lake_formation_data_permission_type:
        std::option::Option<crate::types::LakeFormationDataPermissionType>,
    pub(crate) permissions: std::option::Option<std::vec::Vec<crate::types::LfPermission>>,
    pub(crate) role_arn: std::option::Option<std::string::String>,
}
impl LakeFormationDataPermissionAssetBuilder {
    /// <p>Details about the AWS Lake Formation data permission.</p>
    pub fn lake_formation_data_permission_details(
        mut self,
        input: crate::types::LakeFormationDataPermissionDetails,
    ) -> Self {
        self.lake_formation_data_permission_details = Some(input);
        self
    }
    /// <p>Details about the AWS Lake Formation data permission.</p>
    pub fn set_lake_formation_data_permission_details(
        mut self,
        input: std::option::Option<crate::types::LakeFormationDataPermissionDetails>,
    ) -> Self {
        self.lake_formation_data_permission_details = input;
        self
    }
    /// <p>The data permission type.</p>
    pub fn lake_formation_data_permission_type(
        mut self,
        input: crate::types::LakeFormationDataPermissionType,
    ) -> Self {
        self.lake_formation_data_permission_type = Some(input);
        self
    }
    /// <p>The data permission type.</p>
    pub fn set_lake_formation_data_permission_type(
        mut self,
        input: std::option::Option<crate::types::LakeFormationDataPermissionType>,
    ) -> Self {
        self.lake_formation_data_permission_type = input;
        self
    }
    /// Appends an item to `permissions`.
    ///
    /// To override the contents of this collection use [`set_permissions`](Self::set_permissions).
    ///
    /// <p>The permissions granted to the subscribers on the resource.</p>
    pub fn permissions(mut self, input: crate::types::LfPermission) -> Self {
        let mut v = self.permissions.unwrap_or_default();
        v.push(input);
        self.permissions = Some(v);
        self
    }
    /// <p>The permissions granted to the subscribers on the resource.</p>
    pub fn set_permissions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::LfPermission>>,
    ) -> Self {
        self.permissions = input;
        self
    }
    /// <p>The IAM role's ARN that allows AWS Data Exchange to assume the role and grant and revoke permissions to AWS Lake Formation data permissions.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The IAM role's ARN that allows AWS Data Exchange to assume the role and grant and revoke permissions to AWS Lake Formation data permissions.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`LakeFormationDataPermissionAsset`](crate::types::LakeFormationDataPermissionAsset).
    pub fn build(self) -> crate::types::LakeFormationDataPermissionAsset {
        crate::types::LakeFormationDataPermissionAsset {
            lake_formation_data_permission_details: self.lake_formation_data_permission_details,
            lake_formation_data_permission_type: self.lake_formation_data_permission_type,
            permissions: self.permissions,
            role_arn: self.role_arn,
        }
    }
}
