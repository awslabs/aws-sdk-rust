// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details of the operation to be performed by the job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExportAssetToSignedUrlRequestDetails {
    /// <p>The unique identifier for the asset that is exported to a signed URL.</p>
    #[doc(hidden)]
    pub asset_id: std::option::Option<std::string::String>,
    /// <p>The unique identifier for the data set associated with this export job.</p>
    #[doc(hidden)]
    pub data_set_id: std::option::Option<std::string::String>,
    /// <p>The unique identifier for the revision associated with this export request.</p>
    #[doc(hidden)]
    pub revision_id: std::option::Option<std::string::String>,
}
impl ExportAssetToSignedUrlRequestDetails {
    /// <p>The unique identifier for the asset that is exported to a signed URL.</p>
    pub fn asset_id(&self) -> std::option::Option<&str> {
        self.asset_id.as_deref()
    }
    /// <p>The unique identifier for the data set associated with this export job.</p>
    pub fn data_set_id(&self) -> std::option::Option<&str> {
        self.data_set_id.as_deref()
    }
    /// <p>The unique identifier for the revision associated with this export request.</p>
    pub fn revision_id(&self) -> std::option::Option<&str> {
        self.revision_id.as_deref()
    }
}
impl ExportAssetToSignedUrlRequestDetails {
    /// Creates a new builder-style object to manufacture [`ExportAssetToSignedUrlRequestDetails`](crate::types::ExportAssetToSignedUrlRequestDetails).
    pub fn builder() -> crate::types::builders::ExportAssetToSignedUrlRequestDetailsBuilder {
        crate::types::builders::ExportAssetToSignedUrlRequestDetailsBuilder::default()
    }
}

/// A builder for [`ExportAssetToSignedUrlRequestDetails`](crate::types::ExportAssetToSignedUrlRequestDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExportAssetToSignedUrlRequestDetailsBuilder {
    pub(crate) asset_id: std::option::Option<std::string::String>,
    pub(crate) data_set_id: std::option::Option<std::string::String>,
    pub(crate) revision_id: std::option::Option<std::string::String>,
}
impl ExportAssetToSignedUrlRequestDetailsBuilder {
    /// <p>The unique identifier for the asset that is exported to a signed URL.</p>
    pub fn asset_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.asset_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the asset that is exported to a signed URL.</p>
    pub fn set_asset_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.asset_id = input;
        self
    }
    /// <p>The unique identifier for the data set associated with this export job.</p>
    pub fn data_set_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.data_set_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the data set associated with this export job.</p>
    pub fn set_data_set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.data_set_id = input;
        self
    }
    /// <p>The unique identifier for the revision associated with this export request.</p>
    pub fn revision_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.revision_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the revision associated with this export request.</p>
    pub fn set_revision_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.revision_id = input;
        self
    }
    /// Consumes the builder and constructs a [`ExportAssetToSignedUrlRequestDetails`](crate::types::ExportAssetToSignedUrlRequestDetails).
    pub fn build(self) -> crate::types::ExportAssetToSignedUrlRequestDetails {
        crate::types::ExportAssetToSignedUrlRequestDetails {
            asset_id: self.asset_id,
            data_set_id: self.data_set_id,
            revision_id: self.revision_id,
        }
    }
}
