// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the published revision.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RevisionPublished {
    /// <p>The data set ID of the published revision.</p>
    #[doc(hidden)]
    pub data_set_id: std::option::Option<std::string::String>,
}
impl RevisionPublished {
    /// <p>The data set ID of the published revision.</p>
    pub fn data_set_id(&self) -> std::option::Option<&str> {
        self.data_set_id.as_deref()
    }
}
impl RevisionPublished {
    /// Creates a new builder-style object to manufacture [`RevisionPublished`](crate::types::RevisionPublished).
    pub fn builder() -> crate::types::builders::RevisionPublishedBuilder {
        crate::types::builders::RevisionPublishedBuilder::default()
    }
}

/// A builder for [`RevisionPublished`](crate::types::RevisionPublished).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RevisionPublishedBuilder {
    pub(crate) data_set_id: std::option::Option<std::string::String>,
}
impl RevisionPublishedBuilder {
    /// <p>The data set ID of the published revision.</p>
    pub fn data_set_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.data_set_id = Some(input.into());
        self
    }
    /// <p>The data set ID of the published revision.</p>
    pub fn set_data_set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.data_set_id = input;
        self
    }
    /// Consumes the builder and constructs a [`RevisionPublished`](crate::types::RevisionPublished).
    pub fn build(self) -> crate::types::RevisionPublished {
        crate::types::RevisionPublished {
            data_set_id: self.data_set_id,
        }
    }
}
