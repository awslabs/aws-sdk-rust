// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateBatchPrediction`](crate::operation::update_batch_prediction::builders::UpdateBatchPredictionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`batch_prediction_id(impl Into<String>)`](crate::operation::update_batch_prediction::builders::UpdateBatchPredictionFluentBuilder::batch_prediction_id) / [`set_batch_prediction_id(Option<String>)`](crate::operation::update_batch_prediction::builders::UpdateBatchPredictionFluentBuilder::set_batch_prediction_id):<br>required: **true**<br><p>The ID assigned to the <code>BatchPrediction</code> during creation.</p><br>
    ///   - [`batch_prediction_name(impl Into<String>)`](crate::operation::update_batch_prediction::builders::UpdateBatchPredictionFluentBuilder::batch_prediction_name) / [`set_batch_prediction_name(Option<String>)`](crate::operation::update_batch_prediction::builders::UpdateBatchPredictionFluentBuilder::set_batch_prediction_name):<br>required: **true**<br><p>A new user-supplied name or description of the <code>BatchPrediction</code>.</p><br>
    /// - On success, responds with [`UpdateBatchPredictionOutput`](crate::operation::update_batch_prediction::UpdateBatchPredictionOutput) with field(s):
    ///   - [`batch_prediction_id(Option<String>)`](crate::operation::update_batch_prediction::UpdateBatchPredictionOutput::batch_prediction_id): <p>The ID assigned to the <code>BatchPrediction</code> during creation. This value should be identical to the value of the <code>BatchPredictionId</code> in the request.</p>
    /// - On failure, responds with [`SdkError<UpdateBatchPredictionError>`](crate::operation::update_batch_prediction::UpdateBatchPredictionError)
    pub fn update_batch_prediction(&self) -> crate::operation::update_batch_prediction::builders::UpdateBatchPredictionFluentBuilder {
        crate::operation::update_batch_prediction::builders::UpdateBatchPredictionFluentBuilder::new(self.handle.clone())
    }
}
