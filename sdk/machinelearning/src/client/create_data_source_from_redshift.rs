// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDataSourceFromRedshift`](crate::client::fluent_builders::CreateDataSourceFromRedshift) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`data_source_id(impl Into<String>)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::data_source_id) / [`set_data_source_id(Option<String>)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::set_data_source_id): <p>A user-supplied ID that uniquely identifies the <code>DataSource</code>.</p>
    ///   - [`data_source_name(impl Into<String>)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::data_source_name) / [`set_data_source_name(Option<String>)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::set_data_source_name): <p>A user-supplied name or description of the <code>DataSource</code>. </p>
    ///   - [`data_spec(RedshiftDataSpec)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::data_spec) / [`set_data_spec(Option<RedshiftDataSpec>)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::set_data_spec): <p>The data specification of an Amazon Redshift <code>DataSource</code>:</p>  <ul>   <li> <p>DatabaseInformation -</p>    <ul>     <li> <p> <code>DatabaseName</code> - The name of the Amazon Redshift database.</p> </li>     <li> <p> <code> ClusterIdentifier</code> - The unique ID for the Amazon Redshift cluster.</p> </li>    </ul> </li>   <li> <p>DatabaseCredentials - The AWS Identity and Access Management (IAM) credentials that are used to connect to the Amazon Redshift database.</p> </li>   <li> <p>SelectSqlQuery - The query that is used to retrieve the observation data for the <code>Datasource</code>.</p> </li>   <li> <p>S3StagingLocation - The Amazon Simple Storage Service (Amazon S3) location for staging Amazon Redshift data. The data retrieved from Amazon Redshift using the <code>SelectSqlQuery</code> query is stored in this location.</p> </li>   <li> <p>DataSchemaUri - The Amazon S3 location of the <code>DataSchema</code>.</p> </li>   <li> <p>DataSchema - A JSON string representing the schema. This is not required if <code>DataSchemaUri</code> is specified. </p> </li>   <li> <p>DataRearrangement - A JSON string that represents the splitting and rearrangement requirements for the <code>DataSource</code>.</p> <p> Sample - <code> "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</code> </p> </li>  </ul>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::set_role_arn): <p>A fully specified role Amazon Resource Name (ARN). Amazon ML assumes the role on behalf of the user to create the following:</p>  <ul>   <li> <p>A security group to allow Amazon ML to execute the <code>SelectSqlQuery</code> query on an Amazon Redshift cluster</p> </li>   <li> <p>An Amazon S3 bucket policy to grant Amazon ML read/write permissions on the <code>S3StagingLocation</code> </p> </li>  </ul>
    ///   - [`compute_statistics(bool)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::compute_statistics) / [`set_compute_statistics(bool)`](crate::client::fluent_builders::CreateDataSourceFromRedshift::set_compute_statistics): <p>The compute statistics for a <code>DataSource</code>. The statistics are generated from the observation data referenced by a <code>DataSource</code>. Amazon ML uses the statistics internally during <code>MLModel</code> training. This parameter must be set to <code>true</code> if the <code>DataSource</code> needs to be used for <code>MLModel</code> training.</p>
    /// - On success, responds with [`CreateDataSourceFromRedshiftOutput`](crate::output::CreateDataSourceFromRedshiftOutput) with field(s):
    ///   - [`data_source_id(Option<String>)`](crate::output::CreateDataSourceFromRedshiftOutput::data_source_id): <p>A user-supplied ID that uniquely identifies the datasource. This value should be identical to the value of the <code>DataSourceID</code> in the request. </p>
    /// - On failure, responds with [`SdkError<CreateDataSourceFromRedshiftError>`](crate::error::CreateDataSourceFromRedshiftError)
    pub fn create_data_source_from_redshift(
        &self,
    ) -> crate::client::fluent_builders::CreateDataSourceFromRedshift {
        crate::client::fluent_builders::CreateDataSourceFromRedshift::new(self.handle.clone())
    }
}
