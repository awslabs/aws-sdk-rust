// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PredictOutput {
    /// <p>The output from a <code>Predict</code> operation: </p>
    /// <ul>
    /// <li> <p> <code>Details</code> - Contains the following attributes: <code>DetailsAttributes.PREDICTIVE_MODEL_TYPE - REGRESSION | BINARY | MULTICLASS</code> <code>DetailsAttributes.ALGORITHM - SGD</code> </p> </li>
    /// <li> <p> <code>PredictedLabel</code> - Present for either a <code>BINARY</code> or <code>MULTICLASS</code> <code>MLModel</code> request. </p> </li>
    /// <li> <p> <code>PredictedScores</code> - Contains the raw classification score corresponding to each label. </p> </li>
    /// <li> <p> <code>PredictedValue</code> - Present for a <code>REGRESSION</code> <code>MLModel</code> request. </p> </li>
    /// </ul>
    #[doc(hidden)]
    pub prediction: std::option::Option<crate::types::Prediction>,
    _request_id: Option<String>,
}
impl PredictOutput {
    /// <p>The output from a <code>Predict</code> operation: </p>
    /// <ul>
    /// <li> <p> <code>Details</code> - Contains the following attributes: <code>DetailsAttributes.PREDICTIVE_MODEL_TYPE - REGRESSION | BINARY | MULTICLASS</code> <code>DetailsAttributes.ALGORITHM - SGD</code> </p> </li>
    /// <li> <p> <code>PredictedLabel</code> - Present for either a <code>BINARY</code> or <code>MULTICLASS</code> <code>MLModel</code> request. </p> </li>
    /// <li> <p> <code>PredictedScores</code> - Contains the raw classification score corresponding to each label. </p> </li>
    /// <li> <p> <code>PredictedValue</code> - Present for a <code>REGRESSION</code> <code>MLModel</code> request. </p> </li>
    /// </ul>
    pub fn prediction(&self) -> std::option::Option<&crate::types::Prediction> {
        self.prediction.as_ref()
    }
}
impl aws_http::request_id::RequestId for PredictOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PredictOutput {
    /// Creates a new builder-style object to manufacture [`PredictOutput`](crate::operation::predict::PredictOutput).
    pub fn builder() -> crate::operation::predict::builders::PredictOutputBuilder {
        crate::operation::predict::builders::PredictOutputBuilder::default()
    }
}

/// A builder for [`PredictOutput`](crate::operation::predict::PredictOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PredictOutputBuilder {
    pub(crate) prediction: std::option::Option<crate::types::Prediction>,
    _request_id: Option<String>,
}
impl PredictOutputBuilder {
    /// <p>The output from a <code>Predict</code> operation: </p>
    /// <ul>
    /// <li> <p> <code>Details</code> - Contains the following attributes: <code>DetailsAttributes.PREDICTIVE_MODEL_TYPE - REGRESSION | BINARY | MULTICLASS</code> <code>DetailsAttributes.ALGORITHM - SGD</code> </p> </li>
    /// <li> <p> <code>PredictedLabel</code> - Present for either a <code>BINARY</code> or <code>MULTICLASS</code> <code>MLModel</code> request. </p> </li>
    /// <li> <p> <code>PredictedScores</code> - Contains the raw classification score corresponding to each label. </p> </li>
    /// <li> <p> <code>PredictedValue</code> - Present for a <code>REGRESSION</code> <code>MLModel</code> request. </p> </li>
    /// </ul>
    pub fn prediction(mut self, input: crate::types::Prediction) -> Self {
        self.prediction = Some(input);
        self
    }
    /// <p>The output from a <code>Predict</code> operation: </p>
    /// <ul>
    /// <li> <p> <code>Details</code> - Contains the following attributes: <code>DetailsAttributes.PREDICTIVE_MODEL_TYPE - REGRESSION | BINARY | MULTICLASS</code> <code>DetailsAttributes.ALGORITHM - SGD</code> </p> </li>
    /// <li> <p> <code>PredictedLabel</code> - Present for either a <code>BINARY</code> or <code>MULTICLASS</code> <code>MLModel</code> request. </p> </li>
    /// <li> <p> <code>PredictedScores</code> - Contains the raw classification score corresponding to each label. </p> </li>
    /// <li> <p> <code>PredictedValue</code> - Present for a <code>REGRESSION</code> <code>MLModel</code> request. </p> </li>
    /// </ul>
    pub fn set_prediction(mut self, input: std::option::Option<crate::types::Prediction>) -> Self {
        self.prediction = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PredictOutput`](crate::operation::predict::PredictOutput).
    pub fn build(self) -> crate::operation::predict::PredictOutput {
        crate::operation::predict::PredictOutput {
            prediction: self.prediction,
            _request_id: self._request_id,
        }
    }
}
