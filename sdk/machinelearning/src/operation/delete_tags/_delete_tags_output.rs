// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Amazon ML returns the following elements.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteTagsOutput {
    /// <p>The ID of the ML object from which tags were deleted.</p>
    #[doc(hidden)]
    pub resource_id: std::option::Option<std::string::String>,
    /// <p>The type of the ML object from which tags were deleted.</p>
    #[doc(hidden)]
    pub resource_type: std::option::Option<crate::types::TaggableResourceType>,
    _request_id: Option<String>,
}
impl DeleteTagsOutput {
    /// <p>The ID of the ML object from which tags were deleted.</p>
    pub fn resource_id(&self) -> std::option::Option<&str> {
        self.resource_id.as_deref()
    }
    /// <p>The type of the ML object from which tags were deleted.</p>
    pub fn resource_type(&self) -> std::option::Option<&crate::types::TaggableResourceType> {
        self.resource_type.as_ref()
    }
}
impl aws_http::request_id::RequestId for DeleteTagsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteTagsOutput {
    /// Creates a new builder-style object to manufacture [`DeleteTagsOutput`](crate::operation::delete_tags::DeleteTagsOutput).
    pub fn builder() -> crate::operation::delete_tags::builders::DeleteTagsOutputBuilder {
        crate::operation::delete_tags::builders::DeleteTagsOutputBuilder::default()
    }
}

/// A builder for [`DeleteTagsOutput`](crate::operation::delete_tags::DeleteTagsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteTagsOutputBuilder {
    pub(crate) resource_id: std::option::Option<std::string::String>,
    pub(crate) resource_type: std::option::Option<crate::types::TaggableResourceType>,
    _request_id: Option<String>,
}
impl DeleteTagsOutputBuilder {
    /// <p>The ID of the ML object from which tags were deleted.</p>
    pub fn resource_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_id = Some(input.into());
        self
    }
    /// <p>The ID of the ML object from which tags were deleted.</p>
    pub fn set_resource_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// <p>The type of the ML object from which tags were deleted.</p>
    pub fn resource_type(mut self, input: crate::types::TaggableResourceType) -> Self {
        self.resource_type = Some(input);
        self
    }
    /// <p>The type of the ML object from which tags were deleted.</p>
    pub fn set_resource_type(
        mut self,
        input: std::option::Option<crate::types::TaggableResourceType>,
    ) -> Self {
        self.resource_type = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteTagsOutput`](crate::operation::delete_tags::DeleteTagsOutput).
    pub fn build(self) -> crate::operation::delete_tags::DeleteTagsOutput {
        crate::operation::delete_tags::DeleteTagsOutput {
            resource_id: self.resource_id,
            resource_type: self.resource_type,
            _request_id: self._request_id,
        }
    }
}
