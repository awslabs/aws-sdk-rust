// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetSubscriptionDefinitionVersionOutput {
    /// The ARN of the subscription definition version.
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// The time, in milliseconds since the epoch, when the subscription definition version was created.
    #[doc(hidden)]
    pub creation_timestamp: std::option::Option<std::string::String>,
    /// Information about the subscription definition version.
    #[doc(hidden)]
    pub definition: std::option::Option<crate::types::SubscriptionDefinitionVersion>,
    /// The ID of the subscription definition version.
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// The token for the next set of results, or ''null'' if there are no additional results.
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// The version of the subscription definition version.
    #[doc(hidden)]
    pub version: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetSubscriptionDefinitionVersionOutput {
    /// The ARN of the subscription definition version.
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// The time, in milliseconds since the epoch, when the subscription definition version was created.
    pub fn creation_timestamp(&self) -> std::option::Option<&str> {
        self.creation_timestamp.as_deref()
    }
    /// Information about the subscription definition version.
    pub fn definition(&self) -> std::option::Option<&crate::types::SubscriptionDefinitionVersion> {
        self.definition.as_ref()
    }
    /// The ID of the subscription definition version.
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// The version of the subscription definition version.
    pub fn version(&self) -> std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetSubscriptionDefinitionVersionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetSubscriptionDefinitionVersionOutput {
    /// Creates a new builder-style object to manufacture [`GetSubscriptionDefinitionVersionOutput`](crate::operation::get_subscription_definition_version::GetSubscriptionDefinitionVersionOutput).
    pub fn builder() -> crate::operation::get_subscription_definition_version::builders::GetSubscriptionDefinitionVersionOutputBuilder{
        crate::operation::get_subscription_definition_version::builders::GetSubscriptionDefinitionVersionOutputBuilder::default()
    }
}

/// A builder for [`GetSubscriptionDefinitionVersionOutput`](crate::operation::get_subscription_definition_version::GetSubscriptionDefinitionVersionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetSubscriptionDefinitionVersionOutputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) creation_timestamp: std::option::Option<std::string::String>,
    pub(crate) definition: std::option::Option<crate::types::SubscriptionDefinitionVersion>,
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) version: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetSubscriptionDefinitionVersionOutputBuilder {
    /// The ARN of the subscription definition version.
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// The ARN of the subscription definition version.
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// The time, in milliseconds since the epoch, when the subscription definition version was created.
    pub fn creation_timestamp(mut self, input: impl Into<std::string::String>) -> Self {
        self.creation_timestamp = Some(input.into());
        self
    }
    /// The time, in milliseconds since the epoch, when the subscription definition version was created.
    pub fn set_creation_timestamp(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.creation_timestamp = input;
        self
    }
    /// Information about the subscription definition version.
    pub fn definition(mut self, input: crate::types::SubscriptionDefinitionVersion) -> Self {
        self.definition = Some(input);
        self
    }
    /// Information about the subscription definition version.
    pub fn set_definition(
        mut self,
        input: std::option::Option<crate::types::SubscriptionDefinitionVersion>,
    ) -> Self {
        self.definition = input;
        self
    }
    /// The ID of the subscription definition version.
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// The ID of the subscription definition version.
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// The version of the subscription definition version.
    pub fn version(mut self, input: impl Into<std::string::String>) -> Self {
        self.version = Some(input.into());
        self
    }
    /// The version of the subscription definition version.
    pub fn set_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetSubscriptionDefinitionVersionOutput`](crate::operation::get_subscription_definition_version::GetSubscriptionDefinitionVersionOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_subscription_definition_version::GetSubscriptionDefinitionVersionOutput
    {
        crate::operation::get_subscription_definition_version::GetSubscriptionDefinitionVersionOutput {
            arn: self.arn
            ,
            creation_timestamp: self.creation_timestamp
            ,
            definition: self.definition
            ,
            id: self.id
            ,
            next_token: self.next_token
            ,
            version: self.version
            ,
            _request_id: self._request_id,
        }
    }
}
