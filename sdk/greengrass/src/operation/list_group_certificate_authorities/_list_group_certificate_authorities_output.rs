// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListGroupCertificateAuthoritiesOutput {
    /// A list of certificate authorities associated with the group.
    #[doc(hidden)]
    pub group_certificate_authorities:
        std::option::Option<std::vec::Vec<crate::types::GroupCertificateAuthorityProperties>>,
    _request_id: Option<String>,
}
impl ListGroupCertificateAuthoritiesOutput {
    /// A list of certificate authorities associated with the group.
    pub fn group_certificate_authorities(
        &self,
    ) -> std::option::Option<&[crate::types::GroupCertificateAuthorityProperties]> {
        self.group_certificate_authorities.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListGroupCertificateAuthoritiesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListGroupCertificateAuthoritiesOutput {
    /// Creates a new builder-style object to manufacture [`ListGroupCertificateAuthoritiesOutput`](crate::operation::list_group_certificate_authorities::ListGroupCertificateAuthoritiesOutput).
    pub fn builder() -> crate::operation::list_group_certificate_authorities::builders::ListGroupCertificateAuthoritiesOutputBuilder{
        crate::operation::list_group_certificate_authorities::builders::ListGroupCertificateAuthoritiesOutputBuilder::default()
    }
}

/// A builder for [`ListGroupCertificateAuthoritiesOutput`](crate::operation::list_group_certificate_authorities::ListGroupCertificateAuthoritiesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListGroupCertificateAuthoritiesOutputBuilder {
    pub(crate) group_certificate_authorities:
        std::option::Option<std::vec::Vec<crate::types::GroupCertificateAuthorityProperties>>,
    _request_id: Option<String>,
}
impl ListGroupCertificateAuthoritiesOutputBuilder {
    /// Appends an item to `group_certificate_authorities`.
    ///
    /// To override the contents of this collection use [`set_group_certificate_authorities`](Self::set_group_certificate_authorities).
    ///
    /// A list of certificate authorities associated with the group.
    pub fn group_certificate_authorities(
        mut self,
        input: crate::types::GroupCertificateAuthorityProperties,
    ) -> Self {
        let mut v = self.group_certificate_authorities.unwrap_or_default();
        v.push(input);
        self.group_certificate_authorities = Some(v);
        self
    }
    /// A list of certificate authorities associated with the group.
    pub fn set_group_certificate_authorities(
        mut self,
        input: std::option::Option<
            std::vec::Vec<crate::types::GroupCertificateAuthorityProperties>,
        >,
    ) -> Self {
        self.group_certificate_authorities = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListGroupCertificateAuthoritiesOutput`](crate::operation::list_group_certificate_authorities::ListGroupCertificateAuthoritiesOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_group_certificate_authorities::ListGroupCertificateAuthoritiesOutput
    {
        crate::operation::list_group_certificate_authorities::ListGroupCertificateAuthoritiesOutput {
            group_certificate_authorities: self.group_certificate_authorities
            ,
            _request_id: self._request_id,
        }
    }
}
