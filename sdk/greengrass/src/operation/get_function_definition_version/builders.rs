// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::get_function_definition_version::_get_function_definition_version_output::GetFunctionDefinitionVersionOutputBuilder;

pub use crate::operation::get_function_definition_version::_get_function_definition_version_input::GetFunctionDefinitionVersionInputBuilder;

/// Fluent builder constructing a request to `GetFunctionDefinitionVersion`.
///
/// Retrieves information about a Lambda function definition version, including which Lambda functions are included in the version and their configurations.
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct GetFunctionDefinitionVersionFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::get_function_definition_version::builders::GetFunctionDefinitionVersionInputBuilder
            }
impl GetFunctionDefinitionVersionFluentBuilder {
    /// Creates a new `GetFunctionDefinitionVersion`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::get_function_definition_version::GetFunctionDefinitionVersion,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::get_function_definition_version::GetFunctionDefinitionVersionError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::get_function_definition_version::GetFunctionDefinitionVersionOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::get_function_definition_version::GetFunctionDefinitionVersionError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// The ID of the Lambda function definition.
    pub fn function_definition_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.function_definition_id(input.into());
        self
    }
    /// The ID of the Lambda function definition.
    pub fn set_function_definition_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_function_definition_id(input);
        self
    }
    /// The ID of the function definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListFunctionDefinitionVersions'' requests. If the version is the last one that was associated with a function definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn function_definition_version_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.function_definition_version_id(input.into());
        self
    }
    /// The ID of the function definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListFunctionDefinitionVersions'' requests. If the version is the last one that was associated with a function definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn set_function_definition_version_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_function_definition_version_id(input);
        self
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.next_token(input.into());
        self
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_next_token(input);
        self
    }
}
