// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateGroupVersionInput {
    /// A client token used to correlate requests and responses.
    #[doc(hidden)]
    pub amzn_client_token: std::option::Option<std::string::String>,
    /// The ARN of the connector definition version for this group.
    #[doc(hidden)]
    pub connector_definition_version_arn: std::option::Option<std::string::String>,
    /// The ARN of the core definition version for this group.
    #[doc(hidden)]
    pub core_definition_version_arn: std::option::Option<std::string::String>,
    /// The ARN of the device definition version for this group.
    #[doc(hidden)]
    pub device_definition_version_arn: std::option::Option<std::string::String>,
    /// The ARN of the function definition version for this group.
    #[doc(hidden)]
    pub function_definition_version_arn: std::option::Option<std::string::String>,
    /// The ID of the Greengrass group.
    #[doc(hidden)]
    pub group_id: std::option::Option<std::string::String>,
    /// The ARN of the logger definition version for this group.
    #[doc(hidden)]
    pub logger_definition_version_arn: std::option::Option<std::string::String>,
    /// The ARN of the resource definition version for this group.
    #[doc(hidden)]
    pub resource_definition_version_arn: std::option::Option<std::string::String>,
    /// The ARN of the subscription definition version for this group.
    #[doc(hidden)]
    pub subscription_definition_version_arn: std::option::Option<std::string::String>,
}
impl CreateGroupVersionInput {
    /// A client token used to correlate requests and responses.
    pub fn amzn_client_token(&self) -> std::option::Option<&str> {
        self.amzn_client_token.as_deref()
    }
    /// The ARN of the connector definition version for this group.
    pub fn connector_definition_version_arn(&self) -> std::option::Option<&str> {
        self.connector_definition_version_arn.as_deref()
    }
    /// The ARN of the core definition version for this group.
    pub fn core_definition_version_arn(&self) -> std::option::Option<&str> {
        self.core_definition_version_arn.as_deref()
    }
    /// The ARN of the device definition version for this group.
    pub fn device_definition_version_arn(&self) -> std::option::Option<&str> {
        self.device_definition_version_arn.as_deref()
    }
    /// The ARN of the function definition version for this group.
    pub fn function_definition_version_arn(&self) -> std::option::Option<&str> {
        self.function_definition_version_arn.as_deref()
    }
    /// The ID of the Greengrass group.
    pub fn group_id(&self) -> std::option::Option<&str> {
        self.group_id.as_deref()
    }
    /// The ARN of the logger definition version for this group.
    pub fn logger_definition_version_arn(&self) -> std::option::Option<&str> {
        self.logger_definition_version_arn.as_deref()
    }
    /// The ARN of the resource definition version for this group.
    pub fn resource_definition_version_arn(&self) -> std::option::Option<&str> {
        self.resource_definition_version_arn.as_deref()
    }
    /// The ARN of the subscription definition version for this group.
    pub fn subscription_definition_version_arn(&self) -> std::option::Option<&str> {
        self.subscription_definition_version_arn.as_deref()
    }
}
impl CreateGroupVersionInput {
    /// Creates a new builder-style object to manufacture [`CreateGroupVersionInput`](crate::operation::create_group_version::CreateGroupVersionInput).
    pub fn builder(
    ) -> crate::operation::create_group_version::builders::CreateGroupVersionInputBuilder {
        crate::operation::create_group_version::builders::CreateGroupVersionInputBuilder::default()
    }
}

/// A builder for [`CreateGroupVersionInput`](crate::operation::create_group_version::CreateGroupVersionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateGroupVersionInputBuilder {
    pub(crate) amzn_client_token: std::option::Option<std::string::String>,
    pub(crate) connector_definition_version_arn: std::option::Option<std::string::String>,
    pub(crate) core_definition_version_arn: std::option::Option<std::string::String>,
    pub(crate) device_definition_version_arn: std::option::Option<std::string::String>,
    pub(crate) function_definition_version_arn: std::option::Option<std::string::String>,
    pub(crate) group_id: std::option::Option<std::string::String>,
    pub(crate) logger_definition_version_arn: std::option::Option<std::string::String>,
    pub(crate) resource_definition_version_arn: std::option::Option<std::string::String>,
    pub(crate) subscription_definition_version_arn: std::option::Option<std::string::String>,
}
impl CreateGroupVersionInputBuilder {
    /// A client token used to correlate requests and responses.
    pub fn amzn_client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.amzn_client_token = Some(input.into());
        self
    }
    /// A client token used to correlate requests and responses.
    pub fn set_amzn_client_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.amzn_client_token = input;
        self
    }
    /// The ARN of the connector definition version for this group.
    pub fn connector_definition_version_arn(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.connector_definition_version_arn = Some(input.into());
        self
    }
    /// The ARN of the connector definition version for this group.
    pub fn set_connector_definition_version_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.connector_definition_version_arn = input;
        self
    }
    /// The ARN of the core definition version for this group.
    pub fn core_definition_version_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.core_definition_version_arn = Some(input.into());
        self
    }
    /// The ARN of the core definition version for this group.
    pub fn set_core_definition_version_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.core_definition_version_arn = input;
        self
    }
    /// The ARN of the device definition version for this group.
    pub fn device_definition_version_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.device_definition_version_arn = Some(input.into());
        self
    }
    /// The ARN of the device definition version for this group.
    pub fn set_device_definition_version_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.device_definition_version_arn = input;
        self
    }
    /// The ARN of the function definition version for this group.
    pub fn function_definition_version_arn(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.function_definition_version_arn = Some(input.into());
        self
    }
    /// The ARN of the function definition version for this group.
    pub fn set_function_definition_version_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.function_definition_version_arn = input;
        self
    }
    /// The ID of the Greengrass group.
    pub fn group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.group_id = Some(input.into());
        self
    }
    /// The ID of the Greengrass group.
    pub fn set_group_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.group_id = input;
        self
    }
    /// The ARN of the logger definition version for this group.
    pub fn logger_definition_version_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.logger_definition_version_arn = Some(input.into());
        self
    }
    /// The ARN of the logger definition version for this group.
    pub fn set_logger_definition_version_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.logger_definition_version_arn = input;
        self
    }
    /// The ARN of the resource definition version for this group.
    pub fn resource_definition_version_arn(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.resource_definition_version_arn = Some(input.into());
        self
    }
    /// The ARN of the resource definition version for this group.
    pub fn set_resource_definition_version_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_definition_version_arn = input;
        self
    }
    /// The ARN of the subscription definition version for this group.
    pub fn subscription_definition_version_arn(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.subscription_definition_version_arn = Some(input.into());
        self
    }
    /// The ARN of the subscription definition version for this group.
    pub fn set_subscription_definition_version_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.subscription_definition_version_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateGroupVersionInput`](crate::operation::create_group_version::CreateGroupVersionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_group_version::CreateGroupVersionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_group_version::CreateGroupVersionInput {
                amzn_client_token: self.amzn_client_token,
                connector_definition_version_arn: self.connector_definition_version_arn,
                core_definition_version_arn: self.core_definition_version_arn,
                device_definition_version_arn: self.device_definition_version_arn,
                function_definition_version_arn: self.function_definition_version_arn,
                group_id: self.group_id,
                logger_definition_version_arn: self.logger_definition_version_arn,
                resource_definition_version_arn: self.resource_definition_version_arn,
                subscription_definition_version_arn: self.subscription_definition_version_arn,
            },
        )
    }
}
