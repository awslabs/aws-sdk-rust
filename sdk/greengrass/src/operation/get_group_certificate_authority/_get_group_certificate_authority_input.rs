// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetGroupCertificateAuthorityInput {
    /// The ID of the certificate authority.
    pub certificate_authority_id: ::std::option::Option<::std::string::String>,
    /// The ID of the Greengrass group.
    pub group_id: ::std::option::Option<::std::string::String>,
}
impl GetGroupCertificateAuthorityInput {
    /// The ID of the certificate authority.
    pub fn certificate_authority_id(&self) -> ::std::option::Option<&str> {
        self.certificate_authority_id.as_deref()
    }
    /// The ID of the Greengrass group.
    pub fn group_id(&self) -> ::std::option::Option<&str> {
        self.group_id.as_deref()
    }
}
impl GetGroupCertificateAuthorityInput {
    /// Creates a new builder-style object to manufacture [`GetGroupCertificateAuthorityInput`](crate::operation::get_group_certificate_authority::GetGroupCertificateAuthorityInput).
    pub fn builder() -> crate::operation::get_group_certificate_authority::builders::GetGroupCertificateAuthorityInputBuilder {
        crate::operation::get_group_certificate_authority::builders::GetGroupCertificateAuthorityInputBuilder::default()
    }
}

/// A builder for [`GetGroupCertificateAuthorityInput`](crate::operation::get_group_certificate_authority::GetGroupCertificateAuthorityInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetGroupCertificateAuthorityInputBuilder {
    pub(crate) certificate_authority_id: ::std::option::Option<::std::string::String>,
    pub(crate) group_id: ::std::option::Option<::std::string::String>,
}
impl GetGroupCertificateAuthorityInputBuilder {
    /// The ID of the certificate authority.
    /// This field is required.
    pub fn certificate_authority_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.certificate_authority_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The ID of the certificate authority.
    pub fn set_certificate_authority_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.certificate_authority_id = input;
        self
    }
    /// The ID of the certificate authority.
    pub fn get_certificate_authority_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.certificate_authority_id
    }
    /// The ID of the Greengrass group.
    /// This field is required.
    pub fn group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The ID of the Greengrass group.
    pub fn set_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.group_id = input;
        self
    }
    /// The ID of the Greengrass group.
    pub fn get_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.group_id
    }
    /// Consumes the builder and constructs a [`GetGroupCertificateAuthorityInput`](crate::operation::get_group_certificate_authority::GetGroupCertificateAuthorityInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_group_certificate_authority::GetGroupCertificateAuthorityInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_group_certificate_authority::GetGroupCertificateAuthorityInput {
            certificate_authority_id: self.certificate_authority_id,
            group_id: self.group_id,
        })
    }
}
