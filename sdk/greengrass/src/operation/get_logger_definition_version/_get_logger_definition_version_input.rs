// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetLoggerDefinitionVersionInput {
    /// The ID of the logger definition.
    #[doc(hidden)]
    pub logger_definition_id: std::option::Option<std::string::String>,
    /// The ID of the logger definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListLoggerDefinitionVersions'' requests. If the version is the last one that was associated with a logger definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    #[doc(hidden)]
    pub logger_definition_version_id: std::option::Option<std::string::String>,
    /// The token for the next set of results, or ''null'' if there are no additional results.
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl GetLoggerDefinitionVersionInput {
    /// The ID of the logger definition.
    pub fn logger_definition_id(&self) -> std::option::Option<&str> {
        self.logger_definition_id.as_deref()
    }
    /// The ID of the logger definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListLoggerDefinitionVersions'' requests. If the version is the last one that was associated with a logger definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn logger_definition_version_id(&self) -> std::option::Option<&str> {
        self.logger_definition_version_id.as_deref()
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl GetLoggerDefinitionVersionInput {
    /// Creates a new builder-style object to manufacture [`GetLoggerDefinitionVersionInput`](crate::operation::get_logger_definition_version::GetLoggerDefinitionVersionInput).
    pub fn builder() -> crate::operation::get_logger_definition_version::builders::GetLoggerDefinitionVersionInputBuilder{
        crate::operation::get_logger_definition_version::builders::GetLoggerDefinitionVersionInputBuilder::default()
    }
}

/// A builder for [`GetLoggerDefinitionVersionInput`](crate::operation::get_logger_definition_version::GetLoggerDefinitionVersionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetLoggerDefinitionVersionInputBuilder {
    pub(crate) logger_definition_id: std::option::Option<std::string::String>,
    pub(crate) logger_definition_version_id: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl GetLoggerDefinitionVersionInputBuilder {
    /// The ID of the logger definition.
    pub fn logger_definition_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.logger_definition_id = Some(input.into());
        self
    }
    /// The ID of the logger definition.
    pub fn set_logger_definition_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.logger_definition_id = input;
        self
    }
    /// The ID of the logger definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListLoggerDefinitionVersions'' requests. If the version is the last one that was associated with a logger definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn logger_definition_version_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.logger_definition_version_id = Some(input.into());
        self
    }
    /// The ID of the logger definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListLoggerDefinitionVersions'' requests. If the version is the last one that was associated with a logger definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn set_logger_definition_version_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.logger_definition_version_id = input;
        self
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`GetLoggerDefinitionVersionInput`](crate::operation::get_logger_definition_version::GetLoggerDefinitionVersionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_logger_definition_version::GetLoggerDefinitionVersionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_logger_definition_version::GetLoggerDefinitionVersionInput {
                logger_definition_id: self.logger_definition_id,
                logger_definition_version_id: self.logger_definition_version_id,
                next_token: self.next_token,
            },
        )
    }
}
