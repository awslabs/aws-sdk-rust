// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDeviceDefinitionVersionInput {
    /// The ID of the device definition.
    #[doc(hidden)]
    pub device_definition_id: std::option::Option<std::string::String>,
    /// The ID of the device definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListDeviceDefinitionVersions'' requests. If the version is the last one that was associated with a device definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    #[doc(hidden)]
    pub device_definition_version_id: std::option::Option<std::string::String>,
    /// The token for the next set of results, or ''null'' if there are no additional results.
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl GetDeviceDefinitionVersionInput {
    /// The ID of the device definition.
    pub fn device_definition_id(&self) -> std::option::Option<&str> {
        self.device_definition_id.as_deref()
    }
    /// The ID of the device definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListDeviceDefinitionVersions'' requests. If the version is the last one that was associated with a device definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn device_definition_version_id(&self) -> std::option::Option<&str> {
        self.device_definition_version_id.as_deref()
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl GetDeviceDefinitionVersionInput {
    /// Creates a new builder-style object to manufacture [`GetDeviceDefinitionVersionInput`](crate::operation::get_device_definition_version::GetDeviceDefinitionVersionInput).
    pub fn builder() -> crate::operation::get_device_definition_version::builders::GetDeviceDefinitionVersionInputBuilder{
        crate::operation::get_device_definition_version::builders::GetDeviceDefinitionVersionInputBuilder::default()
    }
}

/// A builder for [`GetDeviceDefinitionVersionInput`](crate::operation::get_device_definition_version::GetDeviceDefinitionVersionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDeviceDefinitionVersionInputBuilder {
    pub(crate) device_definition_id: std::option::Option<std::string::String>,
    pub(crate) device_definition_version_id: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl GetDeviceDefinitionVersionInputBuilder {
    /// The ID of the device definition.
    pub fn device_definition_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.device_definition_id = Some(input.into());
        self
    }
    /// The ID of the device definition.
    pub fn set_device_definition_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.device_definition_id = input;
        self
    }
    /// The ID of the device definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListDeviceDefinitionVersions'' requests. If the version is the last one that was associated with a device definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn device_definition_version_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.device_definition_version_id = Some(input.into());
        self
    }
    /// The ID of the device definition version. This value maps to the ''Version'' property of the corresponding ''VersionInformation'' object, which is returned by ''ListDeviceDefinitionVersions'' requests. If the version is the last one that was associated with a device definition, the value also maps to the ''LatestVersion'' property of the corresponding ''DefinitionInformation'' object.
    pub fn set_device_definition_version_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.device_definition_version_id = input;
        self
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// The token for the next set of results, or ''null'' if there are no additional results.
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`GetDeviceDefinitionVersionInput`](crate::operation::get_device_definition_version::GetDeviceDefinitionVersionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_device_definition_version::GetDeviceDefinitionVersionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_device_definition_version::GetDeviceDefinitionVersionInput {
                device_definition_id: self.device_definition_id,
                device_definition_version_id: self.device_definition_version_id,
                next_token: self.next_token,
            },
        )
    }
}
