// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateSubscriptionDefinitionVersionInput {
    /// A client token used to correlate requests and responses.
    #[doc(hidden)]
    pub amzn_client_token: std::option::Option<std::string::String>,
    /// The ID of the subscription definition.
    #[doc(hidden)]
    pub subscription_definition_id: std::option::Option<std::string::String>,
    /// A list of subscriptions.
    #[doc(hidden)]
    pub subscriptions: std::option::Option<std::vec::Vec<crate::types::Subscription>>,
}
impl CreateSubscriptionDefinitionVersionInput {
    /// A client token used to correlate requests and responses.
    pub fn amzn_client_token(&self) -> std::option::Option<&str> {
        self.amzn_client_token.as_deref()
    }
    /// The ID of the subscription definition.
    pub fn subscription_definition_id(&self) -> std::option::Option<&str> {
        self.subscription_definition_id.as_deref()
    }
    /// A list of subscriptions.
    pub fn subscriptions(&self) -> std::option::Option<&[crate::types::Subscription]> {
        self.subscriptions.as_deref()
    }
}
impl CreateSubscriptionDefinitionVersionInput {
    /// Creates a new builder-style object to manufacture [`CreateSubscriptionDefinitionVersionInput`](crate::operation::create_subscription_definition_version::CreateSubscriptionDefinitionVersionInput).
    pub fn builder() -> crate::operation::create_subscription_definition_version::builders::CreateSubscriptionDefinitionVersionInputBuilder{
        crate::operation::create_subscription_definition_version::builders::CreateSubscriptionDefinitionVersionInputBuilder::default()
    }
}

/// A builder for [`CreateSubscriptionDefinitionVersionInput`](crate::operation::create_subscription_definition_version::CreateSubscriptionDefinitionVersionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateSubscriptionDefinitionVersionInputBuilder {
    pub(crate) amzn_client_token: std::option::Option<std::string::String>,
    pub(crate) subscription_definition_id: std::option::Option<std::string::String>,
    pub(crate) subscriptions: std::option::Option<std::vec::Vec<crate::types::Subscription>>,
}
impl CreateSubscriptionDefinitionVersionInputBuilder {
    /// A client token used to correlate requests and responses.
    pub fn amzn_client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.amzn_client_token = Some(input.into());
        self
    }
    /// A client token used to correlate requests and responses.
    pub fn set_amzn_client_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.amzn_client_token = input;
        self
    }
    /// The ID of the subscription definition.
    pub fn subscription_definition_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.subscription_definition_id = Some(input.into());
        self
    }
    /// The ID of the subscription definition.
    pub fn set_subscription_definition_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.subscription_definition_id = input;
        self
    }
    /// Appends an item to `subscriptions`.
    ///
    /// To override the contents of this collection use [`set_subscriptions`](Self::set_subscriptions).
    ///
    /// A list of subscriptions.
    pub fn subscriptions(mut self, input: crate::types::Subscription) -> Self {
        let mut v = self.subscriptions.unwrap_or_default();
        v.push(input);
        self.subscriptions = Some(v);
        self
    }
    /// A list of subscriptions.
    pub fn set_subscriptions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Subscription>>,
    ) -> Self {
        self.subscriptions = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateSubscriptionDefinitionVersionInput`](crate::operation::create_subscription_definition_version::CreateSubscriptionDefinitionVersionInput).
    pub fn build(self) -> Result<crate::operation::create_subscription_definition_version::CreateSubscriptionDefinitionVersionInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::create_subscription_definition_version::CreateSubscriptionDefinitionVersionInput {
                amzn_client_token: self.amzn_client_token
                ,
                subscription_definition_id: self.subscription_definition_id
                ,
                subscriptions: self.subscriptions
                ,
            }
        )
    }
}
