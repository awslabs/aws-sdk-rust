// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_resource_data_container(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ResourceDataContainer,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.local_device_resource_data {
        #[allow(unused_mut)]
        let mut object_2 = object.key("LocalDeviceResourceData").start_object();
        crate::protocol_serde::shape_local_device_resource_data::ser_local_device_resource_data(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.local_volume_resource_data {
        #[allow(unused_mut)]
        let mut object_4 = object.key("LocalVolumeResourceData").start_object();
        crate::protocol_serde::shape_local_volume_resource_data::ser_local_volume_resource_data(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.s3_machine_learning_model_resource_data {
        #[allow(unused_mut)]
        let mut object_6 = object.key("S3MachineLearningModelResourceData").start_object();
        crate::protocol_serde::shape_s3_machine_learning_model_resource_data::ser_s3_machine_learning_model_resource_data(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.sage_maker_machine_learning_model_resource_data {
        #[allow(unused_mut)]
        let mut object_8 = object.key("SageMakerMachineLearningModelResourceData").start_object();
        crate::protocol_serde::shape_sage_maker_machine_learning_model_resource_data::ser_sage_maker_machine_learning_model_resource_data(
            &mut object_8,
            var_7,
        )?;
        object_8.finish();
    }
    if let Some(var_9) = &input.secrets_manager_secret_resource_data {
        #[allow(unused_mut)]
        let mut object_10 = object.key("SecretsManagerSecretResourceData").start_object();
        crate::protocol_serde::shape_secrets_manager_secret_resource_data::ser_secrets_manager_secret_resource_data(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}

pub(crate) fn de_resource_data_container<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::ResourceDataContainer>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::ResourceDataContainerBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "LocalDeviceResourceData" => {
                            builder = builder.set_local_device_resource_data(
                                crate::protocol_serde::shape_local_device_resource_data::de_local_device_resource_data(tokens)?,
                            );
                        }
                        "LocalVolumeResourceData" => {
                            builder = builder.set_local_volume_resource_data(
                                crate::protocol_serde::shape_local_volume_resource_data::de_local_volume_resource_data(tokens)?,
                            );
                        }
                        "S3MachineLearningModelResourceData" => {
                            builder = builder.set_s3_machine_learning_model_resource_data(
                                crate::protocol_serde::shape_s3_machine_learning_model_resource_data::de_s3_machine_learning_model_resource_data(
                                    tokens,
                                )?,
                            );
                        }
                        "SageMakerMachineLearningModelResourceData" => {
                            builder = builder.set_sage_maker_machine_learning_model_resource_data(
                                    crate::protocol_serde::shape_sage_maker_machine_learning_model_resource_data::de_sage_maker_machine_learning_model_resource_data(tokens)?
                                );
                        }
                        "SecretsManagerSecretResourceData" => {
                            builder = builder.set_secrets_manager_secret_resource_data(
                                crate::protocol_serde::shape_secrets_manager_secret_resource_data::de_secrets_manager_secret_resource_data(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
