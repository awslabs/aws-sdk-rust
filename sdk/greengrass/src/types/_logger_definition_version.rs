// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Information about a logger definition version.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LoggerDefinitionVersion {
    /// A list of loggers.
    #[doc(hidden)]
    pub loggers: std::option::Option<std::vec::Vec<crate::types::Logger>>,
}
impl LoggerDefinitionVersion {
    /// A list of loggers.
    pub fn loggers(&self) -> std::option::Option<&[crate::types::Logger]> {
        self.loggers.as_deref()
    }
}
impl LoggerDefinitionVersion {
    /// Creates a new builder-style object to manufacture [`LoggerDefinitionVersion`](crate::types::LoggerDefinitionVersion).
    pub fn builder() -> crate::types::builders::LoggerDefinitionVersionBuilder {
        crate::types::builders::LoggerDefinitionVersionBuilder::default()
    }
}

/// A builder for [`LoggerDefinitionVersion`](crate::types::LoggerDefinitionVersion).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LoggerDefinitionVersionBuilder {
    pub(crate) loggers: std::option::Option<std::vec::Vec<crate::types::Logger>>,
}
impl LoggerDefinitionVersionBuilder {
    /// Appends an item to `loggers`.
    ///
    /// To override the contents of this collection use [`set_loggers`](Self::set_loggers).
    ///
    /// A list of loggers.
    pub fn loggers(mut self, input: crate::types::Logger) -> Self {
        let mut v = self.loggers.unwrap_or_default();
        v.push(input);
        self.loggers = Some(v);
        self
    }
    /// A list of loggers.
    pub fn set_loggers(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Logger>>,
    ) -> Self {
        self.loggers = input;
        self
    }
    /// Consumes the builder and constructs a [`LoggerDefinitionVersion`](crate::types::LoggerDefinitionVersion).
    pub fn build(self) -> crate::types::LoggerDefinitionVersion {
        crate::types::LoggerDefinitionVersion {
            loggers: self.loggers,
        }
    }
}
