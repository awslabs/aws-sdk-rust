// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Information about a bulk deployment. You cannot start a new bulk deployment while another one is still running or in a non-terminal state.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BulkDeployment {
    /// The ARN of the bulk deployment.
    #[doc(hidden)]
    pub bulk_deployment_arn: std::option::Option<std::string::String>,
    /// The ID of the bulk deployment.
    #[doc(hidden)]
    pub bulk_deployment_id: std::option::Option<std::string::String>,
    /// The time, in ISO format, when the deployment was created.
    #[doc(hidden)]
    pub created_at: std::option::Option<std::string::String>,
}
impl BulkDeployment {
    /// The ARN of the bulk deployment.
    pub fn bulk_deployment_arn(&self) -> std::option::Option<&str> {
        self.bulk_deployment_arn.as_deref()
    }
    /// The ID of the bulk deployment.
    pub fn bulk_deployment_id(&self) -> std::option::Option<&str> {
        self.bulk_deployment_id.as_deref()
    }
    /// The time, in ISO format, when the deployment was created.
    pub fn created_at(&self) -> std::option::Option<&str> {
        self.created_at.as_deref()
    }
}
impl BulkDeployment {
    /// Creates a new builder-style object to manufacture [`BulkDeployment`](crate::types::BulkDeployment).
    pub fn builder() -> crate::types::builders::BulkDeploymentBuilder {
        crate::types::builders::BulkDeploymentBuilder::default()
    }
}

/// A builder for [`BulkDeployment`](crate::types::BulkDeployment).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BulkDeploymentBuilder {
    pub(crate) bulk_deployment_arn: std::option::Option<std::string::String>,
    pub(crate) bulk_deployment_id: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<std::string::String>,
}
impl BulkDeploymentBuilder {
    /// The ARN of the bulk deployment.
    pub fn bulk_deployment_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.bulk_deployment_arn = Some(input.into());
        self
    }
    /// The ARN of the bulk deployment.
    pub fn set_bulk_deployment_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.bulk_deployment_arn = input;
        self
    }
    /// The ID of the bulk deployment.
    pub fn bulk_deployment_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.bulk_deployment_id = Some(input.into());
        self
    }
    /// The ID of the bulk deployment.
    pub fn set_bulk_deployment_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.bulk_deployment_id = input;
        self
    }
    /// The time, in ISO format, when the deployment was created.
    pub fn created_at(mut self, input: impl Into<std::string::String>) -> Self {
        self.created_at = Some(input.into());
        self
    }
    /// The time, in ISO format, when the deployment was created.
    pub fn set_created_at(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.created_at = input;
        self
    }
    /// Consumes the builder and constructs a [`BulkDeployment`](crate::types::BulkDeployment).
    pub fn build(self) -> crate::types::BulkDeployment {
        crate::types::BulkDeployment {
            bulk_deployment_arn: self.bulk_deployment_arn,
            bulk_deployment_id: self.bulk_deployment_id,
            created_at: self.created_at,
        }
    }
}
