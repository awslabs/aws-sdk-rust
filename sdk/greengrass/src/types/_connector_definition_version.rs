// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Information about the connector definition version, which is a container for connectors.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConnectorDefinitionVersion {
    /// A list of references to connectors in this version, with their corresponding configuration settings.
    pub connectors: ::std::option::Option<::std::vec::Vec<crate::types::Connector>>,
}
impl ConnectorDefinitionVersion {
    /// A list of references to connectors in this version, with their corresponding configuration settings.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.connectors.is_none()`.
    pub fn connectors(&self) -> &[crate::types::Connector] {
        self.connectors.as_deref().unwrap_or_default()
    }
}
impl ConnectorDefinitionVersion {
    /// Creates a new builder-style object to manufacture [`ConnectorDefinitionVersion`](crate::types::ConnectorDefinitionVersion).
    pub fn builder() -> crate::types::builders::ConnectorDefinitionVersionBuilder {
        crate::types::builders::ConnectorDefinitionVersionBuilder::default()
    }
}

/// A builder for [`ConnectorDefinitionVersion`](crate::types::ConnectorDefinitionVersion).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConnectorDefinitionVersionBuilder {
    pub(crate) connectors: ::std::option::Option<::std::vec::Vec<crate::types::Connector>>,
}
impl ConnectorDefinitionVersionBuilder {
    /// Appends an item to `connectors`.
    ///
    /// To override the contents of this collection use [`set_connectors`](Self::set_connectors).
    ///
    /// A list of references to connectors in this version, with their corresponding configuration settings.
    pub fn connectors(mut self, input: crate::types::Connector) -> Self {
        let mut v = self.connectors.unwrap_or_default();
        v.push(input);
        self.connectors = ::std::option::Option::Some(v);
        self
    }
    /// A list of references to connectors in this version, with their corresponding configuration settings.
    pub fn set_connectors(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Connector>>) -> Self {
        self.connectors = input;
        self
    }
    /// A list of references to connectors in this version, with their corresponding configuration settings.
    pub fn get_connectors(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Connector>> {
        &self.connectors
    }
    /// Consumes the builder and constructs a [`ConnectorDefinitionVersion`](crate::types::ConnectorDefinitionVersion).
    pub fn build(self) -> crate::types::ConnectorDefinitionVersion {
        crate::types::ConnectorDefinitionVersion { connectors: self.connectors }
    }
}
