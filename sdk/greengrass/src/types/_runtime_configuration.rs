// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Runtime configuration for a thing.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RuntimeConfiguration {
    /// Configuration for telemetry service.
    #[doc(hidden)]
    pub telemetry_configuration: std::option::Option<crate::types::TelemetryConfiguration>,
}
impl RuntimeConfiguration {
    /// Configuration for telemetry service.
    pub fn telemetry_configuration(
        &self,
    ) -> std::option::Option<&crate::types::TelemetryConfiguration> {
        self.telemetry_configuration.as_ref()
    }
}
impl RuntimeConfiguration {
    /// Creates a new builder-style object to manufacture [`RuntimeConfiguration`](crate::types::RuntimeConfiguration).
    pub fn builder() -> crate::types::builders::RuntimeConfigurationBuilder {
        crate::types::builders::RuntimeConfigurationBuilder::default()
    }
}

/// A builder for [`RuntimeConfiguration`](crate::types::RuntimeConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RuntimeConfigurationBuilder {
    pub(crate) telemetry_configuration: std::option::Option<crate::types::TelemetryConfiguration>,
}
impl RuntimeConfigurationBuilder {
    /// Configuration for telemetry service.
    pub fn telemetry_configuration(mut self, input: crate::types::TelemetryConfiguration) -> Self {
        self.telemetry_configuration = Some(input);
        self
    }
    /// Configuration for telemetry service.
    pub fn set_telemetry_configuration(
        mut self,
        input: std::option::Option<crate::types::TelemetryConfiguration>,
    ) -> Self {
        self.telemetry_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`RuntimeConfiguration`](crate::types::RuntimeConfiguration).
    pub fn build(self) -> crate::types::RuntimeConfiguration {
        crate::types::RuntimeConfiguration {
            telemetry_configuration: self.telemetry_configuration,
        }
    }
}
