// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Information about a Greengrass core's connectivity.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConnectivityInfo {
    /// The endpoint for the Greengrass core. Can be an IP address or DNS.
    #[doc(hidden)]
    pub host_address: std::option::Option<std::string::String>,
    /// The ID of the connectivity information.
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// Metadata for this endpoint.
    #[doc(hidden)]
    pub metadata: std::option::Option<std::string::String>,
    /// The port of the Greengrass core. Usually 8883.
    #[doc(hidden)]
    pub port_number: i32,
}
impl ConnectivityInfo {
    /// The endpoint for the Greengrass core. Can be an IP address or DNS.
    pub fn host_address(&self) -> std::option::Option<&str> {
        self.host_address.as_deref()
    }
    /// The ID of the connectivity information.
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// Metadata for this endpoint.
    pub fn metadata(&self) -> std::option::Option<&str> {
        self.metadata.as_deref()
    }
    /// The port of the Greengrass core. Usually 8883.
    pub fn port_number(&self) -> i32 {
        self.port_number
    }
}
impl ConnectivityInfo {
    /// Creates a new builder-style object to manufacture [`ConnectivityInfo`](crate::types::ConnectivityInfo).
    pub fn builder() -> crate::types::builders::ConnectivityInfoBuilder {
        crate::types::builders::ConnectivityInfoBuilder::default()
    }
}

/// A builder for [`ConnectivityInfo`](crate::types::ConnectivityInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConnectivityInfoBuilder {
    pub(crate) host_address: std::option::Option<std::string::String>,
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) metadata: std::option::Option<std::string::String>,
    pub(crate) port_number: std::option::Option<i32>,
}
impl ConnectivityInfoBuilder {
    /// The endpoint for the Greengrass core. Can be an IP address or DNS.
    pub fn host_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.host_address = Some(input.into());
        self
    }
    /// The endpoint for the Greengrass core. Can be an IP address or DNS.
    pub fn set_host_address(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.host_address = input;
        self
    }
    /// The ID of the connectivity information.
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// The ID of the connectivity information.
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Metadata for this endpoint.
    pub fn metadata(mut self, input: impl Into<std::string::String>) -> Self {
        self.metadata = Some(input.into());
        self
    }
    /// Metadata for this endpoint.
    pub fn set_metadata(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.metadata = input;
        self
    }
    /// The port of the Greengrass core. Usually 8883.
    pub fn port_number(mut self, input: i32) -> Self {
        self.port_number = Some(input);
        self
    }
    /// The port of the Greengrass core. Usually 8883.
    pub fn set_port_number(mut self, input: std::option::Option<i32>) -> Self {
        self.port_number = input;
        self
    }
    /// Consumes the builder and constructs a [`ConnectivityInfo`](crate::types::ConnectivityInfo).
    pub fn build(self) -> crate::types::ConnectivityInfo {
        crate::types::ConnectivityInfo {
            host_address: self.host_address,
            id: self.id,
            metadata: self.metadata,
            port_number: self.port_number.unwrap_or_default(),
        }
    }
}
