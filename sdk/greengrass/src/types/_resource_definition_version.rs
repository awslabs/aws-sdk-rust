// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Information about a resource definition version.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourceDefinitionVersion {
    /// A list of resources.
    #[doc(hidden)]
    pub resources: std::option::Option<std::vec::Vec<crate::types::Resource>>,
}
impl ResourceDefinitionVersion {
    /// A list of resources.
    pub fn resources(&self) -> std::option::Option<&[crate::types::Resource]> {
        self.resources.as_deref()
    }
}
impl ResourceDefinitionVersion {
    /// Creates a new builder-style object to manufacture [`ResourceDefinitionVersion`](crate::types::ResourceDefinitionVersion).
    pub fn builder() -> crate::types::builders::ResourceDefinitionVersionBuilder {
        crate::types::builders::ResourceDefinitionVersionBuilder::default()
    }
}

/// A builder for [`ResourceDefinitionVersion`](crate::types::ResourceDefinitionVersion).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourceDefinitionVersionBuilder {
    pub(crate) resources: std::option::Option<std::vec::Vec<crate::types::Resource>>,
}
impl ResourceDefinitionVersionBuilder {
    /// Appends an item to `resources`.
    ///
    /// To override the contents of this collection use [`set_resources`](Self::set_resources).
    ///
    /// A list of resources.
    pub fn resources(mut self, input: crate::types::Resource) -> Self {
        let mut v = self.resources.unwrap_or_default();
        v.push(input);
        self.resources = Some(v);
        self
    }
    /// A list of resources.
    pub fn set_resources(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Resource>>,
    ) -> Self {
        self.resources = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourceDefinitionVersion`](crate::types::ResourceDefinitionVersion).
    pub fn build(self) -> crate::types::ResourceDefinitionVersion {
        crate::types::ResourceDefinitionVersion {
            resources: self.resources,
        }
    }
}
