// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Specifies the user and group whose permissions are used when running the Lambda function. You can specify one or both values to override the default values. We recommend that you avoid running as root unless absolutely necessary to minimize the risk of unintended changes or malicious attacks. To run as root, you must set ''IsolationMode'' to ''NoContainer'' and update config.json in ''greengrass-root/config'' to set ''allowFunctionsToRunAsRoot'' to ''yes''.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FunctionRunAsConfig {
    /// The group ID whose permissions are used to run a Lambda function.
    #[doc(hidden)]
    pub gid: i32,
    /// The user ID whose permissions are used to run a Lambda function.
    #[doc(hidden)]
    pub uid: i32,
}
impl FunctionRunAsConfig {
    /// The group ID whose permissions are used to run a Lambda function.
    pub fn gid(&self) -> i32 {
        self.gid
    }
    /// The user ID whose permissions are used to run a Lambda function.
    pub fn uid(&self) -> i32 {
        self.uid
    }
}
impl FunctionRunAsConfig {
    /// Creates a new builder-style object to manufacture [`FunctionRunAsConfig`](crate::types::FunctionRunAsConfig).
    pub fn builder() -> crate::types::builders::FunctionRunAsConfigBuilder {
        crate::types::builders::FunctionRunAsConfigBuilder::default()
    }
}

/// A builder for [`FunctionRunAsConfig`](crate::types::FunctionRunAsConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FunctionRunAsConfigBuilder {
    pub(crate) gid: std::option::Option<i32>,
    pub(crate) uid: std::option::Option<i32>,
}
impl FunctionRunAsConfigBuilder {
    /// The group ID whose permissions are used to run a Lambda function.
    pub fn gid(mut self, input: i32) -> Self {
        self.gid = Some(input);
        self
    }
    /// The group ID whose permissions are used to run a Lambda function.
    pub fn set_gid(mut self, input: std::option::Option<i32>) -> Self {
        self.gid = input;
        self
    }
    /// The user ID whose permissions are used to run a Lambda function.
    pub fn uid(mut self, input: i32) -> Self {
        self.uid = Some(input);
        self
    }
    /// The user ID whose permissions are used to run a Lambda function.
    pub fn set_uid(mut self, input: std::option::Option<i32>) -> Self {
        self.uid = input;
        self
    }
    /// Consumes the builder and constructs a [`FunctionRunAsConfig`](crate::types::FunctionRunAsConfig).
    pub fn build(self) -> crate::types::FunctionRunAsConfig {
        crate::types::FunctionRunAsConfig {
            gid: self.gid.unwrap_or_default(),
            uid: self.uid.unwrap_or_default(),
        }
    }
}
