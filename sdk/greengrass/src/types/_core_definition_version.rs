// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Information about a core definition version.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CoreDefinitionVersion {
    /// A list of cores in the core definition version.
    #[doc(hidden)]
    pub cores: std::option::Option<std::vec::Vec<crate::types::Core>>,
}
impl CoreDefinitionVersion {
    /// A list of cores in the core definition version.
    pub fn cores(&self) -> std::option::Option<&[crate::types::Core]> {
        self.cores.as_deref()
    }
}
impl CoreDefinitionVersion {
    /// Creates a new builder-style object to manufacture [`CoreDefinitionVersion`](crate::types::CoreDefinitionVersion).
    pub fn builder() -> crate::types::builders::CoreDefinitionVersionBuilder {
        crate::types::builders::CoreDefinitionVersionBuilder::default()
    }
}

/// A builder for [`CoreDefinitionVersion`](crate::types::CoreDefinitionVersion).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CoreDefinitionVersionBuilder {
    pub(crate) cores: std::option::Option<std::vec::Vec<crate::types::Core>>,
}
impl CoreDefinitionVersionBuilder {
    /// Appends an item to `cores`.
    ///
    /// To override the contents of this collection use [`set_cores`](Self::set_cores).
    ///
    /// A list of cores in the core definition version.
    pub fn cores(mut self, input: crate::types::Core) -> Self {
        let mut v = self.cores.unwrap_or_default();
        v.push(input);
        self.cores = Some(v);
        self
    }
    /// A list of cores in the core definition version.
    pub fn set_cores(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Core>>,
    ) -> Self {
        self.cores = input;
        self
    }
    /// Consumes the builder and constructs a [`CoreDefinitionVersion`](crate::types::CoreDefinitionVersion).
    pub fn build(self) -> crate::types::CoreDefinitionVersion {
        crate::types::CoreDefinitionVersion { cores: self.cores }
    }
}
