// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchGetMetricsInput {
    /// <p>Queries made to retrieve training metrics from SageMaker.</p>
    pub metric_queries: ::std::option::Option<::std::vec::Vec<crate::types::MetricQuery>>,
}
impl BatchGetMetricsInput {
    /// <p>Queries made to retrieve training metrics from SageMaker.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.metric_queries.is_none()`.
    pub fn metric_queries(&self) -> &[crate::types::MetricQuery] {
        self.metric_queries.as_deref().unwrap_or_default()
    }
}
impl BatchGetMetricsInput {
    /// Creates a new builder-style object to manufacture [`BatchGetMetricsInput`](crate::operation::batch_get_metrics::BatchGetMetricsInput).
    pub fn builder() -> crate::operation::batch_get_metrics::builders::BatchGetMetricsInputBuilder {
        crate::operation::batch_get_metrics::builders::BatchGetMetricsInputBuilder::default()
    }
}

/// A builder for [`BatchGetMetricsInput`](crate::operation::batch_get_metrics::BatchGetMetricsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct BatchGetMetricsInputBuilder {
    pub(crate) metric_queries: ::std::option::Option<::std::vec::Vec<crate::types::MetricQuery>>,
}
impl BatchGetMetricsInputBuilder {
    /// Appends an item to `metric_queries`.
    ///
    /// To override the contents of this collection use [`set_metric_queries`](Self::set_metric_queries).
    ///
    /// <p>Queries made to retrieve training metrics from SageMaker.</p>
    pub fn metric_queries(mut self, input: crate::types::MetricQuery) -> Self {
        let mut v = self.metric_queries.unwrap_or_default();
        v.push(input);
        self.metric_queries = ::std::option::Option::Some(v);
        self
    }
    /// <p>Queries made to retrieve training metrics from SageMaker.</p>
    pub fn set_metric_queries(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::MetricQuery>>) -> Self {
        self.metric_queries = input;
        self
    }
    /// <p>Queries made to retrieve training metrics from SageMaker.</p>
    pub fn get_metric_queries(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::MetricQuery>> {
        &self.metric_queries
    }
    /// Consumes the builder and constructs a [`BatchGetMetricsInput`](crate::operation::batch_get_metrics::BatchGetMetricsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::batch_get_metrics::BatchGetMetricsInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::batch_get_metrics::BatchGetMetricsInput {
            metric_queries: self.metric_queries,
        })
    }
}
