// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RemoveNotificationChannel`](crate::client::fluent_builders::RemoveNotificationChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`profiling_group_name(impl Into<String>)`](crate::client::fluent_builders::RemoveNotificationChannel::profiling_group_name) / [`set_profiling_group_name(Option<String>)`](crate::client::fluent_builders::RemoveNotificationChannel::set_profiling_group_name): <p>The name of the profiling group we want to change notification configuration for.</p>
    ///   - [`channel_id(impl Into<String>)`](crate::client::fluent_builders::RemoveNotificationChannel::channel_id) / [`set_channel_id(Option<String>)`](crate::client::fluent_builders::RemoveNotificationChannel::set_channel_id): <p>The id of the channel that we want to stop receiving notifications.</p>
    /// - On success, responds with [`RemoveNotificationChannelOutput`](crate::output::RemoveNotificationChannelOutput) with field(s):
    ///   - [`notification_configuration(Option<NotificationConfiguration>)`](crate::output::RemoveNotificationChannelOutput::notification_configuration): <p>The new notification configuration for this profiling group.</p>
    /// - On failure, responds with [`SdkError<RemoveNotificationChannelError>`](crate::error::RemoveNotificationChannelError)
    pub fn remove_notification_channel(
        &self,
    ) -> crate::client::fluent_builders::RemoveNotificationChannel {
        crate::client::fluent_builders::RemoveNotificationChannel::new(self.handle.clone())
    }
}
