// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SubmitFeedback`](crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`profiling_group_name(impl Into<String>)`](crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder::profiling_group_name) / [`set_profiling_group_name(Option<String>)`](crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder::set_profiling_group_name): <p>The name of the profiling group that is associated with the analysis data.</p>
    ///   - [`anomaly_instance_id(impl Into<String>)`](crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder::anomaly_instance_id) / [`set_anomaly_instance_id(Option<String>)`](crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder::set_anomaly_instance_id): <p>The universally unique identifier (UUID) of the <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AnomalyInstance.html"> <code>AnomalyInstance</code> </a> object that is included in the analysis data.</p>
    ///   - [`r#type(FeedbackType)`](crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder::type) / [`set_type(Option<FeedbackType>)`](crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder::set_type): <p> The feedback tpye. Thee are two valid values, <code>Positive</code> and <code>Negative</code>. </p>
    ///   - [`comment(impl Into<String>)`](crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder::comment) / [`set_comment(Option<String>)`](crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder::set_comment): <p>Optional feedback about this anomaly.</p>
    /// - On success, responds with [`SubmitFeedbackOutput`](crate::operation::submit_feedback::SubmitFeedbackOutput)
    /// - On failure, responds with [`SdkError<SubmitFeedbackError>`](crate::operation::submit_feedback::SubmitFeedbackError)
    pub fn submit_feedback(
        &self,
    ) -> crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder {
        crate::operation::submit_feedback::builders::SubmitFeedbackFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
