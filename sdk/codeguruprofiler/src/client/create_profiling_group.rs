// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateProfilingGroup`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`profiling_group_name(impl Into<String>)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::profiling_group_name) / [`set_profiling_group_name(Option<String>)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::set_profiling_group_name): <p>The name of the profiling group to create.</p>
    ///   - [`compute_platform(ComputePlatform)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::compute_platform) / [`set_compute_platform(Option<ComputePlatform>)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::set_compute_platform): <p> The compute platform of the profiling group. Use <code>AWSLambda</code> if your application runs on AWS Lambda. Use <code>Default</code> if your application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, <code>Default</code> is used. </p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::set_client_token): <p> Amazon CodeGuru Profiler uses this universally unique identifier (UUID) to prevent the accidental creation of duplicate profiling groups if there are failures and retries. </p>
    ///   - [`agent_orchestration_config(AgentOrchestrationConfig)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::agent_orchestration_config) / [`set_agent_orchestration_config(Option<AgentOrchestrationConfig>)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::set_agent_orchestration_config): <p> Specifies whether profiling is enabled or disabled for the created profiling group. </p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::set_tags): <p> A list of tags to add to the created profiling group. </p>
    /// - On success, responds with [`CreateProfilingGroupOutput`](crate::operation::create_profiling_group::CreateProfilingGroupOutput) with field(s):
    ///   - [`profiling_group(Option<ProfilingGroupDescription>)`](crate::operation::create_profiling_group::CreateProfilingGroupOutput::profiling_group): <p> The returned <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"> <code>ProfilingGroupDescription</code> </a> object that contains information about the created profiling group. </p>
    /// - On failure, responds with [`SdkError<CreateProfilingGroupError>`](crate::operation::create_profiling_group::CreateProfilingGroupError)
    pub fn create_profiling_group(
        &self,
    ) -> crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder {
        crate::operation::create_profiling_group::builders::CreateProfilingGroupFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
