// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Specifies whether profiling is enabled or disabled for a profiling group. It is used by <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a> to enable or disable profiling for a profiling group. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AgentOrchestrationConfig {
    /// <p> A <code>Boolean</code> that specifies whether the profiling agent collects profiling data or not. Set to <code>true</code> to enable profiling. </p>
    pub profiling_enabled: bool,
}
impl AgentOrchestrationConfig {
    /// <p> A <code>Boolean</code> that specifies whether the profiling agent collects profiling data or not. Set to <code>true</code> to enable profiling. </p>
    pub fn profiling_enabled(&self) -> bool {
        self.profiling_enabled
    }
}
impl AgentOrchestrationConfig {
    /// Creates a new builder-style object to manufacture [`AgentOrchestrationConfig`](crate::types::AgentOrchestrationConfig).
    pub fn builder() -> crate::types::builders::AgentOrchestrationConfigBuilder {
        crate::types::builders::AgentOrchestrationConfigBuilder::default()
    }
}

/// A builder for [`AgentOrchestrationConfig`](crate::types::AgentOrchestrationConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AgentOrchestrationConfigBuilder {
    pub(crate) profiling_enabled: ::std::option::Option<bool>,
}
impl AgentOrchestrationConfigBuilder {
    /// <p> A <code>Boolean</code> that specifies whether the profiling agent collects profiling data or not. Set to <code>true</code> to enable profiling. </p>
    /// This field is required.
    pub fn profiling_enabled(mut self, input: bool) -> Self {
        self.profiling_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p> A <code>Boolean</code> that specifies whether the profiling agent collects profiling data or not. Set to <code>true</code> to enable profiling. </p>
    pub fn set_profiling_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.profiling_enabled = input;
        self
    }
    /// <p> A <code>Boolean</code> that specifies whether the profiling agent collects profiling data or not. Set to <code>true</code> to enable profiling. </p>
    pub fn get_profiling_enabled(&self) -> &::std::option::Option<bool> {
        &self.profiling_enabled
    }
    /// Consumes the builder and constructs a [`AgentOrchestrationConfig`](crate::types::AgentOrchestrationConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`profiling_enabled`](crate::types::builders::AgentOrchestrationConfigBuilder::profiling_enabled)
    pub fn build(self) -> ::std::result::Result<crate::types::AgentOrchestrationConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AgentOrchestrationConfig {
            profiling_enabled: self.profiling_enabled.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "profiling_enabled",
                    "profiling_enabled was not specified but it is required when building AgentOrchestrationConfig",
                )
            })?,
        })
    }
}
