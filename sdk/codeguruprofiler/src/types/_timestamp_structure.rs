// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> A data type that contains a <code>Timestamp</code> object. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TimestampStructure {
    /// <p> A <code>Timestamp</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. </p>
    pub value: ::aws_smithy_types::DateTime,
}
impl TimestampStructure {
    /// <p> A <code>Timestamp</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. </p>
    pub fn value(&self) -> &::aws_smithy_types::DateTime {
        &self.value
    }
}
impl TimestampStructure {
    /// Creates a new builder-style object to manufacture [`TimestampStructure`](crate::types::TimestampStructure).
    pub fn builder() -> crate::types::builders::TimestampStructureBuilder {
        crate::types::builders::TimestampStructureBuilder::default()
    }
}

/// A builder for [`TimestampStructure`](crate::types::TimestampStructure).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TimestampStructureBuilder {
    pub(crate) value: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl TimestampStructureBuilder {
    /// <p> A <code>Timestamp</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. </p>
    /// This field is required.
    pub fn value(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p> A <code>Timestamp</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. </p>
    pub fn set_value(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.value = input;
        self
    }
    /// <p> A <code>Timestamp</code>. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. </p>
    pub fn get_value(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.value
    }
    /// Consumes the builder and constructs a [`TimestampStructure`](crate::types::TimestampStructure).
    /// This method will fail if any of the following fields are not set:
    /// - [`value`](crate::types::builders::TimestampStructureBuilder::value)
    pub fn build(self) -> ::std::result::Result<crate::types::TimestampStructure, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TimestampStructure {
            value: self.value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "value",
                    "value was not specified but it is required when building TimestampStructure",
                )
            })?,
        })
    }
}
