// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartMetadataModelExportAsScriptInput {
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    pub migration_project_identifier: ::std::option::Option<::std::string::String>,
    /// <p>A value that specifies the database objects to export.</p>
    pub selection_rules: ::std::option::Option<::std::string::String>,
    /// <p>Whether to export the metadata model from the source or the target.</p>
    pub origin: ::std::option::Option<crate::types::OriginTypeValue>,
    /// <p>The name of the model file to create in the Amazon S3 bucket.</p>
    pub file_name: ::std::option::Option<::std::string::String>,
}
impl StartMetadataModelExportAsScriptInput {
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    pub fn migration_project_identifier(&self) -> ::std::option::Option<&str> {
        self.migration_project_identifier.as_deref()
    }
    /// <p>A value that specifies the database objects to export.</p>
    pub fn selection_rules(&self) -> ::std::option::Option<&str> {
        self.selection_rules.as_deref()
    }
    /// <p>Whether to export the metadata model from the source or the target.</p>
    pub fn origin(&self) -> ::std::option::Option<&crate::types::OriginTypeValue> {
        self.origin.as_ref()
    }
    /// <p>The name of the model file to create in the Amazon S3 bucket.</p>
    pub fn file_name(&self) -> ::std::option::Option<&str> {
        self.file_name.as_deref()
    }
}
impl StartMetadataModelExportAsScriptInput {
    /// Creates a new builder-style object to manufacture [`StartMetadataModelExportAsScriptInput`](crate::operation::start_metadata_model_export_as_script::StartMetadataModelExportAsScriptInput).
    pub fn builder() -> crate::operation::start_metadata_model_export_as_script::builders::StartMetadataModelExportAsScriptInputBuilder {
        crate::operation::start_metadata_model_export_as_script::builders::StartMetadataModelExportAsScriptInputBuilder::default()
    }
}

/// A builder for [`StartMetadataModelExportAsScriptInput`](crate::operation::start_metadata_model_export_as_script::StartMetadataModelExportAsScriptInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StartMetadataModelExportAsScriptInputBuilder {
    pub(crate) migration_project_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) selection_rules: ::std::option::Option<::std::string::String>,
    pub(crate) origin: ::std::option::Option<crate::types::OriginTypeValue>,
    pub(crate) file_name: ::std::option::Option<::std::string::String>,
}
impl StartMetadataModelExportAsScriptInputBuilder {
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    /// This field is required.
    pub fn migration_project_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.migration_project_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    pub fn set_migration_project_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.migration_project_identifier = input;
        self
    }
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    pub fn get_migration_project_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.migration_project_identifier
    }
    /// <p>A value that specifies the database objects to export.</p>
    /// This field is required.
    pub fn selection_rules(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.selection_rules = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A value that specifies the database objects to export.</p>
    pub fn set_selection_rules(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.selection_rules = input;
        self
    }
    /// <p>A value that specifies the database objects to export.</p>
    pub fn get_selection_rules(&self) -> &::std::option::Option<::std::string::String> {
        &self.selection_rules
    }
    /// <p>Whether to export the metadata model from the source or the target.</p>
    /// This field is required.
    pub fn origin(mut self, input: crate::types::OriginTypeValue) -> Self {
        self.origin = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether to export the metadata model from the source or the target.</p>
    pub fn set_origin(mut self, input: ::std::option::Option<crate::types::OriginTypeValue>) -> Self {
        self.origin = input;
        self
    }
    /// <p>Whether to export the metadata model from the source or the target.</p>
    pub fn get_origin(&self) -> &::std::option::Option<crate::types::OriginTypeValue> {
        &self.origin
    }
    /// <p>The name of the model file to create in the Amazon S3 bucket.</p>
    pub fn file_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.file_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the model file to create in the Amazon S3 bucket.</p>
    pub fn set_file_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.file_name = input;
        self
    }
    /// <p>The name of the model file to create in the Amazon S3 bucket.</p>
    pub fn get_file_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.file_name
    }
    /// Consumes the builder and constructs a [`StartMetadataModelExportAsScriptInput`](crate::operation::start_metadata_model_export_as_script::StartMetadataModelExportAsScriptInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::start_metadata_model_export_as_script::StartMetadataModelExportAsScriptInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::start_metadata_model_export_as_script::StartMetadataModelExportAsScriptInput {
                migration_project_identifier: self.migration_project_identifier,
                selection_rules: self.selection_rules,
                origin: self.origin,
                file_name: self.file_name,
            },
        )
    }
}
