// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteEventSubscriptionInput {
    /// <p>The name of the DMS event notification subscription to be deleted.</p>
    pub subscription_name: ::std::option::Option<::std::string::String>,
}
impl DeleteEventSubscriptionInput {
    /// <p>The name of the DMS event notification subscription to be deleted.</p>
    pub fn subscription_name(&self) -> ::std::option::Option<&str> {
        self.subscription_name.as_deref()
    }
}
impl DeleteEventSubscriptionInput {
    /// Creates a new builder-style object to manufacture [`DeleteEventSubscriptionInput`](crate::operation::delete_event_subscription::DeleteEventSubscriptionInput).
    pub fn builder() -> crate::operation::delete_event_subscription::builders::DeleteEventSubscriptionInputBuilder {
        crate::operation::delete_event_subscription::builders::DeleteEventSubscriptionInputBuilder::default()
    }
}

/// A builder for [`DeleteEventSubscriptionInput`](crate::operation::delete_event_subscription::DeleteEventSubscriptionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteEventSubscriptionInputBuilder {
    pub(crate) subscription_name: ::std::option::Option<::std::string::String>,
}
impl DeleteEventSubscriptionInputBuilder {
    /// <p>The name of the DMS event notification subscription to be deleted.</p>
    /// This field is required.
    pub fn subscription_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.subscription_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the DMS event notification subscription to be deleted.</p>
    pub fn set_subscription_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.subscription_name = input;
        self
    }
    /// <p>The name of the DMS event notification subscription to be deleted.</p>
    pub fn get_subscription_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.subscription_name
    }
    /// Consumes the builder and constructs a [`DeleteEventSubscriptionInput`](crate::operation::delete_event_subscription::DeleteEventSubscriptionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_event_subscription::DeleteEventSubscriptionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_event_subscription::DeleteEventSubscriptionInput {
            subscription_name: self.subscription_name,
        })
    }
}
