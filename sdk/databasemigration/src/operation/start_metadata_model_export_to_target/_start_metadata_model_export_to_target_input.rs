// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartMetadataModelExportToTargetInput {
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    pub migration_project_identifier: ::std::option::Option<::std::string::String>,
    /// <p>A value that specifies the database objects to export.</p>
    pub selection_rules: ::std::option::Option<::std::string::String>,
    /// <p>Whether to overwrite the migration project extension pack. An extension pack is an add-on module that emulates functions present in a source database that are required when converting objects to the target database.</p>
    pub overwrite_extension_pack: ::std::option::Option<bool>,
}
impl StartMetadataModelExportToTargetInput {
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    pub fn migration_project_identifier(&self) -> ::std::option::Option<&str> {
        self.migration_project_identifier.as_deref()
    }
    /// <p>A value that specifies the database objects to export.</p>
    pub fn selection_rules(&self) -> ::std::option::Option<&str> {
        self.selection_rules.as_deref()
    }
    /// <p>Whether to overwrite the migration project extension pack. An extension pack is an add-on module that emulates functions present in a source database that are required when converting objects to the target database.</p>
    pub fn overwrite_extension_pack(&self) -> ::std::option::Option<bool> {
        self.overwrite_extension_pack
    }
}
impl StartMetadataModelExportToTargetInput {
    /// Creates a new builder-style object to manufacture [`StartMetadataModelExportToTargetInput`](crate::operation::start_metadata_model_export_to_target::StartMetadataModelExportToTargetInput).
    pub fn builder() -> crate::operation::start_metadata_model_export_to_target::builders::StartMetadataModelExportToTargetInputBuilder {
        crate::operation::start_metadata_model_export_to_target::builders::StartMetadataModelExportToTargetInputBuilder::default()
    }
}

/// A builder for [`StartMetadataModelExportToTargetInput`](crate::operation::start_metadata_model_export_to_target::StartMetadataModelExportToTargetInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StartMetadataModelExportToTargetInputBuilder {
    pub(crate) migration_project_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) selection_rules: ::std::option::Option<::std::string::String>,
    pub(crate) overwrite_extension_pack: ::std::option::Option<bool>,
}
impl StartMetadataModelExportToTargetInputBuilder {
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    /// This field is required.
    pub fn migration_project_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.migration_project_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    pub fn set_migration_project_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.migration_project_identifier = input;
        self
    }
    /// <p>The migration project name or Amazon Resource Name (ARN).</p>
    pub fn get_migration_project_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.migration_project_identifier
    }
    /// <p>A value that specifies the database objects to export.</p>
    /// This field is required.
    pub fn selection_rules(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.selection_rules = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A value that specifies the database objects to export.</p>
    pub fn set_selection_rules(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.selection_rules = input;
        self
    }
    /// <p>A value that specifies the database objects to export.</p>
    pub fn get_selection_rules(&self) -> &::std::option::Option<::std::string::String> {
        &self.selection_rules
    }
    /// <p>Whether to overwrite the migration project extension pack. An extension pack is an add-on module that emulates functions present in a source database that are required when converting objects to the target database.</p>
    pub fn overwrite_extension_pack(mut self, input: bool) -> Self {
        self.overwrite_extension_pack = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether to overwrite the migration project extension pack. An extension pack is an add-on module that emulates functions present in a source database that are required when converting objects to the target database.</p>
    pub fn set_overwrite_extension_pack(mut self, input: ::std::option::Option<bool>) -> Self {
        self.overwrite_extension_pack = input;
        self
    }
    /// <p>Whether to overwrite the migration project extension pack. An extension pack is an add-on module that emulates functions present in a source database that are required when converting objects to the target database.</p>
    pub fn get_overwrite_extension_pack(&self) -> &::std::option::Option<bool> {
        &self.overwrite_extension_pack
    }
    /// Consumes the builder and constructs a [`StartMetadataModelExportToTargetInput`](crate::operation::start_metadata_model_export_to_target::StartMetadataModelExportToTargetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::start_metadata_model_export_to_target::StartMetadataModelExportToTargetInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::start_metadata_model_export_to_target::StartMetadataModelExportToTargetInput {
                migration_project_identifier: self.migration_project_identifier,
                selection_rules: self.selection_rules,
                overwrite_extension_pack: self.overwrite_extension_pack,
            },
        )
    }
}
