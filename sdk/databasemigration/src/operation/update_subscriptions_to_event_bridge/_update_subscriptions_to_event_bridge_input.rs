// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateSubscriptionsToEventBridgeInput {
    /// <p>When set to true, this operation migrates DMS subscriptions for Amazon SNS notifications no matter what your replication instance version is. If not set or set to false, this operation runs only when all your replication instances are from DMS version 3.4.6 or higher. </p>
    #[doc(hidden)]
    pub force_move: std::option::Option<bool>,
}
impl UpdateSubscriptionsToEventBridgeInput {
    /// <p>When set to true, this operation migrates DMS subscriptions for Amazon SNS notifications no matter what your replication instance version is. If not set or set to false, this operation runs only when all your replication instances are from DMS version 3.4.6 or higher. </p>
    pub fn force_move(&self) -> std::option::Option<bool> {
        self.force_move
    }
}
impl UpdateSubscriptionsToEventBridgeInput {
    /// Creates a new builder-style object to manufacture [`UpdateSubscriptionsToEventBridgeInput`](crate::operation::update_subscriptions_to_event_bridge::UpdateSubscriptionsToEventBridgeInput).
    pub fn builder() -> crate::operation::update_subscriptions_to_event_bridge::builders::UpdateSubscriptionsToEventBridgeInputBuilder{
        crate::operation::update_subscriptions_to_event_bridge::builders::UpdateSubscriptionsToEventBridgeInputBuilder::default()
    }
}

/// A builder for [`UpdateSubscriptionsToEventBridgeInput`](crate::operation::update_subscriptions_to_event_bridge::UpdateSubscriptionsToEventBridgeInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateSubscriptionsToEventBridgeInputBuilder {
    pub(crate) force_move: std::option::Option<bool>,
}
impl UpdateSubscriptionsToEventBridgeInputBuilder {
    /// <p>When set to true, this operation migrates DMS subscriptions for Amazon SNS notifications no matter what your replication instance version is. If not set or set to false, this operation runs only when all your replication instances are from DMS version 3.4.6 or higher. </p>
    pub fn force_move(mut self, input: bool) -> Self {
        self.force_move = Some(input);
        self
    }
    /// <p>When set to true, this operation migrates DMS subscriptions for Amazon SNS notifications no matter what your replication instance version is. If not set or set to false, this operation runs only when all your replication instances are from DMS version 3.4.6 or higher. </p>
    pub fn set_force_move(mut self, input: std::option::Option<bool>) -> Self {
        self.force_move = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateSubscriptionsToEventBridgeInput`](crate::operation::update_subscriptions_to_event_bridge::UpdateSubscriptionsToEventBridgeInput).
    pub fn build(self) -> Result<crate::operation::update_subscriptions_to_event_bridge::UpdateSubscriptionsToEventBridgeInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::update_subscriptions_to_event_bridge::UpdateSubscriptionsToEventBridgeInput {
                force_move: self.force_move
                ,
            }
        )
    }
}
