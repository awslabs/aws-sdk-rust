// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_instance_profile_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::modify_instance_profile::ModifyInstanceProfileInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.instance_profile_identifier {
        object.key("InstanceProfileIdentifier").string(var_1.as_str());
    }
    if let Some(var_2) = &input.availability_zone {
        object.key("AvailabilityZone").string(var_2.as_str());
    }
    if let Some(var_3) = &input.kms_key_arn {
        object.key("KmsKeyArn").string(var_3.as_str());
    }
    if let Some(var_4) = &input.publicly_accessible {
        object.key("PubliclyAccessible").boolean(*var_4);
    }
    if let Some(var_5) = &input.network_type {
        object.key("NetworkType").string(var_5.as_str());
    }
    if let Some(var_6) = &input.instance_profile_name {
        object.key("InstanceProfileName").string(var_6.as_str());
    }
    if let Some(var_7) = &input.description {
        object.key("Description").string(var_7.as_str());
    }
    if let Some(var_8) = &input.subnet_group_identifier {
        object.key("SubnetGroupIdentifier").string(var_8.as_str());
    }
    if let Some(var_9) = &input.vpc_security_groups {
        let mut array_10 = object.key("VpcSecurityGroups").start_array();
        for item_11 in var_9 {
            {
                array_10.value().string(item_11.as_str());
            }
        }
        array_10.finish();
    }
    Ok(())
}
