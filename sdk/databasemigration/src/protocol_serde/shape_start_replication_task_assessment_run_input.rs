// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_replication_task_assessment_run_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_replication_task_assessment_run::StartReplicationTaskAssessmentRunInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.replication_task_arn {
        object.key("ReplicationTaskArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.service_access_role_arn {
        object.key("ServiceAccessRoleArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.result_location_bucket {
        object.key("ResultLocationBucket").string(var_3.as_str());
    }
    if let Some(var_4) = &input.result_location_folder {
        object.key("ResultLocationFolder").string(var_4.as_str());
    }
    if let Some(var_5) = &input.result_encryption_mode {
        object.key("ResultEncryptionMode").string(var_5.as_str());
    }
    if let Some(var_6) = &input.result_kms_key_arn {
        object.key("ResultKmsKeyArn").string(var_6.as_str());
    }
    if let Some(var_7) = &input.assessment_run_name {
        object.key("AssessmentRunName").string(var_7.as_str());
    }
    if let Some(var_8) = &input.include_only {
        let mut array_9 = object.key("IncludeOnly").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10.as_str());
            }
        }
        array_9.finish();
    }
    if let Some(var_11) = &input.exclude {
        let mut array_12 = object.key("Exclude").start_array();
        for item_13 in var_11 {
            {
                array_12.value().string(item_13.as_str());
            }
        }
        array_12.finish();
    }
    Ok(())
}
