// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_replication_config_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::modify_replication_config::ModifyReplicationConfigInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.replication_config_arn {
        object.key("ReplicationConfigArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.replication_config_identifier {
        object.key("ReplicationConfigIdentifier").string(var_2.as_str());
    }
    if let Some(var_3) = &input.replication_type {
        object.key("ReplicationType").string(var_3.as_str());
    }
    if let Some(var_4) = &input.table_mappings {
        object.key("TableMappings").string(var_4.as_str());
    }
    if let Some(var_5) = &input.replication_settings {
        object.key("ReplicationSettings").string(var_5.as_str());
    }
    if let Some(var_6) = &input.supplemental_settings {
        object.key("SupplementalSettings").string(var_6.as_str());
    }
    if let Some(var_7) = &input.compute_config {
        #[allow(unused_mut)]
        let mut object_8 = object.key("ComputeConfig").start_object();
        crate::protocol_serde::shape_compute_config::ser_compute_config(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.source_endpoint_arn {
        object.key("SourceEndpointArn").string(var_9.as_str());
    }
    if let Some(var_10) = &input.target_endpoint_arn {
        object.key("TargetEndpointArn").string(var_10.as_str());
    }
    Ok(())
}
