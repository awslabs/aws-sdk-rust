// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_import_certificate_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::import_certificate::ImportCertificateInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.certificate_identifier {
        object.key("CertificateIdentifier").string(var_1.as_str());
    }
    if let Some(var_2) = &input.certificate_pem {
        object.key("CertificatePem").string(var_2.as_str());
    }
    if let Some(var_3) = &input.certificate_wallet {
        object
            .key("CertificateWallet")
            .string_unchecked(&aws_smithy_types::base64::encode(var_3));
    }
    if let Some(var_4) = &input.tags {
        let mut array_5 = object.key("Tags").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    Ok(())
}
