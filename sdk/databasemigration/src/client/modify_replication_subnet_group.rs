// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyReplicationSubnetGroup`](crate::client::fluent_builders::ModifyReplicationSubnetGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`replication_subnet_group_identifier(impl Into<String>)`](crate::client::fluent_builders::ModifyReplicationSubnetGroup::replication_subnet_group_identifier) / [`set_replication_subnet_group_identifier(Option<String>)`](crate::client::fluent_builders::ModifyReplicationSubnetGroup::set_replication_subnet_group_identifier): <p>The name of the replication instance subnet group.</p>
    ///   - [`replication_subnet_group_description(impl Into<String>)`](crate::client::fluent_builders::ModifyReplicationSubnetGroup::replication_subnet_group_description) / [`set_replication_subnet_group_description(Option<String>)`](crate::client::fluent_builders::ModifyReplicationSubnetGroup::set_replication_subnet_group_description): <p>A description for the replication instance subnet group.</p>
    ///   - [`subnet_ids(Vec<String>)`](crate::client::fluent_builders::ModifyReplicationSubnetGroup::subnet_ids) / [`set_subnet_ids(Option<Vec<String>>)`](crate::client::fluent_builders::ModifyReplicationSubnetGroup::set_subnet_ids): <p>A list of subnet IDs.</p>
    /// - On success, responds with [`ModifyReplicationSubnetGroupOutput`](crate::output::ModifyReplicationSubnetGroupOutput) with field(s):
    ///   - [`replication_subnet_group(Option<ReplicationSubnetGroup>)`](crate::output::ModifyReplicationSubnetGroupOutput::replication_subnet_group): <p>The modified replication subnet group.</p>
    /// - On failure, responds with [`SdkError<ModifyReplicationSubnetGroupError>`](crate::error::ModifyReplicationSubnetGroupError)
    pub fn modify_replication_subnet_group(
        &self,
    ) -> crate::client::fluent_builders::ModifyReplicationSubnetGroup {
        crate::client::fluent_builders::ModifyReplicationSubnetGroup::new(self.handle.clone())
    }
}
