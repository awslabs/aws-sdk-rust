// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEventSubscription`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscription_name(impl Into<String>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::subscription_name) / [`set_subscription_name(Option<String>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::set_subscription_name): <p>The name of the DMS event notification subscription. This name must be less than 255 characters.</p>
    ///   - [`sns_topic_arn(impl Into<String>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::sns_topic_arn) / [`set_sns_topic_arn(Option<String>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::set_sns_topic_arn): <p> The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it. </p>
    ///   - [`source_type(impl Into<String>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::source_type) / [`set_source_type(Option<String>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::set_source_type): <p> The type of DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to <code>replication-instance</code>. If this value isn't specified, all events are returned. </p>  <p>Valid values: <code>replication-instance</code> | <code>replication-task</code> </p>
    ///   - [`event_categories(Vec<String>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::event_categories) / [`set_event_categories(Option<Vec<String>>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::set_event_categories): <p>A list of event categories for a source type that you want to subscribe to. For more information, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html">Working with Events and Notifications</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`source_ids(Vec<String>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::source_ids) / [`set_source_ids(Option<Vec<String>>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::set_source_ids): <p>A list of identifiers for which DMS provides notification events.</p>  <p>If you don't specify a value, notifications are provided for all sources.</p>  <p>If you specify multiple values, they must be of the same type. For example, if you specify a database instance ID, then all of the other values must be database instance IDs.</p>
    ///   - [`enabled(bool)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::enabled) / [`set_enabled(Option<bool>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::set_enabled): <p> A Boolean value; set to <code>true</code> to activate the subscription, or set to <code>false</code> to create the subscription but not activate it. </p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::set_tags): <p>One or more tags to be assigned to the event subscription.</p>
    /// - On success, responds with [`CreateEventSubscriptionOutput`](crate::operation::create_event_subscription::CreateEventSubscriptionOutput) with field(s):
    ///   - [`event_subscription(Option<EventSubscription>)`](crate::operation::create_event_subscription::CreateEventSubscriptionOutput::event_subscription): <p>The event subscription that was created.</p>
    /// - On failure, responds with [`SdkError<CreateEventSubscriptionError>`](crate::operation::create_event_subscription::CreateEventSubscriptionError)
    pub fn create_event_subscription(
        &self,
    ) -> crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder
    {
        crate::operation::create_event_subscription::builders::CreateEventSubscriptionFluentBuilder::new(self.handle.clone())
    }
}
