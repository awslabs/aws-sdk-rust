// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyReplicationInstance`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`replication_instance_arn(impl Into<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::replication_instance_arn) / [`set_replication_instance_arn(Option<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_replication_instance_arn): <p>The Amazon Resource Name (ARN) of the replication instance.</p>
    ///   - [`allocated_storage(i32)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::allocated_storage) / [`set_allocated_storage(Option<i32>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_allocated_storage): <p>The amount of storage (in gigabytes) to be allocated for the replication instance.</p>
    ///   - [`apply_immediately(bool)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::apply_immediately) / [`set_apply_immediately(bool)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_apply_immediately): <p>Indicates whether the changes should be applied immediately or during the next maintenance window.</p>
    ///   - [`replication_instance_class(impl Into<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::replication_instance_class) / [`set_replication_instance_class(Option<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_replication_instance_class): <p>The compute and memory capacity of the replication instance as defined for the specified replication instance class. For example to specify the instance class dms.c4.large, set this parameter to <code>"dms.c4.large"</code>.</p>  <p>For more information on the settings and capacities for the available replication instance classes, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth"> Selecting the right DMS replication instance for your migration</a>. </p>
    ///   - [`vpc_security_group_ids(Vec<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec<String>>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_vpc_security_group_ids): <p> Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. </p>
    ///   - [`preferred_maintenance_window(impl Into<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::preferred_maintenance_window) / [`set_preferred_maintenance_window(Option<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_preferred_maintenance_window): <p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p>  <p>Default: Uses existing setting</p>  <p>Format: ddd:hh24:mi-ddd:hh24:mi</p>  <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p>  <p>Constraints: Must be at least 30 minutes</p>
    ///   - [`multi_az(bool)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::multi_az) / [`set_multi_az(Option<bool>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_multi_az): <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. </p>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_engine_version): <p>The engine version number of the replication instance.</p>  <p>When modifying a major engine version of an instance, also set <code>AllowMajorVersionUpgrade</code> to <code>true</code>.</p>
    ///   - [`allow_major_version_upgrade(bool)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::allow_major_version_upgrade) / [`set_allow_major_version_upgrade(bool)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_allow_major_version_upgrade): <p>Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage, and the change is asynchronously applied as soon as possible.</p>  <p>This parameter must be set to <code>true</code> when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the replication instance's current version.</p>
    ///   - [`auto_minor_version_upgrade(bool)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::auto_minor_version_upgrade) / [`set_auto_minor_version_upgrade(Option<bool>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_auto_minor_version_upgrade): <p>A value that indicates that minor version upgrades are applied automatically to the replication instance during the maintenance window. Changing this parameter doesn't result in an outage, except in the case described following. The change is asynchronously applied as soon as possible. </p>  <p>An outage does result if these factors apply: </p>  <ul>   <li> <p>This parameter is set to <code>true</code> during the maintenance window.</p> </li>   <li> <p>A newer minor version is available. </p> </li>   <li> <p>DMS has enabled automatic patching for the given engine version. </p> </li>  </ul>
    ///   - [`replication_instance_identifier(impl Into<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::replication_instance_identifier) / [`set_replication_instance_identifier(Option<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_replication_instance_identifier): <p>The replication instance identifier. This parameter is stored as a lowercase string.</p>
    ///   - [`network_type(impl Into<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::network_type) / [`set_network_type(Option<String>)`](crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::set_network_type): <p>The type of IP address protocol used by a replication instance, such as IPv4 only or Dual-stack that supports both IPv4 and IPv6 addressing. IPv6 only is not yet supported.</p>
    /// - On success, responds with [`ModifyReplicationInstanceOutput`](crate::operation::modify_replication_instance::ModifyReplicationInstanceOutput) with field(s):
    ///   - [`replication_instance(Option<ReplicationInstance>)`](crate::operation::modify_replication_instance::ModifyReplicationInstanceOutput::replication_instance): <p>The modified replication instance.</p>
    /// - On failure, responds with [`SdkError<ModifyReplicationInstanceError>`](crate::operation::modify_replication_instance::ModifyReplicationInstanceError)
    pub fn modify_replication_instance(&self) -> crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder{
        crate::operation::modify_replication_instance::builders::ModifyReplicationInstanceFluentBuilder::new(self.handle.clone())
    }
}
