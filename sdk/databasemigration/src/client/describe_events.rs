// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeEvents`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_identifier(impl Into<String>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::source_identifier) / [`set_source_identifier(Option<String>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::set_source_identifier): <p> The identifier of an event source.</p>
    ///   - [`source_type(SourceType)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::source_type) / [`set_source_type(Option<SourceType>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::set_source_type): <p>The type of DMS resource that generates events.</p>  <p>Valid values: replication-instance | replication-task</p>
    ///   - [`start_time(DateTime)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::set_start_time): <p>The start time for the events to be listed.</p>
    ///   - [`end_time(DateTime)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::set_end_time): <p>The end time for the events to be listed.</p>
    ///   - [`duration(i32)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::duration) / [`set_duration(Option<i32>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::set_duration): <p>The duration of the events to be listed.</p>
    ///   - [`event_categories(Vec<String>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::event_categories) / [`set_event_categories(Option<Vec<String>>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::set_event_categories): <p>A list of event categories for the source type that you've chosen.</p>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::set_filters): <p>Filters applied to events. The only valid filter is <code>replication-instance-id</code>.</p>
    ///   - [`max_records(i32)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::set_max_records): <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_events::builders::DescribeEventsFluentBuilder::set_marker): <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    /// - On success, responds with [`DescribeEventsOutput`](crate::operation::describe_events::DescribeEventsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_events::DescribeEventsOutput::marker): <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    ///   - [`events(Option<Vec<Event>>)`](crate::operation::describe_events::DescribeEventsOutput::events): <p>The events described.</p>
    /// - On failure, responds with [`SdkError<DescribeEventsError>`](crate::operation::describe_events::DescribeEventsError)
    pub fn describe_events(
        &self,
    ) -> crate::operation::describe_events::builders::DescribeEventsFluentBuilder {
        crate::operation::describe_events::builders::DescribeEventsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
