// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeEventSubscriptions`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscription_name(impl Into<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::subscription_name) / [`set_subscription_name(Option<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::set_subscription_name): <p>The name of the DMS event subscription to be described.</p>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::set_filters): <p>Filters applied to event subscriptions.</p>  <p>Valid filter names: event-subscription-arn | event-subscription-id </p>
    ///   - [`max_records(i32)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::set_max_records): <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::set_marker): <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    /// - On success, responds with [`DescribeEventSubscriptionsOutput`](crate::operation::describe_event_subscriptions::DescribeEventSubscriptionsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_event_subscriptions::DescribeEventSubscriptionsOutput::marker): <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    ///   - [`event_subscriptions_list(Option<Vec<EventSubscription>>)`](crate::operation::describe_event_subscriptions::DescribeEventSubscriptionsOutput::event_subscriptions_list): <p>A list of event subscriptions.</p>
    /// - On failure, responds with [`SdkError<DescribeEventSubscriptionsError>`](crate::operation::describe_event_subscriptions::DescribeEventSubscriptionsError)
    pub fn describe_event_subscriptions(&self) -> crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder{
        crate::operation::describe_event_subscriptions::builders::DescribeEventSubscriptionsFluentBuilder::new(self.handle.clone())
    }
}
