// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeSchemas`](crate::client::fluent_builders::DescribeSchemas) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeSchemas::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeSchemas::endpoint_arn) / [`set_endpoint_arn(Option<String>)`](crate::client::fluent_builders::DescribeSchemas::set_endpoint_arn): <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    ///   - [`max_records(i32)`](crate::client::fluent_builders::DescribeSchemas::max_records) / [`set_max_records(Option<i32>)`](crate::client::fluent_builders::DescribeSchemas::set_max_records): <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeSchemas::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeSchemas::set_marker): <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    /// - On success, responds with [`DescribeSchemasOutput`](crate::output::DescribeSchemasOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::output::DescribeSchemasOutput::marker): <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    ///   - [`schemas(Option<Vec<String>>)`](crate::output::DescribeSchemasOutput::schemas): <p>The described schema.</p>
    /// - On failure, responds with [`SdkError<DescribeSchemasError>`](crate::error::DescribeSchemasError)
    pub fn describe_schemas(&self) -> crate::client::fluent_builders::DescribeSchemas {
        crate::client::fluent_builders::DescribeSchemas::new(self.handle.clone())
    }
}
