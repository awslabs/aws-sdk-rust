// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeEndpointSettings`](crate::client::fluent_builders::DescribeEndpointSettings) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeEndpointSettings::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`engine_name(impl Into<String>)`](crate::client::fluent_builders::DescribeEndpointSettings::engine_name) / [`set_engine_name(Option<String>)`](crate::client::fluent_builders::DescribeEndpointSettings::set_engine_name): <p>The databse engine used for your source or target endpoint.</p>
    ///   - [`max_records(i32)`](crate::client::fluent_builders::DescribeEndpointSettings::max_records) / [`set_max_records(Option<i32>)`](crate::client::fluent_builders::DescribeEndpointSettings::set_max_records): <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeEndpointSettings::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeEndpointSettings::set_marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On success, responds with [`DescribeEndpointSettingsOutput`](crate::output::DescribeEndpointSettingsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::output::DescribeEndpointSettingsOutput::marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    ///   - [`endpoint_settings(Option<Vec<EndpointSetting>>)`](crate::output::DescribeEndpointSettingsOutput::endpoint_settings): <p>Descriptions of the endpoint settings available for your source or target database engine.</p>
    /// - On failure, responds with [`SdkError<DescribeEndpointSettingsError>`](crate::error::DescribeEndpointSettingsError)
    pub fn describe_endpoint_settings(
        &self,
    ) -> crate::client::fluent_builders::DescribeEndpointSettings {
        crate::client::fluent_builders::DescribeEndpointSettings::new(self.handle.clone())
    }
}
