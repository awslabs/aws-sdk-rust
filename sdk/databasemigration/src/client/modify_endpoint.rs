// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyEndpoint`](crate::client::fluent_builders::ModifyEndpoint) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_arn(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::endpoint_arn) / [`set_endpoint_arn(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_endpoint_arn): <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    ///   - [`endpoint_identifier(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::endpoint_identifier) / [`set_endpoint_identifier(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_endpoint_identifier): <p>The database endpoint identifier. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens.</p>
    ///   - [`endpoint_type(ReplicationEndpointTypeValue)`](crate::client::fluent_builders::ModifyEndpoint::endpoint_type) / [`set_endpoint_type(Option<ReplicationEndpointTypeValue>)`](crate::client::fluent_builders::ModifyEndpoint::set_endpoint_type): <p>The type of endpoint. Valid values are <code>source</code> and <code>target</code>.</p>
    ///   - [`engine_name(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::engine_name) / [`set_engine_name(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_engine_name): <p>The database engine name. Valid values, depending on the EndpointType, include <code>"mysql"</code>, <code>"oracle"</code>, <code>"postgres"</code>, <code>"mariadb"</code>, <code>"aurora"</code>, <code>"aurora-postgresql"</code>, <code>"redshift"</code>, <code>"s3"</code>, <code>"db2"</code>, <code>"db2-zos"</code>, <code>"azuredb"</code>, <code>"sybase"</code>, <code>"dynamodb"</code>, <code>"mongodb"</code>, <code>"kinesis"</code>, <code>"kafka"</code>, <code>"elasticsearch"</code>, <code>"documentdb"</code>, <code>"sqlserver"</code>, <code>"neptune"</code>, and <code>"babelfish"</code>.</p>
    ///   - [`username(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::username) / [`set_username(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_username): <p>The user name to be used to login to the endpoint database.</p>
    ///   - [`password(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::password) / [`set_password(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_password): <p>The password to be used to login to the endpoint database.</p>
    ///   - [`server_name(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::server_name) / [`set_server_name(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_server_name): <p>The name of the server where the endpoint database resides.</p>
    ///   - [`port(i32)`](crate::client::fluent_builders::ModifyEndpoint::port) / [`set_port(Option<i32>)`](crate::client::fluent_builders::ModifyEndpoint::set_port): <p>The port used by the endpoint database.</p>
    ///   - [`database_name(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::database_name) / [`set_database_name(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_database_name): <p>The name of the endpoint database. For a MySQL source or target endpoint, do not specify DatabaseName.</p>
    ///   - [`extra_connection_attributes(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::extra_connection_attributes) / [`set_extra_connection_attributes(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_extra_connection_attributes): <p>Additional attributes associated with the connection. To reset this parameter, pass the empty string ("") as an argument.</p>
    ///   - [`certificate_arn(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::certificate_arn) / [`set_certificate_arn(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_certificate_arn): <p>The Amazon Resource Name (ARN) of the certificate used for SSL connection.</p>
    ///   - [`ssl_mode(DmsSslModeValue)`](crate::client::fluent_builders::ModifyEndpoint::ssl_mode) / [`set_ssl_mode(Option<DmsSslModeValue>)`](crate::client::fluent_builders::ModifyEndpoint::set_ssl_mode): <p>The SSL mode used to connect to the endpoint. The default value is <code>none</code>.</p>
    ///   - [`service_access_role_arn(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::service_access_role_arn) / [`set_service_access_role_arn(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_service_access_role_arn): <p> The Amazon Resource Name (ARN) for the IAM role you want to use to modify the endpoint. The role must allow the <code>iam:PassRole</code> action.</p>
    ///   - [`external_table_definition(impl Into<String>)`](crate::client::fluent_builders::ModifyEndpoint::external_table_definition) / [`set_external_table_definition(Option<String>)`](crate::client::fluent_builders::ModifyEndpoint::set_external_table_definition): <p>The external table definition.</p>
    ///   - [`dynamo_db_settings(DynamoDbSettings)`](crate::client::fluent_builders::ModifyEndpoint::dynamo_db_settings) / [`set_dynamo_db_settings(Option<DynamoDbSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_dynamo_db_settings): <p>Settings in JSON format for the target Amazon DynamoDB endpoint. For information about other available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html#CHAP_Target.DynamoDB.ObjectMapping">Using Object Mapping to Migrate Data to DynamoDB</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`s3_settings(S3Settings)`](crate::client::fluent_builders::ModifyEndpoint::s3_settings) / [`set_s3_settings(Option<S3Settings>)`](crate::client::fluent_builders::ModifyEndpoint::set_s3_settings): <p>Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring">Extra Connection Attributes When Using Amazon S3 as a Target for DMS</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`dms_transfer_settings(DmsTransferSettings)`](crate::client::fluent_builders::ModifyEndpoint::dms_transfer_settings) / [`set_dms_transfer_settings(Option<DmsTransferSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_dms_transfer_settings): <p>The settings in JSON format for the DMS transfer type of source endpoint. </p>  <p>Attributes include the following:</p>  <ul>   <li> <p>serviceAccessRoleArn - The Amazon Resource Name (ARN) used by the service access IAM role. The role must allow the <code>iam:PassRole</code> action.</p> </li>   <li> <p>BucketName - The name of the S3 bucket to use.</p> </li>  </ul>  <p>Shorthand syntax for these settings is as follows: <code>ServiceAccessRoleArn=string ,BucketName=string</code> </p>  <p>JSON syntax for these settings is as follows: <code>{ "ServiceAccessRoleArn": "string", "BucketName": "string"} </code> </p>
    ///   - [`mongo_db_settings(MongoDbSettings)`](crate::client::fluent_builders::ModifyEndpoint::mongo_db_settings) / [`set_mongo_db_settings(Option<MongoDbSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_mongo_db_settings): <p>Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the configuration properties section in <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html#CHAP_Source.MongoDB.Configuration">Endpoint configuration settings when using MongoDB as a source for Database Migration Service</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`kinesis_settings(KinesisSettings)`](crate::client::fluent_builders::ModifyEndpoint::kinesis_settings) / [`set_kinesis_settings(Option<KinesisSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_kinesis_settings): <p>Settings in JSON format for the target endpoint for Amazon Kinesis Data Streams. For more information about the available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html#CHAP_Target.Kinesis.ObjectMapping">Using object mapping to migrate data to a Kinesis data stream</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`kafka_settings(KafkaSettings)`](crate::client::fluent_builders::ModifyEndpoint::kafka_settings) / [`set_kafka_settings(Option<KafkaSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_kafka_settings): <p>Settings in JSON format for the target Apache Kafka endpoint. For more information about the available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kafka.html#CHAP_Target.Kafka.ObjectMapping">Using object mapping to migrate data to a Kafka topic</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`elasticsearch_settings(ElasticsearchSettings)`](crate::client::fluent_builders::ModifyEndpoint::elasticsearch_settings) / [`set_elasticsearch_settings(Option<ElasticsearchSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_elasticsearch_settings): <p>Settings in JSON format for the target OpenSearch endpoint. For more information about the available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration">Extra Connection Attributes When Using OpenSearch as a Target for DMS</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`neptune_settings(NeptuneSettings)`](crate::client::fluent_builders::ModifyEndpoint::neptune_settings) / [`set_neptune_settings(Option<NeptuneSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_neptune_settings): <p>Settings in JSON format for the target Amazon Neptune endpoint. For more information about the available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Neptune.html#CHAP_Target.Neptune.EndpointSettings">Specifying graph-mapping rules using Gremlin and R2RML for Amazon Neptune as a target</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`redshift_settings(RedshiftSettings)`](crate::client::fluent_builders::ModifyEndpoint::redshift_settings) / [`set_redshift_settings(Option<RedshiftSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_redshift_settings): <p>Provides information that defines an Amazon Redshift endpoint.</p>
    ///   - [`postgre_sql_settings(PostgreSqlSettings)`](crate::client::fluent_builders::ModifyEndpoint::postgre_sql_settings) / [`set_postgre_sql_settings(Option<PostgreSqlSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_postgre_sql_settings): <p>Settings in JSON format for the source and target PostgreSQL endpoint. For information about other available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib">Extra connection attributes when using PostgreSQL as a source for DMS</a> and <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.PostgreSQL.html#CHAP_Target.PostgreSQL.ConnectionAttrib"> Extra connection attributes when using PostgreSQL as a target for DMS</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`my_sql_settings(MySqlSettings)`](crate::client::fluent_builders::ModifyEndpoint::my_sql_settings) / [`set_my_sql_settings(Option<MySqlSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_my_sql_settings): <p>Settings in JSON format for the source and target MySQL endpoint. For information about other available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MySQL.html#CHAP_Source.MySQL.ConnectionAttrib">Extra connection attributes when using MySQL as a source for DMS</a> and <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.MySQL.html#CHAP_Target.MySQL.ConnectionAttrib">Extra connection attributes when using a MySQL-compatible database as a target for DMS</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`oracle_settings(OracleSettings)`](crate::client::fluent_builders::ModifyEndpoint::oracle_settings) / [`set_oracle_settings(Option<OracleSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_oracle_settings): <p>Settings in JSON format for the source and target Oracle endpoint. For information about other available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html#CHAP_Source.Oracle.ConnectionAttrib">Extra connection attributes when using Oracle as a source for DMS</a> and <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Oracle.html#CHAP_Target.Oracle.ConnectionAttrib"> Extra connection attributes when using Oracle as a target for DMS</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`sybase_settings(SybaseSettings)`](crate::client::fluent_builders::ModifyEndpoint::sybase_settings) / [`set_sybase_settings(Option<SybaseSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_sybase_settings): <p>Settings in JSON format for the source and target SAP ASE endpoint. For information about other available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SAP.html#CHAP_Source.SAP.ConnectionAttrib">Extra connection attributes when using SAP ASE as a source for DMS</a> and <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SAP.html#CHAP_Target.SAP.ConnectionAttrib">Extra connection attributes when using SAP ASE as a target for DMS</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`microsoft_sql_server_settings(MicrosoftSqlServerSettings)`](crate::client::fluent_builders::ModifyEndpoint::microsoft_sql_server_settings) / [`set_microsoft_sql_server_settings(Option<MicrosoftSqlServerSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_microsoft_sql_server_settings): <p>Settings in JSON format for the source and target Microsoft SQL Server endpoint. For information about other available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SQLServer.html#CHAP_Source.SQLServer.ConnectionAttrib">Extra connection attributes when using SQL Server as a source for DMS</a> and <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SQLServer.html#CHAP_Target.SQLServer.ConnectionAttrib"> Extra connection attributes when using SQL Server as a target for DMS</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`ibm_db2_settings(IbmDb2Settings)`](crate::client::fluent_builders::ModifyEndpoint::ibm_db2_settings) / [`set_ibm_db2_settings(Option<IbmDb2Settings>)`](crate::client::fluent_builders::ModifyEndpoint::set_ibm_db2_settings): <p>Settings in JSON format for the source IBM Db2 LUW endpoint. For information about other available settings, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.DB2.html#CHAP_Source.DB2.ConnectionAttrib">Extra connection attributes when using Db2 LUW as a source for DMS</a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`doc_db_settings(DocDbSettings)`](crate::client::fluent_builders::ModifyEndpoint::doc_db_settings) / [`set_doc_db_settings(Option<DocDbSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_doc_db_settings): <p>Settings in JSON format for the source DocumentDB endpoint. For more information about the available settings, see the configuration properties section in <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.DocumentDB.html"> Using DocumentDB as a Target for Database Migration Service </a> in the <i>Database Migration Service User Guide.</i> </p>
    ///   - [`redis_settings(RedisSettings)`](crate::client::fluent_builders::ModifyEndpoint::redis_settings) / [`set_redis_settings(Option<RedisSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_redis_settings): <p>Settings in JSON format for the Redis target endpoint.</p>
    ///   - [`exact_settings(bool)`](crate::client::fluent_builders::ModifyEndpoint::exact_settings) / [`set_exact_settings(Option<bool>)`](crate::client::fluent_builders::ModifyEndpoint::set_exact_settings): <p>If this attribute is Y, the current call to <code>ModifyEndpoint</code> replaces all existing endpoint settings with the exact settings that you specify in this call. If this attribute is N, the current call to <code>ModifyEndpoint</code> does two things: </p>  <ul>   <li> <p>It replaces any endpoint settings that already exist with new values, for settings with the same names.</p> </li>   <li> <p>It creates new endpoint settings that you specify in the call, for settings with different names. </p> </li>  </ul>  <p>For example, if you call <code>create-endpoint ... --endpoint-settings '{"a":1}' ...</code>, the endpoint has the following endpoint settings: <code>'{"a":1}'</code>. If you then call <code>modify-endpoint ... --endpoint-settings '{"b":2}' ...</code> for the same endpoint, the endpoint has the following settings: <code>'{"a":1,"b":2}'</code>. </p>  <p>However, suppose that you follow this with a call to <code>modify-endpoint ... --endpoint-settings '{"b":2}' --exact-settings ...</code> for that same endpoint again. Then the endpoint has the following settings: <code>'{"b":2}'</code>. All existing settings are replaced with the exact settings that you specify. </p>
    ///   - [`gcp_my_sql_settings(GcpMySqlSettings)`](crate::client::fluent_builders::ModifyEndpoint::gcp_my_sql_settings) / [`set_gcp_my_sql_settings(Option<GcpMySqlSettings>)`](crate::client::fluent_builders::ModifyEndpoint::set_gcp_my_sql_settings): <p>Settings in JSON format for the source GCP MySQL endpoint.</p>
    /// - On success, responds with [`ModifyEndpointOutput`](crate::output::ModifyEndpointOutput) with field(s):
    ///   - [`endpoint(Option<Endpoint>)`](crate::output::ModifyEndpointOutput::endpoint): <p>The modified endpoint.</p>
    /// - On failure, responds with [`SdkError<ModifyEndpointError>`](crate::error::ModifyEndpointError)
    pub fn modify_endpoint(&self) -> crate::client::fluent_builders::ModifyEndpoint {
        crate::client::fluent_builders::ModifyEndpoint::new(self.handle.clone())
    }
}
