// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a Fleet Advisor collector inventory.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InventoryData {
    /// <p>The number of databases in the Fleet Advisor collector inventory.</p>
    #[doc(hidden)]
    pub number_of_databases: std::option::Option<i32>,
    /// <p>The number of schemas in the Fleet Advisor collector inventory.</p>
    #[doc(hidden)]
    pub number_of_schemas: std::option::Option<i32>,
}
impl InventoryData {
    /// <p>The number of databases in the Fleet Advisor collector inventory.</p>
    pub fn number_of_databases(&self) -> std::option::Option<i32> {
        self.number_of_databases
    }
    /// <p>The number of schemas in the Fleet Advisor collector inventory.</p>
    pub fn number_of_schemas(&self) -> std::option::Option<i32> {
        self.number_of_schemas
    }
}
impl InventoryData {
    /// Creates a new builder-style object to manufacture [`InventoryData`](crate::types::InventoryData).
    pub fn builder() -> crate::types::builders::InventoryDataBuilder {
        crate::types::builders::InventoryDataBuilder::default()
    }
}

/// A builder for [`InventoryData`](crate::types::InventoryData).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InventoryDataBuilder {
    pub(crate) number_of_databases: std::option::Option<i32>,
    pub(crate) number_of_schemas: std::option::Option<i32>,
}
impl InventoryDataBuilder {
    /// <p>The number of databases in the Fleet Advisor collector inventory.</p>
    pub fn number_of_databases(mut self, input: i32) -> Self {
        self.number_of_databases = Some(input);
        self
    }
    /// <p>The number of databases in the Fleet Advisor collector inventory.</p>
    pub fn set_number_of_databases(mut self, input: std::option::Option<i32>) -> Self {
        self.number_of_databases = input;
        self
    }
    /// <p>The number of schemas in the Fleet Advisor collector inventory.</p>
    pub fn number_of_schemas(mut self, input: i32) -> Self {
        self.number_of_schemas = Some(input);
        self
    }
    /// <p>The number of schemas in the Fleet Advisor collector inventory.</p>
    pub fn set_number_of_schemas(mut self, input: std::option::Option<i32>) -> Self {
        self.number_of_schemas = input;
        self
    }
    /// Consumes the builder and constructs a [`InventoryData`](crate::types::InventoryData).
    pub fn build(self) -> crate::types::InventoryData {
        crate::types::InventoryData {
            number_of_databases: self.number_of_databases,
            number_of_schemas: self.number_of_schemas,
        }
    }
}
