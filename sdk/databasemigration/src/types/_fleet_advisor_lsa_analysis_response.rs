// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a large-scale assessment (LSA) analysis run by a Fleet Advisor collector.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FleetAdvisorLsaAnalysisResponse {
    /// <p>The ID of an LSA analysis run by a Fleet Advisor collector.</p>
    #[doc(hidden)]
    pub lsa_analysis_id: std::option::Option<std::string::String>,
    /// <p>The status of an LSA analysis run by a Fleet Advisor collector.</p>
    #[doc(hidden)]
    pub status: std::option::Option<std::string::String>,
}
impl FleetAdvisorLsaAnalysisResponse {
    /// <p>The ID of an LSA analysis run by a Fleet Advisor collector.</p>
    pub fn lsa_analysis_id(&self) -> std::option::Option<&str> {
        self.lsa_analysis_id.as_deref()
    }
    /// <p>The status of an LSA analysis run by a Fleet Advisor collector.</p>
    pub fn status(&self) -> std::option::Option<&str> {
        self.status.as_deref()
    }
}
impl FleetAdvisorLsaAnalysisResponse {
    /// Creates a new builder-style object to manufacture [`FleetAdvisorLsaAnalysisResponse`](crate::types::FleetAdvisorLsaAnalysisResponse).
    pub fn builder() -> crate::types::builders::FleetAdvisorLsaAnalysisResponseBuilder {
        crate::types::builders::FleetAdvisorLsaAnalysisResponseBuilder::default()
    }
}

/// A builder for [`FleetAdvisorLsaAnalysisResponse`](crate::types::FleetAdvisorLsaAnalysisResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FleetAdvisorLsaAnalysisResponseBuilder {
    pub(crate) lsa_analysis_id: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<std::string::String>,
}
impl FleetAdvisorLsaAnalysisResponseBuilder {
    /// <p>The ID of an LSA analysis run by a Fleet Advisor collector.</p>
    pub fn lsa_analysis_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.lsa_analysis_id = Some(input.into());
        self
    }
    /// <p>The ID of an LSA analysis run by a Fleet Advisor collector.</p>
    pub fn set_lsa_analysis_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.lsa_analysis_id = input;
        self
    }
    /// <p>The status of an LSA analysis run by a Fleet Advisor collector.</p>
    pub fn status(mut self, input: impl Into<std::string::String>) -> Self {
        self.status = Some(input.into());
        self
    }
    /// <p>The status of an LSA analysis run by a Fleet Advisor collector.</p>
    pub fn set_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`FleetAdvisorLsaAnalysisResponse`](crate::types::FleetAdvisorLsaAnalysisResponse).
    pub fn build(self) -> crate::types::FleetAdvisorLsaAnalysisResponse {
        crate::types::FleetAdvisorLsaAnalysisResponse {
            lsa_analysis_id: self.lsa_analysis_id,
            status: self.status,
        }
    }
}
