// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Identifies an DMS resource and any pending actions for it.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourcePendingMaintenanceActions {
    /// <p>The Amazon Resource Name (ARN) of the DMS resource that the pending maintenance action applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Introduction.AWS.ARN.html"> Constructing an Amazon Resource Name (ARN) for DMS</a> in the DMS documentation.</p>
    #[doc(hidden)]
    pub resource_identifier: std::option::Option<std::string::String>,
    /// <p>Detailed information about the pending maintenance action.</p>
    #[doc(hidden)]
    pub pending_maintenance_action_details:
        std::option::Option<std::vec::Vec<crate::types::PendingMaintenanceAction>>,
}
impl ResourcePendingMaintenanceActions {
    /// <p>The Amazon Resource Name (ARN) of the DMS resource that the pending maintenance action applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Introduction.AWS.ARN.html"> Constructing an Amazon Resource Name (ARN) for DMS</a> in the DMS documentation.</p>
    pub fn resource_identifier(&self) -> std::option::Option<&str> {
        self.resource_identifier.as_deref()
    }
    /// <p>Detailed information about the pending maintenance action.</p>
    pub fn pending_maintenance_action_details(
        &self,
    ) -> std::option::Option<&[crate::types::PendingMaintenanceAction]> {
        self.pending_maintenance_action_details.as_deref()
    }
}
impl ResourcePendingMaintenanceActions {
    /// Creates a new builder-style object to manufacture [`ResourcePendingMaintenanceActions`](crate::types::ResourcePendingMaintenanceActions).
    pub fn builder() -> crate::types::builders::ResourcePendingMaintenanceActionsBuilder {
        crate::types::builders::ResourcePendingMaintenanceActionsBuilder::default()
    }
}

/// A builder for [`ResourcePendingMaintenanceActions`](crate::types::ResourcePendingMaintenanceActions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourcePendingMaintenanceActionsBuilder {
    pub(crate) resource_identifier: std::option::Option<std::string::String>,
    pub(crate) pending_maintenance_action_details:
        std::option::Option<std::vec::Vec<crate::types::PendingMaintenanceAction>>,
}
impl ResourcePendingMaintenanceActionsBuilder {
    /// <p>The Amazon Resource Name (ARN) of the DMS resource that the pending maintenance action applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Introduction.AWS.ARN.html"> Constructing an Amazon Resource Name (ARN) for DMS</a> in the DMS documentation.</p>
    pub fn resource_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_identifier = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the DMS resource that the pending maintenance action applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Introduction.AWS.ARN.html"> Constructing an Amazon Resource Name (ARN) for DMS</a> in the DMS documentation.</p>
    pub fn set_resource_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_identifier = input;
        self
    }
    /// Appends an item to `pending_maintenance_action_details`.
    ///
    /// To override the contents of this collection use [`set_pending_maintenance_action_details`](Self::set_pending_maintenance_action_details).
    ///
    /// <p>Detailed information about the pending maintenance action.</p>
    pub fn pending_maintenance_action_details(
        mut self,
        input: crate::types::PendingMaintenanceAction,
    ) -> Self {
        let mut v = self.pending_maintenance_action_details.unwrap_or_default();
        v.push(input);
        self.pending_maintenance_action_details = Some(v);
        self
    }
    /// <p>Detailed information about the pending maintenance action.</p>
    pub fn set_pending_maintenance_action_details(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PendingMaintenanceAction>>,
    ) -> Self {
        self.pending_maintenance_action_details = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourcePendingMaintenanceActions`](crate::types::ResourcePendingMaintenanceActions).
    pub fn build(self) -> crate::types::ResourcePendingMaintenanceActions {
        crate::types::ResourcePendingMaintenanceActions {
            resource_identifier: self.resource_identifier,
            pending_maintenance_action_details: self.pending_maintenance_action_details,
        }
    }
}
