// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information that describes status of a schema at an endpoint specified by the <code>DescribeRefreshSchemaStatus</code> operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RefreshSchemasStatus {
    /// <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    #[doc(hidden)]
    pub endpoint_arn: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the replication instance.</p>
    #[doc(hidden)]
    pub replication_instance_arn: std::option::Option<std::string::String>,
    /// <p>The status of the schema.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::RefreshSchemasStatusTypeValue>,
    /// <p>The date the schema was last refreshed.</p>
    #[doc(hidden)]
    pub last_refresh_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The last failure message for the schema.</p>
    #[doc(hidden)]
    pub last_failure_message: std::option::Option<std::string::String>,
}
impl RefreshSchemasStatus {
    /// <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    pub fn endpoint_arn(&self) -> std::option::Option<&str> {
        self.endpoint_arn.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the replication instance.</p>
    pub fn replication_instance_arn(&self) -> std::option::Option<&str> {
        self.replication_instance_arn.as_deref()
    }
    /// <p>The status of the schema.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::RefreshSchemasStatusTypeValue> {
        self.status.as_ref()
    }
    /// <p>The date the schema was last refreshed.</p>
    pub fn last_refresh_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_refresh_date.as_ref()
    }
    /// <p>The last failure message for the schema.</p>
    pub fn last_failure_message(&self) -> std::option::Option<&str> {
        self.last_failure_message.as_deref()
    }
}
impl RefreshSchemasStatus {
    /// Creates a new builder-style object to manufacture [`RefreshSchemasStatus`](crate::types::RefreshSchemasStatus).
    pub fn builder() -> crate::types::builders::RefreshSchemasStatusBuilder {
        crate::types::builders::RefreshSchemasStatusBuilder::default()
    }
}

/// A builder for [`RefreshSchemasStatus`](crate::types::RefreshSchemasStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RefreshSchemasStatusBuilder {
    pub(crate) endpoint_arn: std::option::Option<std::string::String>,
    pub(crate) replication_instance_arn: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::RefreshSchemasStatusTypeValue>,
    pub(crate) last_refresh_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_failure_message: std::option::Option<std::string::String>,
}
impl RefreshSchemasStatusBuilder {
    /// <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    pub fn endpoint_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    pub fn set_endpoint_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the replication instance.</p>
    pub fn replication_instance_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.replication_instance_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the replication instance.</p>
    pub fn set_replication_instance_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.replication_instance_arn = input;
        self
    }
    /// <p>The status of the schema.</p>
    pub fn status(mut self, input: crate::types::RefreshSchemasStatusTypeValue) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the schema.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::RefreshSchemasStatusTypeValue>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The date the schema was last refreshed.</p>
    pub fn last_refresh_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_refresh_date = Some(input);
        self
    }
    /// <p>The date the schema was last refreshed.</p>
    pub fn set_last_refresh_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_refresh_date = input;
        self
    }
    /// <p>The last failure message for the schema.</p>
    pub fn last_failure_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_failure_message = Some(input.into());
        self
    }
    /// <p>The last failure message for the schema.</p>
    pub fn set_last_failure_message(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.last_failure_message = input;
        self
    }
    /// Consumes the builder and constructs a [`RefreshSchemasStatus`](crate::types::RefreshSchemasStatus).
    pub fn build(self) -> crate::types::RefreshSchemasStatus {
        crate::types::RefreshSchemasStatus {
            endpoint_arn: self.endpoint_arn,
            replication_instance_arn: self.replication_instance_arn,
            status: self.status,
            last_refresh_date: self.last_refresh_date,
            last_failure_message: self.last_failure_message,
        }
    }
}
