// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The task assessment report in JSON format. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReplicationTaskAssessmentResult {
    /// <p> The replication task identifier of the task on which the task assessment was run. </p>
    #[doc(hidden)]
    pub replication_task_identifier: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the replication task. </p>
    #[doc(hidden)]
    pub replication_task_arn: std::option::Option<std::string::String>,
    /// <p>The date the task assessment was completed. </p>
    #[doc(hidden)]
    pub replication_task_last_assessment_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p> The status of the task assessment. </p>
    #[doc(hidden)]
    pub assessment_status: std::option::Option<std::string::String>,
    /// <p> The file containing the results of the task assessment. </p>
    #[doc(hidden)]
    pub assessment_results_file: std::option::Option<std::string::String>,
    /// <p> The task assessment results in JSON format. </p>
    /// <p>The response object only contains this field if you provide <code>DescribeReplicationTaskAssessmentResultsMessage$ReplicationTaskArn</code> in the request.</p>
    #[doc(hidden)]
    pub assessment_results: std::option::Option<std::string::String>,
    /// <p> The URL of the S3 object containing the task assessment results. </p>
    /// <p>The response object only contains this field if you provide <code>DescribeReplicationTaskAssessmentResultsMessage$ReplicationTaskArn</code> in the request.</p>
    #[doc(hidden)]
    pub s3_object_url: std::option::Option<std::string::String>,
}
impl ReplicationTaskAssessmentResult {
    /// <p> The replication task identifier of the task on which the task assessment was run. </p>
    pub fn replication_task_identifier(&self) -> std::option::Option<&str> {
        self.replication_task_identifier.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the replication task. </p>
    pub fn replication_task_arn(&self) -> std::option::Option<&str> {
        self.replication_task_arn.as_deref()
    }
    /// <p>The date the task assessment was completed. </p>
    pub fn replication_task_last_assessment_date(
        &self,
    ) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.replication_task_last_assessment_date.as_ref()
    }
    /// <p> The status of the task assessment. </p>
    pub fn assessment_status(&self) -> std::option::Option<&str> {
        self.assessment_status.as_deref()
    }
    /// <p> The file containing the results of the task assessment. </p>
    pub fn assessment_results_file(&self) -> std::option::Option<&str> {
        self.assessment_results_file.as_deref()
    }
    /// <p> The task assessment results in JSON format. </p>
    /// <p>The response object only contains this field if you provide <code>DescribeReplicationTaskAssessmentResultsMessage$ReplicationTaskArn</code> in the request.</p>
    pub fn assessment_results(&self) -> std::option::Option<&str> {
        self.assessment_results.as_deref()
    }
    /// <p> The URL of the S3 object containing the task assessment results. </p>
    /// <p>The response object only contains this field if you provide <code>DescribeReplicationTaskAssessmentResultsMessage$ReplicationTaskArn</code> in the request.</p>
    pub fn s3_object_url(&self) -> std::option::Option<&str> {
        self.s3_object_url.as_deref()
    }
}
impl ReplicationTaskAssessmentResult {
    /// Creates a new builder-style object to manufacture [`ReplicationTaskAssessmentResult`](crate::types::ReplicationTaskAssessmentResult).
    pub fn builder() -> crate::types::builders::ReplicationTaskAssessmentResultBuilder {
        crate::types::builders::ReplicationTaskAssessmentResultBuilder::default()
    }
}

/// A builder for [`ReplicationTaskAssessmentResult`](crate::types::ReplicationTaskAssessmentResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReplicationTaskAssessmentResultBuilder {
    pub(crate) replication_task_identifier: std::option::Option<std::string::String>,
    pub(crate) replication_task_arn: std::option::Option<std::string::String>,
    pub(crate) replication_task_last_assessment_date:
        std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) assessment_status: std::option::Option<std::string::String>,
    pub(crate) assessment_results_file: std::option::Option<std::string::String>,
    pub(crate) assessment_results: std::option::Option<std::string::String>,
    pub(crate) s3_object_url: std::option::Option<std::string::String>,
}
impl ReplicationTaskAssessmentResultBuilder {
    /// <p> The replication task identifier of the task on which the task assessment was run. </p>
    pub fn replication_task_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.replication_task_identifier = Some(input.into());
        self
    }
    /// <p> The replication task identifier of the task on which the task assessment was run. </p>
    pub fn set_replication_task_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.replication_task_identifier = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the replication task. </p>
    pub fn replication_task_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.replication_task_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the replication task. </p>
    pub fn set_replication_task_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.replication_task_arn = input;
        self
    }
    /// <p>The date the task assessment was completed. </p>
    pub fn replication_task_last_assessment_date(
        mut self,
        input: aws_smithy_types::DateTime,
    ) -> Self {
        self.replication_task_last_assessment_date = Some(input);
        self
    }
    /// <p>The date the task assessment was completed. </p>
    pub fn set_replication_task_last_assessment_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.replication_task_last_assessment_date = input;
        self
    }
    /// <p> The status of the task assessment. </p>
    pub fn assessment_status(mut self, input: impl Into<std::string::String>) -> Self {
        self.assessment_status = Some(input.into());
        self
    }
    /// <p> The status of the task assessment. </p>
    pub fn set_assessment_status(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.assessment_status = input;
        self
    }
    /// <p> The file containing the results of the task assessment. </p>
    pub fn assessment_results_file(mut self, input: impl Into<std::string::String>) -> Self {
        self.assessment_results_file = Some(input.into());
        self
    }
    /// <p> The file containing the results of the task assessment. </p>
    pub fn set_assessment_results_file(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.assessment_results_file = input;
        self
    }
    /// <p> The task assessment results in JSON format. </p>
    /// <p>The response object only contains this field if you provide <code>DescribeReplicationTaskAssessmentResultsMessage$ReplicationTaskArn</code> in the request.</p>
    pub fn assessment_results(mut self, input: impl Into<std::string::String>) -> Self {
        self.assessment_results = Some(input.into());
        self
    }
    /// <p> The task assessment results in JSON format. </p>
    /// <p>The response object only contains this field if you provide <code>DescribeReplicationTaskAssessmentResultsMessage$ReplicationTaskArn</code> in the request.</p>
    pub fn set_assessment_results(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.assessment_results = input;
        self
    }
    /// <p> The URL of the S3 object containing the task assessment results. </p>
    /// <p>The response object only contains this field if you provide <code>DescribeReplicationTaskAssessmentResultsMessage$ReplicationTaskArn</code> in the request.</p>
    pub fn s3_object_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_object_url = Some(input.into());
        self
    }
    /// <p> The URL of the S3 object containing the task assessment results. </p>
    /// <p>The response object only contains this field if you provide <code>DescribeReplicationTaskAssessmentResultsMessage$ReplicationTaskArn</code> in the request.</p>
    pub fn set_s3_object_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_object_url = input;
        self
    }
    /// Consumes the builder and constructs a [`ReplicationTaskAssessmentResult`](crate::types::ReplicationTaskAssessmentResult).
    pub fn build(self) -> crate::types::ReplicationTaskAssessmentResult {
        crate::types::ReplicationTaskAssessmentResult {
            replication_task_identifier: self.replication_task_identifier,
            replication_task_arn: self.replication_task_arn,
            replication_task_last_assessment_date: self.replication_task_last_assessment_date,
            assessment_status: self.assessment_status,
            assessment_results_file: self.assessment_results_file,
            assessment_results: self.assessment_results,
            s3_object_url: self.s3_object_url,
        }
    }
}
