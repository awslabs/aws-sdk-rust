// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information that describes an individual assessment from a premigration assessment run.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReplicationTaskIndividualAssessment {
    /// <p>Amazon Resource Name (ARN) of this individual assessment.</p>
    #[doc(hidden)]
    pub replication_task_individual_assessment_arn: std::option::Option<std::string::String>,
    /// <p>ARN of the premigration assessment run that is created to run this individual assessment.</p>
    #[doc(hidden)]
    pub replication_task_assessment_run_arn: std::option::Option<std::string::String>,
    /// <p>Name of this individual assessment.</p>
    #[doc(hidden)]
    pub individual_assessment_name: std::option::Option<std::string::String>,
    /// <p>Individual assessment status.</p>
    /// <p>This status can have one of the following values:</p>
    /// <ul>
    /// <li> <p> <code>"cancelled"</code> </p> </li>
    /// <li> <p> <code>"error"</code> </p> </li>
    /// <li> <p> <code>"failed"</code> </p> </li>
    /// <li> <p> <code>"passed"</code> </p> </li>
    /// <li> <p> <code>"pending"</code> </p> </li>
    /// <li> <p> <code>"running"</code> </p> </li>
    /// </ul>
    #[doc(hidden)]
    pub status: std::option::Option<std::string::String>,
    /// <p>Date when this individual assessment was started as part of running the <code>StartReplicationTaskAssessmentRun</code> operation.</p>
    #[doc(hidden)]
    pub replication_task_individual_assessment_start_date:
        std::option::Option<aws_smithy_types::DateTime>,
}
impl ReplicationTaskIndividualAssessment {
    /// <p>Amazon Resource Name (ARN) of this individual assessment.</p>
    pub fn replication_task_individual_assessment_arn(&self) -> std::option::Option<&str> {
        self.replication_task_individual_assessment_arn.as_deref()
    }
    /// <p>ARN of the premigration assessment run that is created to run this individual assessment.</p>
    pub fn replication_task_assessment_run_arn(&self) -> std::option::Option<&str> {
        self.replication_task_assessment_run_arn.as_deref()
    }
    /// <p>Name of this individual assessment.</p>
    pub fn individual_assessment_name(&self) -> std::option::Option<&str> {
        self.individual_assessment_name.as_deref()
    }
    /// <p>Individual assessment status.</p>
    /// <p>This status can have one of the following values:</p>
    /// <ul>
    /// <li> <p> <code>"cancelled"</code> </p> </li>
    /// <li> <p> <code>"error"</code> </p> </li>
    /// <li> <p> <code>"failed"</code> </p> </li>
    /// <li> <p> <code>"passed"</code> </p> </li>
    /// <li> <p> <code>"pending"</code> </p> </li>
    /// <li> <p> <code>"running"</code> </p> </li>
    /// </ul>
    pub fn status(&self) -> std::option::Option<&str> {
        self.status.as_deref()
    }
    /// <p>Date when this individual assessment was started as part of running the <code>StartReplicationTaskAssessmentRun</code> operation.</p>
    pub fn replication_task_individual_assessment_start_date(
        &self,
    ) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.replication_task_individual_assessment_start_date
            .as_ref()
    }
}
impl ReplicationTaskIndividualAssessment {
    /// Creates a new builder-style object to manufacture [`ReplicationTaskIndividualAssessment`](crate::types::ReplicationTaskIndividualAssessment).
    pub fn builder() -> crate::types::builders::ReplicationTaskIndividualAssessmentBuilder {
        crate::types::builders::ReplicationTaskIndividualAssessmentBuilder::default()
    }
}

/// A builder for [`ReplicationTaskIndividualAssessment`](crate::types::ReplicationTaskIndividualAssessment).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReplicationTaskIndividualAssessmentBuilder {
    pub(crate) replication_task_individual_assessment_arn: std::option::Option<std::string::String>,
    pub(crate) replication_task_assessment_run_arn: std::option::Option<std::string::String>,
    pub(crate) individual_assessment_name: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<std::string::String>,
    pub(crate) replication_task_individual_assessment_start_date:
        std::option::Option<aws_smithy_types::DateTime>,
}
impl ReplicationTaskIndividualAssessmentBuilder {
    /// <p>Amazon Resource Name (ARN) of this individual assessment.</p>
    pub fn replication_task_individual_assessment_arn(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.replication_task_individual_assessment_arn = Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) of this individual assessment.</p>
    pub fn set_replication_task_individual_assessment_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.replication_task_individual_assessment_arn = input;
        self
    }
    /// <p>ARN of the premigration assessment run that is created to run this individual assessment.</p>
    pub fn replication_task_assessment_run_arn(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.replication_task_assessment_run_arn = Some(input.into());
        self
    }
    /// <p>ARN of the premigration assessment run that is created to run this individual assessment.</p>
    pub fn set_replication_task_assessment_run_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.replication_task_assessment_run_arn = input;
        self
    }
    /// <p>Name of this individual assessment.</p>
    pub fn individual_assessment_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.individual_assessment_name = Some(input.into());
        self
    }
    /// <p>Name of this individual assessment.</p>
    pub fn set_individual_assessment_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.individual_assessment_name = input;
        self
    }
    /// <p>Individual assessment status.</p>
    /// <p>This status can have one of the following values:</p>
    /// <ul>
    /// <li> <p> <code>"cancelled"</code> </p> </li>
    /// <li> <p> <code>"error"</code> </p> </li>
    /// <li> <p> <code>"failed"</code> </p> </li>
    /// <li> <p> <code>"passed"</code> </p> </li>
    /// <li> <p> <code>"pending"</code> </p> </li>
    /// <li> <p> <code>"running"</code> </p> </li>
    /// </ul>
    pub fn status(mut self, input: impl Into<std::string::String>) -> Self {
        self.status = Some(input.into());
        self
    }
    /// <p>Individual assessment status.</p>
    /// <p>This status can have one of the following values:</p>
    /// <ul>
    /// <li> <p> <code>"cancelled"</code> </p> </li>
    /// <li> <p> <code>"error"</code> </p> </li>
    /// <li> <p> <code>"failed"</code> </p> </li>
    /// <li> <p> <code>"passed"</code> </p> </li>
    /// <li> <p> <code>"pending"</code> </p> </li>
    /// <li> <p> <code>"running"</code> </p> </li>
    /// </ul>
    pub fn set_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>Date when this individual assessment was started as part of running the <code>StartReplicationTaskAssessmentRun</code> operation.</p>
    pub fn replication_task_individual_assessment_start_date(
        mut self,
        input: aws_smithy_types::DateTime,
    ) -> Self {
        self.replication_task_individual_assessment_start_date = Some(input);
        self
    }
    /// <p>Date when this individual assessment was started as part of running the <code>StartReplicationTaskAssessmentRun</code> operation.</p>
    pub fn set_replication_task_individual_assessment_start_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.replication_task_individual_assessment_start_date = input;
        self
    }
    /// Consumes the builder and constructs a [`ReplicationTaskIndividualAssessment`](crate::types::ReplicationTaskIndividualAssessment).
    pub fn build(self) -> crate::types::ReplicationTaskIndividualAssessment {
        crate::types::ReplicationTaskIndividualAssessment {
            replication_task_individual_assessment_arn: self
                .replication_task_individual_assessment_arn,
            replication_task_assessment_run_arn: self.replication_task_assessment_run_arn,
            individual_assessment_name: self.individual_assessment_name,
            status: self.status,
            replication_task_individual_assessment_start_date: self
                .replication_task_individual_assessment_start_date,
        }
    }
}
