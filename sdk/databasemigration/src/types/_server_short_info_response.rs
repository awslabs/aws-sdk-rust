// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a server in a Fleet Advisor collector inventory.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ServerShortInfoResponse {
    /// <p>The ID of a server in a Fleet Advisor collector inventory.</p>
    #[doc(hidden)]
    pub server_id: std::option::Option<std::string::String>,
    /// <p>The IP address of a server in a Fleet Advisor collector inventory.</p>
    #[doc(hidden)]
    pub ip_address: std::option::Option<std::string::String>,
    /// <p>The name address of a server in a Fleet Advisor collector inventory.</p>
    #[doc(hidden)]
    pub server_name: std::option::Option<std::string::String>,
}
impl ServerShortInfoResponse {
    /// <p>The ID of a server in a Fleet Advisor collector inventory.</p>
    pub fn server_id(&self) -> std::option::Option<&str> {
        self.server_id.as_deref()
    }
    /// <p>The IP address of a server in a Fleet Advisor collector inventory.</p>
    pub fn ip_address(&self) -> std::option::Option<&str> {
        self.ip_address.as_deref()
    }
    /// <p>The name address of a server in a Fleet Advisor collector inventory.</p>
    pub fn server_name(&self) -> std::option::Option<&str> {
        self.server_name.as_deref()
    }
}
impl ServerShortInfoResponse {
    /// Creates a new builder-style object to manufacture [`ServerShortInfoResponse`](crate::types::ServerShortInfoResponse).
    pub fn builder() -> crate::types::builders::ServerShortInfoResponseBuilder {
        crate::types::builders::ServerShortInfoResponseBuilder::default()
    }
}

/// A builder for [`ServerShortInfoResponse`](crate::types::ServerShortInfoResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ServerShortInfoResponseBuilder {
    pub(crate) server_id: std::option::Option<std::string::String>,
    pub(crate) ip_address: std::option::Option<std::string::String>,
    pub(crate) server_name: std::option::Option<std::string::String>,
}
impl ServerShortInfoResponseBuilder {
    /// <p>The ID of a server in a Fleet Advisor collector inventory.</p>
    pub fn server_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.server_id = Some(input.into());
        self
    }
    /// <p>The ID of a server in a Fleet Advisor collector inventory.</p>
    pub fn set_server_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.server_id = input;
        self
    }
    /// <p>The IP address of a server in a Fleet Advisor collector inventory.</p>
    pub fn ip_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.ip_address = Some(input.into());
        self
    }
    /// <p>The IP address of a server in a Fleet Advisor collector inventory.</p>
    pub fn set_ip_address(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ip_address = input;
        self
    }
    /// <p>The name address of a server in a Fleet Advisor collector inventory.</p>
    pub fn server_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.server_name = Some(input.into());
        self
    }
    /// <p>The name address of a server in a Fleet Advisor collector inventory.</p>
    pub fn set_server_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.server_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ServerShortInfoResponse`](crate::types::ServerShortInfoResponse).
    pub fn build(self) -> crate::types::ServerShortInfoResponse {
        crate::types::ServerShortInfoResponse {
            server_id: self.server_id,
            ip_address: self.ip_address,
            server_name: self.server_name,
        }
    }
}
