// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>In response to a request by the <code>DescribeReplicationTasks</code> operation, this object provides a collection of statistics about a replication task.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReplicationTaskStats {
    /// <p>The percent complete for the full load migration task.</p>
    #[doc(hidden)]
    pub full_load_progress_percent: i32,
    /// <p>The elapsed time of the task, in milliseconds.</p>
    #[doc(hidden)]
    pub elapsed_time_millis: i64,
    /// <p>The number of tables loaded for this task.</p>
    #[doc(hidden)]
    pub tables_loaded: i32,
    /// <p>The number of tables currently loading for this task.</p>
    #[doc(hidden)]
    pub tables_loading: i32,
    /// <p>The number of tables queued for this task.</p>
    #[doc(hidden)]
    pub tables_queued: i32,
    /// <p>The number of errors that have occurred during this task.</p>
    #[doc(hidden)]
    pub tables_errored: i32,
    /// <p>The date the replication task was started either with a fresh start or a target reload.</p>
    #[doc(hidden)]
    pub fresh_start_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date the replication task was started either with a fresh start or a resume. For more information, see <a href="https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html#DMS-StartReplicationTask-request-StartReplicationTaskType">StartReplicationTaskType</a>.</p>
    #[doc(hidden)]
    pub start_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date the replication task was stopped.</p>
    #[doc(hidden)]
    pub stop_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date the replication task full load was started.</p>
    #[doc(hidden)]
    pub full_load_start_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date the replication task full load was completed.</p>
    #[doc(hidden)]
    pub full_load_finish_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl ReplicationTaskStats {
    /// <p>The percent complete for the full load migration task.</p>
    pub fn full_load_progress_percent(&self) -> i32 {
        self.full_load_progress_percent
    }
    /// <p>The elapsed time of the task, in milliseconds.</p>
    pub fn elapsed_time_millis(&self) -> i64 {
        self.elapsed_time_millis
    }
    /// <p>The number of tables loaded for this task.</p>
    pub fn tables_loaded(&self) -> i32 {
        self.tables_loaded
    }
    /// <p>The number of tables currently loading for this task.</p>
    pub fn tables_loading(&self) -> i32 {
        self.tables_loading
    }
    /// <p>The number of tables queued for this task.</p>
    pub fn tables_queued(&self) -> i32 {
        self.tables_queued
    }
    /// <p>The number of errors that have occurred during this task.</p>
    pub fn tables_errored(&self) -> i32 {
        self.tables_errored
    }
    /// <p>The date the replication task was started either with a fresh start or a target reload.</p>
    pub fn fresh_start_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.fresh_start_date.as_ref()
    }
    /// <p>The date the replication task was started either with a fresh start or a resume. For more information, see <a href="https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html#DMS-StartReplicationTask-request-StartReplicationTaskType">StartReplicationTaskType</a>.</p>
    pub fn start_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_date.as_ref()
    }
    /// <p>The date the replication task was stopped.</p>
    pub fn stop_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.stop_date.as_ref()
    }
    /// <p>The date the replication task full load was started.</p>
    pub fn full_load_start_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.full_load_start_date.as_ref()
    }
    /// <p>The date the replication task full load was completed.</p>
    pub fn full_load_finish_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.full_load_finish_date.as_ref()
    }
}
impl ReplicationTaskStats {
    /// Creates a new builder-style object to manufacture [`ReplicationTaskStats`](crate::types::ReplicationTaskStats).
    pub fn builder() -> crate::types::builders::ReplicationTaskStatsBuilder {
        crate::types::builders::ReplicationTaskStatsBuilder::default()
    }
}

/// A builder for [`ReplicationTaskStats`](crate::types::ReplicationTaskStats).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReplicationTaskStatsBuilder {
    pub(crate) full_load_progress_percent: std::option::Option<i32>,
    pub(crate) elapsed_time_millis: std::option::Option<i64>,
    pub(crate) tables_loaded: std::option::Option<i32>,
    pub(crate) tables_loading: std::option::Option<i32>,
    pub(crate) tables_queued: std::option::Option<i32>,
    pub(crate) tables_errored: std::option::Option<i32>,
    pub(crate) fresh_start_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) start_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) stop_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) full_load_start_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) full_load_finish_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl ReplicationTaskStatsBuilder {
    /// <p>The percent complete for the full load migration task.</p>
    pub fn full_load_progress_percent(mut self, input: i32) -> Self {
        self.full_load_progress_percent = Some(input);
        self
    }
    /// <p>The percent complete for the full load migration task.</p>
    pub fn set_full_load_progress_percent(mut self, input: std::option::Option<i32>) -> Self {
        self.full_load_progress_percent = input;
        self
    }
    /// <p>The elapsed time of the task, in milliseconds.</p>
    pub fn elapsed_time_millis(mut self, input: i64) -> Self {
        self.elapsed_time_millis = Some(input);
        self
    }
    /// <p>The elapsed time of the task, in milliseconds.</p>
    pub fn set_elapsed_time_millis(mut self, input: std::option::Option<i64>) -> Self {
        self.elapsed_time_millis = input;
        self
    }
    /// <p>The number of tables loaded for this task.</p>
    pub fn tables_loaded(mut self, input: i32) -> Self {
        self.tables_loaded = Some(input);
        self
    }
    /// <p>The number of tables loaded for this task.</p>
    pub fn set_tables_loaded(mut self, input: std::option::Option<i32>) -> Self {
        self.tables_loaded = input;
        self
    }
    /// <p>The number of tables currently loading for this task.</p>
    pub fn tables_loading(mut self, input: i32) -> Self {
        self.tables_loading = Some(input);
        self
    }
    /// <p>The number of tables currently loading for this task.</p>
    pub fn set_tables_loading(mut self, input: std::option::Option<i32>) -> Self {
        self.tables_loading = input;
        self
    }
    /// <p>The number of tables queued for this task.</p>
    pub fn tables_queued(mut self, input: i32) -> Self {
        self.tables_queued = Some(input);
        self
    }
    /// <p>The number of tables queued for this task.</p>
    pub fn set_tables_queued(mut self, input: std::option::Option<i32>) -> Self {
        self.tables_queued = input;
        self
    }
    /// <p>The number of errors that have occurred during this task.</p>
    pub fn tables_errored(mut self, input: i32) -> Self {
        self.tables_errored = Some(input);
        self
    }
    /// <p>The number of errors that have occurred during this task.</p>
    pub fn set_tables_errored(mut self, input: std::option::Option<i32>) -> Self {
        self.tables_errored = input;
        self
    }
    /// <p>The date the replication task was started either with a fresh start or a target reload.</p>
    pub fn fresh_start_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.fresh_start_date = Some(input);
        self
    }
    /// <p>The date the replication task was started either with a fresh start or a target reload.</p>
    pub fn set_fresh_start_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.fresh_start_date = input;
        self
    }
    /// <p>The date the replication task was started either with a fresh start or a resume. For more information, see <a href="https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html#DMS-StartReplicationTask-request-StartReplicationTaskType">StartReplicationTaskType</a>.</p>
    pub fn start_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_date = Some(input);
        self
    }
    /// <p>The date the replication task was started either with a fresh start or a resume. For more information, see <a href="https://docs.aws.amazon.com/dms/latest/APIReference/API_StartReplicationTask.html#DMS-StartReplicationTask-request-StartReplicationTaskType">StartReplicationTaskType</a>.</p>
    pub fn set_start_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_date = input;
        self
    }
    /// <p>The date the replication task was stopped.</p>
    pub fn stop_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.stop_date = Some(input);
        self
    }
    /// <p>The date the replication task was stopped.</p>
    pub fn set_stop_date(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.stop_date = input;
        self
    }
    /// <p>The date the replication task full load was started.</p>
    pub fn full_load_start_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.full_load_start_date = Some(input);
        self
    }
    /// <p>The date the replication task full load was started.</p>
    pub fn set_full_load_start_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.full_load_start_date = input;
        self
    }
    /// <p>The date the replication task full load was completed.</p>
    pub fn full_load_finish_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.full_load_finish_date = Some(input);
        self
    }
    /// <p>The date the replication task full load was completed.</p>
    pub fn set_full_load_finish_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.full_load_finish_date = input;
        self
    }
    /// Consumes the builder and constructs a [`ReplicationTaskStats`](crate::types::ReplicationTaskStats).
    pub fn build(self) -> crate::types::ReplicationTaskStats {
        crate::types::ReplicationTaskStats {
            full_load_progress_percent: self.full_load_progress_percent.unwrap_or_default(),
            elapsed_time_millis: self.elapsed_time_millis.unwrap_or_default(),
            tables_loaded: self.tables_loaded.unwrap_or_default(),
            tables_loading: self.tables_loading.unwrap_or_default(),
            tables_queued: self.tables_queued.unwrap_or_default(),
            tables_errored: self.tables_errored.unwrap_or_default(),
            fresh_start_date: self.fresh_start_date,
            start_date: self.start_date,
            stop_date: self.stop_date,
            full_load_start_date: self.full_load_start_date,
            full_load_finish_date: self.full_load_finish_date,
        }
    }
}
