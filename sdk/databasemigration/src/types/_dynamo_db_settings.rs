// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role used to define an Amazon DynamoDB target endpoint.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DynamoDbSettings {
    /// <p> The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the <code>iam:PassRole</code> action.</p>
    #[doc(hidden)]
    pub service_access_role_arn: std::option::Option<std::string::String>,
}
impl DynamoDbSettings {
    /// <p> The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the <code>iam:PassRole</code> action.</p>
    pub fn service_access_role_arn(&self) -> std::option::Option<&str> {
        self.service_access_role_arn.as_deref()
    }
}
impl DynamoDbSettings {
    /// Creates a new builder-style object to manufacture [`DynamoDbSettings`](crate::types::DynamoDbSettings).
    pub fn builder() -> crate::types::builders::DynamoDbSettingsBuilder {
        crate::types::builders::DynamoDbSettingsBuilder::default()
    }
}

/// A builder for [`DynamoDbSettings`](crate::types::DynamoDbSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DynamoDbSettingsBuilder {
    pub(crate) service_access_role_arn: std::option::Option<std::string::String>,
}
impl DynamoDbSettingsBuilder {
    /// <p> The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the <code>iam:PassRole</code> action.</p>
    pub fn service_access_role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.service_access_role_arn = Some(input.into());
        self
    }
    /// <p> The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the <code>iam:PassRole</code> action.</p>
    pub fn set_service_access_role_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.service_access_role_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`DynamoDbSettings`](crate::types::DynamoDbSettings).
    pub fn build(self) -> crate::types::DynamoDbSettings {
        crate::types::DynamoDbSettings {
            service_access_role_arn: self.service_access_role_arn,
        }
    }
}
