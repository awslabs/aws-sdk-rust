// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role used to define an Amazon DynamoDB target endpoint.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DynamoDbSettings {
    /// <p> The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the <code>iam:PassRole</code> action.</p>
    pub service_access_role_arn: ::std::string::String,
}
impl DynamoDbSettings {
    /// <p> The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the <code>iam:PassRole</code> action.</p>
    pub fn service_access_role_arn(&self) -> &str {
        use std::ops::Deref;
        self.service_access_role_arn.deref()
    }
}
impl DynamoDbSettings {
    /// Creates a new builder-style object to manufacture [`DynamoDbSettings`](crate::types::DynamoDbSettings).
    pub fn builder() -> crate::types::builders::DynamoDbSettingsBuilder {
        crate::types::builders::DynamoDbSettingsBuilder::default()
    }
}

/// A builder for [`DynamoDbSettings`](crate::types::DynamoDbSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DynamoDbSettingsBuilder {
    pub(crate) service_access_role_arn: ::std::option::Option<::std::string::String>,
}
impl DynamoDbSettingsBuilder {
    /// <p> The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the <code>iam:PassRole</code> action.</p>
    /// This field is required.
    pub fn service_access_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_access_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the <code>iam:PassRole</code> action.</p>
    pub fn set_service_access_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_access_role_arn = input;
        self
    }
    /// <p> The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the <code>iam:PassRole</code> action.</p>
    pub fn get_service_access_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_access_role_arn
    }
    /// Consumes the builder and constructs a [`DynamoDbSettings`](crate::types::DynamoDbSettings).
    /// This method will fail if any of the following fields are not set:
    /// - [`service_access_role_arn`](crate::types::builders::DynamoDbSettingsBuilder::service_access_role_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::DynamoDbSettings, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DynamoDbSettings {
            service_access_role_arn: self.service_access_role_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "service_access_role_arn",
                    "service_access_role_arn was not specified but it is required when building DynamoDbSettings",
                )
            })?,
        })
    }
}
