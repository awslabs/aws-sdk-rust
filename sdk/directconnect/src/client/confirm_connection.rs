// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ConfirmConnection`](crate::operation::confirm_connection::builders::ConfirmConnectionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`connection_id(impl Into<String>)`](crate::operation::confirm_connection::builders::ConfirmConnectionFluentBuilder::connection_id) / [`set_connection_id(Option<String>)`](crate::operation::confirm_connection::builders::ConfirmConnectionFluentBuilder::set_connection_id):<br>required: **true**<br><p>The ID of the hosted connection.</p><br>
    /// - On success, responds with [`ConfirmConnectionOutput`](crate::operation::confirm_connection::ConfirmConnectionOutput) with field(s):
    ///   - [`connection_state(Option<ConnectionState>)`](crate::operation::confirm_connection::ConfirmConnectionOutput::connection_state): <p>The state of the connection. The following are the possible values:</p>  <ul>   <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li>   <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li>   <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li>   <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li>   <li> <p> <code>down</code>: The network link is down.</p> </li>   <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li>   <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li>   <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li>   <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<ConfirmConnectionError>`](crate::operation::confirm_connection::ConfirmConnectionError)
    pub fn confirm_connection(&self) -> crate::operation::confirm_connection::builders::ConfirmConnectionFluentBuilder {
        crate::operation::confirm_connection::builders::ConfirmConnectionFluentBuilder::new(self.handle.clone())
    }
}
