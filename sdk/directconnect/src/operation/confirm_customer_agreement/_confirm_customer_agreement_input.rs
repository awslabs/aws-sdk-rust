// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConfirmCustomerAgreementInput {
    /// <p> The name of the customer agreement. </p>
    pub agreement_name: ::std::option::Option<::std::string::String>,
}
impl ConfirmCustomerAgreementInput {
    /// <p> The name of the customer agreement. </p>
    pub fn agreement_name(&self) -> ::std::option::Option<&str> {
        self.agreement_name.as_deref()
    }
}
impl ConfirmCustomerAgreementInput {
    /// Creates a new builder-style object to manufacture [`ConfirmCustomerAgreementInput`](crate::operation::confirm_customer_agreement::ConfirmCustomerAgreementInput).
    pub fn builder() -> crate::operation::confirm_customer_agreement::builders::ConfirmCustomerAgreementInputBuilder {
        crate::operation::confirm_customer_agreement::builders::ConfirmCustomerAgreementInputBuilder::default()
    }
}

/// A builder for [`ConfirmCustomerAgreementInput`](crate::operation::confirm_customer_agreement::ConfirmCustomerAgreementInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConfirmCustomerAgreementInputBuilder {
    pub(crate) agreement_name: ::std::option::Option<::std::string::String>,
}
impl ConfirmCustomerAgreementInputBuilder {
    /// <p> The name of the customer agreement. </p>
    pub fn agreement_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agreement_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name of the customer agreement. </p>
    pub fn set_agreement_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agreement_name = input;
        self
    }
    /// <p> The name of the customer agreement. </p>
    pub fn get_agreement_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.agreement_name
    }
    /// Consumes the builder and constructs a [`ConfirmCustomerAgreementInput`](crate::operation::confirm_customer_agreement::ConfirmCustomerAgreementInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::confirm_customer_agreement::ConfirmCustomerAgreementInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::confirm_customer_agreement::ConfirmCustomerAgreementInput {
            agreement_name: self.agreement_name,
        })
    }
}
