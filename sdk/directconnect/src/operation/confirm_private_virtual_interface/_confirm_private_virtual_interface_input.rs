// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConfirmPrivateVirtualInterfaceInput {
    /// <p>The ID of the virtual interface.</p>
    #[doc(hidden)]
    pub virtual_interface_id: std::option::Option<std::string::String>,
    /// <p>The ID of the virtual private gateway.</p>
    #[doc(hidden)]
    pub virtual_gateway_id: std::option::Option<std::string::String>,
    /// <p>The ID of the Direct Connect gateway.</p>
    #[doc(hidden)]
    pub direct_connect_gateway_id: std::option::Option<std::string::String>,
}
impl ConfirmPrivateVirtualInterfaceInput {
    /// <p>The ID of the virtual interface.</p>
    pub fn virtual_interface_id(&self) -> std::option::Option<&str> {
        self.virtual_interface_id.as_deref()
    }
    /// <p>The ID of the virtual private gateway.</p>
    pub fn virtual_gateway_id(&self) -> std::option::Option<&str> {
        self.virtual_gateway_id.as_deref()
    }
    /// <p>The ID of the Direct Connect gateway.</p>
    pub fn direct_connect_gateway_id(&self) -> std::option::Option<&str> {
        self.direct_connect_gateway_id.as_deref()
    }
}
impl ConfirmPrivateVirtualInterfaceInput {
    /// Creates a new builder-style object to manufacture [`ConfirmPrivateVirtualInterfaceInput`](crate::operation::confirm_private_virtual_interface::ConfirmPrivateVirtualInterfaceInput).
    pub fn builder() -> crate::operation::confirm_private_virtual_interface::builders::ConfirmPrivateVirtualInterfaceInputBuilder{
        crate::operation::confirm_private_virtual_interface::builders::ConfirmPrivateVirtualInterfaceInputBuilder::default()
    }
}

/// A builder for [`ConfirmPrivateVirtualInterfaceInput`](crate::operation::confirm_private_virtual_interface::ConfirmPrivateVirtualInterfaceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConfirmPrivateVirtualInterfaceInputBuilder {
    pub(crate) virtual_interface_id: std::option::Option<std::string::String>,
    pub(crate) virtual_gateway_id: std::option::Option<std::string::String>,
    pub(crate) direct_connect_gateway_id: std::option::Option<std::string::String>,
}
impl ConfirmPrivateVirtualInterfaceInputBuilder {
    /// <p>The ID of the virtual interface.</p>
    pub fn virtual_interface_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.virtual_interface_id = Some(input.into());
        self
    }
    /// <p>The ID of the virtual interface.</p>
    pub fn set_virtual_interface_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.virtual_interface_id = input;
        self
    }
    /// <p>The ID of the virtual private gateway.</p>
    pub fn virtual_gateway_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.virtual_gateway_id = Some(input.into());
        self
    }
    /// <p>The ID of the virtual private gateway.</p>
    pub fn set_virtual_gateway_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.virtual_gateway_id = input;
        self
    }
    /// <p>The ID of the Direct Connect gateway.</p>
    pub fn direct_connect_gateway_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.direct_connect_gateway_id = Some(input.into());
        self
    }
    /// <p>The ID of the Direct Connect gateway.</p>
    pub fn set_direct_connect_gateway_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.direct_connect_gateway_id = input;
        self
    }
    /// Consumes the builder and constructs a [`ConfirmPrivateVirtualInterfaceInput`](crate::operation::confirm_private_virtual_interface::ConfirmPrivateVirtualInterfaceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::confirm_private_virtual_interface::ConfirmPrivateVirtualInterfaceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::confirm_private_virtual_interface::ConfirmPrivateVirtualInterfaceInput {
                virtual_interface_id: self.virtual_interface_id
                ,
                virtual_gateway_id: self.virtual_gateway_id
                ,
                direct_connect_gateway_id: self.direct_connect_gateway_id
                ,
            }
        )
    }
}
