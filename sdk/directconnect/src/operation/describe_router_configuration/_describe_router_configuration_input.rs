// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the details about a virtual interface's router.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeRouterConfigurationInput {
    /// <p>The ID of the virtual interface.</p>
    #[doc(hidden)]
    pub virtual_interface_id: std::option::Option<std::string::String>,
    /// <p>Identifies the router by a combination of vendor, platform, and software version. For example, <code>CiscoSystemsInc-2900SeriesRouters-IOS124</code>.</p>
    #[doc(hidden)]
    pub router_type_identifier: std::option::Option<std::string::String>,
}
impl DescribeRouterConfigurationInput {
    /// <p>The ID of the virtual interface.</p>
    pub fn virtual_interface_id(&self) -> std::option::Option<&str> {
        self.virtual_interface_id.as_deref()
    }
    /// <p>Identifies the router by a combination of vendor, platform, and software version. For example, <code>CiscoSystemsInc-2900SeriesRouters-IOS124</code>.</p>
    pub fn router_type_identifier(&self) -> std::option::Option<&str> {
        self.router_type_identifier.as_deref()
    }
}
impl DescribeRouterConfigurationInput {
    /// Creates a new builder-style object to manufacture [`DescribeRouterConfigurationInput`](crate::operation::describe_router_configuration::DescribeRouterConfigurationInput).
    pub fn builder() -> crate::operation::describe_router_configuration::builders::DescribeRouterConfigurationInputBuilder{
        crate::operation::describe_router_configuration::builders::DescribeRouterConfigurationInputBuilder::default()
    }
}

/// A builder for [`DescribeRouterConfigurationInput`](crate::operation::describe_router_configuration::DescribeRouterConfigurationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeRouterConfigurationInputBuilder {
    pub(crate) virtual_interface_id: std::option::Option<std::string::String>,
    pub(crate) router_type_identifier: std::option::Option<std::string::String>,
}
impl DescribeRouterConfigurationInputBuilder {
    /// <p>The ID of the virtual interface.</p>
    pub fn virtual_interface_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.virtual_interface_id = Some(input.into());
        self
    }
    /// <p>The ID of the virtual interface.</p>
    pub fn set_virtual_interface_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.virtual_interface_id = input;
        self
    }
    /// <p>Identifies the router by a combination of vendor, platform, and software version. For example, <code>CiscoSystemsInc-2900SeriesRouters-IOS124</code>.</p>
    pub fn router_type_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.router_type_identifier = Some(input.into());
        self
    }
    /// <p>Identifies the router by a combination of vendor, platform, and software version. For example, <code>CiscoSystemsInc-2900SeriesRouters-IOS124</code>.</p>
    pub fn set_router_type_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.router_type_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeRouterConfigurationInput`](crate::operation::describe_router_configuration::DescribeRouterConfigurationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_router_configuration::DescribeRouterConfigurationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_router_configuration::DescribeRouterConfigurationInput {
                virtual_interface_id: self.virtual_interface_id,
                router_type_identifier: self.router_type_identifier,
            },
        )
    }
}
