// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of the capacity task.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CapacityTaskSummary {
    /// <p>The ID of the specified capacity task.</p>
    pub capacity_task_id: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the Outpost associated with the specified capacity task.</p>
    pub outpost_id: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the Amazon Web Services Outposts order of the host associated with the capacity task.</p>
    pub order_id: ::std::option::Option<::std::string::String>,
    /// <p>The status of the capacity task.</p>
    pub capacity_task_status: ::std::option::Option<crate::types::CapacityTaskStatus>,
    /// <p>The date that the specified capacity task was created.</p>
    pub creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date that the specified capacity task successfully ran.</p>
    pub completion_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date that the specified capacity was last modified.</p>
    pub last_modified_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CapacityTaskSummary {
    /// <p>The ID of the specified capacity task.</p>
    pub fn capacity_task_id(&self) -> ::std::option::Option<&str> {
        self.capacity_task_id.as_deref()
    }
    /// <p>The ID of the Outpost associated with the specified capacity task.</p>
    pub fn outpost_id(&self) -> ::std::option::Option<&str> {
        self.outpost_id.as_deref()
    }
    /// <p>The ID of the Amazon Web Services Outposts order of the host associated with the capacity task.</p>
    pub fn order_id(&self) -> ::std::option::Option<&str> {
        self.order_id.as_deref()
    }
    /// <p>The status of the capacity task.</p>
    pub fn capacity_task_status(&self) -> ::std::option::Option<&crate::types::CapacityTaskStatus> {
        self.capacity_task_status.as_ref()
    }
    /// <p>The date that the specified capacity task was created.</p>
    pub fn creation_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_date.as_ref()
    }
    /// <p>The date that the specified capacity task successfully ran.</p>
    pub fn completion_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.completion_date.as_ref()
    }
    /// <p>The date that the specified capacity was last modified.</p>
    pub fn last_modified_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_date.as_ref()
    }
}
impl CapacityTaskSummary {
    /// Creates a new builder-style object to manufacture [`CapacityTaskSummary`](crate::types::CapacityTaskSummary).
    pub fn builder() -> crate::types::builders::CapacityTaskSummaryBuilder {
        crate::types::builders::CapacityTaskSummaryBuilder::default()
    }
}

/// A builder for [`CapacityTaskSummary`](crate::types::CapacityTaskSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CapacityTaskSummaryBuilder {
    pub(crate) capacity_task_id: ::std::option::Option<::std::string::String>,
    pub(crate) outpost_id: ::std::option::Option<::std::string::String>,
    pub(crate) order_id: ::std::option::Option<::std::string::String>,
    pub(crate) capacity_task_status: ::std::option::Option<crate::types::CapacityTaskStatus>,
    pub(crate) creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) completion_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CapacityTaskSummaryBuilder {
    /// <p>The ID of the specified capacity task.</p>
    pub fn capacity_task_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.capacity_task_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the specified capacity task.</p>
    pub fn set_capacity_task_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.capacity_task_id = input;
        self
    }
    /// <p>The ID of the specified capacity task.</p>
    pub fn get_capacity_task_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.capacity_task_id
    }
    /// <p>The ID of the Outpost associated with the specified capacity task.</p>
    pub fn outpost_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.outpost_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Outpost associated with the specified capacity task.</p>
    pub fn set_outpost_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.outpost_id = input;
        self
    }
    /// <p>The ID of the Outpost associated with the specified capacity task.</p>
    pub fn get_outpost_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.outpost_id
    }
    /// <p>The ID of the Amazon Web Services Outposts order of the host associated with the capacity task.</p>
    pub fn order_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.order_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services Outposts order of the host associated with the capacity task.</p>
    pub fn set_order_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.order_id = input;
        self
    }
    /// <p>The ID of the Amazon Web Services Outposts order of the host associated with the capacity task.</p>
    pub fn get_order_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.order_id
    }
    /// <p>The status of the capacity task.</p>
    pub fn capacity_task_status(mut self, input: crate::types::CapacityTaskStatus) -> Self {
        self.capacity_task_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the capacity task.</p>
    pub fn set_capacity_task_status(mut self, input: ::std::option::Option<crate::types::CapacityTaskStatus>) -> Self {
        self.capacity_task_status = input;
        self
    }
    /// <p>The status of the capacity task.</p>
    pub fn get_capacity_task_status(&self) -> &::std::option::Option<crate::types::CapacityTaskStatus> {
        &self.capacity_task_status
    }
    /// <p>The date that the specified capacity task was created.</p>
    pub fn creation_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date that the specified capacity task was created.</p>
    pub fn set_creation_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The date that the specified capacity task was created.</p>
    pub fn get_creation_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date
    }
    /// <p>The date that the specified capacity task successfully ran.</p>
    pub fn completion_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.completion_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date that the specified capacity task successfully ran.</p>
    pub fn set_completion_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.completion_date = input;
        self
    }
    /// <p>The date that the specified capacity task successfully ran.</p>
    pub fn get_completion_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.completion_date
    }
    /// <p>The date that the specified capacity was last modified.</p>
    pub fn last_modified_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date that the specified capacity was last modified.</p>
    pub fn set_last_modified_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_date = input;
        self
    }
    /// <p>The date that the specified capacity was last modified.</p>
    pub fn get_last_modified_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_date
    }
    /// Consumes the builder and constructs a [`CapacityTaskSummary`](crate::types::CapacityTaskSummary).
    pub fn build(self) -> crate::types::CapacityTaskSummary {
        crate::types::CapacityTaskSummary {
            capacity_task_id: self.capacity_task_id,
            outpost_id: self.outpost_id,
            order_id: self.order_id,
            capacity_task_status: self.capacity_task_status,
            creation_date: self.creation_date,
            completion_date: self.completion_date,
            last_modified_date: self.last_modified_date,
        }
    }
}
