// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Information about the position of the asset in a rack. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssetLocation {
    /// <p> The position of an asset in a rack measured in rack units. </p>
    #[doc(hidden)]
    pub rack_elevation: std::option::Option<f32>,
}
impl AssetLocation {
    /// <p> The position of an asset in a rack measured in rack units. </p>
    pub fn rack_elevation(&self) -> std::option::Option<f32> {
        self.rack_elevation
    }
}
impl AssetLocation {
    /// Creates a new builder-style object to manufacture [`AssetLocation`](crate::types::AssetLocation).
    pub fn builder() -> crate::types::builders::AssetLocationBuilder {
        crate::types::builders::AssetLocationBuilder::default()
    }
}

/// A builder for [`AssetLocation`](crate::types::AssetLocation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssetLocationBuilder {
    pub(crate) rack_elevation: std::option::Option<f32>,
}
impl AssetLocationBuilder {
    /// <p> The position of an asset in a rack measured in rack units. </p>
    pub fn rack_elevation(mut self, input: f32) -> Self {
        self.rack_elevation = Some(input);
        self
    }
    /// <p> The position of an asset in a rack measured in rack units. </p>
    pub fn set_rack_elevation(mut self, input: std::option::Option<f32>) -> Self {
        self.rack_elevation = input;
        self
    }
    /// Consumes the builder and constructs a [`AssetLocation`](crate::types::AssetLocation).
    pub fn build(self) -> crate::types::AssetLocation {
        crate::types::AssetLocation {
            rack_elevation: self.rack_elevation,
        }
    }
}
