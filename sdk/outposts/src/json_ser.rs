// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_create_order_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateOrderInput,
) {
    if let Some(var_1) = &input.line_items {
        let mut array_2 = object.key("LineItems").start_array();
        for item_3 in var_1 {
            {
                let mut object_4 = array_2.value().start_object();
                crate::json_ser::serialize_structure_crate_model_line_item_request(
                    &mut object_4,
                    item_3,
                );
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.outpost_identifier {
        object.key("OutpostIdentifier").string(var_5);
    }
    if let Some(var_6) = &input.payment_option {
        object.key("PaymentOption").string(var_6.as_str());
    }
    if let Some(var_7) = &input.payment_term {
        object.key("PaymentTerm").string(var_7.as_str());
    }
}

pub fn serialize_structure_crate_input_create_outpost_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateOutpostInput,
) {
    if let Some(var_8) = &input.availability_zone {
        object.key("AvailabilityZone").string(var_8);
    }
    if let Some(var_9) = &input.availability_zone_id {
        object.key("AvailabilityZoneId").string(var_9);
    }
    if let Some(var_10) = &input.description {
        object.key("Description").string(var_10);
    }
    if let Some(var_11) = &input.name {
        object.key("Name").string(var_11);
    }
    if let Some(var_12) = &input.site_id {
        object.key("SiteId").string(var_12);
    }
    if let Some(var_13) = &input.tags {
        let mut object_14 = object.key("Tags").start_object();
        for (key_15, value_16) in var_13 {
            {
                object_14.key(key_15).string(value_16);
            }
        }
        object_14.finish();
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_17) = &input.tags {
        let mut object_18 = object.key("Tags").start_object();
        for (key_19, value_20) in var_17 {
            {
                object_18.key(key_19).string(value_20);
            }
        }
        object_18.finish();
    }
}

pub fn serialize_structure_crate_model_line_item_request(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LineItemRequest,
) {
    if let Some(var_21) = &input.catalog_item_id {
        object.key("CatalogItemId").string(var_21);
    }
    if input.quantity != 0 {
        object.key("Quantity").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.quantity).into()),
        );
    }
}
