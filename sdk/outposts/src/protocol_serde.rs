// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_cancel_order;

pub(crate) mod shape_create_order;

pub(crate) mod shape_create_outpost;

pub(crate) mod shape_create_site;

pub(crate) mod shape_delete_outpost;

pub(crate) mod shape_delete_site;

pub(crate) mod shape_get_catalog_item;

pub(crate) mod shape_get_connection;

pub(crate) mod shape_get_order;

pub(crate) mod shape_get_outpost;

pub(crate) mod shape_get_outpost_instance_types;

pub(crate) mod shape_get_site;

pub(crate) mod shape_get_site_address;

pub(crate) mod shape_list_assets;

pub(crate) mod shape_list_catalog_items;

pub(crate) mod shape_list_orders;

pub(crate) mod shape_list_outposts;

pub(crate) mod shape_list_sites;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_start_connection;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_outpost;

pub(crate) mod shape_update_site;

pub(crate) mod shape_update_site_address;

pub(crate) mod shape_update_site_rack_physical_properties;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_order_input;

pub(crate) mod shape_create_outpost_input;

pub(crate) mod shape_create_site_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_connection_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_outpost_input;

pub(crate) mod shape_update_site_address_input;

pub(crate) mod shape_update_site_input;

pub(crate) mod shape_update_site_rack_physical_properties_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_address;

pub(crate) mod shape_asset_list_definition;

pub(crate) mod shape_catalog_item;

pub(crate) mod shape_catalog_item_list_definition;

pub(crate) mod shape_connection_details;

pub(crate) mod shape_instance_type_list_definition;

pub(crate) mod shape_line_item_request;

pub(crate) mod shape_order;

pub(crate) mod shape_order_summary_list_definition;

pub(crate) mod shape_outpost;

pub(crate) mod shape_outpost_list_definition;

pub(crate) mod shape_rack_physical_properties;

pub(crate) mod shape_site;

pub(crate) mod shape_site_list_definition;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_asset_info;

pub(crate) mod shape_cidr_list;

pub(crate) mod shape_ec2_capacity_list_definition;

pub(crate) mod shape_instance_type_item;

pub(crate) mod shape_line_item_list_definition;

pub(crate) mod shape_order_summary;

pub(crate) mod shape_supported_storage_list;

pub(crate) mod shape_supported_uplink_gbps_list_definition;

pub(crate) mod shape_asset_location;

pub(crate) mod shape_compute_attributes;

pub(crate) mod shape_ec2_capacity;

pub(crate) mod shape_line_item;

pub(crate) mod shape_line_item_status_counts;

pub(crate) mod shape_line_item_asset_information_list;

pub(crate) mod shape_shipment_information;

pub(crate) mod shape_line_item_asset_information;

pub(crate) mod shape_mac_address_list;
