// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateSiteInput {
    /// <p> The ID or the Amazon Resource Name (ARN) of the site. </p>
    #[doc(hidden)]
    pub site_id: std::option::Option<std::string::String>,
    /// <p>The name of the site.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The description of the site.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>Notes about a site.</p>
    #[doc(hidden)]
    pub notes: std::option::Option<std::string::String>,
}
impl UpdateSiteInput {
    /// <p> The ID or the Amazon Resource Name (ARN) of the site. </p>
    pub fn site_id(&self) -> std::option::Option<&str> {
        self.site_id.as_deref()
    }
    /// <p>The name of the site.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The description of the site.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>Notes about a site.</p>
    pub fn notes(&self) -> std::option::Option<&str> {
        self.notes.as_deref()
    }
}
impl UpdateSiteInput {
    /// Creates a new builder-style object to manufacture [`UpdateSiteInput`](crate::operation::update_site::UpdateSiteInput).
    pub fn builder() -> crate::operation::update_site::builders::UpdateSiteInputBuilder {
        crate::operation::update_site::builders::UpdateSiteInputBuilder::default()
    }
}

/// A builder for [`UpdateSiteInput`](crate::operation::update_site::UpdateSiteInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateSiteInputBuilder {
    pub(crate) site_id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) notes: std::option::Option<std::string::String>,
}
impl UpdateSiteInputBuilder {
    /// <p> The ID or the Amazon Resource Name (ARN) of the site. </p>
    pub fn site_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.site_id = Some(input.into());
        self
    }
    /// <p> The ID or the Amazon Resource Name (ARN) of the site. </p>
    pub fn set_site_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.site_id = input;
        self
    }
    /// <p>The name of the site.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the site.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The description of the site.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the site.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>Notes about a site.</p>
    pub fn notes(mut self, input: impl Into<std::string::String>) -> Self {
        self.notes = Some(input.into());
        self
    }
    /// <p>Notes about a site.</p>
    pub fn set_notes(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.notes = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateSiteInput`](crate::operation::update_site::UpdateSiteInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_site::UpdateSiteInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::update_site::UpdateSiteInput {
            site_id: self.site_id,
            name: self.name,
            description: self.description,
            notes: self.notes,
        })
    }
}
