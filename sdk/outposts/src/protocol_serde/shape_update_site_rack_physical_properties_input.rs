// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_site_rack_physical_properties_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_site_rack_physical_properties::UpdateSiteRackPhysicalPropertiesInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.fiber_optic_cable_type {
        object.key("FiberOpticCableType").string(var_1.as_str());
    }
    if let Some(var_2) = &input.maximum_supported_weight_lbs {
        object.key("MaximumSupportedWeightLbs").string(var_2.as_str());
    }
    if let Some(var_3) = &input.optical_standard {
        object.key("OpticalStandard").string(var_3.as_str());
    }
    if let Some(var_4) = &input.power_connector {
        object.key("PowerConnector").string(var_4.as_str());
    }
    if let Some(var_5) = &input.power_draw_kva {
        object.key("PowerDrawKva").string(var_5.as_str());
    }
    if let Some(var_6) = &input.power_feed_drop {
        object.key("PowerFeedDrop").string(var_6.as_str());
    }
    if let Some(var_7) = &input.power_phase {
        object.key("PowerPhase").string(var_7.as_str());
    }
    if let Some(var_8) = &input.uplink_count {
        object.key("UplinkCount").string(var_8.as_str());
    }
    if let Some(var_9) = &input.uplink_gbps {
        object.key("UplinkGbps").string(var_9.as_str());
    }
    Ok(())
}
