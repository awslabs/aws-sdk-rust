// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTransactions`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`address(impl Into<String>)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::address) / [`set_address(Option<String>)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::set_address):<br>required: **true**<br><p>The address (either a contract or wallet), whose transactions are being requested.</p><br>
    ///   - [`network(QueryNetwork)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::network) / [`set_network(Option<QueryNetwork>)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::set_network):<br>required: **true**<br><p>The blockchain network where the transactions occurred.</p><br>
    ///   - [`from_blockchain_instant(BlockchainInstant)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::from_blockchain_instant) / [`set_from_blockchain_instant(Option<BlockchainInstant>)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::set_from_blockchain_instant):<br>required: **false**<br><p>The container for time.</p><br>
    ///   - [`to_blockchain_instant(BlockchainInstant)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::to_blockchain_instant) / [`set_to_blockchain_instant(Option<BlockchainInstant>)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::set_to_blockchain_instant):<br>required: **false**<br><p>The container for time.</p><br>
    ///   - [`sort(ListTransactionsSort)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::sort) / [`set_sort(Option<ListTransactionsSort>)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::set_sort):<br>required: **false**<br><p>Sorts items in an ascending order if the first page starts at <code>fromTime</code>. Sorts items in a descending order if the first page starts at <code>toTime</code>.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token that indicates the next set of results to retrieve.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of transactions to list.</p> <note>   <p>Even if additional results can be retrieved, the request can return less results than <code>maxResults</code> or an empty array of results.</p>   <p>To retrieve the next set of results, make another request with the returned <code>nextToken</code> value. The value of <code>nextToken</code> is <code>null</code> when there are no more results to return</p>  </note><br>
    /// - On success, responds with [`ListTransactionsOutput`](crate::operation::list_transactions::ListTransactionsOutput) with field(s):
    ///   - [`transactions(Vec::<TransactionOutputItem>)`](crate::operation::list_transactions::ListTransactionsOutput::transactions): <p>The array of transactions returned by the request.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_transactions::ListTransactionsOutput::next_token): <p>The pagination token that indicates the next set of results to retrieve.</p>
    /// - On failure, responds with [`SdkError<ListTransactionsError>`](crate::operation::list_transactions::ListTransactionsError)
    pub fn list_transactions(&self) -> crate::operation::list_transactions::builders::ListTransactionsFluentBuilder {
        crate::operation::list_transactions::builders::ListTransactionsFluentBuilder::new(self.handle.clone())
    }
}
