// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetTransactionInput {
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    pub transaction_hash: ::std::option::Option<::std::string::String>,
    /// <p>The blockchain network where the transaction occurred.</p>
    pub network: ::std::option::Option<crate::types::QueryNetwork>,
}
impl GetTransactionInput {
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    pub fn transaction_hash(&self) -> ::std::option::Option<&str> {
        self.transaction_hash.as_deref()
    }
    /// <p>The blockchain network where the transaction occurred.</p>
    pub fn network(&self) -> ::std::option::Option<&crate::types::QueryNetwork> {
        self.network.as_ref()
    }
}
impl GetTransactionInput {
    /// Creates a new builder-style object to manufacture [`GetTransactionInput`](crate::operation::get_transaction::GetTransactionInput).
    pub fn builder() -> crate::operation::get_transaction::builders::GetTransactionInputBuilder {
        crate::operation::get_transaction::builders::GetTransactionInputBuilder::default()
    }
}

/// A builder for [`GetTransactionInput`](crate::operation::get_transaction::GetTransactionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetTransactionInputBuilder {
    pub(crate) transaction_hash: ::std::option::Option<::std::string::String>,
    pub(crate) network: ::std::option::Option<crate::types::QueryNetwork>,
}
impl GetTransactionInputBuilder {
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    /// This field is required.
    pub fn transaction_hash(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.transaction_hash = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    pub fn set_transaction_hash(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.transaction_hash = input;
        self
    }
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    pub fn get_transaction_hash(&self) -> &::std::option::Option<::std::string::String> {
        &self.transaction_hash
    }
    /// <p>The blockchain network where the transaction occurred.</p>
    /// This field is required.
    pub fn network(mut self, input: crate::types::QueryNetwork) -> Self {
        self.network = ::std::option::Option::Some(input);
        self
    }
    /// <p>The blockchain network where the transaction occurred.</p>
    pub fn set_network(mut self, input: ::std::option::Option<crate::types::QueryNetwork>) -> Self {
        self.network = input;
        self
    }
    /// <p>The blockchain network where the transaction occurred.</p>
    pub fn get_network(&self) -> &::std::option::Option<crate::types::QueryNetwork> {
        &self.network
    }
    /// Consumes the builder and constructs a [`GetTransactionInput`](crate::operation::get_transaction::GetTransactionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_transaction::GetTransactionInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_transaction::GetTransactionInput {
            transaction_hash: self.transaction_hash,
            network: self.network,
        })
    }
}
