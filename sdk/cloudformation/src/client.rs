// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for AWS CloudFormation
///
/// Client for invoking operations on AWS CloudFormation. Each operation on AWS CloudFormation is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_cloudformation::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_cloudformation::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_cloudformation::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`ActivateType`](crate::client::fluent_builders::ActivateType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(ThirdPartyType)`](crate::client::fluent_builders::ActivateType::type) / [`set_type(Option<ThirdPartyType>)`](crate::client::fluent_builders::ActivateType::set_type): <p>The extension type.</p>  <p>Conditional: You must specify <code>PublicTypeArn</code>, or <code>TypeName</code>, <code>Type</code>, and <code>PublisherId</code>.</p>
    ///   - [`public_type_arn(impl Into<String>)`](crate::client::fluent_builders::ActivateType::public_type_arn) / [`set_public_type_arn(Option<String>)`](crate::client::fluent_builders::ActivateType::set_public_type_arn): <p>The Amazon Resource Name (ARN) of the public extension.</p>  <p>Conditional: You must specify <code>PublicTypeArn</code>, or <code>TypeName</code>, <code>Type</code>, and <code>PublisherId</code>.</p>
    ///   - [`publisher_id(impl Into<String>)`](crate::client::fluent_builders::ActivateType::publisher_id) / [`set_publisher_id(Option<String>)`](crate::client::fluent_builders::ActivateType::set_publisher_id): <p>The ID of the extension publisher.</p>  <p>Conditional: You must specify <code>PublicTypeArn</code>, or <code>TypeName</code>, <code>Type</code>, and <code>PublisherId</code>.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::ActivateType::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::ActivateType::set_type_name): <p>The name of the extension.</p>  <p>Conditional: You must specify <code>PublicTypeArn</code>, or <code>TypeName</code>, <code>Type</code>, and <code>PublisherId</code>.</p>
    ///   - [`type_name_alias(impl Into<String>)`](crate::client::fluent_builders::ActivateType::type_name_alias) / [`set_type_name_alias(Option<String>)`](crate::client::fluent_builders::ActivateType::set_type_name_alias): <p>An alias to assign to the public extension, in this account and region. If you specify an alias for the extension, CloudFormation treats the alias as the extension type name within this account and region. You must use the alias to refer to the extension in your templates, API calls, and CloudFormation console.</p>  <p>An extension alias must be unique within a given account and region. You can activate the same public resource multiple times in the same account and region, using different type name aliases.</p>
    ///   - [`auto_update(bool)`](crate::client::fluent_builders::ActivateType::auto_update) / [`set_auto_update(Option<bool>)`](crate::client::fluent_builders::ActivateType::set_auto_update): <p>Whether to automatically update the extension in this account and region when a new <i>minor</i> version is published by the extension publisher. Major versions released by the publisher must be manually updated.</p>  <p>The default is <code>true</code>.</p>
    ///   - [`logging_config(LoggingConfig)`](crate::client::fluent_builders::ActivateType::logging_config) / [`set_logging_config(Option<LoggingConfig>)`](crate::client::fluent_builders::ActivateType::set_logging_config): <p>Contains logging configuration information for an extension.</p>
    ///   - [`execution_role_arn(impl Into<String>)`](crate::client::fluent_builders::ActivateType::execution_role_arn) / [`set_execution_role_arn(Option<String>)`](crate::client::fluent_builders::ActivateType::set_execution_role_arn): <p>The name of the IAM execution role to use to activate the extension.</p>
    ///   - [`version_bump(VersionBump)`](crate::client::fluent_builders::ActivateType::version_bump) / [`set_version_bump(Option<VersionBump>)`](crate::client::fluent_builders::ActivateType::set_version_bump): <p>Manually updates a previously-activated type to a new major or minor version, if available. You can also use this parameter to update the value of <code>AutoUpdate</code>.</p>  <ul>   <li> <p> <code>MAJOR</code>: CloudFormation updates the extension to the newest major version, if one is available.</p> </li>   <li> <p> <code>MINOR</code>: CloudFormation updates the extension to the newest minor version, if one is available.</p> </li>  </ul>
    ///   - [`major_version(i64)`](crate::client::fluent_builders::ActivateType::major_version) / [`set_major_version(Option<i64>)`](crate::client::fluent_builders::ActivateType::set_major_version): <p>The major version of this extension you want to activate, if multiple major versions are available. The default is the latest major version. CloudFormation uses the latest available <i>minor</i> version of the major version selected.</p>  <p>You can specify <code>MajorVersion</code> or <code>VersionBump</code>, but not both.</p>
    /// - On success, responds with [`ActivateTypeOutput`](crate::output::ActivateTypeOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::ActivateTypeOutput::arn): <p>The Amazon Resource Name (ARN) of the activated extension, in this account and region.</p>
    /// - On failure, responds with [`SdkError<ActivateTypeError>`](crate::error::ActivateTypeError)
    pub fn activate_type(&self) -> crate::client::fluent_builders::ActivateType {
        crate::client::fluent_builders::ActivateType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BatchDescribeTypeConfigurations`](crate::client::fluent_builders::BatchDescribeTypeConfigurations) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`type_configuration_identifiers(Vec<TypeConfigurationIdentifier>)`](crate::client::fluent_builders::BatchDescribeTypeConfigurations::type_configuration_identifiers) / [`set_type_configuration_identifiers(Option<Vec<TypeConfigurationIdentifier>>)`](crate::client::fluent_builders::BatchDescribeTypeConfigurations::set_type_configuration_identifiers): <p>The list of identifiers for the desired extension configurations.</p>
    /// - On success, responds with [`BatchDescribeTypeConfigurationsOutput`](crate::output::BatchDescribeTypeConfigurationsOutput) with field(s):
    ///   - [`errors(Option<Vec<BatchDescribeTypeConfigurationsError>>)`](crate::output::BatchDescribeTypeConfigurationsOutput::errors): <p>A list of information concerning any errors generated during the setting of the specified configurations.</p>
    ///   - [`unprocessed_type_configurations(Option<Vec<TypeConfigurationIdentifier>>)`](crate::output::BatchDescribeTypeConfigurationsOutput::unprocessed_type_configurations): <p>A list of any of the specified extension configurations that CloudFormation could not process for any reason.</p>
    ///   - [`type_configurations(Option<Vec<TypeConfigurationDetails>>)`](crate::output::BatchDescribeTypeConfigurationsOutput::type_configurations): <p>A list of any of the specified extension configurations from the CloudFormation registry.</p>
    /// - On failure, responds with [`SdkError<BatchDescribeTypeConfigurationsError>`](crate::error::BatchDescribeTypeConfigurationsError)
    pub fn batch_describe_type_configurations(
        &self,
    ) -> crate::client::fluent_builders::BatchDescribeTypeConfigurations {
        crate::client::fluent_builders::BatchDescribeTypeConfigurations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CancelUpdateStack`](crate::client::fluent_builders::CancelUpdateStack) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::CancelUpdateStack::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::CancelUpdateStack::set_stack_name): <p>The name or the unique stack ID that's associated with the stack.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::CancelUpdateStack::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::CancelUpdateStack::set_client_request_token): <p>A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that CloudFormation successfully received them.</p>
    /// - On success, responds with [`CancelUpdateStackOutput`](crate::output::CancelUpdateStackOutput)

    /// - On failure, responds with [`SdkError<CancelUpdateStackError>`](crate::error::CancelUpdateStackError)
    pub fn cancel_update_stack(&self) -> crate::client::fluent_builders::CancelUpdateStack {
        crate::client::fluent_builders::CancelUpdateStack::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ContinueUpdateRollback`](crate::client::fluent_builders::ContinueUpdateRollback) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::ContinueUpdateRollback::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::ContinueUpdateRollback::set_stack_name): <p>The name or the unique ID of the stack that you want to continue rolling back.</p> <note>   <p>Don't specify the name of a nested stack (a stack that was created by using the <code>AWS::CloudFormation::Stack</code> resource). Instead, use this operation on the parent stack (the stack that contains the <code>AWS::CloudFormation::Stack</code> resource).</p>  </note>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::ContinueUpdateRollback::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::ContinueUpdateRollback::set_role_arn): <p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes to roll back the stack. CloudFormation uses the role's credentials to make calls on your behalf. CloudFormation always uses this role for all future operations on the stack. Provided that users have permission to operate on the stack, CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least permission.</p>  <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that's generated from your user credentials.</p>
    ///   - [`resources_to_skip(Vec<String>)`](crate::client::fluent_builders::ContinueUpdateRollback::resources_to_skip) / [`set_resources_to_skip(Option<Vec<String>>)`](crate::client::fluent_builders::ContinueUpdateRollback::set_resources_to_skip): <p>A list of the logical IDs of the resources that CloudFormation skips during the continue update rollback operation. You can specify only resources that are in the <code>UPDATE_FAILED</code> state because a rollback failed. You can't specify resources that are in the <code>UPDATE_FAILED</code> state for other reasons, for example, because an update was canceled. To check why a resource update failed, use the <code>DescribeStackResources</code> action, and view the resource status reason.</p> <important>   <p>Specify this property to skip rolling back resources that CloudFormation can't successfully roll back. We recommend that you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html#troubleshooting-errors-update-rollback-failed"> troubleshoot</a> resources before skipping them. CloudFormation sets the status of the specified resources to <code>UPDATE_COMPLETE</code> and continues to roll back the stack. After the rollback is complete, the state of the skipped resources will be inconsistent with the state of the resources in the stack template. Before performing another stack update, you must update the stack or resources to be consistent with each other. If you don't, subsequent stack updates might fail, and the stack will become unrecoverable.</p>  </important>  <p>Specify the minimum number of resources required to successfully roll back your stack. For example, a failed resource update might cause dependent resources to fail. In this case, it might not be necessary to skip the dependent resources.</p>  <p>To skip resources that are part of nested stacks, use the following format: <code>NestedStackName.ResourceLogicalID</code>. If you want to specify the logical ID of a stack resource (<code>Type: AWS::CloudFormation::Stack</code>) in the <code>ResourcesToSkip</code> list, then its corresponding embedded stack must be in one of the following states: <code>DELETE_IN_PROGRESS</code>, <code>DELETE_COMPLETE</code>, or <code>DELETE_FAILED</code>.</p> <note>   <p>Don't confuse a child stack's name with its corresponding logical ID defined in the parent stack. For an example of a continue update rollback operation with nested stacks, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-continueupdaterollback.html#nested-stacks">Using ResourcesToSkip to recover a nested stacks hierarchy</a>.</p>  </note>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::ContinueUpdateRollback::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::ContinueUpdateRollback::set_client_request_token): <p>A unique identifier for this <code>ContinueUpdateRollback</code> request. Specify this token if you plan to retry requests so that CloudFormationknows that you're not attempting to continue the rollback to a stack with the same name. You might retry <code>ContinueUpdateRollback</code> requests to ensure that CloudFormation successfully received them.</p>
    /// - On success, responds with [`ContinueUpdateRollbackOutput`](crate::output::ContinueUpdateRollbackOutput)

    /// - On failure, responds with [`SdkError<ContinueUpdateRollbackError>`](crate::error::ContinueUpdateRollbackError)
    pub fn continue_update_rollback(
        &self,
    ) -> crate::client::fluent_builders::ContinueUpdateRollback {
        crate::client::fluent_builders::ContinueUpdateRollback::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateChangeSet`](crate::client::fluent_builders::CreateChangeSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::CreateChangeSet::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::CreateChangeSet::set_stack_name): <p>The name or the unique ID of the stack for which you are creating a change set. CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.</p>
    ///   - [`template_body(impl Into<String>)`](crate::client::fluent_builders::CreateChangeSet::template_body) / [`set_template_body(Option<String>)`](crate::client::fluent_builders::CreateChangeSet::set_template_body): <p>A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. CloudFormation generates the change set by comparing this template with the template of the stack that you specified.</p>  <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
    ///   - [`template_url(impl Into<String>)`](crate::client::fluent_builders::CreateChangeSet::template_url) / [`set_template_url(Option<String>)`](crate::client::fluent_builders::CreateChangeSet::set_template_url): <p>The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket or a Systems Manager document. CloudFormation generates the change set by comparing this template with the stack that you specified.</p>  <p>Conditional: You must specify only <code>TemplateBody</code> or <code>TemplateURL</code>.</p>
    ///   - [`use_previous_template(bool)`](crate::client::fluent_builders::CreateChangeSet::use_previous_template) / [`set_use_previous_template(Option<bool>)`](crate::client::fluent_builders::CreateChangeSet::set_use_previous_template): <p>Whether to reuse the template that's associated with the stack to create the change set.</p>
    ///   - [`parameters(Vec<Parameter>)`](crate::client::fluent_builders::CreateChangeSet::parameters) / [`set_parameters(Option<Vec<Parameter>>)`](crate::client::fluent_builders::CreateChangeSet::set_parameters): <p>A list of <code>Parameter</code> structures that specify input parameters for the change set. For more information, see the <code>Parameter</code> data type.</p>
    ///   - [`capabilities(Vec<Capability>)`](crate::client::fluent_builders::CreateChangeSet::capabilities) / [`set_capabilities(Option<Vec<Capability>>)`](crate::client::fluent_builders::CreateChangeSet::set_capabilities): <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to create the stack.</p>  <ul>   <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p>    <ul>     <li> <p>If you have IAM resources, you can specify either capability.</p> </li>     <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li>     <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li>    </ul> <p>If your stack template contains these resources, we suggest that you review all permissions associated with them and edit their permissions if necessary.</p>    <ul>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">AWS::IAM::UserToGroupAddition</a> </p> </li>    </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM resources in CloudFormation templates</a>.</p> </li>   <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.</p> <note>     <p>This capacity doesn't apply to creating change sets, and specifying it when creating change sets has no effect.</p>     <p>If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create or update the stack directly from the template using the <code>CreateStack</code> or <code>UpdateStack</code> action, and specifying this capability.</p>    </note> <p>For more information about macros, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using CloudFormation macros to perform custom processing on templates</a>.</p> </li>  </ul>
    ///   - [`resource_types(Vec<String>)`](crate::client::fluent_builders::CreateChangeSet::resource_types) / [`set_resource_types(Option<Vec<String>>)`](crate::client::fluent_builders::CreateChangeSet::set_resource_types): <p>The template resource types that you have permissions to work with if you execute this change set, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p>  <p>If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, CloudFormation grants permissions to all resource types. Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for CloudFormation. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling access with Identity and Access Management</a> in the CloudFormation User Guide.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateChangeSet::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::CreateChangeSet::set_role_arn): <p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes when executing the change set. CloudFormation uses the role's credentials to make calls on your behalf. CloudFormation uses this role for all future operations on the stack. Provided that users have permission to operate on the stack, CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least permission.</p>  <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that is generated from your user credentials.</p>
    ///   - [`rollback_configuration(RollbackConfiguration)`](crate::client::fluent_builders::CreateChangeSet::rollback_configuration) / [`set_rollback_configuration(Option<RollbackConfiguration>)`](crate::client::fluent_builders::CreateChangeSet::set_rollback_configuration): <p>The rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p>
    ///   - [`notification_ar_ns(Vec<String>)`](crate::client::fluent_builders::CreateChangeSet::notification_ar_ns) / [`set_notification_ar_ns(Option<Vec<String>>)`](crate::client::fluent_builders::CreateChangeSet::set_notification_ar_ns): <p>The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateChangeSet::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateChangeSet::set_tags): <p>Key-value pairs to associate with this stack. CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.</p>
    ///   - [`change_set_name(impl Into<String>)`](crate::client::fluent_builders::CreateChangeSet::change_set_name) / [`set_change_set_name(Option<String>)`](crate::client::fluent_builders::CreateChangeSet::set_change_set_name): <p>The name of the change set. The name must be unique among all change sets that are associated with the specified stack.</p>  <p>A change set name can contain only alphanumeric, case sensitive characters, and hyphens. It must start with an alphabetical character and can't exceed 128 characters.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateChangeSet::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateChangeSet::set_client_token): <p>A unique identifier for this <code>CreateChangeSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to create another change set with the same name. You might retry <code>CreateChangeSet</code> requests to ensure that CloudFormation successfully received them.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateChangeSet::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateChangeSet::set_description): <p>A description to help you identify this change set.</p>
    ///   - [`change_set_type(ChangeSetType)`](crate::client::fluent_builders::CreateChangeSet::change_set_type) / [`set_change_set_type(Option<ChangeSetType>)`](crate::client::fluent_builders::CreateChangeSet::set_change_set_type): <p>The type of change set operation. To create a change set for a new stack, specify <code>CREATE</code>. To create a change set for an existing stack, specify <code>UPDATE</code>. To create a change set for an import operation, specify <code>IMPORT</code>.</p>  <p>If you create a change set for a new stack, CloudFormation creates a stack with a unique stack ID, but no template or resources. The stack will be in the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995"> <code>REVIEW_IN_PROGRESS</code> </a> state until you execute the change set.</p>  <p>By default, CloudFormation specifies <code>UPDATE</code>. You can't use the <code>UPDATE</code> type to create a change set for a new stack or the <code>CREATE</code> type to create a change set for an existing stack.</p>
    ///   - [`resources_to_import(Vec<ResourceToImport>)`](crate::client::fluent_builders::CreateChangeSet::resources_to_import) / [`set_resources_to_import(Option<Vec<ResourceToImport>>)`](crate::client::fluent_builders::CreateChangeSet::set_resources_to_import): <p>The resources to import into your stack.</p>
    ///   - [`include_nested_stacks(bool)`](crate::client::fluent_builders::CreateChangeSet::include_nested_stacks) / [`set_include_nested_stacks(Option<bool>)`](crate::client::fluent_builders::CreateChangeSet::set_include_nested_stacks): <p>Creates a change set for the all nested stacks specified in the template. The default behavior of this action is set to <code>False</code>. To include nested sets in a change set, specify <code>True</code>.</p>
    /// - On success, responds with [`CreateChangeSetOutput`](crate::output::CreateChangeSetOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::CreateChangeSetOutput::id): <p>The Amazon Resource Name (ARN) of the change set.</p>
    ///   - [`stack_id(Option<String>)`](crate::output::CreateChangeSetOutput::stack_id): <p>The unique ID of the stack.</p>
    /// - On failure, responds with [`SdkError<CreateChangeSetError>`](crate::error::CreateChangeSetError)
    pub fn create_change_set(&self) -> crate::client::fluent_builders::CreateChangeSet {
        crate::client::fluent_builders::CreateChangeSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateStack`](crate::client::fluent_builders::CreateStack) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::CreateStack::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::CreateStack::set_stack_name): <p>The name that's associated with the stack. The name must be unique in the Region in which you are creating the stack.</p> <note>   <p>A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetical character and can't be longer than 128 characters.</p>  </note>
    ///   - [`template_body(impl Into<String>)`](crate::client::fluent_builders::CreateStack::template_body) / [`set_template_body(Option<String>)`](crate::client::fluent_builders::CreateStack::set_template_body): <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
    ///   - [`template_url(impl Into<String>)`](crate::client::fluent_builders::CreateStack::template_url) / [`set_template_url(Option<String>)`](crate::client::fluent_builders::CreateStack::set_template_url): <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket or a Systems Manager document. For more information, go to the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must specify either the <code>TemplateBody</code> or the <code>TemplateURL</code> parameter, but not both.</p>
    ///   - [`parameters(Vec<Parameter>)`](crate::client::fluent_builders::CreateStack::parameters) / [`set_parameters(Option<Vec<Parameter>>)`](crate::client::fluent_builders::CreateStack::set_parameters): <p>A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.</p>
    ///   - [`disable_rollback(bool)`](crate::client::fluent_builders::CreateStack::disable_rollback) / [`set_disable_rollback(Option<bool>)`](crate::client::fluent_builders::CreateStack::set_disable_rollback): <p>Set to <code>true</code> to disable rollback of the stack if stack creation failed. You can specify either <code>DisableRollback</code> or <code>OnFailure</code>, but not both.</p>  <p>Default: <code>false</code> </p>
    ///   - [`rollback_configuration(RollbackConfiguration)`](crate::client::fluent_builders::CreateStack::rollback_configuration) / [`set_rollback_configuration(Option<RollbackConfiguration>)`](crate::client::fluent_builders::CreateStack::set_rollback_configuration): <p>The rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p>
    ///   - [`timeout_in_minutes(i32)`](crate::client::fluent_builders::CreateStack::timeout_in_minutes) / [`set_timeout_in_minutes(Option<i32>)`](crate::client::fluent_builders::CreateStack::set_timeout_in_minutes): <p>The amount of time that can pass before the stack status becomes CREATE_FAILED; if <code>DisableRollback</code> is not set or is set to <code>false</code>, the stack will be rolled back.</p>
    ///   - [`notification_ar_ns(Vec<String>)`](crate::client::fluent_builders::CreateStack::notification_ar_ns) / [`set_notification_ar_ns(Option<Vec<String>>)`](crate::client::fluent_builders::CreateStack::set_notification_ar_ns): <p>The Amazon Simple Notification Service (Amazon SNS) topic ARNs to publish stack related events. You can find your Amazon SNS topic ARNs using the Amazon SNS console or your Command Line Interface (CLI).</p>
    ///   - [`capabilities(Vec<Capability>)`](crate::client::fluent_builders::CreateStack::capabilities) / [`set_capabilities(Option<Vec<Capability>>)`](crate::client::fluent_builders::CreateStack::set_capabilities): <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to create the stack.</p>  <ul>   <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p>    <ul>     <li> <p>If you have IAM resources, you can specify either capability.</p> </li>     <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li>     <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li>    </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p>    <ul>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">AWS::IAM::UserToGroupAddition</a> </p> </li>    </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p> </li>   <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.</p> <p>If you want to create a stack from a stack template that contains macros <i>and</i> nested stacks, you must create the stack directly from the template using this capability.</p> <important>     <p>You should only create stacks directly from a stack template that contains macros if you know what processing the macro performs.</p>     <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without CloudFormation being notified.</p>    </important> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using CloudFormation macros to perform custom processing on templates</a>.</p> </li>  </ul>
    ///   - [`resource_types(Vec<String>)`](crate::client::fluent_builders::CreateStack::resource_types) / [`set_resource_types(Option<Vec<String>>)`](crate::client::fluent_builders::CreateStack::set_resource_types): <p>The template resource types that you have permissions to work with for this create stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>. Use the following syntax to describe template resource types: <code>AWS::*</code> (for all Amazon Web Services resources), <code>Custom::*</code> (for all custom resources), <code>Custom::<i>logical_ID</i> </code> (for a specific custom resource), <code>AWS::<i>service_name</i>::*</code> (for all resources of a particular Amazon Web Services service), and <code>AWS::<i>service_name</i>::<i>resource_logical_ID</i> </code> (for a specific Amazon Web Services resource).</p>  <p>If the list of resource types doesn't include a resource that you're creating, the stack creation fails. By default, CloudFormation grants permissions to all resource types. Identity and Access Management (IAM) uses this parameter for CloudFormation-specific condition keys in IAM policies. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with Identity and Access Management</a>.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateStack::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::CreateStack::set_role_arn): <p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes to create the stack. CloudFormation uses the role's credentials to make calls on your behalf. CloudFormation always uses this role for all future operations on the stack. Provided that users have permission to operate on the stack, CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p>  <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that's generated from your user credentials.</p>
    ///   - [`on_failure(OnFailure)`](crate::client::fluent_builders::CreateStack::on_failure) / [`set_on_failure(Option<OnFailure>)`](crate::client::fluent_builders::CreateStack::set_on_failure): <p>Determines what action will be taken if stack creation fails. This must be one of: <code>DO_NOTHING</code>, <code>ROLLBACK</code>, or <code>DELETE</code>. You can specify either <code>OnFailure</code> or <code>DisableRollback</code>, but not both.</p>  <p>Default: <code>ROLLBACK</code> </p>
    ///   - [`stack_policy_body(impl Into<String>)`](crate::client::fluent_builders::CreateStack::stack_policy_body) / [`set_stack_policy_body(Option<String>)`](crate::client::fluent_builders::CreateStack::set_stack_policy_body): <p>Structure containing the stack policy body. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the <i>CloudFormation User Guide</i>. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p>
    ///   - [`stack_policy_url(impl Into<String>)`](crate::client::fluent_builders::CreateStack::stack_policy_url) / [`set_stack_policy_url(Option<String>)`](crate::client::fluent_builders::CreateStack::set_stack_policy_url): <p>Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateStack::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateStack::set_tags): <p>Key-value pairs to associate with this stack. CloudFormation also propagates these tags to the resources created in the stack. A maximum number of 50 tags can be specified.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::CreateStack::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::CreateStack::set_client_request_token): <p>A unique identifier for this <code>CreateStack</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to create a stack with the same name. You might retry <code>CreateStack</code> requests to ensure that CloudFormation successfully received them.</p>  <p>All events initiated by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p>  <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.</p>
    ///   - [`enable_termination_protection(bool)`](crate::client::fluent_builders::CreateStack::enable_termination_protection) / [`set_enable_termination_protection(Option<bool>)`](crate::client::fluent_builders::CreateStack::set_enable_termination_protection): <p>Whether to enable termination protection on the specified stack. If a user attempts to delete a stack with termination protection enabled, the operation fails and the stack remains unchanged. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html">Protecting a Stack From Being Deleted</a> in the <i>CloudFormation User Guide</i>. Termination protection is deactivated on stacks by default.</p>  <p>For <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html">nested stacks</a>, termination protection is set on the root stack and can't be changed directly on the nested stack.</p>
    /// - On success, responds with [`CreateStackOutput`](crate::output::CreateStackOutput) with field(s):
    ///   - [`stack_id(Option<String>)`](crate::output::CreateStackOutput::stack_id): <p>Unique identifier of the stack.</p>
    /// - On failure, responds with [`SdkError<CreateStackError>`](crate::error::CreateStackError)
    pub fn create_stack(&self) -> crate::client::fluent_builders::CreateStack {
        crate::client::fluent_builders::CreateStack::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateStackInstances`](crate::client::fluent_builders::CreateStackInstances) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::CreateStackInstances::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::CreateStackInstances::set_stack_set_name): <p>The name or unique ID of the stack set that you want to create stack instances from.</p>
    ///   - [`accounts(Vec<String>)`](crate::client::fluent_builders::CreateStackInstances::accounts) / [`set_accounts(Option<Vec<String>>)`](crate::client::fluent_builders::CreateStackInstances::set_accounts): <p>[Self-managed permissions] The names of one or more Amazon Web Services accounts that you want to create stack instances in the specified Region(s) for.</p>  <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    ///   - [`deployment_targets(DeploymentTargets)`](crate::client::fluent_builders::CreateStackInstances::deployment_targets) / [`set_deployment_targets(Option<DeploymentTargets>)`](crate::client::fluent_builders::CreateStackInstances::set_deployment_targets): <p>[Service-managed permissions] The Organizations accounts for which to create stack instances in the specified Amazon Web Services Regions.</p>  <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    ///   - [`regions(Vec<String>)`](crate::client::fluent_builders::CreateStackInstances::regions) / [`set_regions(Option<Vec<String>>)`](crate::client::fluent_builders::CreateStackInstances::set_regions): <p>The names of one or more Amazon Web Services Regions where you want to create stack instances using the specified Amazon Web Services accounts.</p>
    ///   - [`parameter_overrides(Vec<Parameter>)`](crate::client::fluent_builders::CreateStackInstances::parameter_overrides) / [`set_parameter_overrides(Option<Vec<Parameter>>)`](crate::client::fluent_builders::CreateStackInstances::set_parameter_overrides): <p>A list of stack set parameters whose values you want to override in the selected stack instances.</p>  <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and Amazon Web Services Regions. When specifying parameters and their values, be aware of how CloudFormation sets parameter values during stack instance operations:</p>  <ul>   <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li>   <li> <p>To leave an overridden parameter set to its present value, include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You can't specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li>   <li> <p>To set an overridden parameter back to the value specified in the stack set, specify a parameter list but don't include the parameter in the list.</p> </li>   <li> <p>To leave all parameters set to their present values, don't specify this property at all.</p> </li>  </ul>  <p>During stack set updates, any parameter values overridden for a stack instance aren't updated, but retain their overridden value.</p>  <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update the stack set template.</p>
    ///   - [`operation_preferences(StackSetOperationPreferences)`](crate::client::fluent_builders::CreateStackInstances::operation_preferences) / [`set_operation_preferences(Option<StackSetOperationPreferences>)`](crate::client::fluent_builders::CreateStackInstances::set_operation_preferences): <p>Preferences for how CloudFormation performs this stack set operation.</p>
    ///   - [`operation_id(impl Into<String>)`](crate::client::fluent_builders::CreateStackInstances::operation_id) / [`set_operation_id(Option<String>)`](crate::client::fluent_builders::CreateStackInstances::set_operation_id): <p>The unique identifier for this stack set operation.</p>  <p>The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that CloudFormation successfully received them.</p>  <p>If you don't specify an operation ID, the SDK generates one automatically.</p>  <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::CreateStackInstances::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::CreateStackInstances::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`CreateStackInstancesOutput`](crate::output::CreateStackInstancesOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::output::CreateStackInstancesOutput::operation_id): <p>The unique identifier for this stack set operation.</p>
    /// - On failure, responds with [`SdkError<CreateStackInstancesError>`](crate::error::CreateStackInstancesError)
    pub fn create_stack_instances(&self) -> crate::client::fluent_builders::CreateStackInstances {
        crate::client::fluent_builders::CreateStackInstances::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateStackSet`](crate::client::fluent_builders::CreateStackSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::CreateStackSet::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::CreateStackSet::set_stack_set_name): <p>The name to associate with the stack set. The name must be unique in the Region where you create your stack set.</p> <note>   <p>A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 128 characters.</p>  </note>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateStackSet::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateStackSet::set_description): <p>A description of the stack set. You can use the description to identify the stack set's purpose or other important information.</p>
    ///   - [`template_body(impl Into<String>)`](crate::client::fluent_builders::CreateStackSet::template_body) / [`set_template_body(Option<String>)`](crate::client::fluent_builders::CreateStackSet::set_template_body): <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
    ///   - [`template_url(impl Into<String>)`](crate::client::fluent_builders::CreateStackSet::template_url) / [`set_template_url(Option<String>)`](crate::client::fluent_builders::CreateStackSet::set_template_url): <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that's located in an Amazon S3 bucket or a Systems Manager document. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.</p>
    ///   - [`stack_id(impl Into<String>)`](crate::client::fluent_builders::CreateStackSet::stack_id) / [`set_stack_id(Option<String>)`](crate::client::fluent_builders::CreateStackSet::set_stack_id): <p>The stack ID you are importing into a new stack set. Specify the Amazon Resource Name (ARN) of the stack.</p>
    ///   - [`parameters(Vec<Parameter>)`](crate::client::fluent_builders::CreateStackSet::parameters) / [`set_parameters(Option<Vec<Parameter>>)`](crate::client::fluent_builders::CreateStackSet::set_parameters): <p>The input parameters for the stack set template.</p>
    ///   - [`capabilities(Vec<Capability>)`](crate::client::fluent_builders::CreateStackSet::capabilities) / [`set_capabilities(Option<Vec<Capability>>)`](crate::client::fluent_builders::CreateStackSet::set_capabilities): <p>In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for CloudFormation to create the stack set and related stack instances.</p>  <ul>   <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stack sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p>    <ul>     <li> <p>If you have IAM resources, you can specify either capability.</p> </li>     <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li>     <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li>    </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p>    <ul>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">AWS::IAM::UserToGroupAddition</a> </p> </li>    </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p> </li>   <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates reference macros. If your stack set template references one or more macros, you must create the stack set directly from the processed template, without first reviewing the resulting changes in a change set. To create the stack set directly, you must acknowledge this capability. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important>     <p>Stack sets with service-managed permissions don't currently support the use of macros in templates. (This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.) Even if you specify this capability for a stack set with service-managed permissions, if you reference a macro in your template the stack set operation will fail.</p>    </important> </li>  </ul>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateStackSet::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateStackSet::set_tags): <p>The key-value pairs to associate with this stack set and the stacks created from it. CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.</p>  <p>If you specify tags as part of a <code>CreateStackSet</code> action, CloudFormation checks to see if you have the required IAM permission to tag resources. If you don't, the entire <code>CreateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not created.</p>
    ///   - [`administration_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateStackSet::administration_role_arn) / [`set_administration_role_arn(Option<String>)`](crate::client::fluent_builders::CreateStackSet::set_administration_role_arn): <p>The Amazon Resource Name (ARN) of the IAM role to use to create this stack set.</p>  <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>CloudFormation User Guide</i>.</p>
    ///   - [`execution_role_name(impl Into<String>)`](crate::client::fluent_builders::CreateStackSet::execution_role_name) / [`set_execution_role_name(Option<String>)`](crate::client::fluent_builders::CreateStackSet::set_execution_role_name): <p>The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p>  <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets.</p>
    ///   - [`permission_model(PermissionModels)`](crate::client::fluent_builders::CreateStackSet::permission_model) / [`set_permission_model(Option<PermissionModels>)`](crate::client::fluent_builders::CreateStackSet::set_permission_model): <p>Describes how the IAM roles required for stack set operations are created. By default, <code>SELF-MANAGED</code> is specified.</p>  <ul>   <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li>   <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li>  </ul>
    ///   - [`auto_deployment(AutoDeployment)`](crate::client::fluent_builders::CreateStackSet::auto_deployment) / [`set_auto_deployment(Option<AutoDeployment>)`](crate::client::fluent_builders::CreateStackSet::set_auto_deployment): <p>Describes whether StackSets automatically deploys to Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if <code>PermissionModel</code> is <code>SERVICE_MANAGED</code>.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::CreateStackSet::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::CreateStackSet::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>To create a stack set with service-managed permissions while signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>To create a stack set with service-managed permissions while signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated admin in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>  <p>Stack sets with service-managed permissions are created in the management account, including stack sets that are created by delegated administrators.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::CreateStackSet::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::CreateStackSet::set_client_request_token): <p>A unique identifier for this <code>CreateStackSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to create another stack set with the same name. You might retry <code>CreateStackSet</code> requests to ensure that CloudFormation successfully received them.</p>  <p>If you don't specify an operation ID, the SDK generates one automatically.</p>
    ///   - [`managed_execution(ManagedExecution)`](crate::client::fluent_builders::CreateStackSet::managed_execution) / [`set_managed_execution(Option<ManagedExecution>)`](crate::client::fluent_builders::CreateStackSet::set_managed_execution): <p>Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.</p>
    /// - On success, responds with [`CreateStackSetOutput`](crate::output::CreateStackSetOutput) with field(s):
    ///   - [`stack_set_id(Option<String>)`](crate::output::CreateStackSetOutput::stack_set_id): <p>The ID of the stack set that you're creating.</p>
    /// - On failure, responds with [`SdkError<CreateStackSetError>`](crate::error::CreateStackSetError)
    pub fn create_stack_set(&self) -> crate::client::fluent_builders::CreateStackSet {
        crate::client::fluent_builders::CreateStackSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeactivateType`](crate::client::fluent_builders::DeactivateType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::DeactivateType::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::DeactivateType::set_type_name): <p>The type name of the extension, in this account and region. If you specified a type name alias when enabling the extension, use the type name alias.</p>  <p>Conditional: You must specify either <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
    ///   - [`r#type(ThirdPartyType)`](crate::client::fluent_builders::DeactivateType::type) / [`set_type(Option<ThirdPartyType>)`](crate::client::fluent_builders::DeactivateType::set_type): <p>The extension type.</p>  <p>Conditional: You must specify either <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::DeactivateType::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::DeactivateType::set_arn): <p>The Amazon Resource Name (ARN) for the extension, in this account and region.</p>  <p>Conditional: You must specify either <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
    /// - On success, responds with [`DeactivateTypeOutput`](crate::output::DeactivateTypeOutput)

    /// - On failure, responds with [`SdkError<DeactivateTypeError>`](crate::error::DeactivateTypeError)
    pub fn deactivate_type(&self) -> crate::client::fluent_builders::DeactivateType {
        crate::client::fluent_builders::DeactivateType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteChangeSet`](crate::client::fluent_builders::DeleteChangeSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`change_set_name(impl Into<String>)`](crate::client::fluent_builders::DeleteChangeSet::change_set_name) / [`set_change_set_name(Option<String>)`](crate::client::fluent_builders::DeleteChangeSet::set_change_set_name): <p>The name or Amazon Resource Name (ARN) of the change set that you want to delete.</p>
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DeleteChangeSet::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DeleteChangeSet::set_stack_name): <p>If you specified the name of a change set to delete, specify the stack name or Amazon Resource Name (ARN) that's associated with it.</p>
    /// - On success, responds with [`DeleteChangeSetOutput`](crate::output::DeleteChangeSetOutput)

    /// - On failure, responds with [`SdkError<DeleteChangeSetError>`](crate::error::DeleteChangeSetError)
    pub fn delete_change_set(&self) -> crate::client::fluent_builders::DeleteChangeSet {
        crate::client::fluent_builders::DeleteChangeSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteStack`](crate::client::fluent_builders::DeleteStack) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DeleteStack::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DeleteStack::set_stack_name): <p>The name or the unique stack ID that's associated with the stack.</p>
    ///   - [`retain_resources(Vec<String>)`](crate::client::fluent_builders::DeleteStack::retain_resources) / [`set_retain_resources(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteStack::set_retain_resources): <p>For stacks in the <code>DELETE_FAILED</code> state, a list of resource logical IDs that are associated with the resources you want to retain. During deletion, CloudFormation deletes the stack but doesn't delete the retained resources.</p>  <p>Retaining resources is useful when you can't delete a resource, such as a non-empty S3 bucket, but you want to delete the stack.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteStack::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::DeleteStack::set_role_arn): <p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes to delete the stack. CloudFormation uses the role's credentials to make calls on your behalf.</p>  <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that's generated from your user credentials.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::DeleteStack::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::DeleteStack::set_client_request_token): <p>A unique identifier for this <code>DeleteStack</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to delete a stack with the same name. You might retry <code>DeleteStack</code> requests to ensure that CloudFormation successfully received them.</p>  <p>All events initiated by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p>  <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.</p>
    /// - On success, responds with [`DeleteStackOutput`](crate::output::DeleteStackOutput)

    /// - On failure, responds with [`SdkError<DeleteStackError>`](crate::error::DeleteStackError)
    pub fn delete_stack(&self) -> crate::client::fluent_builders::DeleteStack {
        crate::client::fluent_builders::DeleteStack::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteStackInstances`](crate::client::fluent_builders::DeleteStackInstances) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::DeleteStackInstances::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::DeleteStackInstances::set_stack_set_name): <p>The name or unique ID of the stack set that you want to delete stack instances for.</p>
    ///   - [`accounts(Vec<String>)`](crate::client::fluent_builders::DeleteStackInstances::accounts) / [`set_accounts(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteStackInstances::set_accounts): <p>[Self-managed permissions] The names of the Amazon Web Services accounts that you want to delete stack instances for.</p>  <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    ///   - [`deployment_targets(DeploymentTargets)`](crate::client::fluent_builders::DeleteStackInstances::deployment_targets) / [`set_deployment_targets(Option<DeploymentTargets>)`](crate::client::fluent_builders::DeleteStackInstances::set_deployment_targets): <p>[Service-managed permissions] The Organizations accounts from which to delete stack instances.</p>  <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    ///   - [`regions(Vec<String>)`](crate::client::fluent_builders::DeleteStackInstances::regions) / [`set_regions(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteStackInstances::set_regions): <p>The Amazon Web Services Regions where you want to delete stack set instances.</p>
    ///   - [`operation_preferences(StackSetOperationPreferences)`](crate::client::fluent_builders::DeleteStackInstances::operation_preferences) / [`set_operation_preferences(Option<StackSetOperationPreferences>)`](crate::client::fluent_builders::DeleteStackInstances::set_operation_preferences): <p>Preferences for how CloudFormation performs this stack set operation.</p>
    ///   - [`retain_stacks(bool)`](crate::client::fluent_builders::DeleteStackInstances::retain_stacks) / [`set_retain_stacks(bool)`](crate::client::fluent_builders::DeleteStackInstances::set_retain_stacks): <p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
    ///   - [`operation_id(impl Into<String>)`](crate::client::fluent_builders::DeleteStackInstances::operation_id) / [`set_operation_id(Option<String>)`](crate::client::fluent_builders::DeleteStackInstances::set_operation_id): <p>The unique identifier for this stack set operation.</p>  <p>If you don't specify an operation ID, the SDK generates one automatically.</p>  <p>The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that CloudFormation successfully received them.</p>  <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::DeleteStackInstances::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::DeleteStackInstances::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`DeleteStackInstancesOutput`](crate::output::DeleteStackInstancesOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::output::DeleteStackInstancesOutput::operation_id): <p>The unique identifier for this stack set operation.</p>
    /// - On failure, responds with [`SdkError<DeleteStackInstancesError>`](crate::error::DeleteStackInstancesError)
    pub fn delete_stack_instances(&self) -> crate::client::fluent_builders::DeleteStackInstances {
        crate::client::fluent_builders::DeleteStackInstances::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteStackSet`](crate::client::fluent_builders::DeleteStackSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::DeleteStackSet::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::DeleteStackSet::set_stack_set_name): <p>The name or unique ID of the stack set that you're deleting. You can obtain this value by running <code>ListStackSets</code>.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::DeleteStackSet::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::DeleteStackSet::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`DeleteStackSetOutput`](crate::output::DeleteStackSetOutput)

    /// - On failure, responds with [`SdkError<DeleteStackSetError>`](crate::error::DeleteStackSetError)
    pub fn delete_stack_set(&self) -> crate::client::fluent_builders::DeleteStackSet {
        crate::client::fluent_builders::DeleteStackSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeregisterType`](crate::client::fluent_builders::DeregisterType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::DeregisterType::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::DeregisterType::set_arn): <p>The Amazon Resource Name (ARN) of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`r#type(RegistryType)`](crate::client::fluent_builders::DeregisterType::type) / [`set_type(Option<RegistryType>)`](crate::client::fluent_builders::DeregisterType::set_type): <p>The kind of extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::DeregisterType::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::DeregisterType::set_type_name): <p>The name of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::DeregisterType::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::DeregisterType::set_version_id): <p>The ID of a specific version of the extension. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the extension version when it is registered.</p>
    /// - On success, responds with [`DeregisterTypeOutput`](crate::output::DeregisterTypeOutput)

    /// - On failure, responds with [`SdkError<DeregisterTypeError>`](crate::error::DeregisterTypeError)
    pub fn deregister_type(&self) -> crate::client::fluent_builders::DeregisterType {
        crate::client::fluent_builders::DeregisterType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAccountLimits`](crate::client::fluent_builders::DescribeAccountLimits) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeAccountLimits::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeAccountLimits::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeAccountLimits::set_next_token): <p>A string that identifies the next page of limits that you want to retrieve.</p>
    /// - On success, responds with [`DescribeAccountLimitsOutput`](crate::output::DescribeAccountLimitsOutput) with field(s):
    ///   - [`account_limits(Option<Vec<AccountLimit>>)`](crate::output::DescribeAccountLimitsOutput::account_limits): <p>An account limit structure that contain a list of CloudFormation account limits and their values.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeAccountLimitsOutput::next_token): <p>If the output exceeds 1 MB in size, a string that identifies the next page of limits. If no additional page exists, this value is null.</p>
    /// - On failure, responds with [`SdkError<DescribeAccountLimitsError>`](crate::error::DescribeAccountLimitsError)
    pub fn describe_account_limits(&self) -> crate::client::fluent_builders::DescribeAccountLimits {
        crate::client::fluent_builders::DescribeAccountLimits::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeChangeSet`](crate::client::fluent_builders::DescribeChangeSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`change_set_name(impl Into<String>)`](crate::client::fluent_builders::DescribeChangeSet::change_set_name) / [`set_change_set_name(Option<String>)`](crate::client::fluent_builders::DescribeChangeSet::set_change_set_name): <p>The name or Amazon Resource Name (ARN) of the change set that you want to describe.</p>
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DescribeChangeSet::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DescribeChangeSet::set_stack_name): <p>If you specified the name of a change set, specify the stack name or ID (ARN) of the change set you want to describe.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeChangeSet::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeChangeSet::set_next_token): <p>A string (provided by the <code>DescribeChangeSet</code> response output) that identifies the next page of information that you want to retrieve.</p>
    /// - On success, responds with [`DescribeChangeSetOutput`](crate::output::DescribeChangeSetOutput) with field(s):
    ///   - [`change_set_name(Option<String>)`](crate::output::DescribeChangeSetOutput::change_set_name): <p>The name of the change set.</p>
    ///   - [`change_set_id(Option<String>)`](crate::output::DescribeChangeSetOutput::change_set_id): <p>The Amazon Resource Name (ARN) of the change set.</p>
    ///   - [`stack_id(Option<String>)`](crate::output::DescribeChangeSetOutput::stack_id): <p>The Amazon Resource Name (ARN) of the stack that's associated with the change set.</p>
    ///   - [`stack_name(Option<String>)`](crate::output::DescribeChangeSetOutput::stack_name): <p>The name of the stack that's associated with the change set.</p>
    ///   - [`description(Option<String>)`](crate::output::DescribeChangeSetOutput::description): <p>Information about the change set.</p>
    ///   - [`parameters(Option<Vec<Parameter>>)`](crate::output::DescribeChangeSetOutput::parameters): <p>A list of <code>Parameter</code> structures that describes the input parameters and their values used to create the change set. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::DescribeChangeSetOutput::creation_time): <p>The start time when the change set was created, in UTC.</p>
    ///   - [`execution_status(Option<ExecutionStatus>)`](crate::output::DescribeChangeSetOutput::execution_status): <p>If the change set execution status is <code>AVAILABLE</code>, you can execute the change set. If you can't execute the change set, the status indicates why. For example, a change set might be in an <code>UNAVAILABLE</code> state because CloudFormation is still creating it or in an <code>OBSOLETE</code> state because the stack was already updated.</p>
    ///   - [`status(Option<ChangeSetStatus>)`](crate::output::DescribeChangeSetOutput::status): <p>The current status of the change set, such as <code>CREATE_IN_PROGRESS</code>, <code>CREATE_COMPLETE</code>, or <code>FAILED</code>.</p>
    ///   - [`status_reason(Option<String>)`](crate::output::DescribeChangeSetOutput::status_reason): <p>A description of the change set's status. For example, if your attempt to create a change set failed, CloudFormation shows the error message.</p>
    ///   - [`notification_ar_ns(Option<Vec<String>>)`](crate::output::DescribeChangeSetOutput::notification_ar_ns): <p>The ARNs of the Amazon Simple Notification Service (Amazon SNS) topics that will be associated with the stack if you execute the change set.</p>
    ///   - [`rollback_configuration(Option<RollbackConfiguration>)`](crate::output::DescribeChangeSetOutput::rollback_configuration): <p>The rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p>
    ///   - [`capabilities(Option<Vec<Capability>>)`](crate::output::DescribeChangeSetOutput::capabilities): <p>If you execute the change set, the list of capabilities that were explicitly acknowledged when the change set was created.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::DescribeChangeSetOutput::tags): <p>If you execute the change set, the tags that will be associated with the stack.</p>
    ///   - [`changes(Option<Vec<Change>>)`](crate::output::DescribeChangeSetOutput::changes): <p>A list of <code>Change</code> structures that describes the resources CloudFormation changes if you execute the change set.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeChangeSetOutput::next_token): <p>If the output exceeds 1 MB, a string that identifies the next page of changes. If there is no additional page, this value is null.</p>
    ///   - [`include_nested_stacks(Option<bool>)`](crate::output::DescribeChangeSetOutput::include_nested_stacks): <p>Verifies if <code>IncludeNestedStacks</code> is set to <code>True</code>.</p>
    ///   - [`parent_change_set_id(Option<String>)`](crate::output::DescribeChangeSetOutput::parent_change_set_id): <p>Specifies the change set ID of the parent change set in the current nested change set hierarchy.</p>
    ///   - [`root_change_set_id(Option<String>)`](crate::output::DescribeChangeSetOutput::root_change_set_id): <p>Specifies the change set ID of the root change set in the current nested change set hierarchy.</p>
    /// - On failure, responds with [`SdkError<DescribeChangeSetError>`](crate::error::DescribeChangeSetError)
    pub fn describe_change_set(&self) -> crate::client::fluent_builders::DescribeChangeSet {
        crate::client::fluent_builders::DescribeChangeSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeChangeSetHooks`](crate::client::fluent_builders::DescribeChangeSetHooks) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`change_set_name(impl Into<String>)`](crate::client::fluent_builders::DescribeChangeSetHooks::change_set_name) / [`set_change_set_name(Option<String>)`](crate::client::fluent_builders::DescribeChangeSetHooks::set_change_set_name): <p>The name or Amazon Resource Name (ARN) of the change set that you want to describe.</p>
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DescribeChangeSetHooks::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DescribeChangeSetHooks::set_stack_name): <p>If you specified the name of a change set, specify the stack name or stack ID (ARN) of the change set you want to describe.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeChangeSetHooks::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeChangeSetHooks::set_next_token): <p>A string, provided by the <code>DescribeChangeSetHooks</code> response output, that identifies the next page of information that you want to retrieve.</p>
    ///   - [`logical_resource_id(impl Into<String>)`](crate::client::fluent_builders::DescribeChangeSetHooks::logical_resource_id) / [`set_logical_resource_id(Option<String>)`](crate::client::fluent_builders::DescribeChangeSetHooks::set_logical_resource_id): <p>If specified, lists only the hooks related to the specified <code>LogicalResourceId</code>.</p>
    /// - On success, responds with [`DescribeChangeSetHooksOutput`](crate::output::DescribeChangeSetHooksOutput) with field(s):
    ///   - [`change_set_id(Option<String>)`](crate::output::DescribeChangeSetHooksOutput::change_set_id): <p>The change set identifier (stack ID).</p>
    ///   - [`change_set_name(Option<String>)`](crate::output::DescribeChangeSetHooksOutput::change_set_name): <p>The change set name.</p>
    ///   - [`hooks(Option<Vec<ChangeSetHook>>)`](crate::output::DescribeChangeSetHooksOutput::hooks): <p>List of hook objects.</p>
    ///   - [`status(Option<ChangeSetHooksStatus>)`](crate::output::DescribeChangeSetHooksOutput::status): <p>Provides the status of the change set hook.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeChangeSetHooksOutput::next_token): <p>Pagination token, <code>null</code> or empty if no more results.</p>
    ///   - [`stack_id(Option<String>)`](crate::output::DescribeChangeSetHooksOutput::stack_id): <p>The stack identifier (stack ID).</p>
    ///   - [`stack_name(Option<String>)`](crate::output::DescribeChangeSetHooksOutput::stack_name): <p>The stack name.</p>
    /// - On failure, responds with [`SdkError<DescribeChangeSetHooksError>`](crate::error::DescribeChangeSetHooksError)
    pub fn describe_change_set_hooks(
        &self,
    ) -> crate::client::fluent_builders::DescribeChangeSetHooks {
        crate::client::fluent_builders::DescribeChangeSetHooks::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribePublisher`](crate::client::fluent_builders::DescribePublisher) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`publisher_id(impl Into<String>)`](crate::client::fluent_builders::DescribePublisher::publisher_id) / [`set_publisher_id(Option<String>)`](crate::client::fluent_builders::DescribePublisher::set_publisher_id): <p>The ID of the extension publisher.</p>  <p>If you don't supply a <code>PublisherId</code>, and you have registered as an extension publisher, <code>DescribePublisher</code> returns information about your own publisher account.</p>
    /// - On success, responds with [`DescribePublisherOutput`](crate::output::DescribePublisherOutput) with field(s):
    ///   - [`publisher_id(Option<String>)`](crate::output::DescribePublisherOutput::publisher_id): <p>The ID of the extension publisher.</p>
    ///   - [`publisher_status(Option<PublisherStatus>)`](crate::output::DescribePublisherOutput::publisher_status): <p>Whether the publisher is verified. Currently, all registered publishers are verified.</p>
    ///   - [`identity_provider(Option<IdentityProvider>)`](crate::output::DescribePublisherOutput::identity_provider): <p>The type of account used as the identity provider when registering this publisher with CloudFormation.</p>
    ///   - [`publisher_profile(Option<String>)`](crate::output::DescribePublisherOutput::publisher_profile): <p>The URL to the publisher's profile with the identity provider.</p>
    /// - On failure, responds with [`SdkError<DescribePublisherError>`](crate::error::DescribePublisherError)
    pub fn describe_publisher(&self) -> crate::client::fluent_builders::DescribePublisher {
        crate::client::fluent_builders::DescribePublisher::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStackDriftDetectionStatus`](crate::client::fluent_builders::DescribeStackDriftDetectionStatus) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_drift_detection_id(impl Into<String>)`](crate::client::fluent_builders::DescribeStackDriftDetectionStatus::stack_drift_detection_id) / [`set_stack_drift_detection_id(Option<String>)`](crate::client::fluent_builders::DescribeStackDriftDetectionStatus::set_stack_drift_detection_id): <p>The ID of the drift detection results of this operation.</p>  <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results CloudFormation retains for any given stack, and for how long, may vary.</p>
    /// - On success, responds with [`DescribeStackDriftDetectionStatusOutput`](crate::output::DescribeStackDriftDetectionStatusOutput) with field(s):
    ///   - [`stack_id(Option<String>)`](crate::output::DescribeStackDriftDetectionStatusOutput::stack_id): <p>The ID of the stack.</p>
    ///   - [`stack_drift_detection_id(Option<String>)`](crate::output::DescribeStackDriftDetectionStatusOutput::stack_drift_detection_id): <p>The ID of the drift detection results of this operation.</p>  <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of reports CloudFormation retains for any given stack, and for how long, may vary.</p>
    ///   - [`stack_drift_status(Option<StackDriftStatus>)`](crate::output::DescribeStackDriftDetectionStatusOutput::stack_drift_status): <p>Status of the stack's actual configuration compared to its expected configuration.</p>  <ul>   <li> <p> <code>DRIFTED</code>: The stack differs from its expected template configuration. A stack is considered to have drifted if one or more of its resources have drifted.</p> </li>   <li> <p> <code>NOT_CHECKED</code>: CloudFormation hasn't checked if the stack differs from its expected template configuration.</p> </li>   <li> <p> <code>IN_SYNC</code>: The stack's actual configuration matches its expected template configuration.</p> </li>   <li> <p> <code>UNKNOWN</code>: This value is reserved for future use.</p> </li>  </ul>
    ///   - [`detection_status(Option<StackDriftDetectionStatus>)`](crate::output::DescribeStackDriftDetectionStatusOutput::detection_status): <p>The status of the stack drift detection operation.</p>  <ul>   <li> <p> <code>DETECTION_COMPLETE</code>: The stack drift detection operation has successfully completed for all resources in the stack that support drift detection. (Resources that don't currently support stack detection remain unchecked.)</p> <p>If you specified logical resource IDs for CloudFormation to use as a filter for the stack drift detection operation, only the resources with those logical IDs are checked for drift.</p> </li>   <li> <p> <code>DETECTION_FAILED</code>: The stack drift detection operation has failed for at least one resource in the stack. Results will be available for resources on which CloudFormation successfully completed drift detection.</p> </li>   <li> <p> <code>DETECTION_IN_PROGRESS</code>: The stack drift detection operation is currently in progress.</p> </li>  </ul>
    ///   - [`detection_status_reason(Option<String>)`](crate::output::DescribeStackDriftDetectionStatusOutput::detection_status_reason): <p>The reason the stack drift detection operation has its current status.</p>
    ///   - [`drifted_stack_resource_count(Option<i32>)`](crate::output::DescribeStackDriftDetectionStatusOutput::drifted_stack_resource_count): <p>Total number of stack resources that have drifted. This is NULL until the drift detection operation reaches a status of <code>DETECTION_COMPLETE</code>. This value will be 0 for stacks whose drift status is <code>IN_SYNC</code>.</p>
    ///   - [`timestamp(Option<DateTime>)`](crate::output::DescribeStackDriftDetectionStatusOutput::timestamp): <p>Time at which the stack drift detection operation was initiated.</p>
    /// - On failure, responds with [`SdkError<DescribeStackDriftDetectionStatusError>`](crate::error::DescribeStackDriftDetectionStatusError)
    pub fn describe_stack_drift_detection_status(
        &self,
    ) -> crate::client::fluent_builders::DescribeStackDriftDetectionStatus {
        crate::client::fluent_builders::DescribeStackDriftDetectionStatus::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStackEvents`](crate::client::fluent_builders::DescribeStackEvents) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeStackEvents::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DescribeStackEvents::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DescribeStackEvents::set_stack_name): <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p>  <ul>   <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>   <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>  </ul>  <p>Default: There is no default value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeStackEvents::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeStackEvents::set_next_token): <p>A string that identifies the next page of events that you want to retrieve.</p>
    /// - On success, responds with [`DescribeStackEventsOutput`](crate::output::DescribeStackEventsOutput) with field(s):
    ///   - [`stack_events(Option<Vec<StackEvent>>)`](crate::output::DescribeStackEventsOutput::stack_events): <p>A list of <code>StackEvents</code> structures.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeStackEventsOutput::next_token): <p>If the output exceeds 1 MB in size, a string that identifies the next page of events. If no additional page exists, this value is null.</p>
    /// - On failure, responds with [`SdkError<DescribeStackEventsError>`](crate::error::DescribeStackEventsError)
    pub fn describe_stack_events(&self) -> crate::client::fluent_builders::DescribeStackEvents {
        crate::client::fluent_builders::DescribeStackEvents::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStackInstance`](crate::client::fluent_builders::DescribeStackInstance) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::DescribeStackInstance::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::DescribeStackInstance::set_stack_set_name): <p>The name or the unique stack ID of the stack set that you want to get stack instance information for.</p>
    ///   - [`stack_instance_account(impl Into<String>)`](crate::client::fluent_builders::DescribeStackInstance::stack_instance_account) / [`set_stack_instance_account(Option<String>)`](crate::client::fluent_builders::DescribeStackInstance::set_stack_instance_account): <p>The ID of an Amazon Web Services account that's associated with this stack instance.</p>
    ///   - [`stack_instance_region(impl Into<String>)`](crate::client::fluent_builders::DescribeStackInstance::stack_instance_region) / [`set_stack_instance_region(Option<String>)`](crate::client::fluent_builders::DescribeStackInstance::set_stack_instance_region): <p>The name of a Region that's associated with this stack instance.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::DescribeStackInstance::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::DescribeStackInstance::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`DescribeStackInstanceOutput`](crate::output::DescribeStackInstanceOutput) with field(s):
    ///   - [`stack_instance(Option<StackInstance>)`](crate::output::DescribeStackInstanceOutput::stack_instance): <p>The stack instance that matches the specified request parameters.</p>
    /// - On failure, responds with [`SdkError<DescribeStackInstanceError>`](crate::error::DescribeStackInstanceError)
    pub fn describe_stack_instance(&self) -> crate::client::fluent_builders::DescribeStackInstance {
        crate::client::fluent_builders::DescribeStackInstance::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStackResource`](crate::client::fluent_builders::DescribeStackResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DescribeStackResource::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DescribeStackResource::set_stack_name): <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p>  <ul>   <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>   <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>  </ul>  <p>Default: There is no default value.</p>
    ///   - [`logical_resource_id(impl Into<String>)`](crate::client::fluent_builders::DescribeStackResource::logical_resource_id) / [`set_logical_resource_id(Option<String>)`](crate::client::fluent_builders::DescribeStackResource::set_logical_resource_id): <p>The logical name of the resource as specified in the template.</p>  <p>Default: There is no default value.</p>
    /// - On success, responds with [`DescribeStackResourceOutput`](crate::output::DescribeStackResourceOutput) with field(s):
    ///   - [`stack_resource_detail(Option<StackResourceDetail>)`](crate::output::DescribeStackResourceOutput::stack_resource_detail): <p>A <code>StackResourceDetail</code> structure containing the description of the specified resource in the specified stack.</p>
    /// - On failure, responds with [`SdkError<DescribeStackResourceError>`](crate::error::DescribeStackResourceError)
    pub fn describe_stack_resource(&self) -> crate::client::fluent_builders::DescribeStackResource {
        crate::client::fluent_builders::DescribeStackResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStackResourceDrifts`](crate::client::fluent_builders::DescribeStackResourceDrifts) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeStackResourceDrifts::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DescribeStackResourceDrifts::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DescribeStackResourceDrifts::set_stack_name): <p>The name of the stack for which you want drift information.</p>
    ///   - [`stack_resource_drift_status_filters(Vec<StackResourceDriftStatus>)`](crate::client::fluent_builders::DescribeStackResourceDrifts::stack_resource_drift_status_filters) / [`set_stack_resource_drift_status_filters(Option<Vec<StackResourceDriftStatus>>)`](crate::client::fluent_builders::DescribeStackResourceDrifts::set_stack_resource_drift_status_filters): <p>The resource drift status values to use as filters for the resource drift results returned.</p>  <ul>   <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li>   <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li>   <li> <p> <code>IN_SYNC</code>: The resource's actual configuration matches its expected template configuration.</p> </li>   <li> <p> <code>NOT_CHECKED</code>: CloudFormation doesn't currently return this value.</p> </li>  </ul>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeStackResourceDrifts::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeStackResourceDrifts::set_next_token): <p>A string that identifies the next page of stack resource drift results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeStackResourceDrifts::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeStackResourceDrifts::set_max_results): <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    /// - On success, responds with [`DescribeStackResourceDriftsOutput`](crate::output::DescribeStackResourceDriftsOutput) with field(s):
    ///   - [`stack_resource_drifts(Option<Vec<StackResourceDrift>>)`](crate::output::DescribeStackResourceDriftsOutput::stack_resource_drifts): <p>Drift information for the resources that have been checked for drift in the specified stack. This includes actual and expected configuration values for resources where CloudFormation detects drift.</p>  <p>For a given stack, there will be one <code>StackResourceDrift</code> for each stack resource that has been checked for drift. Resources that haven't yet been checked for drift aren't included. Resources that do not currently support drift detection aren't checked, and so not included. For a list of resources that support drift detection, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html">Resources that Support Drift Detection</a>.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeStackResourceDriftsOutput::next_token): <p>If the request doesn't return all the remaining results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call <code>DescribeStackResourceDrifts</code> again and assign that token to the request object's <code>NextToken</code> parameter. If the request returns all results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<DescribeStackResourceDriftsError>`](crate::error::DescribeStackResourceDriftsError)
    pub fn describe_stack_resource_drifts(
        &self,
    ) -> crate::client::fluent_builders::DescribeStackResourceDrifts {
        crate::client::fluent_builders::DescribeStackResourceDrifts::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStackResources`](crate::client::fluent_builders::DescribeStackResources) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DescribeStackResources::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DescribeStackResources::set_stack_name): <p>The name or the unique stack ID that is associated with the stack, which aren't always interchangeable:</p>  <ul>   <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>   <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>  </ul>  <p>Default: There is no default value.</p>  <p>Required: Conditional. If you don't specify <code>StackName</code>, you must specify <code>PhysicalResourceId</code>.</p>
    ///   - [`logical_resource_id(impl Into<String>)`](crate::client::fluent_builders::DescribeStackResources::logical_resource_id) / [`set_logical_resource_id(Option<String>)`](crate::client::fluent_builders::DescribeStackResources::set_logical_resource_id): <p>The logical name of the resource as specified in the template.</p>  <p>Default: There is no default value.</p>
    ///   - [`physical_resource_id(impl Into<String>)`](crate::client::fluent_builders::DescribeStackResources::physical_resource_id) / [`set_physical_resource_id(Option<String>)`](crate::client::fluent_builders::DescribeStackResources::set_physical_resource_id): <p>The name or unique identifier that corresponds to a physical instance ID of a resource supported by CloudFormation.</p>  <p>For example, for an Amazon Elastic Compute Cloud (EC2) instance, <code>PhysicalResourceId</code> corresponds to the <code>InstanceId</code>. You can pass the EC2 <code>InstanceId</code> to <code>DescribeStackResources</code> to find which stack the instance belongs to and what other resources are part of the stack.</p>  <p>Required: Conditional. If you don't specify <code>PhysicalResourceId</code>, you must specify <code>StackName</code>.</p>  <p>Default: There is no default value.</p>
    /// - On success, responds with [`DescribeStackResourcesOutput`](crate::output::DescribeStackResourcesOutput) with field(s):
    ///   - [`stack_resources(Option<Vec<StackResource>>)`](crate::output::DescribeStackResourcesOutput::stack_resources): <p>A list of <code>StackResource</code> structures.</p>
    /// - On failure, responds with [`SdkError<DescribeStackResourcesError>`](crate::error::DescribeStackResourcesError)
    pub fn describe_stack_resources(
        &self,
    ) -> crate::client::fluent_builders::DescribeStackResources {
        crate::client::fluent_builders::DescribeStackResources::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStacks`](crate::client::fluent_builders::DescribeStacks) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeStacks::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DescribeStacks::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DescribeStacks::set_stack_name): <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p>  <ul>   <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>   <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>  </ul>  <p>Default: There is no default value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeStacks::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeStacks::set_next_token): <p>A string that identifies the next page of stacks that you want to retrieve.</p>
    /// - On success, responds with [`DescribeStacksOutput`](crate::output::DescribeStacksOutput) with field(s):
    ///   - [`stacks(Option<Vec<Stack>>)`](crate::output::DescribeStacksOutput::stacks): <p>A list of stack structures.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeStacksOutput::next_token): <p>If the output exceeds 1 MB in size, a string that identifies the next page of stacks. If no additional page exists, this value is null.</p>
    /// - On failure, responds with [`SdkError<DescribeStacksError>`](crate::error::DescribeStacksError)
    pub fn describe_stacks(&self) -> crate::client::fluent_builders::DescribeStacks {
        crate::client::fluent_builders::DescribeStacks::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStackSet`](crate::client::fluent_builders::DescribeStackSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::DescribeStackSet::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::DescribeStackSet::set_stack_set_name): <p>The name or unique ID of the stack set whose description you want.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::DescribeStackSet::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::DescribeStackSet::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`DescribeStackSetOutput`](crate::output::DescribeStackSetOutput) with field(s):
    ///   - [`stack_set(Option<StackSet>)`](crate::output::DescribeStackSetOutput::stack_set): <p>The specified stack set.</p>
    /// - On failure, responds with [`SdkError<DescribeStackSetError>`](crate::error::DescribeStackSetError)
    pub fn describe_stack_set(&self) -> crate::client::fluent_builders::DescribeStackSet {
        crate::client::fluent_builders::DescribeStackSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeStackSetOperation`](crate::client::fluent_builders::DescribeStackSetOperation) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::DescribeStackSetOperation::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::DescribeStackSetOperation::set_stack_set_name): <p>The name or the unique stack ID of the stack set for the stack operation.</p>
    ///   - [`operation_id(impl Into<String>)`](crate::client::fluent_builders::DescribeStackSetOperation::operation_id) / [`set_operation_id(Option<String>)`](crate::client::fluent_builders::DescribeStackSetOperation::set_operation_id): <p>The unique ID of the stack set operation.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::DescribeStackSetOperation::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::DescribeStackSetOperation::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`DescribeStackSetOperationOutput`](crate::output::DescribeStackSetOperationOutput) with field(s):
    ///   - [`stack_set_operation(Option<StackSetOperation>)`](crate::output::DescribeStackSetOperationOutput::stack_set_operation): <p>The specified stack set operation.</p>
    /// - On failure, responds with [`SdkError<DescribeStackSetOperationError>`](crate::error::DescribeStackSetOperationError)
    pub fn describe_stack_set_operation(
        &self,
    ) -> crate::client::fluent_builders::DescribeStackSetOperation {
        crate::client::fluent_builders::DescribeStackSetOperation::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeType`](crate::client::fluent_builders::DescribeType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(RegistryType)`](crate::client::fluent_builders::DescribeType::type) / [`set_type(Option<RegistryType>)`](crate::client::fluent_builders::DescribeType::set_type): <p>The kind of extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::DescribeType::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::DescribeType::set_type_name): <p>The name of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::DescribeType::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::DescribeType::set_arn): <p>The Amazon Resource Name (ARN) of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::DescribeType::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::DescribeType::set_version_id): <p>The ID of a specific version of the extension. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the extension version when it is registered.</p>  <p>If you specify a <code>VersionId</code>, <code>DescribeType</code> returns information about that specific extension version. Otherwise, it returns information about the default extension version.</p>
    ///   - [`publisher_id(impl Into<String>)`](crate::client::fluent_builders::DescribeType::publisher_id) / [`set_publisher_id(Option<String>)`](crate::client::fluent_builders::DescribeType::set_publisher_id): <p>The publisher ID of the extension publisher.</p>  <p>Extensions provided by Amazon Web Services are not assigned a publisher ID.</p>
    ///   - [`public_version_number(impl Into<String>)`](crate::client::fluent_builders::DescribeType::public_version_number) / [`set_public_version_number(Option<String>)`](crate::client::fluent_builders::DescribeType::set_public_version_number): <p>The version number of a public third-party extension.</p>
    /// - On success, responds with [`DescribeTypeOutput`](crate::output::DescribeTypeOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::DescribeTypeOutput::arn): <p>The Amazon Resource Name (ARN) of the extension.</p>
    ///   - [`r#type(Option<RegistryType>)`](crate::output::DescribeTypeOutput::type): <p>The kind of extension.</p>
    ///   - [`type_name(Option<String>)`](crate::output::DescribeTypeOutput::type_name): <p>The name of the extension.</p>  <p>If the extension is a public third-party type you have activated with a type name alias, CloudFormation returns the type name alias. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ActivateType.html">ActivateType</a>.</p>
    ///   - [`default_version_id(Option<String>)`](crate::output::DescribeTypeOutput::default_version_id): <p>The ID of the default version of the extension. The default version is used when the extension version isn't specified.</p>  <p>This applies only to private extensions you have registered in your account. For public extensions, both those provided by Amazon Web Services and published by third parties, CloudFormation returns <code>null</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html">RegisterType</a>.</p>  <p>To set the default version of an extension, use <code> <code>SetTypeDefaultVersion</code> </code>.</p>
    ///   - [`is_default_version(Option<bool>)`](crate::output::DescribeTypeOutput::is_default_version): <p>Whether the specified extension version is set as the default version.</p>  <p>This applies only to private extensions you have registered in your account, and extensions published by Amazon Web Services. For public third-party extensions, whether they are activated in your account, CloudFormation returns <code>null</code>.</p>
    ///   - [`type_tests_status(Option<TypeTestsStatus>)`](crate::output::DescribeTypeOutput::type_tests_status): <p>The contract test status of the registered extension version. To return the extension test status of a specific extension version, you must specify <code>VersionId</code>.</p>  <p>This applies only to registered private extension versions. CloudFormation doesn't return this information for public extensions, whether they are activated in your account.</p>  <ul>   <li> <p> <code>PASSED</code>: The extension has passed all its contract tests.</p> <p>An extension must have a test status of <code>PASSED</code> before it can be published. For more information, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-publish.html">Publishing extensions to make them available for public use</a> in the <i>CloudFormation Command Line Interface User Guide</i>.</p> </li>   <li> <p> <code>FAILED</code>: The extension has failed one or more contract tests.</p> </li>   <li> <p> <code>IN_PROGRESS</code>: Contract tests are currently being performed on the extension.</p> </li>   <li> <p> <code>NOT_TESTED</code>: Contract tests haven't been performed on the extension.</p> </li>  </ul>
    ///   - [`type_tests_status_description(Option<String>)`](crate::output::DescribeTypeOutput::type_tests_status_description): <p>The description of the test status. To return the extension test status of a specific extension version, you must specify <code>VersionId</code>.</p>  <p>This applies only to registered private extension versions. CloudFormation doesn't return this information for public extensions, whether they are activated in your account.</p>
    ///   - [`description(Option<String>)`](crate::output::DescribeTypeOutput::description): <p>The description of the extension.</p>
    ///   - [`schema(Option<String>)`](crate::output::DescribeTypeOutput::schema): <p>The schema that defines the extension.</p>  <p>For more information about extension schemas, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-schema.html">Resource Provider Schema</a> in the <i>CloudFormation CLI User Guide</i>.</p>
    ///   - [`provisioning_type(Option<ProvisioningType>)`](crate::output::DescribeTypeOutput::provisioning_type): <p>For resource type extensions, the provisioning behavior of the resource type. CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p>  <p>Valid values include:</p>  <ul>   <li> <p> <code>FULLY_MUTABLE</code>: The resource type includes an update handler to process updates to the type during stack update operations.</p> </li>   <li> <p> <code>IMMUTABLE</code>: The resource type doesn't include an update handler, so the type can't be updated and must instead be replaced during stack update operations.</p> </li>   <li> <p> <code>NON_PROVISIONABLE</code>: The resource type doesn't include all the following handlers, and therefore can't actually be provisioned.</p>    <ul>     <li> <p>create</p> </li>     <li> <p>read</p> </li>     <li> <p>delete</p> </li>    </ul> </li>  </ul>
    ///   - [`deprecated_status(Option<DeprecatedStatus>)`](crate::output::DescribeTypeOutput::deprecated_status): <p>The deprecation status of the extension version.</p>  <p>Valid values include:</p>  <ul>   <li> <p> <code>LIVE</code>: The extension is activated or registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li>   <li> <p> <code>DEPRECATED</code>: The extension has been deactivated or deregistered and can no longer be used in CloudFormation operations.</p> </li>  </ul>  <p>For public third-party extensions, CloudFormation returns <code>null</code>.</p>
    ///   - [`logging_config(Option<LoggingConfig>)`](crate::output::DescribeTypeOutput::logging_config): <p>Contains logging configuration information for private extensions. This applies only to private extensions you have registered in your account. For public extensions, both those provided by Amazon Web Services and published by third parties, CloudFormation returns <code>null</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html">RegisterType</a>.</p>
    ///   - [`required_activated_types(Option<Vec<RequiredActivatedType>>)`](crate::output::DescribeTypeOutput::required_activated_types): <p>For extensions that are modules, the public third-party extensions that must be activated in your account in order for the module itself to be activated.</p>
    ///   - [`execution_role_arn(Option<String>)`](crate::output::DescribeTypeOutput::execution_role_arn): <p>The Amazon Resource Name (ARN) of the IAM execution role used to register the extension. This applies only to private extensions you have registered in your account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html">RegisterType</a>.</p>  <p>If the registered extension calls any Amazon Web Services APIs, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those Amazon Web Services APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your extension with the appropriate credentials.</p>
    ///   - [`visibility(Option<Visibility>)`](crate::output::DescribeTypeOutput::visibility): <p>The scope at which the extension is visible and usable in CloudFormation operations.</p>  <p>Valid values include:</p>  <ul>   <li> <p> <code>PRIVATE</code>: The extension is only visible and usable within the account in which it is registered. CloudFormation marks any extensions you register as <code>PRIVATE</code>.</p> </li>   <li> <p> <code>PUBLIC</code>: The extension is publicly visible and usable within any Amazon Web Services account.</p> </li>  </ul>
    ///   - [`source_url(Option<String>)`](crate::output::DescribeTypeOutput::source_url): <p>The URL of the source code for the extension.</p>
    ///   - [`documentation_url(Option<String>)`](crate::output::DescribeTypeOutput::documentation_url): <p>The URL of a page providing detailed documentation for this extension.</p>
    ///   - [`last_updated(Option<DateTime>)`](crate::output::DescribeTypeOutput::last_updated): <p>When the specified extension version was registered. This applies only to:</p>  <ul>   <li> <p>Private extensions you have registered in your account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html">RegisterType</a>.</p> </li>   <li> <p>Public extensions you have activated in your account with auto-update specified. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ActivateType.html">ActivateType</a>.</p> </li>  </ul>
    ///   - [`time_created(Option<DateTime>)`](crate::output::DescribeTypeOutput::time_created): <p>When the specified private extension version was registered or activated in your account.</p>
    ///   - [`configuration_schema(Option<String>)`](crate::output::DescribeTypeOutput::configuration_schema): <p>A JSON string that represent the current configuration data for the extension in this account and region.</p>  <p>To set the configuration data for an extension, use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SetTypeConfiguration.html">SetTypeConfiguration</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration">Configuring extensions at the account level</a> in the <i>CloudFormation User Guide</i>.</p>
    ///   - [`publisher_id(Option<String>)`](crate::output::DescribeTypeOutput::publisher_id): <p>The publisher ID of the extension publisher.</p>  <p>This applies only to public third-party extensions. For private registered extensions, and extensions provided by Amazon Web Services, CloudFormation returns <code>null</code>.</p>
    ///   - [`original_type_name(Option<String>)`](crate::output::DescribeTypeOutput::original_type_name): <p>For public extensions that have been activated for this account and region, the type name of the public extension.</p>  <p>If you specified a <code>TypeNameAlias</code> when enabling the extension in this account and region, CloudFormation treats that alias as the extension's type name within the account and region, not the type name of the public extension. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-public.html#registry-public-enable-alias">Specifying aliases to refer to extensions</a> in the <i>CloudFormation User Guide</i>.</p>
    ///   - [`original_type_arn(Option<String>)`](crate::output::DescribeTypeOutput::original_type_arn): <p>For public extensions that have been activated for this account and region, the Amazon Resource Name (ARN) of the public extension.</p>
    ///   - [`public_version_number(Option<String>)`](crate::output::DescribeTypeOutput::public_version_number): <p>The version number of a public third-party extension.</p>  <p>This applies only if you specify a public extension you have activated in your account, or specify a public extension without specifying a version. For all other extensions, CloudFormation returns <code>null</code>.</p>
    ///   - [`latest_public_version(Option<String>)`](crate::output::DescribeTypeOutput::latest_public_version): <p>The latest version of a public extension <i>that is available</i> for use.</p>  <p>This only applies if you specify a public extension, and you don't specify a version. For all other requests, CloudFormation returns <code>null</code>.</p>
    ///   - [`is_activated(Option<bool>)`](crate::output::DescribeTypeOutput::is_activated): <p>Whether the extension is activated in the account and region.</p>  <p>This only applies to public third-party extensions. For all other extensions, CloudFormation returns <code>null</code>.</p>
    ///   - [`auto_update(Option<bool>)`](crate::output::DescribeTypeOutput::auto_update): <p>Whether CloudFormation automatically updates the extension in this account and region when a new <i>minor</i> version is published by the extension publisher. Major versions released by the publisher must be manually updated. For more information, see <a href="AWSCloudFormation/latest/UserGuide/registry-public.html#registry-public-enable">Activating public extensions for use in your account</a> in the <i>CloudFormation User Guide</i>.</p>
    /// - On failure, responds with [`SdkError<DescribeTypeError>`](crate::error::DescribeTypeError)
    pub fn describe_type(&self) -> crate::client::fluent_builders::DescribeType {
        crate::client::fluent_builders::DescribeType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeTypeRegistration`](crate::client::fluent_builders::DescribeTypeRegistration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`registration_token(impl Into<String>)`](crate::client::fluent_builders::DescribeTypeRegistration::registration_token) / [`set_registration_token(Option<String>)`](crate::client::fluent_builders::DescribeTypeRegistration::set_registration_token): <p>The identifier for this registration request.</p>  <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <code>RegisterType</code> </code>.</p>
    /// - On success, responds with [`DescribeTypeRegistrationOutput`](crate::output::DescribeTypeRegistrationOutput) with field(s):
    ///   - [`progress_status(Option<RegistrationStatus>)`](crate::output::DescribeTypeRegistrationOutput::progress_status): <p>The current status of the extension registration request.</p>
    ///   - [`description(Option<String>)`](crate::output::DescribeTypeRegistrationOutput::description): <p>The description of the extension registration request.</p>
    ///   - [`type_arn(Option<String>)`](crate::output::DescribeTypeRegistrationOutput::type_arn): <p>The Amazon Resource Name (ARN) of the extension being registered.</p>  <p>For registration requests with a <code>ProgressStatus</code> of other than <code>COMPLETE</code>, this will be <code>null</code>.</p>
    ///   - [`type_version_arn(Option<String>)`](crate::output::DescribeTypeRegistrationOutput::type_version_arn): <p>The Amazon Resource Name (ARN) of this specific version of the extension being registered.</p>  <p>For registration requests with a <code>ProgressStatus</code> of other than <code>COMPLETE</code>, this will be <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<DescribeTypeRegistrationError>`](crate::error::DescribeTypeRegistrationError)
    pub fn describe_type_registration(
        &self,
    ) -> crate::client::fluent_builders::DescribeTypeRegistration {
        crate::client::fluent_builders::DescribeTypeRegistration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DetectStackDrift`](crate::client::fluent_builders::DetectStackDrift) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DetectStackDrift::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DetectStackDrift::set_stack_name): <p>The name of the stack for which you want to detect drift.</p>
    ///   - [`logical_resource_ids(Vec<String>)`](crate::client::fluent_builders::DetectStackDrift::logical_resource_ids) / [`set_logical_resource_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DetectStackDrift::set_logical_resource_ids): <p>The logical names of any resources you want to use as filters.</p>
    /// - On success, responds with [`DetectStackDriftOutput`](crate::output::DetectStackDriftOutput) with field(s):
    ///   - [`stack_drift_detection_id(Option<String>)`](crate::output::DetectStackDriftOutput::stack_drift_detection_id): <p>The ID of the drift detection results of this operation.</p>  <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results CloudFormation retains for any given stack, and for how long, may vary.</p>
    /// - On failure, responds with [`SdkError<DetectStackDriftError>`](crate::error::DetectStackDriftError)
    pub fn detect_stack_drift(&self) -> crate::client::fluent_builders::DetectStackDrift {
        crate::client::fluent_builders::DetectStackDrift::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DetectStackResourceDrift`](crate::client::fluent_builders::DetectStackResourceDrift) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::DetectStackResourceDrift::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::DetectStackResourceDrift::set_stack_name): <p>The name of the stack to which the resource belongs.</p>
    ///   - [`logical_resource_id(impl Into<String>)`](crate::client::fluent_builders::DetectStackResourceDrift::logical_resource_id) / [`set_logical_resource_id(Option<String>)`](crate::client::fluent_builders::DetectStackResourceDrift::set_logical_resource_id): <p>The logical name of the resource for which to return drift information.</p>
    /// - On success, responds with [`DetectStackResourceDriftOutput`](crate::output::DetectStackResourceDriftOutput) with field(s):
    ///   - [`stack_resource_drift(Option<StackResourceDrift>)`](crate::output::DetectStackResourceDriftOutput::stack_resource_drift): <p>Information about whether the resource's actual configuration has drifted from its expected template configuration, including actual and expected property values and any differences detected.</p>
    /// - On failure, responds with [`SdkError<DetectStackResourceDriftError>`](crate::error::DetectStackResourceDriftError)
    pub fn detect_stack_resource_drift(
        &self,
    ) -> crate::client::fluent_builders::DetectStackResourceDrift {
        crate::client::fluent_builders::DetectStackResourceDrift::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DetectStackSetDrift`](crate::client::fluent_builders::DetectStackSetDrift) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::DetectStackSetDrift::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::DetectStackSetDrift::set_stack_set_name): <p>The name of the stack set on which to perform the drift detection operation.</p>
    ///   - [`operation_preferences(StackSetOperationPreferences)`](crate::client::fluent_builders::DetectStackSetDrift::operation_preferences) / [`set_operation_preferences(Option<StackSetOperationPreferences>)`](crate::client::fluent_builders::DetectStackSetDrift::set_operation_preferences): <p>The user-specified preferences for how CloudFormation performs a stack set operation.</p>  <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
    ///   - [`operation_id(impl Into<String>)`](crate::client::fluent_builders::DetectStackSetDrift::operation_id) / [`set_operation_id(Option<String>)`](crate::client::fluent_builders::DetectStackSetDrift::set_operation_id): <p> <i>The ID of the stack set operation.</i> </p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::DetectStackSetDrift::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::DetectStackSetDrift::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`DetectStackSetDriftOutput`](crate::output::DetectStackSetDriftOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::output::DetectStackSetDriftOutput::operation_id): <p>The ID of the drift detection stack set operation.</p>  <p>You can use this operation ID with <code> <code>DescribeStackSetOperation</code> </code> to monitor the progress of the drift detection operation.</p>
    /// - On failure, responds with [`SdkError<DetectStackSetDriftError>`](crate::error::DetectStackSetDriftError)
    pub fn detect_stack_set_drift(&self) -> crate::client::fluent_builders::DetectStackSetDrift {
        crate::client::fluent_builders::DetectStackSetDrift::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`EstimateTemplateCost`](crate::client::fluent_builders::EstimateTemplateCost) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_body(impl Into<String>)`](crate::client::fluent_builders::EstimateTemplateCost::template_body) / [`set_template_body(Option<String>)`](crate::client::fluent_builders::EstimateTemplateCost::set_template_body): <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.)</p>  <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
    ///   - [`template_url(impl Into<String>)`](crate::client::fluent_builders::EstimateTemplateCost::template_url) / [`set_template_url(Option<String>)`](crate::client::fluent_builders::EstimateTemplateCost::set_template_url): <p>Location of file containing the template body. The URL must point to a template that's located in an Amazon S3 bucket or a Systems Manager document. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
    ///   - [`parameters(Vec<Parameter>)`](crate::client::fluent_builders::EstimateTemplateCost::parameters) / [`set_parameters(Option<Vec<Parameter>>)`](crate::client::fluent_builders::EstimateTemplateCost::set_parameters): <p>A list of <code>Parameter</code> structures that specify input parameters.</p>
    /// - On success, responds with [`EstimateTemplateCostOutput`](crate::output::EstimateTemplateCostOutput) with field(s):
    ///   - [`url(Option<String>)`](crate::output::EstimateTemplateCostOutput::url): <p>An Amazon Web Services Simple Monthly Calculator URL with a query string that describes the resources required to run the template.</p>
    /// - On failure, responds with [`SdkError<EstimateTemplateCostError>`](crate::error::EstimateTemplateCostError)
    pub fn estimate_template_cost(&self) -> crate::client::fluent_builders::EstimateTemplateCost {
        crate::client::fluent_builders::EstimateTemplateCost::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ExecuteChangeSet`](crate::client::fluent_builders::ExecuteChangeSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`change_set_name(impl Into<String>)`](crate::client::fluent_builders::ExecuteChangeSet::change_set_name) / [`set_change_set_name(Option<String>)`](crate::client::fluent_builders::ExecuteChangeSet::set_change_set_name): <p>The name or Amazon Resource Name (ARN) of the change set that you want use to update the specified stack.</p>
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::ExecuteChangeSet::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::ExecuteChangeSet::set_stack_name): <p>If you specified the name of a change set, specify the stack name or Amazon Resource Name (ARN) that's associated with the change set you want to execute.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::ExecuteChangeSet::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::ExecuteChangeSet::set_client_request_token): <p>A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that CloudFormation successfully received them.</p>
    ///   - [`disable_rollback(bool)`](crate::client::fluent_builders::ExecuteChangeSet::disable_rollback) / [`set_disable_rollback(Option<bool>)`](crate::client::fluent_builders::ExecuteChangeSet::set_disable_rollback): <p>Preserves the state of previously provisioned resources when an operation fails.</p>  <p>Default: <code>True</code> </p>
    /// - On success, responds with [`ExecuteChangeSetOutput`](crate::output::ExecuteChangeSetOutput)

    /// - On failure, responds with [`SdkError<ExecuteChangeSetError>`](crate::error::ExecuteChangeSetError)
    pub fn execute_change_set(&self) -> crate::client::fluent_builders::ExecuteChangeSet {
        crate::client::fluent_builders::ExecuteChangeSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetStackPolicy`](crate::client::fluent_builders::GetStackPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::GetStackPolicy::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::GetStackPolicy::set_stack_name): <p>The name or unique stack ID that's associated with the stack whose policy you want to get.</p>
    /// - On success, responds with [`GetStackPolicyOutput`](crate::output::GetStackPolicyOutput) with field(s):
    ///   - [`stack_policy_body(Option<String>)`](crate::output::GetStackPolicyOutput::stack_policy_body): <p>Structure containing the stack policy body. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent Updates to Stack Resources</a> in the CloudFormation User Guide.)</p>
    /// - On failure, responds with [`SdkError<GetStackPolicyError>`](crate::error::GetStackPolicyError)
    pub fn get_stack_policy(&self) -> crate::client::fluent_builders::GetStackPolicy {
        crate::client::fluent_builders::GetStackPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetTemplate`](crate::client::fluent_builders::GetTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::GetTemplate::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::GetTemplate::set_stack_name): <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p>  <ul>   <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>   <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>  </ul>  <p>Default: There is no default value.</p>
    ///   - [`change_set_name(impl Into<String>)`](crate::client::fluent_builders::GetTemplate::change_set_name) / [`set_change_set_name(Option<String>)`](crate::client::fluent_builders::GetTemplate::set_change_set_name): <p>The name or Amazon Resource Name (ARN) of a change set for which CloudFormation returns the associated template. If you specify a name, you must also specify the <code>StackName</code>.</p>
    ///   - [`template_stage(TemplateStage)`](crate::client::fluent_builders::GetTemplate::template_stage) / [`set_template_stage(Option<TemplateStage>)`](crate::client::fluent_builders::GetTemplate::set_template_stage): <p>For templates that include transforms, the stage of the template that CloudFormation returns. To get the user-submitted template, specify <code>Original</code>. To get the template after CloudFormation has processed all transforms, specify <code>Processed</code>.</p>  <p>If the template doesn't include transforms, <code>Original</code> and <code>Processed</code> return the same template. By default, CloudFormation specifies <code>Processed</code>.</p>
    /// - On success, responds with [`GetTemplateOutput`](crate::output::GetTemplateOutput) with field(s):
    ///   - [`template_body(Option<String>)`](crate::output::GetTemplateOutput::template_body): <p>Structure containing the template body. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.)</p>  <p>CloudFormation returns the same template that was used when the stack was created.</p>
    ///   - [`stages_available(Option<Vec<TemplateStage>>)`](crate::output::GetTemplateOutput::stages_available): <p>The stage of the template that you can retrieve. For stacks, the <code>Original</code> and <code>Processed</code> templates are always available. For change sets, the <code>Original</code> template is always available. After CloudFormation finishes creating the change set, the <code>Processed</code> template becomes available.</p>
    /// - On failure, responds with [`SdkError<GetTemplateError>`](crate::error::GetTemplateError)
    pub fn get_template(&self) -> crate::client::fluent_builders::GetTemplate {
        crate::client::fluent_builders::GetTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetTemplateSummary`](crate::client::fluent_builders::GetTemplateSummary) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_body(impl Into<String>)`](crate::client::fluent_builders::GetTemplateSummary::template_body) / [`set_template_body(Option<String>)`](crate::client::fluent_builders::GetTemplateSummary::set_template_body): <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information about templates, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
    ///   - [`template_url(impl Into<String>)`](crate::client::fluent_builders::GetTemplateSummary::template_url) / [`set_template_url(Option<String>)`](crate::client::fluent_builders::GetTemplateSummary::set_template_url): <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that's located in an Amazon S3 bucket or a Systems Manager document. For more information about templates, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::GetTemplateSummary::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::GetTemplateSummary::set_stack_name): <p>The name or the stack ID that's associated with the stack, which aren't always interchangeable. For running stacks, you can specify either the stack's name or its unique stack ID. For deleted stack, you must specify the unique stack ID.</p>  <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::GetTemplateSummary::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::GetTemplateSummary::set_stack_set_name): <p>The name or unique ID of the stack set from which the stack was created.</p>  <p>Conditional: You must specify only one of the following parameters: <code>StackName</code>, <code>StackSetName</code>, <code>TemplateBody</code>, or <code>TemplateURL</code>.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::GetTemplateSummary::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::GetTemplateSummary::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`GetTemplateSummaryOutput`](crate::output::GetTemplateSummaryOutput) with field(s):
    ///   - [`parameters(Option<Vec<ParameterDeclaration>>)`](crate::output::GetTemplateSummaryOutput::parameters): <p>A list of parameter declarations that describe various properties for each parameter.</p>
    ///   - [`description(Option<String>)`](crate::output::GetTemplateSummaryOutput::description): <p>The value that's defined in the <code>Description</code> property of the template.</p>
    ///   - [`capabilities(Option<Vec<Capability>>)`](crate::output::GetTemplateSummaryOutput::capabilities): <p>The capabilities found within the template. If your template contains IAM resources, you must specify the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> value for this parameter when you use the <code>CreateStack</code> or <code>UpdateStack</code> actions with your template; otherwise, those actions return an <code>InsufficientCapabilities</code> error.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p>
    ///   - [`capabilities_reason(Option<String>)`](crate::output::GetTemplateSummaryOutput::capabilities_reason): <p>The list of resources that generated the values in the <code>Capabilities</code> response element.</p>
    ///   - [`resource_types(Option<Vec<String>>)`](crate::output::GetTemplateSummaryOutput::resource_types): <p>A list of all the template resource types that are defined in the template, such as <code>AWS::EC2::Instance</code>, <code>AWS::Dynamo::Table</code>, and <code>Custom::MyCustomInstance</code>.</p>
    ///   - [`version(Option<String>)`](crate::output::GetTemplateSummaryOutput::version): <p>The Amazon Web Services template format version, which identifies the capabilities of the template.</p>
    ///   - [`metadata(Option<String>)`](crate::output::GetTemplateSummaryOutput::metadata): <p>The value that's defined for the <code>Metadata</code> property of the template.</p>
    ///   - [`declared_transforms(Option<Vec<String>>)`](crate::output::GetTemplateSummaryOutput::declared_transforms): <p>A list of the transforms that are declared in the template.</p>
    ///   - [`resource_identifier_summaries(Option<Vec<ResourceIdentifierSummary>>)`](crate::output::GetTemplateSummaryOutput::resource_identifier_summaries): <p>A list of resource identifier summaries that describe the target resources of an import operation and the properties you can provide during the import to identify the target resources. For example, <code>BucketName</code> is a possible identifier property for an <code>AWS::S3::Bucket</code> resource.</p>
    /// - On failure, responds with [`SdkError<GetTemplateSummaryError>`](crate::error::GetTemplateSummaryError)
    pub fn get_template_summary(&self) -> crate::client::fluent_builders::GetTemplateSummary {
        crate::client::fluent_builders::GetTemplateSummary::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ImportStacksToStackSet`](crate::client::fluent_builders::ImportStacksToStackSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::ImportStacksToStackSet::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::ImportStacksToStackSet::set_stack_set_name): <p>The name of the stack set. The name must be unique in the Region where you create your stack set.</p>
    ///   - [`stack_ids(Vec<String>)`](crate::client::fluent_builders::ImportStacksToStackSet::stack_ids) / [`set_stack_ids(Option<Vec<String>>)`](crate::client::fluent_builders::ImportStacksToStackSet::set_stack_ids): <p>The IDs of the stacks you are importing into a stack set. You import up to 10 stacks per stack set at a time.</p>  <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p>
    ///   - [`stack_ids_url(impl Into<String>)`](crate::client::fluent_builders::ImportStacksToStackSet::stack_ids_url) / [`set_stack_ids_url(Option<String>)`](crate::client::fluent_builders::ImportStacksToStackSet::set_stack_ids_url): <p>The Amazon S3 URL which contains list of stack ids to be inputted.</p>  <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p>
    ///   - [`organizational_unit_ids(Vec<String>)`](crate::client::fluent_builders::ImportStacksToStackSet::organizational_unit_ids) / [`set_organizational_unit_ids(Option<Vec<String>>)`](crate::client::fluent_builders::ImportStacksToStackSet::set_organizational_unit_ids): <p>The list of OU ID's to which the stacks being imported has to be mapped as deployment target.</p>
    ///   - [`operation_preferences(StackSetOperationPreferences)`](crate::client::fluent_builders::ImportStacksToStackSet::operation_preferences) / [`set_operation_preferences(Option<StackSetOperationPreferences>)`](crate::client::fluent_builders::ImportStacksToStackSet::set_operation_preferences): <p>The user-specified preferences for how CloudFormation performs a stack set operation.</p>  <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
    ///   - [`operation_id(impl Into<String>)`](crate::client::fluent_builders::ImportStacksToStackSet::operation_id) / [`set_operation_id(Option<String>)`](crate::client::fluent_builders::ImportStacksToStackSet::set_operation_id): <p>A unique, user defined, identifier for the stack set operation.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::ImportStacksToStackSet::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::ImportStacksToStackSet::set_call_as): <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>For service managed stack sets, specify <code>DELEGATED_ADMIN</code>.</p> </li>  </ul>
    /// - On success, responds with [`ImportStacksToStackSetOutput`](crate::output::ImportStacksToStackSetOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::output::ImportStacksToStackSetOutput::operation_id): <p>The unique identifier for the stack set operation.</p>
    /// - On failure, responds with [`SdkError<ImportStacksToStackSetError>`](crate::error::ImportStacksToStackSetError)
    pub fn import_stacks_to_stack_set(
        &self,
    ) -> crate::client::fluent_builders::ImportStacksToStackSet {
        crate::client::fluent_builders::ImportStacksToStackSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListChangeSets`](crate::client::fluent_builders::ListChangeSets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListChangeSets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::ListChangeSets::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::ListChangeSets::set_stack_name): <p>The name or the Amazon Resource Name (ARN) of the stack for which you want to list change sets.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListChangeSets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListChangeSets::set_next_token): <p>A string (provided by the <code>ListChangeSets</code> response output) that identifies the next page of change sets that you want to retrieve.</p>
    /// - On success, responds with [`ListChangeSetsOutput`](crate::output::ListChangeSetsOutput) with field(s):
    ///   - [`summaries(Option<Vec<ChangeSetSummary>>)`](crate::output::ListChangeSetsOutput::summaries): <p>A list of <code>ChangeSetSummary</code> structures that provides the ID and status of each change set for the specified stack.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListChangeSetsOutput::next_token): <p>If the output exceeds 1 MB, a string that identifies the next page of change sets. If there is no additional page, this value is <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListChangeSetsError>`](crate::error::ListChangeSetsError)
    pub fn list_change_sets(&self) -> crate::client::fluent_builders::ListChangeSets {
        crate::client::fluent_builders::ListChangeSets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListExports`](crate::client::fluent_builders::ListExports) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListExports::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListExports::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListExports::set_next_token): <p>A string (provided by the <code>ListExports</code> response output) that identifies the next page of exported output values that you asked to retrieve.</p>
    /// - On success, responds with [`ListExportsOutput`](crate::output::ListExportsOutput) with field(s):
    ///   - [`exports(Option<Vec<Export>>)`](crate::output::ListExportsOutput::exports): <p>The output for the <code>ListExports</code> action.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListExportsOutput::next_token): <p>If the output exceeds 100 exported output values, a string that identifies the next page of exports. If there is no additional page, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListExportsError>`](crate::error::ListExportsError)
    pub fn list_exports(&self) -> crate::client::fluent_builders::ListExports {
        crate::client::fluent_builders::ListExports::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListImports`](crate::client::fluent_builders::ListImports) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListImports::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`export_name(impl Into<String>)`](crate::client::fluent_builders::ListImports::export_name) / [`set_export_name(Option<String>)`](crate::client::fluent_builders::ListImports::set_export_name): <p>The name of the exported output value. CloudFormation returns the stack names that are importing this value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListImports::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListImports::set_next_token): <p>A string (provided by the <code>ListImports</code> response output) that identifies the next page of stacks that are importing the specified exported output value.</p>
    /// - On success, responds with [`ListImportsOutput`](crate::output::ListImportsOutput) with field(s):
    ///   - [`imports(Option<Vec<String>>)`](crate::output::ListImportsOutput::imports): <p>A list of stack names that are importing the specified exported output value.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListImportsOutput::next_token): <p>A string that identifies the next page of exports. If there is no additional page, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListImportsError>`](crate::error::ListImportsError)
    pub fn list_imports(&self) -> crate::client::fluent_builders::ListImports {
        crate::client::fluent_builders::ListImports::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListStackInstances`](crate::client::fluent_builders::ListStackInstances) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListStackInstances::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::ListStackInstances::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::ListStackInstances::set_stack_set_name): <p>The name or unique ID of the stack set that you want to list stack instances for.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListStackInstances::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListStackInstances::set_next_token): <p>If the previous request didn't return all the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListStackInstances::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListStackInstances::set_max_results): <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    ///   - [`filters(Vec<StackInstanceFilter>)`](crate::client::fluent_builders::ListStackInstances::filters) / [`set_filters(Option<Vec<StackInstanceFilter>>)`](crate::client::fluent_builders::ListStackInstances::set_filters): <p>The filter to apply to stack instances</p>
    ///   - [`stack_instance_account(impl Into<String>)`](crate::client::fluent_builders::ListStackInstances::stack_instance_account) / [`set_stack_instance_account(Option<String>)`](crate::client::fluent_builders::ListStackInstances::set_stack_instance_account): <p>The name of the Amazon Web Services account that you want to list stack instances for.</p>
    ///   - [`stack_instance_region(impl Into<String>)`](crate::client::fluent_builders::ListStackInstances::stack_instance_region) / [`set_stack_instance_region(Option<String>)`](crate::client::fluent_builders::ListStackInstances::set_stack_instance_region): <p>The name of the Region where you want to list stack instances.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::ListStackInstances::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::ListStackInstances::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`ListStackInstancesOutput`](crate::output::ListStackInstancesOutput) with field(s):
    ///   - [`summaries(Option<Vec<StackInstanceSummary>>)`](crate::output::ListStackInstancesOutput::summaries): <p>A list of <code>StackInstanceSummary</code> structures that contain information about the specified stack instances.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListStackInstancesOutput::next_token): <p>If the request doesn't return all the remaining results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If the request returns all results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListStackInstancesError>`](crate::error::ListStackInstancesError)
    pub fn list_stack_instances(&self) -> crate::client::fluent_builders::ListStackInstances {
        crate::client::fluent_builders::ListStackInstances::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListStackResources`](crate::client::fluent_builders::ListStackResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListStackResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::ListStackResources::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::ListStackResources::set_stack_name): <p>The name or the unique stack ID that is associated with the stack, which aren't always interchangeable:</p>  <ul>   <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>   <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>  </ul>  <p>Default: There is no default value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListStackResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListStackResources::set_next_token): <p>A string that identifies the next page of stack resources that you want to retrieve.</p>
    /// - On success, responds with [`ListStackResourcesOutput`](crate::output::ListStackResourcesOutput) with field(s):
    ///   - [`stack_resource_summaries(Option<Vec<StackResourceSummary>>)`](crate::output::ListStackResourcesOutput::stack_resource_summaries): <p>A list of <code>StackResourceSummary</code> structures.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListStackResourcesOutput::next_token): <p>If the output exceeds 1 MB, a string that identifies the next page of stack resources. If no additional page exists, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListStackResourcesError>`](crate::error::ListStackResourcesError)
    pub fn list_stack_resources(&self) -> crate::client::fluent_builders::ListStackResources {
        crate::client::fluent_builders::ListStackResources::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListStacks`](crate::client::fluent_builders::ListStacks) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListStacks::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListStacks::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListStacks::set_next_token): <p>A string that identifies the next page of stacks that you want to retrieve.</p>
    ///   - [`stack_status_filter(Vec<StackStatus>)`](crate::client::fluent_builders::ListStacks::stack_status_filter) / [`set_stack_status_filter(Option<Vec<StackStatus>>)`](crate::client::fluent_builders::ListStacks::set_stack_status_filter): <p>Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <code>Stack</code> data type.</p>
    /// - On success, responds with [`ListStacksOutput`](crate::output::ListStacksOutput) with field(s):
    ///   - [`stack_summaries(Option<Vec<StackSummary>>)`](crate::output::ListStacksOutput::stack_summaries): <p>A list of <code>StackSummary</code> structures containing information about the specified stacks.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListStacksOutput::next_token): <p>If the output exceeds 1 MB in size, a string that identifies the next page of stacks. If no additional page exists, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListStacksError>`](crate::error::ListStacksError)
    pub fn list_stacks(&self) -> crate::client::fluent_builders::ListStacks {
        crate::client::fluent_builders::ListStacks::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListStackSetOperationResults`](crate::client::fluent_builders::ListStackSetOperationResults) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListStackSetOperationResults::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::ListStackSetOperationResults::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::ListStackSetOperationResults::set_stack_set_name): <p>The name or unique ID of the stack set that you want to get operation results for.</p>
    ///   - [`operation_id(impl Into<String>)`](crate::client::fluent_builders::ListStackSetOperationResults::operation_id) / [`set_operation_id(Option<String>)`](crate::client::fluent_builders::ListStackSetOperationResults::set_operation_id): <p>The ID of the stack set operation.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListStackSetOperationResults::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListStackSetOperationResults::set_next_token): <p>If the previous request didn't return all the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListStackSetOperationResults::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListStackSetOperationResults::set_max_results): <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::ListStackSetOperationResults::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::ListStackSetOperationResults::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    ///   - [`filters(Vec<OperationResultFilter>)`](crate::client::fluent_builders::ListStackSetOperationResults::filters) / [`set_filters(Option<Vec<OperationResultFilter>>)`](crate::client::fluent_builders::ListStackSetOperationResults::set_filters): <p>The filter to apply to operation results.</p>
    /// - On success, responds with [`ListStackSetOperationResultsOutput`](crate::output::ListStackSetOperationResultsOutput) with field(s):
    ///   - [`summaries(Option<Vec<StackSetOperationResultSummary>>)`](crate::output::ListStackSetOperationResultsOutput::summaries): <p>A list of <code>StackSetOperationResultSummary</code> structures that contain information about the specified operation results, for accounts and Amazon Web Services Regions that are included in the operation.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListStackSetOperationResultsOutput::next_token): <p>If the request doesn't return all results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call <code>ListOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListStackSetOperationResultsError>`](crate::error::ListStackSetOperationResultsError)
    pub fn list_stack_set_operation_results(
        &self,
    ) -> crate::client::fluent_builders::ListStackSetOperationResults {
        crate::client::fluent_builders::ListStackSetOperationResults::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListStackSetOperations`](crate::client::fluent_builders::ListStackSetOperations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListStackSetOperations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::ListStackSetOperations::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::ListStackSetOperations::set_stack_set_name): <p>The name or unique ID of the stack set that you want to get operation summaries for.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListStackSetOperations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListStackSetOperations::set_next_token): <p>If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSetOperations</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListStackSetOperations::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListStackSetOperations::set_max_results): <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::ListStackSetOperations::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::ListStackSetOperations::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`ListStackSetOperationsOutput`](crate::output::ListStackSetOperationsOutput) with field(s):
    ///   - [`summaries(Option<Vec<StackSetOperationSummary>>)`](crate::output::ListStackSetOperationsOutput::summaries): <p>A list of <code>StackSetOperationSummary</code> structures that contain summary information about operations for the specified stack set.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListStackSetOperationsOutput::next_token): <p>If the request doesn't return all results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call <code>ListOperationResults</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListStackSetOperationsError>`](crate::error::ListStackSetOperationsError)
    pub fn list_stack_set_operations(
        &self,
    ) -> crate::client::fluent_builders::ListStackSetOperations {
        crate::client::fluent_builders::ListStackSetOperations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListStackSets`](crate::client::fluent_builders::ListStackSets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListStackSets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListStackSets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListStackSets::set_next_token): <p>If the previous paginated request didn't return all the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackSets</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListStackSets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListStackSets::set_max_results): <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    ///   - [`status(StackSetStatus)`](crate::client::fluent_builders::ListStackSets::status) / [`set_status(Option<StackSetStatus>)`](crate::client::fluent_builders::ListStackSets::set_status): <p>The status of the stack sets that you want to get summary information about.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::ListStackSets::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::ListStackSets::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`ListStackSetsOutput`](crate::output::ListStackSetsOutput) with field(s):
    ///   - [`summaries(Option<Vec<StackSetSummary>>)`](crate::output::ListStackSetsOutput::summaries): <p>A list of <code>StackSetSummary</code> structures that contain information about the user's stack sets.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListStackSetsOutput::next_token): <p>If the request doesn't return all of the remaining results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If the request returns all results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListStackSetsError>`](crate::error::ListStackSetsError)
    pub fn list_stack_sets(&self) -> crate::client::fluent_builders::ListStackSets {
        crate::client::fluent_builders::ListStackSets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTypeRegistrations`](crate::client::fluent_builders::ListTypeRegistrations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTypeRegistrations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(RegistryType)`](crate::client::fluent_builders::ListTypeRegistrations::type) / [`set_type(Option<RegistryType>)`](crate::client::fluent_builders::ListTypeRegistrations::set_type): <p>The kind of extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::ListTypeRegistrations::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::ListTypeRegistrations::set_type_name): <p>The name of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`type_arn(impl Into<String>)`](crate::client::fluent_builders::ListTypeRegistrations::type_arn) / [`set_type_arn(Option<String>)`](crate::client::fluent_builders::ListTypeRegistrations::set_type_arn): <p>The Amazon Resource Name (ARN) of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`registration_status_filter(RegistrationStatus)`](crate::client::fluent_builders::ListTypeRegistrations::registration_status_filter) / [`set_registration_status_filter(Option<RegistrationStatus>)`](crate::client::fluent_builders::ListTypeRegistrations::set_registration_status_filter): <p>The current status of the extension registration request.</p>  <p>The default is <code>IN_PROGRESS</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTypeRegistrations::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTypeRegistrations::set_max_results): <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTypeRegistrations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTypeRegistrations::set_next_token): <p>If the previous paginated request didn't return all the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</p>
    /// - On success, responds with [`ListTypeRegistrationsOutput`](crate::output::ListTypeRegistrationsOutput) with field(s):
    ///   - [`registration_token_list(Option<Vec<String>>)`](crate::output::ListTypeRegistrationsOutput::registration_token_list): <p>A list of extension registration tokens.</p>  <p>Use <code> <code>DescribeTypeRegistration</code> </code> to return detailed information about a type registration request.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTypeRegistrationsOutput::next_token): <p>If the request doesn't return all the remaining results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If the request returns all results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListTypeRegistrationsError>`](crate::error::ListTypeRegistrationsError)
    pub fn list_type_registrations(&self) -> crate::client::fluent_builders::ListTypeRegistrations {
        crate::client::fluent_builders::ListTypeRegistrations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTypes`](crate::client::fluent_builders::ListTypes) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTypes::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`visibility(Visibility)`](crate::client::fluent_builders::ListTypes::visibility) / [`set_visibility(Option<Visibility>)`](crate::client::fluent_builders::ListTypes::set_visibility): <p>The scope at which the extensions are visible and usable in CloudFormation operations.</p>  <p>Valid values include:</p>  <ul>   <li> <p> <code>PRIVATE</code>: Extensions that are visible and usable within this account and region. This includes:</p>    <ul>     <li> <p>Private extensions you have registered in this account and region.</p> </li>     <li> <p>Public extensions that you have activated in this account and region.</p> </li>    </ul> </li>   <li> <p> <code>PUBLIC</code>: Extensions that are publicly visible and available to be activated within any Amazon Web Services account. This includes extensions from Amazon Web Services, in addition to third-party publishers.</p> </li>  </ul>  <p>The default is <code>PRIVATE</code>.</p>
    ///   - [`provisioning_type(ProvisioningType)`](crate::client::fluent_builders::ListTypes::provisioning_type) / [`set_provisioning_type(Option<ProvisioningType>)`](crate::client::fluent_builders::ListTypes::set_provisioning_type): <p>For resource types, the provisioning behavior of the resource type. CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p>  <p>Valid values include:</p>  <ul>   <li> <p> <code>FULLY_MUTABLE</code>: The resource type includes an update handler to process updates to the type during stack update operations.</p> </li>   <li> <p> <code>IMMUTABLE</code>: The resource type doesn't include an update handler, so the type can't be updated and must instead be replaced during stack update operations.</p> </li>   <li> <p> <code>NON_PROVISIONABLE</code>: The resource type doesn't include create, read, and delete handlers, and therefore can't actually be provisioned.</p> </li>  </ul>  <p>The default is <code>FULLY_MUTABLE</code>.</p>
    ///   - [`deprecated_status(DeprecatedStatus)`](crate::client::fluent_builders::ListTypes::deprecated_status) / [`set_deprecated_status(Option<DeprecatedStatus>)`](crate::client::fluent_builders::ListTypes::set_deprecated_status): <p>The deprecation status of the extension that you want to get summary information about.</p>  <p>Valid values include:</p>  <ul>   <li> <p> <code>LIVE</code>: The extension is registered for use in CloudFormation operations.</p> </li>   <li> <p> <code>DEPRECATED</code>: The extension has been deregistered and can no longer be used in CloudFormation operations.</p> </li>  </ul>
    ///   - [`r#type(RegistryType)`](crate::client::fluent_builders::ListTypes::type) / [`set_type(Option<RegistryType>)`](crate::client::fluent_builders::ListTypes::set_type): <p>The type of extension.</p>
    ///   - [`filters(TypeFilters)`](crate::client::fluent_builders::ListTypes::filters) / [`set_filters(Option<TypeFilters>)`](crate::client::fluent_builders::ListTypes::set_filters): <p>Filter criteria to use in determining which extensions to return.</p>  <p>Filters must be compatible with <code>Visibility</code> to return valid results. For example, specifying <code>AWS_TYPES</code> for <code>Category</code> and <code>PRIVATE</code> for <code>Visibility</code> returns an empty list of types, but specifying <code>PUBLIC</code> for <code>Visibility</code> returns the desired list.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTypes::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTypes::set_max_results): <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTypes::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTypes::set_next_token): <p>If the previous paginated request didn't return all the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</p>
    /// - On success, responds with [`ListTypesOutput`](crate::output::ListTypesOutput) with field(s):
    ///   - [`type_summaries(Option<Vec<TypeSummary>>)`](crate::output::ListTypesOutput::type_summaries): <p>A list of <code>TypeSummary</code> structures that contain information about the specified extensions.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTypesOutput::next_token): <p>If the request doesn't return all the remaining results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If the request returns all results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListTypesError>`](crate::error::ListTypesError)
    pub fn list_types(&self) -> crate::client::fluent_builders::ListTypes {
        crate::client::fluent_builders::ListTypes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTypeVersions`](crate::client::fluent_builders::ListTypeVersions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTypeVersions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(RegistryType)`](crate::client::fluent_builders::ListTypeVersions::type) / [`set_type(Option<RegistryType>)`](crate::client::fluent_builders::ListTypeVersions::set_type): <p>The kind of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::ListTypeVersions::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::ListTypeVersions::set_type_name): <p>The name of the extension for which you want version summary information.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::ListTypeVersions::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::ListTypeVersions::set_arn): <p>The Amazon Resource Name (ARN) of the extension for which you want version summary information.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTypeVersions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTypeVersions::set_max_results): <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTypeVersions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTypeVersions::set_next_token): <p>If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</p>
    ///   - [`deprecated_status(DeprecatedStatus)`](crate::client::fluent_builders::ListTypeVersions::deprecated_status) / [`set_deprecated_status(Option<DeprecatedStatus>)`](crate::client::fluent_builders::ListTypeVersions::set_deprecated_status): <p>The deprecation status of the extension versions that you want to get summary information about.</p>  <p>Valid values include:</p>  <ul>   <li> <p> <code>LIVE</code>: The extension version is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p> </li>   <li> <p> <code>DEPRECATED</code>: The extension version has been deregistered and can no longer be used in CloudFormation operations.</p> </li>  </ul>  <p>The default is <code>LIVE</code>.</p>
    ///   - [`publisher_id(impl Into<String>)`](crate::client::fluent_builders::ListTypeVersions::publisher_id) / [`set_publisher_id(Option<String>)`](crate::client::fluent_builders::ListTypeVersions::set_publisher_id): <p>The publisher ID of the extension publisher.</p>  <p>Extensions published by Amazon aren't assigned a publisher ID.</p>
    /// - On success, responds with [`ListTypeVersionsOutput`](crate::output::ListTypeVersionsOutput) with field(s):
    ///   - [`type_version_summaries(Option<Vec<TypeVersionSummary>>)`](crate::output::ListTypeVersionsOutput::type_version_summaries): <p>A list of <code>TypeVersionSummary</code> structures that contain information about the specified extension's versions.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTypeVersionsOutput::next_token): <p>If the request doesn't return all of the remaining results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If the request returns all results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListTypeVersionsError>`](crate::error::ListTypeVersionsError)
    pub fn list_type_versions(&self) -> crate::client::fluent_builders::ListTypeVersions {
        crate::client::fluent_builders::ListTypeVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PublishType`](crate::client::fluent_builders::PublishType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(ThirdPartyType)`](crate::client::fluent_builders::PublishType::type) / [`set_type(Option<ThirdPartyType>)`](crate::client::fluent_builders::PublishType::set_type): <p>The type of the extension.</p>  <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::PublishType::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::PublishType::set_arn): <p>The Amazon Resource Name (ARN) of the extension.</p>  <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::PublishType::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::PublishType::set_type_name): <p>The name of the extension.</p>  <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
    ///   - [`public_version_number(impl Into<String>)`](crate::client::fluent_builders::PublishType::public_version_number) / [`set_public_version_number(Option<String>)`](crate::client::fluent_builders::PublishType::set_public_version_number): <p>The version number to assign to this version of the extension.</p>  <p>Use the following format, and adhere to semantic versioning when assigning a version number to your extension:</p>  <p> <code>MAJOR.MINOR.PATCH</code> </p>  <p>For more information, see <a href="https://semver.org/">Semantic Versioning 2.0.0</a>.</p>  <p>If you don't specify a version number, CloudFormation increments the version number by one minor version release.</p>  <p>You cannot specify a version number the first time you publish a type. CloudFormation automatically sets the first version number to be <code>1.0.0</code>.</p>
    /// - On success, responds with [`PublishTypeOutput`](crate::output::PublishTypeOutput) with field(s):
    ///   - [`public_type_arn(Option<String>)`](crate::output::PublishTypeOutput::public_type_arn): <p>The Amazon Resource Name (ARN) assigned to the public extension upon publication.</p>
    /// - On failure, responds with [`SdkError<PublishTypeError>`](crate::error::PublishTypeError)
    pub fn publish_type(&self) -> crate::client::fluent_builders::PublishType {
        crate::client::fluent_builders::PublishType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RecordHandlerProgress`](crate::client::fluent_builders::RecordHandlerProgress) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bearer_token(impl Into<String>)`](crate::client::fluent_builders::RecordHandlerProgress::bearer_token) / [`set_bearer_token(Option<String>)`](crate::client::fluent_builders::RecordHandlerProgress::set_bearer_token): <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</p>
    ///   - [`operation_status(OperationStatus)`](crate::client::fluent_builders::RecordHandlerProgress::operation_status) / [`set_operation_status(Option<OperationStatus>)`](crate::client::fluent_builders::RecordHandlerProgress::set_operation_status): <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</p>
    ///   - [`current_operation_status(OperationStatus)`](crate::client::fluent_builders::RecordHandlerProgress::current_operation_status) / [`set_current_operation_status(Option<OperationStatus>)`](crate::client::fluent_builders::RecordHandlerProgress::set_current_operation_status): <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</p>
    ///   - [`status_message(impl Into<String>)`](crate::client::fluent_builders::RecordHandlerProgress::status_message) / [`set_status_message(Option<String>)`](crate::client::fluent_builders::RecordHandlerProgress::set_status_message): <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</p>
    ///   - [`error_code(HandlerErrorCode)`](crate::client::fluent_builders::RecordHandlerProgress::error_code) / [`set_error_code(Option<HandlerErrorCode>)`](crate::client::fluent_builders::RecordHandlerProgress::set_error_code): <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</p>
    ///   - [`resource_model(impl Into<String>)`](crate::client::fluent_builders::RecordHandlerProgress::resource_model) / [`set_resource_model(Option<String>)`](crate::client::fluent_builders::RecordHandlerProgress::set_resource_model): <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::RecordHandlerProgress::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::RecordHandlerProgress::set_client_request_token): <p>Reserved for use by the <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/what-is-cloudformation-cli.html">CloudFormation CLI</a>.</p>
    /// - On success, responds with [`RecordHandlerProgressOutput`](crate::output::RecordHandlerProgressOutput)

    /// - On failure, responds with [`SdkError<RecordHandlerProgressError>`](crate::error::RecordHandlerProgressError)
    pub fn record_handler_progress(&self) -> crate::client::fluent_builders::RecordHandlerProgress {
        crate::client::fluent_builders::RecordHandlerProgress::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RegisterPublisher`](crate::client::fluent_builders::RegisterPublisher) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_terms_and_conditions(bool)`](crate::client::fluent_builders::RegisterPublisher::accept_terms_and_conditions) / [`set_accept_terms_and_conditions(Option<bool>)`](crate::client::fluent_builders::RegisterPublisher::set_accept_terms_and_conditions): <p>Whether you accept the <a href="https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf">Terms and Conditions</a> for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to register to publish public extensions to the CloudFormation registry.</p>  <p>The default is <code>false</code>.</p>
    ///   - [`connection_arn(impl Into<String>)`](crate::client::fluent_builders::RegisterPublisher::connection_arn) / [`set_connection_arn(Option<String>)`](crate::client::fluent_builders::RegisterPublisher::set_connection_arn): <p>If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/publish-extension.html#publish-extension-prereqs">Registering your account to publish CloudFormation extensions</a> in the <i>CloudFormation CLI User Guide</i>.</p>
    /// - On success, responds with [`RegisterPublisherOutput`](crate::output::RegisterPublisherOutput) with field(s):
    ///   - [`publisher_id(Option<String>)`](crate::output::RegisterPublisherOutput::publisher_id): <p>The ID assigned this account by CloudFormation for publishing extensions.</p>
    /// - On failure, responds with [`SdkError<RegisterPublisherError>`](crate::error::RegisterPublisherError)
    pub fn register_publisher(&self) -> crate::client::fluent_builders::RegisterPublisher {
        crate::client::fluent_builders::RegisterPublisher::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RegisterType`](crate::client::fluent_builders::RegisterType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(RegistryType)`](crate::client::fluent_builders::RegisterType::type) / [`set_type(Option<RegistryType>)`](crate::client::fluent_builders::RegisterType::set_type): <p>The kind of extension.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::RegisterType::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::RegisterType::set_type_name): <p>The name of the extension being registered.</p>  <p>We suggest that extension names adhere to the following patterns:</p>  <ul>   <li> <p>For resource types, <i>company_or_organization</i>::<i>service</i>::<i>type</i>.</p> </li>   <li> <p>For modules, <i>company_or_organization</i>::<i>service</i>::<i>type</i>::MODULE.</p> </li>   <li> <p>For hooks, <i>MyCompany</i>::<i>Testing</i>::<i>MyTestHook</i>.</p> </li>  </ul> <note>   <p>The following organization namespaces are reserved and can't be used in your extension names:</p>   <ul>    <li> <p> <code>Alexa</code> </p> </li>    <li> <p> <code>AMZN</code> </p> </li>    <li> <p> <code>Amazon</code> </p> </li>    <li> <p> <code>AWS</code> </p> </li>    <li> <p> <code>Custom</code> </p> </li>    <li> <p> <code>Dev</code> </p> </li>   </ul>  </note>
    ///   - [`schema_handler_package(impl Into<String>)`](crate::client::fluent_builders::RegisterType::schema_handler_package) / [`set_schema_handler_package(Option<String>)`](crate::client::fluent_builders::RegisterType::set_schema_handler_package): <p>A URL to the S3 bucket containing the extension project package that contains the necessary files for the extension you want to register.</p>  <p>For information about generating a schema handler package for the extension you want to register, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-cli-submit.html">submit</a> in the <i>CloudFormation CLI User Guide</i>.</p> <note>   <p>The user registering the extension must be able to access the package in the S3 bucket. That's, the user needs to have <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html">GetObject</a> permissions for the schema handler package. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html">Actions, Resources, and Condition Keys for Amazon S3</a> in the <i>Identity and Access Management User Guide</i>.</p>  </note>
    ///   - [`logging_config(LoggingConfig)`](crate::client::fluent_builders::RegisterType::logging_config) / [`set_logging_config(Option<LoggingConfig>)`](crate::client::fluent_builders::RegisterType::set_logging_config): <p>Specifies logging configuration information for an extension.</p>
    ///   - [`execution_role_arn(impl Into<String>)`](crate::client::fluent_builders::RegisterType::execution_role_arn) / [`set_execution_role_arn(Option<String>)`](crate::client::fluent_builders::RegisterType::set_execution_role_arn): <p>The Amazon Resource Name (ARN) of the IAM role for CloudFormation to assume when invoking the extension.</p>  <p>For CloudFormation to assume the specified execution role, the role must contain a trust relationship with the CloudFormation service principle (<code>resources.cloudformation.amazonaws.com</code>). For more information about adding trust relationships, see <a href="IAM/latest/UserGuide/roles-managingrole-editing-console.html#roles-managingrole_edit-trust-policy">Modifying a role trust policy</a> in the <i>Identity and Access Management User Guide</i>.</p>  <p>If your extension calls Amazon Web Services APIs in any of its handlers, you must create an <i> <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution role</a> </i> that includes the necessary permissions to call those Amazon Web Services APIs, and provision that execution role in your account. When CloudFormation needs to invoke the resource type handler, CloudFormation assumes this execution role to create a temporary session token, which it then passes to the resource type handler, thereby supplying your resource type with the appropriate credentials.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::RegisterType::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::RegisterType::set_client_request_token): <p>A unique identifier that acts as an idempotency key for this registration request. Specifying a client request token prevents CloudFormation from generating more than one version of an extension from the same registration request, even if the request is submitted multiple times.</p>
    /// - On success, responds with [`RegisterTypeOutput`](crate::output::RegisterTypeOutput) with field(s):
    ///   - [`registration_token(Option<String>)`](crate::output::RegisterTypeOutput::registration_token): <p>The identifier for this registration request.</p>  <p>Use this registration token when calling <code> <code>DescribeTypeRegistration</code> </code>, which returns information about the status and IDs of the extension registration.</p>
    /// - On failure, responds with [`SdkError<RegisterTypeError>`](crate::error::RegisterTypeError)
    pub fn register_type(&self) -> crate::client::fluent_builders::RegisterType {
        crate::client::fluent_builders::RegisterType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RollbackStack`](crate::client::fluent_builders::RollbackStack) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::RollbackStack::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::RollbackStack::set_stack_name): <p>The name that's associated with the stack.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::RollbackStack::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::RollbackStack::set_role_arn): <p>The Amazon Resource Name (ARN) of an Identity and Access Management role that CloudFormation assumes to rollback the stack.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::RollbackStack::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::RollbackStack::set_client_request_token): <p>A unique identifier for this <code>RollbackStack</code> request.</p>
    /// - On success, responds with [`RollbackStackOutput`](crate::output::RollbackStackOutput) with field(s):
    ///   - [`stack_id(Option<String>)`](crate::output::RollbackStackOutput::stack_id): <p>Unique identifier of the stack.</p>
    /// - On failure, responds with [`SdkError<RollbackStackError>`](crate::error::RollbackStackError)
    pub fn rollback_stack(&self) -> crate::client::fluent_builders::RollbackStack {
        crate::client::fluent_builders::RollbackStack::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SetStackPolicy`](crate::client::fluent_builders::SetStackPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::SetStackPolicy::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::SetStackPolicy::set_stack_name): <p>The name or unique stack ID that you want to associate a policy with.</p>
    ///   - [`stack_policy_body(impl Into<String>)`](crate::client::fluent_builders::SetStackPolicy::stack_policy_body) / [`set_stack_policy_body(Option<String>)`](crate::client::fluent_builders::SetStackPolicy::set_stack_policy_body): <p>Structure containing the stack policy body. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html"> Prevent updates to stack resources</a> in the CloudFormation User Guide. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p>
    ///   - [`stack_policy_url(impl Into<String>)`](crate::client::fluent_builders::SetStackPolicy::stack_policy_url) / [`set_stack_policy_url(Option<String>)`](crate::client::fluent_builders::SetStackPolicy::set_stack_policy_url): <p>Location of a file containing the stack policy. The URL must point to a policy (maximum size: 16 KB) located in an Amazon S3 bucket in the same Amazon Web Services Region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p>
    /// - On success, responds with [`SetStackPolicyOutput`](crate::output::SetStackPolicyOutput)

    /// - On failure, responds with [`SdkError<SetStackPolicyError>`](crate::error::SetStackPolicyError)
    pub fn set_stack_policy(&self) -> crate::client::fluent_builders::SetStackPolicy {
        crate::client::fluent_builders::SetStackPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SetTypeConfiguration`](crate::client::fluent_builders::SetTypeConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`type_arn(impl Into<String>)`](crate::client::fluent_builders::SetTypeConfiguration::type_arn) / [`set_type_arn(Option<String>)`](crate::client::fluent_builders::SetTypeConfiguration::set_type_arn): <p>The Amazon Resource Name (ARN) for the extension, in this account and region.</p>  <p>For public extensions, this will be the ARN assigned when you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ActivateType.html">activate the type</a> in this account and region. For private extensions, this will be the ARN assigned when you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html">register the type</a> in this account and region.</p>  <p>Do not include the extension versions suffix at the end of the ARN. You can set the configuration for an extension, but not for a specific extension version.</p>
    ///   - [`configuration(impl Into<String>)`](crate::client::fluent_builders::SetTypeConfiguration::configuration) / [`set_configuration(Option<String>)`](crate::client::fluent_builders::SetTypeConfiguration::set_configuration): <p>The configuration data for the extension, in this account and region.</p>  <p>The configuration data must be formatted as JSON, and validate against the schema returned in the <code>ConfigurationSchema</code> response element of <a href="AWSCloudFormation/latest/APIReference/API_DescribeType.html">API_DescribeType</a>. For more information, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-model.html#resource-type-howto-configuration">Defining account-level configuration data for an extension</a> in the <i>CloudFormation CLI User Guide</i>.</p>
    ///   - [`configuration_alias(impl Into<String>)`](crate::client::fluent_builders::SetTypeConfiguration::configuration_alias) / [`set_configuration_alias(Option<String>)`](crate::client::fluent_builders::SetTypeConfiguration::set_configuration_alias): <p>An alias by which to refer to this extension configuration data.</p>  <p>Conditional: Specifying a configuration alias is required when setting a configuration for a resource type extension.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::SetTypeConfiguration::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::SetTypeConfiguration::set_type_name): <p>The name of the extension.</p>  <p>Conditional: You must specify <code>ConfigurationArn</code>, or <code>Type</code> and <code>TypeName</code>.</p>
    ///   - [`r#type(ThirdPartyType)`](crate::client::fluent_builders::SetTypeConfiguration::type) / [`set_type(Option<ThirdPartyType>)`](crate::client::fluent_builders::SetTypeConfiguration::set_type): <p>The type of extension.</p>  <p>Conditional: You must specify <code>ConfigurationArn</code>, or <code>Type</code> and <code>TypeName</code>.</p>
    /// - On success, responds with [`SetTypeConfigurationOutput`](crate::output::SetTypeConfigurationOutput) with field(s):
    ///   - [`configuration_arn(Option<String>)`](crate::output::SetTypeConfigurationOutput::configuration_arn): <p>The Amazon Resource Name (ARN) for the configuration data, in this account and region.</p>  <p>Conditional: You must specify <code>ConfigurationArn</code>, or <code>Type</code> and <code>TypeName</code>.</p>
    /// - On failure, responds with [`SdkError<SetTypeConfigurationError>`](crate::error::SetTypeConfigurationError)
    pub fn set_type_configuration(&self) -> crate::client::fluent_builders::SetTypeConfiguration {
        crate::client::fluent_builders::SetTypeConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SetTypeDefaultVersion`](crate::client::fluent_builders::SetTypeDefaultVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::SetTypeDefaultVersion::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::SetTypeDefaultVersion::set_arn): <p>The Amazon Resource Name (ARN) of the extension for which you want version summary information.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`r#type(RegistryType)`](crate::client::fluent_builders::SetTypeDefaultVersion::type) / [`set_type(Option<RegistryType>)`](crate::client::fluent_builders::SetTypeDefaultVersion::set_type): <p>The kind of extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::SetTypeDefaultVersion::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::SetTypeDefaultVersion::set_type_name): <p>The name of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::SetTypeDefaultVersion::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::SetTypeDefaultVersion::set_version_id): <p>The ID of a specific version of the extension. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the extension version when it is registered.</p>
    /// - On success, responds with [`SetTypeDefaultVersionOutput`](crate::output::SetTypeDefaultVersionOutput)

    /// - On failure, responds with [`SdkError<SetTypeDefaultVersionError>`](crate::error::SetTypeDefaultVersionError)
    pub fn set_type_default_version(
        &self,
    ) -> crate::client::fluent_builders::SetTypeDefaultVersion {
        crate::client::fluent_builders::SetTypeDefaultVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SignalResource`](crate::client::fluent_builders::SignalResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::SignalResource::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::SignalResource::set_stack_name): <p>The stack name or unique stack ID that includes the resource that you want to signal.</p>
    ///   - [`logical_resource_id(impl Into<String>)`](crate::client::fluent_builders::SignalResource::logical_resource_id) / [`set_logical_resource_id(Option<String>)`](crate::client::fluent_builders::SignalResource::set_logical_resource_id): <p>The logical ID of the resource that you want to signal. The logical ID is the name of the resource that given in the template.</p>
    ///   - [`unique_id(impl Into<String>)`](crate::client::fluent_builders::SignalResource::unique_id) / [`set_unique_id(Option<String>)`](crate::client::fluent_builders::SignalResource::set_unique_id): <p>A unique ID of the signal. When you signal Amazon EC2 instances or Auto Scaling groups, specify the instance ID that you are signaling as the unique ID. If you send multiple signals to a single resource (such as signaling a wait condition), each signal requires a different unique ID.</p>
    ///   - [`status(ResourceSignalStatus)`](crate::client::fluent_builders::SignalResource::status) / [`set_status(Option<ResourceSignalStatus>)`](crate::client::fluent_builders::SignalResource::set_status): <p>The status of the signal, which is either success or failure. A failure signal causes CloudFormation to immediately fail the stack creation or update.</p>
    /// - On success, responds with [`SignalResourceOutput`](crate::output::SignalResourceOutput)

    /// - On failure, responds with [`SdkError<SignalResourceError>`](crate::error::SignalResourceError)
    pub fn signal_resource(&self) -> crate::client::fluent_builders::SignalResource {
        crate::client::fluent_builders::SignalResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`StopStackSetOperation`](crate::client::fluent_builders::StopStackSetOperation) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::StopStackSetOperation::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::StopStackSetOperation::set_stack_set_name): <p>The name or unique ID of the stack set that you want to stop the operation for.</p>
    ///   - [`operation_id(impl Into<String>)`](crate::client::fluent_builders::StopStackSetOperation::operation_id) / [`set_operation_id(Option<String>)`](crate::client::fluent_builders::StopStackSetOperation::set_operation_id): <p>The ID of the stack operation.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::StopStackSetOperation::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::StopStackSetOperation::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`StopStackSetOperationOutput`](crate::output::StopStackSetOperationOutput)

    /// - On failure, responds with [`SdkError<StopStackSetOperationError>`](crate::error::StopStackSetOperationError)
    pub fn stop_stack_set_operation(
        &self,
    ) -> crate::client::fluent_builders::StopStackSetOperation {
        crate::client::fluent_builders::StopStackSetOperation::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TestType`](crate::client::fluent_builders::TestType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::TestType::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::TestType::set_arn): <p>The Amazon Resource Name (ARN) of the extension.</p>  <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
    ///   - [`r#type(ThirdPartyType)`](crate::client::fluent_builders::TestType::type) / [`set_type(Option<ThirdPartyType>)`](crate::client::fluent_builders::TestType::set_type): <p>The type of the extension to test.</p>  <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::TestType::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::TestType::set_type_name): <p>The name of the extension to test.</p>  <p>Conditional: You must specify <code>Arn</code>, or <code>TypeName</code> and <code>Type</code>.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::TestType::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::TestType::set_version_id): <p>The version of the extension to test.</p>  <p>You can specify the version id with either <code>Arn</code>, or with <code>TypeName</code> and <code>Type</code>.</p>  <p>If you don't specify a version, CloudFormation uses the default version of the extension in this account and region for testing.</p>
    ///   - [`log_delivery_bucket(impl Into<String>)`](crate::client::fluent_builders::TestType::log_delivery_bucket) / [`set_log_delivery_bucket(Option<String>)`](crate::client::fluent_builders::TestType::set_log_delivery_bucket): <p>The S3 bucket to which CloudFormation delivers the contract test execution logs.</p>  <p>CloudFormation delivers the logs by the time contract testing has completed and the extension has been assigned a test type status of <code>PASSED</code> or <code>FAILED</code>.</p>  <p>The user calling <code>TestType</code> must be able to access items in the specified S3 bucket. Specifically, the user needs the following permissions:</p>  <ul>   <li> <p> <code>GetObject</code> </p> </li>   <li> <p> <code>PutObject</code> </p> </li>  </ul>  <p>For more information, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html">Actions, Resources, and Condition Keys for Amazon S3</a> in the <i>Amazon Web Services Identity and Access Management User Guide</i>.</p>
    /// - On success, responds with [`TestTypeOutput`](crate::output::TestTypeOutput) with field(s):
    ///   - [`type_version_arn(Option<String>)`](crate::output::TestTypeOutput::type_version_arn): <p>The Amazon Resource Name (ARN) of the extension.</p>
    /// - On failure, responds with [`SdkError<TestTypeError>`](crate::error::TestTypeError)
    pub fn test_type(&self) -> crate::client::fluent_builders::TestType {
        crate::client::fluent_builders::TestType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateStack`](crate::client::fluent_builders::UpdateStack) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::UpdateStack::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::UpdateStack::set_stack_name): <p>The name or unique stack ID of the stack to update.</p>
    ///   - [`template_body(impl Into<String>)`](crate::client::fluent_builders::UpdateStack::template_body) / [`set_template_body(Option<String>)`](crate::client::fluent_builders::UpdateStack::set_template_body): <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.)</p>  <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
    ///   - [`template_url(impl Into<String>)`](crate::client::fluent_builders::UpdateStack::template_url) / [`set_template_url(Option<String>)`](crate::client::fluent_builders::UpdateStack::set_template_url): <p>Location of file containing the template body. The URL must point to a template that's located in an Amazon S3 bucket or a Systems Manager document. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
    ///   - [`use_previous_template(bool)`](crate::client::fluent_builders::UpdateStack::use_previous_template) / [`set_use_previous_template(Option<bool>)`](crate::client::fluent_builders::UpdateStack::set_use_previous_template): <p>Reuse the existing template that is associated with the stack that you are updating.</p>  <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code>, <code>TemplateURL</code>, or set the <code>UsePreviousTemplate</code> to <code>true</code>.</p>
    ///   - [`stack_policy_during_update_body(impl Into<String>)`](crate::client::fluent_builders::UpdateStack::stack_policy_during_update_body) / [`set_stack_policy_during_update_body(Option<String>)`](crate::client::fluent_builders::UpdateStack::set_stack_policy_during_update_body): <p>Structure containing the temporary overriding stack policy body. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p>  <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you don't specify a stack policy, the current policy that is associated with the stack will be used.</p>
    ///   - [`stack_policy_during_update_url(impl Into<String>)`](crate::client::fluent_builders::UpdateStack::stack_policy_during_update_url) / [`set_stack_policy_during_update_url(Option<String>)`](crate::client::fluent_builders::UpdateStack::set_stack_policy_during_update_url): <p>Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyDuringUpdateBody</code> or the <code>StackPolicyDuringUpdateURL</code> parameter, but not both.</p>  <p>If you want to update protected resources, specify a temporary overriding stack policy during this update. If you don't specify a stack policy, the current policy that is associated with the stack will be used.</p>
    ///   - [`parameters(Vec<Parameter>)`](crate::client::fluent_builders::UpdateStack::parameters) / [`set_parameters(Option<Vec<Parameter>>)`](crate::client::fluent_builders::UpdateStack::set_parameters): <p>A list of <code>Parameter</code> structures that specify input parameters for the stack. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html">Parameter</a> data type.</p>
    ///   - [`capabilities(Vec<Capability>)`](crate::client::fluent_builders::UpdateStack::capabilities) / [`set_capabilities(Option<Vec<Capability>>)`](crate::client::fluent_builders::UpdateStack::set_capabilities): <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to update the stack.</p>  <ul>   <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p>    <ul>     <li> <p>If you have IAM resources, you can specify either capability.</p> </li>     <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li>     <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li>    </ul> <p>If your stack template contains these resources, we suggest that you review all permissions associated with them and edit their permissions if necessary.</p>    <ul>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html">AWS::IAM::UserToGroupAddition</a> </p> </li>    </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p> </li>   <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually updating the stack. If your stack template contains one or more macros, and you choose to update a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.</p> <p>If you want to update a stack from a stack template that contains macros <i>and</i> nested stacks, you must update the stack directly from the template using this capability.</p> <important>     <p>You should only update stacks directly from a stack template that contains macros if you know what processing the macro performs.</p>     <p>Each macro relies on an underlying Lambda service function for processing stack templates. Be aware that the Lambda function owner can update the function operation without CloudFormation being notified.</p>    </important> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> </li>  </ul>
    ///   - [`resource_types(Vec<String>)`](crate::client::fluent_builders::UpdateStack::resource_types) / [`set_resource_types(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateStack::set_resource_types): <p>The template resource types that you have permissions to work with for this update stack action, such as <code>AWS::EC2::Instance</code>, <code>AWS::EC2::*</code>, or <code>Custom::MyCustomInstance</code>.</p>  <p>If the list of resource types doesn't include a resource that you're updating, the stack update fails. By default, CloudFormation grants permissions to all resource types. Identity and Access Management (IAM) uses this parameter for CloudFormation-specific condition keys in IAM policies. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html">Controlling Access with Identity and Access Management</a>.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateStack::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateStack::set_role_arn): <p>The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes to update the stack. CloudFormation uses the role's credentials to make calls on your behalf. CloudFormation always uses this role for all future operations on the stack. Provided that users have permission to operate on the stack, CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.</p>  <p>If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that is generated from your user credentials.</p>
    ///   - [`rollback_configuration(RollbackConfiguration)`](crate::client::fluent_builders::UpdateStack::rollback_configuration) / [`set_rollback_configuration(Option<RollbackConfiguration>)`](crate::client::fluent_builders::UpdateStack::set_rollback_configuration): <p>The rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.</p>
    ///   - [`stack_policy_body(impl Into<String>)`](crate::client::fluent_builders::UpdateStack::stack_policy_body) / [`set_stack_policy_body(Option<String>)`](crate::client::fluent_builders::UpdateStack::set_stack_policy_body): <p>Structure containing a new stack policy body. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p>  <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you don't specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
    ///   - [`stack_policy_url(impl Into<String>)`](crate::client::fluent_builders::UpdateStack::stack_policy_url) / [`set_stack_policy_url(Option<String>)`](crate::client::fluent_builders::UpdateStack::set_stack_policy_url): <p>Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same Region as the stack. You can specify either the <code>StackPolicyBody</code> or the <code>StackPolicyURL</code> parameter, but not both.</p>  <p>You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you don't specify a stack policy, the current policy that is associated with the stack is unchanged.</p>
    ///   - [`notification_ar_ns(Vec<String>)`](crate::client::fluent_builders::UpdateStack::notification_ar_ns) / [`set_notification_ar_ns(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateStack::set_notification_ar_ns): <p>Amazon Simple Notification Service topic Amazon Resource Names (ARNs) that CloudFormation associates with the stack. Specify an empty list to remove all notification topics.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::UpdateStack::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::UpdateStack::set_tags): <p>Key-value pairs to associate with this stack. CloudFormation also propagates these tags to supported resources in the stack. You can specify a maximum number of 50 tags.</p>  <p>If you don't specify this parameter, CloudFormation doesn't modify the stack's tags. If you specify an empty value, CloudFormation removes all associated tags.</p>
    ///   - [`disable_rollback(bool)`](crate::client::fluent_builders::UpdateStack::disable_rollback) / [`set_disable_rollback(Option<bool>)`](crate::client::fluent_builders::UpdateStack::set_disable_rollback): <p>Preserve the state of previously provisioned resources when an operation fails.</p>  <p>Default: <code>False</code> </p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::UpdateStack::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::UpdateStack::set_client_request_token): <p>A unique identifier for this <code>UpdateStack</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to update a stack with the same name. You might retry <code>UpdateStack</code> requests to ensure that CloudFormation successfully received them.</p>  <p>All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a <code>CreateStack</code> operation with the token <code>token1</code>, then all the <code>StackEvents</code> generated by that operation will have <code>ClientRequestToken</code> set as <code>token1</code>.</p>  <p>In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format <i>Console-StackOperation-ID</i>, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: <code>Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002</code>.</p>
    /// - On success, responds with [`UpdateStackOutput`](crate::output::UpdateStackOutput) with field(s):
    ///   - [`stack_id(Option<String>)`](crate::output::UpdateStackOutput::stack_id): <p>Unique identifier of the stack.</p>
    /// - On failure, responds with [`SdkError<UpdateStackError>`](crate::error::UpdateStackError)
    pub fn update_stack(&self) -> crate::client::fluent_builders::UpdateStack {
        crate::client::fluent_builders::UpdateStack::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateStackInstances`](crate::client::fluent_builders::UpdateStackInstances) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::UpdateStackInstances::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::UpdateStackInstances::set_stack_set_name): <p>The name or unique ID of the stack set associated with the stack instances.</p>
    ///   - [`accounts(Vec<String>)`](crate::client::fluent_builders::UpdateStackInstances::accounts) / [`set_accounts(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateStackInstances::set_accounts): <p>[Self-managed permissions] The names of one or more Amazon Web Services accounts for which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and Amazon Web Services Regions.</p>  <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    ///   - [`deployment_targets(DeploymentTargets)`](crate::client::fluent_builders::UpdateStackInstances::deployment_targets) / [`set_deployment_targets(Option<DeploymentTargets>)`](crate::client::fluent_builders::UpdateStackInstances::set_deployment_targets): <p>[Service-managed permissions] The Organizations accounts for which you want to update parameter values for stack instances. If your update targets OUs, the overridden parameter values only apply to the accounts that are currently in the target OUs and their child OUs. Accounts added to the target OUs and their child OUs in the future won't use the overridden values.</p>  <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    ///   - [`regions(Vec<String>)`](crate::client::fluent_builders::UpdateStackInstances::regions) / [`set_regions(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateStackInstances::set_regions): <p>The names of one or more Amazon Web Services Regions in which you want to update parameter values for stack instances. The overridden parameter values will be applied to all stack instances in the specified accounts and Amazon Web Services Regions.</p>
    ///   - [`parameter_overrides(Vec<Parameter>)`](crate::client::fluent_builders::UpdateStackInstances::parameter_overrides) / [`set_parameter_overrides(Option<Vec<Parameter>>)`](crate::client::fluent_builders::UpdateStackInstances::set_parameter_overrides): <p>A list of input parameters whose values you want to update for the specified stack instances.</p>  <p>Any overridden parameter values will be applied to all stack instances in the specified accounts and Amazon Web Services Regions. When specifying parameters and their values, be aware of how CloudFormation sets parameter values during stack instance update operations:</p>  <ul>   <li> <p>To override the current value for a parameter, include the parameter and specify its value.</p> </li>   <li> <p>To leave an overridden parameter set to its present value, include the parameter and specify <code>UsePreviousValue</code> as <code>true</code>. (You can't specify both a value and set <code>UsePreviousValue</code> to <code>true</code>.)</p> </li>   <li> <p>To set an overridden parameter back to the value specified in the stack set, specify a parameter list but don't include the parameter in the list.</p> </li>   <li> <p>To leave all parameters set to their present values, don't specify this property at all.</p> </li>  </ul>  <p>During stack set updates, any parameter values overridden for a stack instance aren't updated, but retain their overridden value.</p>  <p>You can only override the parameter <i>values</i> that are specified in the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to update the stack set template. If you add a parameter to a template, before you can override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and parameter value specified in the stack set. Once a stack instance has been updated with the new parameter, you can then override the parameter value using <code>UpdateStackInstances</code>.</p>
    ///   - [`operation_preferences(StackSetOperationPreferences)`](crate::client::fluent_builders::UpdateStackInstances::operation_preferences) / [`set_operation_preferences(Option<StackSetOperationPreferences>)`](crate::client::fluent_builders::UpdateStackInstances::set_operation_preferences): <p>Preferences for how CloudFormation performs this stack set operation.</p>
    ///   - [`operation_id(impl Into<String>)`](crate::client::fluent_builders::UpdateStackInstances::operation_id) / [`set_operation_id(Option<String>)`](crate::client::fluent_builders::UpdateStackInstances::set_operation_id): <p>The unique identifier for this stack set operation.</p>  <p>The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that CloudFormation successfully received them.</p>  <p>If you don't specify an operation ID, the SDK generates one automatically.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::UpdateStackInstances::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::UpdateStackInstances::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    /// - On success, responds with [`UpdateStackInstancesOutput`](crate::output::UpdateStackInstancesOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::output::UpdateStackInstancesOutput::operation_id): <p>The unique identifier for this stack set operation.</p>
    /// - On failure, responds with [`SdkError<UpdateStackInstancesError>`](crate::error::UpdateStackInstancesError)
    pub fn update_stack_instances(&self) -> crate::client::fluent_builders::UpdateStackInstances {
        crate::client::fluent_builders::UpdateStackInstances::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateStackSet`](crate::client::fluent_builders::UpdateStackSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_set_name(impl Into<String>)`](crate::client::fluent_builders::UpdateStackSet::stack_set_name) / [`set_stack_set_name(Option<String>)`](crate::client::fluent_builders::UpdateStackSet::set_stack_set_name): <p>The name or unique ID of the stack set that you want to update.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateStackSet::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateStackSet::set_description): <p>A brief description of updates that you are making.</p>
    ///   - [`template_body(impl Into<String>)`](crate::client::fluent_builders::UpdateStackSet::template_body) / [`set_template_body(Option<String>)`](crate::client::fluent_builders::UpdateStackSet::set_template_body): <p>The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
    ///   - [`template_url(impl Into<String>)`](crate::client::fluent_builders::UpdateStackSet::template_url) / [`set_template_url(Option<String>)`](crate::client::fluent_builders::UpdateStackSet::set_template_url): <p>The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket or a Systems Manager document. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
    ///   - [`use_previous_template(bool)`](crate::client::fluent_builders::UpdateStackSet::use_previous_template) / [`set_use_previous_template(Option<bool>)`](crate::client::fluent_builders::UpdateStackSet::set_use_previous_template): <p>Use the existing template that's associated with the stack set that you're updating.</p>  <p>Conditional: You must specify only one of the following parameters: <code>TemplateBody</code> or <code>TemplateURL</code>—or set <code>UsePreviousTemplate</code> to true.</p>
    ///   - [`parameters(Vec<Parameter>)`](crate::client::fluent_builders::UpdateStackSet::parameters) / [`set_parameters(Option<Vec<Parameter>>)`](crate::client::fluent_builders::UpdateStackSet::set_parameters): <p>A list of input parameters for the stack set template.</p>
    ///   - [`capabilities(Vec<Capability>)`](crate::client::fluent_builders::UpdateStackSet::capabilities) / [`set_capabilities(Option<Vec<Capability>>)`](crate::client::fluent_builders::UpdateStackSet::set_capabilities): <p>In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to update the stack set and its associated stack instances.</p>  <ul>   <li> <p> <code>CAPABILITY_IAM</code> and <code>CAPABILITY_NAMED_IAM</code> </p> <p>Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.</p> <p>The following IAM resources require you to specify either the <code>CAPABILITY_IAM</code> or <code>CAPABILITY_NAMED_IAM</code> capability.</p>    <ul>     <li> <p>If you have IAM resources, you can specify either capability.</p> </li>     <li> <p>If you have IAM resources with custom names, you <i>must</i> specify <code>CAPABILITY_NAMED_IAM</code>.</p> </li>     <li> <p>If you don't specify either of these capabilities, CloudFormation returns an <code>InsufficientCapabilities</code> error.</p> </li>    </ul> <p>If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.</p>    <ul>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html"> AWS::IAM::AccessKey</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html"> AWS::IAM::Group</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html"> AWS::IAM::InstanceProfile</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html"> AWS::IAM::Policy</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html"> AWS::IAM::Role</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html"> AWS::IAM::User</a> </p> </li>     <li> <p> <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html"> AWS::IAM::UserToGroupAddition</a> </p> </li>    </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p> </li>   <li> <p> <code>CAPABILITY_AUTO_EXPAND</code> </p> <p>Some templates reference macros. If your stack set template references one or more macros, you must update the stack set directly from the processed template, without first reviewing the resulting changes in a change set. To update the stack set directly, you must acknowledge this capability. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html">Using CloudFormation Macros to Perform Custom Processing on Templates</a>.</p> <important>     <p>Stack sets with service-managed permissions do not currently support the use of macros in templates. (This includes the <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html">AWS::Include</a> and <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html">AWS::Serverless</a> transforms, which are macros hosted by CloudFormation.) Even if you specify this capability for a stack set with service-managed permissions, if you reference a macro in your template the stack set operation will fail.</p>    </important> </li>  </ul>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::UpdateStackSet::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::UpdateStackSet::set_tags): <p>The key-value pairs to associate with this stack set and the stacks created from it. CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.</p>  <p>If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:</p>  <ul>   <li> <p>If you don't specify this parameter, CloudFormation doesn't modify the stack's tags.</p> </li>   <li> <p>If you specify <i>any</i> tags using this parameter, you must specify <i>all</i> the tags that you want associated with this stack set, even tags you've specified before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well.</p> </li>   <li> <p>If you specify an empty value, CloudFormation removes all currently associated tags.</p> </li>  </ul>  <p>If you specify new tags as part of an <code>UpdateStackSet</code> action, CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire <code>UpdateStackSet</code> action fails with an <code>access denied</code> error, and the stack set is not updated.</p>
    ///   - [`operation_preferences(StackSetOperationPreferences)`](crate::client::fluent_builders::UpdateStackSet::operation_preferences) / [`set_operation_preferences(Option<StackSetOperationPreferences>)`](crate::client::fluent_builders::UpdateStackSet::set_operation_preferences): <p>Preferences for how CloudFormation performs this stack set operation.</p>
    ///   - [`administration_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateStackSet::administration_role_arn) / [`set_administration_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateStackSet::set_administration_role_arn): <p>The Amazon Resource Name (ARN) of the IAM role to use to update this stack set.</p>  <p>Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Granting Permissions for Stack Set Operations</a> in the <i>CloudFormation User Guide</i>.</p>  <p>If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.</p>
    ///   - [`execution_role_name(impl Into<String>)`](crate::client::fluent_builders::UpdateStackSet::execution_role_name) / [`set_execution_role_name(Option<String>)`](crate::client::fluent_builders::UpdateStackSet::set_execution_role_name): <p>The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, CloudFormation uses the <code>AWSCloudFormationStackSetExecutionRole</code> role for the stack set operation.</p>  <p>Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets.</p>  <p>If you specify a customized execution role, CloudFormation uses that role to update the stack. If you do not specify a customized execution role, CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.</p>
    ///   - [`deployment_targets(DeploymentTargets)`](crate::client::fluent_builders::UpdateStackSet::deployment_targets) / [`set_deployment_targets(Option<DeploymentTargets>)`](crate::client::fluent_builders::UpdateStackSet::set_deployment_targets): <p>[Service-managed permissions] The Organizations accounts in which to update associated stack instances.</p>  <p>To update all the stack instances associated with this stack set, do not specify <code>DeploymentTargets</code> or <code>Regions</code>.</p>  <p>If the stack set update includes changes to the template (that is, if <code>TemplateBody</code> or <code>TemplateURL</code> is specified), or the <code>Parameters</code>, CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and Amazon Web Services Regions. If the stack set update doesn't include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.</p>
    ///   - [`permission_model(PermissionModels)`](crate::client::fluent_builders::UpdateStackSet::permission_model) / [`set_permission_model(Option<PermissionModels>)`](crate::client::fluent_builders::UpdateStackSet::set_permission_model): <p>Describes how the IAM roles required for stack set operations are created. You cannot modify <code>PermissionModel</code> if there are stack instances associated with your stack set.</p>  <ul>   <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li>   <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li>  </ul>
    ///   - [`auto_deployment(AutoDeployment)`](crate::client::fluent_builders::UpdateStackSet::auto_deployment) / [`set_auto_deployment(Option<AutoDeployment>)`](crate::client::fluent_builders::UpdateStackSet::set_auto_deployment): <p>[Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organization or organizational unit (OU).</p>  <p>If you specify <code>AutoDeployment</code>, don't specify <code>DeploymentTargets</code> or <code>Regions</code>.</p>
    ///   - [`operation_id(impl Into<String>)`](crate::client::fluent_builders::UpdateStackSet::operation_id) / [`set_operation_id(Option<String>)`](crate::client::fluent_builders::UpdateStackSet::set_operation_id): <p>The unique ID for this stack set operation.</p>  <p>The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that CloudFormation successfully received them.</p>  <p>If you don't specify an operation ID, CloudFormation generates one automatically.</p>  <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>.</p>
    ///   - [`accounts(Vec<String>)`](crate::client::fluent_builders::UpdateStackSet::accounts) / [`set_accounts(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateStackSet::set_accounts): <p>[Self-managed permissions] The accounts in which to update associated stack instances. If you specify accounts, you must also specify the Amazon Web Services Regions in which to update stack set instances.</p>  <p>To update <i>all</i> the stack instances associated with this stack set, don't specify the <code>Accounts</code> or <code>Regions</code> properties.</p>  <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and Amazon Web Services Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Amazon Web Services Regions, while leaving all other stack instances with their existing stack instance status.</p>
    ///   - [`regions(Vec<String>)`](crate::client::fluent_builders::UpdateStackSet::regions) / [`set_regions(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateStackSet::set_regions): <p>The Amazon Web Services Regions in which to update associated stack instances. If you specify Regions, you must also specify accounts in which to update stack set instances.</p>  <p>To update <i>all</i> the stack instances associated with this stack set, do not specify the <code>Accounts</code> or <code>Regions</code> properties.</p>  <p>If the stack set update includes changes to the template (that is, if the <code>TemplateBody</code> or <code>TemplateURL</code> properties are specified), or the <code>Parameters</code> property, CloudFormation marks all stack instances with a status of <code>OUTDATED</code> prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.</p>
    ///   - [`call_as(CallAs)`](crate::client::fluent_builders::UpdateStackSet::call_as) / [`set_call_as(Option<CallAs>)`](crate::client::fluent_builders::UpdateStackSet::set_call_as): <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>  <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>  <ul>   <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li>   <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li>  </ul>
    ///   - [`managed_execution(ManagedExecution)`](crate::client::fluent_builders::UpdateStackSet::managed_execution) / [`set_managed_execution(Option<ManagedExecution>)`](crate::client::fluent_builders::UpdateStackSet::set_managed_execution): <p>Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.</p>
    /// - On success, responds with [`UpdateStackSetOutput`](crate::output::UpdateStackSetOutput) with field(s):
    ///   - [`operation_id(Option<String>)`](crate::output::UpdateStackSetOutput::operation_id): <p>The unique ID for this stack set operation.</p>
    /// - On failure, responds with [`SdkError<UpdateStackSetError>`](crate::error::UpdateStackSetError)
    pub fn update_stack_set(&self) -> crate::client::fluent_builders::UpdateStackSet {
        crate::client::fluent_builders::UpdateStackSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateTerminationProtection`](crate::client::fluent_builders::UpdateTerminationProtection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`enable_termination_protection(bool)`](crate::client::fluent_builders::UpdateTerminationProtection::enable_termination_protection) / [`set_enable_termination_protection(Option<bool>)`](crate::client::fluent_builders::UpdateTerminationProtection::set_enable_termination_protection): <p>Whether to enable termination protection on the specified stack.</p>
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::UpdateTerminationProtection::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::UpdateTerminationProtection::set_stack_name): <p>The name or unique ID of the stack for which you want to set termination protection.</p>
    /// - On success, responds with [`UpdateTerminationProtectionOutput`](crate::output::UpdateTerminationProtectionOutput) with field(s):
    ///   - [`stack_id(Option<String>)`](crate::output::UpdateTerminationProtectionOutput::stack_id): <p>The unique ID of the stack.</p>
    /// - On failure, responds with [`SdkError<UpdateTerminationProtectionError>`](crate::error::UpdateTerminationProtectionError)
    pub fn update_termination_protection(
        &self,
    ) -> crate::client::fluent_builders::UpdateTerminationProtection {
        crate::client::fluent_builders::UpdateTerminationProtection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ValidateTemplate`](crate::client::fluent_builders::ValidateTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_body(impl Into<String>)`](crate::client::fluent_builders::ValidateTemplate::template_body) / [`set_template_body(Option<String>)`](crate::client::fluent_builders::ValidateTemplate::set_template_body): <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
    ///   - [`template_url(impl Into<String>)`](crate::client::fluent_builders::ValidateTemplate::template_url) / [`set_template_url(Option<String>)`](crate::client::fluent_builders::ValidateTemplate::set_template_url): <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket or a Systems Manager document. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p>  <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
    /// - On success, responds with [`ValidateTemplateOutput`](crate::output::ValidateTemplateOutput) with field(s):
    ///   - [`parameters(Option<Vec<TemplateParameter>>)`](crate::output::ValidateTemplateOutput::parameters): <p>A list of <code>TemplateParameter</code> structures.</p>
    ///   - [`description(Option<String>)`](crate::output::ValidateTemplateOutput::description): <p>The description found within the template.</p>
    ///   - [`capabilities(Option<Vec<Capability>>)`](crate::output::ValidateTemplateOutput::capabilities): <p>The capabilities found within the template. If your template contains IAM resources, you must specify the CAPABILITY_IAM or CAPABILITY_NAMED_IAM value for this parameter when you use the <code>CreateStack</code> or <code>UpdateStack</code> actions with your template; otherwise, those actions return an InsufficientCapabilities error.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates</a>.</p>
    ///   - [`capabilities_reason(Option<String>)`](crate::output::ValidateTemplateOutput::capabilities_reason): <p>The list of resources that generated the values in the <code>Capabilities</code> response element.</p>
    ///   - [`declared_transforms(Option<Vec<String>>)`](crate::output::ValidateTemplateOutput::declared_transforms): <p>A list of the transforms that are declared in the template.</p>
    /// - On failure, responds with [`SdkError<ValidateTemplateError>`](crate::error::ValidateTemplateError)
    pub fn validate_template(&self) -> crate::client::fluent_builders::ValidateTemplate {
        crate::client::fluent_builders::ValidateTemplate::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
