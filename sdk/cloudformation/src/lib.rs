#![allow(clippy::module_inception)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::large_enum_variant)]
#![allow(clippy::wrong_self_convention)]
#![allow(clippy::should_implement_trait)]
//! <fullname>AWS CloudFormation</fullname>
//! <p>AWS CloudFormation allows you to create and manage AWS infrastructure deployments
//! predictably and repeatedly. You can use AWS CloudFormation to leverage AWS products, such
//! as Amazon Elastic Compute Cloud, Amazon Elastic Block Store, Amazon Simple Notification
//! Service, Elastic Load Balancing, and Auto Scaling to build highly-reliable, highly
//! scalable, cost-effective applications without creating or configuring the underlying AWS
//! infrastructure.</p>
//! <p>With AWS CloudFormation, you declare all of your resources and dependencies in a
//! template file. The template defines a collection of resources as a single unit called a
//! stack. AWS CloudFormation creates and deletes all member resources of the stack together
//! and manages all dependencies between the resources for you.</p>
//! <p>For more information about AWS CloudFormation, see the <a href="http://aws.amazon.com/cloudformation/">AWS CloudFormation Product Page</a>.</p>
//! <p>Amazon CloudFormation makes use of other AWS products. If you need additional
//! technical information about a specific AWS product, you can find the product's technical
//! documentation at <a href="https://docs.aws.amazon.com/">docs.aws.amazon.com</a>.</p>

// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use error_meta::Error;

pub use config::Config;

mod aws_endpoint;
#[cfg(feature = "client")]
pub mod client;
pub mod config;
pub mod error;
mod error_meta;
mod idempotency_token;
pub mod input;
pub mod model;
pub mod operation;
mod operation_deser;
mod operation_ser;
pub mod output;
mod query_ser;
mod rest_xml_wrapped_errors;
mod xml_deser;
pub static PKG_VERSION: &str = env!("CARGO_PKG_VERSION");
pub use smithy_http::byte_stream::ByteStream;
pub use smithy_http::result::SdkError;
pub use smithy_types::Blob;
static API_METADATA: aws_http::user_agent::ApiMetadata =
    aws_http::user_agent::ApiMetadata::new("cloudformation", PKG_VERSION);
pub use aws_auth::Credentials;
pub use aws_types::region::Region;
#[cfg(feature = "client")]
pub use client::Client;
pub use smithy_http::endpoint::Endpoint;
