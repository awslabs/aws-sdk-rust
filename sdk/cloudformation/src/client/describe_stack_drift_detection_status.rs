// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeStackDriftDetectionStatus`](crate::operation::describe_stack_drift_detection_status::builders::DescribeStackDriftDetectionStatusFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_drift_detection_id(impl Into<String>)`](crate::operation::describe_stack_drift_detection_status::builders::DescribeStackDriftDetectionStatusFluentBuilder::stack_drift_detection_id) / [`set_stack_drift_detection_id(Option<String>)`](crate::operation::describe_stack_drift_detection_status::builders::DescribeStackDriftDetectionStatusFluentBuilder::set_stack_drift_detection_id):<br>required: **true**<br><p>The ID of the drift detection results of this operation.</p>  <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results CloudFormation retains for any given stack, and for how long, may vary.</p><br>
    /// - On success, responds with [`DescribeStackDriftDetectionStatusOutput`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusOutput) with field(s):
    ///   - [`stack_id(Option<String>)`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusOutput::stack_id): <p>The ID of the stack.</p>
    ///   - [`stack_drift_detection_id(Option<String>)`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusOutput::stack_drift_detection_id): <p>The ID of the drift detection results of this operation.</p>  <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of reports CloudFormation retains for any given stack, and for how long, may vary.</p>
    ///   - [`stack_drift_status(Option<StackDriftStatus>)`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusOutput::stack_drift_status): <p>Status of the stack's actual configuration compared to its expected configuration.</p>  <ul>   <li> <p> <code>DRIFTED</code>: The stack differs from its expected template configuration. A stack is considered to have drifted if one or more of its resources have drifted.</p> </li>   <li> <p> <code>NOT_CHECKED</code>: CloudFormation hasn't checked if the stack differs from its expected template configuration.</p> </li>   <li> <p> <code>IN_SYNC</code>: The stack's actual configuration matches its expected template configuration.</p> </li>   <li> <p> <code>UNKNOWN</code>: This value is reserved for future use.</p> </li>  </ul>
    ///   - [`detection_status(Option<StackDriftDetectionStatus>)`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusOutput::detection_status): <p>The status of the stack drift detection operation.</p>  <ul>   <li> <p> <code>DETECTION_COMPLETE</code>: The stack drift detection operation has successfully completed for all resources in the stack that support drift detection. (Resources that don't currently support stack detection remain unchecked.)</p> <p>If you specified logical resource IDs for CloudFormation to use as a filter for the stack drift detection operation, only the resources with those logical IDs are checked for drift.</p> </li>   <li> <p> <code>DETECTION_FAILED</code>: The stack drift detection operation has failed for at least one resource in the stack. Results will be available for resources on which CloudFormation successfully completed drift detection.</p> </li>   <li> <p> <code>DETECTION_IN_PROGRESS</code>: The stack drift detection operation is currently in progress.</p> </li>  </ul>
    ///   - [`detection_status_reason(Option<String>)`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusOutput::detection_status_reason): <p>The reason the stack drift detection operation has its current status.</p>
    ///   - [`drifted_stack_resource_count(Option<i32>)`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusOutput::drifted_stack_resource_count): <p>Total number of stack resources that have drifted. This is NULL until the drift detection operation reaches a status of <code>DETECTION_COMPLETE</code>. This value will be 0 for stacks whose drift status is <code>IN_SYNC</code>.</p>
    ///   - [`timestamp(Option<DateTime>)`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusOutput::timestamp): <p>Time at which the stack drift detection operation was initiated.</p>
    /// - On failure, responds with [`SdkError<DescribeStackDriftDetectionStatusError>`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusError)
    pub fn describe_stack_drift_detection_status(
        &self,
    ) -> crate::operation::describe_stack_drift_detection_status::builders::DescribeStackDriftDetectionStatusFluentBuilder {
        crate::operation::describe_stack_drift_detection_status::builders::DescribeStackDriftDetectionStatusFluentBuilder::new(self.handle.clone())
    }
}
