// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelUpdateStack`](crate::operation::cancel_update_stack::builders::CancelUpdateStackFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::operation::cancel_update_stack::builders::CancelUpdateStackFluentBuilder::stack_name) / [`set_stack_name(Option<String>)`](crate::operation::cancel_update_stack::builders::CancelUpdateStackFluentBuilder::set_stack_name):<br>required: **true**<br><note>   <p>If you don't pass a parameter to <code>StackName</code>, the API returns a response that describes all resources in the account.</p>   <p>The IAM policy below can be added to IAM policies when you want to limit resource-level permissions and avoid returning a response when no parameter is sent in the request:</p>   <p> <code>{ "Version": "2012-10-17", "Statement": [{ "Effect": "Deny", "Action": "cloudformation:DescribeStacks", "NotResource": "arn:aws:cloudformation:*:*:stack/*/*" }] }</code> </p>  </note>  <p>The name or the unique stack ID that's associated with the stack.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::cancel_update_stack::builders::CancelUpdateStackFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::cancel_update_stack::builders::CancelUpdateStackFluentBuilder::set_client_request_token):<br>required: **false**<br><p>A unique identifier for this <code>CancelUpdateStack</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to cancel an update on a stack with the same name. You might retry <code>CancelUpdateStack</code> requests to ensure that CloudFormation successfully received them.</p><br>
    /// - On success, responds with [`CancelUpdateStackOutput`](crate::operation::cancel_update_stack::CancelUpdateStackOutput)
    /// - On failure, responds with [`SdkError<CancelUpdateStackError>`](crate::operation::cancel_update_stack::CancelUpdateStackError)
    pub fn cancel_update_stack(&self) -> crate::operation::cancel_update_stack::builders::CancelUpdateStackFluentBuilder {
        crate::operation::cancel_update_stack::builders::CancelUpdateStackFluentBuilder::new(self.handle.clone())
    }
}
