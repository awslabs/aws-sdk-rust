// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeTypeRegistration`](crate::client::fluent_builders::DescribeTypeRegistration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`registration_token(impl Into<String>)`](crate::client::fluent_builders::DescribeTypeRegistration::registration_token) / [`set_registration_token(Option<String>)`](crate::client::fluent_builders::DescribeTypeRegistration::set_registration_token): <p>The identifier for this registration request.</p>  <p>This registration token is generated by CloudFormation when you initiate a registration request using <code> <code>RegisterType</code> </code>.</p>
    /// - On success, responds with [`DescribeTypeRegistrationOutput`](crate::output::DescribeTypeRegistrationOutput) with field(s):
    ///   - [`progress_status(Option<RegistrationStatus>)`](crate::output::DescribeTypeRegistrationOutput::progress_status): <p>The current status of the extension registration request.</p>
    ///   - [`description(Option<String>)`](crate::output::DescribeTypeRegistrationOutput::description): <p>The description of the extension registration request.</p>
    ///   - [`type_arn(Option<String>)`](crate::output::DescribeTypeRegistrationOutput::type_arn): <p>The Amazon Resource Name (ARN) of the extension being registered.</p>  <p>For registration requests with a <code>ProgressStatus</code> of other than <code>COMPLETE</code>, this will be <code>null</code>.</p>
    ///   - [`type_version_arn(Option<String>)`](crate::output::DescribeTypeRegistrationOutput::type_version_arn): <p>The Amazon Resource Name (ARN) of this specific version of the extension being registered.</p>  <p>For registration requests with a <code>ProgressStatus</code> of other than <code>COMPLETE</code>, this will be <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<DescribeTypeRegistrationError>`](crate::error::DescribeTypeRegistrationError)
    pub fn describe_type_registration(
        &self,
    ) -> crate::client::fluent_builders::DescribeTypeRegistration {
        crate::client::fluent_builders::DescribeTypeRegistration::new(self.handle.clone())
    }
}
