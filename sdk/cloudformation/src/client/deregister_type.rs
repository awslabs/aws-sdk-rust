// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeregisterType`](crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder::set_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p><br>
    ///   - [`r#type(RegistryType)`](crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder::type) / [`set_type(Option<RegistryType>)`](crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder::set_type):<br>required: **false**<br><p>The kind of extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p><br>
    ///   - [`type_name(impl Into<String>)`](crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder::type_name) / [`set_type_name(Option<String>)`](crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder::set_type_name):<br>required: **false**<br><p>The name of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p><br>
    ///   - [`version_id(impl Into<String>)`](crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder::version_id) / [`set_version_id(Option<String>)`](crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder::set_version_id):<br>required: **false**<br><p>The ID of a specific version of the extension. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the extension version when it is registered.</p><br>
    /// - On success, responds with [`DeregisterTypeOutput`](crate::operation::deregister_type::DeregisterTypeOutput)
    /// - On failure, responds with [`SdkError<DeregisterTypeError>`](crate::operation::deregister_type::DeregisterTypeError)
    pub fn deregister_type(&self) -> crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder {
        crate::operation::deregister_type::builders::DeregisterTypeFluentBuilder::new(self.handle.clone())
    }
}
