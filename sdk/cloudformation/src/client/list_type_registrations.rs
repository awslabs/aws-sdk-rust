// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTypeRegistrations`](crate::client::fluent_builders::ListTypeRegistrations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTypeRegistrations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(RegistryType)`](crate::client::fluent_builders::ListTypeRegistrations::type) / [`set_type(Option<RegistryType>)`](crate::client::fluent_builders::ListTypeRegistrations::set_type): <p>The kind of extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::ListTypeRegistrations::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::ListTypeRegistrations::set_type_name): <p>The name of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`type_arn(impl Into<String>)`](crate::client::fluent_builders::ListTypeRegistrations::type_arn) / [`set_type_arn(Option<String>)`](crate::client::fluent_builders::ListTypeRegistrations::set_type_arn): <p>The Amazon Resource Name (ARN) of the extension.</p>  <p>Conditional: You must specify either <code>TypeName</code> and <code>Type</code>, or <code>Arn</code>.</p>
    ///   - [`registration_status_filter(RegistrationStatus)`](crate::client::fluent_builders::ListTypeRegistrations::registration_status_filter) / [`set_registration_status_filter(Option<RegistrationStatus>)`](crate::client::fluent_builders::ListTypeRegistrations::set_registration_status_filter): <p>The current status of the extension registration request.</p>  <p>The default is <code>IN_PROGRESS</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTypeRegistrations::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTypeRegistrations::set_max_results): <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTypeRegistrations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTypeRegistrations::set_next_token): <p>If the previous paginated request didn't return all the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</p>
    /// - On success, responds with [`ListTypeRegistrationsOutput`](crate::output::ListTypeRegistrationsOutput) with field(s):
    ///   - [`registration_token_list(Option<Vec<String>>)`](crate::output::ListTypeRegistrationsOutput::registration_token_list): <p>A list of extension registration tokens.</p>  <p>Use <code> <code>DescribeTypeRegistration</code> </code> to return detailed information about a type registration request.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTypeRegistrationsOutput::next_token): <p>If the request doesn't return all the remaining results, <code>NextToken</code> is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If the request returns all results, <code>NextToken</code> is set to <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListTypeRegistrationsError>`](crate::error::ListTypeRegistrationsError)
    pub fn list_type_registrations(&self) -> crate::client::fluent_builders::ListTypeRegistrations {
        crate::client::fluent_builders::ListTypeRegistrations::new(self.handle.clone())
    }
}
