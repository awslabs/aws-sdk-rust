// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListStackResources`](crate::client::fluent_builders::ListStackResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListStackResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_name(impl Into<String>)`](crate::client::fluent_builders::ListStackResources::stack_name) / [`set_stack_name(Option<String>)`](crate::client::fluent_builders::ListStackResources::set_stack_name): <p>The name or the unique stack ID that is associated with the stack, which aren't always interchangeable:</p>  <ul>   <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>   <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>  </ul>  <p>Default: There is no default value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListStackResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListStackResources::set_next_token): <p>A string that identifies the next page of stack resources that you want to retrieve.</p>
    /// - On success, responds with [`ListStackResourcesOutput`](crate::output::ListStackResourcesOutput) with field(s):
    ///   - [`stack_resource_summaries(Option<Vec<StackResourceSummary>>)`](crate::output::ListStackResourcesOutput::stack_resource_summaries): <p>A list of <code>StackResourceSummary</code> structures.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListStackResourcesOutput::next_token): <p>If the output exceeds 1 MB, a string that identifies the next page of stack resources. If no additional page exists, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListStackResourcesError>`](crate::error::ListStackResourcesError)
    pub fn list_stack_resources(&self) -> crate::client::fluent_builders::ListStackResources {
        crate::client::fluent_builders::ListStackResources::new(self.handle.clone())
    }
}
