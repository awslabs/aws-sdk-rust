// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains information about a stack set. A stack set enables you to provision stacks into Amazon Web Services accounts and across Regions by using a single CloudFormation template. In the stack set, you specify the template to use, in addition to any parameters and capabilities that the template requires.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StackSet {
    /// <p>The name that's associated with the stack set.</p>
    #[doc(hidden)]
    pub stack_set_name: std::option::Option<std::string::String>,
    /// <p>The ID of the stack set.</p>
    #[doc(hidden)]
    pub stack_set_id: std::option::Option<std::string::String>,
    /// <p>A description of the stack set that you specify when the stack set is created or updated.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The status of the stack set.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::StackSetStatus>,
    /// <p>The structure that contains the body of the template that was used to create or update the stack set.</p>
    #[doc(hidden)]
    pub template_body: std::option::Option<std::string::String>,
    /// <p>A list of input parameters for a stack set.</p>
    #[doc(hidden)]
    pub parameters: std::option::Option<std::vec::Vec<crate::types::Parameter>>,
    /// <p>The capabilities that are allowed in the stack set. Some stack set templates might include resources that can affect permissions in your Amazon Web Services account—for example, by creating new Identity and Access Management (IAM) users. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates.</a> </p>
    #[doc(hidden)]
    pub capabilities: std::option::Option<std::vec::Vec<crate::types::Capability>>,
    /// <p>A list of tags that specify information about the stack set. A maximum number of 50 tags can be specified.</p>
    #[doc(hidden)]
    pub tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    /// <p>The Amazon Resource Name (ARN) of the stack set.</p>
    #[doc(hidden)]
    pub stack_set_arn: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the IAM role used to create or update the stack set.</p>
    /// <p>Use customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>CloudFormation User Guide</i>.</p>
    #[doc(hidden)]
    pub administration_role_arn: std::option::Option<std::string::String>,
    /// <p>The name of the IAM execution role used to create or update the stack set.</p>
    /// <p>Use customized execution roles to control which stack resources users and groups can include in their stack sets.</p>
    #[doc(hidden)]
    pub execution_role_name: std::option::Option<std::string::String>,
    /// <p>Detailed information about the drift status of the stack set.</p>
    /// <p>For stack sets, contains information about the last <i>completed</i> drift operation performed on the stack set. Information about drift operations currently in progress isn't included.</p>
    #[doc(hidden)]
    pub stack_set_drift_detection_details:
        std::option::Option<crate::types::StackSetDriftDetectionDetails>,
    /// <p>[Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organization or organizational unit (OU).</p>
    #[doc(hidden)]
    pub auto_deployment: std::option::Option<crate::types::AutoDeployment>,
    /// <p>Describes how the IAM roles required for stack set operations are created.</p>
    /// <ul>
    /// <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li>
    /// <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub permission_model: std::option::Option<crate::types::PermissionModels>,
    /// <p>[Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html">DeploymentTargets</a>.</p>
    #[doc(hidden)]
    pub organizational_unit_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.</p>
    #[doc(hidden)]
    pub managed_execution: std::option::Option<crate::types::ManagedExecution>,
}
impl StackSet {
    /// <p>The name that's associated with the stack set.</p>
    pub fn stack_set_name(&self) -> std::option::Option<&str> {
        self.stack_set_name.as_deref()
    }
    /// <p>The ID of the stack set.</p>
    pub fn stack_set_id(&self) -> std::option::Option<&str> {
        self.stack_set_id.as_deref()
    }
    /// <p>A description of the stack set that you specify when the stack set is created or updated.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The status of the stack set.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::StackSetStatus> {
        self.status.as_ref()
    }
    /// <p>The structure that contains the body of the template that was used to create or update the stack set.</p>
    pub fn template_body(&self) -> std::option::Option<&str> {
        self.template_body.as_deref()
    }
    /// <p>A list of input parameters for a stack set.</p>
    pub fn parameters(&self) -> std::option::Option<&[crate::types::Parameter]> {
        self.parameters.as_deref()
    }
    /// <p>The capabilities that are allowed in the stack set. Some stack set templates might include resources that can affect permissions in your Amazon Web Services account—for example, by creating new Identity and Access Management (IAM) users. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates.</a> </p>
    pub fn capabilities(&self) -> std::option::Option<&[crate::types::Capability]> {
        self.capabilities.as_deref()
    }
    /// <p>A list of tags that specify information about the stack set. A maximum number of 50 tags can be specified.</p>
    pub fn tags(&self) -> std::option::Option<&[crate::types::Tag]> {
        self.tags.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the stack set.</p>
    pub fn stack_set_arn(&self) -> std::option::Option<&str> {
        self.stack_set_arn.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role used to create or update the stack set.</p>
    /// <p>Use customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn administration_role_arn(&self) -> std::option::Option<&str> {
        self.administration_role_arn.as_deref()
    }
    /// <p>The name of the IAM execution role used to create or update the stack set.</p>
    /// <p>Use customized execution roles to control which stack resources users and groups can include in their stack sets.</p>
    pub fn execution_role_name(&self) -> std::option::Option<&str> {
        self.execution_role_name.as_deref()
    }
    /// <p>Detailed information about the drift status of the stack set.</p>
    /// <p>For stack sets, contains information about the last <i>completed</i> drift operation performed on the stack set. Information about drift operations currently in progress isn't included.</p>
    pub fn stack_set_drift_detection_details(
        &self,
    ) -> std::option::Option<&crate::types::StackSetDriftDetectionDetails> {
        self.stack_set_drift_detection_details.as_ref()
    }
    /// <p>[Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organization or organizational unit (OU).</p>
    pub fn auto_deployment(&self) -> std::option::Option<&crate::types::AutoDeployment> {
        self.auto_deployment.as_ref()
    }
    /// <p>Describes how the IAM roles required for stack set operations are created.</p>
    /// <ul>
    /// <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li>
    /// <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li>
    /// </ul>
    pub fn permission_model(&self) -> std::option::Option<&crate::types::PermissionModels> {
        self.permission_model.as_ref()
    }
    /// <p>[Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html">DeploymentTargets</a>.</p>
    pub fn organizational_unit_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.organizational_unit_ids.as_deref()
    }
    /// <p>Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.</p>
    pub fn managed_execution(&self) -> std::option::Option<&crate::types::ManagedExecution> {
        self.managed_execution.as_ref()
    }
}
impl StackSet {
    /// Creates a new builder-style object to manufacture [`StackSet`](crate::types::StackSet).
    pub fn builder() -> crate::types::builders::StackSetBuilder {
        crate::types::builders::StackSetBuilder::default()
    }
}

/// A builder for [`StackSet`](crate::types::StackSet).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StackSetBuilder {
    pub(crate) stack_set_name: std::option::Option<std::string::String>,
    pub(crate) stack_set_id: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::StackSetStatus>,
    pub(crate) template_body: std::option::Option<std::string::String>,
    pub(crate) parameters: std::option::Option<std::vec::Vec<crate::types::Parameter>>,
    pub(crate) capabilities: std::option::Option<std::vec::Vec<crate::types::Capability>>,
    pub(crate) tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    pub(crate) stack_set_arn: std::option::Option<std::string::String>,
    pub(crate) administration_role_arn: std::option::Option<std::string::String>,
    pub(crate) execution_role_name: std::option::Option<std::string::String>,
    pub(crate) stack_set_drift_detection_details:
        std::option::Option<crate::types::StackSetDriftDetectionDetails>,
    pub(crate) auto_deployment: std::option::Option<crate::types::AutoDeployment>,
    pub(crate) permission_model: std::option::Option<crate::types::PermissionModels>,
    pub(crate) organizational_unit_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) managed_execution: std::option::Option<crate::types::ManagedExecution>,
}
impl StackSetBuilder {
    /// <p>The name that's associated with the stack set.</p>
    pub fn stack_set_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.stack_set_name = Some(input.into());
        self
    }
    /// <p>The name that's associated with the stack set.</p>
    pub fn set_stack_set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stack_set_name = input;
        self
    }
    /// <p>The ID of the stack set.</p>
    pub fn stack_set_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.stack_set_id = Some(input.into());
        self
    }
    /// <p>The ID of the stack set.</p>
    pub fn set_stack_set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stack_set_id = input;
        self
    }
    /// <p>A description of the stack set that you specify when the stack set is created or updated.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>A description of the stack set that you specify when the stack set is created or updated.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The status of the stack set.</p>
    pub fn status(mut self, input: crate::types::StackSetStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the stack set.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::StackSetStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The structure that contains the body of the template that was used to create or update the stack set.</p>
    pub fn template_body(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_body = Some(input.into());
        self
    }
    /// <p>The structure that contains the body of the template that was used to create or update the stack set.</p>
    pub fn set_template_body(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_body = input;
        self
    }
    /// Appends an item to `parameters`.
    ///
    /// To override the contents of this collection use [`set_parameters`](Self::set_parameters).
    ///
    /// <p>A list of input parameters for a stack set.</p>
    pub fn parameters(mut self, input: crate::types::Parameter) -> Self {
        let mut v = self.parameters.unwrap_or_default();
        v.push(input);
        self.parameters = Some(v);
        self
    }
    /// <p>A list of input parameters for a stack set.</p>
    pub fn set_parameters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Parameter>>,
    ) -> Self {
        self.parameters = input;
        self
    }
    /// Appends an item to `capabilities`.
    ///
    /// To override the contents of this collection use [`set_capabilities`](Self::set_capabilities).
    ///
    /// <p>The capabilities that are allowed in the stack set. Some stack set templates might include resources that can affect permissions in your Amazon Web Services account—for example, by creating new Identity and Access Management (IAM) users. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates.</a> </p>
    pub fn capabilities(mut self, input: crate::types::Capability) -> Self {
        let mut v = self.capabilities.unwrap_or_default();
        v.push(input);
        self.capabilities = Some(v);
        self
    }
    /// <p>The capabilities that are allowed in the stack set. Some stack set templates might include resources that can affect permissions in your Amazon Web Services account—for example, by creating new Identity and Access Management (IAM) users. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities">Acknowledging IAM Resources in CloudFormation Templates.</a> </p>
    pub fn set_capabilities(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Capability>>,
    ) -> Self {
        self.capabilities = input;
        self
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A list of tags that specify information about the stack set. A maximum number of 50 tags can be specified.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = Some(v);
        self
    }
    /// <p>A list of tags that specify information about the stack set. A maximum number of 50 tags can be specified.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    ) -> Self {
        self.tags = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the stack set.</p>
    pub fn stack_set_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.stack_set_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the stack set.</p>
    pub fn set_stack_set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stack_set_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role used to create or update the stack set.</p>
    /// <p>Use customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn administration_role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.administration_role_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role used to create or update the stack set.</p>
    /// <p>Use customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Prerequisites: Granting Permissions for Stack Set Operations</a> in the <i>CloudFormation User Guide</i>.</p>
    pub fn set_administration_role_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.administration_role_arn = input;
        self
    }
    /// <p>The name of the IAM execution role used to create or update the stack set.</p>
    /// <p>Use customized execution roles to control which stack resources users and groups can include in their stack sets.</p>
    pub fn execution_role_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.execution_role_name = Some(input.into());
        self
    }
    /// <p>The name of the IAM execution role used to create or update the stack set.</p>
    /// <p>Use customized execution roles to control which stack resources users and groups can include in their stack sets.</p>
    pub fn set_execution_role_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.execution_role_name = input;
        self
    }
    /// <p>Detailed information about the drift status of the stack set.</p>
    /// <p>For stack sets, contains information about the last <i>completed</i> drift operation performed on the stack set. Information about drift operations currently in progress isn't included.</p>
    pub fn stack_set_drift_detection_details(
        mut self,
        input: crate::types::StackSetDriftDetectionDetails,
    ) -> Self {
        self.stack_set_drift_detection_details = Some(input);
        self
    }
    /// <p>Detailed information about the drift status of the stack set.</p>
    /// <p>For stack sets, contains information about the last <i>completed</i> drift operation performed on the stack set. Information about drift operations currently in progress isn't included.</p>
    pub fn set_stack_set_drift_detection_details(
        mut self,
        input: std::option::Option<crate::types::StackSetDriftDetectionDetails>,
    ) -> Self {
        self.stack_set_drift_detection_details = input;
        self
    }
    /// <p>[Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organization or organizational unit (OU).</p>
    pub fn auto_deployment(mut self, input: crate::types::AutoDeployment) -> Self {
        self.auto_deployment = Some(input);
        self
    }
    /// <p>[Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organization or organizational unit (OU).</p>
    pub fn set_auto_deployment(
        mut self,
        input: std::option::Option<crate::types::AutoDeployment>,
    ) -> Self {
        self.auto_deployment = input;
        self
    }
    /// <p>Describes how the IAM roles required for stack set operations are created.</p>
    /// <ul>
    /// <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li>
    /// <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li>
    /// </ul>
    pub fn permission_model(mut self, input: crate::types::PermissionModels) -> Self {
        self.permission_model = Some(input);
        self
    }
    /// <p>Describes how the IAM roles required for stack set operations are created.</p>
    /// <ul>
    /// <li> <p>With <code>self-managed</code> permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html">Grant Self-Managed Stack Set Permissions</a>.</p> </li>
    /// <li> <p>With <code>service-managed</code> permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html">Grant Service-Managed Stack Set Permissions</a>.</p> </li>
    /// </ul>
    pub fn set_permission_model(
        mut self,
        input: std::option::Option<crate::types::PermissionModels>,
    ) -> Self {
        self.permission_model = input;
        self
    }
    /// Appends an item to `organizational_unit_ids`.
    ///
    /// To override the contents of this collection use [`set_organizational_unit_ids`](Self::set_organizational_unit_ids).
    ///
    /// <p>[Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html">DeploymentTargets</a>.</p>
    pub fn organizational_unit_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.organizational_unit_ids.unwrap_or_default();
        v.push(input.into());
        self.organizational_unit_ids = Some(v);
        self
    }
    /// <p>[Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html">DeploymentTargets</a>.</p>
    pub fn set_organizational_unit_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.organizational_unit_ids = input;
        self
    }
    /// <p>Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.</p>
    pub fn managed_execution(mut self, input: crate::types::ManagedExecution) -> Self {
        self.managed_execution = Some(input);
        self
    }
    /// <p>Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.</p>
    pub fn set_managed_execution(
        mut self,
        input: std::option::Option<crate::types::ManagedExecution>,
    ) -> Self {
        self.managed_execution = input;
        self
    }
    /// Consumes the builder and constructs a [`StackSet`](crate::types::StackSet).
    pub fn build(self) -> crate::types::StackSet {
        crate::types::StackSet {
            stack_set_name: self.stack_set_name,
            stack_set_id: self.stack_set_id,
            description: self.description,
            status: self.status,
            template_body: self.template_body,
            parameters: self.parameters,
            capabilities: self.capabilities,
            tags: self.tags,
            stack_set_arn: self.stack_set_arn,
            administration_role_arn: self.administration_role_arn,
            execution_role_name: self.execution_role_name,
            stack_set_drift_detection_details: self.stack_set_drift_detection_details,
            auto_deployment: self.auto_deployment,
            permission_model: self.permission_model,
            organizational_unit_ids: self.organizational_unit_ids,
            managed_execution: self.managed_execution,
        }
    }
}
