// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The structure that contains information about a specified operation's results for a given account in a given Region.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StackSetOperationResultSummary {
    /// <p>[Self-managed permissions] The name of the Amazon Web Services account for this operation result.</p>
    #[doc(hidden)]
    pub account: std::option::Option<std::string::String>,
    /// <p>The name of the Amazon Web Services Region for this operation result.</p>
    #[doc(hidden)]
    pub region: std::option::Option<std::string::String>,
    /// <p>The result status of the stack set operation for the given account in the given Region.</p>
    /// <ul>
    /// <li> <p> <code>CANCELLED</code>: The operation in the specified account and Region has been canceled. This is either because a user has stopped the stack set operation, or because the failure tolerance of the stack set operation has been exceeded.</p> </li>
    /// <li> <p> <code>FAILED</code>: The operation in the specified account and Region failed.</p> <p>If the stack set operation fails in enough accounts within a Region, the failure tolerance for the stack set operation as a whole might be exceeded.</p> </li>
    /// <li> <p> <code>RUNNING</code>: The operation in the specified account and Region is currently in progress.</p> </li>
    /// <li> <p> <code>PENDING</code>: The operation in the specified account and Region has yet to start.</p> </li>
    /// <li> <p> <code>SUCCEEDED</code>: The operation in the specified account and Region completed successfully.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::StackSetOperationResultStatus>,
    /// <p>The reason for the assigned result status.</p>
    #[doc(hidden)]
    pub status_reason: std::option::Option<std::string::String>,
    /// <p>The results of the account gate function CloudFormation invokes, if present, before proceeding with stack set operations in an account.</p>
    #[doc(hidden)]
    pub account_gate_result: std::option::Option<crate::types::AccountGateResult>,
    /// <p>[Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html">DeploymentTargets</a>.</p>
    #[doc(hidden)]
    pub organizational_unit_id: std::option::Option<std::string::String>,
}
impl StackSetOperationResultSummary {
    /// <p>[Self-managed permissions] The name of the Amazon Web Services account for this operation result.</p>
    pub fn account(&self) -> std::option::Option<&str> {
        self.account.as_deref()
    }
    /// <p>The name of the Amazon Web Services Region for this operation result.</p>
    pub fn region(&self) -> std::option::Option<&str> {
        self.region.as_deref()
    }
    /// <p>The result status of the stack set operation for the given account in the given Region.</p>
    /// <ul>
    /// <li> <p> <code>CANCELLED</code>: The operation in the specified account and Region has been canceled. This is either because a user has stopped the stack set operation, or because the failure tolerance of the stack set operation has been exceeded.</p> </li>
    /// <li> <p> <code>FAILED</code>: The operation in the specified account and Region failed.</p> <p>If the stack set operation fails in enough accounts within a Region, the failure tolerance for the stack set operation as a whole might be exceeded.</p> </li>
    /// <li> <p> <code>RUNNING</code>: The operation in the specified account and Region is currently in progress.</p> </li>
    /// <li> <p> <code>PENDING</code>: The operation in the specified account and Region has yet to start.</p> </li>
    /// <li> <p> <code>SUCCEEDED</code>: The operation in the specified account and Region completed successfully.</p> </li>
    /// </ul>
    pub fn status(&self) -> std::option::Option<&crate::types::StackSetOperationResultStatus> {
        self.status.as_ref()
    }
    /// <p>The reason for the assigned result status.</p>
    pub fn status_reason(&self) -> std::option::Option<&str> {
        self.status_reason.as_deref()
    }
    /// <p>The results of the account gate function CloudFormation invokes, if present, before proceeding with stack set operations in an account.</p>
    pub fn account_gate_result(&self) -> std::option::Option<&crate::types::AccountGateResult> {
        self.account_gate_result.as_ref()
    }
    /// <p>[Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html">DeploymentTargets</a>.</p>
    pub fn organizational_unit_id(&self) -> std::option::Option<&str> {
        self.organizational_unit_id.as_deref()
    }
}
impl StackSetOperationResultSummary {
    /// Creates a new builder-style object to manufacture [`StackSetOperationResultSummary`](crate::types::StackSetOperationResultSummary).
    pub fn builder() -> crate::types::builders::StackSetOperationResultSummaryBuilder {
        crate::types::builders::StackSetOperationResultSummaryBuilder::default()
    }
}

/// A builder for [`StackSetOperationResultSummary`](crate::types::StackSetOperationResultSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StackSetOperationResultSummaryBuilder {
    pub(crate) account: std::option::Option<std::string::String>,
    pub(crate) region: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::StackSetOperationResultStatus>,
    pub(crate) status_reason: std::option::Option<std::string::String>,
    pub(crate) account_gate_result: std::option::Option<crate::types::AccountGateResult>,
    pub(crate) organizational_unit_id: std::option::Option<std::string::String>,
}
impl StackSetOperationResultSummaryBuilder {
    /// <p>[Self-managed permissions] The name of the Amazon Web Services account for this operation result.</p>
    pub fn account(mut self, input: impl Into<std::string::String>) -> Self {
        self.account = Some(input.into());
        self
    }
    /// <p>[Self-managed permissions] The name of the Amazon Web Services account for this operation result.</p>
    pub fn set_account(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account = input;
        self
    }
    /// <p>The name of the Amazon Web Services Region for this operation result.</p>
    pub fn region(mut self, input: impl Into<std::string::String>) -> Self {
        self.region = Some(input.into());
        self
    }
    /// <p>The name of the Amazon Web Services Region for this operation result.</p>
    pub fn set_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// <p>The result status of the stack set operation for the given account in the given Region.</p>
    /// <ul>
    /// <li> <p> <code>CANCELLED</code>: The operation in the specified account and Region has been canceled. This is either because a user has stopped the stack set operation, or because the failure tolerance of the stack set operation has been exceeded.</p> </li>
    /// <li> <p> <code>FAILED</code>: The operation in the specified account and Region failed.</p> <p>If the stack set operation fails in enough accounts within a Region, the failure tolerance for the stack set operation as a whole might be exceeded.</p> </li>
    /// <li> <p> <code>RUNNING</code>: The operation in the specified account and Region is currently in progress.</p> </li>
    /// <li> <p> <code>PENDING</code>: The operation in the specified account and Region has yet to start.</p> </li>
    /// <li> <p> <code>SUCCEEDED</code>: The operation in the specified account and Region completed successfully.</p> </li>
    /// </ul>
    pub fn status(mut self, input: crate::types::StackSetOperationResultStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The result status of the stack set operation for the given account in the given Region.</p>
    /// <ul>
    /// <li> <p> <code>CANCELLED</code>: The operation in the specified account and Region has been canceled. This is either because a user has stopped the stack set operation, or because the failure tolerance of the stack set operation has been exceeded.</p> </li>
    /// <li> <p> <code>FAILED</code>: The operation in the specified account and Region failed.</p> <p>If the stack set operation fails in enough accounts within a Region, the failure tolerance for the stack set operation as a whole might be exceeded.</p> </li>
    /// <li> <p> <code>RUNNING</code>: The operation in the specified account and Region is currently in progress.</p> </li>
    /// <li> <p> <code>PENDING</code>: The operation in the specified account and Region has yet to start.</p> </li>
    /// <li> <p> <code>SUCCEEDED</code>: The operation in the specified account and Region completed successfully.</p> </li>
    /// </ul>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::StackSetOperationResultStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The reason for the assigned result status.</p>
    pub fn status_reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.status_reason = Some(input.into());
        self
    }
    /// <p>The reason for the assigned result status.</p>
    pub fn set_status_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status_reason = input;
        self
    }
    /// <p>The results of the account gate function CloudFormation invokes, if present, before proceeding with stack set operations in an account.</p>
    pub fn account_gate_result(mut self, input: crate::types::AccountGateResult) -> Self {
        self.account_gate_result = Some(input);
        self
    }
    /// <p>The results of the account gate function CloudFormation invokes, if present, before proceeding with stack set operations in an account.</p>
    pub fn set_account_gate_result(
        mut self,
        input: std::option::Option<crate::types::AccountGateResult>,
    ) -> Self {
        self.account_gate_result = input;
        self
    }
    /// <p>[Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html">DeploymentTargets</a>.</p>
    pub fn organizational_unit_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organizational_unit_id = Some(input.into());
        self
    }
    /// <p>[Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html">DeploymentTargets</a>.</p>
    pub fn set_organizational_unit_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.organizational_unit_id = input;
        self
    }
    /// Consumes the builder and constructs a [`StackSetOperationResultSummary`](crate::types::StackSetOperationResultSummary).
    pub fn build(self) -> crate::types::StackSetOperationResultSummary {
        crate::types::StackSetOperationResultSummary {
            account: self.account,
            region: self.region,
            status: self.status,
            status_reason: self.status_reason,
            account_gate_result: self.account_gate_result,
            organizational_unit_id: self.organizational_unit_id,
        }
    }
}
