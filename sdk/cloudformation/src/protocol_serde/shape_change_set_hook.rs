// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_change_set_hook(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::ChangeSetHook, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ChangeSetHook::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("InvocationPoint") /* InvocationPoint com.amazonaws.cloudformation#ChangeSetHook$InvocationPoint */ =>  {
                let var_1 =
                    Some(
                        Result::<crate::types::HookInvocationPoint, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::HookInvocationPoint::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_invocation_point(var_1);
            }
            ,
            s if s.matches("FailureMode") /* FailureMode com.amazonaws.cloudformation#ChangeSetHook$FailureMode */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::HookFailureMode, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::HookFailureMode::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_failure_mode(var_2);
            }
            ,
            s if s.matches("TypeName") /* TypeName com.amazonaws.cloudformation#ChangeSetHook$TypeName */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_type_name(var_3);
            }
            ,
            s if s.matches("TypeVersionId") /* TypeVersionId com.amazonaws.cloudformation#ChangeSetHook$TypeVersionId */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_type_version_id(var_4);
            }
            ,
            s if s.matches("TypeConfigurationVersionId") /* TypeConfigurationVersionId com.amazonaws.cloudformation#ChangeSetHook$TypeConfigurationVersionId */ =>  {
                let var_5 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_type_configuration_version_id(var_5);
            }
            ,
            s if s.matches("TargetDetails") /* TargetDetails com.amazonaws.cloudformation#ChangeSetHook$TargetDetails */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_change_set_hook_target_details::de_change_set_hook_target_details(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_target_details(var_6);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
