// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_types_input_input(
    input: &crate::operation::list_types::ListTypesInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = aws_smithy_query::QueryWriter::new(&mut out, "ListTypes", "2010-05-15");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Visibility");
    if let Some(var_2) = &input.visibility {
        scope_1.string(var_2.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("ProvisioningType");
    if let Some(var_4) = &input.provisioning_type {
        scope_3.string(var_4.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("DeprecatedStatus");
    if let Some(var_6) = &input.deprecated_status {
        scope_5.string(var_6.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("Type");
    if let Some(var_8) = &input.r#type {
        scope_7.string(var_8.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("Filters");
    if let Some(var_10) = &input.filters {
        crate::protocol_serde::shape_type_filters::ser_type_filters(scope_9, var_10)?;
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("MaxResults");
    if let Some(var_12) = &input.max_results {
        scope_11.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_12).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("NextToken");
    if let Some(var_14) = &input.next_token {
        scope_13.string(var_14);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
