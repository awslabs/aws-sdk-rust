// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_rollback_configuration(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::RollbackConfiguration,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("RollbackTriggers");
    if let Some(var_2) = &input.rollback_triggers {
        let mut list_4 = scope_1.start_list(false, None);
        for item_3 in var_2 {
            #[allow(unused_mut)]
            let mut entry_5 = list_4.entry();
            crate::protocol_serde::shape_rollback_trigger::ser_rollback_trigger(entry_5, item_3)?;
        }
        list_4.finish();
    }
    #[allow(unused_mut)]
    let mut scope_6 = writer.prefix("MonitoringTimeInMinutes");
    if let Some(var_7) = &input.monitoring_time_in_minutes {
        scope_6.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    Ok(())
}

pub fn de_rollback_configuration(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::RollbackConfiguration, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::RollbackConfiguration::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("RollbackTriggers") /* RollbackTriggers com.amazonaws.cloudformation#RollbackConfiguration$RollbackTriggers */ =>  {
                let var_8 =
                    Some(
                        crate::protocol_serde::shape_rollback_triggers::de_rollback_triggers(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_rollback_triggers(var_8);
            }
            ,
            s if s.matches("MonitoringTimeInMinutes") /* MonitoringTimeInMinutes com.amazonaws.cloudformation#RollbackConfiguration$MonitoringTimeInMinutes */ =>  {
                let var_9 =
                    Some(
                         {
                            <i32 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.cloudformation#MonitoringTimeInMinutes`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_monitoring_time_in_minutes(var_9);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
