// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_stack_set(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::StackSet, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::StackSet::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("StackSetName") /* StackSetName com.amazonaws.cloudformation#StackSet$StackSetName */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_stack_set_name(var_1);
            }
            ,
            s if s.matches("StackSetId") /* StackSetId com.amazonaws.cloudformation#StackSet$StackSetId */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_stack_set_id(var_2);
            }
            ,
            s if s.matches("Description") /* Description com.amazonaws.cloudformation#StackSet$Description */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_3);
            }
            ,
            s if s.matches("Status") /* Status com.amazonaws.cloudformation#StackSet$Status */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::StackSetStatus, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::StackSetStatus::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_4);
            }
            ,
            s if s.matches("TemplateBody") /* TemplateBody com.amazonaws.cloudformation#StackSet$TemplateBody */ =>  {
                let var_5 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_template_body(var_5);
            }
            ,
            s if s.matches("Parameters") /* Parameters com.amazonaws.cloudformation#StackSet$Parameters */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_parameters::de_parameters(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_parameters(var_6);
            }
            ,
            s if s.matches("Capabilities") /* Capabilities com.amazonaws.cloudformation#StackSet$Capabilities */ =>  {
                let var_7 =
                    Some(
                        crate::protocol_serde::shape_capabilities::de_capabilities(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_capabilities(var_7);
            }
            ,
            s if s.matches("Tags") /* Tags com.amazonaws.cloudformation#StackSet$Tags */ =>  {
                let var_8 =
                    Some(
                        crate::protocol_serde::shape_tags::de_tags(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tags(var_8);
            }
            ,
            s if s.matches("StackSetARN") /* StackSetARN com.amazonaws.cloudformation#StackSet$StackSetARN */ =>  {
                let var_9 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_stack_set_arn(var_9);
            }
            ,
            s if s.matches("AdministrationRoleARN") /* AdministrationRoleARN com.amazonaws.cloudformation#StackSet$AdministrationRoleARN */ =>  {
                let var_10 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_administration_role_arn(var_10);
            }
            ,
            s if s.matches("ExecutionRoleName") /* ExecutionRoleName com.amazonaws.cloudformation#StackSet$ExecutionRoleName */ =>  {
                let var_11 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_execution_role_name(var_11);
            }
            ,
            s if s.matches("StackSetDriftDetectionDetails") /* StackSetDriftDetectionDetails com.amazonaws.cloudformation#StackSet$StackSetDriftDetectionDetails */ =>  {
                let var_12 =
                    Some(
                        crate::protocol_serde::shape_stack_set_drift_detection_details::de_stack_set_drift_detection_details(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_stack_set_drift_detection_details(var_12);
            }
            ,
            s if s.matches("AutoDeployment") /* AutoDeployment com.amazonaws.cloudformation#StackSet$AutoDeployment */ =>  {
                let var_13 =
                    Some(
                        crate::protocol_serde::shape_auto_deployment::de_auto_deployment(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_auto_deployment(var_13);
            }
            ,
            s if s.matches("PermissionModel") /* PermissionModel com.amazonaws.cloudformation#StackSet$PermissionModel */ =>  {
                let var_14 =
                    Some(
                        Result::<crate::types::PermissionModels, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::PermissionModels::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_permission_model(var_14);
            }
            ,
            s if s.matches("OrganizationalUnitIds") /* OrganizationalUnitIds com.amazonaws.cloudformation#StackSet$OrganizationalUnitIds */ =>  {
                let var_15 =
                    Some(
                        crate::protocol_serde::shape_organizational_unit_id_list::de_organizational_unit_id_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_organizational_unit_ids(var_15);
            }
            ,
            s if s.matches("ManagedExecution") /* ManagedExecution com.amazonaws.cloudformation#StackSet$ManagedExecution */ =>  {
                let var_16 =
                    Some(
                        crate::protocol_serde::shape_managed_execution::de_managed_execution(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_managed_execution(var_16);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
