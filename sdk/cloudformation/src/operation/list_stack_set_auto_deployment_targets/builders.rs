// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::list_stack_set_auto_deployment_targets::_list_stack_set_auto_deployment_targets_output::ListStackSetAutoDeploymentTargetsOutputBuilder;

pub use crate::operation::list_stack_set_auto_deployment_targets::_list_stack_set_auto_deployment_targets_input::ListStackSetAutoDeploymentTargetsInputBuilder;

impl crate::operation::list_stack_set_auto_deployment_targets::builders::ListStackSetAutoDeploymentTargetsInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.list_stack_set_auto_deployment_targets();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `ListStackSetAutoDeploymentTargets`.
///
/// <p>Returns summary information about deployment targets for a stack set.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct ListStackSetAutoDeploymentTargetsFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::list_stack_set_auto_deployment_targets::builders::ListStackSetAutoDeploymentTargetsInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsOutput,
        crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsError,
    > for ListStackSetAutoDeploymentTargetsFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsOutput,
            crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl ListStackSetAutoDeploymentTargetsFluentBuilder {
    /// Creates a new `ListStackSetAutoDeploymentTargets`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the ListStackSetAutoDeploymentTargets as a reference.
    pub fn as_input(&self) -> &crate::operation::list_stack_set_auto_deployment_targets::builders::ListStackSetAutoDeploymentTargetsInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargets::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargets::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsOutput,
        crate::operation::list_stack_set_auto_deployment_targets::ListStackSetAutoDeploymentTargetsError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl ::std::convert::Into<crate::config::Builder>) -> Self {
        self.set_config_override(::std::option::Option::Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: ::std::option::Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    /// <p>The name or unique ID of the stack set that you want to get automatic deployment targets for.</p>
    pub fn stack_set_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.stack_set_name(input.into());
        self
    }
    /// <p>The name or unique ID of the stack set that you want to get automatic deployment targets for.</p>
    pub fn set_stack_set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_stack_set_name(input);
        self
    }
    /// <p>The name or unique ID of the stack set that you want to get automatic deployment targets for.</p>
    pub fn get_stack_set_name(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_stack_set_name()
    }
    /// <p>A string that identifies the next page of stack set deployment targets that you want to retrieve.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.next_token(input.into());
        self
    }
    /// <p>A string that identifies the next page of stack set deployment targets that you want to retrieve.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_next_token(input);
        self
    }
    /// <p>A string that identifies the next page of stack set deployment targets that you want to retrieve.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_next_token()
    }
    /// <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.inner = self.inner.max_results(input);
        self
    }
    /// <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.inner = self.inner.set_max_results(input);
        self
    }
    /// <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        self.inner.get_max_results()
    }
    /// <p>Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>
    /// <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for StackSets with self-managed permissions.</p>
    /// <ul>
    /// <li>
    /// <p>If you are signed in to the management account, specify <code>SELF</code>.</p></li>
    /// <li>
    /// <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p>
    /// <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p></li>
    /// </ul>
    pub fn call_as(mut self, input: crate::types::CallAs) -> Self {
        self.inner = self.inner.call_as(input);
        self
    }
    /// <p>Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>
    /// <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for StackSets with self-managed permissions.</p>
    /// <ul>
    /// <li>
    /// <p>If you are signed in to the management account, specify <code>SELF</code>.</p></li>
    /// <li>
    /// <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p>
    /// <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p></li>
    /// </ul>
    pub fn set_call_as(mut self, input: ::std::option::Option<crate::types::CallAs>) -> Self {
        self.inner = self.inner.set_call_as(input);
        self
    }
    /// <p>Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>
    /// <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for StackSets with self-managed permissions.</p>
    /// <ul>
    /// <li>
    /// <p>If you are signed in to the management account, specify <code>SELF</code>.</p></li>
    /// <li>
    /// <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p>
    /// <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p></li>
    /// </ul>
    pub fn get_call_as(&self) -> &::std::option::Option<crate::types::CallAs> {
        self.inner.get_call_as()
    }
}
