// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeStackDriftDetectionStatusInput {
    /// <p>The ID of the drift detection results of this operation.</p>
    /// <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results CloudFormation retains for any given stack, and for how long, may vary.</p>
    #[doc(hidden)]
    pub stack_drift_detection_id: std::option::Option<std::string::String>,
}
impl DescribeStackDriftDetectionStatusInput {
    /// <p>The ID of the drift detection results of this operation.</p>
    /// <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results CloudFormation retains for any given stack, and for how long, may vary.</p>
    pub fn stack_drift_detection_id(&self) -> std::option::Option<&str> {
        self.stack_drift_detection_id.as_deref()
    }
}
impl DescribeStackDriftDetectionStatusInput {
    /// Creates a new builder-style object to manufacture [`DescribeStackDriftDetectionStatusInput`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusInput).
    pub fn builder() -> crate::operation::describe_stack_drift_detection_status::builders::DescribeStackDriftDetectionStatusInputBuilder{
        crate::operation::describe_stack_drift_detection_status::builders::DescribeStackDriftDetectionStatusInputBuilder::default()
    }
}

/// A builder for [`DescribeStackDriftDetectionStatusInput`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeStackDriftDetectionStatusInputBuilder {
    pub(crate) stack_drift_detection_id: std::option::Option<std::string::String>,
}
impl DescribeStackDriftDetectionStatusInputBuilder {
    /// <p>The ID of the drift detection results of this operation.</p>
    /// <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results CloudFormation retains for any given stack, and for how long, may vary.</p>
    pub fn stack_drift_detection_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.stack_drift_detection_id = Some(input.into());
        self
    }
    /// <p>The ID of the drift detection results of this operation.</p>
    /// <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results CloudFormation retains for any given stack, and for how long, may vary.</p>
    pub fn set_stack_drift_detection_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.stack_drift_detection_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeStackDriftDetectionStatusInput`](crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusInput).
    pub fn build(self) -> Result<crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::describe_stack_drift_detection_status::DescribeStackDriftDetectionStatusInput {
                stack_drift_detection_id: self.stack_drift_detection_id
                ,
            }
        )
    }
}
