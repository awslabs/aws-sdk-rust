// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeTypeRegistrationInput {
    /// <p>The identifier for this registration request.</p>
    /// <p>This registration token is generated by CloudFormation when you initiate a registration request using <code>RegisterType</code>.</p>
    pub registration_token: ::std::option::Option<::std::string::String>,
}
impl DescribeTypeRegistrationInput {
    /// <p>The identifier for this registration request.</p>
    /// <p>This registration token is generated by CloudFormation when you initiate a registration request using <code>RegisterType</code>.</p>
    pub fn registration_token(&self) -> ::std::option::Option<&str> {
        self.registration_token.as_deref()
    }
}
impl DescribeTypeRegistrationInput {
    /// Creates a new builder-style object to manufacture [`DescribeTypeRegistrationInput`](crate::operation::describe_type_registration::DescribeTypeRegistrationInput).
    pub fn builder() -> crate::operation::describe_type_registration::builders::DescribeTypeRegistrationInputBuilder {
        crate::operation::describe_type_registration::builders::DescribeTypeRegistrationInputBuilder::default()
    }
}

/// A builder for [`DescribeTypeRegistrationInput`](crate::operation::describe_type_registration::DescribeTypeRegistrationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeTypeRegistrationInputBuilder {
    pub(crate) registration_token: ::std::option::Option<::std::string::String>,
}
impl DescribeTypeRegistrationInputBuilder {
    /// <p>The identifier for this registration request.</p>
    /// <p>This registration token is generated by CloudFormation when you initiate a registration request using <code>RegisterType</code>.</p>
    /// This field is required.
    pub fn registration_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.registration_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for this registration request.</p>
    /// <p>This registration token is generated by CloudFormation when you initiate a registration request using <code>RegisterType</code>.</p>
    pub fn set_registration_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.registration_token = input;
        self
    }
    /// <p>The identifier for this registration request.</p>
    /// <p>This registration token is generated by CloudFormation when you initiate a registration request using <code>RegisterType</code>.</p>
    pub fn get_registration_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.registration_token
    }
    /// Consumes the builder and constructs a [`DescribeTypeRegistrationInput`](crate::operation::describe_type_registration::DescribeTypeRegistrationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_type_registration::DescribeTypeRegistrationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_type_registration::DescribeTypeRegistrationInput {
            registration_token: self.registration_token,
        })
    }
}
