// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output for a <code>DescribeStackResource</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeStackResourceOutput {
    /// <p>A <code>StackResourceDetail</code> structure containing the description of the specified resource in the specified stack.</p>
    #[doc(hidden)]
    pub stack_resource_detail: std::option::Option<crate::types::StackResourceDetail>,
    _request_id: Option<String>,
}
impl DescribeStackResourceOutput {
    /// <p>A <code>StackResourceDetail</code> structure containing the description of the specified resource in the specified stack.</p>
    pub fn stack_resource_detail(&self) -> std::option::Option<&crate::types::StackResourceDetail> {
        self.stack_resource_detail.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeStackResourceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeStackResourceOutput {
    /// Creates a new builder-style object to manufacture [`DescribeStackResourceOutput`](crate::operation::describe_stack_resource::DescribeStackResourceOutput).
    pub fn builder(
    ) -> crate::operation::describe_stack_resource::builders::DescribeStackResourceOutputBuilder
    {
        crate::operation::describe_stack_resource::builders::DescribeStackResourceOutputBuilder::default()
    }
}

/// A builder for [`DescribeStackResourceOutput`](crate::operation::describe_stack_resource::DescribeStackResourceOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeStackResourceOutputBuilder {
    pub(crate) stack_resource_detail: std::option::Option<crate::types::StackResourceDetail>,
    _request_id: Option<String>,
}
impl DescribeStackResourceOutputBuilder {
    /// <p>A <code>StackResourceDetail</code> structure containing the description of the specified resource in the specified stack.</p>
    pub fn stack_resource_detail(mut self, input: crate::types::StackResourceDetail) -> Self {
        self.stack_resource_detail = Some(input);
        self
    }
    /// <p>A <code>StackResourceDetail</code> structure containing the description of the specified resource in the specified stack.</p>
    pub fn set_stack_resource_detail(
        mut self,
        input: std::option::Option<crate::types::StackResourceDetail>,
    ) -> Self {
        self.stack_resource_detail = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeStackResourceOutput`](crate::operation::describe_stack_resource::DescribeStackResourceOutput).
    pub fn build(self) -> crate::operation::describe_stack_resource::DescribeStackResourceOutput {
        crate::operation::describe_stack_resource::DescribeStackResourceOutput {
            stack_resource_detail: self.stack_resource_detail,
            _request_id: self._request_id,
        }
    }
}
