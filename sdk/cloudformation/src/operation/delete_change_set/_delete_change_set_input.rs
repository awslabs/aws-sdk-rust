// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input for the <code>DeleteChangeSet</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteChangeSetInput {
    /// <p>The name or Amazon Resource Name (ARN) of the change set that you want to delete.</p>
    #[doc(hidden)]
    pub change_set_name: std::option::Option<std::string::String>,
    /// <p>If you specified the name of a change set to delete, specify the stack name or Amazon Resource Name (ARN) that's associated with it.</p>
    #[doc(hidden)]
    pub stack_name: std::option::Option<std::string::String>,
}
impl DeleteChangeSetInput {
    /// <p>The name or Amazon Resource Name (ARN) of the change set that you want to delete.</p>
    pub fn change_set_name(&self) -> std::option::Option<&str> {
        self.change_set_name.as_deref()
    }
    /// <p>If you specified the name of a change set to delete, specify the stack name or Amazon Resource Name (ARN) that's associated with it.</p>
    pub fn stack_name(&self) -> std::option::Option<&str> {
        self.stack_name.as_deref()
    }
}
impl DeleteChangeSetInput {
    /// Creates a new builder-style object to manufacture [`DeleteChangeSetInput`](crate::operation::delete_change_set::DeleteChangeSetInput).
    pub fn builder() -> crate::operation::delete_change_set::builders::DeleteChangeSetInputBuilder {
        crate::operation::delete_change_set::builders::DeleteChangeSetInputBuilder::default()
    }
}

/// A builder for [`DeleteChangeSetInput`](crate::operation::delete_change_set::DeleteChangeSetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteChangeSetInputBuilder {
    pub(crate) change_set_name: std::option::Option<std::string::String>,
    pub(crate) stack_name: std::option::Option<std::string::String>,
}
impl DeleteChangeSetInputBuilder {
    /// <p>The name or Amazon Resource Name (ARN) of the change set that you want to delete.</p>
    pub fn change_set_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.change_set_name = Some(input.into());
        self
    }
    /// <p>The name or Amazon Resource Name (ARN) of the change set that you want to delete.</p>
    pub fn set_change_set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.change_set_name = input;
        self
    }
    /// <p>If you specified the name of a change set to delete, specify the stack name or Amazon Resource Name (ARN) that's associated with it.</p>
    pub fn stack_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.stack_name = Some(input.into());
        self
    }
    /// <p>If you specified the name of a change set to delete, specify the stack name or Amazon Resource Name (ARN) that's associated with it.</p>
    pub fn set_stack_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stack_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteChangeSetInput`](crate::operation::delete_change_set::DeleteChangeSetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_change_set::DeleteChangeSetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_change_set::DeleteChangeSetInput {
            change_set_name: self.change_set_name,
            stack_name: self.stack_name,
        })
    }
}
