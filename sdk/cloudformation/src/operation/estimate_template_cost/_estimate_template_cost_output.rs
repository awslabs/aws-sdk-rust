// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output for a <code>EstimateTemplateCost</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EstimateTemplateCostOutput {
    /// <p>An Amazon Web Services Simple Monthly Calculator URL with a query string that describes the resources required to run the template.</p>
    #[doc(hidden)]
    pub url: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl EstimateTemplateCostOutput {
    /// <p>An Amazon Web Services Simple Monthly Calculator URL with a query string that describes the resources required to run the template.</p>
    pub fn url(&self) -> std::option::Option<&str> {
        self.url.as_deref()
    }
}
impl aws_http::request_id::RequestId for EstimateTemplateCostOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl EstimateTemplateCostOutput {
    /// Creates a new builder-style object to manufacture [`EstimateTemplateCostOutput`](crate::operation::estimate_template_cost::EstimateTemplateCostOutput).
    pub fn builder(
    ) -> crate::operation::estimate_template_cost::builders::EstimateTemplateCostOutputBuilder {
        crate::operation::estimate_template_cost::builders::EstimateTemplateCostOutputBuilder::default()
    }
}

/// A builder for [`EstimateTemplateCostOutput`](crate::operation::estimate_template_cost::EstimateTemplateCostOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EstimateTemplateCostOutputBuilder {
    pub(crate) url: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl EstimateTemplateCostOutputBuilder {
    /// <p>An Amazon Web Services Simple Monthly Calculator URL with a query string that describes the resources required to run the template.</p>
    pub fn url(mut self, input: impl Into<std::string::String>) -> Self {
        self.url = Some(input.into());
        self
    }
    /// <p>An Amazon Web Services Simple Monthly Calculator URL with a query string that describes the resources required to run the template.</p>
    pub fn set_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.url = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`EstimateTemplateCostOutput`](crate::operation::estimate_template_cost::EstimateTemplateCostOutput).
    pub fn build(self) -> crate::operation::estimate_template_cost::EstimateTemplateCostOutput {
        crate::operation::estimate_template_cost::EstimateTemplateCostOutput {
            url: self.url,
            _request_id: self._request_id,
        }
    }
}
