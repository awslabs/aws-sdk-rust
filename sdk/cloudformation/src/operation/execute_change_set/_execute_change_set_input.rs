// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input for the <code>ExecuteChangeSet</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExecuteChangeSetInput {
    /// <p>The name or Amazon Resource Name (ARN) of the change set that you want use to update the specified stack.</p>
    #[doc(hidden)]
    pub change_set_name: std::option::Option<std::string::String>,
    /// <p>If you specified the name of a change set, specify the stack name or Amazon Resource Name (ARN) that's associated with the change set you want to execute.</p>
    #[doc(hidden)]
    pub stack_name: std::option::Option<std::string::String>,
    /// <p>A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that CloudFormation successfully received them.</p>
    #[doc(hidden)]
    pub client_request_token: std::option::Option<std::string::String>,
    /// <p>Preserves the state of previously provisioned resources when an operation fails.</p>
    /// <p>Default: <code>True</code> </p>
    #[doc(hidden)]
    pub disable_rollback: std::option::Option<bool>,
}
impl ExecuteChangeSetInput {
    /// <p>The name or Amazon Resource Name (ARN) of the change set that you want use to update the specified stack.</p>
    pub fn change_set_name(&self) -> std::option::Option<&str> {
        self.change_set_name.as_deref()
    }
    /// <p>If you specified the name of a change set, specify the stack name or Amazon Resource Name (ARN) that's associated with the change set you want to execute.</p>
    pub fn stack_name(&self) -> std::option::Option<&str> {
        self.stack_name.as_deref()
    }
    /// <p>A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that CloudFormation successfully received them.</p>
    pub fn client_request_token(&self) -> std::option::Option<&str> {
        self.client_request_token.as_deref()
    }
    /// <p>Preserves the state of previously provisioned resources when an operation fails.</p>
    /// <p>Default: <code>True</code> </p>
    pub fn disable_rollback(&self) -> std::option::Option<bool> {
        self.disable_rollback
    }
}
impl ExecuteChangeSetInput {
    /// Creates a new builder-style object to manufacture [`ExecuteChangeSetInput`](crate::operation::execute_change_set::ExecuteChangeSetInput).
    pub fn builder() -> crate::operation::execute_change_set::builders::ExecuteChangeSetInputBuilder
    {
        crate::operation::execute_change_set::builders::ExecuteChangeSetInputBuilder::default()
    }
}

/// A builder for [`ExecuteChangeSetInput`](crate::operation::execute_change_set::ExecuteChangeSetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExecuteChangeSetInputBuilder {
    pub(crate) change_set_name: std::option::Option<std::string::String>,
    pub(crate) stack_name: std::option::Option<std::string::String>,
    pub(crate) client_request_token: std::option::Option<std::string::String>,
    pub(crate) disable_rollback: std::option::Option<bool>,
}
impl ExecuteChangeSetInputBuilder {
    /// <p>The name or Amazon Resource Name (ARN) of the change set that you want use to update the specified stack.</p>
    pub fn change_set_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.change_set_name = Some(input.into());
        self
    }
    /// <p>The name or Amazon Resource Name (ARN) of the change set that you want use to update the specified stack.</p>
    pub fn set_change_set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.change_set_name = input;
        self
    }
    /// <p>If you specified the name of a change set, specify the stack name or Amazon Resource Name (ARN) that's associated with the change set you want to execute.</p>
    pub fn stack_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.stack_name = Some(input.into());
        self
    }
    /// <p>If you specified the name of a change set, specify the stack name or Amazon Resource Name (ARN) that's associated with the change set you want to execute.</p>
    pub fn set_stack_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stack_name = input;
        self
    }
    /// <p>A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that CloudFormation successfully received them.</p>
    pub fn client_request_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_request_token = Some(input.into());
        self
    }
    /// <p>A unique identifier for this <code>ExecuteChangeSet</code> request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to execute a change set to update a stack with the same name. You might retry <code>ExecuteChangeSet</code> requests to ensure that CloudFormation successfully received them.</p>
    pub fn set_client_request_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.client_request_token = input;
        self
    }
    /// <p>Preserves the state of previously provisioned resources when an operation fails.</p>
    /// <p>Default: <code>True</code> </p>
    pub fn disable_rollback(mut self, input: bool) -> Self {
        self.disable_rollback = Some(input);
        self
    }
    /// <p>Preserves the state of previously provisioned resources when an operation fails.</p>
    /// <p>Default: <code>True</code> </p>
    pub fn set_disable_rollback(mut self, input: std::option::Option<bool>) -> Self {
        self.disable_rollback = input;
        self
    }
    /// Consumes the builder and constructs a [`ExecuteChangeSetInput`](crate::operation::execute_change_set::ExecuteChangeSetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::execute_change_set::ExecuteChangeSetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::execute_change_set::ExecuteChangeSetInput {
                change_set_name: self.change_set_name,
                stack_name: self.stack_name,
                client_request_token: self.client_request_token,
                disable_rollback: self.disable_rollback,
            },
        )
    }
}
