// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input for <code>DescribeStacks</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeStacksInput {
    /// <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p>
    /// <ul>
    /// <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>
    /// <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>
    /// </ul>
    /// <p>Default: There is no default value.</p>
    #[doc(hidden)]
    pub stack_name: std::option::Option<std::string::String>,
    /// <p>A string that identifies the next page of stacks that you want to retrieve.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl DescribeStacksInput {
    /// <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p>
    /// <ul>
    /// <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>
    /// <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>
    /// </ul>
    /// <p>Default: There is no default value.</p>
    pub fn stack_name(&self) -> std::option::Option<&str> {
        self.stack_name.as_deref()
    }
    /// <p>A string that identifies the next page of stacks that you want to retrieve.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeStacksInput {
    /// Creates a new builder-style object to manufacture [`DescribeStacksInput`](crate::operation::describe_stacks::DescribeStacksInput).
    pub fn builder() -> crate::operation::describe_stacks::builders::DescribeStacksInputBuilder {
        crate::operation::describe_stacks::builders::DescribeStacksInputBuilder::default()
    }
}

/// A builder for [`DescribeStacksInput`](crate::operation::describe_stacks::DescribeStacksInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeStacksInputBuilder {
    pub(crate) stack_name: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl DescribeStacksInputBuilder {
    /// <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p>
    /// <ul>
    /// <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>
    /// <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>
    /// </ul>
    /// <p>Default: There is no default value.</p>
    pub fn stack_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.stack_name = Some(input.into());
        self
    }
    /// <p>The name or the unique stack ID that's associated with the stack, which aren't always interchangeable:</p>
    /// <ul>
    /// <li> <p>Running stacks: You can specify either the stack's name or its unique stack ID.</p> </li>
    /// <li> <p>Deleted stacks: You must specify the unique stack ID.</p> </li>
    /// </ul>
    /// <p>Default: There is no default value.</p>
    pub fn set_stack_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stack_name = input;
        self
    }
    /// <p>A string that identifies the next page of stacks that you want to retrieve.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A string that identifies the next page of stacks that you want to retrieve.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeStacksInput`](crate::operation::describe_stacks::DescribeStacksInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_stacks::DescribeStacksInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_stacks::DescribeStacksInput {
            stack_name: self.stack_name,
            next_token: self.next_token,
        })
    }
}
