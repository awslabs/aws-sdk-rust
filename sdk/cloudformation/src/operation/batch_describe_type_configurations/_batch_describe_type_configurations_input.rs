// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchDescribeTypeConfigurationsInput {
    /// <p>The list of identifiers for the desired extension configurations.</p>
    #[doc(hidden)]
    pub type_configuration_identifiers:
        std::option::Option<std::vec::Vec<crate::types::TypeConfigurationIdentifier>>,
}
impl BatchDescribeTypeConfigurationsInput {
    /// <p>The list of identifiers for the desired extension configurations.</p>
    pub fn type_configuration_identifiers(
        &self,
    ) -> std::option::Option<&[crate::types::TypeConfigurationIdentifier]> {
        self.type_configuration_identifiers.as_deref()
    }
}
impl BatchDescribeTypeConfigurationsInput {
    /// Creates a new builder-style object to manufacture [`BatchDescribeTypeConfigurationsInput`](crate::operation::batch_describe_type_configurations::BatchDescribeTypeConfigurationsInput).
    pub fn builder() -> crate::operation::batch_describe_type_configurations::builders::BatchDescribeTypeConfigurationsInputBuilder{
        crate::operation::batch_describe_type_configurations::builders::BatchDescribeTypeConfigurationsInputBuilder::default()
    }
}

/// A builder for [`BatchDescribeTypeConfigurationsInput`](crate::operation::batch_describe_type_configurations::BatchDescribeTypeConfigurationsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchDescribeTypeConfigurationsInputBuilder {
    pub(crate) type_configuration_identifiers:
        std::option::Option<std::vec::Vec<crate::types::TypeConfigurationIdentifier>>,
}
impl BatchDescribeTypeConfigurationsInputBuilder {
    /// Appends an item to `type_configuration_identifiers`.
    ///
    /// To override the contents of this collection use [`set_type_configuration_identifiers`](Self::set_type_configuration_identifiers).
    ///
    /// <p>The list of identifiers for the desired extension configurations.</p>
    pub fn type_configuration_identifiers(
        mut self,
        input: crate::types::TypeConfigurationIdentifier,
    ) -> Self {
        let mut v = self.type_configuration_identifiers.unwrap_or_default();
        v.push(input);
        self.type_configuration_identifiers = Some(v);
        self
    }
    /// <p>The list of identifiers for the desired extension configurations.</p>
    pub fn set_type_configuration_identifiers(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TypeConfigurationIdentifier>>,
    ) -> Self {
        self.type_configuration_identifiers = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchDescribeTypeConfigurationsInput`](crate::operation::batch_describe_type_configurations::BatchDescribeTypeConfigurationsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_describe_type_configurations::BatchDescribeTypeConfigurationsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::batch_describe_type_configurations::BatchDescribeTypeConfigurationsInput {
                type_configuration_identifiers: self.type_configuration_identifiers
                ,
            }
        )
    }
}
