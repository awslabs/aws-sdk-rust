// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ApplySchema`](crate::operation::apply_schema::builders::ApplySchemaFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`published_schema_arn(impl Into<String>)`](crate::operation::apply_schema::builders::ApplySchemaFluentBuilder::published_schema_arn) / [`set_published_schema_arn(Option<String>)`](crate::operation::apply_schema::builders::ApplySchemaFluentBuilder::set_published_schema_arn): <p>Published schema Amazon Resource Name (ARN) that needs to be copied. For more information, see <code>arns</code>.</p>
    ///   - [`directory_arn(impl Into<String>)`](crate::operation::apply_schema::builders::ApplySchemaFluentBuilder::directory_arn) / [`set_directory_arn(Option<String>)`](crate::operation::apply_schema::builders::ApplySchemaFluentBuilder::set_directory_arn): <p>The Amazon Resource Name (ARN) that is associated with the <code>Directory</code> into which the schema is copied. For more information, see <code>arns</code>.</p>
    /// - On success, responds with [`ApplySchemaOutput`](crate::operation::apply_schema::ApplySchemaOutput) with field(s):
    ///   - [`applied_schema_arn(Option<String>)`](crate::operation::apply_schema::ApplySchemaOutput::applied_schema_arn): <p>The applied schema ARN that is associated with the copied schema in the <code>Directory</code>. You can use this ARN to describe the schema information applied on this directory. For more information, see <code>arns</code>.</p>
    ///   - [`directory_arn(Option<String>)`](crate::operation::apply_schema::ApplySchemaOutput::directory_arn): <p>The ARN that is associated with the <code>Directory</code>. For more information, see <code>arns</code>.</p>
    /// - On failure, responds with [`SdkError<ApplySchemaError>`](crate::operation::apply_schema::ApplySchemaError)
    pub fn apply_schema(
        &self,
    ) -> crate::operation::apply_schema::builders::ApplySchemaFluentBuilder {
        crate::operation::apply_schema::builders::ApplySchemaFluentBuilder::new(self.handle.clone())
    }
}
