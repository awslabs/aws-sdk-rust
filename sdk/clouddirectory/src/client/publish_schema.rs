// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PublishSchema`](crate::client::fluent_builders::PublishSchema) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`development_schema_arn(impl Into<String>)`](crate::client::fluent_builders::PublishSchema::development_schema_arn) / [`set_development_schema_arn(Option<String>)`](crate::client::fluent_builders::PublishSchema::set_development_schema_arn): <p>The Amazon Resource Name (ARN) that is associated with the development schema. For more information, see <code>arns</code>.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::PublishSchema::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::PublishSchema::set_version): <p>The major version under which the schema will be published. Schemas have both a major and minor version associated with them.</p>
    ///   - [`minor_version(impl Into<String>)`](crate::client::fluent_builders::PublishSchema::minor_version) / [`set_minor_version(Option<String>)`](crate::client::fluent_builders::PublishSchema::set_minor_version): <p>The minor version under which the schema will be published. This parameter is recommended. Schemas have both a major and minor version associated with them.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::PublishSchema::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::PublishSchema::set_name): <p>The new name under which the schema will be published. If this is not provided, the development schema is considered.</p>
    /// - On success, responds with [`PublishSchemaOutput`](crate::output::PublishSchemaOutput) with field(s):
    ///   - [`published_schema_arn(Option<String>)`](crate::output::PublishSchemaOutput::published_schema_arn): <p>The ARN that is associated with the published schema. For more information, see <code>arns</code>.</p>
    /// - On failure, responds with [`SdkError<PublishSchemaError>`](crate::error::PublishSchemaError)
    pub fn publish_schema(&self) -> crate::client::fluent_builders::PublishSchema {
        crate::client::fluent_builders::PublishSchema::new(self.handle.clone())
    }
}
