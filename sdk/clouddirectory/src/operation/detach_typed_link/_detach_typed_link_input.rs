// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DetachTypedLinkInput {
    /// <p>The Amazon Resource Name (ARN) of the directory where you want to detach the typed link.</p>
    #[doc(hidden)]
    pub directory_arn: std::option::Option<std::string::String>,
    /// <p>Used to accept a typed link specifier as input.</p>
    #[doc(hidden)]
    pub typed_link_specifier: std::option::Option<crate::types::TypedLinkSpecifier>,
}
impl DetachTypedLinkInput {
    /// <p>The Amazon Resource Name (ARN) of the directory where you want to detach the typed link.</p>
    pub fn directory_arn(&self) -> std::option::Option<&str> {
        self.directory_arn.as_deref()
    }
    /// <p>Used to accept a typed link specifier as input.</p>
    pub fn typed_link_specifier(&self) -> std::option::Option<&crate::types::TypedLinkSpecifier> {
        self.typed_link_specifier.as_ref()
    }
}
impl DetachTypedLinkInput {
    /// Creates a new builder-style object to manufacture [`DetachTypedLinkInput`](crate::operation::detach_typed_link::DetachTypedLinkInput).
    pub fn builder() -> crate::operation::detach_typed_link::builders::DetachTypedLinkInputBuilder {
        crate::operation::detach_typed_link::builders::DetachTypedLinkInputBuilder::default()
    }
}

/// A builder for [`DetachTypedLinkInput`](crate::operation::detach_typed_link::DetachTypedLinkInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DetachTypedLinkInputBuilder {
    pub(crate) directory_arn: std::option::Option<std::string::String>,
    pub(crate) typed_link_specifier: std::option::Option<crate::types::TypedLinkSpecifier>,
}
impl DetachTypedLinkInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the directory where you want to detach the typed link.</p>
    pub fn directory_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.directory_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the directory where you want to detach the typed link.</p>
    pub fn set_directory_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.directory_arn = input;
        self
    }
    /// <p>Used to accept a typed link specifier as input.</p>
    pub fn typed_link_specifier(mut self, input: crate::types::TypedLinkSpecifier) -> Self {
        self.typed_link_specifier = Some(input);
        self
    }
    /// <p>Used to accept a typed link specifier as input.</p>
    pub fn set_typed_link_specifier(
        mut self,
        input: std::option::Option<crate::types::TypedLinkSpecifier>,
    ) -> Self {
        self.typed_link_specifier = input;
        self
    }
    /// Consumes the builder and constructs a [`DetachTypedLinkInput`](crate::operation::detach_typed_link::DetachTypedLinkInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::detach_typed_link::DetachTypedLinkInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::detach_typed_link::DetachTypedLinkInput {
            directory_arn: self.directory_arn,
            typed_link_specifier: self.typed_link_specifier,
        })
    }
}
