// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateDirectoryInput {
    /// <p>The name of the <code>Directory</code>. Should be unique per account, per region.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the published schema that will be copied into the data <code>Directory</code>. For more information, see <code>arns</code>.</p>
    #[doc(hidden)]
    pub schema_arn: std::option::Option<std::string::String>,
}
impl CreateDirectoryInput {
    /// <p>The name of the <code>Directory</code>. Should be unique per account, per region.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the published schema that will be copied into the data <code>Directory</code>. For more information, see <code>arns</code>.</p>
    pub fn schema_arn(&self) -> std::option::Option<&str> {
        self.schema_arn.as_deref()
    }
}
impl CreateDirectoryInput {
    /// Creates a new builder-style object to manufacture [`CreateDirectoryInput`](crate::operation::create_directory::CreateDirectoryInput).
    pub fn builder() -> crate::operation::create_directory::builders::CreateDirectoryInputBuilder {
        crate::operation::create_directory::builders::CreateDirectoryInputBuilder::default()
    }
}

/// A builder for [`CreateDirectoryInput`](crate::operation::create_directory::CreateDirectoryInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateDirectoryInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) schema_arn: std::option::Option<std::string::String>,
}
impl CreateDirectoryInputBuilder {
    /// <p>The name of the <code>Directory</code>. Should be unique per account, per region.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the <code>Directory</code>. Should be unique per account, per region.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the published schema that will be copied into the data <code>Directory</code>. For more information, see <code>arns</code>.</p>
    pub fn schema_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.schema_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the published schema that will be copied into the data <code>Directory</code>. For more information, see <code>arns</code>.</p>
    pub fn set_schema_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.schema_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateDirectoryInput`](crate::operation::create_directory::CreateDirectoryInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_directory::CreateDirectoryInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::create_directory::CreateDirectoryInput {
            name: self.name,
            schema_arn: self.schema_arn,
        })
    }
}
