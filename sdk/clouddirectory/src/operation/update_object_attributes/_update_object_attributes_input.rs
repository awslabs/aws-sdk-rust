// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateObjectAttributesInput {
    /// <p>The Amazon Resource Name (ARN) that is associated with the <code>Directory</code> where the object resides. For more information, see <code>arns</code>.</p>
    #[doc(hidden)]
    pub directory_arn: std::option::Option<std::string::String>,
    /// <p>The reference that identifies the object.</p>
    #[doc(hidden)]
    pub object_reference: std::option::Option<crate::types::ObjectReference>,
    /// <p>The attributes update structure.</p>
    #[doc(hidden)]
    pub attribute_updates: std::option::Option<std::vec::Vec<crate::types::ObjectAttributeUpdate>>,
}
impl UpdateObjectAttributesInput {
    /// <p>The Amazon Resource Name (ARN) that is associated with the <code>Directory</code> where the object resides. For more information, see <code>arns</code>.</p>
    pub fn directory_arn(&self) -> std::option::Option<&str> {
        self.directory_arn.as_deref()
    }
    /// <p>The reference that identifies the object.</p>
    pub fn object_reference(&self) -> std::option::Option<&crate::types::ObjectReference> {
        self.object_reference.as_ref()
    }
    /// <p>The attributes update structure.</p>
    pub fn attribute_updates(&self) -> std::option::Option<&[crate::types::ObjectAttributeUpdate]> {
        self.attribute_updates.as_deref()
    }
}
impl UpdateObjectAttributesInput {
    /// Creates a new builder-style object to manufacture [`UpdateObjectAttributesInput`](crate::operation::update_object_attributes::UpdateObjectAttributesInput).
    pub fn builder(
    ) -> crate::operation::update_object_attributes::builders::UpdateObjectAttributesInputBuilder
    {
        crate::operation::update_object_attributes::builders::UpdateObjectAttributesInputBuilder::default()
    }
}

/// A builder for [`UpdateObjectAttributesInput`](crate::operation::update_object_attributes::UpdateObjectAttributesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateObjectAttributesInputBuilder {
    pub(crate) directory_arn: std::option::Option<std::string::String>,
    pub(crate) object_reference: std::option::Option<crate::types::ObjectReference>,
    pub(crate) attribute_updates:
        std::option::Option<std::vec::Vec<crate::types::ObjectAttributeUpdate>>,
}
impl UpdateObjectAttributesInputBuilder {
    /// <p>The Amazon Resource Name (ARN) that is associated with the <code>Directory</code> where the object resides. For more information, see <code>arns</code>.</p>
    pub fn directory_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.directory_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that is associated with the <code>Directory</code> where the object resides. For more information, see <code>arns</code>.</p>
    pub fn set_directory_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.directory_arn = input;
        self
    }
    /// <p>The reference that identifies the object.</p>
    pub fn object_reference(mut self, input: crate::types::ObjectReference) -> Self {
        self.object_reference = Some(input);
        self
    }
    /// <p>The reference that identifies the object.</p>
    pub fn set_object_reference(
        mut self,
        input: std::option::Option<crate::types::ObjectReference>,
    ) -> Self {
        self.object_reference = input;
        self
    }
    /// Appends an item to `attribute_updates`.
    ///
    /// To override the contents of this collection use [`set_attribute_updates`](Self::set_attribute_updates).
    ///
    /// <p>The attributes update structure.</p>
    pub fn attribute_updates(mut self, input: crate::types::ObjectAttributeUpdate) -> Self {
        let mut v = self.attribute_updates.unwrap_or_default();
        v.push(input);
        self.attribute_updates = Some(v);
        self
    }
    /// <p>The attributes update structure.</p>
    pub fn set_attribute_updates(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ObjectAttributeUpdate>>,
    ) -> Self {
        self.attribute_updates = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateObjectAttributesInput`](crate::operation::update_object_attributes::UpdateObjectAttributesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_object_attributes::UpdateObjectAttributesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_object_attributes::UpdateObjectAttributesInput {
                directory_arn: self.directory_arn,
                object_reference: self.object_reference,
                attribute_updates: self.attribute_updates,
            },
        )
    }
}
