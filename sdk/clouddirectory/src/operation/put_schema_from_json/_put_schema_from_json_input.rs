// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutSchemaFromJsonInput {
    /// <p>The ARN of the schema to update.</p>
    #[doc(hidden)]
    pub schema_arn: std::option::Option<std::string::String>,
    /// <p>The replacement JSON schema.</p>
    #[doc(hidden)]
    pub document: std::option::Option<std::string::String>,
}
impl PutSchemaFromJsonInput {
    /// <p>The ARN of the schema to update.</p>
    pub fn schema_arn(&self) -> std::option::Option<&str> {
        self.schema_arn.as_deref()
    }
    /// <p>The replacement JSON schema.</p>
    pub fn document(&self) -> std::option::Option<&str> {
        self.document.as_deref()
    }
}
impl PutSchemaFromJsonInput {
    /// Creates a new builder-style object to manufacture [`PutSchemaFromJsonInput`](crate::operation::put_schema_from_json::PutSchemaFromJsonInput).
    pub fn builder(
    ) -> crate::operation::put_schema_from_json::builders::PutSchemaFromJsonInputBuilder {
        crate::operation::put_schema_from_json::builders::PutSchemaFromJsonInputBuilder::default()
    }
}

/// A builder for [`PutSchemaFromJsonInput`](crate::operation::put_schema_from_json::PutSchemaFromJsonInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutSchemaFromJsonInputBuilder {
    pub(crate) schema_arn: std::option::Option<std::string::String>,
    pub(crate) document: std::option::Option<std::string::String>,
}
impl PutSchemaFromJsonInputBuilder {
    /// <p>The ARN of the schema to update.</p>
    pub fn schema_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.schema_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the schema to update.</p>
    pub fn set_schema_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.schema_arn = input;
        self
    }
    /// <p>The replacement JSON schema.</p>
    pub fn document(mut self, input: impl Into<std::string::String>) -> Self {
        self.document = Some(input.into());
        self
    }
    /// <p>The replacement JSON schema.</p>
    pub fn set_document(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.document = input;
        self
    }
    /// Consumes the builder and constructs a [`PutSchemaFromJsonInput`](crate::operation::put_schema_from_json::PutSchemaFromJsonInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_schema_from_json::PutSchemaFromJsonInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_schema_from_json::PutSchemaFromJsonInput {
                schema_arn: self.schema_arn,
                document: self.document,
            },
        )
    }
}
