// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListObjectChildrenOutput {
    /// <p>Children structure, which is a map with key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.</p>
    #[doc(hidden)]
    pub children:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    /// <p>The pagination token.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListObjectChildrenOutput {
    /// <p>Children structure, which is a map with key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.</p>
    pub fn children(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.children.as_ref()
    }
    /// <p>The pagination token.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListObjectChildrenOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListObjectChildrenOutput {
    /// Creates a new builder-style object to manufacture [`ListObjectChildrenOutput`](crate::operation::list_object_children::ListObjectChildrenOutput).
    pub fn builder(
    ) -> crate::operation::list_object_children::builders::ListObjectChildrenOutputBuilder {
        crate::operation::list_object_children::builders::ListObjectChildrenOutputBuilder::default()
    }
}

/// A builder for [`ListObjectChildrenOutput`](crate::operation::list_object_children::ListObjectChildrenOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListObjectChildrenOutputBuilder {
    pub(crate) children:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListObjectChildrenOutputBuilder {
    /// Adds a key-value pair to `children`.
    ///
    /// To override the contents of this collection use [`set_children`](Self::set_children).
    ///
    /// <p>Children structure, which is a map with key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.</p>
    pub fn children(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.children.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.children = Some(hash_map);
        self
    }
    /// <p>Children structure, which is a map with key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.</p>
    pub fn set_children(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.children = input;
        self
    }
    /// <p>The pagination token.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListObjectChildrenOutput`](crate::operation::list_object_children::ListObjectChildrenOutput).
    pub fn build(self) -> crate::operation::list_object_children::ListObjectChildrenOutput {
        crate::operation::list_object_children::ListObjectChildrenOutput {
            children: self.children,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
