// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>ListObjectParents</code> response operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchListObjectParentsResponse {
    /// <p>Returns a list of parent reference and LinkName Tuples.</p>
    pub parent_links: ::std::option::Option<::std::vec::Vec<crate::types::ObjectIdentifierAndLinkNameTuple>>,
    /// <p>The pagination token.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl BatchListObjectParentsResponse {
    /// <p>Returns a list of parent reference and LinkName Tuples.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.parent_links.is_none()`.
    pub fn parent_links(&self) -> &[crate::types::ObjectIdentifierAndLinkNameTuple] {
        self.parent_links.as_deref().unwrap_or_default()
    }
    /// <p>The pagination token.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl BatchListObjectParentsResponse {
    /// Creates a new builder-style object to manufacture [`BatchListObjectParentsResponse`](crate::types::BatchListObjectParentsResponse).
    pub fn builder() -> crate::types::builders::BatchListObjectParentsResponseBuilder {
        crate::types::builders::BatchListObjectParentsResponseBuilder::default()
    }
}

/// A builder for [`BatchListObjectParentsResponse`](crate::types::BatchListObjectParentsResponse).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchListObjectParentsResponseBuilder {
    pub(crate) parent_links: ::std::option::Option<::std::vec::Vec<crate::types::ObjectIdentifierAndLinkNameTuple>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl BatchListObjectParentsResponseBuilder {
    /// Appends an item to `parent_links`.
    ///
    /// To override the contents of this collection use [`set_parent_links`](Self::set_parent_links).
    ///
    /// <p>Returns a list of parent reference and LinkName Tuples.</p>
    pub fn parent_links(mut self, input: crate::types::ObjectIdentifierAndLinkNameTuple) -> Self {
        let mut v = self.parent_links.unwrap_or_default();
        v.push(input);
        self.parent_links = ::std::option::Option::Some(v);
        self
    }
    /// <p>Returns a list of parent reference and LinkName Tuples.</p>
    pub fn set_parent_links(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ObjectIdentifierAndLinkNameTuple>>) -> Self {
        self.parent_links = input;
        self
    }
    /// <p>Returns a list of parent reference and LinkName Tuples.</p>
    pub fn get_parent_links(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ObjectIdentifierAndLinkNameTuple>> {
        &self.parent_links
    }
    /// <p>The pagination token.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The pagination token.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The pagination token.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`BatchListObjectParentsResponse`](crate::types::BatchListObjectParentsResponse).
    pub fn build(self) -> crate::types::BatchListObjectParentsResponse {
        crate::types::BatchListObjectParentsResponse {
            parent_links: self.parent_links,
            next_token: self.next_token,
        }
    }
}
