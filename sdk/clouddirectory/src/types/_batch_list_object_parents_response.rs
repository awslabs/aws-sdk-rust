// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>ListObjectParents</code> response operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchListObjectParentsResponse {
    /// <p>Returns a list of parent reference and LinkName Tuples.</p>
    #[doc(hidden)]
    pub parent_links:
        std::option::Option<std::vec::Vec<crate::types::ObjectIdentifierAndLinkNameTuple>>,
    /// <p>The pagination token.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl BatchListObjectParentsResponse {
    /// <p>Returns a list of parent reference and LinkName Tuples.</p>
    pub fn parent_links(
        &self,
    ) -> std::option::Option<&[crate::types::ObjectIdentifierAndLinkNameTuple]> {
        self.parent_links.as_deref()
    }
    /// <p>The pagination token.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl BatchListObjectParentsResponse {
    /// Creates a new builder-style object to manufacture [`BatchListObjectParentsResponse`](crate::types::BatchListObjectParentsResponse).
    pub fn builder() -> crate::types::builders::BatchListObjectParentsResponseBuilder {
        crate::types::builders::BatchListObjectParentsResponseBuilder::default()
    }
}

/// A builder for [`BatchListObjectParentsResponse`](crate::types::BatchListObjectParentsResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchListObjectParentsResponseBuilder {
    pub(crate) parent_links:
        std::option::Option<std::vec::Vec<crate::types::ObjectIdentifierAndLinkNameTuple>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl BatchListObjectParentsResponseBuilder {
    /// Appends an item to `parent_links`.
    ///
    /// To override the contents of this collection use [`set_parent_links`](Self::set_parent_links).
    ///
    /// <p>Returns a list of parent reference and LinkName Tuples.</p>
    pub fn parent_links(mut self, input: crate::types::ObjectIdentifierAndLinkNameTuple) -> Self {
        let mut v = self.parent_links.unwrap_or_default();
        v.push(input);
        self.parent_links = Some(v);
        self
    }
    /// <p>Returns a list of parent reference and LinkName Tuples.</p>
    pub fn set_parent_links(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ObjectIdentifierAndLinkNameTuple>>,
    ) -> Self {
        self.parent_links = input;
        self
    }
    /// <p>The pagination token.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchListObjectParentsResponse`](crate::types::BatchListObjectParentsResponse).
    pub fn build(self) -> crate::types::BatchListObjectParentsResponse {
        crate::types::BatchListObjectParentsResponse {
            parent_links: self.parent_links,
            next_token: self.next_token,
        }
    }
}
