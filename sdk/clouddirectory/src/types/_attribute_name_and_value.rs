// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Identifies the attribute name and value for a typed link.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AttributeNameAndValue {
    /// <p>The attribute name of the typed link.</p>
    #[doc(hidden)]
    pub attribute_name: std::option::Option<std::string::String>,
    /// <p>The value for the typed link.</p>
    #[doc(hidden)]
    pub value: std::option::Option<crate::types::TypedAttributeValue>,
}
impl AttributeNameAndValue {
    /// <p>The attribute name of the typed link.</p>
    pub fn attribute_name(&self) -> std::option::Option<&str> {
        self.attribute_name.as_deref()
    }
    /// <p>The value for the typed link.</p>
    pub fn value(&self) -> std::option::Option<&crate::types::TypedAttributeValue> {
        self.value.as_ref()
    }
}
impl AttributeNameAndValue {
    /// Creates a new builder-style object to manufacture [`AttributeNameAndValue`](crate::types::AttributeNameAndValue).
    pub fn builder() -> crate::types::builders::AttributeNameAndValueBuilder {
        crate::types::builders::AttributeNameAndValueBuilder::default()
    }
}

/// A builder for [`AttributeNameAndValue`](crate::types::AttributeNameAndValue).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AttributeNameAndValueBuilder {
    pub(crate) attribute_name: std::option::Option<std::string::String>,
    pub(crate) value: std::option::Option<crate::types::TypedAttributeValue>,
}
impl AttributeNameAndValueBuilder {
    /// <p>The attribute name of the typed link.</p>
    pub fn attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.attribute_name = Some(input.into());
        self
    }
    /// <p>The attribute name of the typed link.</p>
    pub fn set_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attribute_name = input;
        self
    }
    /// <p>The value for the typed link.</p>
    pub fn value(mut self, input: crate::types::TypedAttributeValue) -> Self {
        self.value = Some(input);
        self
    }
    /// <p>The value for the typed link.</p>
    pub fn set_value(
        mut self,
        input: std::option::Option<crate::types::TypedAttributeValue>,
    ) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`AttributeNameAndValue`](crate::types::AttributeNameAndValue).
    pub fn build(self) -> crate::types::AttributeNameAndValue {
        crate::types::AttributeNameAndValue {
            attribute_name: self.attribute_name,
            value: self.value,
        }
    }
}
