// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A pair of ObjectIdentifier and LinkName.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ObjectIdentifierAndLinkNameTuple {
    /// <p>The ID that is associated with the object.</p>
    #[doc(hidden)]
    pub object_identifier: std::option::Option<std::string::String>,
    /// <p>The name of the link between the parent and the child object.</p>
    #[doc(hidden)]
    pub link_name: std::option::Option<std::string::String>,
}
impl ObjectIdentifierAndLinkNameTuple {
    /// <p>The ID that is associated with the object.</p>
    pub fn object_identifier(&self) -> std::option::Option<&str> {
        self.object_identifier.as_deref()
    }
    /// <p>The name of the link between the parent and the child object.</p>
    pub fn link_name(&self) -> std::option::Option<&str> {
        self.link_name.as_deref()
    }
}
impl ObjectIdentifierAndLinkNameTuple {
    /// Creates a new builder-style object to manufacture [`ObjectIdentifierAndLinkNameTuple`](crate::types::ObjectIdentifierAndLinkNameTuple).
    pub fn builder() -> crate::types::builders::ObjectIdentifierAndLinkNameTupleBuilder {
        crate::types::builders::ObjectIdentifierAndLinkNameTupleBuilder::default()
    }
}

/// A builder for [`ObjectIdentifierAndLinkNameTuple`](crate::types::ObjectIdentifierAndLinkNameTuple).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ObjectIdentifierAndLinkNameTupleBuilder {
    pub(crate) object_identifier: std::option::Option<std::string::String>,
    pub(crate) link_name: std::option::Option<std::string::String>,
}
impl ObjectIdentifierAndLinkNameTupleBuilder {
    /// <p>The ID that is associated with the object.</p>
    pub fn object_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.object_identifier = Some(input.into());
        self
    }
    /// <p>The ID that is associated with the object.</p>
    pub fn set_object_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.object_identifier = input;
        self
    }
    /// <p>The name of the link between the parent and the child object.</p>
    pub fn link_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.link_name = Some(input.into());
        self
    }
    /// <p>The name of the link between the parent and the child object.</p>
    pub fn set_link_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.link_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ObjectIdentifierAndLinkNameTuple`](crate::types::ObjectIdentifierAndLinkNameTuple).
    pub fn build(self) -> crate::types::ObjectIdentifierAndLinkNameTuple {
        crate::types::ObjectIdentifierAndLinkNameTuple {
            object_identifier: self.object_identifier,
            link_name: self.link_name,
        }
    }
}
