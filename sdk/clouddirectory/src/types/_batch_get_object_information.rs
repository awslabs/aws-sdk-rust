// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Retrieves metadata about an object inside a <code>BatchRead</code> operation. For more information, see <code>GetObjectInformation</code> and <code>BatchReadRequest$Operations</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchGetObjectInformation {
    /// <p>A reference to the object.</p>
    #[doc(hidden)]
    pub object_reference: std::option::Option<crate::types::ObjectReference>,
}
impl BatchGetObjectInformation {
    /// <p>A reference to the object.</p>
    pub fn object_reference(&self) -> std::option::Option<&crate::types::ObjectReference> {
        self.object_reference.as_ref()
    }
}
impl BatchGetObjectInformation {
    /// Creates a new builder-style object to manufacture [`BatchGetObjectInformation`](crate::types::BatchGetObjectInformation).
    pub fn builder() -> crate::types::builders::BatchGetObjectInformationBuilder {
        crate::types::builders::BatchGetObjectInformationBuilder::default()
    }
}

/// A builder for [`BatchGetObjectInformation`](crate::types::BatchGetObjectInformation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchGetObjectInformationBuilder {
    pub(crate) object_reference: std::option::Option<crate::types::ObjectReference>,
}
impl BatchGetObjectInformationBuilder {
    /// <p>A reference to the object.</p>
    pub fn object_reference(mut self, input: crate::types::ObjectReference) -> Self {
        self.object_reference = Some(input);
        self
    }
    /// <p>A reference to the object.</p>
    pub fn set_object_reference(
        mut self,
        input: std::option::Option<crate::types::ObjectReference>,
    ) -> Self {
        self.object_reference = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetObjectInformation`](crate::types::BatchGetObjectInformation).
    pub fn build(self) -> crate::types::BatchGetObjectInformation {
        crate::types::BatchGetObjectInformation {
            object_reference: self.object_reference,
        }
    }
}
