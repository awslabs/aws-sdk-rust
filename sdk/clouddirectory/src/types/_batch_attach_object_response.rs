// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output batch <code>AttachObject</code> response operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchAttachObjectResponse {
    /// <p>The <code>ObjectIdentifier</code> of the object that has been attached.</p>
    #[doc(hidden)]
    pub attached_object_identifier: std::option::Option<std::string::String>,
}
impl BatchAttachObjectResponse {
    /// <p>The <code>ObjectIdentifier</code> of the object that has been attached.</p>
    pub fn attached_object_identifier(&self) -> std::option::Option<&str> {
        self.attached_object_identifier.as_deref()
    }
}
impl BatchAttachObjectResponse {
    /// Creates a new builder-style object to manufacture [`BatchAttachObjectResponse`](crate::types::BatchAttachObjectResponse).
    pub fn builder() -> crate::types::builders::BatchAttachObjectResponseBuilder {
        crate::types::builders::BatchAttachObjectResponseBuilder::default()
    }
}

/// A builder for [`BatchAttachObjectResponse`](crate::types::BatchAttachObjectResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchAttachObjectResponseBuilder {
    pub(crate) attached_object_identifier: std::option::Option<std::string::String>,
}
impl BatchAttachObjectResponseBuilder {
    /// <p>The <code>ObjectIdentifier</code> of the object that has been attached.</p>
    pub fn attached_object_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.attached_object_identifier = Some(input.into());
        self
    }
    /// <p>The <code>ObjectIdentifier</code> of the object that has been attached.</p>
    pub fn set_attached_object_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.attached_object_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchAttachObjectResponse`](crate::types::BatchAttachObjectResponse).
    pub fn build(self) -> crate::types::BatchAttachObjectResponse {
        crate::types::BatchAttachObjectResponse {
            attached_object_identifier: self.attached_object_identifier,
        }
    }
}
