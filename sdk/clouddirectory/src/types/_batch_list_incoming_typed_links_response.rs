// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>ListIncomingTypedLinks</code> response operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchListIncomingTypedLinksResponse {
    /// <p>Returns one or more typed link specifiers as output.</p>
    #[doc(hidden)]
    pub link_specifiers: std::option::Option<std::vec::Vec<crate::types::TypedLinkSpecifier>>,
    /// <p>The pagination token.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl BatchListIncomingTypedLinksResponse {
    /// <p>Returns one or more typed link specifiers as output.</p>
    pub fn link_specifiers(&self) -> std::option::Option<&[crate::types::TypedLinkSpecifier]> {
        self.link_specifiers.as_deref()
    }
    /// <p>The pagination token.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl BatchListIncomingTypedLinksResponse {
    /// Creates a new builder-style object to manufacture [`BatchListIncomingTypedLinksResponse`](crate::types::BatchListIncomingTypedLinksResponse).
    pub fn builder() -> crate::types::builders::BatchListIncomingTypedLinksResponseBuilder {
        crate::types::builders::BatchListIncomingTypedLinksResponseBuilder::default()
    }
}

/// A builder for [`BatchListIncomingTypedLinksResponse`](crate::types::BatchListIncomingTypedLinksResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchListIncomingTypedLinksResponseBuilder {
    pub(crate) link_specifiers:
        std::option::Option<std::vec::Vec<crate::types::TypedLinkSpecifier>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl BatchListIncomingTypedLinksResponseBuilder {
    /// Appends an item to `link_specifiers`.
    ///
    /// To override the contents of this collection use [`set_link_specifiers`](Self::set_link_specifiers).
    ///
    /// <p>Returns one or more typed link specifiers as output.</p>
    pub fn link_specifiers(mut self, input: crate::types::TypedLinkSpecifier) -> Self {
        let mut v = self.link_specifiers.unwrap_or_default();
        v.push(input);
        self.link_specifiers = Some(v);
        self
    }
    /// <p>Returns one or more typed link specifiers as output.</p>
    pub fn set_link_specifiers(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TypedLinkSpecifier>>,
    ) -> Self {
        self.link_specifiers = input;
        self
    }
    /// <p>The pagination token.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchListIncomingTypedLinksResponse`](crate::types::BatchListIncomingTypedLinksResponse).
    pub fn build(self) -> crate::types::BatchListIncomingTypedLinksResponse {
        crate::types::BatchListIncomingTypedLinksResponse {
            link_specifiers: self.link_specifiers,
            next_token: self.next_token,
        }
    }
}
