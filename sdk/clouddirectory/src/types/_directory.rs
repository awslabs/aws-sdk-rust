// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Directory structure that includes the directory name and directory ARN.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Directory {
    /// <p>The name of the directory.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) that is associated with the directory. For more information, see <code>arns</code>.</p>
    #[doc(hidden)]
    pub directory_arn: std::option::Option<std::string::String>,
    /// <p>The state of the directory. Can be either <code>Enabled</code>, <code>Disabled</code>, or <code>Deleted</code>.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::DirectoryState>,
    /// <p>The date and time when the directory was created.</p>
    #[doc(hidden)]
    pub creation_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl Directory {
    /// <p>The name of the directory.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) that is associated with the directory. For more information, see <code>arns</code>.</p>
    pub fn directory_arn(&self) -> std::option::Option<&str> {
        self.directory_arn.as_deref()
    }
    /// <p>The state of the directory. Can be either <code>Enabled</code>, <code>Disabled</code>, or <code>Deleted</code>.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::DirectoryState> {
        self.state.as_ref()
    }
    /// <p>The date and time when the directory was created.</p>
    pub fn creation_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_date_time.as_ref()
    }
}
impl Directory {
    /// Creates a new builder-style object to manufacture [`Directory`](crate::types::Directory).
    pub fn builder() -> crate::types::builders::DirectoryBuilder {
        crate::types::builders::DirectoryBuilder::default()
    }
}

/// A builder for [`Directory`](crate::types::Directory).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DirectoryBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) directory_arn: std::option::Option<std::string::String>,
    pub(crate) state: std::option::Option<crate::types::DirectoryState>,
    pub(crate) creation_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl DirectoryBuilder {
    /// <p>The name of the directory.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the directory.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) that is associated with the directory. For more information, see <code>arns</code>.</p>
    pub fn directory_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.directory_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that is associated with the directory. For more information, see <code>arns</code>.</p>
    pub fn set_directory_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.directory_arn = input;
        self
    }
    /// <p>The state of the directory. Can be either <code>Enabled</code>, <code>Disabled</code>, or <code>Deleted</code>.</p>
    pub fn state(mut self, input: crate::types::DirectoryState) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>The state of the directory. Can be either <code>Enabled</code>, <code>Disabled</code>, or <code>Deleted</code>.</p>
    pub fn set_state(mut self, input: std::option::Option<crate::types::DirectoryState>) -> Self {
        self.state = input;
        self
    }
    /// <p>The date and time when the directory was created.</p>
    pub fn creation_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_date_time = Some(input);
        self
    }
    /// <p>The date and time when the directory was created.</p>
    pub fn set_creation_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`Directory`](crate::types::Directory).
    pub fn build(self) -> crate::types::Directory {
        crate::types::Directory {
            name: self.name,
            directory_arn: self.directory_arn,
            state: self.state,
            creation_date_time: self.creation_date_time,
        }
    }
}
