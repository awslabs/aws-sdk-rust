// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>ListObjectChildren</code> response operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchListObjectChildrenResponse {
    /// <p>The children structure, which is a map with the key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.</p>
    #[doc(hidden)]
    pub children:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    /// <p>The pagination token.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl BatchListObjectChildrenResponse {
    /// <p>The children structure, which is a map with the key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.</p>
    pub fn children(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.children.as_ref()
    }
    /// <p>The pagination token.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl BatchListObjectChildrenResponse {
    /// Creates a new builder-style object to manufacture [`BatchListObjectChildrenResponse`](crate::types::BatchListObjectChildrenResponse).
    pub fn builder() -> crate::types::builders::BatchListObjectChildrenResponseBuilder {
        crate::types::builders::BatchListObjectChildrenResponseBuilder::default()
    }
}

/// A builder for [`BatchListObjectChildrenResponse`](crate::types::BatchListObjectChildrenResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchListObjectChildrenResponseBuilder {
    pub(crate) children:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl BatchListObjectChildrenResponseBuilder {
    /// Adds a key-value pair to `children`.
    ///
    /// To override the contents of this collection use [`set_children`](Self::set_children).
    ///
    /// <p>The children structure, which is a map with the key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.</p>
    pub fn children(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.children.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.children = Some(hash_map);
        self
    }
    /// <p>The children structure, which is a map with the key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.</p>
    pub fn set_children(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.children = input;
        self
    }
    /// <p>The pagination token.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchListObjectChildrenResponse`](crate::types::BatchListObjectChildrenResponse).
    pub fn build(self) -> crate::types::BatchListObjectChildrenResponse {
        crate::types::BatchListObjectChildrenResponse {
            children: self.children,
            next_token: self.next_token,
        }
    }
}
