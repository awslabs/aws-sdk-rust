// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>ListObjectPolicies</code> response operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchListObjectPoliciesResponse {
    /// <p>A list of policy <code>ObjectIdentifiers</code>, that are attached to the object.</p>
    #[doc(hidden)]
    pub attached_policy_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The pagination token.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl BatchListObjectPoliciesResponse {
    /// <p>A list of policy <code>ObjectIdentifiers</code>, that are attached to the object.</p>
    pub fn attached_policy_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.attached_policy_ids.as_deref()
    }
    /// <p>The pagination token.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl BatchListObjectPoliciesResponse {
    /// Creates a new builder-style object to manufacture [`BatchListObjectPoliciesResponse`](crate::types::BatchListObjectPoliciesResponse).
    pub fn builder() -> crate::types::builders::BatchListObjectPoliciesResponseBuilder {
        crate::types::builders::BatchListObjectPoliciesResponseBuilder::default()
    }
}

/// A builder for [`BatchListObjectPoliciesResponse`](crate::types::BatchListObjectPoliciesResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchListObjectPoliciesResponseBuilder {
    pub(crate) attached_policy_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl BatchListObjectPoliciesResponseBuilder {
    /// Appends an item to `attached_policy_ids`.
    ///
    /// To override the contents of this collection use [`set_attached_policy_ids`](Self::set_attached_policy_ids).
    ///
    /// <p>A list of policy <code>ObjectIdentifiers</code>, that are attached to the object.</p>
    pub fn attached_policy_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.attached_policy_ids.unwrap_or_default();
        v.push(input.into());
        self.attached_policy_ids = Some(v);
        self
    }
    /// <p>A list of policy <code>ObjectIdentifiers</code>, that are attached to the object.</p>
    pub fn set_attached_policy_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.attached_policy_ids = input;
        self
    }
    /// <p>The pagination token.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchListObjectPoliciesResponse`](crate::types::BatchListObjectPoliciesResponse).
    pub fn build(self) -> crate::types::BatchListObjectPoliciesResponse {
        crate::types::BatchListObjectPoliciesResponse {
            attached_policy_ids: self.attached_policy_ids,
            next_token: self.next_token,
        }
    }
}
