// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>ListAttachedIndices</code> response operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchListAttachedIndicesResponse {
    /// <p>The indices attached to the specified object.</p>
    #[doc(hidden)]
    pub index_attachments: std::option::Option<std::vec::Vec<crate::types::IndexAttachment>>,
    /// <p>The pagination token.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl BatchListAttachedIndicesResponse {
    /// <p>The indices attached to the specified object.</p>
    pub fn index_attachments(&self) -> std::option::Option<&[crate::types::IndexAttachment]> {
        self.index_attachments.as_deref()
    }
    /// <p>The pagination token.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl BatchListAttachedIndicesResponse {
    /// Creates a new builder-style object to manufacture [`BatchListAttachedIndicesResponse`](crate::types::BatchListAttachedIndicesResponse).
    pub fn builder() -> crate::types::builders::BatchListAttachedIndicesResponseBuilder {
        crate::types::builders::BatchListAttachedIndicesResponseBuilder::default()
    }
}

/// A builder for [`BatchListAttachedIndicesResponse`](crate::types::BatchListAttachedIndicesResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchListAttachedIndicesResponseBuilder {
    pub(crate) index_attachments: std::option::Option<std::vec::Vec<crate::types::IndexAttachment>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl BatchListAttachedIndicesResponseBuilder {
    /// Appends an item to `index_attachments`.
    ///
    /// To override the contents of this collection use [`set_index_attachments`](Self::set_index_attachments).
    ///
    /// <p>The indices attached to the specified object.</p>
    pub fn index_attachments(mut self, input: crate::types::IndexAttachment) -> Self {
        let mut v = self.index_attachments.unwrap_or_default();
        v.push(input);
        self.index_attachments = Some(v);
        self
    }
    /// <p>The indices attached to the specified object.</p>
    pub fn set_index_attachments(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::IndexAttachment>>,
    ) -> Self {
        self.index_attachments = input;
        self
    }
    /// <p>The pagination token.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchListAttachedIndicesResponse`](crate::types::BatchListAttachedIndicesResponse).
    pub fn build(self) -> crate::types::BatchListAttachedIndicesResponse {
        crate::types::BatchListAttachedIndicesResponse {
            index_attachments: self.index_attachments,
            next_token: self.next_token,
        }
    }
}
