// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Detaches a typed link from a specified source and target object inside a <code>BatchRead</code> operation. For more information, see <code>DetachTypedLink</code> and <code>BatchReadRequest$Operations</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchDetachTypedLink {
    /// <p>Used to accept a typed link specifier as input.</p>
    pub typed_link_specifier: ::std::option::Option<crate::types::TypedLinkSpecifier>,
}
impl BatchDetachTypedLink {
    /// <p>Used to accept a typed link specifier as input.</p>
    pub fn typed_link_specifier(&self) -> ::std::option::Option<&crate::types::TypedLinkSpecifier> {
        self.typed_link_specifier.as_ref()
    }
}
impl BatchDetachTypedLink {
    /// Creates a new builder-style object to manufacture [`BatchDetachTypedLink`](crate::types::BatchDetachTypedLink).
    pub fn builder() -> crate::types::builders::BatchDetachTypedLinkBuilder {
        crate::types::builders::BatchDetachTypedLinkBuilder::default()
    }
}

/// A builder for [`BatchDetachTypedLink`](crate::types::BatchDetachTypedLink).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchDetachTypedLinkBuilder {
    pub(crate) typed_link_specifier: ::std::option::Option<crate::types::TypedLinkSpecifier>,
}
impl BatchDetachTypedLinkBuilder {
    /// <p>Used to accept a typed link specifier as input.</p>
    /// This field is required.
    pub fn typed_link_specifier(mut self, input: crate::types::TypedLinkSpecifier) -> Self {
        self.typed_link_specifier = ::std::option::Option::Some(input);
        self
    }
    /// <p>Used to accept a typed link specifier as input.</p>
    pub fn set_typed_link_specifier(mut self, input: ::std::option::Option<crate::types::TypedLinkSpecifier>) -> Self {
        self.typed_link_specifier = input;
        self
    }
    /// <p>Used to accept a typed link specifier as input.</p>
    pub fn get_typed_link_specifier(&self) -> &::std::option::Option<crate::types::TypedLinkSpecifier> {
        &self.typed_link_specifier
    }
    /// Consumes the builder and constructs a [`BatchDetachTypedLink`](crate::types::BatchDetachTypedLink).
    pub fn build(self) -> crate::types::BatchDetachTypedLink {
        crate::types::BatchDetachTypedLink {
            typed_link_specifier: self.typed_link_specifier,
        }
    }
}
