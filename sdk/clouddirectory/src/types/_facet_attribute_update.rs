// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains information used to update an attribute.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FacetAttributeUpdate {
    /// <p>The attribute to update.</p>
    #[doc(hidden)]
    pub attribute: std::option::Option<crate::types::FacetAttribute>,
    /// <p>The action to perform when updating the attribute.</p>
    #[doc(hidden)]
    pub action: std::option::Option<crate::types::UpdateActionType>,
}
impl FacetAttributeUpdate {
    /// <p>The attribute to update.</p>
    pub fn attribute(&self) -> std::option::Option<&crate::types::FacetAttribute> {
        self.attribute.as_ref()
    }
    /// <p>The action to perform when updating the attribute.</p>
    pub fn action(&self) -> std::option::Option<&crate::types::UpdateActionType> {
        self.action.as_ref()
    }
}
impl FacetAttributeUpdate {
    /// Creates a new builder-style object to manufacture [`FacetAttributeUpdate`](crate::types::FacetAttributeUpdate).
    pub fn builder() -> crate::types::builders::FacetAttributeUpdateBuilder {
        crate::types::builders::FacetAttributeUpdateBuilder::default()
    }
}

/// A builder for [`FacetAttributeUpdate`](crate::types::FacetAttributeUpdate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FacetAttributeUpdateBuilder {
    pub(crate) attribute: std::option::Option<crate::types::FacetAttribute>,
    pub(crate) action: std::option::Option<crate::types::UpdateActionType>,
}
impl FacetAttributeUpdateBuilder {
    /// <p>The attribute to update.</p>
    pub fn attribute(mut self, input: crate::types::FacetAttribute) -> Self {
        self.attribute = Some(input);
        self
    }
    /// <p>The attribute to update.</p>
    pub fn set_attribute(
        mut self,
        input: std::option::Option<crate::types::FacetAttribute>,
    ) -> Self {
        self.attribute = input;
        self
    }
    /// <p>The action to perform when updating the attribute.</p>
    pub fn action(mut self, input: crate::types::UpdateActionType) -> Self {
        self.action = Some(input);
        self
    }
    /// <p>The action to perform when updating the attribute.</p>
    pub fn set_action(
        mut self,
        input: std::option::Option<crate::types::UpdateActionType>,
    ) -> Self {
        self.action = input;
        self
    }
    /// Consumes the builder and constructs a [`FacetAttributeUpdate`](crate::types::FacetAttributeUpdate).
    pub fn build(self) -> crate::types::FacetAttributeUpdate {
        crate::types::FacetAttributeUpdate {
            attribute: self.attribute,
            action: self.action,
        }
    }
}
