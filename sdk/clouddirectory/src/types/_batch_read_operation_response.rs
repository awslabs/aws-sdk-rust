// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>BatchRead</code> response operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchReadOperationResponse {
    /// <p>Identifies which operation in a batch has succeeded.</p>
    #[doc(hidden)]
    pub successful_response: std::option::Option<crate::types::BatchReadSuccessfulResponse>,
    /// <p>Identifies which operation in a batch has failed.</p>
    #[doc(hidden)]
    pub exception_response: std::option::Option<crate::types::BatchReadException>,
}
impl BatchReadOperationResponse {
    /// <p>Identifies which operation in a batch has succeeded.</p>
    pub fn successful_response(
        &self,
    ) -> std::option::Option<&crate::types::BatchReadSuccessfulResponse> {
        self.successful_response.as_ref()
    }
    /// <p>Identifies which operation in a batch has failed.</p>
    pub fn exception_response(&self) -> std::option::Option<&crate::types::BatchReadException> {
        self.exception_response.as_ref()
    }
}
impl BatchReadOperationResponse {
    /// Creates a new builder-style object to manufacture [`BatchReadOperationResponse`](crate::types::BatchReadOperationResponse).
    pub fn builder() -> crate::types::builders::BatchReadOperationResponseBuilder {
        crate::types::builders::BatchReadOperationResponseBuilder::default()
    }
}

/// A builder for [`BatchReadOperationResponse`](crate::types::BatchReadOperationResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchReadOperationResponseBuilder {
    pub(crate) successful_response: std::option::Option<crate::types::BatchReadSuccessfulResponse>,
    pub(crate) exception_response: std::option::Option<crate::types::BatchReadException>,
}
impl BatchReadOperationResponseBuilder {
    /// <p>Identifies which operation in a batch has succeeded.</p>
    pub fn successful_response(mut self, input: crate::types::BatchReadSuccessfulResponse) -> Self {
        self.successful_response = Some(input);
        self
    }
    /// <p>Identifies which operation in a batch has succeeded.</p>
    pub fn set_successful_response(
        mut self,
        input: std::option::Option<crate::types::BatchReadSuccessfulResponse>,
    ) -> Self {
        self.successful_response = input;
        self
    }
    /// <p>Identifies which operation in a batch has failed.</p>
    pub fn exception_response(mut self, input: crate::types::BatchReadException) -> Self {
        self.exception_response = Some(input);
        self
    }
    /// <p>Identifies which operation in a batch has failed.</p>
    pub fn set_exception_response(
        mut self,
        input: std::option::Option<crate::types::BatchReadException>,
    ) -> Self {
        self.exception_response = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchReadOperationResponse`](crate::types::BatchReadOperationResponse).
    pub fn build(self) -> crate::types::BatchReadOperationResponse {
        crate::types::BatchReadOperationResponse {
            successful_response: self.successful_response,
            exception_response: self.exception_response,
        }
    }
}
