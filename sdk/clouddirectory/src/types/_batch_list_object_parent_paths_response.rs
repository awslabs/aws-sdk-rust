// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>ListObjectParentPaths</code> response operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchListObjectParentPathsResponse {
    /// <p>Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory.</p>
    #[doc(hidden)]
    pub path_to_object_identifiers_list:
        std::option::Option<std::vec::Vec<crate::types::PathToObjectIdentifiers>>,
    /// <p>The pagination token.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl BatchListObjectParentPathsResponse {
    /// <p>Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory.</p>
    pub fn path_to_object_identifiers_list(
        &self,
    ) -> std::option::Option<&[crate::types::PathToObjectIdentifiers]> {
        self.path_to_object_identifiers_list.as_deref()
    }
    /// <p>The pagination token.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl BatchListObjectParentPathsResponse {
    /// Creates a new builder-style object to manufacture [`BatchListObjectParentPathsResponse`](crate::types::BatchListObjectParentPathsResponse).
    pub fn builder() -> crate::types::builders::BatchListObjectParentPathsResponseBuilder {
        crate::types::builders::BatchListObjectParentPathsResponseBuilder::default()
    }
}

/// A builder for [`BatchListObjectParentPathsResponse`](crate::types::BatchListObjectParentPathsResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchListObjectParentPathsResponseBuilder {
    pub(crate) path_to_object_identifiers_list:
        std::option::Option<std::vec::Vec<crate::types::PathToObjectIdentifiers>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl BatchListObjectParentPathsResponseBuilder {
    /// Appends an item to `path_to_object_identifiers_list`.
    ///
    /// To override the contents of this collection use [`set_path_to_object_identifiers_list`](Self::set_path_to_object_identifiers_list).
    ///
    /// <p>Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory.</p>
    pub fn path_to_object_identifiers_list(
        mut self,
        input: crate::types::PathToObjectIdentifiers,
    ) -> Self {
        let mut v = self.path_to_object_identifiers_list.unwrap_or_default();
        v.push(input);
        self.path_to_object_identifiers_list = Some(v);
        self
    }
    /// <p>Returns the path to the <code>ObjectIdentifiers</code> that are associated with the directory.</p>
    pub fn set_path_to_object_identifiers_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PathToObjectIdentifiers>>,
    ) -> Self {
        self.path_to_object_identifiers_list = input;
        self
    }
    /// <p>The pagination token.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchListObjectParentPathsResponse`](crate::types::BatchListObjectParentPathsResponse).
    pub fn build(self) -> crate::types::BatchListObjectParentPathsResponse {
        crate::types::BatchListObjectParentPathsResponse {
            path_to_object_identifiers_list: self.path_to_object_identifiers_list,
            next_token: self.next_token,
        }
    }
}
