// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>ListOutgoingTypedLinks</code> response operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchListOutgoingTypedLinksResponse {
    /// <p>Returns a typed link specifier as output.</p>
    pub typed_link_specifiers: ::std::option::Option<::std::vec::Vec<crate::types::TypedLinkSpecifier>>,
    /// <p>The pagination token.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl BatchListOutgoingTypedLinksResponse {
    /// <p>Returns a typed link specifier as output.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.typed_link_specifiers.is_none()`.
    pub fn typed_link_specifiers(&self) -> &[crate::types::TypedLinkSpecifier] {
        self.typed_link_specifiers.as_deref().unwrap_or_default()
    }
    /// <p>The pagination token.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl BatchListOutgoingTypedLinksResponse {
    /// Creates a new builder-style object to manufacture [`BatchListOutgoingTypedLinksResponse`](crate::types::BatchListOutgoingTypedLinksResponse).
    pub fn builder() -> crate::types::builders::BatchListOutgoingTypedLinksResponseBuilder {
        crate::types::builders::BatchListOutgoingTypedLinksResponseBuilder::default()
    }
}

/// A builder for [`BatchListOutgoingTypedLinksResponse`](crate::types::BatchListOutgoingTypedLinksResponse).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchListOutgoingTypedLinksResponseBuilder {
    pub(crate) typed_link_specifiers: ::std::option::Option<::std::vec::Vec<crate::types::TypedLinkSpecifier>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl BatchListOutgoingTypedLinksResponseBuilder {
    /// Appends an item to `typed_link_specifiers`.
    ///
    /// To override the contents of this collection use [`set_typed_link_specifiers`](Self::set_typed_link_specifiers).
    ///
    /// <p>Returns a typed link specifier as output.</p>
    pub fn typed_link_specifiers(mut self, input: crate::types::TypedLinkSpecifier) -> Self {
        let mut v = self.typed_link_specifiers.unwrap_or_default();
        v.push(input);
        self.typed_link_specifiers = ::std::option::Option::Some(v);
        self
    }
    /// <p>Returns a typed link specifier as output.</p>
    pub fn set_typed_link_specifiers(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::TypedLinkSpecifier>>) -> Self {
        self.typed_link_specifiers = input;
        self
    }
    /// <p>Returns a typed link specifier as output.</p>
    pub fn get_typed_link_specifiers(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::TypedLinkSpecifier>> {
        &self.typed_link_specifiers
    }
    /// <p>The pagination token.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The pagination token.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The pagination token.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`BatchListOutgoingTypedLinksResponse`](crate::types::BatchListOutgoingTypedLinksResponse).
    pub fn build(self) -> crate::types::BatchListOutgoingTypedLinksResponse {
        crate::types::BatchListOutgoingTypedLinksResponse {
            typed_link_specifiers: self.typed_link_specifiers,
            next_token: self.next_token,
        }
    }
}
