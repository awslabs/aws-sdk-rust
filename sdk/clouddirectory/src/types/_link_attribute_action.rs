// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The action to take on a typed link attribute value. Updates are only supported for attributes which donâ€™t contribute to link identity.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LinkAttributeAction {
    /// <p>A type that can be either <code>UPDATE_OR_CREATE</code> or <code>DELETE</code>.</p>
    #[doc(hidden)]
    pub attribute_action_type: std::option::Option<crate::types::UpdateActionType>,
    /// <p>The value that you want to update to.</p>
    #[doc(hidden)]
    pub attribute_update_value: std::option::Option<crate::types::TypedAttributeValue>,
}
impl LinkAttributeAction {
    /// <p>A type that can be either <code>UPDATE_OR_CREATE</code> or <code>DELETE</code>.</p>
    pub fn attribute_action_type(&self) -> std::option::Option<&crate::types::UpdateActionType> {
        self.attribute_action_type.as_ref()
    }
    /// <p>The value that you want to update to.</p>
    pub fn attribute_update_value(
        &self,
    ) -> std::option::Option<&crate::types::TypedAttributeValue> {
        self.attribute_update_value.as_ref()
    }
}
impl LinkAttributeAction {
    /// Creates a new builder-style object to manufacture [`LinkAttributeAction`](crate::types::LinkAttributeAction).
    pub fn builder() -> crate::types::builders::LinkAttributeActionBuilder {
        crate::types::builders::LinkAttributeActionBuilder::default()
    }
}

/// A builder for [`LinkAttributeAction`](crate::types::LinkAttributeAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LinkAttributeActionBuilder {
    pub(crate) attribute_action_type: std::option::Option<crate::types::UpdateActionType>,
    pub(crate) attribute_update_value: std::option::Option<crate::types::TypedAttributeValue>,
}
impl LinkAttributeActionBuilder {
    /// <p>A type that can be either <code>UPDATE_OR_CREATE</code> or <code>DELETE</code>.</p>
    pub fn attribute_action_type(mut self, input: crate::types::UpdateActionType) -> Self {
        self.attribute_action_type = Some(input);
        self
    }
    /// <p>A type that can be either <code>UPDATE_OR_CREATE</code> or <code>DELETE</code>.</p>
    pub fn set_attribute_action_type(
        mut self,
        input: std::option::Option<crate::types::UpdateActionType>,
    ) -> Self {
        self.attribute_action_type = input;
        self
    }
    /// <p>The value that you want to update to.</p>
    pub fn attribute_update_value(mut self, input: crate::types::TypedAttributeValue) -> Self {
        self.attribute_update_value = Some(input);
        self
    }
    /// <p>The value that you want to update to.</p>
    pub fn set_attribute_update_value(
        mut self,
        input: std::option::Option<crate::types::TypedAttributeValue>,
    ) -> Self {
        self.attribute_update_value = input;
        self
    }
    /// Consumes the builder and constructs a [`LinkAttributeAction`](crate::types::LinkAttributeAction).
    pub fn build(self) -> crate::types::LinkAttributeAction {
        crate::types::LinkAttributeAction {
            attribute_action_type: self.attribute_action_type,
            attribute_update_value: self.attribute_update_value,
        }
    }
}
