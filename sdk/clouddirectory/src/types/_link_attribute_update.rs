// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Structure that contains attribute update information.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LinkAttributeUpdate {
    /// <p>The key of the attribute being updated.</p>
    #[doc(hidden)]
    pub attribute_key: std::option::Option<crate::types::AttributeKey>,
    /// <p>The action to perform as part of the attribute update.</p>
    #[doc(hidden)]
    pub attribute_action: std::option::Option<crate::types::LinkAttributeAction>,
}
impl LinkAttributeUpdate {
    /// <p>The key of the attribute being updated.</p>
    pub fn attribute_key(&self) -> std::option::Option<&crate::types::AttributeKey> {
        self.attribute_key.as_ref()
    }
    /// <p>The action to perform as part of the attribute update.</p>
    pub fn attribute_action(&self) -> std::option::Option<&crate::types::LinkAttributeAction> {
        self.attribute_action.as_ref()
    }
}
impl LinkAttributeUpdate {
    /// Creates a new builder-style object to manufacture [`LinkAttributeUpdate`](crate::types::LinkAttributeUpdate).
    pub fn builder() -> crate::types::builders::LinkAttributeUpdateBuilder {
        crate::types::builders::LinkAttributeUpdateBuilder::default()
    }
}

/// A builder for [`LinkAttributeUpdate`](crate::types::LinkAttributeUpdate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LinkAttributeUpdateBuilder {
    pub(crate) attribute_key: std::option::Option<crate::types::AttributeKey>,
    pub(crate) attribute_action: std::option::Option<crate::types::LinkAttributeAction>,
}
impl LinkAttributeUpdateBuilder {
    /// <p>The key of the attribute being updated.</p>
    pub fn attribute_key(mut self, input: crate::types::AttributeKey) -> Self {
        self.attribute_key = Some(input);
        self
    }
    /// <p>The key of the attribute being updated.</p>
    pub fn set_attribute_key(
        mut self,
        input: std::option::Option<crate::types::AttributeKey>,
    ) -> Self {
        self.attribute_key = input;
        self
    }
    /// <p>The action to perform as part of the attribute update.</p>
    pub fn attribute_action(mut self, input: crate::types::LinkAttributeAction) -> Self {
        self.attribute_action = Some(input);
        self
    }
    /// <p>The action to perform as part of the attribute update.</p>
    pub fn set_attribute_action(
        mut self,
        input: std::option::Option<crate::types::LinkAttributeAction>,
    ) -> Self {
        self.attribute_action = input;
        self
    }
    /// Consumes the builder and constructs a [`LinkAttributeUpdate`](crate::types::LinkAttributeUpdate).
    pub fn build(self) -> crate::types::LinkAttributeUpdate {
        crate::types::LinkAttributeUpdate {
            attribute_key: self.attribute_key,
            attribute_action: self.attribute_action,
        }
    }
}
