// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_applied_schema_arns_output_next_token(
    input: &crate::operation::list_applied_schema_arns::ListAppliedSchemaArnsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_attached_indices_output_next_token(
    input: &crate::operation::list_attached_indices::ListAttachedIndicesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_development_schema_arns_output_next_token(
    input: &crate::operation::list_development_schema_arns::ListDevelopmentSchemaArnsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_directories_output_next_token(
    input: &crate::operation::list_directories::ListDirectoriesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_facet_attributes_output_next_token(
    input: &crate::operation::list_facet_attributes::ListFacetAttributesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_facet_names_output_next_token(
    input: &crate::operation::list_facet_names::ListFacetNamesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_index_output_next_token(
    input: &crate::operation::list_index::ListIndexOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_managed_schema_arns_output_next_token(
    input: &crate::operation::list_managed_schema_arns::ListManagedSchemaArnsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_object_attributes_output_next_token(
    input: &crate::operation::list_object_attributes::ListObjectAttributesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_object_children_output_next_token(
    input: &crate::operation::list_object_children::ListObjectChildrenOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_object_parent_paths_output_next_token(
    input: &crate::operation::list_object_parent_paths::ListObjectParentPathsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_object_parents_output_next_token(
    input: &crate::operation::list_object_parents::ListObjectParentsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_object_policies_output_next_token(
    input: &crate::operation::list_object_policies::ListObjectPoliciesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_policy_attachments_output_next_token(
    input: &crate::operation::list_policy_attachments::ListPolicyAttachmentsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_published_schema_arns_output_next_token(
    input: &crate::operation::list_published_schema_arns::ListPublishedSchemaArnsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_tags_for_resource_output_next_token(
    input: &crate::operation::list_tags_for_resource::ListTagsForResourceOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_typed_link_facet_attributes_output_next_token(
    input: &crate::operation::list_typed_link_facet_attributes::ListTypedLinkFacetAttributesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_typed_link_facet_names_output_next_token(
    input: &crate::operation::list_typed_link_facet_names::ListTypedLinkFacetNamesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_lookup_policy_output_next_token(
    input: &crate::operation::lookup_policy::LookupPolicyOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
