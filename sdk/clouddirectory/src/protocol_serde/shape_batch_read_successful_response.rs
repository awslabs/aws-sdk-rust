// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_batch_read_successful_response<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::BatchReadSuccessfulResponse>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::BatchReadSuccessfulResponseBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "ListObjectAttributes" => {
                                builder = builder.set_list_object_attributes(
                                    crate::protocol_serde::shape_batch_list_object_attributes_response::de_batch_list_object_attributes_response(tokens)?
                                );
                            }
                            "ListObjectChildren" => {
                                builder = builder.set_list_object_children(
                                    crate::protocol_serde::shape_batch_list_object_children_response::de_batch_list_object_children_response(tokens)?
                                );
                            }
                            "GetObjectInformation" => {
                                builder = builder.set_get_object_information(
                                    crate::protocol_serde::shape_batch_get_object_information_response::de_batch_get_object_information_response(tokens)?
                                );
                            }
                            "GetObjectAttributes" => {
                                builder = builder.set_get_object_attributes(
                                    crate::protocol_serde::shape_batch_get_object_attributes_response::de_batch_get_object_attributes_response(tokens)?
                                );
                            }
                            "ListAttachedIndices" => {
                                builder = builder.set_list_attached_indices(
                                    crate::protocol_serde::shape_batch_list_attached_indices_response::de_batch_list_attached_indices_response(tokens)?
                                );
                            }
                            "ListObjectParentPaths" => {
                                builder = builder.set_list_object_parent_paths(
                                    crate::protocol_serde::shape_batch_list_object_parent_paths_response::de_batch_list_object_parent_paths_response(tokens)?
                                );
                            }
                            "ListObjectPolicies" => {
                                builder = builder.set_list_object_policies(
                                    crate::protocol_serde::shape_batch_list_object_policies_response::de_batch_list_object_policies_response(tokens)?
                                );
                            }
                            "ListPolicyAttachments" => {
                                builder = builder.set_list_policy_attachments(
                                    crate::protocol_serde::shape_batch_list_policy_attachments_response::de_batch_list_policy_attachments_response(tokens)?
                                );
                            }
                            "LookupPolicy" => {
                                builder = builder.set_lookup_policy(
                                    crate::protocol_serde::shape_batch_lookup_policy_response::de_batch_lookup_policy_response(tokens)?
                                );
                            }
                            "ListIndex" => {
                                builder = builder.set_list_index(
                                    crate::protocol_serde::shape_batch_list_index_response::de_batch_list_index_response(tokens)?
                                );
                            }
                            "ListOutgoingTypedLinks" => {
                                builder = builder.set_list_outgoing_typed_links(
                                    crate::protocol_serde::shape_batch_list_outgoing_typed_links_response::de_batch_list_outgoing_typed_links_response(tokens)?
                                );
                            }
                            "ListIncomingTypedLinks" => {
                                builder = builder.set_list_incoming_typed_links(
                                    crate::protocol_serde::shape_batch_list_incoming_typed_links_response::de_batch_list_incoming_typed_links_response(tokens)?
                                );
                            }
                            "GetLinkAttributes" => {
                                builder = builder.set_get_link_attributes(
                                    crate::protocol_serde::shape_batch_get_link_attributes_response::de_batch_get_link_attributes_response(tokens)?
                                );
                            }
                            "ListObjectParents" => {
                                builder = builder.set_list_object_parents(
                                    crate::protocol_serde::shape_batch_list_object_parents_response::de_batch_list_object_parents_response(tokens)?
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
