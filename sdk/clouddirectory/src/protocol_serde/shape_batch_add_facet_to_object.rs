// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_batch_add_facet_to_object(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::BatchAddFacetToObject,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.schema_facet {
        #[allow(unused_mut)]
        let mut object_2 = object.key("SchemaFacet").start_object();
        crate::protocol_serde::shape_schema_facet::ser_schema_facet(&mut object_2, var_1)?;
        object_2.finish();
    }
    {
        let mut array_3 = object.key("ObjectAttributeList").start_array();
        for item_4 in &input.object_attribute_list {
            {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::protocol_serde::shape_attribute_key_and_value::ser_attribute_key_and_value(&mut object_5, item_4)?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.object_reference {
        #[allow(unused_mut)]
        let mut object_7 = object.key("ObjectReference").start_object();
        crate::protocol_serde::shape_object_reference::ser_object_reference(&mut object_7, var_6)?;
        object_7.finish();
    }
    Ok(())
}
