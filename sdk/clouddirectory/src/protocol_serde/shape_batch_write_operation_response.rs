// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_batch_write_operation_response<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::BatchWriteOperationResponse>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::BatchWriteOperationResponseBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "CreateObject" => {
                                builder = builder.set_create_object(
                                    crate::protocol_serde::shape_batch_create_object_response::de_batch_create_object_response(tokens)?
                                );
                            }
                            "AttachObject" => {
                                builder = builder.set_attach_object(
                                    crate::protocol_serde::shape_batch_attach_object_response::de_batch_attach_object_response(tokens)?
                                );
                            }
                            "DetachObject" => {
                                builder = builder.set_detach_object(
                                    crate::protocol_serde::shape_batch_detach_object_response::de_batch_detach_object_response(tokens)?
                                );
                            }
                            "UpdateObjectAttributes" => {
                                builder = builder.set_update_object_attributes(
                                    crate::protocol_serde::shape_batch_update_object_attributes_response::de_batch_update_object_attributes_response(tokens)?
                                );
                            }
                            "DeleteObject" => {
                                builder = builder.set_delete_object(
                                    crate::protocol_serde::shape_batch_delete_object_response::de_batch_delete_object_response(tokens)?
                                );
                            }
                            "AddFacetToObject" => {
                                builder = builder.set_add_facet_to_object(
                                    crate::protocol_serde::shape_batch_add_facet_to_object_response::de_batch_add_facet_to_object_response(tokens)?
                                );
                            }
                            "RemoveFacetFromObject" => {
                                builder = builder.set_remove_facet_from_object(
                                    crate::protocol_serde::shape_batch_remove_facet_from_object_response::de_batch_remove_facet_from_object_response(tokens)?
                                );
                            }
                            "AttachPolicy" => {
                                builder = builder.set_attach_policy(
                                    crate::protocol_serde::shape_batch_attach_policy_response::de_batch_attach_policy_response(tokens)?
                                );
                            }
                            "DetachPolicy" => {
                                builder = builder.set_detach_policy(
                                    crate::protocol_serde::shape_batch_detach_policy_response::de_batch_detach_policy_response(tokens)?
                                );
                            }
                            "CreateIndex" => {
                                builder = builder.set_create_index(
                                    crate::protocol_serde::shape_batch_create_index_response::de_batch_create_index_response(tokens)?
                                );
                            }
                            "AttachToIndex" => {
                                builder = builder.set_attach_to_index(
                                    crate::protocol_serde::shape_batch_attach_to_index_response::de_batch_attach_to_index_response(tokens)?
                                );
                            }
                            "DetachFromIndex" => {
                                builder = builder.set_detach_from_index(
                                    crate::protocol_serde::shape_batch_detach_from_index_response::de_batch_detach_from_index_response(tokens)?
                                );
                            }
                            "AttachTypedLink" => {
                                builder = builder.set_attach_typed_link(
                                    crate::protocol_serde::shape_batch_attach_typed_link_response::de_batch_attach_typed_link_response(tokens)?
                                );
                            }
                            "DetachTypedLink" => {
                                builder = builder.set_detach_typed_link(
                                    crate::protocol_serde::shape_batch_detach_typed_link_response::de_batch_detach_typed_link_response(tokens)?
                                );
                            }
                            "UpdateLinkAttributes" => {
                                builder = builder.set_update_link_attributes(
                                    crate::protocol_serde::shape_batch_update_link_attributes_response::de_batch_update_link_attributes_response(tokens)?
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
