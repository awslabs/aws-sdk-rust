// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_connection;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_host;

pub(crate) mod shape_delete_connection;

pub(crate) mod shape_delete_host;

pub(crate) mod shape_get_connection;

pub(crate) mod shape_get_host;

pub(crate) mod shape_list_connections;

pub(crate) mod shape_list_hosts;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_host;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_connection_input;

pub(crate) mod shape_create_host_input;

pub(crate) mod shape_delete_connection_input;

pub(crate) mod shape_delete_host_input;

pub(crate) mod shape_get_connection_input;

pub(crate) mod shape_get_host_input;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_connections_input;

pub(crate) mod shape_list_hosts_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_resource_unavailable_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_unsupported_operation_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_host_input;

pub(crate) mod shape_connection;

pub(crate) mod shape_connection_list;

pub(crate) mod shape_host_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_vpc_configuration;

pub(crate) mod shape_host;

pub(crate) mod shape_security_group_ids;

pub(crate) mod shape_subnet_ids;
