// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Configuration details of the component.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ComponentConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the component.</p>
    #[doc(hidden)]
    pub component_arn: std::option::Option<std::string::String>,
    /// <p>A group of parameter settings that Image Builder uses to configure the component for a specific recipe.</p>
    #[doc(hidden)]
    pub parameters: std::option::Option<std::vec::Vec<crate::types::ComponentParameter>>,
}
impl ComponentConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the component.</p>
    pub fn component_arn(&self) -> std::option::Option<&str> {
        self.component_arn.as_deref()
    }
    /// <p>A group of parameter settings that Image Builder uses to configure the component for a specific recipe.</p>
    pub fn parameters(&self) -> std::option::Option<&[crate::types::ComponentParameter]> {
        self.parameters.as_deref()
    }
}
impl ComponentConfiguration {
    /// Creates a new builder-style object to manufacture [`ComponentConfiguration`](crate::types::ComponentConfiguration).
    pub fn builder() -> crate::types::builders::ComponentConfigurationBuilder {
        crate::types::builders::ComponentConfigurationBuilder::default()
    }
}

/// A builder for [`ComponentConfiguration`](crate::types::ComponentConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ComponentConfigurationBuilder {
    pub(crate) component_arn: std::option::Option<std::string::String>,
    pub(crate) parameters: std::option::Option<std::vec::Vec<crate::types::ComponentParameter>>,
}
impl ComponentConfigurationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the component.</p>
    pub fn component_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.component_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the component.</p>
    pub fn set_component_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.component_arn = input;
        self
    }
    /// Appends an item to `parameters`.
    ///
    /// To override the contents of this collection use [`set_parameters`](Self::set_parameters).
    ///
    /// <p>A group of parameter settings that Image Builder uses to configure the component for a specific recipe.</p>
    pub fn parameters(mut self, input: crate::types::ComponentParameter) -> Self {
        let mut v = self.parameters.unwrap_or_default();
        v.push(input);
        self.parameters = Some(v);
        self
    }
    /// <p>A group of parameter settings that Image Builder uses to configure the component for a specific recipe.</p>
    pub fn set_parameters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ComponentParameter>>,
    ) -> Self {
        self.parameters = input;
        self
    }
    /// Consumes the builder and constructs a [`ComponentConfiguration`](crate::types::ComponentConfiguration).
    pub fn build(self) -> crate::types::ComponentConfiguration {
        crate::types::ComponentConfiguration {
            component_arn: self.component_arn,
            parameters: self.parameters,
        }
    }
}
