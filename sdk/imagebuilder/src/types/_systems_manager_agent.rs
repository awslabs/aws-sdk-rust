// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains settings for the Systems Manager agent on your build instance.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SystemsManagerAgent {
    /// <p>Controls whether the Systems Manager agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it's set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.</p>
    #[doc(hidden)]
    pub uninstall_after_build: std::option::Option<bool>,
}
impl SystemsManagerAgent {
    /// <p>Controls whether the Systems Manager agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it's set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.</p>
    pub fn uninstall_after_build(&self) -> std::option::Option<bool> {
        self.uninstall_after_build
    }
}
impl SystemsManagerAgent {
    /// Creates a new builder-style object to manufacture [`SystemsManagerAgent`](crate::types::SystemsManagerAgent).
    pub fn builder() -> crate::types::builders::SystemsManagerAgentBuilder {
        crate::types::builders::SystemsManagerAgentBuilder::default()
    }
}

/// A builder for [`SystemsManagerAgent`](crate::types::SystemsManagerAgent).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SystemsManagerAgentBuilder {
    pub(crate) uninstall_after_build: std::option::Option<bool>,
}
impl SystemsManagerAgentBuilder {
    /// <p>Controls whether the Systems Manager agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it's set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.</p>
    pub fn uninstall_after_build(mut self, input: bool) -> Self {
        self.uninstall_after_build = Some(input);
        self
    }
    /// <p>Controls whether the Systems Manager agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it's set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.</p>
    pub fn set_uninstall_after_build(mut self, input: std::option::Option<bool>) -> Self {
        self.uninstall_after_build = input;
        self
    }
    /// Consumes the builder and constructs a [`SystemsManagerAgent`](crate::types::SystemsManagerAgent).
    pub fn build(self) -> crate::types::SystemsManagerAgent {
        crate::types::SystemsManagerAgent {
            uninstall_after_build: self.uninstall_after_build,
        }
    }
}
