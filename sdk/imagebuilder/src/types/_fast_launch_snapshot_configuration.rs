// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration settings for creating and managing pre-provisioned snapshots for a fast-launch enabled Windows AMI.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FastLaunchSnapshotConfiguration {
    /// <p>The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.</p>
    #[doc(hidden)]
    pub target_resource_count: std::option::Option<i32>,
}
impl FastLaunchSnapshotConfiguration {
    /// <p>The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.</p>
    pub fn target_resource_count(&self) -> std::option::Option<i32> {
        self.target_resource_count
    }
}
impl FastLaunchSnapshotConfiguration {
    /// Creates a new builder-style object to manufacture [`FastLaunchSnapshotConfiguration`](crate::types::FastLaunchSnapshotConfiguration).
    pub fn builder() -> crate::types::builders::FastLaunchSnapshotConfigurationBuilder {
        crate::types::builders::FastLaunchSnapshotConfigurationBuilder::default()
    }
}

/// A builder for [`FastLaunchSnapshotConfiguration`](crate::types::FastLaunchSnapshotConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FastLaunchSnapshotConfigurationBuilder {
    pub(crate) target_resource_count: std::option::Option<i32>,
}
impl FastLaunchSnapshotConfigurationBuilder {
    /// <p>The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.</p>
    pub fn target_resource_count(mut self, input: i32) -> Self {
        self.target_resource_count = Some(input);
        self
    }
    /// <p>The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.</p>
    pub fn set_target_resource_count(mut self, input: std::option::Option<i32>) -> Self {
        self.target_resource_count = input;
        self
    }
    /// Consumes the builder and constructs a [`FastLaunchSnapshotConfiguration`](crate::types::FastLaunchSnapshotConfiguration).
    pub fn build(self) -> crate::types::FastLaunchSnapshotConfiguration {
        crate::types::FastLaunchSnapshotConfiguration {
            target_resource_count: self.target_resource_count,
        }
    }
}
