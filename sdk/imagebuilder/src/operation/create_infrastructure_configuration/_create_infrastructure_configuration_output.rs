// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateInfrastructureConfigurationOutput {
    /// <p>The request ID that uniquely identifies this request.</p>
    #[doc(hidden)]
    pub request_id: std::option::Option<std::string::String>,
    /// <p>The idempotency token used to make this request idempotent.</p>
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the infrastructure configuration that was created by this request.</p>
    #[doc(hidden)]
    pub infrastructure_configuration_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateInfrastructureConfigurationOutput {
    /// <p>The request ID that uniquely identifies this request.</p>
    pub fn request_id(&self) -> std::option::Option<&str> {
        self.request_id.as_deref()
    }
    /// <p>The idempotency token used to make this request idempotent.</p>
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the infrastructure configuration that was created by this request.</p>
    pub fn infrastructure_configuration_arn(&self) -> std::option::Option<&str> {
        self.infrastructure_configuration_arn.as_deref()
    }
}
impl aws_http::request_id::RequestId for CreateInfrastructureConfigurationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateInfrastructureConfigurationOutput {
    /// Creates a new builder-style object to manufacture [`CreateInfrastructureConfigurationOutput`](crate::operation::create_infrastructure_configuration::CreateInfrastructureConfigurationOutput).
    pub fn builder() -> crate::operation::create_infrastructure_configuration::builders::CreateInfrastructureConfigurationOutputBuilder{
        crate::operation::create_infrastructure_configuration::builders::CreateInfrastructureConfigurationOutputBuilder::default()
    }
}

/// A builder for [`CreateInfrastructureConfigurationOutput`](crate::operation::create_infrastructure_configuration::CreateInfrastructureConfigurationOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateInfrastructureConfigurationOutputBuilder {
    pub(crate) request_id: std::option::Option<std::string::String>,
    pub(crate) client_token: std::option::Option<std::string::String>,
    pub(crate) infrastructure_configuration_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateInfrastructureConfigurationOutputBuilder {
    /// <p>The request ID that uniquely identifies this request.</p>
    pub fn request_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.request_id = Some(input.into());
        self
    }
    /// <p>The request ID that uniquely identifies this request.</p>
    pub fn set_request_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.request_id = input;
        self
    }
    /// <p>The idempotency token used to make this request idempotent.</p>
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// <p>The idempotency token used to make this request idempotent.</p>
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the infrastructure configuration that was created by this request.</p>
    pub fn infrastructure_configuration_arn(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.infrastructure_configuration_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the infrastructure configuration that was created by this request.</p>
    pub fn set_infrastructure_configuration_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.infrastructure_configuration_arn = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateInfrastructureConfigurationOutput`](crate::operation::create_infrastructure_configuration::CreateInfrastructureConfigurationOutput).
    pub fn build(self) -> crate::operation::create_infrastructure_configuration::CreateInfrastructureConfigurationOutput{
        crate::operation::create_infrastructure_configuration::CreateInfrastructureConfigurationOutput {
            request_id: self.request_id
            ,
            client_token: self.client_token
            ,
            infrastructure_configuration_arn: self.infrastructure_configuration_arn
            ,
            _request_id: self._request_id,
        }
    }
}
