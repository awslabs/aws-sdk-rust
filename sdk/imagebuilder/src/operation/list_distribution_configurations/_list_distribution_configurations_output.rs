// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListDistributionConfigurationsOutput {
    /// <p>The request ID that uniquely identifies this request.</p>
    #[doc(hidden)]
    pub request_id: std::option::Option<std::string::String>,
    /// <p>The list of distributions.</p>
    #[doc(hidden)]
    pub distribution_configuration_summary_list:
        std::option::Option<std::vec::Vec<crate::types::DistributionConfigurationSummary>>,
    /// <p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListDistributionConfigurationsOutput {
    /// <p>The request ID that uniquely identifies this request.</p>
    pub fn request_id(&self) -> std::option::Option<&str> {
        self.request_id.as_deref()
    }
    /// <p>The list of distributions.</p>
    pub fn distribution_configuration_summary_list(
        &self,
    ) -> std::option::Option<&[crate::types::DistributionConfigurationSummary]> {
        self.distribution_configuration_summary_list.as_deref()
    }
    /// <p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListDistributionConfigurationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListDistributionConfigurationsOutput {
    /// Creates a new builder-style object to manufacture [`ListDistributionConfigurationsOutput`](crate::operation::list_distribution_configurations::ListDistributionConfigurationsOutput).
    pub fn builder() -> crate::operation::list_distribution_configurations::builders::ListDistributionConfigurationsOutputBuilder{
        crate::operation::list_distribution_configurations::builders::ListDistributionConfigurationsOutputBuilder::default()
    }
}

/// A builder for [`ListDistributionConfigurationsOutput`](crate::operation::list_distribution_configurations::ListDistributionConfigurationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListDistributionConfigurationsOutputBuilder {
    pub(crate) request_id: std::option::Option<std::string::String>,
    pub(crate) distribution_configuration_summary_list:
        std::option::Option<std::vec::Vec<crate::types::DistributionConfigurationSummary>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListDistributionConfigurationsOutputBuilder {
    /// <p>The request ID that uniquely identifies this request.</p>
    pub fn request_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.request_id = Some(input.into());
        self
    }
    /// <p>The request ID that uniquely identifies this request.</p>
    pub fn set_request_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.request_id = input;
        self
    }
    /// Appends an item to `distribution_configuration_summary_list`.
    ///
    /// To override the contents of this collection use [`set_distribution_configuration_summary_list`](Self::set_distribution_configuration_summary_list).
    ///
    /// <p>The list of distributions.</p>
    pub fn distribution_configuration_summary_list(
        mut self,
        input: crate::types::DistributionConfigurationSummary,
    ) -> Self {
        let mut v = self
            .distribution_configuration_summary_list
            .unwrap_or_default();
        v.push(input);
        self.distribution_configuration_summary_list = Some(v);
        self
    }
    /// <p>The list of distributions.</p>
    pub fn set_distribution_configuration_summary_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DistributionConfigurationSummary>>,
    ) -> Self {
        self.distribution_configuration_summary_list = input;
        self
    }
    /// <p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListDistributionConfigurationsOutput`](crate::operation::list_distribution_configurations::ListDistributionConfigurationsOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_distribution_configurations::ListDistributionConfigurationsOutput
    {
        crate::operation::list_distribution_configurations::ListDistributionConfigurationsOutput {
            request_id: self.request_id,
            distribution_configuration_summary_list: self.distribution_configuration_summary_list,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
