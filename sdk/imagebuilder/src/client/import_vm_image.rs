// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportVmImage`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::set_name): <p>The name of the base image that is created by the import process.</p>
    ///   - [`semantic_version(impl Into<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::semantic_version) / [`set_semantic_version(Option<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::set_semantic_version): <p>The semantic version to attach to the base image that was created during the import process. This version follows the semantic version syntax.</p> <note>   <p>The semantic version has four nodes: <major>    .    <minor>     .     <patch>      /      <build>       . You can assign values for the first three, and can filter on all of them.      </build>     </patch>    </minor>   </major></p>   <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.</p>   <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p>  </note>
    ///   - [`description(impl Into<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::set_description): <p>The description for the base image that is created by the import process.</p>
    ///   - [`platform(Platform)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::platform) / [`set_platform(Option<Platform>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::set_platform): <p>The operating system platform for the imported VM.</p>
    ///   - [`os_version(impl Into<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::os_version) / [`set_os_version(Option<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::set_os_version): <p>The operating system version for the imported VM.</p>
    ///   - [`vm_import_task_id(impl Into<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::vm_import_task_id) / [`set_vm_import_task_id(Option<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::set_vm_import_task_id): <p>The <code>importTaskId</code> (API) or <code>ImportTaskId</code> (CLI) from the Amazon EC2 VM import process. Image Builder retrieves information from the import process to pull in the AMI that is created from the VM source as the base image for your recipe.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::set_tags): <p>Tags that are attached to the import resources.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>
    /// - On success, responds with [`ImportVmImageOutput`](crate::operation::import_vm_image::ImportVmImageOutput) with field(s):
    ///   - [`request_id(Option<String>)`](crate::operation::import_vm_image::ImportVmImageOutput::request_id): <p>The request ID that uniquely identifies this request.</p>
    ///   - [`image_arn(Option<String>)`](crate::operation::import_vm_image::ImportVmImageOutput::image_arn): <p>The Amazon Resource Name (ARN) of the AMI that was created during the VM import process. This AMI is used as the base image for the recipe that imported the VM.</p>
    ///   - [`client_token(Option<String>)`](crate::operation::import_vm_image::ImportVmImageOutput::client_token): <p>The idempotency token that was used for this request.</p>
    /// - On failure, responds with [`SdkError<ImportVmImageError>`](crate::operation::import_vm_image::ImportVmImageError)
    pub fn import_vm_image(
        &self,
    ) -> crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder {
        crate::operation::import_vm_image::builders::ImportVmImageFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
