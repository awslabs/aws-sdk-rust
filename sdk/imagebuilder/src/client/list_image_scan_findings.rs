// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListImageScanFindings`](crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(ImageScanFindingsFilter)`](crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder::filters) / [`set_filters(Option<Vec::<ImageScanFindingsFilter>>)`](crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder::set_filters):<br>required: **false**<br><p>An array of name value pairs that you can use to filter your results. You can use the following filters to streamline results:</p>  <ul>   <li> <p> <code>imageBuildVersionArn</code> </p> </li>   <li> <p> <code>imagePipelineArn</code> </p> </li>   <li> <p> <code>vulnerabilityId</code> </p> </li>   <li> <p> <code>severity</code> </p> </li>  </ul>  <p>If you don't request a filter, then all findings in your account are listed.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum items to return in a request.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p><br>
    /// - On success, responds with [`ListImageScanFindingsOutput`](crate::operation::list_image_scan_findings::ListImageScanFindingsOutput) with field(s):
    ///   - [`request_id(Option<String>)`](crate::operation::list_image_scan_findings::ListImageScanFindingsOutput::request_id): <p>The request ID that uniquely identifies this request.</p>
    ///   - [`findings(Option<Vec::<ImageScanFinding>>)`](crate::operation::list_image_scan_findings::ListImageScanFindingsOutput::findings): <p>The image scan findings for your account that meet your request filter criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_image_scan_findings::ListImageScanFindingsOutput::next_token): <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service has'ot included in this request. Use this token with the next request to retrieve additional objects.</p>
    /// - On failure, responds with [`SdkError<ListImageScanFindingsError>`](crate::operation::list_image_scan_findings::ListImageScanFindingsError)
    pub fn list_image_scan_findings(&self) -> crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder {
        crate::operation::list_image_scan_findings::builders::ListImageScanFindingsFluentBuilder::new(self.handle.clone())
    }
}
