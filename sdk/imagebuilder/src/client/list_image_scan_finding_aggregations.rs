// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListImageScanFindingAggregations`](crate::operation::list_image_scan_finding_aggregations::builders::ListImageScanFindingAggregationsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_image_scan_finding_aggregations::builders::ListImageScanFindingAggregationsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(Filter)`](crate::operation::list_image_scan_finding_aggregations::builders::ListImageScanFindingAggregationsFluentBuilder::filter) / [`set_filter(Option<Filter>)`](crate::operation::list_image_scan_finding_aggregations::builders::ListImageScanFindingAggregationsFluentBuilder::set_filter):<br>required: **false**<br><p>A filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_image_scan_finding_aggregations::builders::ListImageScanFindingAggregationsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_image_scan_finding_aggregations::builders::ListImageScanFindingAggregationsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p><br>
    /// - On success, responds with [`ListImageScanFindingAggregationsOutput`](crate::operation::list_image_scan_finding_aggregations::ListImageScanFindingAggregationsOutput) with field(s):
    ///   - [`request_id(Option<String>)`](crate::operation::list_image_scan_finding_aggregations::ListImageScanFindingAggregationsOutput::request_id): <p>The request ID that uniquely identifies this request.</p>
    ///   - [`aggregation_type(Option<String>)`](crate::operation::list_image_scan_finding_aggregations::ListImageScanFindingAggregationsOutput::aggregation_type): <p>The aggregation type specifies what type of key is used to group the image scan findings. Image Builder returns results based on the request filter. If you didn't specify a filter in the request, the type defaults to <code>accountId</code>.</p>  <p class="title"> <b>Aggregation types</b> </p>  <ul>   <li> <p>accountId</p> </li>   <li> <p>imageBuildVersionArn</p> </li>   <li> <p>imagePipelineArn</p> </li>   <li> <p>vulnerabilityId</p> </li>  </ul>  <p>Each aggregation includes counts by severity level for medium severity and higher level findings, plus a total for all of the findings for each key value.</p>
    ///   - [`responses(Option<Vec::<ImageScanFindingAggregation>>)`](crate::operation::list_image_scan_finding_aggregations::ListImageScanFindingAggregationsOutput::responses): <p>An array of image scan finding aggregations that match the filter criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_image_scan_finding_aggregations::ListImageScanFindingAggregationsOutput::next_token): <p>The next token used for paginated responses. When this field isn't empty, there are additional elements that the service has'ot included in this request. Use this token with the next request to retrieve additional objects.</p>
    /// - On failure, responds with [`SdkError<ListImageScanFindingAggregationsError>`](crate::operation::list_image_scan_finding_aggregations::ListImageScanFindingAggregationsError)
    pub fn list_image_scan_finding_aggregations(
        &self,
    ) -> crate::operation::list_image_scan_finding_aggregations::builders::ListImageScanFindingAggregationsFluentBuilder {
        crate::operation::list_image_scan_finding_aggregations::builders::ListImageScanFindingAggregationsFluentBuilder::new(self.handle.clone())
    }
}
