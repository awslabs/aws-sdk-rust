// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_lifecycle_policy_detail_exclusion_rules_amis(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::LifecyclePolicyDetailExclusionRulesAmis,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if input.is_public {
        object.key("isPublic").boolean(input.is_public);
    }
    if let Some(var_1) = &input.regions {
        let mut array_2 = object.key("regions").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.shared_accounts {
        let mut array_5 = object.key("sharedAccounts").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.last_launched {
        #[allow(unused_mut)]
        let mut object_8 = object.key("lastLaunched").start_object();
        crate::protocol_serde::shape_lifecycle_policy_detail_exclusion_rules_amis_last_launched::ser_lifecycle_policy_detail_exclusion_rules_amis_last_launched(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.tag_map {
        #[allow(unused_mut)]
        let mut object_10 = object.key("tagMap").start_object();
        for (key_11, value_12) in var_9 {
            {
                object_10.key(key_11.as_str()).string(value_12.as_str());
            }
        }
        object_10.finish();
    }
    Ok(())
}

pub(crate) fn de_lifecycle_policy_detail_exclusion_rules_amis<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::LifecyclePolicyDetailExclusionRulesAmis>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::LifecyclePolicyDetailExclusionRulesAmisBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "isPublic" => {
                            builder = builder.set_is_public(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "regions" => {
                            builder = builder.set_regions(crate::protocol_serde::shape_string_list::de_string_list(tokens)?);
                        }
                        "sharedAccounts" => {
                            builder = builder.set_shared_accounts(crate::protocol_serde::shape_account_list::de_account_list(tokens)?);
                        }
                        "lastLaunched" => {
                            builder = builder.set_last_launched(
                                    crate::protocol_serde::shape_lifecycle_policy_detail_exclusion_rules_amis_last_launched::de_lifecycle_policy_detail_exclusion_rules_amis_last_launched(tokens)?
                                );
                        }
                        "tagMap" => {
                            builder = builder.set_tag_map(crate::protocol_serde::shape_tag_map::de_tag_map(tokens)?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
