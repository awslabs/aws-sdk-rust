// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_image_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_image::CreateImageInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("clientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.container_recipe_arn {
        object.key("containerRecipeArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.distribution_configuration_arn {
        object.key("distributionConfigurationArn").string(var_3.as_str());
    }
    if let Some(var_4) = &input.enhanced_image_metadata_enabled {
        object.key("enhancedImageMetadataEnabled").boolean(*var_4);
    }
    if let Some(var_5) = &input.image_recipe_arn {
        object.key("imageRecipeArn").string(var_5.as_str());
    }
    if let Some(var_6) = &input.image_scanning_configuration {
        #[allow(unused_mut)]
        let mut object_7 = object.key("imageScanningConfiguration").start_object();
        crate::protocol_serde::shape_image_scanning_configuration::ser_image_scanning_configuration(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.image_tests_configuration {
        #[allow(unused_mut)]
        let mut object_9 = object.key("imageTestsConfiguration").start_object();
        crate::protocol_serde::shape_image_tests_configuration::ser_image_tests_configuration(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.infrastructure_configuration_arn {
        object.key("infrastructureConfigurationArn").string(var_10.as_str());
    }
    if let Some(var_11) = &input.tags {
        #[allow(unused_mut)]
        let mut object_12 = object.key("tags").start_object();
        for (key_13, value_14) in var_11 {
            {
                object_12.key(key_13.as_str()).string(value_14.as_str());
            }
        }
        object_12.finish();
    }
    Ok(())
}
