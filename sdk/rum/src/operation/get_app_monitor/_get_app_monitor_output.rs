// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetAppMonitorOutput {
    /// <p>A structure containing all the configuration information for the app monitor.</p>
    #[doc(hidden)]
    pub app_monitor: std::option::Option<crate::types::AppMonitor>,
    _request_id: Option<String>,
}
impl GetAppMonitorOutput {
    /// <p>A structure containing all the configuration information for the app monitor.</p>
    pub fn app_monitor(&self) -> std::option::Option<&crate::types::AppMonitor> {
        self.app_monitor.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetAppMonitorOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetAppMonitorOutput {
    /// Creates a new builder-style object to manufacture [`GetAppMonitorOutput`](crate::operation::get_app_monitor::GetAppMonitorOutput).
    pub fn builder() -> crate::operation::get_app_monitor::builders::GetAppMonitorOutputBuilder {
        crate::operation::get_app_monitor::builders::GetAppMonitorOutputBuilder::default()
    }
}

/// A builder for [`GetAppMonitorOutput`](crate::operation::get_app_monitor::GetAppMonitorOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetAppMonitorOutputBuilder {
    pub(crate) app_monitor: std::option::Option<crate::types::AppMonitor>,
    _request_id: Option<String>,
}
impl GetAppMonitorOutputBuilder {
    /// <p>A structure containing all the configuration information for the app monitor.</p>
    pub fn app_monitor(mut self, input: crate::types::AppMonitor) -> Self {
        self.app_monitor = Some(input);
        self
    }
    /// <p>A structure containing all the configuration information for the app monitor.</p>
    pub fn set_app_monitor(mut self, input: std::option::Option<crate::types::AppMonitor>) -> Self {
        self.app_monitor = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetAppMonitorOutput`](crate::operation::get_app_monitor::GetAppMonitorOutput).
    pub fn build(self) -> crate::operation::get_app_monitor::GetAppMonitorOutput {
        crate::operation::get_app_monitor::GetAppMonitorOutput {
            app_monitor: self.app_monitor,
            _request_id: self._request_id,
        }
    }
}
