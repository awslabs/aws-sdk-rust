// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that includes some data about app monitors and their settings.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AppMonitorSummary {
    /// <p>The name of this app monitor.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The unique ID of this app monitor.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The date and time that the app monitor was created.</p>
    #[doc(hidden)]
    pub created: std::option::Option<std::string::String>,
    /// <p>The date and time of the most recent changes to this app monitor's configuration.</p>
    #[doc(hidden)]
    pub last_modified: std::option::Option<std::string::String>,
    /// <p>The current state of this app monitor.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::StateEnum>,
}
impl AppMonitorSummary {
    /// <p>The name of this app monitor.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The unique ID of this app monitor.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The date and time that the app monitor was created.</p>
    pub fn created(&self) -> std::option::Option<&str> {
        self.created.as_deref()
    }
    /// <p>The date and time of the most recent changes to this app monitor's configuration.</p>
    pub fn last_modified(&self) -> std::option::Option<&str> {
        self.last_modified.as_deref()
    }
    /// <p>The current state of this app monitor.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::StateEnum> {
        self.state.as_ref()
    }
}
impl AppMonitorSummary {
    /// Creates a new builder-style object to manufacture [`AppMonitorSummary`](crate::types::AppMonitorSummary).
    pub fn builder() -> crate::types::builders::AppMonitorSummaryBuilder {
        crate::types::builders::AppMonitorSummaryBuilder::default()
    }
}

/// A builder for [`AppMonitorSummary`](crate::types::AppMonitorSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AppMonitorSummaryBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) created: std::option::Option<std::string::String>,
    pub(crate) last_modified: std::option::Option<std::string::String>,
    pub(crate) state: std::option::Option<crate::types::StateEnum>,
}
impl AppMonitorSummaryBuilder {
    /// <p>The name of this app monitor.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of this app monitor.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The unique ID of this app monitor.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The unique ID of this app monitor.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The date and time that the app monitor was created.</p>
    pub fn created(mut self, input: impl Into<std::string::String>) -> Self {
        self.created = Some(input.into());
        self
    }
    /// <p>The date and time that the app monitor was created.</p>
    pub fn set_created(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.created = input;
        self
    }
    /// <p>The date and time of the most recent changes to this app monitor's configuration.</p>
    pub fn last_modified(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_modified = Some(input.into());
        self
    }
    /// <p>The date and time of the most recent changes to this app monitor's configuration.</p>
    pub fn set_last_modified(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.last_modified = input;
        self
    }
    /// <p>The current state of this app monitor.</p>
    pub fn state(mut self, input: crate::types::StateEnum) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>The current state of this app monitor.</p>
    pub fn set_state(mut self, input: std::option::Option<crate::types::StateEnum>) -> Self {
        self.state = input;
        self
    }
    /// Consumes the builder and constructs a [`AppMonitorSummary`](crate::types::AppMonitorSummary).
    pub fn build(self) -> crate::types::AppMonitorSummary {
        crate::types::AppMonitorSummary {
            name: self.name,
            id: self.id,
            created: self.created,
            last_modified: self.last_modified,
            state: self.state,
        }
    }
}
