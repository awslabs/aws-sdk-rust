// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_put_rum_events_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::put_rum_events::PutRumEventsInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.app_monitor_details {
        #[allow(unused_mut)]
        let mut object_2 = object.key("AppMonitorDetails").start_object();
        crate::protocol_serde::shape_app_monitor_details::ser_app_monitor_details(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.batch_id {
        object.key("BatchId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.rum_events {
        let mut array_5 = object.key("RumEvents").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_rum_event::ser_rum_event(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    if let Some(var_8) = &input.user_details {
        #[allow(unused_mut)]
        let mut object_9 = object.key("UserDetails").start_object();
        crate::protocol_serde::shape_user_details::ser_user_details(&mut object_9, var_8)?;
        object_9.finish();
    }
    Ok(())
}
