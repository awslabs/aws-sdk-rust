// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchCreateRumMetricDefinitions`](crate::client::fluent_builders::BatchCreateRumMetricDefinitions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_monitor_name(impl Into<String>)`](crate::client::fluent_builders::BatchCreateRumMetricDefinitions::app_monitor_name) / [`set_app_monitor_name(Option<String>)`](crate::client::fluent_builders::BatchCreateRumMetricDefinitions::set_app_monitor_name): <p>The name of the CloudWatch RUM app monitor that is to send the metrics.</p>
    ///   - [`destination(MetricDestination)`](crate::client::fluent_builders::BatchCreateRumMetricDefinitions::destination) / [`set_destination(Option<MetricDestination>)`](crate::client::fluent_builders::BatchCreateRumMetricDefinitions::set_destination): <p>The destination to send the metrics to. Valid values are <code>CloudWatch</code> and <code>Evidently</code>. If you specify <code>Evidently</code>, you must also specify the ARN of the CloudWatchEvidently experiment that will receive the metrics and an IAM role that has permission to write to the experiment.</p>
    ///   - [`destination_arn(impl Into<String>)`](crate::client::fluent_builders::BatchCreateRumMetricDefinitions::destination_arn) / [`set_destination_arn(Option<String>)`](crate::client::fluent_builders::BatchCreateRumMetricDefinitions::set_destination_arn): <p>This parameter is required if <code>Destination</code> is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>, do not use this parameter.</p>  <p>This parameter specifies the ARN of the Evidently experiment that is to receive the metrics. You must have already defined this experiment as a valid destination. For more information, see <a href="https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_PutRumMetricsDestination.html">PutRumMetricsDestination</a>.</p>
    ///   - [`metric_definitions(Vec<MetricDefinitionRequest>)`](crate::client::fluent_builders::BatchCreateRumMetricDefinitions::metric_definitions) / [`set_metric_definitions(Option<Vec<MetricDefinitionRequest>>)`](crate::client::fluent_builders::BatchCreateRumMetricDefinitions::set_metric_definitions): <p>An array of structures which define the metrics that you want to send.</p>
    /// - On success, responds with [`BatchCreateRumMetricDefinitionsOutput`](crate::output::BatchCreateRumMetricDefinitionsOutput) with field(s):
    ///   - [`errors(Option<Vec<BatchCreateRumMetricDefinitionsError>>)`](crate::output::BatchCreateRumMetricDefinitionsOutput::errors): <p>An array of error objects, if the operation caused any errors.</p>
    ///   - [`metric_definitions(Option<Vec<MetricDefinition>>)`](crate::output::BatchCreateRumMetricDefinitionsOutput::metric_definitions): <p>An array of structures that define the extended metrics.</p>
    /// - On failure, responds with [`SdkError<BatchCreateRumMetricDefinitionsError>`](crate::error::BatchCreateRumMetricDefinitionsError)
    pub fn batch_create_rum_metric_definitions(
        &self,
    ) -> crate::client::fluent_builders::BatchCreateRumMetricDefinitions {
        crate::client::fluent_builders::BatchCreateRumMetricDefinitions::new(self.handle.clone())
    }
}
