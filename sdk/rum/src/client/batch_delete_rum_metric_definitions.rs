// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchDeleteRumMetricDefinitions`](crate::client::fluent_builders::BatchDeleteRumMetricDefinitions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_monitor_name(impl Into<String>)`](crate::client::fluent_builders::BatchDeleteRumMetricDefinitions::app_monitor_name) / [`set_app_monitor_name(Option<String>)`](crate::client::fluent_builders::BatchDeleteRumMetricDefinitions::set_app_monitor_name): <p>The name of the CloudWatch RUM app monitor that is sending these metrics.</p>
    ///   - [`destination(MetricDestination)`](crate::client::fluent_builders::BatchDeleteRumMetricDefinitions::destination) / [`set_destination(Option<MetricDestination>)`](crate::client::fluent_builders::BatchDeleteRumMetricDefinitions::set_destination): <p>Defines the destination where you want to stop sending the specified metrics. Valid values are <code>CloudWatch</code> and <code>Evidently</code>. If you specify <code>Evidently</code>, you must also specify the ARN of the CloudWatchEvidently experiment that is to be the destination and an IAM role that has permission to write to the experiment.</p>
    ///   - [`destination_arn(impl Into<String>)`](crate::client::fluent_builders::BatchDeleteRumMetricDefinitions::destination_arn) / [`set_destination_arn(Option<String>)`](crate::client::fluent_builders::BatchDeleteRumMetricDefinitions::set_destination_arn): <p>This parameter is required if <code>Destination</code> is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>, do not use this parameter. </p>  <p>This parameter specifies the ARN of the Evidently experiment that was receiving the metrics that are being deleted.</p>
    ///   - [`metric_definition_ids(Vec<String>)`](crate::client::fluent_builders::BatchDeleteRumMetricDefinitions::metric_definition_ids) / [`set_metric_definition_ids(Option<Vec<String>>)`](crate::client::fluent_builders::BatchDeleteRumMetricDefinitions::set_metric_definition_ids): <p>An array of structures which define the metrics that you want to stop sending.</p>
    /// - On success, responds with [`BatchDeleteRumMetricDefinitionsOutput`](crate::output::BatchDeleteRumMetricDefinitionsOutput) with field(s):
    ///   - [`errors(Option<Vec<BatchDeleteRumMetricDefinitionsError>>)`](crate::output::BatchDeleteRumMetricDefinitionsOutput::errors): <p>An array of error objects, if the operation caused any errors.</p>
    ///   - [`metric_definition_ids(Option<Vec<String>>)`](crate::output::BatchDeleteRumMetricDefinitionsOutput::metric_definition_ids): <p>The IDs of the metric definitions that were deleted.</p>
    /// - On failure, responds with [`SdkError<BatchDeleteRumMetricDefinitionsError>`](crate::error::BatchDeleteRumMetricDefinitionsError)
    pub fn batch_delete_rum_metric_definitions(
        &self,
    ) -> crate::client::fluent_builders::BatchDeleteRumMetricDefinitions {
        crate::client::fluent_builders::BatchDeleteRumMetricDefinitions::new(self.handle.clone())
    }
}
