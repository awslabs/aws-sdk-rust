// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAppMonitorData`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::set_name): <p>The name of the app monitor that collected the data that you want to retrieve.</p>
    ///   - [`time_range(TimeRange)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::time_range) / [`set_time_range(Option<TimeRange>)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::set_time_range): <p>A structure that defines the time range that you want to retrieve results from.</p>
    ///   - [`filters(Vec<QueryFilter>)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::filters) / [`set_filters(Option<Vec<QueryFilter>>)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::set_filters): <p>An array of structures that you can use to filter the results to those that match one or more sets of key-value pairs that you specify.</p>
    ///   - [`max_results(i32)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::max_results) / [`set_max_results(i32)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::set_max_results): <p>The maximum number of results to return in one operation. </p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::set_next_token): <p>Use the token returned by the previous operation to request the next page of results.</p>
    /// - On success, responds with [`GetAppMonitorDataOutput`](crate::operation::get_app_monitor_data::GetAppMonitorDataOutput) with field(s):
    ///   - [`events(Option<Vec<String>>)`](crate::operation::get_app_monitor_data::GetAppMonitorDataOutput::events): <p>The events that RUM collected that match your request.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_app_monitor_data::GetAppMonitorDataOutput::next_token): <p>A token that you can use in a subsequent operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<GetAppMonitorDataError>`](crate::operation::get_app_monitor_data::GetAppMonitorDataError)
    pub fn get_app_monitor_data(
        &self,
    ) -> crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder {
        crate::operation::get_app_monitor_data::builders::GetAppMonitorDataFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
