// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutRumEvents`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::set_id): <p>The ID of the app monitor that is sending this data.</p>
    ///   - [`batch_id(impl Into<String>)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::batch_id) / [`set_batch_id(Option<String>)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::set_batch_id): <p>A unique identifier for this batch of RUM event data.</p>
    ///   - [`app_monitor_details(AppMonitorDetails)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::app_monitor_details) / [`set_app_monitor_details(Option<AppMonitorDetails>)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::set_app_monitor_details): <p>A structure that contains information about the app monitor that collected this telemetry information.</p>
    ///   - [`user_details(UserDetails)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::user_details) / [`set_user_details(Option<UserDetails>)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::set_user_details): <p>A structure that contains information about the user session that this batch of events was collected from.</p>
    ///   - [`rum_events(Vec<RumEvent>)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::rum_events) / [`set_rum_events(Option<Vec<RumEvent>>)`](crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::set_rum_events): <p>An array of structures that contain the telemetry event data.</p>
    /// - On success, responds with [`PutRumEventsOutput`](crate::operation::put_rum_events::PutRumEventsOutput)
    /// - On failure, responds with [`SdkError<PutRumEventsError>`](crate::operation::put_rum_events::PutRumEventsError)
    pub fn put_rum_events(
        &self,
    ) -> crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder {
        crate::operation::put_rum_events::builders::PutRumEventsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
