// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateRumMetricDefinition`](crate::client::fluent_builders::UpdateRumMetricDefinition) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_monitor_name(impl Into<String>)`](crate::client::fluent_builders::UpdateRumMetricDefinition::app_monitor_name) / [`set_app_monitor_name(Option<String>)`](crate::client::fluent_builders::UpdateRumMetricDefinition::set_app_monitor_name): <p>The name of the CloudWatch RUM app monitor that sends these metrics.</p>
    ///   - [`destination(MetricDestination)`](crate::client::fluent_builders::UpdateRumMetricDefinition::destination) / [`set_destination(Option<MetricDestination>)`](crate::client::fluent_builders::UpdateRumMetricDefinition::set_destination): <p>The destination to send the metrics to. Valid values are <code>CloudWatch</code> and <code>Evidently</code>. If you specify <code>Evidently</code>, you must also specify the ARN of the CloudWatchEvidently experiment that will receive the metrics and an IAM role that has permission to write to the experiment.</p>
    ///   - [`destination_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateRumMetricDefinition::destination_arn) / [`set_destination_arn(Option<String>)`](crate::client::fluent_builders::UpdateRumMetricDefinition::set_destination_arn): <p>This parameter is required if <code>Destination</code> is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>, do not use this parameter.</p>  <p>This parameter specifies the ARN of the Evidently experiment that is to receive the metrics. You must have already defined this experiment as a valid destination. For more information, see <a href="https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_PutRumMetricsDestination.html">PutRumMetricsDestination</a>.</p>
    ///   - [`metric_definition(MetricDefinitionRequest)`](crate::client::fluent_builders::UpdateRumMetricDefinition::metric_definition) / [`set_metric_definition(Option<MetricDefinitionRequest>)`](crate::client::fluent_builders::UpdateRumMetricDefinition::set_metric_definition): <p>A structure that contains the new definition that you want to use for this metric.</p>
    ///   - [`metric_definition_id(impl Into<String>)`](crate::client::fluent_builders::UpdateRumMetricDefinition::metric_definition_id) / [`set_metric_definition_id(Option<String>)`](crate::client::fluent_builders::UpdateRumMetricDefinition::set_metric_definition_id): <p>The ID of the metric definition to update.</p>
    /// - On success, responds with [`UpdateRumMetricDefinitionOutput`](crate::output::UpdateRumMetricDefinitionOutput)
    /// - On failure, responds with [`SdkError<UpdateRumMetricDefinitionError>`](crate::error::UpdateRumMetricDefinitionError)
    pub fn update_rum_metric_definition(
        &self,
    ) -> crate::client::fluent_builders::UpdateRumMetricDefinition {
        crate::client::fluent_builders::UpdateRumMetricDefinition::new(self.handle.clone())
    }
}
