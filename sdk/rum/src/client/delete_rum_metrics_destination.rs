// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteRumMetricsDestination`](crate::operation::delete_rum_metrics_destination::builders::DeleteRumMetricsDestinationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_monitor_name(impl Into<String>)`](crate::operation::delete_rum_metrics_destination::builders::DeleteRumMetricsDestinationFluentBuilder::app_monitor_name) / [`set_app_monitor_name(Option<String>)`](crate::operation::delete_rum_metrics_destination::builders::DeleteRumMetricsDestinationFluentBuilder::set_app_monitor_name): <p>The name of the app monitor that is sending metrics to the destination that you want to delete.</p>
    ///   - [`destination(MetricDestination)`](crate::operation::delete_rum_metrics_destination::builders::DeleteRumMetricsDestinationFluentBuilder::destination) / [`set_destination(Option<MetricDestination>)`](crate::operation::delete_rum_metrics_destination::builders::DeleteRumMetricsDestinationFluentBuilder::set_destination): <p>The type of destination to delete. Valid values are <code>CloudWatch</code> and <code>Evidently</code>.</p>
    ///   - [`destination_arn(impl Into<String>)`](crate::operation::delete_rum_metrics_destination::builders::DeleteRumMetricsDestinationFluentBuilder::destination_arn) / [`set_destination_arn(Option<String>)`](crate::operation::delete_rum_metrics_destination::builders::DeleteRumMetricsDestinationFluentBuilder::set_destination_arn): <p>This parameter is required if <code>Destination</code> is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>, do not use this parameter. This parameter specifies the ARN of the Evidently experiment that corresponds to the destination to delete.</p>
    /// - On success, responds with [`DeleteRumMetricsDestinationOutput`](crate::operation::delete_rum_metrics_destination::DeleteRumMetricsDestinationOutput)
    /// - On failure, responds with [`SdkError<DeleteRumMetricsDestinationError>`](crate::operation::delete_rum_metrics_destination::DeleteRumMetricsDestinationError)
    pub fn delete_rum_metrics_destination(&self) -> crate::operation::delete_rum_metrics_destination::builders::DeleteRumMetricsDestinationFluentBuilder{
        crate::operation::delete_rum_metrics_destination::builders::DeleteRumMetricsDestinationFluentBuilder::new(self.handle.clone())
    }
}
