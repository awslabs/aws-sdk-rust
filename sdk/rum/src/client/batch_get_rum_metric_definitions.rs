// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchGetRumMetricDefinitions`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_monitor_name(impl Into<String>)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::app_monitor_name) / [`set_app_monitor_name(Option<String>)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::set_app_monitor_name):<br>required: **true**<br><p>The name of the CloudWatch RUM app monitor that is sending the metrics.</p><br>
    ///   - [`destination(MetricDestination)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::destination) / [`set_destination(Option<MetricDestination>)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::set_destination):<br>required: **true**<br><p>The type of destination that you want to view metrics for. Valid values are <code>CloudWatch</code> and <code>Evidently</code>.</p><br>
    ///   - [`destination_arn(impl Into<String>)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::destination_arn) / [`set_destination_arn(Option<String>)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::set_destination_arn):<br>required: **false**<br><p>This parameter is required if <code>Destination</code> is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>, do not use this parameter.</p>  <p>This parameter specifies the ARN of the Evidently experiment that corresponds to the destination.</p><br>
    ///   - [`max_results(i32)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return in one operation. The default is 50. The maximum that you can specify is 100.</p>  <p>To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::set_next_token):<br>required: **false**<br><p>Use the token returned by the previous operation to request the next page of results.</p><br>
    /// - On success, responds with [`BatchGetRumMetricDefinitionsOutput`](crate::operation::batch_get_rum_metric_definitions::BatchGetRumMetricDefinitionsOutput) with field(s):
    ///   - [`metric_definitions(Option<Vec::<MetricDefinition>>)`](crate::operation::batch_get_rum_metric_definitions::BatchGetRumMetricDefinitionsOutput::metric_definitions): <p>An array of structures that display information about the metrics that are sent by the specified app monitor to the specified destination.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::batch_get_rum_metric_definitions::BatchGetRumMetricDefinitionsOutput::next_token): <p>A token that you can use in a subsequent operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<BatchGetRumMetricDefinitionsError>`](crate::operation::batch_get_rum_metric_definitions::BatchGetRumMetricDefinitionsError)
    pub fn batch_get_rum_metric_definitions(
        &self,
    ) -> crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder {
        crate::operation::batch_get_rum_metric_definitions::builders::BatchGetRumMetricDefinitionsFluentBuilder::new(self.handle.clone())
    }
}
