// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_application;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_configuration_profile;

pub(crate) mod shape_create_deployment_strategy;

pub(crate) mod shape_create_environment;

pub(crate) mod shape_create_extension;

pub(crate) mod shape_create_extension_association;

pub(crate) mod shape_create_hosted_configuration_version;

pub(crate) mod shape_create_hosted_configuration_version_input;

pub(crate) mod shape_delete_application;

pub(crate) mod shape_delete_configuration_profile;

pub(crate) mod shape_delete_deployment_strategy;

pub(crate) mod shape_delete_environment;

pub(crate) mod shape_delete_extension;

pub(crate) mod shape_delete_extension_association;

pub(crate) mod shape_delete_hosted_configuration_version;

pub(crate) mod shape_get_application;

pub(crate) mod shape_get_configuration;

pub(crate) mod shape_get_configuration_profile;

pub(crate) mod shape_get_deployment;

pub(crate) mod shape_get_deployment_strategy;

pub(crate) mod shape_get_environment;

pub(crate) mod shape_get_extension;

pub(crate) mod shape_get_extension_association;

pub(crate) mod shape_get_hosted_configuration_version;

pub(crate) mod shape_list_applications;

pub(crate) mod shape_list_configuration_profiles;

pub(crate) mod shape_list_deployment_strategies;

pub(crate) mod shape_list_deployments;

pub(crate) mod shape_list_environments;

pub(crate) mod shape_list_extension_associations;

pub(crate) mod shape_list_extensions;

pub(crate) mod shape_list_hosted_configuration_versions;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_start_deployment;

pub(crate) mod shape_stop_deployment;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_application;

pub(crate) mod shape_update_configuration_profile;

pub(crate) mod shape_update_deployment_strategy;

pub(crate) mod shape_update_environment;

pub(crate) mod shape_update_extension;

pub(crate) mod shape_update_extension_association;

pub(crate) mod shape_validate_configuration;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_application_input;

pub(crate) mod shape_create_configuration_profile_input;

pub(crate) mod shape_create_deployment_strategy_input;

pub(crate) mod shape_create_environment_input;

pub(crate) mod shape_create_extension_association_input;

pub(crate) mod shape_create_extension_input;

pub(crate) mod shape_create_hosted_configuration_version_output;

pub(crate) mod shape_get_configuration_output;

pub(crate) mod shape_get_hosted_configuration_version_output;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_payload_too_large_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_deployment_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_application_input;

pub(crate) mod shape_update_configuration_profile_input;

pub(crate) mod shape_update_deployment_strategy_input;

pub(crate) mod shape_update_environment_input;

pub(crate) mod shape_update_extension_association_input;

pub(crate) mod shape_update_extension_input;

pub(crate) mod shape_action;

pub(crate) mod shape_actions_map;

pub(crate) mod shape_application_list;

pub(crate) mod shape_applied_extensions;

pub(crate) mod shape_bad_request_details;

pub(crate) mod shape_configuration_profile_summary_list;

pub(crate) mod shape_deployment_events;

pub(crate) mod shape_deployment_list;

pub(crate) mod shape_deployment_strategy_list;

pub(crate) mod shape_environment_list;

pub(crate) mod shape_extension_association_summaries;

pub(crate) mod shape_extension_summaries;

pub(crate) mod shape_hosted_configuration_version_summary_list;

pub(crate) mod shape_monitor;

pub(crate) mod shape_monitor_list;

pub(crate) mod shape_parameter;

pub(crate) mod shape_parameter_map;

pub(crate) mod shape_parameter_value_map;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_validator;

pub(crate) mod shape_validator_list;

pub(crate) mod shape_action_list;

pub(crate) mod shape_application;

pub(crate) mod shape_applied_extension;

pub(crate) mod shape_configuration_profile_summary;

pub(crate) mod shape_deployment_event;

pub(crate) mod shape_deployment_strategy;

pub(crate) mod shape_deployment_summary;

pub(crate) mod shape_environment;

pub(crate) mod shape_extension_association_summary;

pub(crate) mod shape_extension_summary;

pub(crate) mod shape_hosted_configuration_version_summary;

pub(crate) mod shape_invalid_configuration_detail_list;

pub(crate) mod shape_action_invocations;

pub(crate) mod shape_invalid_configuration_detail;

pub(crate) mod shape_validator_type_list;

pub(crate) mod shape_action_invocation;
