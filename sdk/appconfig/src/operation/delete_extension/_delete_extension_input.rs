// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteExtensionInput {
    /// <p>The name, ID, or Amazon Resource Name (ARN) of the extension you want to delete.</p>
    #[doc(hidden)]
    pub extension_identifier: std::option::Option<std::string::String>,
    /// <p>A specific version of an extension to delete. If omitted, the highest version is deleted.</p>
    #[doc(hidden)]
    pub version_number: std::option::Option<i32>,
}
impl DeleteExtensionInput {
    /// <p>The name, ID, or Amazon Resource Name (ARN) of the extension you want to delete.</p>
    pub fn extension_identifier(&self) -> std::option::Option<&str> {
        self.extension_identifier.as_deref()
    }
    /// <p>A specific version of an extension to delete. If omitted, the highest version is deleted.</p>
    pub fn version_number(&self) -> std::option::Option<i32> {
        self.version_number
    }
}
impl DeleteExtensionInput {
    /// Creates a new builder-style object to manufacture [`DeleteExtensionInput`](crate::operation::delete_extension::DeleteExtensionInput).
    pub fn builder() -> crate::operation::delete_extension::builders::DeleteExtensionInputBuilder {
        crate::operation::delete_extension::builders::DeleteExtensionInputBuilder::default()
    }
}

/// A builder for [`DeleteExtensionInput`](crate::operation::delete_extension::DeleteExtensionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteExtensionInputBuilder {
    pub(crate) extension_identifier: std::option::Option<std::string::String>,
    pub(crate) version_number: std::option::Option<i32>,
}
impl DeleteExtensionInputBuilder {
    /// <p>The name, ID, or Amazon Resource Name (ARN) of the extension you want to delete.</p>
    pub fn extension_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.extension_identifier = Some(input.into());
        self
    }
    /// <p>The name, ID, or Amazon Resource Name (ARN) of the extension you want to delete.</p>
    pub fn set_extension_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.extension_identifier = input;
        self
    }
    /// <p>A specific version of an extension to delete. If omitted, the highest version is deleted.</p>
    pub fn version_number(mut self, input: i32) -> Self {
        self.version_number = Some(input);
        self
    }
    /// <p>A specific version of an extension to delete. If omitted, the highest version is deleted.</p>
    pub fn set_version_number(mut self, input: std::option::Option<i32>) -> Self {
        self.version_number = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteExtensionInput`](crate::operation::delete_extension::DeleteExtensionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_extension::DeleteExtensionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_extension::DeleteExtensionInput {
            extension_identifier: self.extension_identifier,
            version_number: self.version_number,
        })
    }
}
