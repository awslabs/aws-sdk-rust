// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDeployment`](crate::operation::get_deployment::builders::GetDeploymentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::get_deployment::builders::GetDeploymentFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::get_deployment::builders::GetDeploymentFluentBuilder::set_application_id):<br>required: **true**<br><p>The ID of the application that includes the deployment you want to get. </p><br>
    ///   - [`environment_id(impl Into<String>)`](crate::operation::get_deployment::builders::GetDeploymentFluentBuilder::environment_id) / [`set_environment_id(Option<String>)`](crate::operation::get_deployment::builders::GetDeploymentFluentBuilder::set_environment_id):<br>required: **true**<br><p>The ID of the environment that includes the deployment you want to get. </p><br>
    ///   - [`deployment_number(i32)`](crate::operation::get_deployment::builders::GetDeploymentFluentBuilder::deployment_number) / [`set_deployment_number(Option<i32>)`](crate::operation::get_deployment::builders::GetDeploymentFluentBuilder::set_deployment_number):<br>required: **true**<br><p>The sequence number of the deployment.</p><br>
    /// - On success, responds with [`GetDeploymentOutput`](crate::operation::get_deployment::GetDeploymentOutput) with field(s):
    ///   - [`application_id(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::application_id): <p>The ID of the application that was deployed.</p>
    ///   - [`environment_id(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::environment_id): <p>The ID of the environment that was deployed.</p>
    ///   - [`deployment_strategy_id(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::deployment_strategy_id): <p>The ID of the deployment strategy that was deployed.</p>
    ///   - [`configuration_profile_id(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::configuration_profile_id): <p>The ID of the configuration profile that was deployed.</p>
    ///   - [`deployment_number(i32)`](crate::operation::get_deployment::GetDeploymentOutput::deployment_number): <p>The sequence number of the deployment.</p>
    ///   - [`configuration_name(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::configuration_name): <p>The name of the configuration.</p>
    ///   - [`configuration_location_uri(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::configuration_location_uri): <p>Information about the source location of the configuration.</p>
    ///   - [`configuration_version(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::configuration_version): <p>The configuration version that was deployed.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::description): <p>The description of the deployment.</p>
    ///   - [`deployment_duration_in_minutes(i32)`](crate::operation::get_deployment::GetDeploymentOutput::deployment_duration_in_minutes): <p>Total amount of time the deployment lasted.</p>
    ///   - [`growth_type(Option<GrowthType>)`](crate::operation::get_deployment::GetDeploymentOutput::growth_type): <p>The algorithm used to define how percentage grew over time.</p>
    ///   - [`growth_factor(Option<f32>)`](crate::operation::get_deployment::GetDeploymentOutput::growth_factor): <p>The percentage of targets to receive a deployed configuration during each interval.</p>
    ///   - [`final_bake_time_in_minutes(i32)`](crate::operation::get_deployment::GetDeploymentOutput::final_bake_time_in_minutes): <p>The amount of time that AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic rollback.</p>
    ///   - [`state(Option<DeploymentState>)`](crate::operation::get_deployment::GetDeploymentOutput::state): <p>The state of the deployment.</p>
    ///   - [`event_log(Option<Vec::<DeploymentEvent>>)`](crate::operation::get_deployment::GetDeploymentOutput::event_log): <p>A list containing all events related to a deployment. The most recent events are displayed first.</p>
    ///   - [`percentage_complete(Option<f32>)`](crate::operation::get_deployment::GetDeploymentOutput::percentage_complete): <p>The percentage of targets for which the deployment is available.</p>
    ///   - [`started_at(Option<DateTime>)`](crate::operation::get_deployment::GetDeploymentOutput::started_at): <p>The time the deployment started.</p>
    ///   - [`completed_at(Option<DateTime>)`](crate::operation::get_deployment::GetDeploymentOutput::completed_at): <p>The time the deployment completed. </p>
    ///   - [`applied_extensions(Option<Vec::<AppliedExtension>>)`](crate::operation::get_deployment::GetDeploymentOutput::applied_extensions): <p>A list of extensions that were processed as part of the deployment. The extensions that were previously associated to the configuration profile, environment, or the application when <code>StartDeployment</code> was called.</p>
    ///   - [`kms_key_arn(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::kms_key_arn): <p>The Amazon Resource Name of the Key Management Service key used to encrypt configuration data. You can encrypt secrets stored in Secrets Manager, Amazon Simple Storage Service (Amazon S3) objects encrypted with SSE-KMS, or secure string parameters stored in Amazon Web Services Systems Manager Parameter Store. </p>
    ///   - [`kms_key_identifier(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::kms_key_identifier): <p>The Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.</p>
    ///   - [`version_label(Option<String>)`](crate::operation::get_deployment::GetDeploymentOutput::version_label): <p>A user-defined label for an AppConfig hosted configuration version.</p>
    /// - On failure, responds with [`SdkError<GetDeploymentError>`](crate::operation::get_deployment::GetDeploymentError)
    pub fn get_deployment(&self) -> crate::operation::get_deployment::builders::GetDeploymentFluentBuilder {
        crate::operation::get_deployment::builders::GetDeploymentFluentBuilder::new(self.handle.clone())
    }
}
