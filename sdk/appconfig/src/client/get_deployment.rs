// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDeployment`](crate::client::fluent_builders::GetDeployment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetDeployment::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetDeployment::set_application_id): <p>The ID of the application that includes the deployment you want to get. </p>
    ///   - [`environment_id(impl Into<String>)`](crate::client::fluent_builders::GetDeployment::environment_id) / [`set_environment_id(Option<String>)`](crate::client::fluent_builders::GetDeployment::set_environment_id): <p>The ID of the environment that includes the deployment you want to get. </p>
    ///   - [`deployment_number(i32)`](crate::client::fluent_builders::GetDeployment::deployment_number) / [`set_deployment_number(Option<i32>)`](crate::client::fluent_builders::GetDeployment::set_deployment_number): <p>The sequence number of the deployment.</p>
    /// - On success, responds with [`GetDeploymentOutput`](crate::output::GetDeploymentOutput) with field(s):
    ///   - [`application_id(Option<String>)`](crate::output::GetDeploymentOutput::application_id): <p>The ID of the application that was deployed.</p>
    ///   - [`environment_id(Option<String>)`](crate::output::GetDeploymentOutput::environment_id): <p>The ID of the environment that was deployed.</p>
    ///   - [`deployment_strategy_id(Option<String>)`](crate::output::GetDeploymentOutput::deployment_strategy_id): <p>The ID of the deployment strategy that was deployed.</p>
    ///   - [`configuration_profile_id(Option<String>)`](crate::output::GetDeploymentOutput::configuration_profile_id): <p>The ID of the configuration profile that was deployed.</p>
    ///   - [`deployment_number(i32)`](crate::output::GetDeploymentOutput::deployment_number): <p>The sequence number of the deployment.</p>
    ///   - [`configuration_name(Option<String>)`](crate::output::GetDeploymentOutput::configuration_name): <p>The name of the configuration.</p>
    ///   - [`configuration_location_uri(Option<String>)`](crate::output::GetDeploymentOutput::configuration_location_uri): <p>Information about the source location of the configuration.</p>
    ///   - [`configuration_version(Option<String>)`](crate::output::GetDeploymentOutput::configuration_version): <p>The configuration version that was deployed.</p>
    ///   - [`description(Option<String>)`](crate::output::GetDeploymentOutput::description): <p>The description of the deployment.</p>
    ///   - [`deployment_duration_in_minutes(i32)`](crate::output::GetDeploymentOutput::deployment_duration_in_minutes): <p>Total amount of time the deployment lasted.</p>
    ///   - [`growth_type(Option<GrowthType>)`](crate::output::GetDeploymentOutput::growth_type): <p>The algorithm used to define how percentage grew over time.</p>
    ///   - [`growth_factor(f32)`](crate::output::GetDeploymentOutput::growth_factor): <p>The percentage of targets to receive a deployed configuration during each interval.</p>
    ///   - [`final_bake_time_in_minutes(i32)`](crate::output::GetDeploymentOutput::final_bake_time_in_minutes): <p>The amount of time that AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic rollback.</p>
    ///   - [`state(Option<DeploymentState>)`](crate::output::GetDeploymentOutput::state): <p>The state of the deployment.</p>
    ///   - [`event_log(Option<Vec<DeploymentEvent>>)`](crate::output::GetDeploymentOutput::event_log): <p>A list containing all events related to a deployment. The most recent events are displayed first.</p>
    ///   - [`percentage_complete(f32)`](crate::output::GetDeploymentOutput::percentage_complete): <p>The percentage of targets for which the deployment is available.</p>
    ///   - [`started_at(Option<DateTime>)`](crate::output::GetDeploymentOutput::started_at): <p>The time the deployment started.</p>
    ///   - [`completed_at(Option<DateTime>)`](crate::output::GetDeploymentOutput::completed_at): <p>The time the deployment completed. </p>
    ///   - [`applied_extensions(Option<Vec<AppliedExtension>>)`](crate::output::GetDeploymentOutput::applied_extensions): <p>A list of extensions that were processed as part of the deployment. The extensions that were previously associated to the configuration profile, environment, or the application when <code>StartDeployment</code> was called.</p>
    /// - On failure, responds with [`SdkError<GetDeploymentError>`](crate::error::GetDeploymentError)
    pub fn get_deployment(&self) -> crate::client::fluent_builders::GetDeployment {
        crate::client::fluent_builders::GetDeployment::new(self.handle.clone())
    }
}
