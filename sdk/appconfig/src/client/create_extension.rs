// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateExtension`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::set_name): <p>A name for the extension. Each extension name in your account must be unique. Extension versions use the same name.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::set_description): <p>Information about the extension.</p>
    ///   - [`actions(HashMap<ActionPoint, Vec<Action>>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::actions) / [`set_actions(Option<HashMap<ActionPoint, Vec<Action>>>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::set_actions): <p>The actions defined in the extension.</p>
    ///   - [`parameters(HashMap<String, Parameter>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::parameters) / [`set_parameters(Option<HashMap<String, Parameter>>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::set_parameters): <p>The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the <code>CreateExtensionAssociation</code> API action. For Lambda extension actions, these parameters are included in the Lambda request object.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::set_tags): <p>Adds one or more tags for the specified extension. Tags are metadata that help you categorize resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. </p>
    ///   - [`latest_version_number(i32)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::latest_version_number) / [`set_latest_version_number(Option<i32>)`](crate::operation::create_extension::builders::CreateExtensionFluentBuilder::set_latest_version_number): <p>You can omit this field when you create an extension. When you create a new version, specify the most recent current version number. For example, you create version 3, enter 2 for this field.</p>
    /// - On success, responds with [`CreateExtensionOutput`](crate::operation::create_extension::CreateExtensionOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::create_extension::CreateExtensionOutput::id): <p>The system-generated ID of the extension.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_extension::CreateExtensionOutput::name): <p>The extension name.</p>
    ///   - [`version_number(i32)`](crate::operation::create_extension::CreateExtensionOutput::version_number): <p>The extension version number.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_extension::CreateExtensionOutput::arn): <p>The system-generated Amazon Resource Name (ARN) for the extension.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_extension::CreateExtensionOutput::description): <p>Information about the extension.</p>
    ///   - [`actions(Option<HashMap<ActionPoint, Vec<Action>>>)`](crate::operation::create_extension::CreateExtensionOutput::actions): <p>The actions defined in the extension.</p>
    ///   - [`parameters(Option<HashMap<String, Parameter>>)`](crate::operation::create_extension::CreateExtensionOutput::parameters): <p>The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the <code>CreateExtensionAssociation</code> API action. For Lambda extension actions, these parameters are included in the Lambda request object.</p>
    /// - On failure, responds with [`SdkError<CreateExtensionError>`](crate::operation::create_extension::CreateExtensionError)
    pub fn create_extension(
        &self,
    ) -> crate::operation::create_extension::builders::CreateExtensionFluentBuilder {
        crate::operation::create_extension::builders::CreateExtensionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
