// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateExtensionAssociation`](crate::client::fluent_builders::CreateExtensionAssociation) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`extension_identifier(impl Into<String>)`](crate::client::fluent_builders::CreateExtensionAssociation::extension_identifier) / [`set_extension_identifier(Option<String>)`](crate::client::fluent_builders::CreateExtensionAssociation::set_extension_identifier): <p>The name, the ID, or the Amazon Resource Name (ARN) of the extension.</p>
    ///   - [`extension_version_number(i32)`](crate::client::fluent_builders::CreateExtensionAssociation::extension_version_number) / [`set_extension_version_number(Option<i32>)`](crate::client::fluent_builders::CreateExtensionAssociation::set_extension_version_number): <p>The version number of the extension. If not specified, AppConfig uses the maximum version of the extension.</p>
    ///   - [`resource_identifier(impl Into<String>)`](crate::client::fluent_builders::CreateExtensionAssociation::resource_identifier) / [`set_resource_identifier(Option<String>)`](crate::client::fluent_builders::CreateExtensionAssociation::set_resource_identifier): <p>The ARN of an application, configuration profile, or environment.</p>
    ///   - [`parameters(HashMap<String, String>)`](crate::client::fluent_builders::CreateExtensionAssociation::parameters) / [`set_parameters(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateExtensionAssociation::set_parameters): <p>The parameter names and values defined in the extensions. Extension parameters marked <code>Required</code> must be entered for this field.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateExtensionAssociation::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateExtensionAssociation::set_tags): <p>Adds one or more tags for the specified extension association. Tags are metadata that help you categorize resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. </p>
    /// - On success, responds with [`CreateExtensionAssociationOutput`](crate::output::CreateExtensionAssociationOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::CreateExtensionAssociationOutput::id): <p>The system-generated ID for the association.</p>
    ///   - [`extension_arn(Option<String>)`](crate::output::CreateExtensionAssociationOutput::extension_arn): <p>The ARN of the extension defined in the association.</p>
    ///   - [`resource_arn(Option<String>)`](crate::output::CreateExtensionAssociationOutput::resource_arn): <p>The ARNs of applications, configuration profiles, or environments defined in the association.</p>
    ///   - [`arn(Option<String>)`](crate::output::CreateExtensionAssociationOutput::arn): <p>The system-generated Amazon Resource Name (ARN) for the extension.</p>
    ///   - [`parameters(Option<HashMap<String, String>>)`](crate::output::CreateExtensionAssociationOutput::parameters): <p>The parameter names and values defined in the association.</p>
    ///   - [`extension_version_number(i32)`](crate::output::CreateExtensionAssociationOutput::extension_version_number): <p>The version number for the extension defined in the association.</p>
    /// - On failure, responds with [`SdkError<CreateExtensionAssociationError>`](crate::error::CreateExtensionAssociationError)
    pub fn create_extension_association(
        &self,
    ) -> crate::client::fluent_builders::CreateExtensionAssociation {
        crate::client::fluent_builders::CreateExtensionAssociation::new(self.handle.clone())
    }
}
