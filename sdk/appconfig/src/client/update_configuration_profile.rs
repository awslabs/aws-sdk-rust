// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateConfigurationProfile`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::set_application_id):<br>required: **true**<br><p>The application ID.</p><br>
    ///   - [`configuration_profile_id(impl Into<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::configuration_profile_id) / [`set_configuration_profile_id(Option<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::set_configuration_profile_id):<br>required: **true**<br><p>The ID of the configuration profile.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::set_name):<br>required: **false**<br><p>The name of the configuration profile.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::set_description):<br>required: **false**<br><p>A description of the configuration profile.</p><br>
    ///   - [`retrieval_role_arn(impl Into<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::retrieval_role_arn) / [`set_retrieval_role_arn(Option<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::set_retrieval_role_arn):<br>required: **false**<br><p>The ARN of an IAM role with permission to access the configuration at the specified <code>LocationUri</code>.</p><br>
    ///   - [`validators(Validator)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::validators) / [`set_validators(Option<Vec::<Validator>>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::set_validators):<br>required: **false**<br><p>A list of methods for validating the configuration.</p><br>
    ///   - [`kms_key_identifier(impl Into<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::kms_key_identifier) / [`set_kms_key_identifier(Option<String>)`](crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::set_kms_key_identifier):<br>required: **false**<br><p>The identifier for a Key Management Service key to encrypt new configuration data versions in the AppConfig hosted configuration store. This attribute is only used for <code>hosted</code> configuration types. The identifier can be an KMS key ID, alias, or the Amazon Resource Name (ARN) of the key ID or alias. To encrypt data managed in other configuration stores, see the documentation for how to specify an KMS key for that particular service.</p><br>
    /// - On success, responds with [`UpdateConfigurationProfileOutput`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput) with field(s):
    ///   - [`application_id(Option<String>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::application_id): <p>The application ID.</p>
    ///   - [`id(Option<String>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::id): <p>The configuration profile ID.</p>
    ///   - [`name(Option<String>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::name): <p>The name of the configuration profile.</p>
    ///   - [`description(Option<String>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::description): <p>The configuration profile description.</p>
    ///   - [`location_uri(Option<String>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::location_uri): <p>The URI location of the configuration.</p>
    ///   - [`retrieval_role_arn(Option<String>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::retrieval_role_arn): <p>The ARN of an IAM role with permission to access the configuration at the specified <code>LocationUri</code>.</p>
    ///   - [`validators(Option<Vec::<Validator>>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::validators): <p>A list of methods for validating the configuration.</p>
    ///   - [`r#type(Option<String>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::type): <p>The type of configurations contained in the profile. AppConfig supports <code>feature flags</code> and <code>freeform</code> configurations. We recommend you create feature flag configurations to enable or disable new features and freeform configurations to distribute configurations to an application. When calling this API, enter one of the following values for <code>Type</code>:</p>  <p> <code>AWS.AppConfig.FeatureFlags</code> </p>  <p> <code>AWS.Freeform</code> </p>
    ///   - [`kms_key_arn(Option<String>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::kms_key_arn): <p>The Amazon Resource Name of the Key Management Service key to encrypt new configuration data versions in the AppConfig hosted configuration store. This attribute is only used for <code>hosted</code> configuration types. To encrypt data managed in other configuration stores, see the documentation for how to specify an KMS key for that particular service.</p>
    ///   - [`kms_key_identifier(Option<String>)`](crate::operation::update_configuration_profile::UpdateConfigurationProfileOutput::kms_key_identifier): <p>The Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.</p>
    /// - On failure, responds with [`SdkError<UpdateConfigurationProfileError>`](crate::operation::update_configuration_profile::UpdateConfigurationProfileError)
    pub fn update_configuration_profile(&self) -> crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder {
        crate::operation::update_configuration_profile::builders::UpdateConfigurationProfileFluentBuilder::new(self.handle.clone())
    }
}
