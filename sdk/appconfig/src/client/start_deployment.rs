// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartDeployment`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_application_id):<br>required: **true**<br><p>The application ID.</p><br>
    ///   - [`environment_id(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::environment_id) / [`set_environment_id(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_environment_id):<br>required: **true**<br><p>The environment ID.</p><br>
    ///   - [`deployment_strategy_id(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::deployment_strategy_id) / [`set_deployment_strategy_id(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_deployment_strategy_id):<br>required: **true**<br><p>The deployment strategy ID.</p><br>
    ///   - [`configuration_profile_id(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::configuration_profile_id) / [`set_configuration_profile_id(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_configuration_profile_id):<br>required: **true**<br><p>The configuration profile ID.</p><br>
    ///   - [`configuration_version(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::configuration_version) / [`set_configuration_version(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_configuration_version):<br>required: **true**<br><p>The configuration version to deploy. If deploying an AppConfig hosted configuration version, you can specify either the version number or version label. For all other configurations, you must specify the version number.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_description):<br>required: **false**<br><p>A description of the deployment.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_tags):<br>required: **false**<br><p>Metadata to assign to the deployment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.</p><br>
    ///   - [`kms_key_identifier(impl Into<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::kms_key_identifier) / [`set_kms_key_identifier(Option<String>)`](crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::set_kms_key_identifier):<br>required: **false**<br><p>The KMS key identifier (key ID, key alias, or key ARN). AppConfig uses this ID to encrypt the configuration data using a customer managed key. </p><br>
    /// - On success, responds with [`StartDeploymentOutput`](crate::operation::start_deployment::StartDeploymentOutput) with field(s):
    ///   - [`application_id(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::application_id): <p>The ID of the application that was deployed.</p>
    ///   - [`environment_id(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::environment_id): <p>The ID of the environment that was deployed.</p>
    ///   - [`deployment_strategy_id(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::deployment_strategy_id): <p>The ID of the deployment strategy that was deployed.</p>
    ///   - [`configuration_profile_id(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::configuration_profile_id): <p>The ID of the configuration profile that was deployed.</p>
    ///   - [`deployment_number(i32)`](crate::operation::start_deployment::StartDeploymentOutput::deployment_number): <p>The sequence number of the deployment.</p>
    ///   - [`configuration_name(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::configuration_name): <p>The name of the configuration.</p>
    ///   - [`configuration_location_uri(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::configuration_location_uri): <p>Information about the source location of the configuration.</p>
    ///   - [`configuration_version(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::configuration_version): <p>The configuration version that was deployed.</p>
    ///   - [`description(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::description): <p>The description of the deployment.</p>
    ///   - [`deployment_duration_in_minutes(i32)`](crate::operation::start_deployment::StartDeploymentOutput::deployment_duration_in_minutes): <p>Total amount of time the deployment lasted.</p>
    ///   - [`growth_type(Option<GrowthType>)`](crate::operation::start_deployment::StartDeploymentOutput::growth_type): <p>The algorithm used to define how percentage grew over time.</p>
    ///   - [`growth_factor(Option<f32>)`](crate::operation::start_deployment::StartDeploymentOutput::growth_factor): <p>The percentage of targets to receive a deployed configuration during each interval.</p>
    ///   - [`final_bake_time_in_minutes(i32)`](crate::operation::start_deployment::StartDeploymentOutput::final_bake_time_in_minutes): <p>The amount of time that AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic rollback.</p>
    ///   - [`state(Option<DeploymentState>)`](crate::operation::start_deployment::StartDeploymentOutput::state): <p>The state of the deployment.</p>
    ///   - [`event_log(Option<Vec::<DeploymentEvent>>)`](crate::operation::start_deployment::StartDeploymentOutput::event_log): <p>A list containing all events related to a deployment. The most recent events are displayed first.</p>
    ///   - [`percentage_complete(Option<f32>)`](crate::operation::start_deployment::StartDeploymentOutput::percentage_complete): <p>The percentage of targets for which the deployment is available.</p>
    ///   - [`started_at(Option<DateTime>)`](crate::operation::start_deployment::StartDeploymentOutput::started_at): <p>The time the deployment started.</p>
    ///   - [`completed_at(Option<DateTime>)`](crate::operation::start_deployment::StartDeploymentOutput::completed_at): <p>The time the deployment completed. </p>
    ///   - [`applied_extensions(Option<Vec::<AppliedExtension>>)`](crate::operation::start_deployment::StartDeploymentOutput::applied_extensions): <p>A list of extensions that were processed as part of the deployment. The extensions that were previously associated to the configuration profile, environment, or the application when <code>StartDeployment</code> was called.</p>
    ///   - [`kms_key_arn(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::kms_key_arn): <p>The Amazon Resource Name of the Key Management Service key used to encrypt configuration data. You can encrypt secrets stored in Secrets Manager, Amazon Simple Storage Service (Amazon S3) objects encrypted with SSE-KMS, or secure string parameters stored in Amazon Web Services Systems Manager Parameter Store. </p>
    ///   - [`kms_key_identifier(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::kms_key_identifier): <p>The Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.</p>
    ///   - [`version_label(Option<String>)`](crate::operation::start_deployment::StartDeploymentOutput::version_label): <p>A user-defined label for an AppConfig hosted configuration version.</p>
    /// - On failure, responds with [`SdkError<StartDeploymentError>`](crate::operation::start_deployment::StartDeploymentError)
    pub fn start_deployment(&self) -> crate::operation::start_deployment::builders::StartDeploymentFluentBuilder {
        crate::operation::start_deployment::builders::StartDeploymentFluentBuilder::new(self.handle.clone())
    }
}
