// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateConfigurationProfile`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_application_id):<br>required: **true**<br><p>The application ID.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_name):<br>required: **true**<br><p>A name for the configuration profile.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_description):<br>required: **false**<br><p>A description of the configuration profile.</p><br>
    ///   - [`location_uri(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::location_uri) / [`set_location_uri(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_location_uri):<br>required: **true**<br><p>A URI to locate the configuration. You can specify the following:</p>  <ul>   <li> <p>For the AppConfig hosted configuration store and for feature flags, specify <code>hosted</code>.</p> </li>   <li> <p>For an Amazon Web Services Systems Manager Parameter Store parameter, specify either the parameter name in the format <code>ssm-parameter://     <parameter name></parameter></code> or the ARN.</p> </li>   <li> <p>For an Amazon Web Services CodePipeline pipeline, specify the URI in the following format: <code>codepipeline</code>://<pipeline name>     .    </pipeline></p> </li>   <li> <p>For an Secrets Manager secret, specify the URI in the following format: <code>secretsmanager</code>://<secret name>     .    </secret></p> </li>   <li> <p>For an Amazon S3 object, specify the URI in the following format: <code>s3://     <bucket>      /      <objectkey>       </objectkey>     </bucket></code>. Here is an example: <code>s3://my-bucket/my-app/us-east-1/my-config.json</code> </p> </li>   <li> <p>For an SSM document, specify either the document name in the format <code>ssm-document://     <document name></document></code> or the Amazon Resource Name (ARN).</p> </li>  </ul><br>
    ///   - [`retrieval_role_arn(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::retrieval_role_arn) / [`set_retrieval_role_arn(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_retrieval_role_arn):<br>required: **false**<br><p>The ARN of an IAM role with permission to access the configuration at the specified <code>LocationUri</code>.</p> <important>   <p>A retrieval role ARN is not required for configurations stored in the AppConfig hosted configuration store. It is required for all other sources that store your configuration. </p>  </important><br>
    ///   - [`validators(Validator)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::validators) / [`set_validators(Option<Vec::<Validator>>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_validators):<br>required: **false**<br><p>A list of methods for validating the configuration.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_tags):<br>required: **false**<br><p>Metadata to assign to the configuration profile. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.</p><br>
    ///   - [`r#type(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::type) / [`set_type(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_type):<br>required: **false**<br><p>The type of configurations contained in the profile. AppConfig supports <code>feature flags</code> and <code>freeform</code> configurations. We recommend you create feature flag configurations to enable or disable new features and freeform configurations to distribute configurations to an application. When calling this API, enter one of the following values for <code>Type</code>:</p>  <p> <code>AWS.AppConfig.FeatureFlags</code> </p>  <p> <code>AWS.Freeform</code> </p><br>
    ///   - [`kms_key_identifier(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::kms_key_identifier) / [`set_kms_key_identifier(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_kms_key_identifier):<br>required: **false**<br><p>The identifier for an Key Management Service key to encrypt new configuration data versions in the AppConfig hosted configuration store. This attribute is only used for <code>hosted</code> configuration types. The identifier can be an KMS key ID, alias, or the Amazon Resource Name (ARN) of the key ID or alias. To encrypt data managed in other configuration stores, see the documentation for how to specify an KMS key for that particular service.</p><br>
    /// - On success, responds with [`CreateConfigurationProfileOutput`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput) with field(s):
    ///   - [`application_id(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::application_id): <p>The application ID.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::id): <p>The configuration profile ID.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::name): <p>The name of the configuration profile.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::description): <p>The configuration profile description.</p>
    ///   - [`location_uri(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::location_uri): <p>The URI location of the configuration.</p>
    ///   - [`retrieval_role_arn(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::retrieval_role_arn): <p>The ARN of an IAM role with permission to access the configuration at the specified <code>LocationUri</code>.</p>
    ///   - [`validators(Option<Vec::<Validator>>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::validators): <p>A list of methods for validating the configuration.</p>
    ///   - [`r#type(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::type): <p>The type of configurations contained in the profile. AppConfig supports <code>feature flags</code> and <code>freeform</code> configurations. We recommend you create feature flag configurations to enable or disable new features and freeform configurations to distribute configurations to an application. When calling this API, enter one of the following values for <code>Type</code>:</p>  <p> <code>AWS.AppConfig.FeatureFlags</code> </p>  <p> <code>AWS.Freeform</code> </p>
    ///   - [`kms_key_arn(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::kms_key_arn): <p>The Amazon Resource Name of the Key Management Service key to encrypt new configuration data versions in the AppConfig hosted configuration store. This attribute is only used for <code>hosted</code> configuration types. To encrypt data managed in other configuration stores, see the documentation for how to specify an KMS key for that particular service.</p>
    ///   - [`kms_key_identifier(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::kms_key_identifier): <p>The Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.</p>
    /// - On failure, responds with [`SdkError<CreateConfigurationProfileError>`](crate::operation::create_configuration_profile::CreateConfigurationProfileError)
    pub fn create_configuration_profile(&self) -> crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder {
        crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::new(self.handle.clone())
    }
}
