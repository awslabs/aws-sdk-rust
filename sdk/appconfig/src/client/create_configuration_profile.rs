// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateConfigurationProfile`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_application_id): <p>The application ID.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_name): <p>A name for the configuration profile.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_description): <p>A description of the configuration profile.</p>
    ///   - [`location_uri(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::location_uri) / [`set_location_uri(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_location_uri): <p>A URI to locate the configuration. You can specify the AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store and for feature flags, specify <code>hosted</code>. For an SSM document, specify either the document name in the format <code>ssm-document://   <document_name></document_name></code> or the Amazon Resource Name (ARN). For a parameter, specify either the parameter name in the format <code>ssm-parameter://   <parameter_name></parameter_name></code> or the ARN. For an Amazon S3 object, specify the URI in the following format: <code>s3://   <bucket>    /    <objectkey>     </objectkey>   </bucket></code>. Here is an example: <code>s3://my-bucket/my-app/us-east-1/my-config.json</code> </p>
    ///   - [`retrieval_role_arn(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::retrieval_role_arn) / [`set_retrieval_role_arn(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_retrieval_role_arn): <p>The ARN of an IAM role with permission to access the configuration at the specified <code>LocationUri</code>.</p> <important>   <p>A retrieval role ARN is not required for configurations stored in the AppConfig hosted configuration store. It is required for all other sources that store your configuration. </p>  </important>
    ///   - [`validators(Vec<Validator>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::validators) / [`set_validators(Option<Vec<Validator>>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_validators): <p>A list of methods for validating the configuration.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_tags): <p>Metadata to assign to the configuration profile. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.</p>
    ///   - [`r#type(impl Into<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::type) / [`set_type(Option<String>)`](crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::set_type): <p>The type of configurations contained in the profile. AppConfig supports <code>feature flags</code> and <code>freeform</code> configurations. We recommend you create feature flag configurations to enable or disable new features and freeform configurations to distribute configurations to an application. When calling this API, enter one of the following values for <code>Type</code>:</p>  <p> <code>AWS.AppConfig.FeatureFlags</code> </p>  <p> <code>AWS.Freeform</code> </p>
    /// - On success, responds with [`CreateConfigurationProfileOutput`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput) with field(s):
    ///   - [`application_id(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::application_id): <p>The application ID.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::id): <p>The configuration profile ID.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::name): <p>The name of the configuration profile.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::description): <p>The configuration profile description.</p>
    ///   - [`location_uri(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::location_uri): <p>The URI location of the configuration.</p>
    ///   - [`retrieval_role_arn(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::retrieval_role_arn): <p>The ARN of an IAM role with permission to access the configuration at the specified <code>LocationUri</code>.</p>
    ///   - [`validators(Option<Vec<Validator>>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::validators): <p>A list of methods for validating the configuration.</p>
    ///   - [`r#type(Option<String>)`](crate::operation::create_configuration_profile::CreateConfigurationProfileOutput::type): <p>The type of configurations contained in the profile. AppConfig supports <code>feature flags</code> and <code>freeform</code> configurations. We recommend you create feature flag configurations to enable or disable new features and freeform configurations to distribute configurations to an application. When calling this API, enter one of the following values for <code>Type</code>:</p>  <p> <code>AWS.AppConfig.FeatureFlags</code> </p>  <p> <code>AWS.Freeform</code> </p>
    /// - On failure, responds with [`SdkError<CreateConfigurationProfileError>`](crate::operation::create_configuration_profile::CreateConfigurationProfileError)
    pub fn create_configuration_profile(&self) -> crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder{
        crate::operation::create_configuration_profile::builders::CreateConfigurationProfileFluentBuilder::new(self.handle.clone())
    }
}
