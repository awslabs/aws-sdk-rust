// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetConfiguration`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::application) / [`set_application(Option<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::set_application): <p>The application to get. Specify either the application name or the application ID.</p>
    ///   - [`environment(impl Into<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::environment) / [`set_environment(Option<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::set_environment): <p>The environment to get. Specify either the environment name or the environment ID.</p>
    ///   - [`configuration(impl Into<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::configuration) / [`set_configuration(Option<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::set_configuration): <p>The configuration to get. Specify either the configuration name or the configuration ID.</p>
    ///   - [`client_id(impl Into<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::client_id) / [`set_client_id(Option<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::set_client_id): <p>The clientId parameter in the following command is a unique, user-specified ID to identify the client for the configuration. This ID enables AppConfig to deploy the configuration in intervals, as defined in the deployment strategy. </p>
    ///   - [`client_configuration_version(impl Into<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::client_configuration_version) / [`set_client_configuration_version(Option<String>)`](crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::set_client_configuration_version): <p>The configuration version returned in the most recent <code>GetConfiguration</code> response.</p> <important>   <p>AppConfig uses the value of the <code>ClientConfigurationVersion</code> parameter to identify the configuration version on your clients. If you donâ€™t send <code>ClientConfigurationVersion</code> with each call to <code>GetConfiguration</code>, your clients receive the current configuration. You are charged each time your clients receive a configuration.</p>   <p>To avoid excess charges, we recommend that you include the <code>ClientConfigurationVersion</code> value with every call to <code>GetConfiguration</code>. This value must be saved on your client. Subsequent calls to <code>GetConfiguration</code> must pass this value by using the <code>ClientConfigurationVersion</code> parameter. </p>  </important>  <p>For more information about working with configurations, see <a href="http://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-retrieving-the-configuration.html">Retrieving the Configuration</a> in the <i>AppConfig User Guide</i>.</p>
    /// - On success, responds with [`GetConfigurationOutput`](crate::operation::get_configuration::GetConfigurationOutput) with field(s):
    ///   - [`content(Option<Blob>)`](crate::operation::get_configuration::GetConfigurationOutput::content): <p>The content of the configuration or the configuration data.</p> <important>   <p>The <code>Content</code> attribute only contains data if the system finds new or updated configuration data. If there is no new or updated data and <code>ClientConfigurationVersion</code> matches the version of the current configuration, AppConfig returns a <code>204 No Content</code> HTTP response code and the <code>Content</code> value will be empty.</p>  </important>
    ///   - [`configuration_version(Option<String>)`](crate::operation::get_configuration::GetConfigurationOutput::configuration_version): <p>The configuration version.</p>
    ///   - [`content_type(Option<String>)`](crate::operation::get_configuration::GetConfigurationOutput::content_type): <p>A standard MIME type describing the format of the configuration content. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17">Content-Type</a>.</p>
    /// - On failure, responds with [`SdkError<GetConfigurationError>`](crate::operation::get_configuration::GetConfigurationError)
    #[deprecated(
        note = "This API has been deprecated in favor of the GetLatestConfiguration API used in conjunction with StartConfigurationSession."
    )]
    pub fn get_configuration(
        &self,
    ) -> crate::operation::get_configuration::builders::GetConfigurationFluentBuilder {
        crate::operation::get_configuration::builders::GetConfigurationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
