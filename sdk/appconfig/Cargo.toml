# Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
[package]
name = "aws-sdk-appconfig"
version = "0.0.18-alpha"
description = "<fullname>AWS AppConfig</fullname>\n         <p>Use AWS AppConfig, a capability of AWS Systems Manager, to create, manage, and quickly deploy\n         application configurations. AppConfig supports controlled deployments to applications of any\n         size and includes built-in validation checks and monitoring. You can use AppConfig with\n         applications hosted on Amazon EC2 instances, AWS Lambda, containers, mobile applications, or IoT\n         devices.</p>\n\n         <p>To prevent errors when deploying application configurations, especially for production\n         systems where a simple typo could cause an unexpected outage, AppConfig includes validators.\n         A validator provides a syntactic or semantic check to ensure that the configuration you\n         want to deploy works as intended. To validate your application configuration data, you\n         provide a schema or a Lambda function that runs against the configuration. The\n         configuration deployment or update can only proceed when the configuration data is\n         valid.</p>\n\n         <p>During a configuration deployment, AppConfig monitors the application to ensure that the\n         deployment is successful. If the system encounters an error, AppConfig rolls back the change\n         to minimize impact for your application users. You can configure a deployment strategy for\n         each application or environment that includes deployment criteria, including velocity, bake\n         time, and alarms to monitor. Similar to error monitoring, if a deployment triggers an\n         alarm, AppConfig automatically rolls back to the previous version. </p>\n\n         <p>AppConfig supports multiple use cases. Here are some examples.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Application tuning</b>: Use AppConfig to carefully\n               introduce changes to your application that can only be tested with production\n               traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Feature toggle</b>: Use AppConfig to turn on new\n               features that require a timely deployment, such as a product launch or announcement.\n            </p>\n            </li>\n            <li>\n               <p>\n                  <b>Allow list</b>: Use AppConfig to allow premium\n               subscribers to access paid content. </p>\n            </li>\n            <li>\n               <p>\n                  <b>Operational issues</b>: Use AppConfig to reduce stress\n               on your application when a dependency or other external factor impacts the\n               system.</p>\n            </li>\n         </ul>\n         <p>This reference is intended to be used with the <a href=\"http://docs.aws.amazon.com/systems-manager/latest/userguide/appconfig.html\">AWS AppConfig User Guide</a>.</p>"
authors = ["AWS Rust SDK Team <aws-sdk-rust@amazon.com>", "Russell Cohen <rcoh@amazon.com>"]
license = "Apache-2.0"
edition = "2018"
[dependencies.aws-auth]
path = "..//aws-auth"
[dependencies.aws-endpoint]
path = "..//aws-endpoint"
[dependencies.aws-http]
path = "..//aws-http"
[dependencies.aws-hyper]
path = "..//aws-hyper"
optional = true
[dependencies.aws-sig-auth]
path = "..//aws-sig-auth"
[dependencies.aws-types]
path = "..//aws-types"
[dependencies.bytes]
version = "1"
[dependencies.http]
version = "0.2"
[dependencies.smithy-client]
path = "..//smithy-client"
optional = true
[dependencies.smithy-http]
path = "..//smithy-http"
[dependencies.smithy-json]
path = "..//smithy-json"
[dependencies.smithy-types]
path = "..//smithy-types"
[features]
client = ["aws-hyper", "smithy-client"]
rustls = ["aws-hyper/rustls"]
native-tls = ["aws-hyper/native-tls"]
default = ["client", "rustls"]


