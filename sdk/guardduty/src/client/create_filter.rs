// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFilter`](crate::operation::create_filter::builders::CreateFilterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`detector_id(impl Into<String>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::detector_id) / [`set_detector_id(Option<String>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::set_detector_id):<br>required: **true**<br><p>The ID of the detector belonging to the GuardDuty account that you want to create a filter for.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::set_name):<br>required: **true**<br><p>The name of the filter. Valid characters include period (.), underscore (_), dash (-), and alphanumeric characters. A whitespace is considered to be an invalid character.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::set_description):<br>required: **false**<br><p>The description of the filter. Valid characters include alphanumeric characters, and special characters such as hyphen, period, colon, underscore, parentheses (<code>{ }</code>, <code>[ ]</code>, and <code>( )</code>), forward slash, horizontal tab, vertical tab, newline, form feed, return, and whitespace.</p><br>
    ///   - [`action(FilterAction)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::action) / [`set_action(Option<FilterAction>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::set_action):<br>required: **false**<br><p>Specifies the action that is to be applied to the findings that match the filter.</p><br>
    ///   - [`rank(i32)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::rank) / [`set_rank(Option<i32>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::set_rank):<br>required: **false**<br><p>Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.</p><br>
    ///   - [`finding_criteria(FindingCriteria)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::finding_criteria) / [`set_finding_criteria(Option<FindingCriteria>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::set_finding_criteria):<br>required: **true**<br><p>Represents the criteria to be used in the filter for querying findings.</p> <p>You can only use the following attributes to query findings:</p> <ul>  <li>   <p>accountId</p></li>  <li>   <p>id</p></li>  <li>   <p>region</p></li>  <li>   <p>severity</p>   <p>To filter on the basis of severity, the API and CLI use the following input list for the <a href="https://docs.aws.amazon.com/guardduty/latest/APIReference/API_FindingCriteria.html">FindingCriteria</a> condition:</p>   <ul>    <li>     <p><b>Low</b>: <code>["1", "2", "3"]</code></p></li>    <li>     <p><b>Medium</b>: <code>["4", "5", "6"]</code></p></li>    <li>     <p><b>High</b>: <code>["7", "8", "9"]</code></p></li>   </ul>   <p>For more information, see <a href="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings.html#guardduty_findings-severity">Severity levels for GuardDuty findings</a>.</p></li>  <li>   <p>type</p></li>  <li>   <p>updatedAt</p>   <p>Type: ISO 8601 string format: YYYY-MM-DDTHH:MM:SS.SSSZ or YYYY-MM-DDTHH:MM:SSZ depending on whether the value contains milliseconds.</p></li>  <li>   <p>resource.accessKeyDetails.accessKeyId</p></li>  <li>   <p>resource.accessKeyDetails.principalId</p></li>  <li>   <p>resource.accessKeyDetails.userName</p></li>  <li>   <p>resource.accessKeyDetails.userType</p></li>  <li>   <p>resource.instanceDetails.iamInstanceProfile.id</p></li>  <li>   <p>resource.instanceDetails.imageId</p></li>  <li>   <p>resource.instanceDetails.instanceId</p></li>  <li>   <p>resource.instanceDetails.tags.key</p></li>  <li>   <p>resource.instanceDetails.tags.value</p></li>  <li>   <p>resource.instanceDetails.networkInterfaces.ipv6Addresses</p></li>  <li>   <p>resource.instanceDetails.networkInterfaces.privateIpAddresses.privateIpAddress</p></li>  <li>   <p>resource.instanceDetails.networkInterfaces.publicDnsName</p></li>  <li>   <p>resource.instanceDetails.networkInterfaces.publicIp</p></li>  <li>   <p>resource.instanceDetails.networkInterfaces.securityGroups.groupId</p></li>  <li>   <p>resource.instanceDetails.networkInterfaces.securityGroups.groupName</p></li>  <li>   <p>resource.instanceDetails.networkInterfaces.subnetId</p></li>  <li>   <p>resource.instanceDetails.networkInterfaces.vpcId</p></li>  <li>   <p>resource.instanceDetails.outpostArn</p></li>  <li>   <p>resource.resourceType</p></li>  <li>   <p>resource.s3BucketDetails.publicAccess.effectivePermissions</p></li>  <li>   <p>resource.s3BucketDetails.name</p></li>  <li>   <p>resource.s3BucketDetails.tags.key</p></li>  <li>   <p>resource.s3BucketDetails.tags.value</p></li>  <li>   <p>resource.s3BucketDetails.type</p></li>  <li>   <p>service.action.actionType</p></li>  <li>   <p>service.action.awsApiCallAction.api</p></li>  <li>   <p>service.action.awsApiCallAction.callerType</p></li>  <li>   <p>service.action.awsApiCallAction.errorCode</p></li>  <li>   <p>service.action.awsApiCallAction.remoteIpDetails.city.cityName</p></li>  <li>   <p>service.action.awsApiCallAction.remoteIpDetails.country.countryName</p></li>  <li>   <p>service.action.awsApiCallAction.remoteIpDetails.ipAddressV4</p></li>  <li>   <p>service.action.awsApiCallAction.remoteIpDetails.ipAddressV6</p></li>  <li>   <p>service.action.awsApiCallAction.remoteIpDetails.organization.asn</p></li>  <li>   <p>service.action.awsApiCallAction.remoteIpDetails.organization.asnOrg</p></li>  <li>   <p>service.action.awsApiCallAction.serviceName</p></li>  <li>   <p>service.action.dnsRequestAction.domain</p></li>  <li>   <p>service.action.dnsRequestAction.domainWithSuffix</p></li>  <li>   <p>service.action.networkConnectionAction.blocked</p></li>  <li>   <p>service.action.networkConnectionAction.connectionDirection</p></li>  <li>   <p>service.action.networkConnectionAction.localPortDetails.port</p></li>  <li>   <p>service.action.networkConnectionAction.protocol</p></li>  <li>   <p>service.action.networkConnectionAction.remoteIpDetails.city.cityName</p></li>  <li>   <p>service.action.networkConnectionAction.remoteIpDetails.country.countryName</p></li>  <li>   <p>service.action.networkConnectionAction.remoteIpDetails.ipAddressV4</p></li>  <li>   <p>service.action.networkConnectionAction.remoteIpDetails.ipAddressV6</p></li>  <li>   <p>service.action.networkConnectionAction.remoteIpDetails.organization.asn</p></li>  <li>   <p>service.action.networkConnectionAction.remoteIpDetails.organization.asnOrg</p></li>  <li>   <p>service.action.networkConnectionAction.remotePortDetails.port</p></li>  <li>   <p>service.action.awsApiCallAction.remoteAccountDetails.affiliated</p></li>  <li>   <p>service.action.kubernetesApiCallAction.remoteIpDetails.ipAddressV4</p></li>  <li>   <p>service.action.kubernetesApiCallAction.remoteIpDetails.ipAddressV6</p></li>  <li>   <p>service.action.kubernetesApiCallAction.namespace</p></li>  <li>   <p>service.action.kubernetesApiCallAction.remoteIpDetails.organization.asn</p></li>  <li>   <p>service.action.kubernetesApiCallAction.requestUri</p></li>  <li>   <p>service.action.kubernetesApiCallAction.statusCode</p></li>  <li>   <p>service.action.networkConnectionAction.localIpDetails.ipAddressV4</p></li>  <li>   <p>service.action.networkConnectionAction.localIpDetails.ipAddressV6</p></li>  <li>   <p>service.action.networkConnectionAction.protocol</p></li>  <li>   <p>service.action.awsApiCallAction.serviceName</p></li>  <li>   <p>service.action.awsApiCallAction.remoteAccountDetails.accountId</p></li>  <li>   <p>service.additionalInfo.threatListName</p></li>  <li>   <p>service.resourceRole</p></li>  <li>   <p>resource.eksClusterDetails.name</p></li>  <li>   <p>resource.kubernetesDetails.kubernetesWorkloadDetails.name</p></li>  <li>   <p>resource.kubernetesDetails.kubernetesWorkloadDetails.namespace</p></li>  <li>   <p>resource.kubernetesDetails.kubernetesUserDetails.username</p></li>  <li>   <p>resource.kubernetesDetails.kubernetesWorkloadDetails.containers.image</p></li>  <li>   <p>resource.kubernetesDetails.kubernetesWorkloadDetails.containers.imagePrefix</p></li>  <li>   <p>service.ebsVolumeScanDetails.scanId</p></li>  <li>   <p>service.ebsVolumeScanDetails.scanDetections.threatDetectedByName.threatNames.name</p></li>  <li>   <p>service.ebsVolumeScanDetails.scanDetections.threatDetectedByName.threatNames.severity</p></li>  <li>   <p>service.ebsVolumeScanDetails.scanDetections.threatDetectedByName.threatNames.filePaths.hash</p></li>  <li>   <p>resource.ecsClusterDetails.name</p></li>  <li>   <p>resource.ecsClusterDetails.taskDetails.containers.image</p></li>  <li>   <p>resource.ecsClusterDetails.taskDetails.definitionArn</p></li>  <li>   <p>resource.containerDetails.image</p></li>  <li>   <p>resource.rdsDbInstanceDetails.dbInstanceIdentifier</p></li>  <li>   <p>resource.rdsDbInstanceDetails.dbClusterIdentifier</p></li>  <li>   <p>resource.rdsDbInstanceDetails.engine</p></li>  <li>   <p>resource.rdsDbUserDetails.user</p></li>  <li>   <p>resource.rdsDbInstanceDetails.tags.key</p></li>  <li>   <p>resource.rdsDbInstanceDetails.tags.value</p></li>  <li>   <p>service.runtimeDetails.process.executableSha256</p></li>  <li>   <p>service.runtimeDetails.process.name</p></li>  <li>   <p>service.runtimeDetails.process.name</p></li>  <li>   <p>resource.lambdaDetails.functionName</p></li>  <li>   <p>resource.lambdaDetails.functionArn</p></li>  <li>   <p>resource.lambdaDetails.tags.key</p></li>  <li>   <p>resource.lambdaDetails.tags.value</p></li> </ul><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::set_client_token):<br>required: **false**<br><p>The idempotency token for the create request.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_filter::builders::CreateFilterFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be added to a new filter resource.</p><br>
    /// - On success, responds with [`CreateFilterOutput`](crate::operation::create_filter::CreateFilterOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::create_filter::CreateFilterOutput::name): <p>The name of the successfully created filter.</p>
    /// - On failure, responds with [`SdkError<CreateFilterError>`](crate::operation::create_filter::CreateFilterError)
    pub fn create_filter(&self) -> crate::operation::create_filter::builders::CreateFilterFluentBuilder {
        crate::operation::create_filter::builders::CreateFilterFluentBuilder::new(self.handle.clone())
    }
}
