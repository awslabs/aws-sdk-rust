// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateFilter`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`detector_id(impl Into<String>)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::detector_id) / [`set_detector_id(Option<String>)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::set_detector_id):<br>required: **true**<br><p>The unique ID of the detector that specifies the GuardDuty service where you want to update a filter.</p><br>
    ///   - [`filter_name(impl Into<String>)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::filter_name) / [`set_filter_name(Option<String>)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::set_filter_name):<br>required: **true**<br><p>The name of the filter.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::set_description):<br>required: **false**<br><p>The description of the filter. Valid characters include alphanumeric characters, and special characters such as hyphen, period, colon, underscore, parentheses (<code>{ }</code>, <code>[ ]</code>, and <code>( )</code>), forward slash, horizontal tab, vertical tab, newline, form feed, return, and whitespace.</p><br>
    ///   - [`action(FilterAction)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::action) / [`set_action(Option<FilterAction>)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::set_action):<br>required: **false**<br><p>Specifies the action that is to be applied to the findings that match the filter.</p><br>
    ///   - [`rank(i32)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::rank) / [`set_rank(Option<i32>)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::set_rank):<br>required: **false**<br><p>Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.</p><br>
    ///   - [`finding_criteria(FindingCriteria)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::finding_criteria) / [`set_finding_criteria(Option<FindingCriteria>)`](crate::operation::update_filter::builders::UpdateFilterFluentBuilder::set_finding_criteria):<br>required: **false**<br><p>Represents the criteria to be used in the filter for querying findings.</p><br>
    /// - On success, responds with [`UpdateFilterOutput`](crate::operation::update_filter::UpdateFilterOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::update_filter::UpdateFilterOutput::name): <p>The name of the filter.</p>
    /// - On failure, responds with [`SdkError<UpdateFilterError>`](crate::operation::update_filter::UpdateFilterError)
    pub fn update_filter(&self) -> crate::operation::update_filter::builders::UpdateFilterFluentBuilder {
        crate::operation::update_filter::builders::UpdateFilterFluentBuilder::new(self.handle.clone())
    }
}
