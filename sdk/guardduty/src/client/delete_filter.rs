// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteFilter`](crate::operation::delete_filter::builders::DeleteFilterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`detector_id(impl Into<String>)`](crate::operation::delete_filter::builders::DeleteFilterFluentBuilder::detector_id) / [`set_detector_id(Option<String>)`](crate::operation::delete_filter::builders::DeleteFilterFluentBuilder::set_detector_id):<br>required: **true**<br><p>The unique ID of the detector that the filter is associated with.</p><br>
    ///   - [`filter_name(impl Into<String>)`](crate::operation::delete_filter::builders::DeleteFilterFluentBuilder::filter_name) / [`set_filter_name(Option<String>)`](crate::operation::delete_filter::builders::DeleteFilterFluentBuilder::set_filter_name):<br>required: **true**<br><p>The name of the filter that you want to delete.</p><br>
    /// - On success, responds with [`DeleteFilterOutput`](crate::operation::delete_filter::DeleteFilterOutput)
    /// - On failure, responds with [`SdkError<DeleteFilterError>`](crate::operation::delete_filter::DeleteFilterError)
    pub fn delete_filter(&self) -> crate::operation::delete_filter::builders::DeleteFilterFluentBuilder {
        crate::operation::delete_filter::builders::DeleteFilterFluentBuilder::new(self.handle.clone())
    }
}
