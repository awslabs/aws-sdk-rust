// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateIPSet`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`detector_id(impl Into<String>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::detector_id) / [`set_detector_id(Option<String>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::set_detector_id):<br>required: **true**<br><p>The unique ID of the detector of the GuardDuty account that you want to create an IPSet for.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::set_name):<br>required: **true**<br><p>The user-friendly name to identify the IPSet.</p>  <p> Allowed characters are alphanumeric, whitespace, dash (-), and underscores (_).</p><br>
    ///   - [`format(IpSetFormat)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::format) / [`set_format(Option<IpSetFormat>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::set_format):<br>required: **true**<br><p>The format of the file that contains the IPSet.</p><br>
    ///   - [`location(impl Into<String>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::location) / [`set_location(Option<String>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::set_location):<br>required: **true**<br><p>The URI of the file that contains the IPSet. </p><br>
    ///   - [`activate(bool)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::activate) / [`set_activate(Option<bool>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::set_activate):<br>required: **true**<br><p>A Boolean value that indicates whether GuardDuty is to start using the uploaded IPSet.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::set_client_token):<br>required: **false**<br><p>The idempotency token for the create request.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be added to a new IP set resource.</p><br>
    /// - On success, responds with [`CreateIpSetOutput`](crate::operation::create_ip_set::CreateIpSetOutput) with field(s):
    ///   - [`ip_set_id(Option<String>)`](crate::operation::create_ip_set::CreateIpSetOutput::ip_set_id): <p>The ID of the IPSet resource.</p>
    /// - On failure, responds with [`SdkError<CreateIPSetError>`](crate::operation::create_ip_set::CreateIPSetError)
    pub fn create_ip_set(&self) -> crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder {
        crate::operation::create_ip_set::builders::CreateIPSetFluentBuilder::new(self.handle.clone())
    }
}
