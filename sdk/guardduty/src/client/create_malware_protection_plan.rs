// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMalwareProtectionPlan`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::set_client_token):<br>required: **false**<br><p>The idempotency token for the create request.</p><br>
    ///   - [`role(impl Into<String>)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::role) / [`set_role(Option<String>)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::set_role):<br>required: **true**<br><p>Amazon Resource Name (ARN) of the IAM role that has the permissions to scan and add tags to the associated protected resource.</p><br>
    ///   - [`protected_resource(CreateProtectedResource)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::protected_resource) / [`set_protected_resource(Option<CreateProtectedResource>)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::set_protected_resource):<br>required: **true**<br><p>Information about the protected resource that is associated with the created Malware Protection plan. Presently, <code>S3Bucket</code> is the only supported protected resource.</p><br>
    ///   - [`actions(MalwareProtectionPlanActions)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::actions) / [`set_actions(Option<MalwareProtectionPlanActions>)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::set_actions):<br>required: **false**<br><p>Information about whether the tags will be added to the S3 object after scanning.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::set_tags):<br>required: **false**<br><p>Tags added to the Malware Protection plan resource.</p><br>
    /// - On success, responds with [`CreateMalwareProtectionPlanOutput`](crate::operation::create_malware_protection_plan::CreateMalwareProtectionPlanOutput) with field(s):
    ///   - [`malware_protection_plan_id(Option<String>)`](crate::operation::create_malware_protection_plan::CreateMalwareProtectionPlanOutput::malware_protection_plan_id): <p>A unique identifier associated with the Malware Protection plan resource.</p>
    /// - On failure, responds with [`SdkError<CreateMalwareProtectionPlanError>`](crate::operation::create_malware_protection_plan::CreateMalwareProtectionPlanError)
    pub fn create_malware_protection_plan(
        &self,
    ) -> crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder {
        crate::operation::create_malware_protection_plan::builders::CreateMalwareProtectionPlanFluentBuilder::new(self.handle.clone())
    }
}
