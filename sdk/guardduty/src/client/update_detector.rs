// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDetector`](crate::operation::update_detector::builders::UpdateDetectorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`detector_id(impl Into<String>)`](crate::operation::update_detector::builders::UpdateDetectorFluentBuilder::detector_id) / [`set_detector_id(Option<String>)`](crate::operation::update_detector::builders::UpdateDetectorFluentBuilder::set_detector_id): <p>The unique ID of the detector to update.</p>
    ///   - [`enable(bool)`](crate::operation::update_detector::builders::UpdateDetectorFluentBuilder::enable) / [`set_enable(bool)`](crate::operation::update_detector::builders::UpdateDetectorFluentBuilder::set_enable): <p>Specifies whether the detector is enabled or not enabled.</p>
    ///   - [`finding_publishing_frequency(FindingPublishingFrequency)`](crate::operation::update_detector::builders::UpdateDetectorFluentBuilder::finding_publishing_frequency) / [`set_finding_publishing_frequency(Option<FindingPublishingFrequency>)`](crate::operation::update_detector::builders::UpdateDetectorFluentBuilder::set_finding_publishing_frequency): <p>An enum value that specifies how frequently findings are exported, such as to CloudWatch Events.</p>
    ///   - [`data_sources(DataSourceConfigurations)`](crate::operation::update_detector::builders::UpdateDetectorFluentBuilder::data_sources) / [`set_data_sources(Option<DataSourceConfigurations>)`](crate::operation::update_detector::builders::UpdateDetectorFluentBuilder::set_data_sources): <p>Describes which data sources will be updated.</p>
    /// - On success, responds with [`UpdateDetectorOutput`](crate::operation::update_detector::UpdateDetectorOutput)
    /// - On failure, responds with [`SdkError<UpdateDetectorError>`](crate::operation::update_detector::UpdateDetectorError)
    pub fn update_detector(
        &self,
    ) -> crate::operation::update_detector::builders::UpdateDetectorFluentBuilder {
        crate::operation::update_detector::builders::UpdateDetectorFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
