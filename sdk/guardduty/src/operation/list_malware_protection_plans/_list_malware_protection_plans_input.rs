// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListMalwareProtectionPlansInput {
    /// <p>You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action, fill nextToken in the request with the value of <code>NextToken</code> from the previous response to continue listing data. The default page size is 100 plans.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListMalwareProtectionPlansInput {
    /// <p>You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action, fill nextToken in the request with the value of <code>NextToken</code> from the previous response to continue listing data. The default page size is 100 plans.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListMalwareProtectionPlansInput {
    /// Creates a new builder-style object to manufacture [`ListMalwareProtectionPlansInput`](crate::operation::list_malware_protection_plans::ListMalwareProtectionPlansInput).
    pub fn builder() -> crate::operation::list_malware_protection_plans::builders::ListMalwareProtectionPlansInputBuilder {
        crate::operation::list_malware_protection_plans::builders::ListMalwareProtectionPlansInputBuilder::default()
    }
}

/// A builder for [`ListMalwareProtectionPlansInput`](crate::operation::list_malware_protection_plans::ListMalwareProtectionPlansInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListMalwareProtectionPlansInputBuilder {
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListMalwareProtectionPlansInputBuilder {
    /// <p>You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action, fill nextToken in the request with the value of <code>NextToken</code> from the previous response to continue listing data. The default page size is 100 plans.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action, fill nextToken in the request with the value of <code>NextToken</code> from the previous response to continue listing data. The default page size is 100 plans.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the list action. For subsequent calls to the action, fill nextToken in the request with the value of <code>NextToken</code> from the previous response to continue listing data. The default page size is 100 plans.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListMalwareProtectionPlansInput`](crate::operation::list_malware_protection_plans::ListMalwareProtectionPlansInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_malware_protection_plans::ListMalwareProtectionPlansInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_malware_protection_plans::ListMalwareProtectionPlansInput { next_token: self.next_token })
    }
}
