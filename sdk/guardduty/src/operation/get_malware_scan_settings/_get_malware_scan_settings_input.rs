// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetMalwareScanSettingsInput {
    /// <p>The unique ID of the detector that the scan setting is associated with.</p>
    #[doc(hidden)]
    pub detector_id: std::option::Option<std::string::String>,
}
impl GetMalwareScanSettingsInput {
    /// <p>The unique ID of the detector that the scan setting is associated with.</p>
    pub fn detector_id(&self) -> std::option::Option<&str> {
        self.detector_id.as_deref()
    }
}
impl GetMalwareScanSettingsInput {
    /// Creates a new builder-style object to manufacture [`GetMalwareScanSettingsInput`](crate::operation::get_malware_scan_settings::GetMalwareScanSettingsInput).
    pub fn builder(
    ) -> crate::operation::get_malware_scan_settings::builders::GetMalwareScanSettingsInputBuilder
    {
        crate::operation::get_malware_scan_settings::builders::GetMalwareScanSettingsInputBuilder::default()
    }
}

/// A builder for [`GetMalwareScanSettingsInput`](crate::operation::get_malware_scan_settings::GetMalwareScanSettingsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetMalwareScanSettingsInputBuilder {
    pub(crate) detector_id: std::option::Option<std::string::String>,
}
impl GetMalwareScanSettingsInputBuilder {
    /// <p>The unique ID of the detector that the scan setting is associated with.</p>
    pub fn detector_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.detector_id = Some(input.into());
        self
    }
    /// <p>The unique ID of the detector that the scan setting is associated with.</p>
    pub fn set_detector_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.detector_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetMalwareScanSettingsInput`](crate::operation::get_malware_scan_settings::GetMalwareScanSettingsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_malware_scan_settings::GetMalwareScanSettingsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_malware_scan_settings::GetMalwareScanSettingsInput {
                detector_id: self.detector_id,
            },
        )
    }
}
