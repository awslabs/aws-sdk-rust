// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains total number of infected files.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ThreatsDetectedItemCount {
    /// <p>Total number of infected files.</p>
    #[doc(hidden)]
    pub files: i32,
}
impl ThreatsDetectedItemCount {
    /// <p>Total number of infected files.</p>
    pub fn files(&self) -> i32 {
        self.files
    }
}
impl ThreatsDetectedItemCount {
    /// Creates a new builder-style object to manufacture [`ThreatsDetectedItemCount`](crate::types::ThreatsDetectedItemCount).
    pub fn builder() -> crate::types::builders::ThreatsDetectedItemCountBuilder {
        crate::types::builders::ThreatsDetectedItemCountBuilder::default()
    }
}

/// A builder for [`ThreatsDetectedItemCount`](crate::types::ThreatsDetectedItemCount).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ThreatsDetectedItemCountBuilder {
    pub(crate) files: std::option::Option<i32>,
}
impl ThreatsDetectedItemCountBuilder {
    /// <p>Total number of infected files.</p>
    pub fn files(mut self, input: i32) -> Self {
        self.files = Some(input);
        self
    }
    /// <p>Total number of infected files.</p>
    pub fn set_files(mut self, input: std::option::Option<i32>) -> Self {
        self.files = input;
        self
    }
    /// Consumes the builder and constructs a [`ThreatsDetectedItemCount`](crate::types::ThreatsDetectedItemCount).
    pub fn build(self) -> crate::types::ThreatsDetectedItemCount {
        crate::types::ThreatsDetectedItemCount {
            files: self.files.unwrap_or_default(),
        }
    }
}
