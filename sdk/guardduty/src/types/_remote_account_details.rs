// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the remote Amazon Web Services account that made the API call.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RemoteAccountDetails {
    /// <p>The Amazon Web Services account ID of the remote API caller.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>Details on whether the Amazon Web Services account of the remote API caller is related to your GuardDuty environment. If this value is <code>True</code> the API caller is affiliated to your account in some way. If it is <code>False</code> the API caller is from outside your environment.</p>
    #[doc(hidden)]
    pub affiliated: bool,
}
impl RemoteAccountDetails {
    /// <p>The Amazon Web Services account ID of the remote API caller.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>Details on whether the Amazon Web Services account of the remote API caller is related to your GuardDuty environment. If this value is <code>True</code> the API caller is affiliated to your account in some way. If it is <code>False</code> the API caller is from outside your environment.</p>
    pub fn affiliated(&self) -> bool {
        self.affiliated
    }
}
impl RemoteAccountDetails {
    /// Creates a new builder-style object to manufacture [`RemoteAccountDetails`](crate::types::RemoteAccountDetails).
    pub fn builder() -> crate::types::builders::RemoteAccountDetailsBuilder {
        crate::types::builders::RemoteAccountDetailsBuilder::default()
    }
}

/// A builder for [`RemoteAccountDetails`](crate::types::RemoteAccountDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RemoteAccountDetailsBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) affiliated: std::option::Option<bool>,
}
impl RemoteAccountDetailsBuilder {
    /// <p>The Amazon Web Services account ID of the remote API caller.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID of the remote API caller.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>Details on whether the Amazon Web Services account of the remote API caller is related to your GuardDuty environment. If this value is <code>True</code> the API caller is affiliated to your account in some way. If it is <code>False</code> the API caller is from outside your environment.</p>
    pub fn affiliated(mut self, input: bool) -> Self {
        self.affiliated = Some(input);
        self
    }
    /// <p>Details on whether the Amazon Web Services account of the remote API caller is related to your GuardDuty environment. If this value is <code>True</code> the API caller is affiliated to your account in some way. If it is <code>False</code> the API caller is from outside your environment.</p>
    pub fn set_affiliated(mut self, input: std::option::Option<bool>) -> Self {
        self.affiliated = input;
        self
    }
    /// Consumes the builder and constructs a [`RemoteAccountDetails`](crate::types::RemoteAccountDetails).
    pub fn build(self) -> crate::types::RemoteAccountDetails {
        crate::types::RemoteAccountDetails {
            account_id: self.account_id,
            affiliated: self.affiliated.unwrap_or_default(),
        }
    }
}
