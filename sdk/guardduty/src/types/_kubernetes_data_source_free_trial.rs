// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides details about the Kubernetes resources when it is enabled as a data source.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct KubernetesDataSourceFreeTrial {
    /// <p>Describes whether Kubernetes audit logs are enabled as a data source.</p>
    #[doc(hidden)]
    pub audit_logs: std::option::Option<crate::types::DataSourceFreeTrial>,
}
impl KubernetesDataSourceFreeTrial {
    /// <p>Describes whether Kubernetes audit logs are enabled as a data source.</p>
    pub fn audit_logs(&self) -> std::option::Option<&crate::types::DataSourceFreeTrial> {
        self.audit_logs.as_ref()
    }
}
impl KubernetesDataSourceFreeTrial {
    /// Creates a new builder-style object to manufacture [`KubernetesDataSourceFreeTrial`](crate::types::KubernetesDataSourceFreeTrial).
    pub fn builder() -> crate::types::builders::KubernetesDataSourceFreeTrialBuilder {
        crate::types::builders::KubernetesDataSourceFreeTrialBuilder::default()
    }
}

/// A builder for [`KubernetesDataSourceFreeTrial`](crate::types::KubernetesDataSourceFreeTrial).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct KubernetesDataSourceFreeTrialBuilder {
    pub(crate) audit_logs: std::option::Option<crate::types::DataSourceFreeTrial>,
}
impl KubernetesDataSourceFreeTrialBuilder {
    /// <p>Describes whether Kubernetes audit logs are enabled as a data source.</p>
    pub fn audit_logs(mut self, input: crate::types::DataSourceFreeTrial) -> Self {
        self.audit_logs = Some(input);
        self
    }
    /// <p>Describes whether Kubernetes audit logs are enabled as a data source.</p>
    pub fn set_audit_logs(
        mut self,
        input: std::option::Option<crate::types::DataSourceFreeTrial>,
    ) -> Self {
        self.audit_logs = input;
        self
    }
    /// Consumes the builder and constructs a [`KubernetesDataSourceFreeTrial`](crate::types::KubernetesDataSourceFreeTrial).
    pub fn build(self) -> crate::types::KubernetesDataSourceFreeTrial {
        crate::types::KubernetesDataSourceFreeTrial {
            audit_logs: self.audit_logs,
        }
    }
}
