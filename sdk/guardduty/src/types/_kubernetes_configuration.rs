// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes whether any Kubernetes data sources are enabled.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct KubernetesConfiguration {
    /// <p>The status of Kubernetes audit logs as a data source.</p>
    #[doc(hidden)]
    pub audit_logs: std::option::Option<crate::types::KubernetesAuditLogsConfiguration>,
}
impl KubernetesConfiguration {
    /// <p>The status of Kubernetes audit logs as a data source.</p>
    pub fn audit_logs(
        &self,
    ) -> std::option::Option<&crate::types::KubernetesAuditLogsConfiguration> {
        self.audit_logs.as_ref()
    }
}
impl KubernetesConfiguration {
    /// Creates a new builder-style object to manufacture [`KubernetesConfiguration`](crate::types::KubernetesConfiguration).
    pub fn builder() -> crate::types::builders::KubernetesConfigurationBuilder {
        crate::types::builders::KubernetesConfigurationBuilder::default()
    }
}

/// A builder for [`KubernetesConfiguration`](crate::types::KubernetesConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct KubernetesConfigurationBuilder {
    pub(crate) audit_logs: std::option::Option<crate::types::KubernetesAuditLogsConfiguration>,
}
impl KubernetesConfigurationBuilder {
    /// <p>The status of Kubernetes audit logs as a data source.</p>
    pub fn audit_logs(mut self, input: crate::types::KubernetesAuditLogsConfiguration) -> Self {
        self.audit_logs = Some(input);
        self
    }
    /// <p>The status of Kubernetes audit logs as a data source.</p>
    pub fn set_audit_logs(
        mut self,
        input: std::option::Option<crate::types::KubernetesAuditLogsConfiguration>,
    ) -> Self {
        self.audit_logs = input;
        self
    }
    /// Consumes the builder and constructs a [`KubernetesConfiguration`](crate::types::KubernetesConfiguration).
    pub fn build(self) -> crate::types::KubernetesConfiguration {
        crate::types::KubernetesConfiguration {
            audit_logs: self.audit_logs,
        }
    }
}
