// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about each resource type associated with the <code>groupedByResource</code> statistics.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResourceStatistics {
    /// <p>The ID of the Amazon Web Services account.</p>
    pub account_id: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp at which the statistics for this resource was last generated.</p>
    pub last_generated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>ID associated with each resource. The following list provides the mapping of the resource type and resource ID.</p>
    /// <p class="title"><b>Mapping of resource and resource ID</b></p>
    /// <ul>
    /// <li>
    /// <p>AccessKey - <code>resource.accessKeyDetails.accessKeyId</code></p></li>
    /// <li>
    /// <p>Container - <code>resource.containerDetails.id</code></p></li>
    /// <li>
    /// <p>ECSCluster - <code>resource.ecsClusterDetails.name</code></p></li>
    /// <li>
    /// <p>EKSCluster - <code>resource.eksClusterDetails.name</code></p></li>
    /// <li>
    /// <p>Instance - <code>resource.instanceDetails.instanceId</code></p></li>
    /// <li>
    /// <p>KubernetesCluster - <code>resource.kubernetesDetails.kubernetesWorkloadDetails.name</code></p></li>
    /// <li>
    /// <p>Lambda - <code>resource.lambdaDetails.functionName</code></p></li>
    /// <li>
    /// <p>RDSDBInstance - <code>resource.rdsDbInstanceDetails.dbInstanceIdentifier</code></p></li>
    /// <li>
    /// <p>S3Bucket - <code>resource.s3BucketDetails.name</code></p></li>
    /// <li>
    /// <p>S3Object - <code>resource.s3BucketDetails.name</code></p></li>
    /// </ul>
    pub resource_id: ::std::option::Option<::std::string::String>,
    /// <p>The type of resource.</p>
    pub resource_type: ::std::option::Option<::std::string::String>,
    /// <p>The total number of findings associated with this resource.</p>
    pub total_findings: ::std::option::Option<i32>,
}
impl ResourceStatistics {
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The timestamp at which the statistics for this resource was last generated.</p>
    pub fn last_generated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_generated_at.as_ref()
    }
    /// <p>ID associated with each resource. The following list provides the mapping of the resource type and resource ID.</p>
    /// <p class="title"><b>Mapping of resource and resource ID</b></p>
    /// <ul>
    /// <li>
    /// <p>AccessKey - <code>resource.accessKeyDetails.accessKeyId</code></p></li>
    /// <li>
    /// <p>Container - <code>resource.containerDetails.id</code></p></li>
    /// <li>
    /// <p>ECSCluster - <code>resource.ecsClusterDetails.name</code></p></li>
    /// <li>
    /// <p>EKSCluster - <code>resource.eksClusterDetails.name</code></p></li>
    /// <li>
    /// <p>Instance - <code>resource.instanceDetails.instanceId</code></p></li>
    /// <li>
    /// <p>KubernetesCluster - <code>resource.kubernetesDetails.kubernetesWorkloadDetails.name</code></p></li>
    /// <li>
    /// <p>Lambda - <code>resource.lambdaDetails.functionName</code></p></li>
    /// <li>
    /// <p>RDSDBInstance - <code>resource.rdsDbInstanceDetails.dbInstanceIdentifier</code></p></li>
    /// <li>
    /// <p>S3Bucket - <code>resource.s3BucketDetails.name</code></p></li>
    /// <li>
    /// <p>S3Object - <code>resource.s3BucketDetails.name</code></p></li>
    /// </ul>
    pub fn resource_id(&self) -> ::std::option::Option<&str> {
        self.resource_id.as_deref()
    }
    /// <p>The type of resource.</p>
    pub fn resource_type(&self) -> ::std::option::Option<&str> {
        self.resource_type.as_deref()
    }
    /// <p>The total number of findings associated with this resource.</p>
    pub fn total_findings(&self) -> ::std::option::Option<i32> {
        self.total_findings
    }
}
impl ResourceStatistics {
    /// Creates a new builder-style object to manufacture [`ResourceStatistics`](crate::types::ResourceStatistics).
    pub fn builder() -> crate::types::builders::ResourceStatisticsBuilder {
        crate::types::builders::ResourceStatisticsBuilder::default()
    }
}

/// A builder for [`ResourceStatistics`](crate::types::ResourceStatistics).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ResourceStatisticsBuilder {
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
    pub(crate) last_generated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) resource_id: ::std::option::Option<::std::string::String>,
    pub(crate) resource_type: ::std::option::Option<::std::string::String>,
    pub(crate) total_findings: ::std::option::Option<i32>,
}
impl ResourceStatisticsBuilder {
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// <p>The timestamp at which the statistics for this resource was last generated.</p>
    pub fn last_generated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_generated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp at which the statistics for this resource was last generated.</p>
    pub fn set_last_generated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_generated_at = input;
        self
    }
    /// <p>The timestamp at which the statistics for this resource was last generated.</p>
    pub fn get_last_generated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_generated_at
    }
    /// <p>ID associated with each resource. The following list provides the mapping of the resource type and resource ID.</p>
    /// <p class="title"><b>Mapping of resource and resource ID</b></p>
    /// <ul>
    /// <li>
    /// <p>AccessKey - <code>resource.accessKeyDetails.accessKeyId</code></p></li>
    /// <li>
    /// <p>Container - <code>resource.containerDetails.id</code></p></li>
    /// <li>
    /// <p>ECSCluster - <code>resource.ecsClusterDetails.name</code></p></li>
    /// <li>
    /// <p>EKSCluster - <code>resource.eksClusterDetails.name</code></p></li>
    /// <li>
    /// <p>Instance - <code>resource.instanceDetails.instanceId</code></p></li>
    /// <li>
    /// <p>KubernetesCluster - <code>resource.kubernetesDetails.kubernetesWorkloadDetails.name</code></p></li>
    /// <li>
    /// <p>Lambda - <code>resource.lambdaDetails.functionName</code></p></li>
    /// <li>
    /// <p>RDSDBInstance - <code>resource.rdsDbInstanceDetails.dbInstanceIdentifier</code></p></li>
    /// <li>
    /// <p>S3Bucket - <code>resource.s3BucketDetails.name</code></p></li>
    /// <li>
    /// <p>S3Object - <code>resource.s3BucketDetails.name</code></p></li>
    /// </ul>
    pub fn resource_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ID associated with each resource. The following list provides the mapping of the resource type and resource ID.</p>
    /// <p class="title"><b>Mapping of resource and resource ID</b></p>
    /// <ul>
    /// <li>
    /// <p>AccessKey - <code>resource.accessKeyDetails.accessKeyId</code></p></li>
    /// <li>
    /// <p>Container - <code>resource.containerDetails.id</code></p></li>
    /// <li>
    /// <p>ECSCluster - <code>resource.ecsClusterDetails.name</code></p></li>
    /// <li>
    /// <p>EKSCluster - <code>resource.eksClusterDetails.name</code></p></li>
    /// <li>
    /// <p>Instance - <code>resource.instanceDetails.instanceId</code></p></li>
    /// <li>
    /// <p>KubernetesCluster - <code>resource.kubernetesDetails.kubernetesWorkloadDetails.name</code></p></li>
    /// <li>
    /// <p>Lambda - <code>resource.lambdaDetails.functionName</code></p></li>
    /// <li>
    /// <p>RDSDBInstance - <code>resource.rdsDbInstanceDetails.dbInstanceIdentifier</code></p></li>
    /// <li>
    /// <p>S3Bucket - <code>resource.s3BucketDetails.name</code></p></li>
    /// <li>
    /// <p>S3Object - <code>resource.s3BucketDetails.name</code></p></li>
    /// </ul>
    pub fn set_resource_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// <p>ID associated with each resource. The following list provides the mapping of the resource type and resource ID.</p>
    /// <p class="title"><b>Mapping of resource and resource ID</b></p>
    /// <ul>
    /// <li>
    /// <p>AccessKey - <code>resource.accessKeyDetails.accessKeyId</code></p></li>
    /// <li>
    /// <p>Container - <code>resource.containerDetails.id</code></p></li>
    /// <li>
    /// <p>ECSCluster - <code>resource.ecsClusterDetails.name</code></p></li>
    /// <li>
    /// <p>EKSCluster - <code>resource.eksClusterDetails.name</code></p></li>
    /// <li>
    /// <p>Instance - <code>resource.instanceDetails.instanceId</code></p></li>
    /// <li>
    /// <p>KubernetesCluster - <code>resource.kubernetesDetails.kubernetesWorkloadDetails.name</code></p></li>
    /// <li>
    /// <p>Lambda - <code>resource.lambdaDetails.functionName</code></p></li>
    /// <li>
    /// <p>RDSDBInstance - <code>resource.rdsDbInstanceDetails.dbInstanceIdentifier</code></p></li>
    /// <li>
    /// <p>S3Bucket - <code>resource.s3BucketDetails.name</code></p></li>
    /// <li>
    /// <p>S3Object - <code>resource.s3BucketDetails.name</code></p></li>
    /// </ul>
    pub fn get_resource_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_id
    }
    /// <p>The type of resource.</p>
    pub fn resource_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The type of resource.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>The type of resource.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_type
    }
    /// <p>The total number of findings associated with this resource.</p>
    pub fn total_findings(mut self, input: i32) -> Self {
        self.total_findings = ::std::option::Option::Some(input);
        self
    }
    /// <p>The total number of findings associated with this resource.</p>
    pub fn set_total_findings(mut self, input: ::std::option::Option<i32>) -> Self {
        self.total_findings = input;
        self
    }
    /// <p>The total number of findings associated with this resource.</p>
    pub fn get_total_findings(&self) -> &::std::option::Option<i32> {
        &self.total_findings
    }
    /// Consumes the builder and constructs a [`ResourceStatistics`](crate::types::ResourceStatistics).
    pub fn build(self) -> crate::types::ResourceStatistics {
        crate::types::ResourceStatistics {
            account_id: self.account_id,
            last_generated_at: self.last_generated_at,
            resource_id: self.resource_id,
            resource_type: self.resource_type,
            total_findings: self.total_findings,
        }
    }
}
