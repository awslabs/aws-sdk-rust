// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information on the status of DNS logs as a data source.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DnsLogsConfigurationResult {
    /// <p>Denotes whether DNS logs is enabled as a data source.</p>
    pub status: ::std::option::Option<crate::types::DataSourceStatus>,
}
impl DnsLogsConfigurationResult {
    /// <p>Denotes whether DNS logs is enabled as a data source.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::DataSourceStatus> {
        self.status.as_ref()
    }
}
impl DnsLogsConfigurationResult {
    /// Creates a new builder-style object to manufacture [`DnsLogsConfigurationResult`](crate::types::DnsLogsConfigurationResult).
    pub fn builder() -> crate::types::builders::DnsLogsConfigurationResultBuilder {
        crate::types::builders::DnsLogsConfigurationResultBuilder::default()
    }
}

/// A builder for [`DnsLogsConfigurationResult`](crate::types::DnsLogsConfigurationResult).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DnsLogsConfigurationResultBuilder {
    pub(crate) status: ::std::option::Option<crate::types::DataSourceStatus>,
}
impl DnsLogsConfigurationResultBuilder {
    /// <p>Denotes whether DNS logs is enabled as a data source.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::DataSourceStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Denotes whether DNS logs is enabled as a data source.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::DataSourceStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Denotes whether DNS logs is enabled as a data source.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::DataSourceStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`DnsLogsConfigurationResult`](crate::types::DnsLogsConfigurationResult).
    pub fn build(self) -> crate::types::DnsLogsConfigurationResult {
        crate::types::DnsLogsConfigurationResult { status: self.status }
    }
}
