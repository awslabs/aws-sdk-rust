// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the port probe details.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PortProbeDetail {
    /// <p>The local port information of the connection.</p>
    #[doc(hidden)]
    pub local_port_details: std::option::Option<crate::types::LocalPortDetails>,
    /// <p>The local IP information of the connection.</p>
    #[doc(hidden)]
    pub local_ip_details: std::option::Option<crate::types::LocalIpDetails>,
    /// <p>The remote IP information of the connection.</p>
    #[doc(hidden)]
    pub remote_ip_details: std::option::Option<crate::types::RemoteIpDetails>,
}
impl PortProbeDetail {
    /// <p>The local port information of the connection.</p>
    pub fn local_port_details(&self) -> std::option::Option<&crate::types::LocalPortDetails> {
        self.local_port_details.as_ref()
    }
    /// <p>The local IP information of the connection.</p>
    pub fn local_ip_details(&self) -> std::option::Option<&crate::types::LocalIpDetails> {
        self.local_ip_details.as_ref()
    }
    /// <p>The remote IP information of the connection.</p>
    pub fn remote_ip_details(&self) -> std::option::Option<&crate::types::RemoteIpDetails> {
        self.remote_ip_details.as_ref()
    }
}
impl PortProbeDetail {
    /// Creates a new builder-style object to manufacture [`PortProbeDetail`](crate::types::PortProbeDetail).
    pub fn builder() -> crate::types::builders::PortProbeDetailBuilder {
        crate::types::builders::PortProbeDetailBuilder::default()
    }
}

/// A builder for [`PortProbeDetail`](crate::types::PortProbeDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PortProbeDetailBuilder {
    pub(crate) local_port_details: std::option::Option<crate::types::LocalPortDetails>,
    pub(crate) local_ip_details: std::option::Option<crate::types::LocalIpDetails>,
    pub(crate) remote_ip_details: std::option::Option<crate::types::RemoteIpDetails>,
}
impl PortProbeDetailBuilder {
    /// <p>The local port information of the connection.</p>
    pub fn local_port_details(mut self, input: crate::types::LocalPortDetails) -> Self {
        self.local_port_details = Some(input);
        self
    }
    /// <p>The local port information of the connection.</p>
    pub fn set_local_port_details(
        mut self,
        input: std::option::Option<crate::types::LocalPortDetails>,
    ) -> Self {
        self.local_port_details = input;
        self
    }
    /// <p>The local IP information of the connection.</p>
    pub fn local_ip_details(mut self, input: crate::types::LocalIpDetails) -> Self {
        self.local_ip_details = Some(input);
        self
    }
    /// <p>The local IP information of the connection.</p>
    pub fn set_local_ip_details(
        mut self,
        input: std::option::Option<crate::types::LocalIpDetails>,
    ) -> Self {
        self.local_ip_details = input;
        self
    }
    /// <p>The remote IP information of the connection.</p>
    pub fn remote_ip_details(mut self, input: crate::types::RemoteIpDetails) -> Self {
        self.remote_ip_details = Some(input);
        self
    }
    /// <p>The remote IP information of the connection.</p>
    pub fn set_remote_ip_details(
        mut self,
        input: std::option::Option<crate::types::RemoteIpDetails>,
    ) -> Self {
        self.remote_ip_details = input;
        self
    }
    /// Consumes the builder and constructs a [`PortProbeDetail`](crate::types::PortProbeDetail).
    pub fn build(self) -> crate::types::PortProbeDetail {
        crate::types::PortProbeDetail {
            local_port_details: self.local_port_details,
            local_ip_details: self.local_ip_details,
            remote_ip_details: self.remote_ip_details,
        }
    }
}
