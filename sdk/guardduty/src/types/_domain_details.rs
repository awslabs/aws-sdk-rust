// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the domain.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DomainDetails {
    /// <p>The domain information for the Amazon Web Services API call.</p>
    #[doc(hidden)]
    pub domain: std::option::Option<std::string::String>,
}
impl DomainDetails {
    /// <p>The domain information for the Amazon Web Services API call.</p>
    pub fn domain(&self) -> std::option::Option<&str> {
        self.domain.as_deref()
    }
}
impl DomainDetails {
    /// Creates a new builder-style object to manufacture [`DomainDetails`](crate::types::DomainDetails).
    pub fn builder() -> crate::types::builders::DomainDetailsBuilder {
        crate::types::builders::DomainDetailsBuilder::default()
    }
}

/// A builder for [`DomainDetails`](crate::types::DomainDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DomainDetailsBuilder {
    pub(crate) domain: std::option::Option<std::string::String>,
}
impl DomainDetailsBuilder {
    /// <p>The domain information for the Amazon Web Services API call.</p>
    pub fn domain(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain = Some(input.into());
        self
    }
    /// <p>The domain information for the Amazon Web Services API call.</p>
    pub fn set_domain(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain = input;
        self
    }
    /// Consumes the builder and constructs a [`DomainDetails`](crate::types::DomainDetails).
    pub fn build(self) -> crate::types::DomainDetails {
        crate::types::DomainDetails {
            domain: self.domain,
        }
    }
}
