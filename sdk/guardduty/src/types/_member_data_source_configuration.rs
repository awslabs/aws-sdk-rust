// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information on which data sources are enabled for a member account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MemberDataSourceConfiguration {
    /// <p>The account ID for the member account.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>Contains information on the status of data sources for the account.</p>
    #[doc(hidden)]
    pub data_sources: std::option::Option<crate::types::DataSourceConfigurationsResult>,
}
impl MemberDataSourceConfiguration {
    /// <p>The account ID for the member account.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>Contains information on the status of data sources for the account.</p>
    pub fn data_sources(
        &self,
    ) -> std::option::Option<&crate::types::DataSourceConfigurationsResult> {
        self.data_sources.as_ref()
    }
}
impl MemberDataSourceConfiguration {
    /// Creates a new builder-style object to manufacture [`MemberDataSourceConfiguration`](crate::types::MemberDataSourceConfiguration).
    pub fn builder() -> crate::types::builders::MemberDataSourceConfigurationBuilder {
        crate::types::builders::MemberDataSourceConfigurationBuilder::default()
    }
}

/// A builder for [`MemberDataSourceConfiguration`](crate::types::MemberDataSourceConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MemberDataSourceConfigurationBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) data_sources: std::option::Option<crate::types::DataSourceConfigurationsResult>,
}
impl MemberDataSourceConfigurationBuilder {
    /// <p>The account ID for the member account.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The account ID for the member account.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>Contains information on the status of data sources for the account.</p>
    pub fn data_sources(mut self, input: crate::types::DataSourceConfigurationsResult) -> Self {
        self.data_sources = Some(input);
        self
    }
    /// <p>Contains information on the status of data sources for the account.</p>
    pub fn set_data_sources(
        mut self,
        input: std::option::Option<crate::types::DataSourceConfigurationsResult>,
    ) -> Self {
        self.data_sources = input;
        self
    }
    /// Consumes the builder and constructs a [`MemberDataSourceConfiguration`](crate::types::MemberDataSourceConfiguration).
    pub fn build(self) -> crate::types::MemberDataSourceConfiguration {
        crate::types::MemberDataSourceConfiguration {
            account_id: self.account_id,
            data_sources: self.data_sources,
        }
    }
}
