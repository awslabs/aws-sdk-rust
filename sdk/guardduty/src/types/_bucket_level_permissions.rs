// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the bucket level permissions for the S3 bucket.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BucketLevelPermissions {
    /// <p>Contains information on how Access Control Policies are applied to the bucket.</p>
    #[doc(hidden)]
    pub access_control_list: std::option::Option<crate::types::AccessControlList>,
    /// <p>Contains information on the bucket policies for the S3 bucket.</p>
    #[doc(hidden)]
    pub bucket_policy: std::option::Option<crate::types::BucketPolicy>,
    /// <p>Contains information on which account level S3 Block Public Access settings are applied to the S3 bucket.</p>
    #[doc(hidden)]
    pub block_public_access: std::option::Option<crate::types::BlockPublicAccess>,
}
impl BucketLevelPermissions {
    /// <p>Contains information on how Access Control Policies are applied to the bucket.</p>
    pub fn access_control_list(&self) -> std::option::Option<&crate::types::AccessControlList> {
        self.access_control_list.as_ref()
    }
    /// <p>Contains information on the bucket policies for the S3 bucket.</p>
    pub fn bucket_policy(&self) -> std::option::Option<&crate::types::BucketPolicy> {
        self.bucket_policy.as_ref()
    }
    /// <p>Contains information on which account level S3 Block Public Access settings are applied to the S3 bucket.</p>
    pub fn block_public_access(&self) -> std::option::Option<&crate::types::BlockPublicAccess> {
        self.block_public_access.as_ref()
    }
}
impl BucketLevelPermissions {
    /// Creates a new builder-style object to manufacture [`BucketLevelPermissions`](crate::types::BucketLevelPermissions).
    pub fn builder() -> crate::types::builders::BucketLevelPermissionsBuilder {
        crate::types::builders::BucketLevelPermissionsBuilder::default()
    }
}

/// A builder for [`BucketLevelPermissions`](crate::types::BucketLevelPermissions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BucketLevelPermissionsBuilder {
    pub(crate) access_control_list: std::option::Option<crate::types::AccessControlList>,
    pub(crate) bucket_policy: std::option::Option<crate::types::BucketPolicy>,
    pub(crate) block_public_access: std::option::Option<crate::types::BlockPublicAccess>,
}
impl BucketLevelPermissionsBuilder {
    /// <p>Contains information on how Access Control Policies are applied to the bucket.</p>
    pub fn access_control_list(mut self, input: crate::types::AccessControlList) -> Self {
        self.access_control_list = Some(input);
        self
    }
    /// <p>Contains information on how Access Control Policies are applied to the bucket.</p>
    pub fn set_access_control_list(
        mut self,
        input: std::option::Option<crate::types::AccessControlList>,
    ) -> Self {
        self.access_control_list = input;
        self
    }
    /// <p>Contains information on the bucket policies for the S3 bucket.</p>
    pub fn bucket_policy(mut self, input: crate::types::BucketPolicy) -> Self {
        self.bucket_policy = Some(input);
        self
    }
    /// <p>Contains information on the bucket policies for the S3 bucket.</p>
    pub fn set_bucket_policy(
        mut self,
        input: std::option::Option<crate::types::BucketPolicy>,
    ) -> Self {
        self.bucket_policy = input;
        self
    }
    /// <p>Contains information on which account level S3 Block Public Access settings are applied to the S3 bucket.</p>
    pub fn block_public_access(mut self, input: crate::types::BlockPublicAccess) -> Self {
        self.block_public_access = Some(input);
        self
    }
    /// <p>Contains information on which account level S3 Block Public Access settings are applied to the S3 bucket.</p>
    pub fn set_block_public_access(
        mut self,
        input: std::option::Option<crate::types::BlockPublicAccess>,
    ) -> Self {
        self.block_public_access = input;
        self
    }
    /// Consumes the builder and constructs a [`BucketLevelPermissions`](crate::types::BucketLevelPermissions).
    pub fn build(self) -> crate::types::BucketLevelPermissions {
        crate::types::BucketLevelPermissions {
            access_control_list: self.access_control_list,
            bucket_policy: self.bucket_policy,
            block_public_access: self.block_public_access,
        }
    }
}
