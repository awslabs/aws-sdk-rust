// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the names of the data sources that couldn't be enabled.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UnprocessedDataSourcesResult {
    /// <p>An object that contains information on the status of all Malware Protection data sources.</p>
    #[doc(hidden)]
    pub malware_protection: std::option::Option<crate::types::MalwareProtectionConfigurationResult>,
}
impl UnprocessedDataSourcesResult {
    /// <p>An object that contains information on the status of all Malware Protection data sources.</p>
    pub fn malware_protection(
        &self,
    ) -> std::option::Option<&crate::types::MalwareProtectionConfigurationResult> {
        self.malware_protection.as_ref()
    }
}
impl UnprocessedDataSourcesResult {
    /// Creates a new builder-style object to manufacture [`UnprocessedDataSourcesResult`](crate::types::UnprocessedDataSourcesResult).
    pub fn builder() -> crate::types::builders::UnprocessedDataSourcesResultBuilder {
        crate::types::builders::UnprocessedDataSourcesResultBuilder::default()
    }
}

/// A builder for [`UnprocessedDataSourcesResult`](crate::types::UnprocessedDataSourcesResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UnprocessedDataSourcesResultBuilder {
    pub(crate) malware_protection:
        std::option::Option<crate::types::MalwareProtectionConfigurationResult>,
}
impl UnprocessedDataSourcesResultBuilder {
    /// <p>An object that contains information on the status of all Malware Protection data sources.</p>
    pub fn malware_protection(
        mut self,
        input: crate::types::MalwareProtectionConfigurationResult,
    ) -> Self {
        self.malware_protection = Some(input);
        self
    }
    /// <p>An object that contains information on the status of all Malware Protection data sources.</p>
    pub fn set_malware_protection(
        mut self,
        input: std::option::Option<crate::types::MalwareProtectionConfigurationResult>,
    ) -> Self {
        self.malware_protection = input;
        self
    }
    /// Consumes the builder and constructs a [`UnprocessedDataSourcesResult`](crate::types::UnprocessedDataSourcesResult).
    pub fn build(self) -> crate::types::UnprocessedDataSourcesResult {
        crate::types::UnprocessedDataSourcesResult {
            malware_protection: self.malware_protection,
        }
    }
}
