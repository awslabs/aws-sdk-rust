// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the Kubernetes user involved in a Kubernetes finding.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct KubernetesUserDetails {
    /// <p>The username of the user who called the Kubernetes API.</p>
    #[doc(hidden)]
    pub username: std::option::Option<std::string::String>,
    /// <p>The user ID of the user who called the Kubernetes API.</p>
    #[doc(hidden)]
    pub uid: std::option::Option<std::string::String>,
    /// <p>The groups that include the user who called the Kubernetes API.</p>
    #[doc(hidden)]
    pub groups: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl KubernetesUserDetails {
    /// <p>The username of the user who called the Kubernetes API.</p>
    pub fn username(&self) -> std::option::Option<&str> {
        self.username.as_deref()
    }
    /// <p>The user ID of the user who called the Kubernetes API.</p>
    pub fn uid(&self) -> std::option::Option<&str> {
        self.uid.as_deref()
    }
    /// <p>The groups that include the user who called the Kubernetes API.</p>
    pub fn groups(&self) -> std::option::Option<&[std::string::String]> {
        self.groups.as_deref()
    }
}
impl KubernetesUserDetails {
    /// Creates a new builder-style object to manufacture [`KubernetesUserDetails`](crate::types::KubernetesUserDetails).
    pub fn builder() -> crate::types::builders::KubernetesUserDetailsBuilder {
        crate::types::builders::KubernetesUserDetailsBuilder::default()
    }
}

/// A builder for [`KubernetesUserDetails`](crate::types::KubernetesUserDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct KubernetesUserDetailsBuilder {
    pub(crate) username: std::option::Option<std::string::String>,
    pub(crate) uid: std::option::Option<std::string::String>,
    pub(crate) groups: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl KubernetesUserDetailsBuilder {
    /// <p>The username of the user who called the Kubernetes API.</p>
    pub fn username(mut self, input: impl Into<std::string::String>) -> Self {
        self.username = Some(input.into());
        self
    }
    /// <p>The username of the user who called the Kubernetes API.</p>
    pub fn set_username(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.username = input;
        self
    }
    /// <p>The user ID of the user who called the Kubernetes API.</p>
    pub fn uid(mut self, input: impl Into<std::string::String>) -> Self {
        self.uid = Some(input.into());
        self
    }
    /// <p>The user ID of the user who called the Kubernetes API.</p>
    pub fn set_uid(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.uid = input;
        self
    }
    /// Appends an item to `groups`.
    ///
    /// To override the contents of this collection use [`set_groups`](Self::set_groups).
    ///
    /// <p>The groups that include the user who called the Kubernetes API.</p>
    pub fn groups(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.groups.unwrap_or_default();
        v.push(input.into());
        self.groups = Some(v);
        self
    }
    /// <p>The groups that include the user who called the Kubernetes API.</p>
    pub fn set_groups(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.groups = input;
        self
    }
    /// Consumes the builder and constructs a [`KubernetesUserDetails`](crate::types::KubernetesUserDetails).
    pub fn build(self) -> crate::types::KubernetesUserDetails {
        crate::types::KubernetesUserDetails {
            username: self.username,
            uid: self.uid,
            groups: self.groups,
        }
    }
}
