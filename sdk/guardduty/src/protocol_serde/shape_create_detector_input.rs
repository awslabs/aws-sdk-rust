// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_detector_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_detector::CreateDetectorInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("clientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.data_sources {
        #[allow(unused_mut)]
        let mut object_3 = object.key("dataSources").start_object();
        crate::protocol_serde::shape_data_source_configurations::ser_data_source_configurations(
            &mut object_3,
            var_2,
        )?;
        object_3.finish();
    }
    {
        object.key("enable").boolean(input.enable);
    }
    if let Some(var_4) = &input.finding_publishing_frequency {
        object
            .key("findingPublishingFrequency")
            .string(var_4.as_str());
    }
    if let Some(var_5) = &input.tags {
        #[allow(unused_mut)]
        let mut object_6 = object.key("tags").start_object();
        for (key_7, value_8) in var_5 {
            {
                object_6.key(key_7.as_str()).string(value_8.as_str());
            }
        }
        object_6.finish();
    }
    Ok(())
}
