// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportCrl`](crate::operation::import_crl::builders::ImportCrlFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::set_name): <p>The name of the certificate revocation list (CRL).</p>
    ///   - [`crl_data(Blob)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::crl_data) / [`set_crl_data(Option<Blob>)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::set_crl_data): <p>The x509 v3 specified certificate revocation list</p>
    ///   - [`enabled(bool)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::enabled) / [`set_enabled(Option<bool>)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::set_enabled): <p>Specifies whether the certificate revocation list (CRL) is enabled.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::set_tags): <p>A list of tags to attach to the certificate revocation list (CRL).</p>
    ///   - [`trust_anchor_arn(impl Into<String>)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::trust_anchor_arn) / [`set_trust_anchor_arn(Option<String>)`](crate::operation::import_crl::builders::ImportCrlFluentBuilder::set_trust_anchor_arn): <p>The ARN of the TrustAnchor the certificate revocation list (CRL) will provide revocation for.</p>
    /// - On success, responds with [`ImportCrlOutput`](crate::operation::import_crl::ImportCrlOutput) with field(s):
    ///   - [`crl(Option<CrlDetail>)`](crate::operation::import_crl::ImportCrlOutput::crl): <p>The state of the certificate revocation list (CRL) after a read or write operation.</p>
    /// - On failure, responds with [`SdkError<ImportCrlError>`](crate::operation::import_crl::ImportCrlError)
    pub fn import_crl(&self) -> crate::operation::import_crl::builders::ImportCrlFluentBuilder {
        crate::operation::import_crl::builders::ImportCrlFluentBuilder::new(self.handle.clone())
    }
}
