// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn create_trust_anchor_output_correct_errors(
    mut builder: crate::operation::create_trust_anchor::builders::CreateTrustAnchorOutputBuilder,
) -> crate::operation::create_trust_anchor::builders::CreateTrustAnchorOutputBuilder {
    if builder.trust_anchor.is_none() {
        builder.trust_anchor = {
            let builder = crate::types::builders::TrustAnchorDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn delete_crl_output_correct_errors(
    mut builder: crate::operation::delete_crl::builders::DeleteCrlOutputBuilder,
) -> crate::operation::delete_crl::builders::DeleteCrlOutputBuilder {
    if builder.crl.is_none() {
        builder.crl = {
            let builder = crate::types::builders::CrlDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn delete_trust_anchor_output_correct_errors(
    mut builder: crate::operation::delete_trust_anchor::builders::DeleteTrustAnchorOutputBuilder,
) -> crate::operation::delete_trust_anchor::builders::DeleteTrustAnchorOutputBuilder {
    if builder.trust_anchor.is_none() {
        builder.trust_anchor = {
            let builder = crate::types::builders::TrustAnchorDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn disable_crl_output_correct_errors(
    mut builder: crate::operation::disable_crl::builders::DisableCrlOutputBuilder,
) -> crate::operation::disable_crl::builders::DisableCrlOutputBuilder {
    if builder.crl.is_none() {
        builder.crl = {
            let builder = crate::types::builders::CrlDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn disable_trust_anchor_output_correct_errors(
    mut builder: crate::operation::disable_trust_anchor::builders::DisableTrustAnchorOutputBuilder,
) -> crate::operation::disable_trust_anchor::builders::DisableTrustAnchorOutputBuilder {
    if builder.trust_anchor.is_none() {
        builder.trust_anchor = {
            let builder = crate::types::builders::TrustAnchorDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn enable_crl_output_correct_errors(
    mut builder: crate::operation::enable_crl::builders::EnableCrlOutputBuilder,
) -> crate::operation::enable_crl::builders::EnableCrlOutputBuilder {
    if builder.crl.is_none() {
        builder.crl = {
            let builder = crate::types::builders::CrlDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn enable_trust_anchor_output_correct_errors(
    mut builder: crate::operation::enable_trust_anchor::builders::EnableTrustAnchorOutputBuilder,
) -> crate::operation::enable_trust_anchor::builders::EnableTrustAnchorOutputBuilder {
    if builder.trust_anchor.is_none() {
        builder.trust_anchor = {
            let builder = crate::types::builders::TrustAnchorDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn get_crl_output_correct_errors(
    mut builder: crate::operation::get_crl::builders::GetCrlOutputBuilder,
) -> crate::operation::get_crl::builders::GetCrlOutputBuilder {
    if builder.crl.is_none() {
        builder.crl = {
            let builder = crate::types::builders::CrlDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn get_trust_anchor_output_correct_errors(
    mut builder: crate::operation::get_trust_anchor::builders::GetTrustAnchorOutputBuilder,
) -> crate::operation::get_trust_anchor::builders::GetTrustAnchorOutputBuilder {
    if builder.trust_anchor.is_none() {
        builder.trust_anchor = {
            let builder = crate::types::builders::TrustAnchorDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn import_crl_output_correct_errors(
    mut builder: crate::operation::import_crl::builders::ImportCrlOutputBuilder,
) -> crate::operation::import_crl::builders::ImportCrlOutputBuilder {
    if builder.crl.is_none() {
        builder.crl = {
            let builder = crate::types::builders::CrlDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn put_notification_settings_output_correct_errors(
    mut builder: crate::operation::put_notification_settings::builders::PutNotificationSettingsOutputBuilder,
) -> crate::operation::put_notification_settings::builders::PutNotificationSettingsOutputBuilder {
    if builder.trust_anchor.is_none() {
        builder.trust_anchor = {
            let builder = crate::types::builders::TrustAnchorDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn reset_notification_settings_output_correct_errors(
    mut builder: crate::operation::reset_notification_settings::builders::ResetNotificationSettingsOutputBuilder,
) -> crate::operation::reset_notification_settings::builders::ResetNotificationSettingsOutputBuilder {
    if builder.trust_anchor.is_none() {
        builder.trust_anchor = {
            let builder = crate::types::builders::TrustAnchorDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn update_crl_output_correct_errors(
    mut builder: crate::operation::update_crl::builders::UpdateCrlOutputBuilder,
) -> crate::operation::update_crl::builders::UpdateCrlOutputBuilder {
    if builder.crl.is_none() {
        builder.crl = {
            let builder = crate::types::builders::CrlDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn update_trust_anchor_output_correct_errors(
    mut builder: crate::operation::update_trust_anchor::builders::UpdateTrustAnchorOutputBuilder,
) -> crate::operation::update_trust_anchor::builders::UpdateTrustAnchorOutputBuilder {
    if builder.trust_anchor.is_none() {
        builder.trust_anchor = {
            let builder = crate::types::builders::TrustAnchorDetailBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}

pub(crate) fn notification_setting_detail_correct_errors(
    mut builder: crate::types::builders::NotificationSettingDetailBuilder,
) -> crate::types::builders::NotificationSettingDetailBuilder {
    if builder.enabled.is_none() {
        builder.enabled = Some(Default::default())
    }
    if builder.event.is_none() {
        builder.event = "no value was set".parse::<crate::types::NotificationEvent>().ok()
    }
    builder
}
