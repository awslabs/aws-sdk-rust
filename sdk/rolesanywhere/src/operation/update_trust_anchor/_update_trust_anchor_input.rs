// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateTrustAnchorInput {
    /// <p>The unique identifier of the trust anchor.</p>
    pub trust_anchor_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the trust anchor.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The trust anchor type and its related certificate data.</p>
    pub source: ::std::option::Option<crate::types::Source>,
}
impl UpdateTrustAnchorInput {
    /// <p>The unique identifier of the trust anchor.</p>
    pub fn trust_anchor_id(&self) -> ::std::option::Option<&str> {
        self.trust_anchor_id.as_deref()
    }
    /// <p>The name of the trust anchor.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The trust anchor type and its related certificate data.</p>
    pub fn source(&self) -> ::std::option::Option<&crate::types::Source> {
        self.source.as_ref()
    }
}
impl UpdateTrustAnchorInput {
    /// Creates a new builder-style object to manufacture [`UpdateTrustAnchorInput`](crate::operation::update_trust_anchor::UpdateTrustAnchorInput).
    pub fn builder() -> crate::operation::update_trust_anchor::builders::UpdateTrustAnchorInputBuilder {
        crate::operation::update_trust_anchor::builders::UpdateTrustAnchorInputBuilder::default()
    }
}

/// A builder for [`UpdateTrustAnchorInput`](crate::operation::update_trust_anchor::UpdateTrustAnchorInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateTrustAnchorInputBuilder {
    pub(crate) trust_anchor_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) source: ::std::option::Option<crate::types::Source>,
}
impl UpdateTrustAnchorInputBuilder {
    /// <p>The unique identifier of the trust anchor.</p>
    /// This field is required.
    pub fn trust_anchor_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.trust_anchor_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the trust anchor.</p>
    pub fn set_trust_anchor_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.trust_anchor_id = input;
        self
    }
    /// <p>The unique identifier of the trust anchor.</p>
    pub fn get_trust_anchor_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.trust_anchor_id
    }
    /// <p>The name of the trust anchor.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the trust anchor.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the trust anchor.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The trust anchor type and its related certificate data.</p>
    pub fn source(mut self, input: crate::types::Source) -> Self {
        self.source = ::std::option::Option::Some(input);
        self
    }
    /// <p>The trust anchor type and its related certificate data.</p>
    pub fn set_source(mut self, input: ::std::option::Option<crate::types::Source>) -> Self {
        self.source = input;
        self
    }
    /// <p>The trust anchor type and its related certificate data.</p>
    pub fn get_source(&self) -> &::std::option::Option<crate::types::Source> {
        &self.source
    }
    /// Consumes the builder and constructs a [`UpdateTrustAnchorInput`](crate::operation::update_trust_anchor::UpdateTrustAnchorInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_trust_anchor::UpdateTrustAnchorInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_trust_anchor::UpdateTrustAnchorInput {
            trust_anchor_id: self.trust_anchor_id,
            name: self.name,
            source: self.source,
        })
    }
}
