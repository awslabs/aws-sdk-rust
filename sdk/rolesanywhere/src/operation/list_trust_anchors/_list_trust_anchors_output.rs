// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListTrustAnchorsOutput {
    /// <p>A token that indicates where the output should continue from, if a previous operation did not show all results. To get the next results, call the operation again with this value.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>A list of trust anchors.</p>
    #[doc(hidden)]
    pub trust_anchors: std::option::Option<std::vec::Vec<crate::types::TrustAnchorDetail>>,
    _request_id: Option<String>,
}
impl ListTrustAnchorsOutput {
    /// <p>A token that indicates where the output should continue from, if a previous operation did not show all results. To get the next results, call the operation again with this value.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>A list of trust anchors.</p>
    pub fn trust_anchors(&self) -> std::option::Option<&[crate::types::TrustAnchorDetail]> {
        self.trust_anchors.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListTrustAnchorsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListTrustAnchorsOutput {
    /// Creates a new builder-style object to manufacture [`ListTrustAnchorsOutput`](crate::operation::list_trust_anchors::ListTrustAnchorsOutput).
    pub fn builder() -> crate::operation::list_trust_anchors::builders::ListTrustAnchorsOutputBuilder
    {
        crate::operation::list_trust_anchors::builders::ListTrustAnchorsOutputBuilder::default()
    }
}

/// A builder for [`ListTrustAnchorsOutput`](crate::operation::list_trust_anchors::ListTrustAnchorsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListTrustAnchorsOutputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) trust_anchors: std::option::Option<std::vec::Vec<crate::types::TrustAnchorDetail>>,
    _request_id: Option<String>,
}
impl ListTrustAnchorsOutputBuilder {
    /// <p>A token that indicates where the output should continue from, if a previous operation did not show all results. To get the next results, call the operation again with this value.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A token that indicates where the output should continue from, if a previous operation did not show all results. To get the next results, call the operation again with this value.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Appends an item to `trust_anchors`.
    ///
    /// To override the contents of this collection use [`set_trust_anchors`](Self::set_trust_anchors).
    ///
    /// <p>A list of trust anchors.</p>
    pub fn trust_anchors(mut self, input: crate::types::TrustAnchorDetail) -> Self {
        let mut v = self.trust_anchors.unwrap_or_default();
        v.push(input);
        self.trust_anchors = Some(v);
        self
    }
    /// <p>A list of trust anchors.</p>
    pub fn set_trust_anchors(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TrustAnchorDetail>>,
    ) -> Self {
        self.trust_anchors = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListTrustAnchorsOutput`](crate::operation::list_trust_anchors::ListTrustAnchorsOutput).
    pub fn build(self) -> crate::operation::list_trust_anchors::ListTrustAnchorsOutput {
        crate::operation::list_trust_anchors::ListTrustAnchorsOutput {
            next_token: self.next_token,
            trust_anchors: self.trust_anchors,
            _request_id: self._request_id,
        }
    }
}
