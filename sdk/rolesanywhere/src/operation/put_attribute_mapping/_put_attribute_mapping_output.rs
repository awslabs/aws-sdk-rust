// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutAttributeMappingOutput {
    /// <p>The state of the profile after a read or write operation.</p>
    pub profile: ::std::option::Option<crate::types::ProfileDetail>,
    _request_id: Option<String>,
}
impl PutAttributeMappingOutput {
    /// <p>The state of the profile after a read or write operation.</p>
    pub fn profile(&self) -> ::std::option::Option<&crate::types::ProfileDetail> {
        self.profile.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for PutAttributeMappingOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PutAttributeMappingOutput {
    /// Creates a new builder-style object to manufacture [`PutAttributeMappingOutput`](crate::operation::put_attribute_mapping::PutAttributeMappingOutput).
    pub fn builder() -> crate::operation::put_attribute_mapping::builders::PutAttributeMappingOutputBuilder {
        crate::operation::put_attribute_mapping::builders::PutAttributeMappingOutputBuilder::default()
    }
}

/// A builder for [`PutAttributeMappingOutput`](crate::operation::put_attribute_mapping::PutAttributeMappingOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutAttributeMappingOutputBuilder {
    pub(crate) profile: ::std::option::Option<crate::types::ProfileDetail>,
    _request_id: Option<String>,
}
impl PutAttributeMappingOutputBuilder {
    /// <p>The state of the profile after a read or write operation.</p>
    /// This field is required.
    pub fn profile(mut self, input: crate::types::ProfileDetail) -> Self {
        self.profile = ::std::option::Option::Some(input);
        self
    }
    /// <p>The state of the profile after a read or write operation.</p>
    pub fn set_profile(mut self, input: ::std::option::Option<crate::types::ProfileDetail>) -> Self {
        self.profile = input;
        self
    }
    /// <p>The state of the profile after a read or write operation.</p>
    pub fn get_profile(&self) -> &::std::option::Option<crate::types::ProfileDetail> {
        &self.profile
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PutAttributeMappingOutput`](crate::operation::put_attribute_mapping::PutAttributeMappingOutput).
    pub fn build(self) -> crate::operation::put_attribute_mapping::PutAttributeMappingOutput {
        crate::operation::put_attribute_mapping::PutAttributeMappingOutput {
            profile: self.profile,
            _request_id: self._request_id,
        }
    }
}
