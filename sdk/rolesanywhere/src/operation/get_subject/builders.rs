// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::get_subject::_get_subject_output::GetSubjectOutputBuilder;

pub use crate::operation::get_subject::_get_subject_input::GetSubjectInputBuilder;

/// Fluent builder constructing a request to `GetSubject`.
///
/// <p>Gets a Subject. A Subject associates a certificate identity with authentication attempts by CreateSession. The Subject resources stores audit information such as status of the last authentication attempt, the certificate data used in the attempt, and the last time the associated identity attempted authentication. </p>
/// <p> <b>Required permissions: </b> <code>rolesanywhere:GetSubject</code>. </p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct GetSubjectFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::get_subject::builders::GetSubjectInputBuilder,
}
impl GetSubjectFluentBuilder {
    /// Creates a new `GetSubject`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::get_subject::GetSubject,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<crate::operation::get_subject::GetSubjectError>,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::get_subject::GetSubjectOutput,
        aws_smithy_http::result::SdkError<crate::operation::get_subject::GetSubjectError>,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The unique identifier of the subject. </p>
    pub fn subject_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.subject_id(input.into());
        self
    }
    /// <p>The unique identifier of the subject. </p>
    pub fn set_subject_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_subject_id(input);
        self
    }
}
