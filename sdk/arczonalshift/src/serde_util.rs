// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn conflict_exception_correct_errors(
    mut builder: crate::types::error::builders::ConflictExceptionBuilder,
) -> crate::types::error::builders::ConflictExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    if builder.reason.is_none() {
        builder.reason = "no value was set".parse::<crate::types::ConflictExceptionReason>().ok()
    }
    builder
}

pub(crate) fn resource_not_found_exception_correct_errors(
    mut builder: crate::types::error::builders::ResourceNotFoundExceptionBuilder,
) -> crate::types::error::builders::ResourceNotFoundExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn validation_exception_correct_errors(
    mut builder: crate::types::error::builders::ValidationExceptionBuilder,
) -> crate::types::error::builders::ValidationExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    if builder.reason.is_none() {
        builder.reason = "no value was set".parse::<crate::types::ValidationExceptionReason>().ok()
    }
    builder
}

pub(crate) fn cancel_zonal_shift_output_correct_errors(
    mut builder: crate::operation::cancel_zonal_shift::builders::CancelZonalShiftOutputBuilder,
) -> crate::operation::cancel_zonal_shift::builders::CancelZonalShiftOutputBuilder {
    if builder.zonal_shift_id.is_none() {
        builder.zonal_shift_id = Some(Default::default())
    }
    if builder.resource_identifier.is_none() {
        builder.resource_identifier = Some(Default::default())
    }
    if builder.away_from.is_none() {
        builder.away_from = Some(Default::default())
    }
    if builder.expiry_time.is_none() {
        builder.expiry_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.start_time.is_none() {
        builder.start_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.status.is_none() {
        builder.status = "no value was set".parse::<crate::types::ZonalShiftStatus>().ok()
    }
    if builder.comment.is_none() {
        builder.comment = Some(Default::default())
    }
    builder
}

pub(crate) fn get_managed_resource_output_correct_errors(
    mut builder: crate::operation::get_managed_resource::builders::GetManagedResourceOutputBuilder,
) -> crate::operation::get_managed_resource::builders::GetManagedResourceOutputBuilder {
    if builder.applied_weights.is_none() {
        builder.applied_weights = Some(Default::default())
    }
    if builder.zonal_shifts.is_none() {
        builder.zonal_shifts = Some(Default::default())
    }
    builder
}

pub(crate) fn list_managed_resources_output_correct_errors(
    mut builder: crate::operation::list_managed_resources::builders::ListManagedResourcesOutputBuilder,
) -> crate::operation::list_managed_resources::builders::ListManagedResourcesOutputBuilder {
    if builder.items.is_none() {
        builder.items = Some(Default::default())
    }
    builder
}

pub(crate) fn start_zonal_shift_output_correct_errors(
    mut builder: crate::operation::start_zonal_shift::builders::StartZonalShiftOutputBuilder,
) -> crate::operation::start_zonal_shift::builders::StartZonalShiftOutputBuilder {
    if builder.zonal_shift_id.is_none() {
        builder.zonal_shift_id = Some(Default::default())
    }
    if builder.resource_identifier.is_none() {
        builder.resource_identifier = Some(Default::default())
    }
    if builder.away_from.is_none() {
        builder.away_from = Some(Default::default())
    }
    if builder.expiry_time.is_none() {
        builder.expiry_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.start_time.is_none() {
        builder.start_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.status.is_none() {
        builder.status = "no value was set".parse::<crate::types::ZonalShiftStatus>().ok()
    }
    if builder.comment.is_none() {
        builder.comment = Some(Default::default())
    }
    builder
}

pub(crate) fn update_zonal_shift_output_correct_errors(
    mut builder: crate::operation::update_zonal_shift::builders::UpdateZonalShiftOutputBuilder,
) -> crate::operation::update_zonal_shift::builders::UpdateZonalShiftOutputBuilder {
    if builder.zonal_shift_id.is_none() {
        builder.zonal_shift_id = Some(Default::default())
    }
    if builder.resource_identifier.is_none() {
        builder.resource_identifier = Some(Default::default())
    }
    if builder.away_from.is_none() {
        builder.away_from = Some(Default::default())
    }
    if builder.expiry_time.is_none() {
        builder.expiry_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.start_time.is_none() {
        builder.start_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.status.is_none() {
        builder.status = "no value was set".parse::<crate::types::ZonalShiftStatus>().ok()
    }
    if builder.comment.is_none() {
        builder.comment = Some(Default::default())
    }
    builder
}

pub(crate) fn managed_resource_summary_correct_errors(
    mut builder: crate::types::builders::ManagedResourceSummaryBuilder,
) -> crate::types::builders::ManagedResourceSummaryBuilder {
    if builder.availability_zones.is_none() {
        builder.availability_zones = Some(Default::default())
    }
    builder
}

pub(crate) fn zonal_shift_in_resource_correct_errors(
    mut builder: crate::types::builders::ZonalShiftInResourceBuilder,
) -> crate::types::builders::ZonalShiftInResourceBuilder {
    if builder.applied_status.is_none() {
        builder.applied_status = "no value was set".parse::<crate::types::AppliedStatus>().ok()
    }
    if builder.zonal_shift_id.is_none() {
        builder.zonal_shift_id = Some(Default::default())
    }
    if builder.resource_identifier.is_none() {
        builder.resource_identifier = Some(Default::default())
    }
    if builder.away_from.is_none() {
        builder.away_from = Some(Default::default())
    }
    if builder.expiry_time.is_none() {
        builder.expiry_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.start_time.is_none() {
        builder.start_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.comment.is_none() {
        builder.comment = Some(Default::default())
    }
    builder
}

pub(crate) fn zonal_shift_summary_correct_errors(
    mut builder: crate::types::builders::ZonalShiftSummaryBuilder,
) -> crate::types::builders::ZonalShiftSummaryBuilder {
    if builder.zonal_shift_id.is_none() {
        builder.zonal_shift_id = Some(Default::default())
    }
    if builder.resource_identifier.is_none() {
        builder.resource_identifier = Some(Default::default())
    }
    if builder.away_from.is_none() {
        builder.away_from = Some(Default::default())
    }
    if builder.expiry_time.is_none() {
        builder.expiry_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.start_time.is_none() {
        builder.start_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.status.is_none() {
        builder.status = "no value was set".parse::<crate::types::ZonalShiftStatus>().ok()
    }
    if builder.comment.is_none() {
        builder.comment = Some(Default::default())
    }
    builder
}
