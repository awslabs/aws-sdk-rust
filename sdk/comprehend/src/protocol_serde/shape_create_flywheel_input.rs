// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_flywheel_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_flywheel::CreateFlywheelInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.flywheel_name {
        object.key("FlywheelName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.active_model_arn {
        object.key("ActiveModelArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.data_access_role_arn {
        object.key("DataAccessRoleArn").string(var_3.as_str());
    }
    if let Some(var_4) = &input.task_config {
        #[allow(unused_mut)]
        let mut object_5 = object.key("TaskConfig").start_object();
        crate::protocol_serde::shape_task_config::ser_task_config(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.model_type {
        object.key("ModelType").string(var_6.as_str());
    }
    if let Some(var_7) = &input.data_lake_s3_uri {
        object.key("DataLakeS3Uri").string(var_7.as_str());
    }
    if let Some(var_8) = &input.data_security_config {
        #[allow(unused_mut)]
        let mut object_9 = object.key("DataSecurityConfig").start_object();
        crate::protocol_serde::shape_data_security_config::ser_data_security_config(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_10.as_str());
    }
    if let Some(var_11) = &input.tags {
        let mut array_12 = object.key("Tags").start_array();
        for item_13 in var_11 {
            {
                #[allow(unused_mut)]
                let mut object_14 = array_12.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_14, item_13)?;
                object_14.finish();
            }
        }
        array_12.finish();
    }
    Ok(())
}
