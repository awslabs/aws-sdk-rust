// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_dataset_input_data_config(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DatasetInputDataConfig,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.augmented_manifests {
        let mut array_2 = object.key("AugmentedManifests").start_array();
        for item_3 in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_4 = array_2.value().start_object();
                crate::protocol_serde::shape_dataset_augmented_manifests_list_item::ser_dataset_augmented_manifests_list_item(&mut object_4, item_3)?;
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.data_format {
        object.key("DataFormat").string(var_5.as_str());
    }
    if let Some(var_6) = &input.document_classifier_input_data_config {
        #[allow(unused_mut)]
        let mut object_7 = object.key("DocumentClassifierInputDataConfig").start_object();
        crate::protocol_serde::shape_dataset_document_classifier_input_data_config::ser_dataset_document_classifier_input_data_config(
            &mut object_7,
            var_6,
        )?;
        object_7.finish();
    }
    if let Some(var_8) = &input.entity_recognizer_input_data_config {
        #[allow(unused_mut)]
        let mut object_9 = object.key("EntityRecognizerInputDataConfig").start_object();
        crate::protocol_serde::shape_dataset_entity_recognizer_input_data_config::ser_dataset_entity_recognizer_input_data_config(
            &mut object_9,
            var_8,
        )?;
        object_9.finish();
    }
    Ok(())
}
