// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the document, discovered during text extraction.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DocumentMetadata {
    /// <p>Number of pages in the document.</p>
    pub pages: ::std::option::Option<i32>,
    /// <p>List of pages in the document, with the number of characters extracted from each page.</p>
    pub extracted_characters: ::std::option::Option<::std::vec::Vec<crate::types::ExtractedCharactersListItem>>,
}
impl DocumentMetadata {
    /// <p>Number of pages in the document.</p>
    pub fn pages(&self) -> ::std::option::Option<i32> {
        self.pages
    }
    /// <p>List of pages in the document, with the number of characters extracted from each page.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.extracted_characters.is_none()`.
    pub fn extracted_characters(&self) -> &[crate::types::ExtractedCharactersListItem] {
        self.extracted_characters.as_deref().unwrap_or_default()
    }
}
impl DocumentMetadata {
    /// Creates a new builder-style object to manufacture [`DocumentMetadata`](crate::types::DocumentMetadata).
    pub fn builder() -> crate::types::builders::DocumentMetadataBuilder {
        crate::types::builders::DocumentMetadataBuilder::default()
    }
}

/// A builder for [`DocumentMetadata`](crate::types::DocumentMetadata).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DocumentMetadataBuilder {
    pub(crate) pages: ::std::option::Option<i32>,
    pub(crate) extracted_characters: ::std::option::Option<::std::vec::Vec<crate::types::ExtractedCharactersListItem>>,
}
impl DocumentMetadataBuilder {
    /// <p>Number of pages in the document.</p>
    pub fn pages(mut self, input: i32) -> Self {
        self.pages = ::std::option::Option::Some(input);
        self
    }
    /// <p>Number of pages in the document.</p>
    pub fn set_pages(mut self, input: ::std::option::Option<i32>) -> Self {
        self.pages = input;
        self
    }
    /// <p>Number of pages in the document.</p>
    pub fn get_pages(&self) -> &::std::option::Option<i32> {
        &self.pages
    }
    /// Appends an item to `extracted_characters`.
    ///
    /// To override the contents of this collection use [`set_extracted_characters`](Self::set_extracted_characters).
    ///
    /// <p>List of pages in the document, with the number of characters extracted from each page.</p>
    pub fn extracted_characters(mut self, input: crate::types::ExtractedCharactersListItem) -> Self {
        let mut v = self.extracted_characters.unwrap_or_default();
        v.push(input);
        self.extracted_characters = ::std::option::Option::Some(v);
        self
    }
    /// <p>List of pages in the document, with the number of characters extracted from each page.</p>
    pub fn set_extracted_characters(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ExtractedCharactersListItem>>) -> Self {
        self.extracted_characters = input;
        self
    }
    /// <p>List of pages in the document, with the number of characters extracted from each page.</p>
    pub fn get_extracted_characters(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ExtractedCharactersListItem>> {
        &self.extracted_characters
    }
    /// Consumes the builder and constructs a [`DocumentMetadata`](crate::types::DocumentMetadata).
    pub fn build(self) -> crate::types::DocumentMetadata {
        crate::types::DocumentMetadata {
            pages: self.pages,
            extracted_characters: self.extracted_characters,
        }
    }
}
