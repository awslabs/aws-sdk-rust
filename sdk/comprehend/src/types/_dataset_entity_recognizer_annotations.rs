// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the annotations associated with a entity recognizer.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DatasetEntityRecognizerAnnotations {
    /// <p> Specifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same Region as the API endpoint that you are calling.</p>
    pub s3_uri: ::std::string::String,
}
impl DatasetEntityRecognizerAnnotations {
    /// <p> Specifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same Region as the API endpoint that you are calling.</p>
    pub fn s3_uri(&self) -> &str {
        use std::ops::Deref;
        self.s3_uri.deref()
    }
}
impl DatasetEntityRecognizerAnnotations {
    /// Creates a new builder-style object to manufacture [`DatasetEntityRecognizerAnnotations`](crate::types::DatasetEntityRecognizerAnnotations).
    pub fn builder() -> crate::types::builders::DatasetEntityRecognizerAnnotationsBuilder {
        crate::types::builders::DatasetEntityRecognizerAnnotationsBuilder::default()
    }
}

/// A builder for [`DatasetEntityRecognizerAnnotations`](crate::types::DatasetEntityRecognizerAnnotations).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DatasetEntityRecognizerAnnotationsBuilder {
    pub(crate) s3_uri: ::std::option::Option<::std::string::String>,
}
impl DatasetEntityRecognizerAnnotationsBuilder {
    /// <p> Specifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same Region as the API endpoint that you are calling.</p>
    /// This field is required.
    pub fn s3_uri(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_uri = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Specifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same Region as the API endpoint that you are calling.</p>
    pub fn set_s3_uri(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_uri = input;
        self
    }
    /// <p> Specifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same Region as the API endpoint that you are calling.</p>
    pub fn get_s3_uri(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_uri
    }
    /// Consumes the builder and constructs a [`DatasetEntityRecognizerAnnotations`](crate::types::DatasetEntityRecognizerAnnotations).
    /// This method will fail if any of the following fields are not set:
    /// - [`s3_uri`](crate::types::builders::DatasetEntityRecognizerAnnotationsBuilder::s3_uri)
    pub fn build(self) -> ::std::result::Result<crate::types::DatasetEntityRecognizerAnnotations, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DatasetEntityRecognizerAnnotations {
            s3_uri: self.s3_uri.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "s3_uri",
                    "s3_uri was not specified but it is required when building DatasetEntityRecognizerAnnotations",
                )
            })?,
        })
    }
}
