// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DetectTargetedSentiment`](crate::client::fluent_builders::DetectTargetedSentiment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`text(impl Into<String>)`](crate::client::fluent_builders::DetectTargetedSentiment::text) / [`set_text(Option<String>)`](crate::client::fluent_builders::DetectTargetedSentiment::set_text): <p>A UTF-8 text string. The maximum string length is 5 KB.</p>
    ///   - [`language_code(LanguageCode)`](crate::client::fluent_builders::DetectTargetedSentiment::language_code) / [`set_language_code(Option<LanguageCode>)`](crate::client::fluent_builders::DetectTargetedSentiment::set_language_code): <p>The language of the input documents. Currently, English is the only supported language.</p>
    /// - On success, responds with [`DetectTargetedSentimentOutput`](crate::output::DetectTargetedSentimentOutput) with field(s):
    ///   - [`entities(Option<Vec<TargetedSentimentEntity>>)`](crate::output::DetectTargetedSentimentOutput::entities): <p>Targeted sentiment analysis for each of the entities identified in the input text.</p>
    /// - On failure, responds with [`SdkError<DetectTargetedSentimentError>`](crate::error::DetectTargetedSentimentError)
    pub fn detect_targeted_sentiment(
        &self,
    ) -> crate::client::fluent_builders::DetectTargetedSentiment {
        crate::client::fluent_builders::DetectTargetedSentiment::new(self.handle.clone())
    }
}
