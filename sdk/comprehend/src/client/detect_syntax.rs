// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DetectSyntax`](crate::operation::detect_syntax::builders::DetectSyntaxFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`text(impl Into<String>)`](crate::operation::detect_syntax::builders::DetectSyntaxFluentBuilder::text) / [`set_text(Option<String>)`](crate::operation::detect_syntax::builders::DetectSyntaxFluentBuilder::set_text):<br>required: **true**<br><p>A UTF-8 string. The maximum string size is 5 KB.</p><br>
    ///   - [`language_code(SyntaxLanguageCode)`](crate::operation::detect_syntax::builders::DetectSyntaxFluentBuilder::language_code) / [`set_language_code(Option<SyntaxLanguageCode>)`](crate::operation::detect_syntax::builders::DetectSyntaxFluentBuilder::set_language_code):<br>required: **true**<br><p>The language code of the input documents. You can specify any of the following languages supported by Amazon Comprehend: German ("de"), English ("en"), Spanish ("es"), French ("fr"), Italian ("it"), or Portuguese ("pt").</p><br>
    /// - On success, responds with [`DetectSyntaxOutput`](crate::operation::detect_syntax::DetectSyntaxOutput) with field(s):
    ///   - [`syntax_tokens(Option<Vec::<SyntaxToken>>)`](crate::operation::detect_syntax::DetectSyntaxOutput::syntax_tokens): <p>A collection of syntax tokens describing the text. For each token, the response provides the text, the token type, where the text begins and ends, and the level of confidence that Amazon Comprehend has that the token is correct. For a list of token types, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/how-syntax.html">Syntax</a> in the Comprehend Developer Guide. </p>
    /// - On failure, responds with [`SdkError<DetectSyntaxError>`](crate::operation::detect_syntax::DetectSyntaxError)
    pub fn detect_syntax(&self) -> crate::operation::detect_syntax::builders::DetectSyntaxFluentBuilder {
        crate::operation::detect_syntax::builders::DetectSyntaxFluentBuilder::new(self.handle.clone())
    }
}
