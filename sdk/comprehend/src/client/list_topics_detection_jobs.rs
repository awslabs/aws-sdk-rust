// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTopicsDetectionJobs`](crate::client::fluent_builders::ListTopicsDetectionJobs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTopicsDetectionJobs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(TopicsDetectionJobFilter)`](crate::client::fluent_builders::ListTopicsDetectionJobs::filter) / [`set_filter(Option<TopicsDetectionJobFilter>)`](crate::client::fluent_builders::ListTopicsDetectionJobs::set_filter): <p>Filters the jobs that are returned. Jobs can be filtered on their name, status, or the date and time that they were submitted. You can set only one filter at a time.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTopicsDetectionJobs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTopicsDetectionJobs::set_next_token): <p>Identifies the next page of results to return.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTopicsDetectionJobs::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTopicsDetectionJobs::set_max_results): <p>The maximum number of results to return in each page. The default is 100.</p>
    /// - On success, responds with [`ListTopicsDetectionJobsOutput`](crate::output::ListTopicsDetectionJobsOutput) with field(s):
    ///   - [`topics_detection_job_properties_list(Option<Vec<TopicsDetectionJobProperties>>)`](crate::output::ListTopicsDetectionJobsOutput::topics_detection_job_properties_list): <p>A list containing the properties of each job that is returned.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTopicsDetectionJobsOutput::next_token): <p>Identifies the next page of results to return.</p>
    /// - On failure, responds with [`SdkError<ListTopicsDetectionJobsError>`](crate::error::ListTopicsDetectionJobsError)
    pub fn list_topics_detection_jobs(
        &self,
    ) -> crate::client::fluent_builders::ListTopicsDetectionJobs {
        crate::client::fluent_builders::ListTopicsDetectionJobs::new(self.handle.clone())
    }
}
