// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchDetectKeyPhrases`](crate::client::fluent_builders::BatchDetectKeyPhrases) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`text_list(Vec<String>)`](crate::client::fluent_builders::BatchDetectKeyPhrases::text_list) / [`set_text_list(Option<Vec<String>>)`](crate::client::fluent_builders::BatchDetectKeyPhrases::set_text_list): <p>A list containing the UTF-8 encoded text of the input documents. The list can contain a maximum of 25 documents. The maximum size of each document is 5 KB.</p>
    ///   - [`language_code(LanguageCode)`](crate::client::fluent_builders::BatchDetectKeyPhrases::language_code) / [`set_language_code(Option<LanguageCode>)`](crate::client::fluent_builders::BatchDetectKeyPhrases::set_language_code): <p>The language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.</p>
    /// - On success, responds with [`BatchDetectKeyPhrasesOutput`](crate::output::BatchDetectKeyPhrasesOutput) with field(s):
    ///   - [`result_list(Option<Vec<BatchDetectKeyPhrasesItemResult>>)`](crate::output::BatchDetectKeyPhrasesOutput::result_list): <p>A list of objects containing the results of the operation. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If all of the documents contain an error, the <code>ResultList</code> is empty.</p>
    ///   - [`error_list(Option<Vec<BatchItemError>>)`](crate::output::BatchDetectKeyPhrasesOutput::error_list): <p>A list containing one object for each document that contained an error. The results are sorted in ascending order by the <code>Index</code> field and match the order of the documents in the input list. If there are no errors in the batch, the <code>ErrorList</code> is empty.</p>
    /// - On failure, responds with [`SdkError<BatchDetectKeyPhrasesError>`](crate::error::BatchDetectKeyPhrasesError)
    pub fn batch_detect_key_phrases(
        &self,
    ) -> crate::client::fluent_builders::BatchDetectKeyPhrases {
        crate::client::fluent_builders::BatchDetectKeyPhrases::new(self.handle.clone())
    }
}
