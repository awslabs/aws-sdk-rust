// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_create_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateGroupInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_1) = &input.configuration {
        let mut array_2 = object.key("Configuration").start_array();
        for item_3 in var_1 {
            {
                let mut object_4 = array_2.value().start_object();
                crate::json_ser::serialize_structure_crate_model_group_configuration_item(
                    &mut object_4,
                    item_3,
                )?;
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.description {
        object.key("Description").string(var_5.as_str());
    }
    if let Some(var_6) = &input.name {
        object.key("Name").string(var_6.as_str());
    }
    if let Some(var_7) = &input.resource_query {
        let mut object_8 = object.key("ResourceQuery").start_object();
        crate::json_ser::serialize_structure_crate_model_resource_query(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.tags {
        let mut object_10 = object.key("Tags").start_object();
        for (key_11, value_12) in var_9 {
            {
                object_10.key(key_11).string(value_12.as_str());
            }
        }
        object_10.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_delete_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteGroupInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_13) = &input.group {
        object.key("Group").string(var_13.as_str());
    }
    if let Some(var_14) = &input.group_name {
        object.key("GroupName").string(var_14.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetGroupInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_15) = &input.group {
        object.key("Group").string(var_15.as_str());
    }
    if let Some(var_16) = &input.group_name {
        object.key("GroupName").string(var_16.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_group_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetGroupConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_17) = &input.group {
        object.key("Group").string(var_17.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_group_query_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetGroupQueryInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_18) = &input.group {
        object.key("Group").string(var_18.as_str());
    }
    if let Some(var_19) = &input.group_name {
        object.key("GroupName").string(var_19.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_group_resources_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GroupResourcesInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_20) = &input.group {
        object.key("Group").string(var_20.as_str());
    }
    if let Some(var_21) = &input.resource_arns {
        let mut array_22 = object.key("ResourceArns").start_array();
        for item_23 in var_21 {
            {
                array_22.value().string(item_23.as_str());
            }
        }
        array_22.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_group_resources_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListGroupResourcesInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_24) = &input.filters {
        let mut array_25 = object.key("Filters").start_array();
        for item_26 in var_24 {
            {
                let mut object_27 = array_25.value().start_object();
                crate::json_ser::serialize_structure_crate_model_resource_filter(
                    &mut object_27,
                    item_26,
                )?;
                object_27.finish();
            }
        }
        array_25.finish();
    }
    if let Some(var_28) = &input.group {
        object.key("Group").string(var_28.as_str());
    }
    if let Some(var_29) = &input.group_name {
        object.key("GroupName").string(var_29.as_str());
    }
    if let Some(var_30) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_30).into()),
        );
    }
    if let Some(var_31) = &input.next_token {
        object.key("NextToken").string(var_31.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_groups_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListGroupsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_32) = &input.filters {
        let mut array_33 = object.key("Filters").start_array();
        for item_34 in var_32 {
            {
                let mut object_35 = array_33.value().start_object();
                crate::json_ser::serialize_structure_crate_model_group_filter(
                    &mut object_35,
                    item_34,
                )?;
                object_35.finish();
            }
        }
        array_33.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_put_group_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutGroupConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_36) = &input.configuration {
        let mut array_37 = object.key("Configuration").start_array();
        for item_38 in var_36 {
            {
                let mut object_39 = array_37.value().start_object();
                crate::json_ser::serialize_structure_crate_model_group_configuration_item(
                    &mut object_39,
                    item_38,
                )?;
                object_39.finish();
            }
        }
        array_37.finish();
    }
    if let Some(var_40) = &input.group {
        object.key("Group").string(var_40.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_search_resources_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SearchResourcesInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_41) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_41).into()),
        );
    }
    if let Some(var_42) = &input.next_token {
        object.key("NextToken").string(var_42.as_str());
    }
    if let Some(var_43) = &input.resource_query {
        let mut object_44 = object.key("ResourceQuery").start_object();
        crate::json_ser::serialize_structure_crate_model_resource_query(&mut object_44, var_43)?;
        object_44.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_tag_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_45) = &input.tags {
        let mut object_46 = object.key("Tags").start_object();
        for (key_47, value_48) in var_45 {
            {
                object_46.key(key_47).string(value_48.as_str());
            }
        }
        object_46.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_ungroup_resources_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UngroupResourcesInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_49) = &input.group {
        object.key("Group").string(var_49.as_str());
    }
    if let Some(var_50) = &input.resource_arns {
        let mut array_51 = object.key("ResourceArns").start_array();
        for item_52 in var_50 {
            {
                array_51.value().string(item_52.as_str());
            }
        }
        array_51.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_untag_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_53) = &input.keys {
        let mut array_54 = object.key("Keys").start_array();
        for item_55 in var_53 {
            {
                array_54.value().string(item_55.as_str());
            }
        }
        array_54.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateGroupInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_56) = &input.description {
        object.key("Description").string(var_56.as_str());
    }
    if let Some(var_57) = &input.group {
        object.key("Group").string(var_57.as_str());
    }
    if let Some(var_58) = &input.group_name {
        object.key("GroupName").string(var_58.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_group_query_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateGroupQueryInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_59) = &input.group {
        object.key("Group").string(var_59.as_str());
    }
    if let Some(var_60) = &input.group_name {
        object.key("GroupName").string(var_60.as_str());
    }
    if let Some(var_61) = &input.resource_query {
        let mut object_62 = object.key("ResourceQuery").start_object();
        crate::json_ser::serialize_structure_crate_model_resource_query(&mut object_62, var_61)?;
        object_62.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_group_configuration_item(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::GroupConfigurationItem,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_63) = &input.r#type {
        object.key("Type").string(var_63.as_str());
    }
    if let Some(var_64) = &input.parameters {
        let mut array_65 = object.key("Parameters").start_array();
        for item_66 in var_64 {
            {
                let mut object_67 = array_65.value().start_object();
                crate::json_ser::serialize_structure_crate_model_group_configuration_parameter(
                    &mut object_67,
                    item_66,
                )?;
                object_67.finish();
            }
        }
        array_65.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_resource_query(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ResourceQuery,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_68) = &input.r#type {
        object.key("Type").string(var_68.as_str());
    }
    if let Some(var_69) = &input.query {
        object.key("Query").string(var_69.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_resource_filter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ResourceFilter,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_70) = &input.name {
        object.key("Name").string(var_70.as_str());
    }
    if let Some(var_71) = &input.values {
        let mut array_72 = object.key("Values").start_array();
        for item_73 in var_71 {
            {
                array_72.value().string(item_73.as_str());
            }
        }
        array_72.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_group_filter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::GroupFilter,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_74) = &input.name {
        object.key("Name").string(var_74.as_str());
    }
    if let Some(var_75) = &input.values {
        let mut array_76 = object.key("Values").start_array();
        for item_77 in var_75 {
            {
                array_76.value().string(item_77.as_str());
            }
        }
        array_76.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_group_configuration_parameter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::GroupConfigurationParameter,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_78) = &input.name {
        object.key("Name").string(var_78.as_str());
    }
    if let Some(var_79) = &input.values {
        let mut array_80 = object.key("Values").start_array();
        for item_81 in var_79 {
            {
                array_80.value().string(item_81.as_str());
            }
        }
        array_80.finish();
    }
    Ok(())
}
