// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UntagInput {
    /// <p>The ARN of the resource group from which to remove tags. The command removed both the specified keys and any values associated with those keys.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The keys of the tags to be removed.</p>
    #[doc(hidden)]
    pub keys: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UntagInput {
    /// <p>The ARN of the resource group from which to remove tags. The command removed both the specified keys and any values associated with those keys.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The keys of the tags to be removed.</p>
    pub fn keys(&self) -> std::option::Option<&[std::string::String]> {
        self.keys.as_deref()
    }
}
impl UntagInput {
    /// Creates a new builder-style object to manufacture [`UntagInput`](crate::operation::untag::UntagInput).
    pub fn builder() -> crate::operation::untag::builders::UntagInputBuilder {
        crate::operation::untag::builders::UntagInputBuilder::default()
    }
}

/// A builder for [`UntagInput`](crate::operation::untag::UntagInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UntagInputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) keys: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UntagInputBuilder {
    /// <p>The ARN of the resource group from which to remove tags. The command removed both the specified keys and any values associated with those keys.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The ARN of the resource group from which to remove tags. The command removed both the specified keys and any values associated with those keys.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// Appends an item to `keys`.
    ///
    /// To override the contents of this collection use [`set_keys`](Self::set_keys).
    ///
    /// <p>The keys of the tags to be removed.</p>
    pub fn keys(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.keys.unwrap_or_default();
        v.push(input.into());
        self.keys = Some(v);
        self
    }
    /// <p>The keys of the tags to be removed.</p>
    pub fn set_keys(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.keys = input;
        self
    }
    /// Consumes the builder and constructs a [`UntagInput`](crate::operation::untag::UntagInput).
    pub fn build(
        self,
    ) -> Result<crate::operation::untag::UntagInput, aws_smithy_http::operation::error::BuildError>
    {
        Ok(crate::operation::untag::UntagInput {
            arn: self.arn,
            keys: self.keys,
        })
    }
}
