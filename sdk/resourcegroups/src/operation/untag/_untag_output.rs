// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UntagOutput {
    /// <p>The ARN of the resource group from which tags have been removed.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The keys of the tags that were removed.</p>
    #[doc(hidden)]
    pub keys: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl UntagOutput {
    /// <p>The ARN of the resource group from which tags have been removed.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The keys of the tags that were removed.</p>
    pub fn keys(&self) -> std::option::Option<&[std::string::String]> {
        self.keys.as_deref()
    }
}
impl aws_http::request_id::RequestId for UntagOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UntagOutput {
    /// Creates a new builder-style object to manufacture [`UntagOutput`](crate::operation::untag::UntagOutput).
    pub fn builder() -> crate::operation::untag::builders::UntagOutputBuilder {
        crate::operation::untag::builders::UntagOutputBuilder::default()
    }
}

/// A builder for [`UntagOutput`](crate::operation::untag::UntagOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UntagOutputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) keys: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl UntagOutputBuilder {
    /// <p>The ARN of the resource group from which tags have been removed.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The ARN of the resource group from which tags have been removed.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// Appends an item to `keys`.
    ///
    /// To override the contents of this collection use [`set_keys`](Self::set_keys).
    ///
    /// <p>The keys of the tags that were removed.</p>
    pub fn keys(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.keys.unwrap_or_default();
        v.push(input.into());
        self.keys = Some(v);
        self
    }
    /// <p>The keys of the tags that were removed.</p>
    pub fn set_keys(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.keys = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UntagOutput`](crate::operation::untag::UntagOutput).
    pub fn build(self) -> crate::operation::untag::UntagOutput {
        crate::operation::untag::UntagOutput {
            arn: self.arn,
            keys: self.keys,
            _request_id: self._request_id,
        }
    }
}
