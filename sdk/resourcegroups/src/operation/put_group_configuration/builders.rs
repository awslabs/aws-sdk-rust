// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::put_group_configuration::_put_group_configuration_output::PutGroupConfigurationOutputBuilder;

pub use crate::operation::put_group_configuration::_put_group_configuration_input::PutGroupConfigurationInputBuilder;

/// Fluent builder constructing a request to `PutGroupConfiguration`.
///
/// <p>Attaches a service configuration to the specified group. This occurs asynchronously, and can take time to complete. You can use <code>GetGroupConfiguration</code> to check the status of the update.</p>
/// <p> <b>Minimum permissions</b> </p>
/// <p>To run this command, you must have the following permissions:</p>
/// <ul>
/// <li> <p> <code>resource-groups:PutGroupConfiguration</code> </p> </li>
/// </ul>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct PutGroupConfigurationFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::put_group_configuration::builders::PutGroupConfigurationInputBuilder,
}
impl PutGroupConfigurationFluentBuilder {
    /// Creates a new `PutGroupConfiguration`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::put_group_configuration::PutGroupConfiguration,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::put_group_configuration::PutGroupConfigurationError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::put_group_configuration::PutGroupConfigurationOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::put_group_configuration::PutGroupConfigurationError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The name or ARN of the resource group with the configuration that you want to update.</p>
    pub fn group(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.group(input.into());
        self
    }
    /// <p>The name or ARN of the resource group with the configuration that you want to update.</p>
    pub fn set_group(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_group(input);
        self
    }
    /// Appends an item to `Configuration`.
    ///
    /// To override the contents of this collection use [`set_configuration`](Self::set_configuration).
    ///
    /// <p>The new configuration to associate with the specified group. A configuration associates the resource group with an Amazon Web Services service and specifies how the service can interact with the resources in the group. A configuration is an array of <code>GroupConfigurationItem</code> elements.</p>
    /// <p>For information about the syntax of a service configuration, see <a href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service configurations for Resource Groups</a>.</p> <note>
    /// <p>A resource group can contain either a <code>Configuration</code> or a <code>ResourceQuery</code>, but not both.</p>
    /// </note>
    pub fn configuration(mut self, input: crate::types::GroupConfigurationItem) -> Self {
        self.inner = self.inner.configuration(input);
        self
    }
    /// <p>The new configuration to associate with the specified group. A configuration associates the resource group with an Amazon Web Services service and specifies how the service can interact with the resources in the group. A configuration is an array of <code>GroupConfigurationItem</code> elements.</p>
    /// <p>For information about the syntax of a service configuration, see <a href="https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html">Service configurations for Resource Groups</a>.</p> <note>
    /// <p>A resource group can contain either a <code>Configuration</code> or a <code>ResourceQuery</code>, but not both.</p>
    /// </note>
    pub fn set_configuration(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::GroupConfigurationItem>>,
    ) -> Self {
        self.inner = self.inner.set_configuration(input);
        self
    }
}
