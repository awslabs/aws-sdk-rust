// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteGroupInput {
    /// <p>Deprecated - don't use this parameter. Use <code>Group</code> instead.</p>
    #[deprecated(note = "This field is deprecated, use Group instead.")]
    #[doc(hidden)]
    pub group_name: std::option::Option<std::string::String>,
    /// <p>The name or the ARN of the resource group to delete.</p>
    #[doc(hidden)]
    pub group: std::option::Option<std::string::String>,
}
impl DeleteGroupInput {
    /// <p>Deprecated - don't use this parameter. Use <code>Group</code> instead.</p>
    #[deprecated(note = "This field is deprecated, use Group instead.")]
    pub fn group_name(&self) -> std::option::Option<&str> {
        self.group_name.as_deref()
    }
    /// <p>The name or the ARN of the resource group to delete.</p>
    pub fn group(&self) -> std::option::Option<&str> {
        self.group.as_deref()
    }
}
impl DeleteGroupInput {
    /// Creates a new builder-style object to manufacture [`DeleteGroupInput`](crate::operation::delete_group::DeleteGroupInput).
    pub fn builder() -> crate::operation::delete_group::builders::DeleteGroupInputBuilder {
        crate::operation::delete_group::builders::DeleteGroupInputBuilder::default()
    }
}

/// A builder for [`DeleteGroupInput`](crate::operation::delete_group::DeleteGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteGroupInputBuilder {
    pub(crate) group_name: std::option::Option<std::string::String>,
    pub(crate) group: std::option::Option<std::string::String>,
}
impl DeleteGroupInputBuilder {
    /// <p>Deprecated - don't use this parameter. Use <code>Group</code> instead.</p>
    #[deprecated(note = "This field is deprecated, use Group instead.")]
    pub fn group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.group_name = Some(input.into());
        self
    }
    /// <p>Deprecated - don't use this parameter. Use <code>Group</code> instead.</p>
    #[deprecated(note = "This field is deprecated, use Group instead.")]
    pub fn set_group_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.group_name = input;
        self
    }
    /// <p>The name or the ARN of the resource group to delete.</p>
    pub fn group(mut self, input: impl Into<std::string::String>) -> Self {
        self.group = Some(input.into());
        self
    }
    /// <p>The name or the ARN of the resource group to delete.</p>
    pub fn set_group(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.group = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteGroupInput`](crate::operation::delete_group::DeleteGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_group::DeleteGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_group::DeleteGroupInput {
            group_name: self.group_name,
            group: self.group,
        })
    }
}
