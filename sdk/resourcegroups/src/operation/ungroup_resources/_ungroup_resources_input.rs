// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UngroupResourcesInput {
    /// <p>The name or the ARN of the resource group from which to remove the resources.</p>
    #[doc(hidden)]
    pub group: std::option::Option<std::string::String>,
    /// <p>The ARNs of the resources to be removed from the group.</p>
    #[doc(hidden)]
    pub resource_arns: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UngroupResourcesInput {
    /// <p>The name or the ARN of the resource group from which to remove the resources.</p>
    pub fn group(&self) -> std::option::Option<&str> {
        self.group.as_deref()
    }
    /// <p>The ARNs of the resources to be removed from the group.</p>
    pub fn resource_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.resource_arns.as_deref()
    }
}
impl UngroupResourcesInput {
    /// Creates a new builder-style object to manufacture [`UngroupResourcesInput`](crate::operation::ungroup_resources::UngroupResourcesInput).
    pub fn builder() -> crate::operation::ungroup_resources::builders::UngroupResourcesInputBuilder
    {
        crate::operation::ungroup_resources::builders::UngroupResourcesInputBuilder::default()
    }
}

/// A builder for [`UngroupResourcesInput`](crate::operation::ungroup_resources::UngroupResourcesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UngroupResourcesInputBuilder {
    pub(crate) group: std::option::Option<std::string::String>,
    pub(crate) resource_arns: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UngroupResourcesInputBuilder {
    /// <p>The name or the ARN of the resource group from which to remove the resources.</p>
    pub fn group(mut self, input: impl Into<std::string::String>) -> Self {
        self.group = Some(input.into());
        self
    }
    /// <p>The name or the ARN of the resource group from which to remove the resources.</p>
    pub fn set_group(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.group = input;
        self
    }
    /// Appends an item to `resource_arns`.
    ///
    /// To override the contents of this collection use [`set_resource_arns`](Self::set_resource_arns).
    ///
    /// <p>The ARNs of the resources to be removed from the group.</p>
    pub fn resource_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.resource_arns.unwrap_or_default();
        v.push(input.into());
        self.resource_arns = Some(v);
        self
    }
    /// <p>The ARNs of the resources to be removed from the group.</p>
    pub fn set_resource_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.resource_arns = input;
        self
    }
    /// Consumes the builder and constructs a [`UngroupResourcesInput`](crate::operation::ungroup_resources::UngroupResourcesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::ungroup_resources::UngroupResourcesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::ungroup_resources::UngroupResourcesInput {
            group: self.group,
            resource_arns: self.resource_arns,
        })
    }
}
