// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn group_correct_errors(mut builder: crate::types::builders::GroupBuilder) -> crate::types::builders::GroupBuilder {
    if builder.group_arn.is_none() {
        builder.group_arn = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    builder
}

pub(crate) fn group_query_correct_errors(mut builder: crate::types::builders::GroupQueryBuilder) -> crate::types::builders::GroupQueryBuilder {
    if builder.group_name.is_none() {
        builder.group_name = Some(Default::default())
    }
    if builder.resource_query.is_none() {
        builder.resource_query = {
            let builder = crate::types::builders::ResourceQueryBuilder::default();
            crate::serde_util::resource_query_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn resource_query_correct_errors(
    mut builder: crate::types::builders::ResourceQueryBuilder,
) -> crate::types::builders::ResourceQueryBuilder {
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::QueryType>().ok()
    }
    if builder.query.is_none() {
        builder.query = Some(Default::default())
    }
    builder
}

pub(crate) fn group_configuration_item_correct_errors(
    mut builder: crate::types::builders::GroupConfigurationItemBuilder,
) -> crate::types::builders::GroupConfigurationItemBuilder {
    if builder.r#type.is_none() {
        builder.r#type = Some(Default::default())
    }
    builder
}

pub(crate) fn group_configuration_parameter_correct_errors(
    mut builder: crate::types::builders::GroupConfigurationParameterBuilder,
) -> crate::types::builders::GroupConfigurationParameterBuilder {
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    builder
}
