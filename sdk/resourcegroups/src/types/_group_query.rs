// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A mapping of a query attached to a resource group that determines the Amazon Web Services resources that are members of the group.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GroupQuery {
    /// <p>The name of the resource group that is associated with the specified resource query.</p>
    pub group_name: ::std::string::String,
    /// <p>The resource query that determines which Amazon Web Services resources are members of the associated resource group.</p>
    pub resource_query: ::std::option::Option<crate::types::ResourceQuery>,
}
impl GroupQuery {
    /// <p>The name of the resource group that is associated with the specified resource query.</p>
    pub fn group_name(&self) -> &str {
        use std::ops::Deref;
        self.group_name.deref()
    }
    /// <p>The resource query that determines which Amazon Web Services resources are members of the associated resource group.</p>
    pub fn resource_query(&self) -> ::std::option::Option<&crate::types::ResourceQuery> {
        self.resource_query.as_ref()
    }
}
impl GroupQuery {
    /// Creates a new builder-style object to manufacture [`GroupQuery`](crate::types::GroupQuery).
    pub fn builder() -> crate::types::builders::GroupQueryBuilder {
        crate::types::builders::GroupQueryBuilder::default()
    }
}

/// A builder for [`GroupQuery`](crate::types::GroupQuery).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GroupQueryBuilder {
    pub(crate) group_name: ::std::option::Option<::std::string::String>,
    pub(crate) resource_query: ::std::option::Option<crate::types::ResourceQuery>,
}
impl GroupQueryBuilder {
    /// <p>The name of the resource group that is associated with the specified resource query.</p>
    /// This field is required.
    pub fn group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the resource group that is associated with the specified resource query.</p>
    pub fn set_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.group_name = input;
        self
    }
    /// <p>The name of the resource group that is associated with the specified resource query.</p>
    pub fn get_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.group_name
    }
    /// <p>The resource query that determines which Amazon Web Services resources are members of the associated resource group.</p>
    /// This field is required.
    pub fn resource_query(mut self, input: crate::types::ResourceQuery) -> Self {
        self.resource_query = ::std::option::Option::Some(input);
        self
    }
    /// <p>The resource query that determines which Amazon Web Services resources are members of the associated resource group.</p>
    pub fn set_resource_query(mut self, input: ::std::option::Option<crate::types::ResourceQuery>) -> Self {
        self.resource_query = input;
        self
    }
    /// <p>The resource query that determines which Amazon Web Services resources are members of the associated resource group.</p>
    pub fn get_resource_query(&self) -> &::std::option::Option<crate::types::ResourceQuery> {
        &self.resource_query
    }
    /// Consumes the builder and constructs a [`GroupQuery`](crate::types::GroupQuery).
    /// This method will fail if any of the following fields are not set:
    /// - [`group_name`](crate::types::builders::GroupQueryBuilder::group_name)
    pub fn build(self) -> ::std::result::Result<crate::types::GroupQuery, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GroupQuery {
            group_name: self.group_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "group_name",
                    "group_name was not specified but it is required when building GroupQuery",
                )
            })?,
            resource_query: self.resource_query,
        })
    }
}
