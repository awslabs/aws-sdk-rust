// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A resource that failed to be added to or removed from a group.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FailedResource {
    /// <p>The ARN of the resource that failed to be added or removed.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
    /// <p>The error message text associated with the failure.</p>
    #[doc(hidden)]
    pub error_message: std::option::Option<std::string::String>,
    /// <p>The error code associated with the failure.</p>
    #[doc(hidden)]
    pub error_code: std::option::Option<std::string::String>,
}
impl FailedResource {
    /// <p>The ARN of the resource that failed to be added or removed.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>The error message text associated with the failure.</p>
    pub fn error_message(&self) -> std::option::Option<&str> {
        self.error_message.as_deref()
    }
    /// <p>The error code associated with the failure.</p>
    pub fn error_code(&self) -> std::option::Option<&str> {
        self.error_code.as_deref()
    }
}
impl FailedResource {
    /// Creates a new builder-style object to manufacture [`FailedResource`](crate::types::FailedResource).
    pub fn builder() -> crate::types::builders::FailedResourceBuilder {
        crate::types::builders::FailedResourceBuilder::default()
    }
}

/// A builder for [`FailedResource`](crate::types::FailedResource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FailedResourceBuilder {
    pub(crate) resource_arn: std::option::Option<std::string::String>,
    pub(crate) error_message: std::option::Option<std::string::String>,
    pub(crate) error_code: std::option::Option<std::string::String>,
}
impl FailedResourceBuilder {
    /// <p>The ARN of the resource that failed to be added or removed.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the resource that failed to be added or removed.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The error message text associated with the failure.</p>
    pub fn error_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.error_message = Some(input.into());
        self
    }
    /// <p>The error message text associated with the failure.</p>
    pub fn set_error_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>The error code associated with the failure.</p>
    pub fn error_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.error_code = Some(input.into());
        self
    }
    /// <p>The error code associated with the failure.</p>
    pub fn set_error_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error_code = input;
        self
    }
    /// Consumes the builder and constructs a [`FailedResource`](crate::types::FailedResource).
    pub fn build(self) -> crate::types::FailedResource {
        crate::types::FailedResource {
            resource_arn: self.resource_arn,
            error_message: self.error_message,
            error_code: self.error_code,
        }
    }
}
