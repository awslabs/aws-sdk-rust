// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UngroupResources`](crate::operation::ungroup_resources::builders::UngroupResourcesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`group(impl Into<String>)`](crate::operation::ungroup_resources::builders::UngroupResourcesFluentBuilder::group) / [`set_group(Option<String>)`](crate::operation::ungroup_resources::builders::UngroupResourcesFluentBuilder::set_group): <p>The name or the ARN of the resource group from which to remove the resources.</p>
    ///   - [`resource_arns(Vec<String>)`](crate::operation::ungroup_resources::builders::UngroupResourcesFluentBuilder::resource_arns) / [`set_resource_arns(Option<Vec<String>>)`](crate::operation::ungroup_resources::builders::UngroupResourcesFluentBuilder::set_resource_arns): <p>The ARNs of the resources to be removed from the group.</p>
    /// - On success, responds with [`UngroupResourcesOutput`](crate::operation::ungroup_resources::UngroupResourcesOutput) with field(s):
    ///   - [`succeeded(Option<Vec<String>>)`](crate::operation::ungroup_resources::UngroupResourcesOutput::succeeded): <p>A list of resources that were successfully removed from the group by this operation.</p>
    ///   - [`failed(Option<Vec<FailedResource>>)`](crate::operation::ungroup_resources::UngroupResourcesOutput::failed): <p>A list of any resources that failed to be removed from the group by this operation.</p>
    ///   - [`pending(Option<Vec<PendingResource>>)`](crate::operation::ungroup_resources::UngroupResourcesOutput::pending): <p>A list of any resources that are still in the process of being removed from the group by this operation. These pending removals continue asynchronously. You can check the status of pending removals by using the <code> <code>ListGroupResources</code> </code> operation. After the resource is successfully removed, it no longer appears in the response.</p>
    /// - On failure, responds with [`SdkError<UngroupResourcesError>`](crate::operation::ungroup_resources::UngroupResourcesError)
    pub fn ungroup_resources(
        &self,
    ) -> crate::operation::ungroup_resources::builders::UngroupResourcesFluentBuilder {
        crate::operation::ungroup_resources::builders::UngroupResourcesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
