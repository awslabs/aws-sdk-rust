// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateListingChangeSetInput {
    /// <p></p>
    pub domain_identifier: ::std::option::Option<::std::string::String>,
    /// <p></p>
    pub entity_identifier: ::std::option::Option<::std::string::String>,
    /// <p></p>
    pub entity_type: ::std::option::Option<crate::types::EntityType>,
    /// <p></p>
    pub entity_revision: ::std::option::Option<::std::string::String>,
    /// <p></p>
    pub action: ::std::option::Option<crate::types::ChangeAction>,
    /// <p></p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl CreateListingChangeSetInput {
    /// <p></p>
    pub fn domain_identifier(&self) -> ::std::option::Option<&str> {
        self.domain_identifier.as_deref()
    }
    /// <p></p>
    pub fn entity_identifier(&self) -> ::std::option::Option<&str> {
        self.entity_identifier.as_deref()
    }
    /// <p></p>
    pub fn entity_type(&self) -> ::std::option::Option<&crate::types::EntityType> {
        self.entity_type.as_ref()
    }
    /// <p></p>
    pub fn entity_revision(&self) -> ::std::option::Option<&str> {
        self.entity_revision.as_deref()
    }
    /// <p></p>
    pub fn action(&self) -> ::std::option::Option<&crate::types::ChangeAction> {
        self.action.as_ref()
    }
    /// <p></p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl CreateListingChangeSetInput {
    /// Creates a new builder-style object to manufacture [`CreateListingChangeSetInput`](crate::operation::create_listing_change_set::CreateListingChangeSetInput).
    pub fn builder() -> crate::operation::create_listing_change_set::builders::CreateListingChangeSetInputBuilder {
        crate::operation::create_listing_change_set::builders::CreateListingChangeSetInputBuilder::default()
    }
}

/// A builder for [`CreateListingChangeSetInput`](crate::operation::create_listing_change_set::CreateListingChangeSetInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateListingChangeSetInputBuilder {
    pub(crate) domain_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) entity_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) entity_type: ::std::option::Option<crate::types::EntityType>,
    pub(crate) entity_revision: ::std::option::Option<::std::string::String>,
    pub(crate) action: ::std::option::Option<crate::types::ChangeAction>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl CreateListingChangeSetInputBuilder {
    /// <p></p>
    /// This field is required.
    pub fn domain_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_domain_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_identifier = input;
        self
    }
    /// <p></p>
    pub fn get_domain_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_identifier
    }
    /// <p></p>
    /// This field is required.
    pub fn entity_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.entity_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_entity_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.entity_identifier = input;
        self
    }
    /// <p></p>
    pub fn get_entity_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.entity_identifier
    }
    /// <p></p>
    /// This field is required.
    pub fn entity_type(mut self, input: crate::types::EntityType) -> Self {
        self.entity_type = ::std::option::Option::Some(input);
        self
    }
    /// <p></p>
    pub fn set_entity_type(mut self, input: ::std::option::Option<crate::types::EntityType>) -> Self {
        self.entity_type = input;
        self
    }
    /// <p></p>
    pub fn get_entity_type(&self) -> &::std::option::Option<crate::types::EntityType> {
        &self.entity_type
    }
    /// <p></p>
    pub fn entity_revision(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.entity_revision = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_entity_revision(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.entity_revision = input;
        self
    }
    /// <p></p>
    pub fn get_entity_revision(&self) -> &::std::option::Option<::std::string::String> {
        &self.entity_revision
    }
    /// <p></p>
    /// This field is required.
    pub fn action(mut self, input: crate::types::ChangeAction) -> Self {
        self.action = ::std::option::Option::Some(input);
        self
    }
    /// <p></p>
    pub fn set_action(mut self, input: ::std::option::Option<crate::types::ChangeAction>) -> Self {
        self.action = input;
        self
    }
    /// <p></p>
    pub fn get_action(&self) -> &::std::option::Option<crate::types::ChangeAction> {
        &self.action
    }
    /// <p></p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p></p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`CreateListingChangeSetInput`](crate::operation::create_listing_change_set::CreateListingChangeSetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_listing_change_set::CreateListingChangeSetInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_listing_change_set::CreateListingChangeSetInput {
            domain_identifier: self.domain_identifier,
            entity_identifier: self.entity_identifier,
            entity_type: self.entity_type,
            entity_revision: self.entity_revision,
            action: self.action,
            client_token: self.client_token,
        })
    }
}
