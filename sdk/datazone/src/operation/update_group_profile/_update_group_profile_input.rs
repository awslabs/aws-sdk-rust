// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateGroupProfileInput {
    /// <p>The identifier of the Amazon DataZone domain in which a group profile is updated.</p>
    pub domain_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the group profile that is updated.</p>
    pub group_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The status of the group profile that is updated.</p>
    pub status: ::std::option::Option<crate::types::GroupProfileStatus>,
}
impl UpdateGroupProfileInput {
    /// <p>The identifier of the Amazon DataZone domain in which a group profile is updated.</p>
    pub fn domain_identifier(&self) -> ::std::option::Option<&str> {
        self.domain_identifier.as_deref()
    }
    /// <p>The identifier of the group profile that is updated.</p>
    pub fn group_identifier(&self) -> ::std::option::Option<&str> {
        self.group_identifier.as_deref()
    }
    /// <p>The status of the group profile that is updated.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::GroupProfileStatus> {
        self.status.as_ref()
    }
}
impl UpdateGroupProfileInput {
    /// Creates a new builder-style object to manufacture [`UpdateGroupProfileInput`](crate::operation::update_group_profile::UpdateGroupProfileInput).
    pub fn builder() -> crate::operation::update_group_profile::builders::UpdateGroupProfileInputBuilder {
        crate::operation::update_group_profile::builders::UpdateGroupProfileInputBuilder::default()
    }
}

/// A builder for [`UpdateGroupProfileInput`](crate::operation::update_group_profile::UpdateGroupProfileInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateGroupProfileInputBuilder {
    pub(crate) domain_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) group_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::GroupProfileStatus>,
}
impl UpdateGroupProfileInputBuilder {
    /// <p>The identifier of the Amazon DataZone domain in which a group profile is updated.</p>
    /// This field is required.
    pub fn domain_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon DataZone domain in which a group profile is updated.</p>
    pub fn set_domain_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_identifier = input;
        self
    }
    /// <p>The identifier of the Amazon DataZone domain in which a group profile is updated.</p>
    pub fn get_domain_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_identifier
    }
    /// <p>The identifier of the group profile that is updated.</p>
    /// This field is required.
    pub fn group_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.group_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the group profile that is updated.</p>
    pub fn set_group_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.group_identifier = input;
        self
    }
    /// <p>The identifier of the group profile that is updated.</p>
    pub fn get_group_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.group_identifier
    }
    /// <p>The status of the group profile that is updated.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::GroupProfileStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the group profile that is updated.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::GroupProfileStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the group profile that is updated.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::GroupProfileStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`UpdateGroupProfileInput`](crate::operation::update_group_profile::UpdateGroupProfileInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_group_profile::UpdateGroupProfileInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_group_profile::UpdateGroupProfileInput {
            domain_identifier: self.domain_identifier,
            group_identifier: self.group_identifier,
            status: self.status,
        })
    }
}
