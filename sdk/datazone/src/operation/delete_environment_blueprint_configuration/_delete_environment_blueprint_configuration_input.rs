// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteEnvironmentBlueprintConfigurationInput {
    /// <p>The ID of the Amazon DataZone domain in which the blueprint configuration is deleted.</p>
    pub domain_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the blueprint the configuration of which is deleted.</p>
    pub environment_blueprint_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteEnvironmentBlueprintConfigurationInput {
    /// <p>The ID of the Amazon DataZone domain in which the blueprint configuration is deleted.</p>
    pub fn domain_identifier(&self) -> ::std::option::Option<&str> {
        self.domain_identifier.as_deref()
    }
    /// <p>The ID of the blueprint the configuration of which is deleted.</p>
    pub fn environment_blueprint_identifier(&self) -> ::std::option::Option<&str> {
        self.environment_blueprint_identifier.as_deref()
    }
}
impl DeleteEnvironmentBlueprintConfigurationInput {
    /// Creates a new builder-style object to manufacture [`DeleteEnvironmentBlueprintConfigurationInput`](crate::operation::delete_environment_blueprint_configuration::DeleteEnvironmentBlueprintConfigurationInput).
    pub fn builder() -> crate::operation::delete_environment_blueprint_configuration::builders::DeleteEnvironmentBlueprintConfigurationInputBuilder {
        crate::operation::delete_environment_blueprint_configuration::builders::DeleteEnvironmentBlueprintConfigurationInputBuilder::default()
    }
}

/// A builder for [`DeleteEnvironmentBlueprintConfigurationInput`](crate::operation::delete_environment_blueprint_configuration::DeleteEnvironmentBlueprintConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteEnvironmentBlueprintConfigurationInputBuilder {
    pub(crate) domain_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) environment_blueprint_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteEnvironmentBlueprintConfigurationInputBuilder {
    /// <p>The ID of the Amazon DataZone domain in which the blueprint configuration is deleted.</p>
    /// This field is required.
    pub fn domain_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon DataZone domain in which the blueprint configuration is deleted.</p>
    pub fn set_domain_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_identifier = input;
        self
    }
    /// <p>The ID of the Amazon DataZone domain in which the blueprint configuration is deleted.</p>
    pub fn get_domain_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_identifier
    }
    /// <p>The ID of the blueprint the configuration of which is deleted.</p>
    /// This field is required.
    pub fn environment_blueprint_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.environment_blueprint_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the blueprint the configuration of which is deleted.</p>
    pub fn set_environment_blueprint_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.environment_blueprint_identifier = input;
        self
    }
    /// <p>The ID of the blueprint the configuration of which is deleted.</p>
    pub fn get_environment_blueprint_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.environment_blueprint_identifier
    }
    /// Consumes the builder and constructs a [`DeleteEnvironmentBlueprintConfigurationInput`](crate::operation::delete_environment_blueprint_configuration::DeleteEnvironmentBlueprintConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_environment_blueprint_configuration::DeleteEnvironmentBlueprintConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_environment_blueprint_configuration::DeleteEnvironmentBlueprintConfigurationInput {
                domain_identifier: self.domain_identifier,
                environment_blueprint_identifier: self.environment_blueprint_identifier,
            },
        )
    }
}
