// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_subscription_grant_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_subscription_grant::CreateSubscriptionGrantInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.asset_target_names {
        let mut array_2 = object.key("assetTargetNames").start_array();
        for item_3 in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_4 = array_2.value().start_object();
                crate::protocol_serde::shape_asset_target_name_map::ser_asset_target_name_map(&mut object_4, item_3)?;
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.client_token {
        object.key("clientToken").string(var_5.as_str());
    }
    if let Some(var_6) = &input.environment_identifier {
        object.key("environmentIdentifier").string(var_6.as_str());
    }
    if let Some(var_7) = &input.granted_entity {
        #[allow(unused_mut)]
        let mut object_8 = object.key("grantedEntity").start_object();
        crate::protocol_serde::shape_granted_entity_input::ser_granted_entity_input(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.subscription_target_identifier {
        object.key("subscriptionTargetIdentifier").string(var_9.as_str());
    }
    Ok(())
}
