// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteSubscriptionTarget`](crate::operation::delete_subscription_target::builders::DeleteSubscriptionTargetFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::delete_subscription_target::builders::DeleteSubscriptionTargetFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::delete_subscription_target::builders::DeleteSubscriptionTargetFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The ID of the Amazon DataZone domain in which the subscription target is deleted.</p><br>
    ///   - [`environment_identifier(impl Into<String>)`](crate::operation::delete_subscription_target::builders::DeleteSubscriptionTargetFluentBuilder::environment_identifier) / [`set_environment_identifier(Option<String>)`](crate::operation::delete_subscription_target::builders::DeleteSubscriptionTargetFluentBuilder::set_environment_identifier):<br>required: **true**<br><p>The ID of the Amazon DataZone environment in which the subscription target is deleted.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::delete_subscription_target::builders::DeleteSubscriptionTargetFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::delete_subscription_target::builders::DeleteSubscriptionTargetFluentBuilder::set_identifier):<br>required: **true**<br><p>The ID of the subscription target that is deleted.</p><br>
    /// - On success, responds with [`DeleteSubscriptionTargetOutput`](crate::operation::delete_subscription_target::DeleteSubscriptionTargetOutput)
    /// - On failure, responds with [`SdkError<DeleteSubscriptionTargetError>`](crate::operation::delete_subscription_target::DeleteSubscriptionTargetError)
    pub fn delete_subscription_target(&self) -> crate::operation::delete_subscription_target::builders::DeleteSubscriptionTargetFluentBuilder {
        crate::operation::delete_subscription_target::builders::DeleteSubscriptionTargetFluentBuilder::new(self.handle.clone())
    }
}
