// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDataSource`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The identifier of the domain in which to update a data source.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_identifier):<br>required: **true**<br><p>The identifier of the data source to be updated.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_name):<br>required: **false**<br><p>The name to be updated as part of the <code>UpdateDataSource</code> action.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_description):<br>required: **false**<br><p>The description to be updated as part of the <code>UpdateDataSource</code> action.</p><br>
    ///   - [`enable_setting(EnableSetting)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::enable_setting) / [`set_enable_setting(Option<EnableSetting>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_enable_setting):<br>required: **false**<br><p>The enable setting to be updated as part of the <code>UpdateDataSource</code> action.</p><br>
    ///   - [`publish_on_import(bool)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::publish_on_import) / [`set_publish_on_import(Option<bool>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_publish_on_import):<br>required: **false**<br><p>The publish on import setting to be updated as part of the <code>UpdateDataSource</code> action.</p><br>
    ///   - [`asset_forms_input(FormInput)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::asset_forms_input) / [`set_asset_forms_input(Option<Vec::<FormInput>>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_asset_forms_input):<br>required: **false**<br><p>The asset forms to be updated as part of the <code>UpdateDataSource</code> action.</p><br>
    ///   - [`schedule(ScheduleConfiguration)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::schedule) / [`set_schedule(Option<ScheduleConfiguration>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_schedule):<br>required: **false**<br><p>The schedule to be updated as part of the <code>UpdateDataSource</code> action.</p><br>
    ///   - [`configuration(DataSourceConfigurationInput)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::configuration) / [`set_configuration(Option<DataSourceConfigurationInput>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_configuration):<br>required: **false**<br><p>The configuration to be updated as part of the <code>UpdateDataSource</code> action.</p><br>
    ///   - [`recommendation(RecommendationConfiguration)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::recommendation) / [`set_recommendation(Option<RecommendationConfiguration>)`](crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::set_recommendation):<br>required: **false**<br><p>The recommendation to be updated as part of the <code>UpdateDataSource</code> action.</p><br>
    /// - On success, responds with [`UpdateDataSourceOutput`](crate::operation::update_data_source::UpdateDataSourceOutput) with field(s):
    ///   - [`id(String)`](crate::operation::update_data_source::UpdateDataSourceOutput::id): <p>The identifier of the data source to be updated.</p>
    ///   - [`status(Option<DataSourceStatus>)`](crate::operation::update_data_source::UpdateDataSourceOutput::status): <p>The status to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`r#type(Option<String>)`](crate::operation::update_data_source::UpdateDataSourceOutput::type): <p>The type to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`name(String)`](crate::operation::update_data_source::UpdateDataSourceOutput::name): <p>The name to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`description(Option<String>)`](crate::operation::update_data_source::UpdateDataSourceOutput::description): <p>The description to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`domain_id(String)`](crate::operation::update_data_source::UpdateDataSourceOutput::domain_id): <p>The identifier of the Amazon DataZone domain in which a data source is to be updated.</p>
    ///   - [`project_id(String)`](crate::operation::update_data_source::UpdateDataSourceOutput::project_id): <p>The identifier of the project where data source is to be updated.</p>
    ///   - [`environment_id(String)`](crate::operation::update_data_source::UpdateDataSourceOutput::environment_id): <p>The identifier of the environment in which a data source is to be updated.</p>
    ///   - [`configuration(Option<DataSourceConfigurationOutput>)`](crate::operation::update_data_source::UpdateDataSourceOutput::configuration): <p>The configuration to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`recommendation(Option<RecommendationConfiguration>)`](crate::operation::update_data_source::UpdateDataSourceOutput::recommendation): <p>The recommendation to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`enable_setting(Option<EnableSetting>)`](crate::operation::update_data_source::UpdateDataSourceOutput::enable_setting): <p>The enable setting to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`publish_on_import(Option<bool>)`](crate::operation::update_data_source::UpdateDataSourceOutput::publish_on_import): <p>The publish on import setting to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`asset_forms_output(Option<Vec::<FormOutput>>)`](crate::operation::update_data_source::UpdateDataSourceOutput::asset_forms_output): <p>The asset forms to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`schedule(Option<ScheduleConfiguration>)`](crate::operation::update_data_source::UpdateDataSourceOutput::schedule): <p>The schedule to be updated as part of the <code>UpdateDataSource</code> action.</p>
    ///   - [`last_run_status(Option<DataSourceRunStatus>)`](crate::operation::update_data_source::UpdateDataSourceOutput::last_run_status): <p>The last run status of the data source.</p>
    ///   - [`last_run_at(Option<DateTime>)`](crate::operation::update_data_source::UpdateDataSourceOutput::last_run_at): <p>The timestamp of when the data source was last run.</p>
    ///   - [`last_run_error_message(Option<DataSourceErrorMessage>)`](crate::operation::update_data_source::UpdateDataSourceOutput::last_run_error_message): <p>The last run error message of the data source.</p>
    ///   - [`error_message(Option<DataSourceErrorMessage>)`](crate::operation::update_data_source::UpdateDataSourceOutput::error_message): <p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::update_data_source::UpdateDataSourceOutput::created_at): <p>The timestamp of when the data source was updated.</p>
    ///   - [`updated_at(Option<DateTime>)`](crate::operation::update_data_source::UpdateDataSourceOutput::updated_at): <p>The timestamp of when the data source was updated.</p>
    /// - On failure, responds with [`SdkError<UpdateDataSourceError>`](crate::operation::update_data_source::UpdateDataSourceError)
    pub fn update_data_source(&self) -> crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder {
        crate::operation::update_data_source::builders::UpdateDataSourceFluentBuilder::new(self.handle.clone())
    }
}
