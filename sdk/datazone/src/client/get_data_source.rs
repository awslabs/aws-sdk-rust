// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDataSource`](crate::operation::get_data_source::builders::GetDataSourceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::get_data_source::builders::GetDataSourceFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::get_data_source::builders::GetDataSourceFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The ID of the Amazon DataZone domain in which the data source exists.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::get_data_source::builders::GetDataSourceFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::get_data_source::builders::GetDataSourceFluentBuilder::set_identifier):<br>required: **true**<br><p>The ID of the Amazon DataZone data source.</p><br>
    /// - On success, responds with [`GetDataSourceOutput`](crate::operation::get_data_source::GetDataSourceOutput) with field(s):
    ///   - [`id(String)`](crate::operation::get_data_source::GetDataSourceOutput::id): <p>The ID of the data source.</p>
    ///   - [`status(Option<DataSourceStatus>)`](crate::operation::get_data_source::GetDataSourceOutput::status): <p>The status of the data source.</p>
    ///   - [`r#type(Option<String>)`](crate::operation::get_data_source::GetDataSourceOutput::type): <p>The type of the data source.</p>
    ///   - [`name(String)`](crate::operation::get_data_source::GetDataSourceOutput::name): <p>The name of the data source.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_data_source::GetDataSourceOutput::description): <p>The description of the data source.</p>
    ///   - [`domain_id(String)`](crate::operation::get_data_source::GetDataSourceOutput::domain_id): <p>The ID of the Amazon DataZone domain in which the data source exists.</p>
    ///   - [`project_id(String)`](crate::operation::get_data_source::GetDataSourceOutput::project_id): <p>The ID of the project where the data source creates and publishes assets.</p>
    ///   - [`environment_id(String)`](crate::operation::get_data_source::GetDataSourceOutput::environment_id): <p>The ID of the environment where this data source creates and publishes assets,</p>
    ///   - [`configuration(Option<DataSourceConfigurationOutput>)`](crate::operation::get_data_source::GetDataSourceOutput::configuration): <p>The configuration of the data source.</p>
    ///   - [`recommendation(Option<RecommendationConfiguration>)`](crate::operation::get_data_source::GetDataSourceOutput::recommendation): <p></p>
    ///   - [`enable_setting(Option<EnableSetting>)`](crate::operation::get_data_source::GetDataSourceOutput::enable_setting): <p>Specifies whether this data source is enabled or not.</p>
    ///   - [`publish_on_import(Option<bool>)`](crate::operation::get_data_source::GetDataSourceOutput::publish_on_import): <p>Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.</p>
    ///   - [`asset_forms_output(Option<Vec::<FormOutput>>)`](crate::operation::get_data_source::GetDataSourceOutput::asset_forms_output): <p>The metadata forms attached to the assets created by this data source.</p>
    ///   - [`schedule(Option<ScheduleConfiguration>)`](crate::operation::get_data_source::GetDataSourceOutput::schedule): <p>The schedule of the data source runs.</p>
    ///   - [`last_run_status(Option<DataSourceRunStatus>)`](crate::operation::get_data_source::GetDataSourceOutput::last_run_status): <p>The status of the last run of the data source.</p>
    ///   - [`last_run_at(Option<DateTime>)`](crate::operation::get_data_source::GetDataSourceOutput::last_run_at): <p>The timestamp of the last run of the data source.</p>
    ///   - [`last_run_error_message(Option<DataSourceErrorMessage>)`](crate::operation::get_data_source::GetDataSourceOutput::last_run_error_message): <p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>
    ///   - [`last_run_asset_count(Option<i32>)`](crate::operation::get_data_source::GetDataSourceOutput::last_run_asset_count): <p>The number of assets created by the data source during its last run.</p>
    ///   - [`error_message(Option<DataSourceErrorMessage>)`](crate::operation::get_data_source::GetDataSourceOutput::error_message): <p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::get_data_source::GetDataSourceOutput::created_at): <p>The timestamp of when the data source was created.</p>
    ///   - [`updated_at(Option<DateTime>)`](crate::operation::get_data_source::GetDataSourceOutput::updated_at): <p>The timestamp of when the data source was updated.</p>
    /// - On failure, responds with [`SdkError<GetDataSourceError>`](crate::operation::get_data_source::GetDataSourceError)
    pub fn get_data_source(&self) -> crate::operation::get_data_source::builders::GetDataSourceFluentBuilder {
        crate::operation::get_data_source::builders::GetDataSourceFluentBuilder::new(self.handle.clone())
    }
}
