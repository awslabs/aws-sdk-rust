// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateSubscriptionTarget`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The identifier of the Amazon DataZone domain in which a subscription target is to be updated.</p><br>
    ///   - [`environment_identifier(impl Into<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::environment_identifier) / [`set_environment_identifier(Option<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::set_environment_identifier):<br>required: **true**<br><p>The identifier of the environment in which a subscription target is to be updated.</p><br>
    ///   - [`identifier(impl Into<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::set_identifier):<br>required: **true**<br><p>Identifier of the subscription target that is to be updated.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::set_name):<br>required: **false**<br><p>The name to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p><br>
    ///   - [`authorized_principals(impl Into<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::authorized_principals) / [`set_authorized_principals(Option<Vec::<String>>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::set_authorized_principals):<br>required: **false**<br><p>The authorized principals to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p><br>
    ///   - [`applicable_asset_types(impl Into<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::applicable_asset_types) / [`set_applicable_asset_types(Option<Vec::<String>>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::set_applicable_asset_types):<br>required: **false**<br><p>The applicable asset types to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p><br>
    ///   - [`subscription_target_config(SubscriptionTargetForm)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::subscription_target_config) / [`set_subscription_target_config(Option<Vec::<SubscriptionTargetForm>>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::set_subscription_target_config):<br>required: **false**<br><p>The configuration to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p><br>
    ///   - [`manage_access_role(impl Into<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::manage_access_role) / [`set_manage_access_role(Option<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::set_manage_access_role):<br>required: **false**<br><p>The manage access role to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p><br>
    ///   - [`provider(impl Into<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::provider) / [`set_provider(Option<String>)`](crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::set_provider):<br>required: **false**<br><p>The provider to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p><br>
    /// - On success, responds with [`UpdateSubscriptionTargetOutput`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput) with field(s):
    ///   - [`id(String)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::id): <p>Identifier of the subscription target that is to be updated.</p>
    ///   - [`authorized_principals(Vec::<String>)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::authorized_principals): <p>The authorized principals to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>
    ///   - [`domain_id(String)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::domain_id): <p>The identifier of the Amazon DataZone domain in which a subscription target is to be updated.</p>
    ///   - [`project_id(String)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::project_id): <p>The identifier of the project in which a subscription target is to be updated.</p>
    ///   - [`environment_id(String)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::environment_id): <p>The identifier of the environment in which a subscription target is to be updated.</p>
    ///   - [`name(String)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::name): <p>The name to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>
    ///   - [`r#type(String)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::type): <p>The type to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>
    ///   - [`created_by(String)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::created_by): <p>The Amazon DataZone user who created the subscription target.</p>
    ///   - [`updated_by(Option<String>)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::updated_by): <p>The Amazon DataZone user who updated the subscription target.</p>
    ///   - [`created_at(DateTime)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::created_at): <p>The timestamp of when a subscription target was created.</p>
    ///   - [`updated_at(Option<DateTime>)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::updated_at): <p>The timestamp of when the subscription target was updated.</p>
    ///   - [`manage_access_role(String)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::manage_access_role): <p>The manage access role to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>
    ///   - [`applicable_asset_types(Vec::<String>)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::applicable_asset_types): <p>The applicable asset types to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>
    ///   - [`subscription_target_config(Vec::<SubscriptionTargetForm>)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::subscription_target_config): <p>The configuration to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>
    ///   - [`provider(String)`](crate::operation::update_subscription_target::UpdateSubscriptionTargetOutput::provider): <p>The provider to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>
    /// - On failure, responds with [`SdkError<UpdateSubscriptionTargetError>`](crate::operation::update_subscription_target::UpdateSubscriptionTargetError)
    pub fn update_subscription_target(&self) -> crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder {
        crate::operation::update_subscription_target::builders::UpdateSubscriptionTargetFluentBuilder::new(self.handle.clone())
    }
}
