// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDomain`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identifier(impl Into<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_identifier):<br>required: **true**<br><p>The ID of the Amazon Web Services domain that is to be updated.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_description):<br>required: **false**<br><p>The description to be updated as part of the <code>UpdateDomain</code> action.</p><br>
    ///   - [`single_sign_on(SingleSignOn)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::single_sign_on) / [`set_single_sign_on(Option<SingleSignOn>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_single_sign_on):<br>required: **false**<br><p>The single sign-on option to be updated as part of the <code>UpdateDomain</code> action.</p><br>
    ///   - [`domain_execution_role(impl Into<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::domain_execution_role) / [`set_domain_execution_role(Option<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_domain_execution_role):<br>required: **false**<br><p>The domain execution role to be updated as part of the <code>UpdateDomain</code> action.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_name):<br>required: **false**<br><p>The name to be updated as part of the <code>UpdateDomain</code> action.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p><br>
    /// - On success, responds with [`UpdateDomainOutput`](crate::operation::update_domain::UpdateDomainOutput) with field(s):
    ///   - [`id(String)`](crate::operation::update_domain::UpdateDomainOutput::id): <p>The identifier of the Amazon DataZone domain.</p>
    ///   - [`description(Option<String>)`](crate::operation::update_domain::UpdateDomainOutput::description): <p>The description to be updated as part of the <code>UpdateDomain</code> action.</p>
    ///   - [`single_sign_on(Option<SingleSignOn>)`](crate::operation::update_domain::UpdateDomainOutput::single_sign_on): <p>The single sign-on option of the Amazon DataZone domain.</p>
    ///   - [`domain_execution_role(Option<String>)`](crate::operation::update_domain::UpdateDomainOutput::domain_execution_role): <p>The domain execution role to be updated as part of the <code>UpdateDomain</code> action.</p>
    ///   - [`name(Option<String>)`](crate::operation::update_domain::UpdateDomainOutput::name): <p>The name to be updated as part of the <code>UpdateDomain</code> action.</p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::operation::update_domain::UpdateDomainOutput::last_updated_at): <p>Specifies the timestamp of when the domain was last updated.</p>
    /// - On failure, responds with [`SdkError<UpdateDomainError>`](crate::operation::update_domain::UpdateDomainError)
    pub fn update_domain(&self) -> crate::operation::update_domain::builders::UpdateDomainFluentBuilder {
        crate::operation::update_domain::builders::UpdateDomainFluentBuilder::new(self.handle.clone())
    }
}
