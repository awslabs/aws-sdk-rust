// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSubscriptionRequest`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The ID of the Amazon DataZone domain in which the subscription request is created.</p><br>
    ///   - [`subscribed_principals(SubscribedPrincipalInput)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::subscribed_principals) / [`set_subscribed_principals(Option<Vec::<SubscribedPrincipalInput>>)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::set_subscribed_principals):<br>required: **true**<br><p>The Amazon DataZone principals for whom the subscription request is created.</p><br>
    ///   - [`subscribed_listings(SubscribedListingInput)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::subscribed_listings) / [`set_subscribed_listings(Option<Vec::<SubscribedListingInput>>)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::set_subscribed_listings):<br>required: **true**<br><p></p><br>
    ///   - [`request_reason(impl Into<String>)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::request_reason) / [`set_request_reason(Option<String>)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::set_request_reason):<br>required: **true**<br><p>The reason for the subscription request.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p><br>
    /// - On success, responds with [`CreateSubscriptionRequestOutput`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput) with field(s):
    ///   - [`id(String)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::id): <p>The ID of the subscription request.</p>
    ///   - [`created_by(String)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::created_by): <p>The Amazon DataZone user who created the subscription request.</p>
    ///   - [`updated_by(Option<String>)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::updated_by): <p>The Amazon DataZone user who updated the subscription request.</p>
    ///   - [`domain_id(String)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::domain_id): <p>The ID of the Amazon DataZone domain in whcih the subscription request is created.</p>
    ///   - [`status(SubscriptionRequestStatus)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::status): <p>The status of the subscription request.</p>
    ///   - [`created_at(DateTime)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::created_at): <p>A timestamp of when the subscription request is created.</p>
    ///   - [`updated_at(DateTime)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::updated_at): <p>The timestamp of when the subscription request was updated.</p>
    ///   - [`request_reason(String)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::request_reason): <p>The reason for the subscription request.</p>
    ///   - [`subscribed_principals(Vec::<SubscribedPrincipal>)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::subscribed_principals): <p>The subscribed principals of the subscription request.</p>
    ///   - [`subscribed_listings(Vec::<SubscribedListing>)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::subscribed_listings): <p></p>
    ///   - [`reviewer_id(Option<String>)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::reviewer_id): <p>The ID of the reviewer of the subscription request.</p>
    ///   - [`decision_comment(Option<String>)`](crate::operation::create_subscription_request::CreateSubscriptionRequestOutput::decision_comment): <p>The decision comment of the subscription request.</p>
    /// - On failure, responds with [`SdkError<CreateSubscriptionRequestError>`](crate::operation::create_subscription_request::CreateSubscriptionRequestError)
    pub fn create_subscription_request(&self) -> crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder {
        crate::operation::create_subscription_request::builders::CreateSubscriptionRequestFluentBuilder::new(self.handle.clone())
    }
}
