// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSubscriptions`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_identifier(impl Into<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::domain_identifier) / [`set_domain_identifier(Option<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_domain_identifier):<br>required: **true**<br><p>The identifier of the Amazon DataZone domain.</p><br>
    ///   - [`subscription_request_identifier(impl Into<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::subscription_request_identifier) / [`set_subscription_request_identifier(Option<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_subscription_request_identifier):<br>required: **false**<br><p>The identifier of the subscription request for the subscriptions that you want to list.</p><br>
    ///   - [`status(SubscriptionStatus)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::status) / [`set_status(Option<SubscriptionStatus>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_status):<br>required: **false**<br><p>The status of the subscriptions that you want to list.</p><br>
    ///   - [`subscribed_listing_id(impl Into<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::subscribed_listing_id) / [`set_subscribed_listing_id(Option<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_subscribed_listing_id):<br>required: **false**<br><p>The identifier of the subscribed listing for the subscriptions that you want to list.</p><br>
    ///   - [`owning_project_id(impl Into<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::owning_project_id) / [`set_owning_project_id(Option<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_owning_project_id):<br>required: **false**<br><p>The identifier of the owning project.</p><br>
    ///   - [`approver_project_id(impl Into<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::approver_project_id) / [`set_approver_project_id(Option<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_approver_project_id):<br>required: **false**<br><p>The identifier of the project for the subscription's approver.</p><br>
    ///   - [`sort_by(SortKey)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::sort_by) / [`set_sort_by(Option<SortKey>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_sort_by):<br>required: **false**<br><p>Specifies the way in which the results of this action are to be sorted.</p><br>
    ///   - [`sort_order(SortOrder)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_sort_order):<br>required: **false**<br><p>Specifies the sort order for the results of this action.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of subscriptions to return in a single call to <code>ListSubscriptions</code>. When the number of subscriptions to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListSubscriptions</code> to list the next set of Subscriptions. </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::set_next_token):<br>required: **false**<br><p>When the number of subscriptions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscriptions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptions</code> to list the next set of subscriptions.</p><br>
    /// - On success, responds with [`ListSubscriptionsOutput`](crate::operation::list_subscriptions::ListSubscriptionsOutput) with field(s):
    ///   - [`items(Vec::<SubscriptionSummary>)`](crate::operation::list_subscriptions::ListSubscriptionsOutput::items): <p>The results of the <code>ListSubscriptions</code> action.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_subscriptions::ListSubscriptionsOutput::next_token): <p>When the number of subscriptions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscriptions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptions</code> to list the next set of subscriptions.</p>
    /// - On failure, responds with [`SdkError<ListSubscriptionsError>`](crate::operation::list_subscriptions::ListSubscriptionsError)
    pub fn list_subscriptions(&self) -> crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder {
        crate::operation::list_subscriptions::builders::ListSubscriptionsFluentBuilder::new(self.handle.clone())
    }
}
