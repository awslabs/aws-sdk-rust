// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The published asset for which the subscription grant is to be created.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SubscribedListingInput {
    /// <p>The identifier of the published asset for which the subscription grant is to be created.</p>
    pub identifier: ::std::string::String,
}
impl SubscribedListingInput {
    /// <p>The identifier of the published asset for which the subscription grant is to be created.</p>
    pub fn identifier(&self) -> &str {
        use std::ops::Deref;
        self.identifier.deref()
    }
}
impl SubscribedListingInput {
    /// Creates a new builder-style object to manufacture [`SubscribedListingInput`](crate::types::SubscribedListingInput).
    pub fn builder() -> crate::types::builders::SubscribedListingInputBuilder {
        crate::types::builders::SubscribedListingInputBuilder::default()
    }
}

/// A builder for [`SubscribedListingInput`](crate::types::SubscribedListingInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SubscribedListingInputBuilder {
    pub(crate) identifier: ::std::option::Option<::std::string::String>,
}
impl SubscribedListingInputBuilder {
    /// <p>The identifier of the published asset for which the subscription grant is to be created.</p>
    /// This field is required.
    pub fn identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the published asset for which the subscription grant is to be created.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>The identifier of the published asset for which the subscription grant is to be created.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.identifier
    }
    /// Consumes the builder and constructs a [`SubscribedListingInput`](crate::types::SubscribedListingInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`identifier`](crate::types::builders::SubscribedListingInputBuilder::identifier)
    pub fn build(self) -> ::std::result::Result<crate::types::SubscribedListingInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SubscribedListingInput {
            identifier: self.identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "identifier",
                    "identifier was not specified but it is required when building SubscribedListingInput",
                )
            })?,
        })
    }
}
