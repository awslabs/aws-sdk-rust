// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteGrantInput {
    /// <p>Amazon Resource Name (ARN) of the grant.</p>
    pub grant_arn: ::std::option::Option<::std::string::String>,
    /// <p>The Status reason for the delete request.</p>
    pub status_reason: ::std::option::Option<::std::string::String>,
    /// <p>Current version of the grant.</p>
    pub version: ::std::option::Option<::std::string::String>,
}
impl DeleteGrantInput {
    /// <p>Amazon Resource Name (ARN) of the grant.</p>
    pub fn grant_arn(&self) -> ::std::option::Option<&str> {
        self.grant_arn.as_deref()
    }
    /// <p>The Status reason for the delete request.</p>
    pub fn status_reason(&self) -> ::std::option::Option<&str> {
        self.status_reason.as_deref()
    }
    /// <p>Current version of the grant.</p>
    pub fn version(&self) -> ::std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl DeleteGrantInput {
    /// Creates a new builder-style object to manufacture [`DeleteGrantInput`](crate::operation::delete_grant::DeleteGrantInput).
    pub fn builder() -> crate::operation::delete_grant::builders::DeleteGrantInputBuilder {
        crate::operation::delete_grant::builders::DeleteGrantInputBuilder::default()
    }
}

/// A builder for [`DeleteGrantInput`](crate::operation::delete_grant::DeleteGrantInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteGrantInputBuilder {
    pub(crate) grant_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status_reason: ::std::option::Option<::std::string::String>,
    pub(crate) version: ::std::option::Option<::std::string::String>,
}
impl DeleteGrantInputBuilder {
    /// <p>Amazon Resource Name (ARN) of the grant.</p>
    /// This field is required.
    pub fn grant_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.grant_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) of the grant.</p>
    pub fn set_grant_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.grant_arn = input;
        self
    }
    /// <p>Amazon Resource Name (ARN) of the grant.</p>
    pub fn get_grant_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.grant_arn
    }
    /// <p>The Status reason for the delete request.</p>
    pub fn status_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Status reason for the delete request.</p>
    pub fn set_status_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_reason = input;
        self
    }
    /// <p>The Status reason for the delete request.</p>
    pub fn get_status_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_reason
    }
    /// <p>Current version of the grant.</p>
    /// This field is required.
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Current version of the grant.</p>
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// <p>Current version of the grant.</p>
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    /// Consumes the builder and constructs a [`DeleteGrantInput`](crate::operation::delete_grant::DeleteGrantInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::delete_grant::DeleteGrantInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_grant::DeleteGrantInput {
            grant_arn: self.grant_arn,
            status_reason: self.status_reason,
            version: self.version,
        })
    }
}
