// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AcceptGrantOutput {
    /// <p>Grant ARN.</p>
    #[doc(hidden)]
    pub grant_arn: std::option::Option<std::string::String>,
    /// <p>Grant status.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::GrantStatus>,
    /// <p>Grant version.</p>
    #[doc(hidden)]
    pub version: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl AcceptGrantOutput {
    /// <p>Grant ARN.</p>
    pub fn grant_arn(&self) -> std::option::Option<&str> {
        self.grant_arn.as_deref()
    }
    /// <p>Grant status.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::GrantStatus> {
        self.status.as_ref()
    }
    /// <p>Grant version.</p>
    pub fn version(&self) -> std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl aws_http::request_id::RequestId for AcceptGrantOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AcceptGrantOutput {
    /// Creates a new builder-style object to manufacture [`AcceptGrantOutput`](crate::operation::accept_grant::AcceptGrantOutput).
    pub fn builder() -> crate::operation::accept_grant::builders::AcceptGrantOutputBuilder {
        crate::operation::accept_grant::builders::AcceptGrantOutputBuilder::default()
    }
}

/// A builder for [`AcceptGrantOutput`](crate::operation::accept_grant::AcceptGrantOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AcceptGrantOutputBuilder {
    pub(crate) grant_arn: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::GrantStatus>,
    pub(crate) version: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl AcceptGrantOutputBuilder {
    /// <p>Grant ARN.</p>
    pub fn grant_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.grant_arn = Some(input.into());
        self
    }
    /// <p>Grant ARN.</p>
    pub fn set_grant_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.grant_arn = input;
        self
    }
    /// <p>Grant status.</p>
    pub fn status(mut self, input: crate::types::GrantStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>Grant status.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::GrantStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Grant version.</p>
    pub fn version(mut self, input: impl Into<std::string::String>) -> Self {
        self.version = Some(input.into());
        self
    }
    /// <p>Grant version.</p>
    pub fn set_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AcceptGrantOutput`](crate::operation::accept_grant::AcceptGrantOutput).
    pub fn build(self) -> crate::operation::accept_grant::AcceptGrantOutput {
        crate::operation::accept_grant::AcceptGrantOutput {
            grant_arn: self.grant_arn,
            status: self.status,
            version: self.version,
            _request_id: self._request_id,
        }
    }
}
