// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration information for Organizations.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OrganizationConfiguration {
    /// <p>Enables Organizations integration.</p>
    pub enable_integration: bool,
}
impl OrganizationConfiguration {
    /// <p>Enables Organizations integration.</p>
    pub fn enable_integration(&self) -> bool {
        self.enable_integration
    }
}
impl OrganizationConfiguration {
    /// Creates a new builder-style object to manufacture [`OrganizationConfiguration`](crate::types::OrganizationConfiguration).
    pub fn builder() -> crate::types::builders::OrganizationConfigurationBuilder {
        crate::types::builders::OrganizationConfigurationBuilder::default()
    }
}

/// A builder for [`OrganizationConfiguration`](crate::types::OrganizationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OrganizationConfigurationBuilder {
    pub(crate) enable_integration: ::std::option::Option<bool>,
}
impl OrganizationConfigurationBuilder {
    /// <p>Enables Organizations integration.</p>
    /// This field is required.
    pub fn enable_integration(mut self, input: bool) -> Self {
        self.enable_integration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Enables Organizations integration.</p>
    pub fn set_enable_integration(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enable_integration = input;
        self
    }
    /// <p>Enables Organizations integration.</p>
    pub fn get_enable_integration(&self) -> &::std::option::Option<bool> {
        &self.enable_integration
    }
    /// Consumes the builder and constructs a [`OrganizationConfiguration`](crate::types::OrganizationConfiguration).
    pub fn build(self) -> crate::types::OrganizationConfiguration {
        crate::types::OrganizationConfiguration {
            enable_integration: self.enable_integration.unwrap_or_default(),
        }
    }
}
