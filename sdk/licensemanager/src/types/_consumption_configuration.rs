// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about a consumption configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConsumptionConfiguration {
    /// <p>Renewal frequency.</p>
    #[doc(hidden)]
    pub renew_type: std::option::Option<crate::types::RenewType>,
    /// <p>Details about a provisional configuration.</p>
    #[doc(hidden)]
    pub provisional_configuration: std::option::Option<crate::types::ProvisionalConfiguration>,
    /// <p>Details about a borrow configuration.</p>
    #[doc(hidden)]
    pub borrow_configuration: std::option::Option<crate::types::BorrowConfiguration>,
}
impl ConsumptionConfiguration {
    /// <p>Renewal frequency.</p>
    pub fn renew_type(&self) -> std::option::Option<&crate::types::RenewType> {
        self.renew_type.as_ref()
    }
    /// <p>Details about a provisional configuration.</p>
    pub fn provisional_configuration(
        &self,
    ) -> std::option::Option<&crate::types::ProvisionalConfiguration> {
        self.provisional_configuration.as_ref()
    }
    /// <p>Details about a borrow configuration.</p>
    pub fn borrow_configuration(&self) -> std::option::Option<&crate::types::BorrowConfiguration> {
        self.borrow_configuration.as_ref()
    }
}
impl ConsumptionConfiguration {
    /// Creates a new builder-style object to manufacture [`ConsumptionConfiguration`](crate::types::ConsumptionConfiguration).
    pub fn builder() -> crate::types::builders::ConsumptionConfigurationBuilder {
        crate::types::builders::ConsumptionConfigurationBuilder::default()
    }
}

/// A builder for [`ConsumptionConfiguration`](crate::types::ConsumptionConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConsumptionConfigurationBuilder {
    pub(crate) renew_type: std::option::Option<crate::types::RenewType>,
    pub(crate) provisional_configuration:
        std::option::Option<crate::types::ProvisionalConfiguration>,
    pub(crate) borrow_configuration: std::option::Option<crate::types::BorrowConfiguration>,
}
impl ConsumptionConfigurationBuilder {
    /// <p>Renewal frequency.</p>
    pub fn renew_type(mut self, input: crate::types::RenewType) -> Self {
        self.renew_type = Some(input);
        self
    }
    /// <p>Renewal frequency.</p>
    pub fn set_renew_type(mut self, input: std::option::Option<crate::types::RenewType>) -> Self {
        self.renew_type = input;
        self
    }
    /// <p>Details about a provisional configuration.</p>
    pub fn provisional_configuration(
        mut self,
        input: crate::types::ProvisionalConfiguration,
    ) -> Self {
        self.provisional_configuration = Some(input);
        self
    }
    /// <p>Details about a provisional configuration.</p>
    pub fn set_provisional_configuration(
        mut self,
        input: std::option::Option<crate::types::ProvisionalConfiguration>,
    ) -> Self {
        self.provisional_configuration = input;
        self
    }
    /// <p>Details about a borrow configuration.</p>
    pub fn borrow_configuration(mut self, input: crate::types::BorrowConfiguration) -> Self {
        self.borrow_configuration = Some(input);
        self
    }
    /// <p>Details about a borrow configuration.</p>
    pub fn set_borrow_configuration(
        mut self,
        input: std::option::Option<crate::types::BorrowConfiguration>,
    ) -> Self {
        self.borrow_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`ConsumptionConfiguration`](crate::types::ConsumptionConfiguration).
    pub fn build(self) -> crate::types::ConsumptionConfiguration {
        crate::types::ConsumptionConfiguration {
            renew_type: self.renew_type,
            provisional_configuration: self.provisional_configuration,
            borrow_configuration: self.borrow_configuration,
        }
    }
}
