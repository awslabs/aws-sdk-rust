// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a time range, in ISO8601-UTC format.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DatetimeRange {
    /// <p>Start of the time range.</p>
    #[doc(hidden)]
    pub begin: std::option::Option<std::string::String>,
    /// <p>End of the time range.</p>
    #[doc(hidden)]
    pub end: std::option::Option<std::string::String>,
}
impl DatetimeRange {
    /// <p>Start of the time range.</p>
    pub fn begin(&self) -> std::option::Option<&str> {
        self.begin.as_deref()
    }
    /// <p>End of the time range.</p>
    pub fn end(&self) -> std::option::Option<&str> {
        self.end.as_deref()
    }
}
impl DatetimeRange {
    /// Creates a new builder-style object to manufacture [`DatetimeRange`](crate::types::DatetimeRange).
    pub fn builder() -> crate::types::builders::DatetimeRangeBuilder {
        crate::types::builders::DatetimeRangeBuilder::default()
    }
}

/// A builder for [`DatetimeRange`](crate::types::DatetimeRange).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DatetimeRangeBuilder {
    pub(crate) begin: std::option::Option<std::string::String>,
    pub(crate) end: std::option::Option<std::string::String>,
}
impl DatetimeRangeBuilder {
    /// <p>Start of the time range.</p>
    pub fn begin(mut self, input: impl Into<std::string::String>) -> Self {
        self.begin = Some(input.into());
        self
    }
    /// <p>Start of the time range.</p>
    pub fn set_begin(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.begin = input;
        self
    }
    /// <p>End of the time range.</p>
    pub fn end(mut self, input: impl Into<std::string::String>) -> Self {
        self.end = Some(input.into());
        self
    }
    /// <p>End of the time range.</p>
    pub fn set_end(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.end = input;
        self
    }
    /// Consumes the builder and constructs a [`DatetimeRange`](crate::types::DatetimeRange).
    pub fn build(self) -> crate::types::DatetimeRange {
        crate::types::DatetimeRange {
            begin: self.begin,
            end: self.end,
        }
    }
}
