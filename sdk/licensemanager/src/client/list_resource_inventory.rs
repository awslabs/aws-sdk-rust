// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListResourceInventory`](crate::operation::list_resource_inventory::builders::ListResourceInventoryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::list_resource_inventory::builders::ListResourceInventoryFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_resource_inventory::builders::ListResourceInventoryFluentBuilder::set_max_results): <p>Maximum number of results to return in a single call.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_resource_inventory::builders::ListResourceInventoryFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_resource_inventory::builders::ListResourceInventoryFluentBuilder::set_next_token): <p>Token for the next set of results.</p>
    ///   - [`filters(Vec<InventoryFilter>)`](crate::operation::list_resource_inventory::builders::ListResourceInventoryFluentBuilder::filters) / [`set_filters(Option<Vec<InventoryFilter>>)`](crate::operation::list_resource_inventory::builders::ListResourceInventoryFluentBuilder::set_filters): <p>Filters to scope the results. The following filters and logical operators are supported:</p>  <ul>   <li> <p> <code>account_id</code> - The ID of the Amazon Web Services account that owns the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li>   <li> <p> <code>application_name</code> - The name of the application. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li>   <li> <p> <code>license_included</code> - The type of license included. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li>   <li> <p> <code>platform</code> - The platform of the resource. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li>   <li> <p> <code>resource_id</code> - The ID of the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li>   <li> <p> <code>tag:     <key></key></code> - The key/value combination of a tag assigned to the resource. Logical operators are <code>EQUALS</code> (single account) or <code>EQUALS</code> | <code>NOT_EQUALS</code> (cross account).</p> </li>  </ul>
    /// - On success, responds with [`ListResourceInventoryOutput`](crate::operation::list_resource_inventory::ListResourceInventoryOutput) with field(s):
    ///   - [`resource_inventory_list(Option<Vec<ResourceInventory>>)`](crate::operation::list_resource_inventory::ListResourceInventoryOutput::resource_inventory_list): <p>Information about the resources.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_resource_inventory::ListResourceInventoryOutput::next_token): <p>Token for the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListResourceInventoryError>`](crate::operation::list_resource_inventory::ListResourceInventoryError)
    pub fn list_resource_inventory(
        &self,
    ) -> crate::operation::list_resource_inventory::builders::ListResourceInventoryFluentBuilder
    {
        crate::operation::list_resource_inventory::builders::ListResourceInventoryFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
