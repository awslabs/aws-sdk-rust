// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListLicenseManagerReportGenerators`](crate::operation::list_license_manager_report_generators::builders::ListLicenseManagerReportGeneratorsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(Vec<Filter>)`](crate::operation::list_license_manager_report_generators::builders::ListLicenseManagerReportGeneratorsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::list_license_manager_report_generators::builders::ListLicenseManagerReportGeneratorsFluentBuilder::set_filters): <p>Filters to scope the results. The following filters are supported: </p>  <ul>   <li> <p> <code>LicenseConfigurationArn</code> </p> </li>  </ul>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_license_manager_report_generators::builders::ListLicenseManagerReportGeneratorsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_license_manager_report_generators::builders::ListLicenseManagerReportGeneratorsFluentBuilder::set_next_token): <p>Token for the next set of results.</p>
    ///   - [`max_results(i32)`](crate::operation::list_license_manager_report_generators::builders::ListLicenseManagerReportGeneratorsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_license_manager_report_generators::builders::ListLicenseManagerReportGeneratorsFluentBuilder::set_max_results): <p>Maximum number of results to return in a single call.</p>
    /// - On success, responds with [`ListLicenseManagerReportGeneratorsOutput`](crate::operation::list_license_manager_report_generators::ListLicenseManagerReportGeneratorsOutput) with field(s):
    ///   - [`report_generators(Option<Vec<ReportGenerator>>)`](crate::operation::list_license_manager_report_generators::ListLicenseManagerReportGeneratorsOutput::report_generators): <p>A report generator that creates periodic reports about your license configurations.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_license_manager_report_generators::ListLicenseManagerReportGeneratorsOutput::next_token): <p>Token for the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListLicenseManagerReportGeneratorsError>`](crate::operation::list_license_manager_report_generators::ListLicenseManagerReportGeneratorsError)
    pub fn list_license_manager_report_generators(&self) -> crate::operation::list_license_manager_report_generators::builders::ListLicenseManagerReportGeneratorsFluentBuilder{
        crate::operation::list_license_manager_report_generators::builders::ListLicenseManagerReportGeneratorsFluentBuilder::new(self.handle.clone())
    }
}
