// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListLicenseSpecificationsForResource`](crate::client::fluent_builders::ListLicenseSpecificationsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListLicenseSpecificationsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListLicenseSpecificationsForResource::set_resource_arn): <p>Amazon Resource Name (ARN) of a resource that has an associated license configuration.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListLicenseSpecificationsForResource::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListLicenseSpecificationsForResource::set_max_results): <p>Maximum number of results to return in a single call.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListLicenseSpecificationsForResource::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListLicenseSpecificationsForResource::set_next_token): <p>Token for the next set of results.</p>
    /// - On success, responds with [`ListLicenseSpecificationsForResourceOutput`](crate::output::ListLicenseSpecificationsForResourceOutput) with field(s):
    ///   - [`license_specifications(Option<Vec<LicenseSpecification>>)`](crate::output::ListLicenseSpecificationsForResourceOutput::license_specifications): <p>License configurations associated with a resource.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListLicenseSpecificationsForResourceOutput::next_token): <p>Token for the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListLicenseSpecificationsForResourceError>`](crate::error::ListLicenseSpecificationsForResourceError)
    pub fn list_license_specifications_for_resource(
        &self,
    ) -> crate::client::fluent_builders::ListLicenseSpecificationsForResource {
        crate::client::fluent_builders::ListLicenseSpecificationsForResource::new(
            self.handle.clone(),
        )
    }
}
