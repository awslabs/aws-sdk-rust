// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CheckInLicense`](crate::client::fluent_builders::CheckInLicense) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`license_consumption_token(impl Into<String>)`](crate::client::fluent_builders::CheckInLicense::license_consumption_token) / [`set_license_consumption_token(Option<String>)`](crate::client::fluent_builders::CheckInLicense::set_license_consumption_token): <p>License consumption token.</p>
    ///   - [`beneficiary(impl Into<String>)`](crate::client::fluent_builders::CheckInLicense::beneficiary) / [`set_beneficiary(Option<String>)`](crate::client::fluent_builders::CheckInLicense::set_beneficiary): <p>License beneficiary.</p>
    /// - On success, responds with [`CheckInLicenseOutput`](crate::output::CheckInLicenseOutput)
    /// - On failure, responds with [`SdkError<CheckInLicenseError>`](crate::error::CheckInLicenseError)
    pub fn check_in_license(&self) -> crate::client::fluent_builders::CheckInLicense {
        crate::client::fluent_builders::CheckInLicense::new(self.handle.clone())
    }
}
