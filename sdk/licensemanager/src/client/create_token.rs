// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateToken`](crate::client::fluent_builders::CreateToken) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`license_arn(impl Into<String>)`](crate::client::fluent_builders::CreateToken::license_arn) / [`set_license_arn(Option<String>)`](crate::client::fluent_builders::CreateToken::set_license_arn): <p>Amazon Resource Name (ARN) of the license. The ARN is mapped to the aud claim of the JWT token.</p>
    ///   - [`role_arns(Vec<String>)`](crate::client::fluent_builders::CreateToken::role_arns) / [`set_role_arns(Option<Vec<String>>)`](crate::client::fluent_builders::CreateToken::set_role_arns): <p>Amazon Resource Name (ARN) of the IAM roles to embed in the token. License Manager does not check whether the roles are in use.</p>
    ///   - [`expiration_in_days(i32)`](crate::client::fluent_builders::CreateToken::expiration_in_days) / [`set_expiration_in_days(Option<i32>)`](crate::client::fluent_builders::CreateToken::set_expiration_in_days): <p>Token expiration, in days, counted from token creation. The default is 365 days.</p>
    ///   - [`token_properties(Vec<String>)`](crate::client::fluent_builders::CreateToken::token_properties) / [`set_token_properties(Option<Vec<String>>)`](crate::client::fluent_builders::CreateToken::set_token_properties): <p>Data specified by the caller to be included in the JWT token. The data is mapped to the amr claim of the JWT token.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateToken::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateToken::set_client_token): <p>Idempotency token, valid for 10 minutes.</p>
    /// - On success, responds with [`CreateTokenOutput`](crate::output::CreateTokenOutput) with field(s):
    ///   - [`token_id(Option<String>)`](crate::output::CreateTokenOutput::token_id): <p>Token ID.</p>
    ///   - [`token_type(Option<TokenType>)`](crate::output::CreateTokenOutput::token_type): <p>Token type.</p>
    ///   - [`token(Option<String>)`](crate::output::CreateTokenOutput::token): <p>Refresh token, encoded as a JWT token.</p>
    /// - On failure, responds with [`SdkError<CreateTokenError>`](crate::error::CreateTokenError)
    pub fn create_token(&self) -> crate::client::fluent_builders::CreateToken {
        crate::client::fluent_builders::CreateToken::new(self.handle.clone())
    }
}
