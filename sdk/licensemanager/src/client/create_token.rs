// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateToken`](crate::operation::create_token::builders::CreateTokenFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`license_arn(impl Into<String>)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::license_arn) / [`set_license_arn(Option<String>)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::set_license_arn):<br>required: **true**<br><p>Amazon Resource Name (ARN) of the license. The ARN is mapped to the aud claim of the JWT token.</p><br>
    ///   - [`role_arns(impl Into<String>)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::role_arns) / [`set_role_arns(Option<Vec::<String>>)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::set_role_arns):<br>required: **false**<br><p>Amazon Resource Name (ARN) of the IAM roles to embed in the token. License Manager does not check whether the roles are in use.</p><br>
    ///   - [`expiration_in_days(i32)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::expiration_in_days) / [`set_expiration_in_days(Option<i32>)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::set_expiration_in_days):<br>required: **false**<br><p>Token expiration, in days, counted from token creation. The default is 365 days.</p><br>
    ///   - [`token_properties(impl Into<String>)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::token_properties) / [`set_token_properties(Option<Vec::<String>>)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::set_token_properties):<br>required: **false**<br><p>Data specified by the caller to be included in the JWT token. The data is mapped to the amr claim of the JWT token.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_token::builders::CreateTokenFluentBuilder::set_client_token):<br>required: **true**<br><p>Idempotency token, valid for 10 minutes.</p><br>
    /// - On success, responds with [`CreateTokenOutput`](crate::operation::create_token::CreateTokenOutput) with field(s):
    ///   - [`token_id(Option<String>)`](crate::operation::create_token::CreateTokenOutput::token_id): <p>Token ID.</p>
    ///   - [`token_type(Option<TokenType>)`](crate::operation::create_token::CreateTokenOutput::token_type): <p>Token type.</p>
    ///   - [`token(Option<String>)`](crate::operation::create_token::CreateTokenOutput::token): <p>Refresh token, encoded as a JWT token.</p>
    /// - On failure, responds with [`SdkError<CreateTokenError>`](crate::operation::create_token::CreateTokenError)
    pub fn create_token(&self) -> crate::operation::create_token::builders::CreateTokenFluentBuilder {
        crate::operation::create_token::builders::CreateTokenFluentBuilder::new(self.handle.clone())
    }
}
