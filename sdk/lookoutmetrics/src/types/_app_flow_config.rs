// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about an Amazon AppFlow flow datasource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AppFlowConfig {
    /// <p>An IAM role that gives Amazon Lookout for Metrics permission to access the flow.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
    /// <p> name of the flow.</p>
    #[doc(hidden)]
    pub flow_name: std::option::Option<std::string::String>,
}
impl AppFlowConfig {
    /// <p>An IAM role that gives Amazon Lookout for Metrics permission to access the flow.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p> name of the flow.</p>
    pub fn flow_name(&self) -> std::option::Option<&str> {
        self.flow_name.as_deref()
    }
}
impl AppFlowConfig {
    /// Creates a new builder-style object to manufacture [`AppFlowConfig`](crate::types::AppFlowConfig).
    pub fn builder() -> crate::types::builders::AppFlowConfigBuilder {
        crate::types::builders::AppFlowConfigBuilder::default()
    }
}

/// A builder for [`AppFlowConfig`](crate::types::AppFlowConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AppFlowConfigBuilder {
    pub(crate) role_arn: std::option::Option<std::string::String>,
    pub(crate) flow_name: std::option::Option<std::string::String>,
}
impl AppFlowConfigBuilder {
    /// <p>An IAM role that gives Amazon Lookout for Metrics permission to access the flow.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>An IAM role that gives Amazon Lookout for Metrics permission to access the flow.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p> name of the flow.</p>
    pub fn flow_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.flow_name = Some(input.into());
        self
    }
    /// <p> name of the flow.</p>
    pub fn set_flow_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.flow_name = input;
        self
    }
    /// Consumes the builder and constructs a [`AppFlowConfig`](crate::types::AppFlowConfig).
    pub fn build(self) -> crate::types::AppFlowConfig {
        crate::types::AppFlowConfig {
            role_arn: self.role_arn,
            flow_name: self.flow_name,
        }
    }
}
