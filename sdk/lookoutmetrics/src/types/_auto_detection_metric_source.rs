// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An auto detection metric source.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AutoDetectionMetricSource {
    /// <p>The source's source config.</p>
    #[doc(hidden)]
    pub s3_source_config: std::option::Option<crate::types::AutoDetectionS3SourceConfig>,
}
impl AutoDetectionMetricSource {
    /// <p>The source's source config.</p>
    pub fn s3_source_config(
        &self,
    ) -> std::option::Option<&crate::types::AutoDetectionS3SourceConfig> {
        self.s3_source_config.as_ref()
    }
}
impl AutoDetectionMetricSource {
    /// Creates a new builder-style object to manufacture [`AutoDetectionMetricSource`](crate::types::AutoDetectionMetricSource).
    pub fn builder() -> crate::types::builders::AutoDetectionMetricSourceBuilder {
        crate::types::builders::AutoDetectionMetricSourceBuilder::default()
    }
}

/// A builder for [`AutoDetectionMetricSource`](crate::types::AutoDetectionMetricSource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AutoDetectionMetricSourceBuilder {
    pub(crate) s3_source_config: std::option::Option<crate::types::AutoDetectionS3SourceConfig>,
}
impl AutoDetectionMetricSourceBuilder {
    /// <p>The source's source config.</p>
    pub fn s3_source_config(mut self, input: crate::types::AutoDetectionS3SourceConfig) -> Self {
        self.s3_source_config = Some(input);
        self
    }
    /// <p>The source's source config.</p>
    pub fn set_s3_source_config(
        mut self,
        input: std::option::Option<crate::types::AutoDetectionS3SourceConfig>,
    ) -> Self {
        self.s3_source_config = input;
        self
    }
    /// Consumes the builder and constructs a [`AutoDetectionMetricSource`](crate::types::AutoDetectionMetricSource).
    pub fn build(self) -> crate::types::AutoDetectionMetricSource {
        crate::types::AutoDetectionMetricSource {
            s3_source_config: self.s3_source_config,
        }
    }
}
