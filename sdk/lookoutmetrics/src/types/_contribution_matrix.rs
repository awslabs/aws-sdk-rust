// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about dimensions that contributed to an anomaly.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ContributionMatrix {
    /// <p>A list of contributing dimensions.</p>
    #[doc(hidden)]
    pub dimension_contribution_list:
        std::option::Option<std::vec::Vec<crate::types::DimensionContribution>>,
}
impl ContributionMatrix {
    /// <p>A list of contributing dimensions.</p>
    pub fn dimension_contribution_list(
        &self,
    ) -> std::option::Option<&[crate::types::DimensionContribution]> {
        self.dimension_contribution_list.as_deref()
    }
}
impl ContributionMatrix {
    /// Creates a new builder-style object to manufacture [`ContributionMatrix`](crate::types::ContributionMatrix).
    pub fn builder() -> crate::types::builders::ContributionMatrixBuilder {
        crate::types::builders::ContributionMatrixBuilder::default()
    }
}

/// A builder for [`ContributionMatrix`](crate::types::ContributionMatrix).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ContributionMatrixBuilder {
    pub(crate) dimension_contribution_list:
        std::option::Option<std::vec::Vec<crate::types::DimensionContribution>>,
}
impl ContributionMatrixBuilder {
    /// Appends an item to `dimension_contribution_list`.
    ///
    /// To override the contents of this collection use [`set_dimension_contribution_list`](Self::set_dimension_contribution_list).
    ///
    /// <p>A list of contributing dimensions.</p>
    pub fn dimension_contribution_list(
        mut self,
        input: crate::types::DimensionContribution,
    ) -> Self {
        let mut v = self.dimension_contribution_list.unwrap_or_default();
        v.push(input);
        self.dimension_contribution_list = Some(v);
        self
    }
    /// <p>A list of contributing dimensions.</p>
    pub fn set_dimension_contribution_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DimensionContribution>>,
    ) -> Self {
        self.dimension_contribution_list = input;
        self
    }
    /// Consumes the builder and constructs a [`ContributionMatrix`](crate::types::ContributionMatrix).
    pub fn build(self) -> crate::types::ContributionMatrix {
        crate::types::ContributionMatrix {
            dimension_contribution_list: self.dimension_contribution_list,
        }
    }
}
