// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of the alert filters.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AlertFilters {
    /// <p>The list of measures that you want to get alerts for.</p>
    #[doc(hidden)]
    pub metric_list: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The list of DimensionFilter objects that are used for dimension-based filtering.</p>
    #[doc(hidden)]
    pub dimension_filter_list: std::option::Option<std::vec::Vec<crate::types::DimensionFilter>>,
}
impl AlertFilters {
    /// <p>The list of measures that you want to get alerts for.</p>
    pub fn metric_list(&self) -> std::option::Option<&[std::string::String]> {
        self.metric_list.as_deref()
    }
    /// <p>The list of DimensionFilter objects that are used for dimension-based filtering.</p>
    pub fn dimension_filter_list(&self) -> std::option::Option<&[crate::types::DimensionFilter]> {
        self.dimension_filter_list.as_deref()
    }
}
impl AlertFilters {
    /// Creates a new builder-style object to manufacture [`AlertFilters`](crate::types::AlertFilters).
    pub fn builder() -> crate::types::builders::AlertFiltersBuilder {
        crate::types::builders::AlertFiltersBuilder::default()
    }
}

/// A builder for [`AlertFilters`](crate::types::AlertFilters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AlertFiltersBuilder {
    pub(crate) metric_list: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) dimension_filter_list:
        std::option::Option<std::vec::Vec<crate::types::DimensionFilter>>,
}
impl AlertFiltersBuilder {
    /// Appends an item to `metric_list`.
    ///
    /// To override the contents of this collection use [`set_metric_list`](Self::set_metric_list).
    ///
    /// <p>The list of measures that you want to get alerts for.</p>
    pub fn metric_list(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.metric_list.unwrap_or_default();
        v.push(input.into());
        self.metric_list = Some(v);
        self
    }
    /// <p>The list of measures that you want to get alerts for.</p>
    pub fn set_metric_list(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.metric_list = input;
        self
    }
    /// Appends an item to `dimension_filter_list`.
    ///
    /// To override the contents of this collection use [`set_dimension_filter_list`](Self::set_dimension_filter_list).
    ///
    /// <p>The list of DimensionFilter objects that are used for dimension-based filtering.</p>
    pub fn dimension_filter_list(mut self, input: crate::types::DimensionFilter) -> Self {
        let mut v = self.dimension_filter_list.unwrap_or_default();
        v.push(input);
        self.dimension_filter_list = Some(v);
        self
    }
    /// <p>The list of DimensionFilter objects that are used for dimension-based filtering.</p>
    pub fn set_dimension_filter_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DimensionFilter>>,
    ) -> Self {
        self.dimension_filter_list = input;
        self
    }
    /// Consumes the builder and constructs a [`AlertFilters`](crate::types::AlertFilters).
    pub fn build(self) -> crate::types::AlertFilters {
        crate::types::AlertFilters {
            metric_list: self.metric_list,
            dimension_filter_list: self.dimension_filter_list,
        }
    }
}
