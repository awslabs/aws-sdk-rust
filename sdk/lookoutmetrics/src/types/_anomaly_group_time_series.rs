// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An anomalous metric in an anomaly group.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AnomalyGroupTimeSeries {
    /// <p>The ID of the anomaly group.</p>
    #[doc(hidden)]
    pub anomaly_group_id: std::option::Option<std::string::String>,
    /// <p>The ID of the metric.</p>
    #[doc(hidden)]
    pub time_series_id: std::option::Option<std::string::String>,
}
impl AnomalyGroupTimeSeries {
    /// <p>The ID of the anomaly group.</p>
    pub fn anomaly_group_id(&self) -> std::option::Option<&str> {
        self.anomaly_group_id.as_deref()
    }
    /// <p>The ID of the metric.</p>
    pub fn time_series_id(&self) -> std::option::Option<&str> {
        self.time_series_id.as_deref()
    }
}
impl AnomalyGroupTimeSeries {
    /// Creates a new builder-style object to manufacture [`AnomalyGroupTimeSeries`](crate::types::AnomalyGroupTimeSeries).
    pub fn builder() -> crate::types::builders::AnomalyGroupTimeSeriesBuilder {
        crate::types::builders::AnomalyGroupTimeSeriesBuilder::default()
    }
}

/// A builder for [`AnomalyGroupTimeSeries`](crate::types::AnomalyGroupTimeSeries).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AnomalyGroupTimeSeriesBuilder {
    pub(crate) anomaly_group_id: std::option::Option<std::string::String>,
    pub(crate) time_series_id: std::option::Option<std::string::String>,
}
impl AnomalyGroupTimeSeriesBuilder {
    /// <p>The ID of the anomaly group.</p>
    pub fn anomaly_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.anomaly_group_id = Some(input.into());
        self
    }
    /// <p>The ID of the anomaly group.</p>
    pub fn set_anomaly_group_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.anomaly_group_id = input;
        self
    }
    /// <p>The ID of the metric.</p>
    pub fn time_series_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.time_series_id = Some(input.into());
        self
    }
    /// <p>The ID of the metric.</p>
    pub fn set_time_series_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.time_series_id = input;
        self
    }
    /// Consumes the builder and constructs a [`AnomalyGroupTimeSeries`](crate::types::AnomalyGroupTimeSeries).
    pub fn build(self) -> crate::types::AnomalyGroupTimeSeries {
        crate::types::AnomalyGroupTimeSeries {
            anomaly_group_id: self.anomaly_group_id,
            time_series_id: self.time_series_id,
        }
    }
}
