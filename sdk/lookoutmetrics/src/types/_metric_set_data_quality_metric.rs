// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An array of <code>DataQualityMetric</code> objects that describes one or more data quality metrics.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MetricSetDataQualityMetric {
    /// <p>The Amazon Resource Name (ARN) of the data quality metric array.</p>
    pub metric_set_arn: ::std::option::Option<::std::string::String>,
    /// <p>The array of data quality metrics contained in the data quality metric set.</p>
    pub data_quality_metric_list: ::std::option::Option<::std::vec::Vec<crate::types::DataQualityMetric>>,
}
impl MetricSetDataQualityMetric {
    /// <p>The Amazon Resource Name (ARN) of the data quality metric array.</p>
    pub fn metric_set_arn(&self) -> ::std::option::Option<&str> {
        self.metric_set_arn.as_deref()
    }
    /// <p>The array of data quality metrics contained in the data quality metric set.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.data_quality_metric_list.is_none()`.
    pub fn data_quality_metric_list(&self) -> &[crate::types::DataQualityMetric] {
        self.data_quality_metric_list.as_deref().unwrap_or_default()
    }
}
impl MetricSetDataQualityMetric {
    /// Creates a new builder-style object to manufacture [`MetricSetDataQualityMetric`](crate::types::MetricSetDataQualityMetric).
    pub fn builder() -> crate::types::builders::MetricSetDataQualityMetricBuilder {
        crate::types::builders::MetricSetDataQualityMetricBuilder::default()
    }
}

/// A builder for [`MetricSetDataQualityMetric`](crate::types::MetricSetDataQualityMetric).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MetricSetDataQualityMetricBuilder {
    pub(crate) metric_set_arn: ::std::option::Option<::std::string::String>,
    pub(crate) data_quality_metric_list: ::std::option::Option<::std::vec::Vec<crate::types::DataQualityMetric>>,
}
impl MetricSetDataQualityMetricBuilder {
    /// <p>The Amazon Resource Name (ARN) of the data quality metric array.</p>
    pub fn metric_set_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.metric_set_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the data quality metric array.</p>
    pub fn set_metric_set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.metric_set_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the data quality metric array.</p>
    pub fn get_metric_set_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.metric_set_arn
    }
    /// Appends an item to `data_quality_metric_list`.
    ///
    /// To override the contents of this collection use [`set_data_quality_metric_list`](Self::set_data_quality_metric_list).
    ///
    /// <p>The array of data quality metrics contained in the data quality metric set.</p>
    pub fn data_quality_metric_list(mut self, input: crate::types::DataQualityMetric) -> Self {
        let mut v = self.data_quality_metric_list.unwrap_or_default();
        v.push(input);
        self.data_quality_metric_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>The array of data quality metrics contained in the data quality metric set.</p>
    pub fn set_data_quality_metric_list(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::DataQualityMetric>>) -> Self {
        self.data_quality_metric_list = input;
        self
    }
    /// <p>The array of data quality metrics contained in the data quality metric set.</p>
    pub fn get_data_quality_metric_list(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DataQualityMetric>> {
        &self.data_quality_metric_list
    }
    /// Consumes the builder and constructs a [`MetricSetDataQualityMetric`](crate::types::MetricSetDataQualityMetric).
    pub fn build(self) -> crate::types::MetricSetDataQualityMetric {
        crate::types::MetricSetDataQualityMetric {
            metric_set_arn: self.metric_set_arn,
            data_quality_metric_list: self.data_quality_metric_list,
        }
    }
}
