// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The severity of a value of a dimension that contributed to an anomaly.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DimensionValueContribution {
    /// <p>The value of the dimension.</p>
    #[doc(hidden)]
    pub dimension_value: std::option::Option<std::string::String>,
    /// <p>The severity score of the value.</p>
    #[doc(hidden)]
    pub contribution_score: std::option::Option<f64>,
}
impl DimensionValueContribution {
    /// <p>The value of the dimension.</p>
    pub fn dimension_value(&self) -> std::option::Option<&str> {
        self.dimension_value.as_deref()
    }
    /// <p>The severity score of the value.</p>
    pub fn contribution_score(&self) -> std::option::Option<f64> {
        self.contribution_score
    }
}
impl DimensionValueContribution {
    /// Creates a new builder-style object to manufacture [`DimensionValueContribution`](crate::types::DimensionValueContribution).
    pub fn builder() -> crate::types::builders::DimensionValueContributionBuilder {
        crate::types::builders::DimensionValueContributionBuilder::default()
    }
}

/// A builder for [`DimensionValueContribution`](crate::types::DimensionValueContribution).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DimensionValueContributionBuilder {
    pub(crate) dimension_value: std::option::Option<std::string::String>,
    pub(crate) contribution_score: std::option::Option<f64>,
}
impl DimensionValueContributionBuilder {
    /// <p>The value of the dimension.</p>
    pub fn dimension_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.dimension_value = Some(input.into());
        self
    }
    /// <p>The value of the dimension.</p>
    pub fn set_dimension_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.dimension_value = input;
        self
    }
    /// <p>The severity score of the value.</p>
    pub fn contribution_score(mut self, input: f64) -> Self {
        self.contribution_score = Some(input);
        self
    }
    /// <p>The severity score of the value.</p>
    pub fn set_contribution_score(mut self, input: std::option::Option<f64>) -> Self {
        self.contribution_score = input;
        self
    }
    /// Consumes the builder and constructs a [`DimensionValueContribution`](crate::types::DimensionValueContribution).
    pub fn build(self) -> crate::types::DimensionValueContribution {
        crate::types::DimensionValueContribution {
            dimension_value: self.dimension_value,
            contribution_score: self.contribution_score,
        }
    }
}
