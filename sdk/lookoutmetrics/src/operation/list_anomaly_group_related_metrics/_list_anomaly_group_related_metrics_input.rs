// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListAnomalyGroupRelatedMetricsInput {
    /// <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    pub anomaly_detector_arn: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the anomaly group.</p>
    pub anomaly_group_id: ::std::option::Option<::std::string::String>,
    /// <p>Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.</p>
    pub relationship_type_filter: ::std::option::Option<crate::types::RelationshipType>,
    /// <p>The maximum number of results to return.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListAnomalyGroupRelatedMetricsInput {
    /// <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    pub fn anomaly_detector_arn(&self) -> ::std::option::Option<&str> {
        self.anomaly_detector_arn.as_deref()
    }
    /// <p>The ID of the anomaly group.</p>
    pub fn anomaly_group_id(&self) -> ::std::option::Option<&str> {
        self.anomaly_group_id.as_deref()
    }
    /// <p>Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.</p>
    pub fn relationship_type_filter(&self) -> ::std::option::Option<&crate::types::RelationshipType> {
        self.relationship_type_filter.as_ref()
    }
    /// <p>The maximum number of results to return.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListAnomalyGroupRelatedMetricsInput {
    /// Creates a new builder-style object to manufacture [`ListAnomalyGroupRelatedMetricsInput`](crate::operation::list_anomaly_group_related_metrics::ListAnomalyGroupRelatedMetricsInput).
    pub fn builder() -> crate::operation::list_anomaly_group_related_metrics::builders::ListAnomalyGroupRelatedMetricsInputBuilder {
        crate::operation::list_anomaly_group_related_metrics::builders::ListAnomalyGroupRelatedMetricsInputBuilder::default()
    }
}

/// A builder for [`ListAnomalyGroupRelatedMetricsInput`](crate::operation::list_anomaly_group_related_metrics::ListAnomalyGroupRelatedMetricsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListAnomalyGroupRelatedMetricsInputBuilder {
    pub(crate) anomaly_detector_arn: ::std::option::Option<::std::string::String>,
    pub(crate) anomaly_group_id: ::std::option::Option<::std::string::String>,
    pub(crate) relationship_type_filter: ::std::option::Option<crate::types::RelationshipType>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListAnomalyGroupRelatedMetricsInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    /// This field is required.
    pub fn anomaly_detector_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.anomaly_detector_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    pub fn set_anomaly_detector_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.anomaly_detector_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    pub fn get_anomaly_detector_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.anomaly_detector_arn
    }
    /// <p>The ID of the anomaly group.</p>
    /// This field is required.
    pub fn anomaly_group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.anomaly_group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the anomaly group.</p>
    pub fn set_anomaly_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.anomaly_group_id = input;
        self
    }
    /// <p>The ID of the anomaly group.</p>
    pub fn get_anomaly_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.anomaly_group_id
    }
    /// <p>Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.</p>
    pub fn relationship_type_filter(mut self, input: crate::types::RelationshipType) -> Self {
        self.relationship_type_filter = ::std::option::Option::Some(input);
        self
    }
    /// <p>Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.</p>
    pub fn set_relationship_type_filter(mut self, input: ::std::option::Option<crate::types::RelationshipType>) -> Self {
        self.relationship_type_filter = input;
        self
    }
    /// <p>Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.</p>
    pub fn get_relationship_type_filter(&self) -> &::std::option::Option<crate::types::RelationshipType> {
        &self.relationship_type_filter
    }
    /// <p>The maximum number of results to return.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of results to return.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of results to return.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListAnomalyGroupRelatedMetricsInput`](crate::operation::list_anomaly_group_related_metrics::ListAnomalyGroupRelatedMetricsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_anomaly_group_related_metrics::ListAnomalyGroupRelatedMetricsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::list_anomaly_group_related_metrics::ListAnomalyGroupRelatedMetricsInput {
                anomaly_detector_arn: self.anomaly_detector_arn,
                anomaly_group_id: self.anomaly_group_id,
                relationship_type_filter: self.relationship_type_filter,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
