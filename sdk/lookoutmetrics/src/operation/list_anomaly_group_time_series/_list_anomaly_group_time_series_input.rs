// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListAnomalyGroupTimeSeriesInput {
    /// <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    #[doc(hidden)]
    pub anomaly_detector_arn: std::option::Option<std::string::String>,
    /// <p>The ID of the anomaly group.</p>
    #[doc(hidden)]
    pub anomaly_group_id: std::option::Option<std::string::String>,
    /// <p>The name of the measure field.</p>
    #[doc(hidden)]
    pub metric_name: std::option::Option<std::string::String>,
    /// <p>The maximum number of results to return.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListAnomalyGroupTimeSeriesInput {
    /// <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    pub fn anomaly_detector_arn(&self) -> std::option::Option<&str> {
        self.anomaly_detector_arn.as_deref()
    }
    /// <p>The ID of the anomaly group.</p>
    pub fn anomaly_group_id(&self) -> std::option::Option<&str> {
        self.anomaly_group_id.as_deref()
    }
    /// <p>The name of the measure field.</p>
    pub fn metric_name(&self) -> std::option::Option<&str> {
        self.metric_name.as_deref()
    }
    /// <p>The maximum number of results to return.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListAnomalyGroupTimeSeriesInput {
    /// Creates a new builder-style object to manufacture [`ListAnomalyGroupTimeSeriesInput`](crate::operation::list_anomaly_group_time_series::ListAnomalyGroupTimeSeriesInput).
    pub fn builder() -> crate::operation::list_anomaly_group_time_series::builders::ListAnomalyGroupTimeSeriesInputBuilder{
        crate::operation::list_anomaly_group_time_series::builders::ListAnomalyGroupTimeSeriesInputBuilder::default()
    }
}

/// A builder for [`ListAnomalyGroupTimeSeriesInput`](crate::operation::list_anomaly_group_time_series::ListAnomalyGroupTimeSeriesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListAnomalyGroupTimeSeriesInputBuilder {
    pub(crate) anomaly_detector_arn: std::option::Option<std::string::String>,
    pub(crate) anomaly_group_id: std::option::Option<std::string::String>,
    pub(crate) metric_name: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListAnomalyGroupTimeSeriesInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    pub fn anomaly_detector_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.anomaly_detector_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    pub fn set_anomaly_detector_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.anomaly_detector_arn = input;
        self
    }
    /// <p>The ID of the anomaly group.</p>
    pub fn anomaly_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.anomaly_group_id = Some(input.into());
        self
    }
    /// <p>The ID of the anomaly group.</p>
    pub fn set_anomaly_group_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.anomaly_group_id = input;
        self
    }
    /// <p>The name of the measure field.</p>
    pub fn metric_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.metric_name = Some(input.into());
        self
    }
    /// <p>The name of the measure field.</p>
    pub fn set_metric_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.metric_name = input;
        self
    }
    /// <p>The maximum number of results to return.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to return.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListAnomalyGroupTimeSeriesInput`](crate::operation::list_anomaly_group_time_series::ListAnomalyGroupTimeSeriesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_anomaly_group_time_series::ListAnomalyGroupTimeSeriesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_anomaly_group_time_series::ListAnomalyGroupTimeSeriesInput {
                anomaly_detector_arn: self.anomaly_detector_arn,
                anomaly_group_id: self.anomaly_group_id,
                metric_name: self.metric_name,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
