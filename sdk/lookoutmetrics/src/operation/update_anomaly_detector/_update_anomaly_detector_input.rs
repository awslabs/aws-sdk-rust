// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateAnomalyDetectorInput {
    /// <p>The ARN of the detector to update.</p>
    #[doc(hidden)]
    pub anomaly_detector_arn: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of an AWS KMS encryption key.</p>
    #[doc(hidden)]
    pub kms_key_arn: std::option::Option<std::string::String>,
    /// <p>The updated detector description.</p>
    #[doc(hidden)]
    pub anomaly_detector_description: std::option::Option<std::string::String>,
    /// <p>Contains information about the configuration to which the detector will be updated.</p>
    #[doc(hidden)]
    pub anomaly_detector_config: std::option::Option<crate::types::AnomalyDetectorConfig>,
}
impl UpdateAnomalyDetectorInput {
    /// <p>The ARN of the detector to update.</p>
    pub fn anomaly_detector_arn(&self) -> std::option::Option<&str> {
        self.anomaly_detector_arn.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of an AWS KMS encryption key.</p>
    pub fn kms_key_arn(&self) -> std::option::Option<&str> {
        self.kms_key_arn.as_deref()
    }
    /// <p>The updated detector description.</p>
    pub fn anomaly_detector_description(&self) -> std::option::Option<&str> {
        self.anomaly_detector_description.as_deref()
    }
    /// <p>Contains information about the configuration to which the detector will be updated.</p>
    pub fn anomaly_detector_config(
        &self,
    ) -> std::option::Option<&crate::types::AnomalyDetectorConfig> {
        self.anomaly_detector_config.as_ref()
    }
}
impl UpdateAnomalyDetectorInput {
    /// Creates a new builder-style object to manufacture [`UpdateAnomalyDetectorInput`](crate::operation::update_anomaly_detector::UpdateAnomalyDetectorInput).
    pub fn builder(
    ) -> crate::operation::update_anomaly_detector::builders::UpdateAnomalyDetectorInputBuilder
    {
        crate::operation::update_anomaly_detector::builders::UpdateAnomalyDetectorInputBuilder::default()
    }
}

/// A builder for [`UpdateAnomalyDetectorInput`](crate::operation::update_anomaly_detector::UpdateAnomalyDetectorInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateAnomalyDetectorInputBuilder {
    pub(crate) anomaly_detector_arn: std::option::Option<std::string::String>,
    pub(crate) kms_key_arn: std::option::Option<std::string::String>,
    pub(crate) anomaly_detector_description: std::option::Option<std::string::String>,
    pub(crate) anomaly_detector_config: std::option::Option<crate::types::AnomalyDetectorConfig>,
}
impl UpdateAnomalyDetectorInputBuilder {
    /// <p>The ARN of the detector to update.</p>
    pub fn anomaly_detector_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.anomaly_detector_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the detector to update.</p>
    pub fn set_anomaly_detector_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.anomaly_detector_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an AWS KMS encryption key.</p>
    pub fn kms_key_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.kms_key_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an AWS KMS encryption key.</p>
    pub fn set_kms_key_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.kms_key_arn = input;
        self
    }
    /// <p>The updated detector description.</p>
    pub fn anomaly_detector_description(mut self, input: impl Into<std::string::String>) -> Self {
        self.anomaly_detector_description = Some(input.into());
        self
    }
    /// <p>The updated detector description.</p>
    pub fn set_anomaly_detector_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.anomaly_detector_description = input;
        self
    }
    /// <p>Contains information about the configuration to which the detector will be updated.</p>
    pub fn anomaly_detector_config(mut self, input: crate::types::AnomalyDetectorConfig) -> Self {
        self.anomaly_detector_config = Some(input);
        self
    }
    /// <p>Contains information about the configuration to which the detector will be updated.</p>
    pub fn set_anomaly_detector_config(
        mut self,
        input: std::option::Option<crate::types::AnomalyDetectorConfig>,
    ) -> Self {
        self.anomaly_detector_config = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateAnomalyDetectorInput`](crate::operation::update_anomaly_detector::UpdateAnomalyDetectorInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_anomaly_detector::UpdateAnomalyDetectorInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_anomaly_detector::UpdateAnomalyDetectorInput {
                anomaly_detector_arn: self.anomaly_detector_arn,
                kms_key_arn: self.kms_key_arn,
                anomaly_detector_description: self.anomaly_detector_description,
                anomaly_detector_config: self.anomaly_detector_config,
            },
        )
    }
}
