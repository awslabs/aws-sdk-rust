// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_describe_anomaly_detection_executions_output_next_token(
    input: &crate::operation::describe_anomaly_detection_executions::DescribeAnomalyDetectionExecutionsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_get_feedback_output_next_token(
    input: &crate::operation::get_feedback::GetFeedbackOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_alerts_output_next_token(
    input: &crate::operation::list_alerts::ListAlertsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_anomaly_detectors_output_next_token(
    input: &crate::operation::list_anomaly_detectors::ListAnomalyDetectorsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_anomaly_group_related_metrics_output_next_token(
    input: &crate::operation::list_anomaly_group_related_metrics::ListAnomalyGroupRelatedMetricsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_anomaly_group_summaries_output_next_token(
    input: &crate::operation::list_anomaly_group_summaries::ListAnomalyGroupSummariesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_anomaly_group_time_series_output_next_token(
    input: &crate::operation::list_anomaly_group_time_series::ListAnomalyGroupTimeSeriesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_metric_sets_output_next_token(
    input: &crate::operation::list_metric_sets::ListMetricSetsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
