// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon Lookout for Metrics
///
/// Client for invoking operations on Amazon Lookout for Metrics. Each operation on Amazon Lookout for Metrics is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_lookoutmetrics::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_lookoutmetrics::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_lookoutmetrics::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`ActivateAnomalyDetector`](crate::client::fluent_builders::ActivateAnomalyDetector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::ActivateAnomalyDetector::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::ActivateAnomalyDetector::set_anomaly_detector_arn): <p>The ARN of the anomaly detector.</p>
    /// - On success, responds with [`ActivateAnomalyDetectorOutput`](crate::output::ActivateAnomalyDetectorOutput)

    /// - On failure, responds with [`SdkError<ActivateAnomalyDetectorError>`](crate::error::ActivateAnomalyDetectorError)
    pub fn activate_anomaly_detector(
        &self,
    ) -> crate::client::fluent_builders::ActivateAnomalyDetector {
        crate::client::fluent_builders::ActivateAnomalyDetector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BackTestAnomalyDetector`](crate::client::fluent_builders::BackTestAnomalyDetector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::BackTestAnomalyDetector::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::BackTestAnomalyDetector::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    /// - On success, responds with [`BackTestAnomalyDetectorOutput`](crate::output::BackTestAnomalyDetectorOutput)

    /// - On failure, responds with [`SdkError<BackTestAnomalyDetectorError>`](crate::error::BackTestAnomalyDetectorError)
    pub fn back_test_anomaly_detector(
        &self,
    ) -> crate::client::fluent_builders::BackTestAnomalyDetector {
        crate::client::fluent_builders::BackTestAnomalyDetector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateAlert`](crate::client::fluent_builders::CreateAlert) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alert_name(impl Into<String>)`](crate::client::fluent_builders::CreateAlert::alert_name) / [`set_alert_name(Option<String>)`](crate::client::fluent_builders::CreateAlert::set_alert_name): <p>The name of the alert.</p>
    ///   - [`alert_sensitivity_threshold(i32)`](crate::client::fluent_builders::CreateAlert::alert_sensitivity_threshold) / [`set_alert_sensitivity_threshold(i32)`](crate::client::fluent_builders::CreateAlert::set_alert_sensitivity_threshold): <p>An integer from 0 to 100 specifying the alert sensitivity threshold.</p>
    ///   - [`alert_description(impl Into<String>)`](crate::client::fluent_builders::CreateAlert::alert_description) / [`set_alert_description(Option<String>)`](crate::client::fluent_builders::CreateAlert::set_alert_description): <p>A description of the alert.</p>
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::CreateAlert::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::CreateAlert::set_anomaly_detector_arn): <p>The ARN of the detector to which the alert is attached.</p>
    ///   - [`action(Action)`](crate::client::fluent_builders::CreateAlert::action) / [`set_action(Option<Action>)`](crate::client::fluent_builders::CreateAlert::set_action): <p>Action that will be triggered when there is an alert.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateAlert::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateAlert::set_tags): <p>A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the alert.</p>
    ///   - [`alert_filters(AlertFilters)`](crate::client::fluent_builders::CreateAlert::alert_filters) / [`set_alert_filters(Option<AlertFilters>)`](crate::client::fluent_builders::CreateAlert::set_alert_filters): <p>The configuration of the alert filters, containing MetricList and DimensionFilterList.</p>
    /// - On success, responds with [`CreateAlertOutput`](crate::output::CreateAlertOutput) with field(s):
    ///   - [`alert_arn(Option<String>)`](crate::output::CreateAlertOutput::alert_arn): <p>The ARN of the alert.</p>
    /// - On failure, responds with [`SdkError<CreateAlertError>`](crate::error::CreateAlertError)
    pub fn create_alert(&self) -> crate::client::fluent_builders::CreateAlert {
        crate::client::fluent_builders::CreateAlert::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateAnomalyDetector`](crate::client::fluent_builders::CreateAnomalyDetector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_name(impl Into<String>)`](crate::client::fluent_builders::CreateAnomalyDetector::anomaly_detector_name) / [`set_anomaly_detector_name(Option<String>)`](crate::client::fluent_builders::CreateAnomalyDetector::set_anomaly_detector_name): <p>The name of the detector.</p>
    ///   - [`anomaly_detector_description(impl Into<String>)`](crate::client::fluent_builders::CreateAnomalyDetector::anomaly_detector_description) / [`set_anomaly_detector_description(Option<String>)`](crate::client::fluent_builders::CreateAnomalyDetector::set_anomaly_detector_description): <p>A description of the detector.</p>
    ///   - [`anomaly_detector_config(AnomalyDetectorConfig)`](crate::client::fluent_builders::CreateAnomalyDetector::anomaly_detector_config) / [`set_anomaly_detector_config(Option<AnomalyDetectorConfig>)`](crate::client::fluent_builders::CreateAnomalyDetector::set_anomaly_detector_config): <p>Contains information about the configuration of the anomaly detector.</p>
    ///   - [`kms_key_arn(impl Into<String>)`](crate::client::fluent_builders::CreateAnomalyDetector::kms_key_arn) / [`set_kms_key_arn(Option<String>)`](crate::client::fluent_builders::CreateAnomalyDetector::set_kms_key_arn): <p>The ARN of the KMS key to use to encrypt your data.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateAnomalyDetector::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateAnomalyDetector::set_tags): <p>A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the anomaly detector.</p>
    /// - On success, responds with [`CreateAnomalyDetectorOutput`](crate::output::CreateAnomalyDetectorOutput) with field(s):
    ///   - [`anomaly_detector_arn(Option<String>)`](crate::output::CreateAnomalyDetectorOutput::anomaly_detector_arn): <p>The ARN of the detector.</p>
    /// - On failure, responds with [`SdkError<CreateAnomalyDetectorError>`](crate::error::CreateAnomalyDetectorError)
    pub fn create_anomaly_detector(&self) -> crate::client::fluent_builders::CreateAnomalyDetector {
        crate::client::fluent_builders::CreateAnomalyDetector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateMetricSet`](crate::client::fluent_builders::CreateMetricSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::CreateMetricSet::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::CreateMetricSet::set_anomaly_detector_arn): <p>The ARN of the anomaly detector that will use the dataset.</p>
    ///   - [`metric_set_name(impl Into<String>)`](crate::client::fluent_builders::CreateMetricSet::metric_set_name) / [`set_metric_set_name(Option<String>)`](crate::client::fluent_builders::CreateMetricSet::set_metric_set_name): <p>The name of the dataset.</p>
    ///   - [`metric_set_description(impl Into<String>)`](crate::client::fluent_builders::CreateMetricSet::metric_set_description) / [`set_metric_set_description(Option<String>)`](crate::client::fluent_builders::CreateMetricSet::set_metric_set_description): <p>A description of the dataset you are creating.</p>
    ///   - [`metric_list(Vec<Metric>)`](crate::client::fluent_builders::CreateMetricSet::metric_list) / [`set_metric_list(Option<Vec<Metric>>)`](crate::client::fluent_builders::CreateMetricSet::set_metric_list): <p>A list of metrics that the dataset will contain.</p>
    ///   - [`offset(i32)`](crate::client::fluent_builders::CreateMetricSet::offset) / [`set_offset(Option<i32>)`](crate::client::fluent_builders::CreateMetricSet::set_offset): <p>After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.</p>
    ///   - [`timestamp_column(TimestampColumn)`](crate::client::fluent_builders::CreateMetricSet::timestamp_column) / [`set_timestamp_column(Option<TimestampColumn>)`](crate::client::fluent_builders::CreateMetricSet::set_timestamp_column): <p>Contains information about the column used for tracking time in your source data.</p>
    ///   - [`dimension_list(Vec<String>)`](crate::client::fluent_builders::CreateMetricSet::dimension_list) / [`set_dimension_list(Option<Vec<String>>)`](crate::client::fluent_builders::CreateMetricSet::set_dimension_list): <p>A list of the fields you want to treat as dimensions.</p>
    ///   - [`metric_set_frequency(Frequency)`](crate::client::fluent_builders::CreateMetricSet::metric_set_frequency) / [`set_metric_set_frequency(Option<Frequency>)`](crate::client::fluent_builders::CreateMetricSet::set_metric_set_frequency): <p>The frequency with which the source data will be analyzed for anomalies.</p>
    ///   - [`metric_source(MetricSource)`](crate::client::fluent_builders::CreateMetricSet::metric_source) / [`set_metric_source(Option<MetricSource>)`](crate::client::fluent_builders::CreateMetricSet::set_metric_source): <p>Contains information about how the source data should be interpreted.</p>
    ///   - [`timezone(impl Into<String>)`](crate::client::fluent_builders::CreateMetricSet::timezone) / [`set_timezone(Option<String>)`](crate::client::fluent_builders::CreateMetricSet::set_timezone): <p>The time zone in which your source data was recorded.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateMetricSet::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateMetricSet::set_tags): <p>A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the dataset.</p>
    ///   - [`dimension_filter_list(Vec<MetricSetDimensionFilter>)`](crate::client::fluent_builders::CreateMetricSet::dimension_filter_list) / [`set_dimension_filter_list(Option<Vec<MetricSetDimensionFilter>>)`](crate::client::fluent_builders::CreateMetricSet::set_dimension_filter_list): <p>A list of filters that specify which data is kept for anomaly detection.</p>
    /// - On success, responds with [`CreateMetricSetOutput`](crate::output::CreateMetricSetOutput) with field(s):
    ///   - [`metric_set_arn(Option<String>)`](crate::output::CreateMetricSetOutput::metric_set_arn): <p>The ARN of the dataset.</p>
    /// - On failure, responds with [`SdkError<CreateMetricSetError>`](crate::error::CreateMetricSetError)
    pub fn create_metric_set(&self) -> crate::client::fluent_builders::CreateMetricSet {
        crate::client::fluent_builders::CreateMetricSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeactivateAnomalyDetector`](crate::client::fluent_builders::DeactivateAnomalyDetector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::DeactivateAnomalyDetector::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::DeactivateAnomalyDetector::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    /// - On success, responds with [`DeactivateAnomalyDetectorOutput`](crate::output::DeactivateAnomalyDetectorOutput)

    /// - On failure, responds with [`SdkError<DeactivateAnomalyDetectorError>`](crate::error::DeactivateAnomalyDetectorError)
    pub fn deactivate_anomaly_detector(
        &self,
    ) -> crate::client::fluent_builders::DeactivateAnomalyDetector {
        crate::client::fluent_builders::DeactivateAnomalyDetector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteAlert`](crate::client::fluent_builders::DeleteAlert) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alert_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteAlert::alert_arn) / [`set_alert_arn(Option<String>)`](crate::client::fluent_builders::DeleteAlert::set_alert_arn): <p>The ARN of the alert to delete.</p>
    /// - On success, responds with [`DeleteAlertOutput`](crate::output::DeleteAlertOutput)

    /// - On failure, responds with [`SdkError<DeleteAlertError>`](crate::error::DeleteAlertError)
    pub fn delete_alert(&self) -> crate::client::fluent_builders::DeleteAlert {
        crate::client::fluent_builders::DeleteAlert::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteAnomalyDetector`](crate::client::fluent_builders::DeleteAnomalyDetector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteAnomalyDetector::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::DeleteAnomalyDetector::set_anomaly_detector_arn): <p>The ARN of the detector to delete.</p>
    /// - On success, responds with [`DeleteAnomalyDetectorOutput`](crate::output::DeleteAnomalyDetectorOutput)

    /// - On failure, responds with [`SdkError<DeleteAnomalyDetectorError>`](crate::error::DeleteAnomalyDetectorError)
    pub fn delete_anomaly_detector(&self) -> crate::client::fluent_builders::DeleteAnomalyDetector {
        crate::client::fluent_builders::DeleteAnomalyDetector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAlert`](crate::client::fluent_builders::DescribeAlert) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alert_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeAlert::alert_arn) / [`set_alert_arn(Option<String>)`](crate::client::fluent_builders::DescribeAlert::set_alert_arn): <p>The ARN of the alert to describe.</p>
    /// - On success, responds with [`DescribeAlertOutput`](crate::output::DescribeAlertOutput) with field(s):
    ///   - [`alert(Option<Alert>)`](crate::output::DescribeAlertOutput::alert): <p>Contains information about an alert.</p>
    /// - On failure, responds with [`SdkError<DescribeAlertError>`](crate::error::DescribeAlertError)
    pub fn describe_alert(&self) -> crate::client::fluent_builders::DescribeAlert {
        crate::client::fluent_builders::DescribeAlert::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAnomalyDetectionExecutions`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    ///   - [`timestamp(impl Into<String>)`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::timestamp) / [`set_timestamp(Option<String>)`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::set_timestamp): <p>The timestamp of the anomaly detection job.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::set_max_results): <p>The number of items to return in the response.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::set_next_token): <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    /// - On success, responds with [`DescribeAnomalyDetectionExecutionsOutput`](crate::output::DescribeAnomalyDetectionExecutionsOutput) with field(s):
    ///   - [`execution_list(Option<Vec<ExecutionStatus>>)`](crate::output::DescribeAnomalyDetectionExecutionsOutput::execution_list): <p>A list of detection jobs.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeAnomalyDetectionExecutionsOutput::next_token): <p>The pagination token that's included if more results are available.</p>
    /// - On failure, responds with [`SdkError<DescribeAnomalyDetectionExecutionsError>`](crate::error::DescribeAnomalyDetectionExecutionsError)
    pub fn describe_anomaly_detection_executions(
        &self,
    ) -> crate::client::fluent_builders::DescribeAnomalyDetectionExecutions {
        crate::client::fluent_builders::DescribeAnomalyDetectionExecutions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAnomalyDetector`](crate::client::fluent_builders::DescribeAnomalyDetector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeAnomalyDetector::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::DescribeAnomalyDetector::set_anomaly_detector_arn): <p>The ARN of the detector to describe.</p>
    /// - On success, responds with [`DescribeAnomalyDetectorOutput`](crate::output::DescribeAnomalyDetectorOutput) with field(s):
    ///   - [`anomaly_detector_arn(Option<String>)`](crate::output::DescribeAnomalyDetectorOutput::anomaly_detector_arn): <p>The ARN of the detector.</p>
    ///   - [`anomaly_detector_name(Option<String>)`](crate::output::DescribeAnomalyDetectorOutput::anomaly_detector_name): <p>The name of the detector.</p>
    ///   - [`anomaly_detector_description(Option<String>)`](crate::output::DescribeAnomalyDetectorOutput::anomaly_detector_description): <p>A description of the detector.</p>
    ///   - [`anomaly_detector_config(Option<AnomalyDetectorConfigSummary>)`](crate::output::DescribeAnomalyDetectorOutput::anomaly_detector_config): <p>Contains information about the detector's configuration.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::DescribeAnomalyDetectorOutput::creation_time): <p>The time at which the detector was created.</p>
    ///   - [`last_modification_time(Option<DateTime>)`](crate::output::DescribeAnomalyDetectorOutput::last_modification_time): <p>The time at which the detector was last modified.</p>
    ///   - [`status(Option<AnomalyDetectorStatus>)`](crate::output::DescribeAnomalyDetectorOutput::status): <p>The status of the detector.</p>
    ///   - [`failure_reason(Option<String>)`](crate::output::DescribeAnomalyDetectorOutput::failure_reason): <p>The reason that the detector failed.</p>
    ///   - [`kms_key_arn(Option<String>)`](crate::output::DescribeAnomalyDetectorOutput::kms_key_arn): <p>The ARN of the KMS key to use to encrypt your data.</p>
    ///   - [`failure_type(Option<AnomalyDetectorFailureType>)`](crate::output::DescribeAnomalyDetectorOutput::failure_type): <p>The process that caused the detector to fail.</p>
    /// - On failure, responds with [`SdkError<DescribeAnomalyDetectorError>`](crate::error::DescribeAnomalyDetectorError)
    pub fn describe_anomaly_detector(
        &self,
    ) -> crate::client::fluent_builders::DescribeAnomalyDetector {
        crate::client::fluent_builders::DescribeAnomalyDetector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeMetricSet`](crate::client::fluent_builders::DescribeMetricSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`metric_set_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeMetricSet::metric_set_arn) / [`set_metric_set_arn(Option<String>)`](crate::client::fluent_builders::DescribeMetricSet::set_metric_set_arn): <p>The ARN of the dataset.</p>
    /// - On success, responds with [`DescribeMetricSetOutput`](crate::output::DescribeMetricSetOutput) with field(s):
    ///   - [`metric_set_arn(Option<String>)`](crate::output::DescribeMetricSetOutput::metric_set_arn): <p>The ARN of the dataset.</p>
    ///   - [`anomaly_detector_arn(Option<String>)`](crate::output::DescribeMetricSetOutput::anomaly_detector_arn): <p>The ARN of the detector that contains the dataset.</p>
    ///   - [`metric_set_name(Option<String>)`](crate::output::DescribeMetricSetOutput::metric_set_name): <p>The name of the dataset.</p>
    ///   - [`metric_set_description(Option<String>)`](crate::output::DescribeMetricSetOutput::metric_set_description): <p>The dataset's description.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::DescribeMetricSetOutput::creation_time): <p>The time at which the dataset was created.</p>
    ///   - [`last_modification_time(Option<DateTime>)`](crate::output::DescribeMetricSetOutput::last_modification_time): <p>The time at which the dataset was last modified.</p>
    ///   - [`offset(Option<i32>)`](crate::output::DescribeMetricSetOutput::offset): <p>After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.</p>
    ///   - [`metric_list(Option<Vec<Metric>>)`](crate::output::DescribeMetricSetOutput::metric_list): <p>A list of the metrics defined by the dataset.</p>
    ///   - [`timestamp_column(Option<TimestampColumn>)`](crate::output::DescribeMetricSetOutput::timestamp_column): <p>Contains information about the column used for tracking time in your source data.</p>
    ///   - [`dimension_list(Option<Vec<String>>)`](crate::output::DescribeMetricSetOutput::dimension_list): <p>A list of the dimensions chosen for analysis.</p>
    ///   - [`metric_set_frequency(Option<Frequency>)`](crate::output::DescribeMetricSetOutput::metric_set_frequency): <p>The interval at which the data will be analyzed for anomalies.</p>
    ///   - [`timezone(Option<String>)`](crate::output::DescribeMetricSetOutput::timezone): <p>The time zone in which the dataset's data was recorded.</p>
    ///   - [`metric_source(Option<MetricSource>)`](crate::output::DescribeMetricSetOutput::metric_source): <p>Contains information about the dataset's source data.</p>
    ///   - [`dimension_filter_list(Option<Vec<MetricSetDimensionFilter>>)`](crate::output::DescribeMetricSetOutput::dimension_filter_list): <p>The dimensions and their values that were used to filter the dataset.</p>
    /// - On failure, responds with [`SdkError<DescribeMetricSetError>`](crate::error::DescribeMetricSetError)
    pub fn describe_metric_set(&self) -> crate::client::fluent_builders::DescribeMetricSet {
        crate::client::fluent_builders::DescribeMetricSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DetectMetricSetConfig`](crate::client::fluent_builders::DetectMetricSetConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::DetectMetricSetConfig::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::DetectMetricSetConfig::set_anomaly_detector_arn): <p>An anomaly detector ARN.</p>
    ///   - [`auto_detection_metric_source(AutoDetectionMetricSource)`](crate::client::fluent_builders::DetectMetricSetConfig::auto_detection_metric_source) / [`set_auto_detection_metric_source(Option<AutoDetectionMetricSource>)`](crate::client::fluent_builders::DetectMetricSetConfig::set_auto_detection_metric_source): <p>A data source.</p>
    /// - On success, responds with [`DetectMetricSetConfigOutput`](crate::output::DetectMetricSetConfigOutput) with field(s):
    ///   - [`detected_metric_set_config(Option<DetectedMetricSetConfig>)`](crate::output::DetectMetricSetConfigOutput::detected_metric_set_config): <p>The inferred dataset configuration for the datasource.</p>
    /// - On failure, responds with [`SdkError<DetectMetricSetConfigError>`](crate::error::DetectMetricSetConfigError)
    pub fn detect_metric_set_config(
        &self,
    ) -> crate::client::fluent_builders::DetectMetricSetConfig {
        crate::client::fluent_builders::DetectMetricSetConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetAnomalyGroup`](crate::client::fluent_builders::GetAnomalyGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_group_id(impl Into<String>)`](crate::client::fluent_builders::GetAnomalyGroup::anomaly_group_id) / [`set_anomaly_group_id(Option<String>)`](crate::client::fluent_builders::GetAnomalyGroup::set_anomaly_group_id): <p>The ID of the anomaly group.</p>
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::GetAnomalyGroup::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::GetAnomalyGroup::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    /// - On success, responds with [`GetAnomalyGroupOutput`](crate::output::GetAnomalyGroupOutput) with field(s):
    ///   - [`anomaly_group(Option<AnomalyGroup>)`](crate::output::GetAnomalyGroupOutput::anomaly_group): <p>Details about the anomaly group.</p>
    /// - On failure, responds with [`SdkError<GetAnomalyGroupError>`](crate::error::GetAnomalyGroupError)
    pub fn get_anomaly_group(&self) -> crate::client::fluent_builders::GetAnomalyGroup {
        crate::client::fluent_builders::GetAnomalyGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDataQualityMetrics`](crate::client::fluent_builders::GetDataQualityMetrics) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::GetDataQualityMetrics::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::GetDataQualityMetrics::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector that you want to investigate.</p>
    ///   - [`metric_set_arn(impl Into<String>)`](crate::client::fluent_builders::GetDataQualityMetrics::metric_set_arn) / [`set_metric_set_arn(Option<String>)`](crate::client::fluent_builders::GetDataQualityMetrics::set_metric_set_arn): <p>The Amazon Resource Name (ARN) of a specific data quality metric set.</p>
    /// - On success, responds with [`GetDataQualityMetricsOutput`](crate::output::GetDataQualityMetricsOutput) with field(s):
    ///   - [`anomaly_detector_data_quality_metric_list(Option<Vec<AnomalyDetectorDataQualityMetric>>)`](crate::output::GetDataQualityMetricsOutput::anomaly_detector_data_quality_metric_list): <p>A list of the data quality metrics for the <code>AnomalyDetectorArn</code> that you requested.</p>
    /// - On failure, responds with [`SdkError<GetDataQualityMetricsError>`](crate::error::GetDataQualityMetricsError)
    pub fn get_data_quality_metrics(
        &self,
    ) -> crate::client::fluent_builders::GetDataQualityMetrics {
        crate::client::fluent_builders::GetDataQualityMetrics::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetFeedback`](crate::client::fluent_builders::GetFeedback) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetFeedback::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::GetFeedback::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::GetFeedback::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    ///   - [`anomaly_group_time_series_feedback(AnomalyGroupTimeSeries)`](crate::client::fluent_builders::GetFeedback::anomaly_group_time_series_feedback) / [`set_anomaly_group_time_series_feedback(Option<AnomalyGroupTimeSeries>)`](crate::client::fluent_builders::GetFeedback::set_anomaly_group_time_series_feedback): <p>The anomalous metric and group ID.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetFeedback::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetFeedback::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetFeedback::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetFeedback::set_next_token): <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    /// - On success, responds with [`GetFeedbackOutput`](crate::output::GetFeedbackOutput) with field(s):
    ///   - [`anomaly_group_time_series_feedback(Option<Vec<TimeSeriesFeedback>>)`](crate::output::GetFeedbackOutput::anomaly_group_time_series_feedback): <p>Feedback for an anomalous metric.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetFeedbackOutput::next_token): <p>The pagination token that's included if more results are available.</p>
    /// - On failure, responds with [`SdkError<GetFeedbackError>`](crate::error::GetFeedbackError)
    pub fn get_feedback(&self) -> crate::client::fluent_builders::GetFeedback {
        crate::client::fluent_builders::GetFeedback::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSampleData`](crate::client::fluent_builders::GetSampleData) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`s3_source_config(SampleDataS3SourceConfig)`](crate::client::fluent_builders::GetSampleData::s3_source_config) / [`set_s3_source_config(Option<SampleDataS3SourceConfig>)`](crate::client::fluent_builders::GetSampleData::set_s3_source_config): <p>A datasource bucket in Amazon S3.</p>
    /// - On success, responds with [`GetSampleDataOutput`](crate::output::GetSampleDataOutput) with field(s):
    ///   - [`header_values(Option<Vec<String>>)`](crate::output::GetSampleDataOutput::header_values): <p>A list of header labels for the records.</p>
    ///   - [`sample_rows(Option<Vec<Vec<String>>>)`](crate::output::GetSampleDataOutput::sample_rows): <p>A list of records.</p>
    /// - On failure, responds with [`SdkError<GetSampleDataError>`](crate::error::GetSampleDataError)
    pub fn get_sample_data(&self) -> crate::client::fluent_builders::GetSampleData {
        crate::client::fluent_builders::GetSampleData::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAlerts`](crate::client::fluent_builders::ListAlerts) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAlerts::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::ListAlerts::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::ListAlerts::set_anomaly_detector_arn): <p>The ARN of the alert's detector.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAlerts::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAlerts::set_next_token): <p>If the result of the previous request is truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAlerts::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAlerts::set_max_results): <p>The maximum number of results that will be displayed by the request.</p>
    /// - On success, responds with [`ListAlertsOutput`](crate::output::ListAlertsOutput) with field(s):
    ///   - [`alert_summary_list(Option<Vec<AlertSummary>>)`](crate::output::ListAlertsOutput::alert_summary_list): <p>Contains information about an alert.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAlertsOutput::next_token): <p>If the response is truncated, the service returns this token. To retrieve the next set of results, use this token in the next request.</p>
    /// - On failure, responds with [`SdkError<ListAlertsError>`](crate::error::ListAlertsError)
    pub fn list_alerts(&self) -> crate::client::fluent_builders::ListAlerts {
        crate::client::fluent_builders::ListAlerts::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAnomalyDetectors`](crate::client::fluent_builders::ListAnomalyDetectors) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAnomalyDetectors::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAnomalyDetectors::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAnomalyDetectors::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyDetectors::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAnomalyDetectors::set_next_token): <p>If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>
    /// - On success, responds with [`ListAnomalyDetectorsOutput`](crate::output::ListAnomalyDetectorsOutput) with field(s):
    ///   - [`anomaly_detector_summary_list(Option<Vec<AnomalyDetectorSummary>>)`](crate::output::ListAnomalyDetectorsOutput::anomaly_detector_summary_list): <p>A list of anomaly detectors in the account in the current region.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAnomalyDetectorsOutput::next_token): <p>If the response is truncated, the service returns this token. To retrieve the next set of results, use the token in the next request.</p>
    /// - On failure, responds with [`SdkError<ListAnomalyDetectorsError>`](crate::error::ListAnomalyDetectorsError)
    pub fn list_anomaly_detectors(&self) -> crate::client::fluent_builders::ListAnomalyDetectors {
        crate::client::fluent_builders::ListAnomalyDetectors::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAnomalyGroupRelatedMetrics`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    ///   - [`anomaly_group_id(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::anomaly_group_id) / [`set_anomaly_group_id(Option<String>)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::set_anomaly_group_id): <p>The ID of the anomaly group.</p>
    ///   - [`relationship_type_filter(RelationshipType)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::relationship_type_filter) / [`set_relationship_type_filter(Option<RelationshipType>)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::set_relationship_type_filter): <p>Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::set_next_token): <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    /// - On success, responds with [`ListAnomalyGroupRelatedMetricsOutput`](crate::output::ListAnomalyGroupRelatedMetricsOutput) with field(s):
    ///   - [`inter_metric_impact_list(Option<Vec<InterMetricImpactDetails>>)`](crate::output::ListAnomalyGroupRelatedMetricsOutput::inter_metric_impact_list): <p>Aggregated details about the measures contributing to the anomaly group, and the measures potentially impacted by the anomaly group.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAnomalyGroupRelatedMetricsOutput::next_token): <p>The pagination token that's included if more results are available.</p>
    /// - On failure, responds with [`SdkError<ListAnomalyGroupRelatedMetricsError>`](crate::error::ListAnomalyGroupRelatedMetricsError)
    pub fn list_anomaly_group_related_metrics(
        &self,
    ) -> crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics {
        crate::client::fluent_builders::ListAnomalyGroupRelatedMetrics::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAnomalyGroupSummaries`](crate::client::fluent_builders::ListAnomalyGroupSummaries) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAnomalyGroupSummaries::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyGroupSummaries::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::ListAnomalyGroupSummaries::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    ///   - [`sensitivity_threshold(i32)`](crate::client::fluent_builders::ListAnomalyGroupSummaries::sensitivity_threshold) / [`set_sensitivity_threshold(i32)`](crate::client::fluent_builders::ListAnomalyGroupSummaries::set_sensitivity_threshold): <p>The minimum severity score for inclusion in the output.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAnomalyGroupSummaries::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAnomalyGroupSummaries::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyGroupSummaries::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAnomalyGroupSummaries::set_next_token): <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    /// - On success, responds with [`ListAnomalyGroupSummariesOutput`](crate::output::ListAnomalyGroupSummariesOutput) with field(s):
    ///   - [`anomaly_group_summary_list(Option<Vec<AnomalyGroupSummary>>)`](crate::output::ListAnomalyGroupSummariesOutput::anomaly_group_summary_list): <p>A list of anomaly group summaries.</p>
    ///   - [`anomaly_group_statistics(Option<AnomalyGroupStatistics>)`](crate::output::ListAnomalyGroupSummariesOutput::anomaly_group_statistics): <p>Aggregated details about the anomaly groups.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAnomalyGroupSummariesOutput::next_token): <p>The pagination token that's included if more results are available.</p>
    /// - On failure, responds with [`SdkError<ListAnomalyGroupSummariesError>`](crate::error::ListAnomalyGroupSummariesError)
    pub fn list_anomaly_group_summaries(
        &self,
    ) -> crate::client::fluent_builders::ListAnomalyGroupSummaries {
        crate::client::fluent_builders::ListAnomalyGroupSummaries::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAnomalyGroupTimeSeries`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    ///   - [`anomaly_group_id(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::anomaly_group_id) / [`set_anomaly_group_id(Option<String>)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::set_anomaly_group_id): <p>The ID of the anomaly group.</p>
    ///   - [`metric_name(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::metric_name) / [`set_metric_name(Option<String>)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::set_metric_name): <p>The name of the measure field.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAnomalyGroupTimeSeries::set_next_token): <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    /// - On success, responds with [`ListAnomalyGroupTimeSeriesOutput`](crate::output::ListAnomalyGroupTimeSeriesOutput) with field(s):
    ///   - [`anomaly_group_id(Option<String>)`](crate::output::ListAnomalyGroupTimeSeriesOutput::anomaly_group_id): <p>The ID of the anomaly group.</p>
    ///   - [`metric_name(Option<String>)`](crate::output::ListAnomalyGroupTimeSeriesOutput::metric_name): <p>The name of the measure field.</p>
    ///   - [`timestamp_list(Option<Vec<String>>)`](crate::output::ListAnomalyGroupTimeSeriesOutput::timestamp_list): <p>Timestamps for the anomalous metrics.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAnomalyGroupTimeSeriesOutput::next_token): <p>The pagination token that's included if more results are available.</p>
    ///   - [`time_series_list(Option<Vec<TimeSeries>>)`](crate::output::ListAnomalyGroupTimeSeriesOutput::time_series_list): <p>A list of anomalous metrics.</p>
    /// - On failure, responds with [`SdkError<ListAnomalyGroupTimeSeriesError>`](crate::error::ListAnomalyGroupTimeSeriesError)
    pub fn list_anomaly_group_time_series(
        &self,
    ) -> crate::client::fluent_builders::ListAnomalyGroupTimeSeries {
        crate::client::fluent_builders::ListAnomalyGroupTimeSeries::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListMetricSets`](crate::client::fluent_builders::ListMetricSets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListMetricSets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::ListMetricSets::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::ListMetricSets::set_anomaly_detector_arn): <p>The ARN of the anomaly detector containing the metrics sets to list.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListMetricSets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListMetricSets::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListMetricSets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListMetricSets::set_next_token): <p>If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>
    /// - On success, responds with [`ListMetricSetsOutput`](crate::output::ListMetricSetsOutput) with field(s):
    ///   - [`metric_set_summary_list(Option<Vec<MetricSetSummary>>)`](crate::output::ListMetricSetsOutput::metric_set_summary_list): <p>A list of the datasets in the AWS Region, with configuration details for each.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListMetricSetsOutput::next_token): <p>If the response is truncated, the list call returns this token. To retrieve the next set of results, use the token in the next list request. </p>
    /// - On failure, responds with [`SdkError<ListMetricSetsError>`](crate::error::ListMetricSetsError)
    pub fn list_metric_sets(&self) -> crate::client::fluent_builders::ListMetricSets {
        crate::client::fluent_builders::ListMetricSets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The resource's Amazon Resource Name (ARN).</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::ListTagsForResourceOutput::tags): <p>The resource's tags.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutFeedback`](crate::client::fluent_builders::PutFeedback) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::PutFeedback::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::PutFeedback::set_anomaly_detector_arn): <p>The Amazon Resource Name (ARN) of the anomaly detector.</p>
    ///   - [`anomaly_group_time_series_feedback(AnomalyGroupTimeSeriesFeedback)`](crate::client::fluent_builders::PutFeedback::anomaly_group_time_series_feedback) / [`set_anomaly_group_time_series_feedback(Option<AnomalyGroupTimeSeriesFeedback>)`](crate::client::fluent_builders::PutFeedback::set_anomaly_group_time_series_feedback): <p>Feedback for an anomalous metric.</p>
    /// - On success, responds with [`PutFeedbackOutput`](crate::output::PutFeedbackOutput)

    /// - On failure, responds with [`SdkError<PutFeedbackError>`](crate::error::PutFeedbackError)
    pub fn put_feedback(&self) -> crate::client::fluent_builders::PutFeedback {
        crate::client::fluent_builders::PutFeedback::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The resource's Amazon Resource Name (ARN).</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>Tags to apply to the resource. Tag keys and values can contain letters, numbers, spaces, and the following symbols: <code>_.:/=+@-</code> </p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The resource's Amazon Resource Name (ARN).</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>Keys to remove from the resource's tags.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAlert`](crate::client::fluent_builders::UpdateAlert) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alert_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateAlert::alert_arn) / [`set_alert_arn(Option<String>)`](crate::client::fluent_builders::UpdateAlert::set_alert_arn): <p>The ARN of the alert to update.</p>
    ///   - [`alert_description(impl Into<String>)`](crate::client::fluent_builders::UpdateAlert::alert_description) / [`set_alert_description(Option<String>)`](crate::client::fluent_builders::UpdateAlert::set_alert_description): <p>A description of the alert.</p>
    ///   - [`alert_sensitivity_threshold(i32)`](crate::client::fluent_builders::UpdateAlert::alert_sensitivity_threshold) / [`set_alert_sensitivity_threshold(i32)`](crate::client::fluent_builders::UpdateAlert::set_alert_sensitivity_threshold): <p>An integer from 0 to 100 specifying the alert sensitivity threshold.</p>
    ///   - [`action(Action)`](crate::client::fluent_builders::UpdateAlert::action) / [`set_action(Option<Action>)`](crate::client::fluent_builders::UpdateAlert::set_action): <p>Action that will be triggered when there is an alert.</p>
    ///   - [`alert_filters(AlertFilters)`](crate::client::fluent_builders::UpdateAlert::alert_filters) / [`set_alert_filters(Option<AlertFilters>)`](crate::client::fluent_builders::UpdateAlert::set_alert_filters): <p>The configuration of the alert filters, containing MetricList and DimensionFilterList.</p>
    /// - On success, responds with [`UpdateAlertOutput`](crate::output::UpdateAlertOutput) with field(s):
    ///   - [`alert_arn(Option<String>)`](crate::output::UpdateAlertOutput::alert_arn): <p>The ARN of the updated alert.</p>
    /// - On failure, responds with [`SdkError<UpdateAlertError>`](crate::error::UpdateAlertError)
    pub fn update_alert(&self) -> crate::client::fluent_builders::UpdateAlert {
        crate::client::fluent_builders::UpdateAlert::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAnomalyDetector`](crate::client::fluent_builders::UpdateAnomalyDetector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`anomaly_detector_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateAnomalyDetector::anomaly_detector_arn) / [`set_anomaly_detector_arn(Option<String>)`](crate::client::fluent_builders::UpdateAnomalyDetector::set_anomaly_detector_arn): <p>The ARN of the detector to update.</p>
    ///   - [`kms_key_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateAnomalyDetector::kms_key_arn) / [`set_kms_key_arn(Option<String>)`](crate::client::fluent_builders::UpdateAnomalyDetector::set_kms_key_arn): <p>The Amazon Resource Name (ARN) of an AWS KMS encryption key.</p>
    ///   - [`anomaly_detector_description(impl Into<String>)`](crate::client::fluent_builders::UpdateAnomalyDetector::anomaly_detector_description) / [`set_anomaly_detector_description(Option<String>)`](crate::client::fluent_builders::UpdateAnomalyDetector::set_anomaly_detector_description): <p>The updated detector description.</p>
    ///   - [`anomaly_detector_config(AnomalyDetectorConfig)`](crate::client::fluent_builders::UpdateAnomalyDetector::anomaly_detector_config) / [`set_anomaly_detector_config(Option<AnomalyDetectorConfig>)`](crate::client::fluent_builders::UpdateAnomalyDetector::set_anomaly_detector_config): <p>Contains information about the configuration to which the detector will be updated.</p>
    /// - On success, responds with [`UpdateAnomalyDetectorOutput`](crate::output::UpdateAnomalyDetectorOutput) with field(s):
    ///   - [`anomaly_detector_arn(Option<String>)`](crate::output::UpdateAnomalyDetectorOutput::anomaly_detector_arn): <p>The ARN of the updated detector.</p>
    /// - On failure, responds with [`SdkError<UpdateAnomalyDetectorError>`](crate::error::UpdateAnomalyDetectorError)
    pub fn update_anomaly_detector(&self) -> crate::client::fluent_builders::UpdateAnomalyDetector {
        crate::client::fluent_builders::UpdateAnomalyDetector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateMetricSet`](crate::client::fluent_builders::UpdateMetricSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`metric_set_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateMetricSet::metric_set_arn) / [`set_metric_set_arn(Option<String>)`](crate::client::fluent_builders::UpdateMetricSet::set_metric_set_arn): <p>The ARN of the dataset to update.</p>
    ///   - [`metric_set_description(impl Into<String>)`](crate::client::fluent_builders::UpdateMetricSet::metric_set_description) / [`set_metric_set_description(Option<String>)`](crate::client::fluent_builders::UpdateMetricSet::set_metric_set_description): <p>The dataset's description.</p>
    ///   - [`metric_list(Vec<Metric>)`](crate::client::fluent_builders::UpdateMetricSet::metric_list) / [`set_metric_list(Option<Vec<Metric>>)`](crate::client::fluent_builders::UpdateMetricSet::set_metric_list): <p>The metric list.</p>
    ///   - [`offset(i32)`](crate::client::fluent_builders::UpdateMetricSet::offset) / [`set_offset(Option<i32>)`](crate::client::fluent_builders::UpdateMetricSet::set_offset): <p>After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.</p>
    ///   - [`timestamp_column(TimestampColumn)`](crate::client::fluent_builders::UpdateMetricSet::timestamp_column) / [`set_timestamp_column(Option<TimestampColumn>)`](crate::client::fluent_builders::UpdateMetricSet::set_timestamp_column): <p>The timestamp column.</p>
    ///   - [`dimension_list(Vec<String>)`](crate::client::fluent_builders::UpdateMetricSet::dimension_list) / [`set_dimension_list(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateMetricSet::set_dimension_list): <p>The dimension list.</p>
    ///   - [`metric_set_frequency(Frequency)`](crate::client::fluent_builders::UpdateMetricSet::metric_set_frequency) / [`set_metric_set_frequency(Option<Frequency>)`](crate::client::fluent_builders::UpdateMetricSet::set_metric_set_frequency): <p>The dataset's interval.</p>
    ///   - [`metric_source(MetricSource)`](crate::client::fluent_builders::UpdateMetricSet::metric_source) / [`set_metric_source(Option<MetricSource>)`](crate::client::fluent_builders::UpdateMetricSet::set_metric_source): <p>Contains information about source data used to generate metrics.</p>
    ///   - [`dimension_filter_list(Vec<MetricSetDimensionFilter>)`](crate::client::fluent_builders::UpdateMetricSet::dimension_filter_list) / [`set_dimension_filter_list(Option<Vec<MetricSetDimensionFilter>>)`](crate::client::fluent_builders::UpdateMetricSet::set_dimension_filter_list): <p>Describes a list of filters for choosing specific dimensions and specific values. Each filter consists of the dimension and one of its values that you want to include. When multiple dimensions or values are specified, the dimensions are joined with an AND operation and the values are joined with an OR operation.</p>
    /// - On success, responds with [`UpdateMetricSetOutput`](crate::output::UpdateMetricSetOutput) with field(s):
    ///   - [`metric_set_arn(Option<String>)`](crate::output::UpdateMetricSetOutput::metric_set_arn): <p>The ARN of the dataset.</p>
    /// - On failure, responds with [`SdkError<UpdateMetricSetError>`](crate::error::UpdateMetricSetError)
    pub fn update_metric_set(&self) -> crate::client::fluent_builders::UpdateMetricSet {
        crate::client::fluent_builders::UpdateMetricSet::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
