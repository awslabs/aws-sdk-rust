// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeMetricSet`](crate::client::fluent_builders::DescribeMetricSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`metric_set_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeMetricSet::metric_set_arn) / [`set_metric_set_arn(Option<String>)`](crate::client::fluent_builders::DescribeMetricSet::set_metric_set_arn): <p>The ARN of the dataset.</p>
    /// - On success, responds with [`DescribeMetricSetOutput`](crate::output::DescribeMetricSetOutput) with field(s):
    ///   - [`metric_set_arn(Option<String>)`](crate::output::DescribeMetricSetOutput::metric_set_arn): <p>The ARN of the dataset.</p>
    ///   - [`anomaly_detector_arn(Option<String>)`](crate::output::DescribeMetricSetOutput::anomaly_detector_arn): <p>The ARN of the detector that contains the dataset.</p>
    ///   - [`metric_set_name(Option<String>)`](crate::output::DescribeMetricSetOutput::metric_set_name): <p>The name of the dataset.</p>
    ///   - [`metric_set_description(Option<String>)`](crate::output::DescribeMetricSetOutput::metric_set_description): <p>The dataset's description.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::DescribeMetricSetOutput::creation_time): <p>The time at which the dataset was created.</p>
    ///   - [`last_modification_time(Option<DateTime>)`](crate::output::DescribeMetricSetOutput::last_modification_time): <p>The time at which the dataset was last modified.</p>
    ///   - [`offset(Option<i32>)`](crate::output::DescribeMetricSetOutput::offset): <p>After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.</p>
    ///   - [`metric_list(Option<Vec<Metric>>)`](crate::output::DescribeMetricSetOutput::metric_list): <p>A list of the metrics defined by the dataset.</p>
    ///   - [`timestamp_column(Option<TimestampColumn>)`](crate::output::DescribeMetricSetOutput::timestamp_column): <p>Contains information about the column used for tracking time in your source data.</p>
    ///   - [`dimension_list(Option<Vec<String>>)`](crate::output::DescribeMetricSetOutput::dimension_list): <p>A list of the dimensions chosen for analysis.</p>
    ///   - [`metric_set_frequency(Option<Frequency>)`](crate::output::DescribeMetricSetOutput::metric_set_frequency): <p>The interval at which the data will be analyzed for anomalies.</p>
    ///   - [`timezone(Option<String>)`](crate::output::DescribeMetricSetOutput::timezone): <p>The time zone in which the dataset's data was recorded.</p>
    ///   - [`metric_source(Option<MetricSource>)`](crate::output::DescribeMetricSetOutput::metric_source): <p>Contains information about the dataset's source data.</p>
    ///   - [`dimension_filter_list(Option<Vec<MetricSetDimensionFilter>>)`](crate::output::DescribeMetricSetOutput::dimension_filter_list): <p>The dimensions and their values that were used to filter the dataset.</p>
    /// - On failure, responds with [`SdkError<DescribeMetricSetError>`](crate::error::DescribeMetricSetError)
    pub fn describe_metric_set(&self) -> crate::client::fluent_builders::DescribeMetricSet {
        crate::client::fluent_builders::DescribeMetricSet::new(self.handle.clone())
    }
}
