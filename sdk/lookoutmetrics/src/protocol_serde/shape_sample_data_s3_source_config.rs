// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_sample_data_s3_source_config(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SampleDataS3SourceConfig,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("RoleArn").string(input.role_arn.as_str());
    }
    if let Some(var_1) = &input.templated_path_list {
        let mut array_2 = object.key("TemplatedPathList").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.historical_data_path_list {
        let mut array_5 = object.key("HistoricalDataPathList").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.file_format_descriptor {
        #[allow(unused_mut)]
        let mut object_8 = object.key("FileFormatDescriptor").start_object();
        crate::protocol_serde::shape_file_format_descriptor::ser_file_format_descriptor(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
