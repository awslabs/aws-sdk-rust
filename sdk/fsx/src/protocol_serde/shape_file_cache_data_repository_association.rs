// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_file_cache_data_repository_association(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::FileCacheDataRepositoryAssociation,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.file_cache_path {
        object.key("FileCachePath").string(var_1.as_str());
    }
    if let Some(var_2) = &input.data_repository_path {
        object.key("DataRepositoryPath").string(var_2.as_str());
    }
    if let Some(var_3) = &input.data_repository_subdirectories {
        let mut array_4 = object.key("DataRepositorySubdirectories").start_array();
        for item_5 in var_3 {
            {
                array_4.value().string(item_5.as_str());
            }
        }
        array_4.finish();
    }
    if let Some(var_6) = &input.nfs {
        #[allow(unused_mut)]
        let mut object_7 = object.key("NFS").start_object();
        crate::protocol_serde::shape_file_cache_nfs_configuration::ser_file_cache_nfs_configuration(&mut object_7, var_6)?;
        object_7.finish();
    }
    Ok(())
}
