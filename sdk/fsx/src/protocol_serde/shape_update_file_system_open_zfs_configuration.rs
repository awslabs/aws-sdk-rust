// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_file_system_open_zfs_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::UpdateFileSystemOpenZfsConfiguration,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.automatic_backup_retention_days {
        object.key("AutomaticBackupRetentionDays").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_1).into()),
        );
    }
    if let Some(var_2) = &input.copy_tags_to_backups {
        object.key("CopyTagsToBackups").boolean(*var_2);
    }
    if let Some(var_3) = &input.copy_tags_to_volumes {
        object.key("CopyTagsToVolumes").boolean(*var_3);
    }
    if let Some(var_4) = &input.daily_automatic_backup_start_time {
        object.key("DailyAutomaticBackupStartTime").string(var_4.as_str());
    }
    if let Some(var_5) = &input.throughput_capacity {
        object.key("ThroughputCapacity").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_5).into()),
        );
    }
    if let Some(var_6) = &input.weekly_maintenance_start_time {
        object.key("WeeklyMaintenanceStartTime").string(var_6.as_str());
    }
    if let Some(var_7) = &input.disk_iops_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("DiskIopsConfiguration").start_object();
        crate::protocol_serde::shape_disk_iops_configuration::ser_disk_iops_configuration(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.add_route_table_ids {
        let mut array_10 = object.key("AddRouteTableIds").start_array();
        for item_11 in var_9 {
            {
                array_10.value().string(item_11.as_str());
            }
        }
        array_10.finish();
    }
    if let Some(var_12) = &input.remove_route_table_ids {
        let mut array_13 = object.key("RemoveRouteTableIds").start_array();
        for item_14 in var_12 {
            {
                array_13.value().string(item_14.as_str());
            }
        }
        array_13.finish();
    }
    Ok(())
}
