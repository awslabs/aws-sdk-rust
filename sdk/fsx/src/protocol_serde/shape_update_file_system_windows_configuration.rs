// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_file_system_windows_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::UpdateFileSystemWindowsConfiguration,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.weekly_maintenance_start_time {
        object.key("WeeklyMaintenanceStartTime").string(var_1.as_str());
    }
    if let Some(var_2) = &input.daily_automatic_backup_start_time {
        object.key("DailyAutomaticBackupStartTime").string(var_2.as_str());
    }
    if let Some(var_3) = &input.automatic_backup_retention_days {
        object.key("AutomaticBackupRetentionDays").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.throughput_capacity {
        object.key("ThroughputCapacity").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    if let Some(var_5) = &input.self_managed_active_directory_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object.key("SelfManagedActiveDirectoryConfiguration").start_object();
        crate::protocol_serde::shape_self_managed_active_directory_configuration_updates::ser_self_managed_active_directory_configuration_updates(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.audit_log_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("AuditLogConfiguration").start_object();
        crate::protocol_serde::shape_windows_audit_log_create_configuration::ser_windows_audit_log_create_configuration(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.disk_iops_configuration {
        #[allow(unused_mut)]
        let mut object_10 = object.key("DiskIopsConfiguration").start_object();
        crate::protocol_serde::shape_disk_iops_configuration::ser_disk_iops_configuration(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}
