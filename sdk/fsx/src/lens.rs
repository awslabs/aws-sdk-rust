// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_describe_backups_output_next_token(
    input: &crate::operation::describe_backups::DescribeBackupsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_describe_data_repository_associations_output_next_token(
    input: &crate::operation::describe_data_repository_associations::DescribeDataRepositoryAssociationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_describe_data_repository_tasks_output_next_token(
    input: &crate::operation::describe_data_repository_tasks::DescribeDataRepositoryTasksOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_describe_file_caches_output_next_token(
    input: &crate::operation::describe_file_caches::DescribeFileCachesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_describe_file_systems_output_next_token(
    input: &crate::operation::describe_file_systems::DescribeFileSystemsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_describe_snapshots_output_next_token(
    input: &crate::operation::describe_snapshots::DescribeSnapshotsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_describe_storage_virtual_machines_output_next_token(
    input: &crate::operation::describe_storage_virtual_machines::DescribeStorageVirtualMachinesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_describe_volumes_output_next_token(
    input: &crate::operation::describe_volumes::DescribeVolumesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_tags_for_resource_output_next_token(
    input: &crate::operation::list_tags_for_resource::ListTagsForResourceOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_describe_storage_virtual_machines_output_storage_virtual_machines(
    input: crate::operation::describe_storage_virtual_machines::DescribeStorageVirtualMachinesOutput,
) -> std::option::Option<std::vec::Vec<crate::types::StorageVirtualMachine>> {
    let input = match input.storage_virtual_machines {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_describe_volumes_output_volumes(
    input: crate::operation::describe_volumes::DescribeVolumesOutput,
) -> std::option::Option<std::vec::Vec<crate::types::Volume>> {
    let input = match input.volumes {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
