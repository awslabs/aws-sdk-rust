// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for a Lustre MDT (Metadata Target) storage volume. The metadata on Amazon File Cache is managed by a Lustre Metadata Server (MDS) while the actual metadata is persisted on an MDT.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FileCacheLustreMetadataConfiguration {
    /// <p>The storage capacity of the Lustre MDT (Metadata Target) storage volume in gibibytes (GiB). The only supported value is <code>2400</code> GiB.</p>
    #[doc(hidden)]
    pub storage_capacity: std::option::Option<i32>,
}
impl FileCacheLustreMetadataConfiguration {
    /// <p>The storage capacity of the Lustre MDT (Metadata Target) storage volume in gibibytes (GiB). The only supported value is <code>2400</code> GiB.</p>
    pub fn storage_capacity(&self) -> std::option::Option<i32> {
        self.storage_capacity
    }
}
impl FileCacheLustreMetadataConfiguration {
    /// Creates a new builder-style object to manufacture [`FileCacheLustreMetadataConfiguration`](crate::types::FileCacheLustreMetadataConfiguration).
    pub fn builder() -> crate::types::builders::FileCacheLustreMetadataConfigurationBuilder {
        crate::types::builders::FileCacheLustreMetadataConfigurationBuilder::default()
    }
}

/// A builder for [`FileCacheLustreMetadataConfiguration`](crate::types::FileCacheLustreMetadataConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FileCacheLustreMetadataConfigurationBuilder {
    pub(crate) storage_capacity: std::option::Option<i32>,
}
impl FileCacheLustreMetadataConfigurationBuilder {
    /// <p>The storage capacity of the Lustre MDT (Metadata Target) storage volume in gibibytes (GiB). The only supported value is <code>2400</code> GiB.</p>
    pub fn storage_capacity(mut self, input: i32) -> Self {
        self.storage_capacity = Some(input);
        self
    }
    /// <p>The storage capacity of the Lustre MDT (Metadata Target) storage volume in gibibytes (GiB). The only supported value is <code>2400</code> GiB.</p>
    pub fn set_storage_capacity(mut self, input: std::option::Option<i32>) -> Self {
        self.storage_capacity = input;
        self
    }
    /// Consumes the builder and constructs a [`FileCacheLustreMetadataConfiguration`](crate::types::FileCacheLustreMetadataConfiguration).
    pub fn build(self) -> crate::types::FileCacheLustreMetadataConfiguration {
        crate::types::FileCacheLustreMetadataConfiguration {
            storage_capacity: self.storage_capacity,
        }
    }
}
