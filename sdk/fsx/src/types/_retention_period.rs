// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the retention period of an FSx for ONTAP SnapLock volume. After it is set, it can't be changed. Files can't be deleted or modified during the retention period. </p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/snaplock-retention.html">Working with the retention period in SnapLock</a>. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RetentionPeriod {
    /// <p>Defines the type of time for the retention period of an FSx for ONTAP SnapLock volume. Set it to one of the valid types. If you set it to <code>INFINITE</code>, the files are retained forever. If you set it to <code>UNSPECIFIED</code>, the files are retained until you set an explicit retention period. </p>
    pub r#type: ::std::option::Option<crate::types::RetentionPeriodType>,
    /// <p>Defines the amount of time for the retention period of an FSx for ONTAP SnapLock volume. You can't set a value for <code>INFINITE</code> or <code>UNSPECIFIED</code>. For all other options, the following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Seconds</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Minutes</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 0 - 24</p> </li>
    /// <li> <p> <code>Days</code>: 0 - 365</p> </li>
    /// <li> <p> <code>Months</code>: 0 - 12</p> </li>
    /// <li> <p> <code>Years</code>: 0 - 100</p> </li>
    /// </ul>
    pub value: ::std::option::Option<i32>,
}
impl RetentionPeriod {
    /// <p>Defines the type of time for the retention period of an FSx for ONTAP SnapLock volume. Set it to one of the valid types. If you set it to <code>INFINITE</code>, the files are retained forever. If you set it to <code>UNSPECIFIED</code>, the files are retained until you set an explicit retention period. </p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::RetentionPeriodType> {
        self.r#type.as_ref()
    }
    /// <p>Defines the amount of time for the retention period of an FSx for ONTAP SnapLock volume. You can't set a value for <code>INFINITE</code> or <code>UNSPECIFIED</code>. For all other options, the following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Seconds</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Minutes</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 0 - 24</p> </li>
    /// <li> <p> <code>Days</code>: 0 - 365</p> </li>
    /// <li> <p> <code>Months</code>: 0 - 12</p> </li>
    /// <li> <p> <code>Years</code>: 0 - 100</p> </li>
    /// </ul>
    pub fn value(&self) -> ::std::option::Option<i32> {
        self.value
    }
}
impl RetentionPeriod {
    /// Creates a new builder-style object to manufacture [`RetentionPeriod`](crate::types::RetentionPeriod).
    pub fn builder() -> crate::types::builders::RetentionPeriodBuilder {
        crate::types::builders::RetentionPeriodBuilder::default()
    }
}

/// A builder for [`RetentionPeriod`](crate::types::RetentionPeriod).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RetentionPeriodBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::RetentionPeriodType>,
    pub(crate) value: ::std::option::Option<i32>,
}
impl RetentionPeriodBuilder {
    /// <p>Defines the type of time for the retention period of an FSx for ONTAP SnapLock volume. Set it to one of the valid types. If you set it to <code>INFINITE</code>, the files are retained forever. If you set it to <code>UNSPECIFIED</code>, the files are retained until you set an explicit retention period. </p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::RetentionPeriodType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Defines the type of time for the retention period of an FSx for ONTAP SnapLock volume. Set it to one of the valid types. If you set it to <code>INFINITE</code>, the files are retained forever. If you set it to <code>UNSPECIFIED</code>, the files are retained until you set an explicit retention period. </p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::RetentionPeriodType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>Defines the type of time for the retention period of an FSx for ONTAP SnapLock volume. Set it to one of the valid types. If you set it to <code>INFINITE</code>, the files are retained forever. If you set it to <code>UNSPECIFIED</code>, the files are retained until you set an explicit retention period. </p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::RetentionPeriodType> {
        &self.r#type
    }
    /// <p>Defines the amount of time for the retention period of an FSx for ONTAP SnapLock volume. You can't set a value for <code>INFINITE</code> or <code>UNSPECIFIED</code>. For all other options, the following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Seconds</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Minutes</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 0 - 24</p> </li>
    /// <li> <p> <code>Days</code>: 0 - 365</p> </li>
    /// <li> <p> <code>Months</code>: 0 - 12</p> </li>
    /// <li> <p> <code>Years</code>: 0 - 100</p> </li>
    /// </ul>
    pub fn value(mut self, input: i32) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>Defines the amount of time for the retention period of an FSx for ONTAP SnapLock volume. You can't set a value for <code>INFINITE</code> or <code>UNSPECIFIED</code>. For all other options, the following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Seconds</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Minutes</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 0 - 24</p> </li>
    /// <li> <p> <code>Days</code>: 0 - 365</p> </li>
    /// <li> <p> <code>Months</code>: 0 - 12</p> </li>
    /// <li> <p> <code>Years</code>: 0 - 100</p> </li>
    /// </ul>
    pub fn set_value(mut self, input: ::std::option::Option<i32>) -> Self {
        self.value = input;
        self
    }
    /// <p>Defines the amount of time for the retention period of an FSx for ONTAP SnapLock volume. You can't set a value for <code>INFINITE</code> or <code>UNSPECIFIED</code>. For all other options, the following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Seconds</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Minutes</code>: 0 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 0 - 24</p> </li>
    /// <li> <p> <code>Days</code>: 0 - 365</p> </li>
    /// <li> <p> <code>Months</code>: 0 - 12</p> </li>
    /// <li> <p> <code>Years</code>: 0 - 100</p> </li>
    /// </ul>
    pub fn get_value(&self) -> &::std::option::Option<i32> {
        &self.value
    }
    /// Consumes the builder and constructs a [`RetentionPeriod`](crate::types::RetentionPeriod).
    pub fn build(self) -> crate::types::RetentionPeriod {
        crate::types::RetentionPeriod {
            r#type: self.r#type,
            value: self.value,
        }
    }
}
