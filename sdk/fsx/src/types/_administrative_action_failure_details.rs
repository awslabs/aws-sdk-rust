// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about a failed administrative action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AdministrativeActionFailureDetails {
    /// <p>Error message providing details about the failed administrative action.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl AdministrativeActionFailureDetails {
    /// <p>Error message providing details about the failed administrative action.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl AdministrativeActionFailureDetails {
    /// Creates a new builder-style object to manufacture [`AdministrativeActionFailureDetails`](crate::types::AdministrativeActionFailureDetails).
    pub fn builder() -> crate::types::builders::AdministrativeActionFailureDetailsBuilder {
        crate::types::builders::AdministrativeActionFailureDetailsBuilder::default()
    }
}

/// A builder for [`AdministrativeActionFailureDetails`](crate::types::AdministrativeActionFailureDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AdministrativeActionFailureDetailsBuilder {
    pub(crate) message: std::option::Option<std::string::String>,
}
impl AdministrativeActionFailureDetailsBuilder {
    /// <p>Error message providing details about the failed administrative action.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>Error message providing details about the failed administrative action.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`AdministrativeActionFailureDetails`](crate::types::AdministrativeActionFailureDetails).
    pub fn build(self) -> crate::types::AdministrativeActionFailureDetails {
        crate::types::AdministrativeActionFailureDetails {
            message: self.message,
        }
    }
}
