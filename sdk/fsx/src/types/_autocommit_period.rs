// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Sets the autocommit period of files in an FSx for ONTAP SnapLock volume, which determines how long the files must remain unmodified before they're automatically transitioned to the write once, read many (WORM) state. </p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/worm-state.html#worm-state-autocommit">Autocommit</a>. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutocommitPeriod {
    /// <p>Defines the type of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. Setting this value to <code>NONE</code> disables autocommit. The default value is <code>NONE</code>. </p>
    pub r#type: ::std::option::Option<crate::types::AutocommitPeriodType>,
    /// <p>Defines the amount of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. The following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Minutes</code>: 5 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 1 - 65,535</p> </li>
    /// <li> <p> <code>Days</code>: 1 - 3,650</p> </li>
    /// <li> <p> <code>Months</code>: 1 - 120</p> </li>
    /// <li> <p> <code>Years</code>: 1 - 10</p> </li>
    /// </ul>
    pub value: ::std::option::Option<i32>,
}
impl AutocommitPeriod {
    /// <p>Defines the type of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. Setting this value to <code>NONE</code> disables autocommit. The default value is <code>NONE</code>. </p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::AutocommitPeriodType> {
        self.r#type.as_ref()
    }
    /// <p>Defines the amount of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. The following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Minutes</code>: 5 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 1 - 65,535</p> </li>
    /// <li> <p> <code>Days</code>: 1 - 3,650</p> </li>
    /// <li> <p> <code>Months</code>: 1 - 120</p> </li>
    /// <li> <p> <code>Years</code>: 1 - 10</p> </li>
    /// </ul>
    pub fn value(&self) -> ::std::option::Option<i32> {
        self.value
    }
}
impl AutocommitPeriod {
    /// Creates a new builder-style object to manufacture [`AutocommitPeriod`](crate::types::AutocommitPeriod).
    pub fn builder() -> crate::types::builders::AutocommitPeriodBuilder {
        crate::types::builders::AutocommitPeriodBuilder::default()
    }
}

/// A builder for [`AutocommitPeriod`](crate::types::AutocommitPeriod).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AutocommitPeriodBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::AutocommitPeriodType>,
    pub(crate) value: ::std::option::Option<i32>,
}
impl AutocommitPeriodBuilder {
    /// <p>Defines the type of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. Setting this value to <code>NONE</code> disables autocommit. The default value is <code>NONE</code>. </p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::AutocommitPeriodType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Defines the type of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. Setting this value to <code>NONE</code> disables autocommit. The default value is <code>NONE</code>. </p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::AutocommitPeriodType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>Defines the type of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. Setting this value to <code>NONE</code> disables autocommit. The default value is <code>NONE</code>. </p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::AutocommitPeriodType> {
        &self.r#type
    }
    /// <p>Defines the amount of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. The following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Minutes</code>: 5 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 1 - 65,535</p> </li>
    /// <li> <p> <code>Days</code>: 1 - 3,650</p> </li>
    /// <li> <p> <code>Months</code>: 1 - 120</p> </li>
    /// <li> <p> <code>Years</code>: 1 - 10</p> </li>
    /// </ul>
    pub fn value(mut self, input: i32) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>Defines the amount of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. The following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Minutes</code>: 5 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 1 - 65,535</p> </li>
    /// <li> <p> <code>Days</code>: 1 - 3,650</p> </li>
    /// <li> <p> <code>Months</code>: 1 - 120</p> </li>
    /// <li> <p> <code>Years</code>: 1 - 10</p> </li>
    /// </ul>
    pub fn set_value(mut self, input: ::std::option::Option<i32>) -> Self {
        self.value = input;
        self
    }
    /// <p>Defines the amount of time for the autocommit period of a file in an FSx for ONTAP SnapLock volume. The following ranges are valid: </p>
    /// <ul>
    /// <li> <p> <code>Minutes</code>: 5 - 65,535</p> </li>
    /// <li> <p> <code>Hours</code>: 1 - 65,535</p> </li>
    /// <li> <p> <code>Days</code>: 1 - 3,650</p> </li>
    /// <li> <p> <code>Months</code>: 1 - 120</p> </li>
    /// <li> <p> <code>Years</code>: 1 - 10</p> </li>
    /// </ul>
    pub fn get_value(&self) -> &::std::option::Option<i32> {
        &self.value
    }
    /// Consumes the builder and constructs a [`AutocommitPeriod`](crate::types::AutocommitPeriod).
    pub fn build(self) -> crate::types::AutocommitPeriod {
        crate::types::AutocommitPeriod {
            r#type: self.r#type,
            value: self.value,
        }
    }
}
