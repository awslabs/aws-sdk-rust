// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteDataRepositoryAssociationInput {
    /// <p>The ID of the data repository association that you want to delete.</p>
    #[doc(hidden)]
    pub association_id: std::option::Option<std::string::String>,
    /// <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    #[doc(hidden)]
    pub client_request_token: std::option::Option<std::string::String>,
    /// <p>Set to <code>true</code> to delete the data in the file system that corresponds to the data repository association.</p>
    #[doc(hidden)]
    pub delete_data_in_file_system: std::option::Option<bool>,
}
impl DeleteDataRepositoryAssociationInput {
    /// <p>The ID of the data repository association that you want to delete.</p>
    pub fn association_id(&self) -> std::option::Option<&str> {
        self.association_id.as_deref()
    }
    /// <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    pub fn client_request_token(&self) -> std::option::Option<&str> {
        self.client_request_token.as_deref()
    }
    /// <p>Set to <code>true</code> to delete the data in the file system that corresponds to the data repository association.</p>
    pub fn delete_data_in_file_system(&self) -> std::option::Option<bool> {
        self.delete_data_in_file_system
    }
}
impl DeleteDataRepositoryAssociationInput {
    /// Creates a new builder-style object to manufacture [`DeleteDataRepositoryAssociationInput`](crate::operation::delete_data_repository_association::DeleteDataRepositoryAssociationInput).
    pub fn builder() -> crate::operation::delete_data_repository_association::builders::DeleteDataRepositoryAssociationInputBuilder{
        crate::operation::delete_data_repository_association::builders::DeleteDataRepositoryAssociationInputBuilder::default()
    }
}

/// A builder for [`DeleteDataRepositoryAssociationInput`](crate::operation::delete_data_repository_association::DeleteDataRepositoryAssociationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteDataRepositoryAssociationInputBuilder {
    pub(crate) association_id: std::option::Option<std::string::String>,
    pub(crate) client_request_token: std::option::Option<std::string::String>,
    pub(crate) delete_data_in_file_system: std::option::Option<bool>,
}
impl DeleteDataRepositoryAssociationInputBuilder {
    /// <p>The ID of the data repository association that you want to delete.</p>
    pub fn association_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.association_id = Some(input.into());
        self
    }
    /// <p>The ID of the data repository association that you want to delete.</p>
    pub fn set_association_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.association_id = input;
        self
    }
    /// <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    pub fn client_request_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_request_token = Some(input.into());
        self
    }
    /// <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    pub fn set_client_request_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.client_request_token = input;
        self
    }
    /// <p>Set to <code>true</code> to delete the data in the file system that corresponds to the data repository association.</p>
    pub fn delete_data_in_file_system(mut self, input: bool) -> Self {
        self.delete_data_in_file_system = Some(input);
        self
    }
    /// <p>Set to <code>true</code> to delete the data in the file system that corresponds to the data repository association.</p>
    pub fn set_delete_data_in_file_system(mut self, input: std::option::Option<bool>) -> Self {
        self.delete_data_in_file_system = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteDataRepositoryAssociationInput`](crate::operation::delete_data_repository_association::DeleteDataRepositoryAssociationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_data_repository_association::DeleteDataRepositoryAssociationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_data_repository_association::DeleteDataRepositoryAssociationInput {
                association_id: self.association_id
                ,
                client_request_token: self.client_request_token
                ,
                delete_data_in_file_system: self.delete_data_in_file_system
                ,
            }
        )
    }
}
