// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSnapshot`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_client_request_token): <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_name): <p>The name of the snapshot. </p>
    ///   - [`volume_id(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::volume_id) / [`set_volume_id(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_volume_id): <p>The ID of the volume that you are taking a snapshot of.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_tags): <p>A list of <code>Tag</code> values, with a maximum of 50 elements.</p>
    /// - On success, responds with [`CreateSnapshotOutput`](crate::operation::create_snapshot::CreateSnapshotOutput) with field(s):
    ///   - [`snapshot(Option<Snapshot>)`](crate::operation::create_snapshot::CreateSnapshotOutput::snapshot): <p>A description of the snapshot.</p>
    /// - On failure, responds with [`SdkError<CreateSnapshotError>`](crate::operation::create_snapshot::CreateSnapshotError)
    pub fn create_snapshot(
        &self,
    ) -> crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder {
        crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
