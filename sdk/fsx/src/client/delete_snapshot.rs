// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteSnapshot`](crate::operation::delete_snapshot::builders::DeleteSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::delete_snapshot::builders::DeleteSnapshotFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::delete_snapshot::builders::DeleteSnapshotFluentBuilder::set_client_request_token):<br>required: **false**<br><p>(Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p><br>
    ///   - [`snapshot_id(impl Into<String>)`](crate::operation::delete_snapshot::builders::DeleteSnapshotFluentBuilder::snapshot_id) / [`set_snapshot_id(Option<String>)`](crate::operation::delete_snapshot::builders::DeleteSnapshotFluentBuilder::set_snapshot_id):<br>required: **true**<br><p>The ID of the snapshot that you want to delete.</p><br>
    /// - On success, responds with [`DeleteSnapshotOutput`](crate::operation::delete_snapshot::DeleteSnapshotOutput) with field(s):
    ///   - [`snapshot_id(Option<String>)`](crate::operation::delete_snapshot::DeleteSnapshotOutput::snapshot_id): <p>The ID of the deleted snapshot.</p>
    ///   - [`lifecycle(Option<SnapshotLifecycle>)`](crate::operation::delete_snapshot::DeleteSnapshotOutput::lifecycle): <p>The lifecycle status of the snapshot. If the <code>DeleteSnapshot</code> operation is successful, this status is <code>DELETING</code>.</p>
    /// - On failure, responds with [`SdkError<DeleteSnapshotError>`](crate::operation::delete_snapshot::DeleteSnapshotError)
    pub fn delete_snapshot(&self) -> crate::operation::delete_snapshot::builders::DeleteSnapshotFluentBuilder {
        crate::operation::delete_snapshot::builders::DeleteSnapshotFluentBuilder::new(self.handle.clone())
    }
}
