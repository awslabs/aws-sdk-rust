// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RestoreVolumeFromSnapshot`](crate::client::fluent_builders::RestoreVolumeFromSnapshot) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::RestoreVolumeFromSnapshot::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::RestoreVolumeFromSnapshot::set_client_request_token): <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    ///   - [`volume_id(impl Into<String>)`](crate::client::fluent_builders::RestoreVolumeFromSnapshot::volume_id) / [`set_volume_id(Option<String>)`](crate::client::fluent_builders::RestoreVolumeFromSnapshot::set_volume_id): <p>The ID of the volume that you are restoring.</p>
    ///   - [`snapshot_id(impl Into<String>)`](crate::client::fluent_builders::RestoreVolumeFromSnapshot::snapshot_id) / [`set_snapshot_id(Option<String>)`](crate::client::fluent_builders::RestoreVolumeFromSnapshot::set_snapshot_id): <p>The ID of the source snapshot. Specifies the snapshot that you are restoring from.</p>
    ///   - [`options(Vec<RestoreOpenZfsVolumeOption>)`](crate::client::fluent_builders::RestoreVolumeFromSnapshot::options) / [`set_options(Option<Vec<RestoreOpenZfsVolumeOption>>)`](crate::client::fluent_builders::RestoreVolumeFromSnapshot::set_options): <p>The settings used when restoring the specified volume from snapshot.</p>  <ul>   <li> <p> <code>DELETE_INTERMEDIATE_SNAPSHOTS</code> - Deletes snapshots between the current state and the specified snapshot. If there are intermediate snapshots and this option isn't used, <code>RestoreVolumeFromSnapshot</code> fails.</p> </li>   <li> <p> <code>DELETE_CLONED_VOLUMES</code> - Deletes any dependent clone volumes created from intermediate snapshots. If there are any dependent clone volumes and this option isn't used, <code>RestoreVolumeFromSnapshot</code> fails.</p> </li>  </ul>
    /// - On success, responds with [`RestoreVolumeFromSnapshotOutput`](crate::output::RestoreVolumeFromSnapshotOutput) with field(s):
    ///   - [`volume_id(Option<String>)`](crate::output::RestoreVolumeFromSnapshotOutput::volume_id): <p>The ID of the volume that you restored.</p>
    ///   - [`lifecycle(Option<VolumeLifecycle>)`](crate::output::RestoreVolumeFromSnapshotOutput::lifecycle): <p>The lifecycle state of the volume being restored.</p>
    ///   - [`administrative_actions(Option<Vec<AdministrativeAction>>)`](crate::output::RestoreVolumeFromSnapshotOutput::administrative_actions): <p>A list of administrative actions for the file system that are in process or waiting to be processed. Administrative actions describe changes to the Amazon FSx system.</p>
    /// - On failure, responds with [`SdkError<RestoreVolumeFromSnapshotError>`](crate::error::RestoreVolumeFromSnapshotError)
    pub fn restore_volume_from_snapshot(
        &self,
    ) -> crate::client::fluent_builders::RestoreVolumeFromSnapshot {
        crate::client::fluent_builders::RestoreVolumeFromSnapshot::new(self.handle.clone())
    }
}
