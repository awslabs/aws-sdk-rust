// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteBackup`](crate::operation::delete_backup::builders::DeleteBackupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`backup_id(impl Into<String>)`](crate::operation::delete_backup::builders::DeleteBackupFluentBuilder::backup_id) / [`set_backup_id(Option<String>)`](crate::operation::delete_backup::builders::DeleteBackupFluentBuilder::set_backup_id): <p>The ID of the backup that you want to delete.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::delete_backup::builders::DeleteBackupFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::delete_backup::builders::DeleteBackupFluentBuilder::set_client_request_token): <p>A string of up to 64 ASCII characters that Amazon FSx uses to ensure idempotent deletion. This parameter is automatically filled on your behalf when using the CLI or SDK.</p>
    /// - On success, responds with [`DeleteBackupOutput`](crate::operation::delete_backup::DeleteBackupOutput) with field(s):
    ///   - [`backup_id(Option<String>)`](crate::operation::delete_backup::DeleteBackupOutput::backup_id): <p>The ID of the backup that was deleted.</p>
    ///   - [`lifecycle(Option<BackupLifecycle>)`](crate::operation::delete_backup::DeleteBackupOutput::lifecycle): <p>The lifecycle status of the backup. If the <code>DeleteBackup</code> operation is successful, the status is <code>DELETED</code>.</p>
    /// - On failure, responds with [`SdkError<DeleteBackupError>`](crate::operation::delete_backup::DeleteBackupError)
    pub fn delete_backup(
        &self,
    ) -> crate::operation::delete_backup::builders::DeleteBackupFluentBuilder {
        crate::operation::delete_backup::builders::DeleteBackupFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
