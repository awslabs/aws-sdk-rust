// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisassociateFileSystemAliases`](crate::client::fluent_builders::DisassociateFileSystemAliases) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::DisassociateFileSystemAliases::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::DisassociateFileSystemAliases::set_client_request_token): <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    ///   - [`file_system_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateFileSystemAliases::file_system_id) / [`set_file_system_id(Option<String>)`](crate::client::fluent_builders::DisassociateFileSystemAliases::set_file_system_id): <p>Specifies the file system from which to disassociate the DNS aliases.</p>
    ///   - [`aliases(Vec<String>)`](crate::client::fluent_builders::DisassociateFileSystemAliases::aliases) / [`set_aliases(Option<Vec<String>>)`](crate::client::fluent_builders::DisassociateFileSystemAliases::set_aliases): <p>An array of one or more DNS alias names to disassociate, or remove, from the file system.</p>
    /// - On success, responds with [`DisassociateFileSystemAliasesOutput`](crate::output::DisassociateFileSystemAliasesOutput) with field(s):
    ///   - [`aliases(Option<Vec<Alias>>)`](crate::output::DisassociateFileSystemAliasesOutput::aliases): <p>An array of one or more DNS aliases that Amazon FSx is attempting to disassociate from the file system.</p>
    /// - On failure, responds with [`SdkError<DisassociateFileSystemAliasesError>`](crate::error::DisassociateFileSystemAliasesError)
    pub fn disassociate_file_system_aliases(
        &self,
    ) -> crate::client::fluent_builders::DisassociateFileSystemAliases {
        crate::client::fluent_builders::DisassociateFileSystemAliases::new(self.handle.clone())
    }
}
