// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDataRepositoryTask`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(DataRepositoryTaskType)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::type) / [`set_type(Option<DataRepositoryTaskType>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::set_type): <p>Specifies the type of data repository task to create.</p>
    ///   - [`paths(Vec<String>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::paths) / [`set_paths(Option<Vec<String>>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::set_paths): <p>A list of paths for the data repository task to use when the task is processed. If a path that you provide isn't valid, the task fails.</p>  <ul>   <li> <p>For export tasks, the list contains paths on the Amazon FSx file system from which the files are exported to the Amazon S3 bucket. The default path is the file system root directory. The paths you provide need to be relative to the mount point of the file system. If the mount point is <code>/mnt/fsx</code> and <code>/mnt/fsx/path1</code> is a directory or file on the file system you want to export, then the path to provide is <code>path1</code>.</p> </li>   <li> <p>For import tasks, the list contains paths in the Amazon S3 bucket from which POSIX metadata changes are imported to the Amazon FSx file system. The path can be an S3 bucket or prefix in the format <code>s3://myBucket/myPrefix</code> (where <code>myPrefix</code> is optional).</p> </li>  </ul>
    ///   - [`file_system_id(impl Into<String>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::file_system_id) / [`set_file_system_id(Option<String>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::set_file_system_id): <p>The globally unique ID of the file system, assigned by Amazon FSx.</p>
    ///   - [`report(CompletionReport)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::report) / [`set_report(Option<CompletionReport>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::set_report): <p>Defines whether or not Amazon FSx provides a CompletionReport once the task has completed. A CompletionReport provides a detailed report on the files that Amazon FSx processed that meet the criteria specified by the <code>Scope</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/task-completion-report.html">Working with Task Completion Reports</a>.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::set_client_request_token): <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::set_tags): <p>A list of <code>Tag</code> values, with a maximum of 50 elements.</p>
    ///   - [`capacity_to_release(i64)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::capacity_to_release) / [`set_capacity_to_release(Option<i64>)`](crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::set_capacity_to_release): <p>Specifies the amount of data to release, in GiB, by an Amazon File Cache <code>AUTO_RELEASE_DATA</code> task that automatically releases files from the cache.</p>
    /// - On success, responds with [`CreateDataRepositoryTaskOutput`](crate::operation::create_data_repository_task::CreateDataRepositoryTaskOutput) with field(s):
    ///   - [`data_repository_task(Option<DataRepositoryTask>)`](crate::operation::create_data_repository_task::CreateDataRepositoryTaskOutput::data_repository_task): <p>The description of the data repository task that you just created.</p>
    /// - On failure, responds with [`SdkError<CreateDataRepositoryTaskError>`](crate::operation::create_data_repository_task::CreateDataRepositoryTaskError)
    pub fn create_data_repository_task(&self) -> crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder{
        crate::operation::create_data_repository_task::builders::CreateDataRepositoryTaskFluentBuilder::new(self.handle.clone())
    }
}
