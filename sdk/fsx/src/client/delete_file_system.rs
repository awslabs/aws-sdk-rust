// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteFileSystem`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`file_system_id(impl Into<String>)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::file_system_id) / [`set_file_system_id(Option<String>)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::set_file_system_id): <p>The ID of the file system that you want to delete.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::set_client_request_token): <p>A string of up to 64 ASCII characters that Amazon FSx uses to ensure idempotent deletion. This token is automatically filled on your behalf when using the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    ///   - [`windows_configuration(DeleteFileSystemWindowsConfiguration)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::windows_configuration) / [`set_windows_configuration(Option<DeleteFileSystemWindowsConfiguration>)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::set_windows_configuration): <p>The configuration object for the Microsoft Windows file system used in the <code>DeleteFileSystem</code> operation.</p>
    ///   - [`lustre_configuration(DeleteFileSystemLustreConfiguration)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::lustre_configuration) / [`set_lustre_configuration(Option<DeleteFileSystemLustreConfiguration>)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::set_lustre_configuration): <p>The configuration object for the Amazon FSx for Lustre file system being deleted in the <code>DeleteFileSystem</code> operation.</p>
    ///   - [`open_zfs_configuration(DeleteFileSystemOpenZfsConfiguration)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::open_zfs_configuration) / [`set_open_zfs_configuration(Option<DeleteFileSystemOpenZfsConfiguration>)`](crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::set_open_zfs_configuration): <p>The configuration object for the OpenZFS file system used in the <code>DeleteFileSystem</code> operation.</p>
    /// - On success, responds with [`DeleteFileSystemOutput`](crate::operation::delete_file_system::DeleteFileSystemOutput) with field(s):
    ///   - [`file_system_id(Option<String>)`](crate::operation::delete_file_system::DeleteFileSystemOutput::file_system_id): <p>The ID of the file system that's being deleted.</p>
    ///   - [`lifecycle(Option<FileSystemLifecycle>)`](crate::operation::delete_file_system::DeleteFileSystemOutput::lifecycle): <p>The file system lifecycle for the deletion request. If the <code>DeleteFileSystem</code> operation is successful, this status is <code>DELETING</code>.</p>
    ///   - [`windows_response(Option<DeleteFileSystemWindowsResponse>)`](crate::operation::delete_file_system::DeleteFileSystemOutput::windows_response): <p>The response object for the Microsoft Windows file system used in the <code>DeleteFileSystem</code> operation.</p>
    ///   - [`lustre_response(Option<DeleteFileSystemLustreResponse>)`](crate::operation::delete_file_system::DeleteFileSystemOutput::lustre_response): <p>The response object for the Amazon FSx for Lustre file system being deleted in the <code>DeleteFileSystem</code> operation.</p>
    ///   - [`open_zfs_response(Option<DeleteFileSystemOpenZfsResponse>)`](crate::operation::delete_file_system::DeleteFileSystemOutput::open_zfs_response): <p>The response object for the OpenZFS file system that's being deleted in the <code>DeleteFileSystem</code> operation.</p>
    /// - On failure, responds with [`SdkError<DeleteFileSystemError>`](crate::operation::delete_file_system::DeleteFileSystemError)
    pub fn delete_file_system(
        &self,
    ) -> crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder {
        crate::operation::delete_file_system::builders::DeleteFileSystemFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
