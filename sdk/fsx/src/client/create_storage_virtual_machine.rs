// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateStorageVirtualMachine`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`active_directory_configuration(CreateSvmActiveDirectoryConfiguration)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::active_directory_configuration) / [`set_active_directory_configuration(Option<CreateSvmActiveDirectoryConfiguration>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::set_active_directory_configuration): <p>Describes the self-managed Microsoft Active Directory to which you want to join the SVM. Joining an Active Directory provides user authentication and access control for SMB clients, including Microsoft Windows and macOS client accessing the file system.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::set_client_request_token): <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    ///   - [`file_system_id(impl Into<String>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::file_system_id) / [`set_file_system_id(Option<String>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::set_file_system_id): <p>The globally unique ID of the file system, assigned by Amazon FSx.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::set_name): <p>The name of the SVM.</p>
    ///   - [`svm_admin_password(impl Into<String>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::svm_admin_password) / [`set_svm_admin_password(Option<String>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::set_svm_admin_password): <p>The password to use when managing the SVM using the NetApp ONTAP CLI or REST API. If you do not specify a password, you can still use the file system's <code>fsxadmin</code> user to manage the SVM.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::set_tags): <p>A list of <code>Tag</code> values, with a maximum of 50 elements.</p>
    ///   - [`root_volume_security_style(StorageVirtualMachineRootVolumeSecurityStyle)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::root_volume_security_style) / [`set_root_volume_security_style(Option<StorageVirtualMachineRootVolumeSecurityStyle>)`](crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::set_root_volume_security_style): <p>The security style of the root volume of the SVM. Specify one of the following values:</p>  <ul>   <li> <p> <code>UNIX</code> if the file system is managed by a UNIX administrator, the majority of users are NFS clients, and an application accessing the data uses a UNIX user as the service account.</p> </li>   <li> <p> <code>NTFS</code> if the file system is managed by a Windows administrator, the majority of users are SMB clients, and an application accessing the data uses a Windows user as the service account.</p> </li>   <li> <p> <code>MIXED</code> if the file system is managed by both UNIX and Windows administrators and users consist of both NFS and SMB clients.</p> </li>  </ul>
    /// - On success, responds with [`CreateStorageVirtualMachineOutput`](crate::operation::create_storage_virtual_machine::CreateStorageVirtualMachineOutput) with field(s):
    ///   - [`storage_virtual_machine(Option<StorageVirtualMachine>)`](crate::operation::create_storage_virtual_machine::CreateStorageVirtualMachineOutput::storage_virtual_machine): <p>Returned after a successful <code>CreateStorageVirtualMachine</code> operation; describes the SVM just created.</p>
    /// - On failure, responds with [`SdkError<CreateStorageVirtualMachineError>`](crate::operation::create_storage_virtual_machine::CreateStorageVirtualMachineError)
    pub fn create_storage_virtual_machine(&self) -> crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder{
        crate::operation::create_storage_virtual_machine::builders::CreateStorageVirtualMachineFluentBuilder::new(self.handle.clone())
    }
}
