// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeFileSystems`](crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`file_system_ids(impl Into<String>)`](crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder::file_system_ids) / [`set_file_system_ids(Option<Vec::<String>>)`](crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder::set_file_system_ids):<br>required: **false**<br><p>IDs of the file systems whose descriptions you want to retrieve (String).</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder::set_max_results):<br>required: **false**<br><p>Maximum number of file systems to return in the response (integer). This parameter value must be greater than 0. The number of items that Amazon FSx returns is the minimum of the <code>MaxResults</code> parameter specified in the request and the service's internal maximum number of items per page.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder::set_next_token):<br>required: **false**<br><p>Opaque pagination token returned from a previous <code>DescribeFileSystems</code> operation (String). If a token present, the operation continues the list from where the returning call left off.</p><br>
    /// - On success, responds with [`DescribeFileSystemsOutput`](crate::operation::describe_file_systems::DescribeFileSystemsOutput) with field(s):
    ///   - [`file_systems(Option<Vec::<FileSystem>>)`](crate::operation::describe_file_systems::DescribeFileSystemsOutput::file_systems): <p>An array of file system descriptions.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_file_systems::DescribeFileSystemsOutput::next_token): <p>Present if there are more file systems than returned in the response (String). You can use the <code>NextToken</code> value in the later request to fetch the descriptions. </p>
    /// - On failure, responds with [`SdkError<DescribeFileSystemsError>`](crate::operation::describe_file_systems::DescribeFileSystemsError)
    pub fn describe_file_systems(&self) -> crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder {
        crate::operation::describe_file_systems::builders::DescribeFileSystemsFluentBuilder::new(self.handle.clone())
    }
}
