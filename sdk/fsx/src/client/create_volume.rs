// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateVolume`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::set_client_request_token): <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    ///   - [`volume_type(VolumeType)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::volume_type) / [`set_volume_type(Option<VolumeType>)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::set_volume_type): <p>Specifies the type of volume to create; <code>ONTAP</code> and <code>OPENZFS</code> are the only valid volume types.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::set_name): <p>Specifies the name of the volume that you're creating.</p>
    ///   - [`ontap_configuration(CreateOntapVolumeConfiguration)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::ontap_configuration) / [`set_ontap_configuration(Option<CreateOntapVolumeConfiguration>)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::set_ontap_configuration): <p>Specifies the configuration to use when creating the ONTAP volume.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::set_tags): <p>A list of <code>Tag</code> values, with a maximum of 50 elements.</p>
    ///   - [`open_zfs_configuration(CreateOpenZfsVolumeConfiguration)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::open_zfs_configuration) / [`set_open_zfs_configuration(Option<CreateOpenZfsVolumeConfiguration>)`](crate::operation::create_volume::builders::CreateVolumeFluentBuilder::set_open_zfs_configuration): <p>Specifies the configuration to use when creating the OpenZFS volume.</p>
    /// - On success, responds with [`CreateVolumeOutput`](crate::operation::create_volume::CreateVolumeOutput) with field(s):
    ///   - [`volume(Option<Volume>)`](crate::operation::create_volume::CreateVolumeOutput::volume): <p>Returned after a successful <code>CreateVolume</code> API operation, describing the volume just created.</p>
    /// - On failure, responds with [`SdkError<CreateVolumeError>`](crate::operation::create_volume::CreateVolumeError)
    pub fn create_volume(
        &self,
    ) -> crate::operation::create_volume::builders::CreateVolumeFluentBuilder {
        crate::operation::create_volume::builders::CreateVolumeFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
