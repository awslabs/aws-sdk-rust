// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ReleaseFileSystemNfsV3Locks`](crate::operation::release_file_system_nfs_v3_locks::builders::ReleaseFileSystemNfsV3LocksFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`file_system_id(impl Into<String>)`](crate::operation::release_file_system_nfs_v3_locks::builders::ReleaseFileSystemNfsV3LocksFluentBuilder::file_system_id) / [`set_file_system_id(Option<String>)`](crate::operation::release_file_system_nfs_v3_locks::builders::ReleaseFileSystemNfsV3LocksFluentBuilder::set_file_system_id): <p>The globally unique ID of the file system, assigned by Amazon FSx.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::release_file_system_nfs_v3_locks::builders::ReleaseFileSystemNfsV3LocksFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::release_file_system_nfs_v3_locks::builders::ReleaseFileSystemNfsV3LocksFluentBuilder::set_client_request_token): <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    /// - On success, responds with [`ReleaseFileSystemNfsV3LocksOutput`](crate::operation::release_file_system_nfs_v3_locks::ReleaseFileSystemNfsV3LocksOutput) with field(s):
    ///   - [`file_system(Option<FileSystem>)`](crate::operation::release_file_system_nfs_v3_locks::ReleaseFileSystemNfsV3LocksOutput::file_system): <p>A description of a specific Amazon FSx file system.</p>
    /// - On failure, responds with [`SdkError<ReleaseFileSystemNfsV3LocksError>`](crate::operation::release_file_system_nfs_v3_locks::ReleaseFileSystemNfsV3LocksError)
    pub fn release_file_system_nfs_v3_locks(&self) -> crate::operation::release_file_system_nfs_v3_locks::builders::ReleaseFileSystemNfsV3LocksFluentBuilder{
        crate::operation::release_file_system_nfs_v3_locks::builders::ReleaseFileSystemNfsV3LocksFluentBuilder::new(self.handle.clone())
    }
}
