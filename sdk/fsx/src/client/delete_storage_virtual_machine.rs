// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteStorageVirtualMachine`](crate::operation::delete_storage_virtual_machine::builders::DeleteStorageVirtualMachineFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::delete_storage_virtual_machine::builders::DeleteStorageVirtualMachineFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::delete_storage_virtual_machine::builders::DeleteStorageVirtualMachineFluentBuilder::set_client_request_token):<br>required: **false**<br><p>(Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p><br>
    ///   - [`storage_virtual_machine_id(impl Into<String>)`](crate::operation::delete_storage_virtual_machine::builders::DeleteStorageVirtualMachineFluentBuilder::storage_virtual_machine_id) / [`set_storage_virtual_machine_id(Option<String>)`](crate::operation::delete_storage_virtual_machine::builders::DeleteStorageVirtualMachineFluentBuilder::set_storage_virtual_machine_id):<br>required: **true**<br><p>The ID of the SVM that you want to delete.</p><br>
    /// - On success, responds with [`DeleteStorageVirtualMachineOutput`](crate::operation::delete_storage_virtual_machine::DeleteStorageVirtualMachineOutput) with field(s):
    ///   - [`storage_virtual_machine_id(Option<String>)`](crate::operation::delete_storage_virtual_machine::DeleteStorageVirtualMachineOutput::storage_virtual_machine_id): <p>The ID of the SVM Amazon FSx is deleting.</p>
    ///   - [`lifecycle(Option<StorageVirtualMachineLifecycle>)`](crate::operation::delete_storage_virtual_machine::DeleteStorageVirtualMachineOutput::lifecycle): <p>Describes the lifecycle state of the SVM being deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteStorageVirtualMachineError>`](crate::operation::delete_storage_virtual_machine::DeleteStorageVirtualMachineError)
    pub fn delete_storage_virtual_machine(
        &self,
    ) -> crate::operation::delete_storage_virtual_machine::builders::DeleteStorageVirtualMachineFluentBuilder {
        crate::operation::delete_storage_virtual_machine::builders::DeleteStorageVirtualMachineFluentBuilder::new(self.handle.clone())
    }
}
