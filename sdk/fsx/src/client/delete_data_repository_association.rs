// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDataRepositoryAssociation`](crate::client::fluent_builders::DeleteDataRepositoryAssociation) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`association_id(impl Into<String>)`](crate::client::fluent_builders::DeleteDataRepositoryAssociation::association_id) / [`set_association_id(Option<String>)`](crate::client::fluent_builders::DeleteDataRepositoryAssociation::set_association_id): <p>The ID of the data repository association that you want to delete.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::DeleteDataRepositoryAssociation::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::DeleteDataRepositoryAssociation::set_client_request_token): <p>(Optional) An idempotency token for resource creation, in a string of up to 64 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p>
    ///   - [`delete_data_in_file_system(bool)`](crate::client::fluent_builders::DeleteDataRepositoryAssociation::delete_data_in_file_system) / [`set_delete_data_in_file_system(Option<bool>)`](crate::client::fluent_builders::DeleteDataRepositoryAssociation::set_delete_data_in_file_system): <p>Set to <code>true</code> to delete the data in the file system that corresponds to the data repository association.</p>
    /// - On success, responds with [`DeleteDataRepositoryAssociationOutput`](crate::output::DeleteDataRepositoryAssociationOutput) with field(s):
    ///   - [`association_id(Option<String>)`](crate::output::DeleteDataRepositoryAssociationOutput::association_id): <p>The ID of the data repository association being deleted.</p>
    ///   - [`lifecycle(Option<DataRepositoryLifecycle>)`](crate::output::DeleteDataRepositoryAssociationOutput::lifecycle): <p>Describes the lifecycle state of the data repository association being deleted.</p>
    ///   - [`delete_data_in_file_system(Option<bool>)`](crate::output::DeleteDataRepositoryAssociationOutput::delete_data_in_file_system): <p>Indicates whether data in the file system that corresponds to the data repository association is being deleted. Default is <code>false</code>.</p>
    /// - On failure, responds with [`SdkError<DeleteDataRepositoryAssociationError>`](crate::error::DeleteDataRepositoryAssociationError)
    pub fn delete_data_repository_association(
        &self,
    ) -> crate::client::fluent_builders::DeleteDataRepositoryAssociation {
        crate::client::fluent_builders::DeleteDataRepositoryAssociation::new(self.handle.clone())
    }
}
