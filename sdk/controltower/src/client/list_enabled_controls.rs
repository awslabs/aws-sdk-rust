// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListEnabledControls`](crate::client::fluent_builders::ListEnabledControls) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEnabledControls::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`target_identifier(impl Into<String>)`](crate::client::fluent_builders::ListEnabledControls::target_identifier) / [`set_target_identifier(Option<String>)`](crate::client::fluent_builders::ListEnabledControls::set_target_identifier): <p>The ARN of the organizational unit.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEnabledControls::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEnabledControls::set_next_token): <p>The token to continue the list from a previous API call with the same parameters.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListEnabledControls::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListEnabledControls::set_max_results): <p>How many results to return per API call.</p>
    /// - On success, responds with [`ListEnabledControlsOutput`](crate::output::ListEnabledControlsOutput) with field(s):
    ///   - [`enabled_controls(Option<Vec<EnabledControlSummary>>)`](crate::output::ListEnabledControlsOutput::enabled_controls): <p>Lists the controls enabled by AWS Control Tower on the specified organizational unit and the accounts it contains.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListEnabledControlsOutput::next_token): <p>Retrieves the next page of results. If the string is empty, the current response is the end of the results.</p>
    /// - On failure, responds with [`SdkError<ListEnabledControlsError>`](crate::error::ListEnabledControlsError)
    pub fn list_enabled_controls(&self) -> crate::client::fluent_builders::ListEnabledControls {
        crate::client::fluent_builders::ListEnabledControls::new(self.handle.clone())
    }
}
