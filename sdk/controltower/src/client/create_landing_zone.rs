// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLandingZone`](crate::operation::create_landing_zone::builders::CreateLandingZoneFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`version(impl Into<String>)`](crate::operation::create_landing_zone::builders::CreateLandingZoneFluentBuilder::version) / [`set_version(Option<String>)`](crate::operation::create_landing_zone::builders::CreateLandingZoneFluentBuilder::set_version):<br>required: **true**<br><p>The landing zone version, for example, 3.0.</p><br>
    ///   - [`manifest(Document)`](crate::operation::create_landing_zone::builders::CreateLandingZoneFluentBuilder::manifest) / [`set_manifest(Option<Document>)`](crate::operation::create_landing_zone::builders::CreateLandingZoneFluentBuilder::set_manifest):<br>required: **true**<br><p>The manifest JSON file is a text file that describes your Amazon Web Services resources. For examples, review <a href="https://docs.aws.amazon.com/controltower/latest/userguide/lz-api-launch">Launch your landing zone</a>.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_landing_zone::builders::CreateLandingZoneFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_landing_zone::builders::CreateLandingZoneFluentBuilder::set_tags):<br>required: **false**<br><p>Tags to be applied to the landing zone.</p><br>
    /// - On success, responds with [`CreateLandingZoneOutput`](crate::operation::create_landing_zone::CreateLandingZoneOutput) with field(s):
    ///   - [`arn(String)`](crate::operation::create_landing_zone::CreateLandingZoneOutput::arn): <p>The ARN of the landing zone resource.</p>
    ///   - [`operation_identifier(String)`](crate::operation::create_landing_zone::CreateLandingZoneOutput::operation_identifier): <p>A unique identifier assigned to a <code>CreateLandingZone</code> operation. You can use this identifier as an input of <code>GetLandingZoneOperation</code> to check the operation's status.</p>
    /// - On failure, responds with [`SdkError<CreateLandingZoneError>`](crate::operation::create_landing_zone::CreateLandingZoneError)
    pub fn create_landing_zone(&self) -> crate::operation::create_landing_zone::builders::CreateLandingZoneFluentBuilder {
        crate::operation::create_landing_zone::builders::CreateLandingZoneFluentBuilder::new(self.handle.clone())
    }
}
