// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`EnableControl`](crate::operation::enable_control::builders::EnableControlFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`control_identifier(impl Into<String>)`](crate::operation::enable_control::builders::EnableControlFluentBuilder::control_identifier) / [`set_control_identifier(Option<String>)`](crate::operation::enable_control::builders::EnableControlFluentBuilder::set_control_identifier):<br>required: **true**<br><p>The ARN of the control. Only <b>Strongly recommended</b> and <b>Elective</b> controls are permitted, with the exception of the <b>Region deny</b> control. For information on how to find the <code>controlIdentifier</code>, see <a href="https://docs.aws.amazon.com/controltower/latest/APIReference/Welcome.html">the overview page</a>.</p><br>
    ///   - [`target_identifier(impl Into<String>)`](crate::operation::enable_control::builders::EnableControlFluentBuilder::target_identifier) / [`set_target_identifier(Option<String>)`](crate::operation::enable_control::builders::EnableControlFluentBuilder::set_target_identifier):<br>required: **true**<br><p>The ARN of the organizational unit. For information on how to find the <code>targetIdentifier</code>, see <a href="https://docs.aws.amazon.com/controltower/latest/APIReference/Welcome.html">the overview page</a>.</p><br>
    /// - On success, responds with [`EnableControlOutput`](crate::operation::enable_control::EnableControlOutput) with field(s):
    ///   - [`operation_identifier(String)`](crate::operation::enable_control::EnableControlOutput::operation_identifier): <p>The ID of the asynchronous operation, which is used to track status. The operation is available for 90 days.</p>
    /// - On failure, responds with [`SdkError<EnableControlError>`](crate::operation::enable_control::EnableControlError)
    pub fn enable_control(&self) -> crate::operation::enable_control::builders::EnableControlFluentBuilder {
        crate::operation::enable_control::builders::EnableControlFluentBuilder::new(self.handle.clone())
    }
}
