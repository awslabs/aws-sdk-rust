// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`EnableControl`](crate::client::fluent_builders::EnableControl) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`control_identifier(impl Into<String>)`](crate::client::fluent_builders::EnableControl::control_identifier) / [`set_control_identifier(Option<String>)`](crate::client::fluent_builders::EnableControl::set_control_identifier): <p>The ARN of the control. Only <b>Strongly recommended</b> and <b>Elective</b> controls are permitted, with the exception of the <b>Region deny</b> guardrail.</p>
    ///   - [`target_identifier(impl Into<String>)`](crate::client::fluent_builders::EnableControl::target_identifier) / [`set_target_identifier(Option<String>)`](crate::client::fluent_builders::EnableControl::set_target_identifier): <p>The ARN of the organizational unit.</p>
    /// - On success, responds with [`EnableControlOutput`](crate::output::EnableControlOutput) with field(s):
    ///   - [`operation_identifier(Option<String>)`](crate::output::EnableControlOutput::operation_identifier): <p>The ID of the asynchronous operation, which is used to track status. The operation is available for 90 days.</p>
    /// - On failure, responds with [`SdkError<EnableControlError>`](crate::error::EnableControlError)
    pub fn enable_control(&self) -> crate::client::fluent_builders::EnableControl {
        crate::client::fluent_builders::EnableControl::new(self.handle.clone())
    }
}
