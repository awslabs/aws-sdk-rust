// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AddApplicationOutput`](crate::client::fluent_builders::AddApplicationOutput) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::client::fluent_builders::AddApplicationOutput::application_name) / [`set_application_name(Option<String>)`](crate::client::fluent_builders::AddApplicationOutput::set_application_name): <p>Name of the application to which you want to add the output configuration.</p>
    ///   - [`current_application_version_id(i64)`](crate::client::fluent_builders::AddApplicationOutput::current_application_version_id) / [`set_current_application_version_id(Option<i64>)`](crate::client::fluent_builders::AddApplicationOutput::set_current_application_version_id): <p>Version of the application to which you want to add the output configuration. You can use the <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_DescribeApplication.html">DescribeApplication</a> operation to get the current application version. If the version specified is not the current version, the <code>ConcurrentModificationException</code> is returned. </p>
    ///   - [`output(Output)`](crate::client::fluent_builders::AddApplicationOutput::output) / [`set_output(Option<Output>)`](crate::client::fluent_builders::AddApplicationOutput::set_output): <p>An array of objects, each describing one output configuration. In the output configuration, you specify the name of an in-application stream, a destination (that is, an Amazon Kinesis stream, an Amazon Kinesis Firehose delivery stream, or an AWS Lambda function), and record the formation to use when writing to the destination.</p>
    /// - On success, responds with [`AddApplicationOutputOutput`](crate::output::AddApplicationOutputOutput)
    /// - On failure, responds with [`SdkError<AddApplicationOutputError>`](crate::error::AddApplicationOutputError)
    pub fn add_application_output(&self) -> crate::client::fluent_builders::AddApplicationOutput {
        crate::client::fluent_builders::AddApplicationOutput::new(self.handle.clone())
    }
}
