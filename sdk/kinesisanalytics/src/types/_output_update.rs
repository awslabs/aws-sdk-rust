// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Describes updates to the output configuration identified by the <code>OutputId</code>. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OutputUpdate {
    /// <p>Identifies the specific output configuration that you want to update.</p>
    pub output_id: ::std::string::String,
    /// <p>If you want to specify a different in-application stream for this output configuration, use this field to specify the new in-application stream name.</p>
    pub name_update: ::std::option::Option<::std::string::String>,
    /// <p>Describes an Amazon Kinesis stream as the destination for the output.</p>
    pub kinesis_streams_output_update: ::std::option::Option<crate::types::KinesisStreamsOutputUpdate>,
    /// <p>Describes an Amazon Kinesis Firehose delivery stream as the destination for the output.</p>
    pub kinesis_firehose_output_update: ::std::option::Option<crate::types::KinesisFirehoseOutputUpdate>,
    /// <p>Describes an AWS Lambda function as the destination for the output.</p>
    pub lambda_output_update: ::std::option::Option<crate::types::LambdaOutputUpdate>,
    /// <p>Describes the data format when records are written to the destination. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>.</p>
    pub destination_schema_update: ::std::option::Option<crate::types::DestinationSchema>,
}
impl OutputUpdate {
    /// <p>Identifies the specific output configuration that you want to update.</p>
    pub fn output_id(&self) -> &str {
        use std::ops::Deref;
        self.output_id.deref()
    }
    /// <p>If you want to specify a different in-application stream for this output configuration, use this field to specify the new in-application stream name.</p>
    pub fn name_update(&self) -> ::std::option::Option<&str> {
        self.name_update.as_deref()
    }
    /// <p>Describes an Amazon Kinesis stream as the destination for the output.</p>
    pub fn kinesis_streams_output_update(&self) -> ::std::option::Option<&crate::types::KinesisStreamsOutputUpdate> {
        self.kinesis_streams_output_update.as_ref()
    }
    /// <p>Describes an Amazon Kinesis Firehose delivery stream as the destination for the output.</p>
    pub fn kinesis_firehose_output_update(&self) -> ::std::option::Option<&crate::types::KinesisFirehoseOutputUpdate> {
        self.kinesis_firehose_output_update.as_ref()
    }
    /// <p>Describes an AWS Lambda function as the destination for the output.</p>
    pub fn lambda_output_update(&self) -> ::std::option::Option<&crate::types::LambdaOutputUpdate> {
        self.lambda_output_update.as_ref()
    }
    /// <p>Describes the data format when records are written to the destination. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>.</p>
    pub fn destination_schema_update(&self) -> ::std::option::Option<&crate::types::DestinationSchema> {
        self.destination_schema_update.as_ref()
    }
}
impl OutputUpdate {
    /// Creates a new builder-style object to manufacture [`OutputUpdate`](crate::types::OutputUpdate).
    pub fn builder() -> crate::types::builders::OutputUpdateBuilder {
        crate::types::builders::OutputUpdateBuilder::default()
    }
}

/// A builder for [`OutputUpdate`](crate::types::OutputUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OutputUpdateBuilder {
    pub(crate) output_id: ::std::option::Option<::std::string::String>,
    pub(crate) name_update: ::std::option::Option<::std::string::String>,
    pub(crate) kinesis_streams_output_update: ::std::option::Option<crate::types::KinesisStreamsOutputUpdate>,
    pub(crate) kinesis_firehose_output_update: ::std::option::Option<crate::types::KinesisFirehoseOutputUpdate>,
    pub(crate) lambda_output_update: ::std::option::Option<crate::types::LambdaOutputUpdate>,
    pub(crate) destination_schema_update: ::std::option::Option<crate::types::DestinationSchema>,
}
impl OutputUpdateBuilder {
    /// <p>Identifies the specific output configuration that you want to update.</p>
    /// This field is required.
    pub fn output_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.output_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Identifies the specific output configuration that you want to update.</p>
    pub fn set_output_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.output_id = input;
        self
    }
    /// <p>Identifies the specific output configuration that you want to update.</p>
    pub fn get_output_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.output_id
    }
    /// <p>If you want to specify a different in-application stream for this output configuration, use this field to specify the new in-application stream name.</p>
    pub fn name_update(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name_update = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If you want to specify a different in-application stream for this output configuration, use this field to specify the new in-application stream name.</p>
    pub fn set_name_update(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name_update = input;
        self
    }
    /// <p>If you want to specify a different in-application stream for this output configuration, use this field to specify the new in-application stream name.</p>
    pub fn get_name_update(&self) -> &::std::option::Option<::std::string::String> {
        &self.name_update
    }
    /// <p>Describes an Amazon Kinesis stream as the destination for the output.</p>
    pub fn kinesis_streams_output_update(mut self, input: crate::types::KinesisStreamsOutputUpdate) -> Self {
        self.kinesis_streams_output_update = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes an Amazon Kinesis stream as the destination for the output.</p>
    pub fn set_kinesis_streams_output_update(mut self, input: ::std::option::Option<crate::types::KinesisStreamsOutputUpdate>) -> Self {
        self.kinesis_streams_output_update = input;
        self
    }
    /// <p>Describes an Amazon Kinesis stream as the destination for the output.</p>
    pub fn get_kinesis_streams_output_update(&self) -> &::std::option::Option<crate::types::KinesisStreamsOutputUpdate> {
        &self.kinesis_streams_output_update
    }
    /// <p>Describes an Amazon Kinesis Firehose delivery stream as the destination for the output.</p>
    pub fn kinesis_firehose_output_update(mut self, input: crate::types::KinesisFirehoseOutputUpdate) -> Self {
        self.kinesis_firehose_output_update = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes an Amazon Kinesis Firehose delivery stream as the destination for the output.</p>
    pub fn set_kinesis_firehose_output_update(mut self, input: ::std::option::Option<crate::types::KinesisFirehoseOutputUpdate>) -> Self {
        self.kinesis_firehose_output_update = input;
        self
    }
    /// <p>Describes an Amazon Kinesis Firehose delivery stream as the destination for the output.</p>
    pub fn get_kinesis_firehose_output_update(&self) -> &::std::option::Option<crate::types::KinesisFirehoseOutputUpdate> {
        &self.kinesis_firehose_output_update
    }
    /// <p>Describes an AWS Lambda function as the destination for the output.</p>
    pub fn lambda_output_update(mut self, input: crate::types::LambdaOutputUpdate) -> Self {
        self.lambda_output_update = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes an AWS Lambda function as the destination for the output.</p>
    pub fn set_lambda_output_update(mut self, input: ::std::option::Option<crate::types::LambdaOutputUpdate>) -> Self {
        self.lambda_output_update = input;
        self
    }
    /// <p>Describes an AWS Lambda function as the destination for the output.</p>
    pub fn get_lambda_output_update(&self) -> &::std::option::Option<crate::types::LambdaOutputUpdate> {
        &self.lambda_output_update
    }
    /// <p>Describes the data format when records are written to the destination. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>.</p>
    pub fn destination_schema_update(mut self, input: crate::types::DestinationSchema) -> Self {
        self.destination_schema_update = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes the data format when records are written to the destination. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>.</p>
    pub fn set_destination_schema_update(mut self, input: ::std::option::Option<crate::types::DestinationSchema>) -> Self {
        self.destination_schema_update = input;
        self
    }
    /// <p>Describes the data format when records are written to the destination. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html">Configuring Application Output</a>.</p>
    pub fn get_destination_schema_update(&self) -> &::std::option::Option<crate::types::DestinationSchema> {
        &self.destination_schema_update
    }
    /// Consumes the builder and constructs a [`OutputUpdate`](crate::types::OutputUpdate).
    /// This method will fail if any of the following fields are not set:
    /// - [`output_id`](crate::types::builders::OutputUpdateBuilder::output_id)
    pub fn build(self) -> ::std::result::Result<crate::types::OutputUpdate, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::OutputUpdate {
            output_id: self.output_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "output_id",
                    "output_id was not specified but it is required when building OutputUpdate",
                )
            })?,
            name_update: self.name_update,
            kinesis_streams_output_update: self.kinesis_streams_output_update,
            kinesis_firehose_output_update: self.kinesis_firehose_output_update,
            lambda_output_update: self.lambda_output_update,
            destination_schema_update: self.destination_schema_update,
        })
    }
}
