// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_discover_input_schema_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::discover_input_schema::DiscoverInputSchemaInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.resource_arn {
        object.key("ResourceARN").string(var_1.as_str());
    }
    if let Some(var_2) = &input.role_arn {
        object.key("RoleARN").string(var_2.as_str());
    }
    if let Some(var_3) = &input.input_starting_position_configuration {
        #[allow(unused_mut)]
        let mut object_4 = object.key("InputStartingPositionConfiguration").start_object();
        crate::protocol_serde::shape_input_starting_position_configuration::ser_input_starting_position_configuration(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.s3_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object.key("S3Configuration").start_object();
        crate::protocol_serde::shape_s3_configuration::ser_s3_configuration(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.input_processing_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("InputProcessingConfiguration").start_object();
        crate::protocol_serde::shape_input_processing_configuration::ser_input_processing_configuration(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
