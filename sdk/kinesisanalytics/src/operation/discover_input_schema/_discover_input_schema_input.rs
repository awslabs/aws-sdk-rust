// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DiscoverInputSchemaInput {
    /// <p>Amazon Resource Name (ARN) of the streaming source.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
    /// <p>ARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
    /// <p>Point at which you want Amazon Kinesis Analytics to start reading records from the specified streaming source discovery purposes.</p>
    #[doc(hidden)]
    pub input_starting_position_configuration:
        std::option::Option<crate::types::InputStartingPositionConfiguration>,
    /// <p>Specify this parameter to discover a schema from data in an Amazon S3 object.</p>
    #[doc(hidden)]
    pub s3_configuration: std::option::Option<crate::types::S3Configuration>,
    /// <p>The <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html">InputProcessingConfiguration</a> to use to preprocess the records before discovering the schema of the records.</p>
    #[doc(hidden)]
    pub input_processing_configuration:
        std::option::Option<crate::types::InputProcessingConfiguration>,
}
impl DiscoverInputSchemaInput {
    /// <p>Amazon Resource Name (ARN) of the streaming source.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>ARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>Point at which you want Amazon Kinesis Analytics to start reading records from the specified streaming source discovery purposes.</p>
    pub fn input_starting_position_configuration(
        &self,
    ) -> std::option::Option<&crate::types::InputStartingPositionConfiguration> {
        self.input_starting_position_configuration.as_ref()
    }
    /// <p>Specify this parameter to discover a schema from data in an Amazon S3 object.</p>
    pub fn s3_configuration(&self) -> std::option::Option<&crate::types::S3Configuration> {
        self.s3_configuration.as_ref()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html">InputProcessingConfiguration</a> to use to preprocess the records before discovering the schema of the records.</p>
    pub fn input_processing_configuration(
        &self,
    ) -> std::option::Option<&crate::types::InputProcessingConfiguration> {
        self.input_processing_configuration.as_ref()
    }
}
impl DiscoverInputSchemaInput {
    /// Creates a new builder-style object to manufacture [`DiscoverInputSchemaInput`](crate::operation::discover_input_schema::DiscoverInputSchemaInput).
    pub fn builder(
    ) -> crate::operation::discover_input_schema::builders::DiscoverInputSchemaInputBuilder {
        crate::operation::discover_input_schema::builders::DiscoverInputSchemaInputBuilder::default(
        )
    }
}

/// A builder for [`DiscoverInputSchemaInput`](crate::operation::discover_input_schema::DiscoverInputSchemaInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DiscoverInputSchemaInputBuilder {
    pub(crate) resource_arn: std::option::Option<std::string::String>,
    pub(crate) role_arn: std::option::Option<std::string::String>,
    pub(crate) input_starting_position_configuration:
        std::option::Option<crate::types::InputStartingPositionConfiguration>,
    pub(crate) s3_configuration: std::option::Option<crate::types::S3Configuration>,
    pub(crate) input_processing_configuration:
        std::option::Option<crate::types::InputProcessingConfiguration>,
}
impl DiscoverInputSchemaInputBuilder {
    /// <p>Amazon Resource Name (ARN) of the streaming source.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>Amazon Resource Name (ARN) of the streaming source.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>ARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>ARN of the IAM role that Amazon Kinesis Analytics can assume to access the stream on your behalf.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>Point at which you want Amazon Kinesis Analytics to start reading records from the specified streaming source discovery purposes.</p>
    pub fn input_starting_position_configuration(
        mut self,
        input: crate::types::InputStartingPositionConfiguration,
    ) -> Self {
        self.input_starting_position_configuration = Some(input);
        self
    }
    /// <p>Point at which you want Amazon Kinesis Analytics to start reading records from the specified streaming source discovery purposes.</p>
    pub fn set_input_starting_position_configuration(
        mut self,
        input: std::option::Option<crate::types::InputStartingPositionConfiguration>,
    ) -> Self {
        self.input_starting_position_configuration = input;
        self
    }
    /// <p>Specify this parameter to discover a schema from data in an Amazon S3 object.</p>
    pub fn s3_configuration(mut self, input: crate::types::S3Configuration) -> Self {
        self.s3_configuration = Some(input);
        self
    }
    /// <p>Specify this parameter to discover a schema from data in an Amazon S3 object.</p>
    pub fn set_s3_configuration(
        mut self,
        input: std::option::Option<crate::types::S3Configuration>,
    ) -> Self {
        self.s3_configuration = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html">InputProcessingConfiguration</a> to use to preprocess the records before discovering the schema of the records.</p>
    pub fn input_processing_configuration(
        mut self,
        input: crate::types::InputProcessingConfiguration,
    ) -> Self {
        self.input_processing_configuration = Some(input);
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html">InputProcessingConfiguration</a> to use to preprocess the records before discovering the schema of the records.</p>
    pub fn set_input_processing_configuration(
        mut self,
        input: std::option::Option<crate::types::InputProcessingConfiguration>,
    ) -> Self {
        self.input_processing_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`DiscoverInputSchemaInput`](crate::operation::discover_input_schema::DiscoverInputSchemaInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::discover_input_schema::DiscoverInputSchemaInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::discover_input_schema::DiscoverInputSchemaInput {
                resource_arn: self.resource_arn,
                role_arn: self.role_arn,
                input_starting_position_configuration: self.input_starting_position_configuration,
                s3_configuration: self.s3_configuration,
                input_processing_configuration: self.input_processing_configuration,
            },
        )
    }
}
