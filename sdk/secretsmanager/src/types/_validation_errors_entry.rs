// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Displays errors that occurred during validation of the resource policy.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ValidationErrorsEntry {
    /// <p>Checks the name of the policy.</p>
    #[doc(hidden)]
    pub check_name: std::option::Option<std::string::String>,
    /// <p>Displays error messages if validation encounters problems during validation of the resource policy.</p>
    #[doc(hidden)]
    pub error_message: std::option::Option<std::string::String>,
}
impl ValidationErrorsEntry {
    /// <p>Checks the name of the policy.</p>
    pub fn check_name(&self) -> std::option::Option<&str> {
        self.check_name.as_deref()
    }
    /// <p>Displays error messages if validation encounters problems during validation of the resource policy.</p>
    pub fn error_message(&self) -> std::option::Option<&str> {
        self.error_message.as_deref()
    }
}
impl ValidationErrorsEntry {
    /// Creates a new builder-style object to manufacture [`ValidationErrorsEntry`](crate::types::ValidationErrorsEntry).
    pub fn builder() -> crate::types::builders::ValidationErrorsEntryBuilder {
        crate::types::builders::ValidationErrorsEntryBuilder::default()
    }
}

/// A builder for [`ValidationErrorsEntry`](crate::types::ValidationErrorsEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ValidationErrorsEntryBuilder {
    pub(crate) check_name: std::option::Option<std::string::String>,
    pub(crate) error_message: std::option::Option<std::string::String>,
}
impl ValidationErrorsEntryBuilder {
    /// <p>Checks the name of the policy.</p>
    pub fn check_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.check_name = Some(input.into());
        self
    }
    /// <p>Checks the name of the policy.</p>
    pub fn set_check_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.check_name = input;
        self
    }
    /// <p>Displays error messages if validation encounters problems during validation of the resource policy.</p>
    pub fn error_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.error_message = Some(input.into());
        self
    }
    /// <p>Displays error messages if validation encounters problems during validation of the resource policy.</p>
    pub fn set_error_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// Consumes the builder and constructs a [`ValidationErrorsEntry`](crate::types::ValidationErrorsEntry).
    pub fn build(self) -> crate::types::ValidationErrorsEntry {
        crate::types::ValidationErrorsEntry {
            check_name: self.check_name,
            error_message: self.error_message,
        }
    }
}
