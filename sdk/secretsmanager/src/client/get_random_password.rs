// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRandomPassword`](crate::client::fluent_builders::GetRandomPassword) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`password_length(i64)`](crate::client::fluent_builders::GetRandomPassword::password_length) / [`set_password_length(Option<i64>)`](crate::client::fluent_builders::GetRandomPassword::set_password_length): <p>The length of the password. If you don't include this parameter, the default length is 32 characters.</p>
    ///   - [`exclude_characters(impl Into<String>)`](crate::client::fluent_builders::GetRandomPassword::exclude_characters) / [`set_exclude_characters(Option<String>)`](crate::client::fluent_builders::GetRandomPassword::set_exclude_characters): <p>A string of the characters that you don't want in the password.</p>
    ///   - [`exclude_numbers(bool)`](crate::client::fluent_builders::GetRandomPassword::exclude_numbers) / [`set_exclude_numbers(Option<bool>)`](crate::client::fluent_builders::GetRandomPassword::set_exclude_numbers): <p>Specifies whether to exclude numbers from the password. If you don't include this switch, the password can contain numbers.</p>
    ///   - [`exclude_punctuation(bool)`](crate::client::fluent_builders::GetRandomPassword::exclude_punctuation) / [`set_exclude_punctuation(Option<bool>)`](crate::client::fluent_builders::GetRandomPassword::set_exclude_punctuation): <p>Specifies whether to exclude the following punctuation characters from the password: <code>! " # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~</code>. If you don't include this switch, the password can contain punctuation.</p>
    ///   - [`exclude_uppercase(bool)`](crate::client::fluent_builders::GetRandomPassword::exclude_uppercase) / [`set_exclude_uppercase(Option<bool>)`](crate::client::fluent_builders::GetRandomPassword::set_exclude_uppercase): <p>Specifies whether to exclude uppercase letters from the password. If you don't include this switch, the password can contain uppercase letters.</p>
    ///   - [`exclude_lowercase(bool)`](crate::client::fluent_builders::GetRandomPassword::exclude_lowercase) / [`set_exclude_lowercase(Option<bool>)`](crate::client::fluent_builders::GetRandomPassword::set_exclude_lowercase): <p>Specifies whether to exclude lowercase letters from the password. If you don't include this switch, the password can contain lowercase letters.</p>
    ///   - [`include_space(bool)`](crate::client::fluent_builders::GetRandomPassword::include_space) / [`set_include_space(Option<bool>)`](crate::client::fluent_builders::GetRandomPassword::set_include_space): <p>Specifies whether to include the space character. If you include this switch, the password can contain space characters.</p>
    ///   - [`require_each_included_type(bool)`](crate::client::fluent_builders::GetRandomPassword::require_each_included_type) / [`set_require_each_included_type(Option<bool>)`](crate::client::fluent_builders::GetRandomPassword::set_require_each_included_type): <p>Specifies whether to include at least one upper and lowercase letter, one number, and one punctuation. If you don't include this switch, the password contains at least one of every character type.</p>
    /// - On success, responds with [`GetRandomPasswordOutput`](crate::output::GetRandomPasswordOutput) with field(s):
    ///   - [`random_password(Option<String>)`](crate::output::GetRandomPasswordOutput::random_password): <p>A string with the password.</p>
    /// - On failure, responds with [`SdkError<GetRandomPasswordError>`](crate::error::GetRandomPasswordError)
    pub fn get_random_password(&self) -> crate::client::fluent_builders::GetRandomPassword {
        crate::client::fluent_builders::GetRandomPassword::new(self.handle.clone())
    }
}
