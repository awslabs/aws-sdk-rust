// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchGetSecretValue`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`secret_id_list(impl Into<String>)`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::secret_id_list) / [`set_secret_id_list(Option<Vec::<String>>)`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::set_secret_id_list):<br>required: **false**<br><p>The ARN or names of the secrets to retrieve. You must include <code>Filters</code> or <code>SecretIdList</code>, but not both.</p><br>
    ///   - [`filters(Filter)`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::set_filters):<br>required: **false**<br><p>The filters to choose which secrets to retrieve. You must include <code>Filters</code> or <code>SecretIdList</code>, but not both.</p><br>
    ///   - [`max_results(i32)`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::set_max_results):<br>required: **false**<br><p>The number of results to include in the response.</p> <p>If there are more results available, in the response, Secrets Manager includes <code>NextToken</code>. To get the next results, call <code>BatchGetSecretValue</code> again with the value from <code>NextToken</code>. To use this parameter, you must also use the <code>Filters</code> parameter.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::set_next_token):<br>required: **false**<br><p>A token that indicates where the output should continue from, if a previous call did not show all results. To get the next results, call <code>BatchGetSecretValue</code> again with this value.</p><br>
    /// - On success, responds with [`BatchGetSecretValueOutput`](crate::operation::batch_get_secret_value::BatchGetSecretValueOutput) with field(s):
    ///   - [`secret_values(Option<Vec::<SecretValueEntry>>)`](crate::operation::batch_get_secret_value::BatchGetSecretValueOutput::secret_values): <p>A list of secret values.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::batch_get_secret_value::BatchGetSecretValueOutput::next_token): <p>Secrets Manager includes this value if there's more output available than what is included in the current response. This can occur even when the response includes no values at all, such as when you ask for a filtered view of a long list. To get the next results, call <code>BatchGetSecretValue</code> again with this value.</p>
    ///   - [`errors(Option<Vec::<ApiErrorType>>)`](crate::operation::batch_get_secret_value::BatchGetSecretValueOutput::errors): <p>A list of errors Secrets Manager encountered while attempting to retrieve individual secrets.</p>
    /// - On failure, responds with [`SdkError<BatchGetSecretValueError>`](crate::operation::batch_get_secret_value::BatchGetSecretValueError)
    pub fn batch_get_secret_value(&self) -> crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder {
        crate::operation::batch_get_secret_value::builders::BatchGetSecretValueFluentBuilder::new(self.handle.clone())
    }
}
