// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RemoveRegionsFromReplicationOutput {
    /// <p>The ARN of the primary secret.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The status of replicas for this secret after you remove Regions.</p>
    #[doc(hidden)]
    pub replication_status: std::option::Option<std::vec::Vec<crate::types::ReplicationStatusType>>,
    _request_id: Option<String>,
}
impl RemoveRegionsFromReplicationOutput {
    /// <p>The ARN of the primary secret.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The status of replicas for this secret after you remove Regions.</p>
    pub fn replication_status(
        &self,
    ) -> std::option::Option<&[crate::types::ReplicationStatusType]> {
        self.replication_status.as_deref()
    }
}
impl aws_http::request_id::RequestId for RemoveRegionsFromReplicationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RemoveRegionsFromReplicationOutput {
    /// Creates a new builder-style object to manufacture [`RemoveRegionsFromReplicationOutput`](crate::operation::remove_regions_from_replication::RemoveRegionsFromReplicationOutput).
    pub fn builder() -> crate::operation::remove_regions_from_replication::builders::RemoveRegionsFromReplicationOutputBuilder{
        crate::operation::remove_regions_from_replication::builders::RemoveRegionsFromReplicationOutputBuilder::default()
    }
}

/// A builder for [`RemoveRegionsFromReplicationOutput`](crate::operation::remove_regions_from_replication::RemoveRegionsFromReplicationOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RemoveRegionsFromReplicationOutputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) replication_status:
        std::option::Option<std::vec::Vec<crate::types::ReplicationStatusType>>,
    _request_id: Option<String>,
}
impl RemoveRegionsFromReplicationOutputBuilder {
    /// <p>The ARN of the primary secret.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The ARN of the primary secret.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// Appends an item to `replication_status`.
    ///
    /// To override the contents of this collection use [`set_replication_status`](Self::set_replication_status).
    ///
    /// <p>The status of replicas for this secret after you remove Regions.</p>
    pub fn replication_status(mut self, input: crate::types::ReplicationStatusType) -> Self {
        let mut v = self.replication_status.unwrap_or_default();
        v.push(input);
        self.replication_status = Some(v);
        self
    }
    /// <p>The status of replicas for this secret after you remove Regions.</p>
    pub fn set_replication_status(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ReplicationStatusType>>,
    ) -> Self {
        self.replication_status = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RemoveRegionsFromReplicationOutput`](crate::operation::remove_regions_from_replication::RemoveRegionsFromReplicationOutput).
    pub fn build(
        self,
    ) -> crate::operation::remove_regions_from_replication::RemoveRegionsFromReplicationOutput {
        crate::operation::remove_regions_from_replication::RemoveRegionsFromReplicationOutput {
            arn: self.arn,
            replication_status: self.replication_status,
            _request_id: self._request_id,
        }
    }
}
