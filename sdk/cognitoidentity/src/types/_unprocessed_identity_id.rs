// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UnprocessedIdentityId {
    /// <p>A unique identifier in the format REGION:GUID.</p>
    #[doc(hidden)]
    pub identity_id: std::option::Option<std::string::String>,
    /// <p>The error code indicating the type of error that occurred.</p>
    #[doc(hidden)]
    pub error_code: std::option::Option<crate::types::ErrorCode>,
}
impl UnprocessedIdentityId {
    /// <p>A unique identifier in the format REGION:GUID.</p>
    pub fn identity_id(&self) -> std::option::Option<&str> {
        self.identity_id.as_deref()
    }
    /// <p>The error code indicating the type of error that occurred.</p>
    pub fn error_code(&self) -> std::option::Option<&crate::types::ErrorCode> {
        self.error_code.as_ref()
    }
}
impl UnprocessedIdentityId {
    /// Creates a new builder-style object to manufacture [`UnprocessedIdentityId`](crate::types::UnprocessedIdentityId).
    pub fn builder() -> crate::types::builders::UnprocessedIdentityIdBuilder {
        crate::types::builders::UnprocessedIdentityIdBuilder::default()
    }
}

/// A builder for [`UnprocessedIdentityId`](crate::types::UnprocessedIdentityId).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UnprocessedIdentityIdBuilder {
    pub(crate) identity_id: std::option::Option<std::string::String>,
    pub(crate) error_code: std::option::Option<crate::types::ErrorCode>,
}
impl UnprocessedIdentityIdBuilder {
    /// <p>A unique identifier in the format REGION:GUID.</p>
    pub fn identity_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity_id = Some(input.into());
        self
    }
    /// <p>A unique identifier in the format REGION:GUID.</p>
    pub fn set_identity_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identity_id = input;
        self
    }
    /// <p>The error code indicating the type of error that occurred.</p>
    pub fn error_code(mut self, input: crate::types::ErrorCode) -> Self {
        self.error_code = Some(input);
        self
    }
    /// <p>The error code indicating the type of error that occurred.</p>
    pub fn set_error_code(mut self, input: std::option::Option<crate::types::ErrorCode>) -> Self {
        self.error_code = input;
        self
    }
    /// Consumes the builder and constructs a [`UnprocessedIdentityId`](crate::types::UnprocessedIdentityId).
    pub fn build(self) -> crate::types::UnprocessedIdentityId {
        crate::types::UnprocessedIdentityId {
            identity_id: self.identity_id,
            error_code: self.error_code,
        }
    }
}
