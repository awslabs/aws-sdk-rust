#![allow(clippy::module_inception)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::large_enum_variant)]
#![allow(clippy::wrong_self_convention)]
#![allow(clippy::should_implement_trait)]
#![allow(clippy::blacklisted_name)]
#![allow(clippy::vec_init_then_push)]
#![allow(rustdoc::bare_urls)]
//! <fullname>Amazon Cognito Federated Identities</fullname>
//! <p>Amazon Cognito Federated Identities is a web service that delivers scoped temporary
//! credentials to mobile devices and other untrusted environments. It uniquely identifies a
//! device and supplies the user with a consistent identity over the lifetime of an
//! application.</p>
//! <p>Using Amazon Cognito Federated Identities, you can enable authentication with one or
//! more third-party identity providers (Facebook, Google, or Login with Amazon) or an Amazon
//! Cognito user pool, and you can also choose to support unauthenticated access from your app.
//! Cognito delivers a unique identifier for each user and acts as an OpenID token provider
//! trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS
//! credentials.</p>
//! <p>For a description of the authentication flow from the Amazon Cognito Developer Guide
//! see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html">Authentication Flow</a>.</p>
//! <p>For more information see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html">Amazon Cognito Federated Identities</a>.</p>

// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use error_meta::Error;

pub use config::Config;

mod aws_endpoint;
#[cfg(feature = "client")]
pub mod client;
pub mod config;
pub mod error;
mod error_meta;
pub mod input;
mod json_deser;
mod json_errors;
mod json_ser;
pub mod model;
mod no_credentials;
pub mod operation;
mod operation_deser;
mod operation_ser;
pub mod output;
pub static PKG_VERSION: &str = env!("CARGO_PKG_VERSION");
pub use smithy_http::byte_stream::ByteStream;
pub use smithy_http::result::SdkError;
pub use smithy_types::Blob;
static API_METADATA: aws_http::user_agent::ApiMetadata =
    aws_http::user_agent::ApiMetadata::new("cognitoidentity", PKG_VERSION);
pub use aws_types::region::Region;
pub use aws_types::Credentials;
#[cfg(feature = "client")]
pub use client::Client;
pub use smithy_http::endpoint::Endpoint;
