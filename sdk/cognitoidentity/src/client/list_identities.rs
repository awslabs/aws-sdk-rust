// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListIdentities`](crate::client::fluent_builders::ListIdentities) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identity_pool_id(impl Into<String>)`](crate::client::fluent_builders::ListIdentities::identity_pool_id) / [`set_identity_pool_id(Option<String>)`](crate::client::fluent_builders::ListIdentities::set_identity_pool_id): <p>An identity pool ID in the format REGION:GUID.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListIdentities::max_results) / [`set_max_results(i32)`](crate::client::fluent_builders::ListIdentities::set_max_results): <p>The maximum number of identities to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListIdentities::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListIdentities::set_next_token): <p>A pagination token.</p>
    ///   - [`hide_disabled(bool)`](crate::client::fluent_builders::ListIdentities::hide_disabled) / [`set_hide_disabled(bool)`](crate::client::fluent_builders::ListIdentities::set_hide_disabled): <p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>
    /// - On success, responds with [`ListIdentitiesOutput`](crate::output::ListIdentitiesOutput) with field(s):
    ///   - [`identity_pool_id(Option<String>)`](crate::output::ListIdentitiesOutput::identity_pool_id): <p>An identity pool ID in the format REGION:GUID.</p>
    ///   - [`identities(Option<Vec<IdentityDescription>>)`](crate::output::ListIdentitiesOutput::identities): <p>An object containing a set of identities and associated mappings.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListIdentitiesOutput::next_token): <p>A pagination token.</p>
    /// - On failure, responds with [`SdkError<ListIdentitiesError>`](crate::error::ListIdentitiesError)
    pub fn list_identities(&self) -> crate::client::fluent_builders::ListIdentities {
        crate::client::fluent_builders::ListIdentities::new(self.handle.clone())
    }
}
