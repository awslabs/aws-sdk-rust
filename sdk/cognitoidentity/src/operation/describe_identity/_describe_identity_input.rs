// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Input to the <code>DescribeIdentity</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeIdentityInput {
    /// <p>A unique identifier in the format REGION:GUID.</p>
    #[doc(hidden)]
    pub identity_id: std::option::Option<std::string::String>,
}
impl DescribeIdentityInput {
    /// <p>A unique identifier in the format REGION:GUID.</p>
    pub fn identity_id(&self) -> std::option::Option<&str> {
        self.identity_id.as_deref()
    }
}
impl DescribeIdentityInput {
    /// Creates a new builder-style object to manufacture [`DescribeIdentityInput`](crate::operation::describe_identity::DescribeIdentityInput).
    pub fn builder() -> crate::operation::describe_identity::builders::DescribeIdentityInputBuilder
    {
        crate::operation::describe_identity::builders::DescribeIdentityInputBuilder::default()
    }
}

/// A builder for [`DescribeIdentityInput`](crate::operation::describe_identity::DescribeIdentityInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeIdentityInputBuilder {
    pub(crate) identity_id: std::option::Option<std::string::String>,
}
impl DescribeIdentityInputBuilder {
    /// <p>A unique identifier in the format REGION:GUID.</p>
    pub fn identity_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity_id = Some(input.into());
        self
    }
    /// <p>A unique identifier in the format REGION:GUID.</p>
    pub fn set_identity_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identity_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeIdentityInput`](crate::operation::describe_identity::DescribeIdentityInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_identity::DescribeIdentityInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_identity::DescribeIdentityInput {
            identity_id: self.identity_id,
        })
    }
}
