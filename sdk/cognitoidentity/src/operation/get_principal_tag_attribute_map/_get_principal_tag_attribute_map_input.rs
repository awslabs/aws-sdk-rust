// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetPrincipalTagAttributeMapInput {
    /// <p>You can use this operation to get the ID of the Identity Pool you setup attribute mappings for.</p>
    #[doc(hidden)]
    pub identity_pool_id: std::option::Option<std::string::String>,
    /// <p>You can use this operation to get the provider name.</p>
    #[doc(hidden)]
    pub identity_provider_name: std::option::Option<std::string::String>,
}
impl GetPrincipalTagAttributeMapInput {
    /// <p>You can use this operation to get the ID of the Identity Pool you setup attribute mappings for.</p>
    pub fn identity_pool_id(&self) -> std::option::Option<&str> {
        self.identity_pool_id.as_deref()
    }
    /// <p>You can use this operation to get the provider name.</p>
    pub fn identity_provider_name(&self) -> std::option::Option<&str> {
        self.identity_provider_name.as_deref()
    }
}
impl GetPrincipalTagAttributeMapInput {
    /// Creates a new builder-style object to manufacture [`GetPrincipalTagAttributeMapInput`](crate::operation::get_principal_tag_attribute_map::GetPrincipalTagAttributeMapInput).
    pub fn builder() -> crate::operation::get_principal_tag_attribute_map::builders::GetPrincipalTagAttributeMapInputBuilder{
        crate::operation::get_principal_tag_attribute_map::builders::GetPrincipalTagAttributeMapInputBuilder::default()
    }
}

/// A builder for [`GetPrincipalTagAttributeMapInput`](crate::operation::get_principal_tag_attribute_map::GetPrincipalTagAttributeMapInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetPrincipalTagAttributeMapInputBuilder {
    pub(crate) identity_pool_id: std::option::Option<std::string::String>,
    pub(crate) identity_provider_name: std::option::Option<std::string::String>,
}
impl GetPrincipalTagAttributeMapInputBuilder {
    /// <p>You can use this operation to get the ID of the Identity Pool you setup attribute mappings for.</p>
    pub fn identity_pool_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity_pool_id = Some(input.into());
        self
    }
    /// <p>You can use this operation to get the ID of the Identity Pool you setup attribute mappings for.</p>
    pub fn set_identity_pool_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identity_pool_id = input;
        self
    }
    /// <p>You can use this operation to get the provider name.</p>
    pub fn identity_provider_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity_provider_name = Some(input.into());
        self
    }
    /// <p>You can use this operation to get the provider name.</p>
    pub fn set_identity_provider_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.identity_provider_name = input;
        self
    }
    /// Consumes the builder and constructs a [`GetPrincipalTagAttributeMapInput`](crate::operation::get_principal_tag_attribute_map::GetPrincipalTagAttributeMapInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_principal_tag_attribute_map::GetPrincipalTagAttributeMapInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_principal_tag_attribute_map::GetPrincipalTagAttributeMapInput {
                identity_pool_id: self.identity_pool_id,
                identity_provider_name: self.identity_provider_name,
            },
        )
    }
}
