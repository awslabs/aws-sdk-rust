// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListOfferingPromotionsInput {
    /// <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListOfferingPromotionsInput {
    /// <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListOfferingPromotionsInput {
    /// Creates a new builder-style object to manufacture [`ListOfferingPromotionsInput`](crate::operation::list_offering_promotions::ListOfferingPromotionsInput).
    pub fn builder() -> crate::operation::list_offering_promotions::builders::ListOfferingPromotionsInputBuilder {
        crate::operation::list_offering_promotions::builders::ListOfferingPromotionsInputBuilder::default()
    }
}

/// A builder for [`ListOfferingPromotionsInput`](crate::operation::list_offering_promotions::ListOfferingPromotionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListOfferingPromotionsInputBuilder {
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListOfferingPromotionsInputBuilder {
    /// <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListOfferingPromotionsInput`](crate::operation::list_offering_promotions::ListOfferingPromotionsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_offering_promotions::ListOfferingPromotionsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_offering_promotions::ListOfferingPromotionsInput { next_token: self.next_token })
    }
}
