// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the result of a create upload request.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateUploadOutput {
    /// <p>The newly created upload.</p>
    #[doc(hidden)]
    pub upload: std::option::Option<crate::types::Upload>,
    _request_id: Option<String>,
}
impl CreateUploadOutput {
    /// <p>The newly created upload.</p>
    pub fn upload(&self) -> std::option::Option<&crate::types::Upload> {
        self.upload.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateUploadOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateUploadOutput {
    /// Creates a new builder-style object to manufacture [`CreateUploadOutput`](crate::operation::create_upload::CreateUploadOutput).
    pub fn builder() -> crate::operation::create_upload::builders::CreateUploadOutputBuilder {
        crate::operation::create_upload::builders::CreateUploadOutputBuilder::default()
    }
}

/// A builder for [`CreateUploadOutput`](crate::operation::create_upload::CreateUploadOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateUploadOutputBuilder {
    pub(crate) upload: std::option::Option<crate::types::Upload>,
    _request_id: Option<String>,
}
impl CreateUploadOutputBuilder {
    /// <p>The newly created upload.</p>
    pub fn upload(mut self, input: crate::types::Upload) -> Self {
        self.upload = Some(input);
        self
    }
    /// <p>The newly created upload.</p>
    pub fn set_upload(mut self, input: std::option::Option<crate::types::Upload>) -> Self {
        self.upload = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateUploadOutput`](crate::operation::create_upload::CreateUploadOutput).
    pub fn build(self) -> crate::operation::create_upload::CreateUploadOutput {
        crate::operation::create_upload::CreateUploadOutput {
            upload: self.upload,
            _request_id: self._request_id,
        }
    }
}
