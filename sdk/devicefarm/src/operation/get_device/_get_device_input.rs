// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a request to the get device request.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDeviceInput {
    /// <p>The device type's ARN.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
}
impl GetDeviceInput {
    /// <p>The device type's ARN.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
}
impl GetDeviceInput {
    /// Creates a new builder-style object to manufacture [`GetDeviceInput`](crate::operation::get_device::GetDeviceInput).
    pub fn builder() -> crate::operation::get_device::builders::GetDeviceInputBuilder {
        crate::operation::get_device::builders::GetDeviceInputBuilder::default()
    }
}

/// A builder for [`GetDeviceInput`](crate::operation::get_device::GetDeviceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDeviceInputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
}
impl GetDeviceInputBuilder {
    /// <p>The device type's ARN.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The device type's ARN.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// Consumes the builder and constructs a [`GetDeviceInput`](crate::operation::get_device::GetDeviceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_device::GetDeviceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_device::GetDeviceInput { arn: self.arn })
    }
}
