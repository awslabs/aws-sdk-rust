// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListNetworkProfilesInput {
    /// <p>The Amazon Resource Name (ARN) of the project for which you want to list network profiles.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The type of network profile to return information about. Valid values are listed here.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::NetworkProfileType>,
    /// <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListNetworkProfilesInput {
    /// <p>The Amazon Resource Name (ARN) of the project for which you want to list network profiles.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The type of network profile to return information about. Valid values are listed here.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::NetworkProfileType> {
        self.r#type.as_ref()
    }
    /// <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListNetworkProfilesInput {
    /// Creates a new builder-style object to manufacture [`ListNetworkProfilesInput`](crate::operation::list_network_profiles::ListNetworkProfilesInput).
    pub fn builder(
    ) -> crate::operation::list_network_profiles::builders::ListNetworkProfilesInputBuilder {
        crate::operation::list_network_profiles::builders::ListNetworkProfilesInputBuilder::default(
        )
    }
}

/// A builder for [`ListNetworkProfilesInput`](crate::operation::list_network_profiles::ListNetworkProfilesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListNetworkProfilesInputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<crate::types::NetworkProfileType>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListNetworkProfilesInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the project for which you want to list network profiles.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the project for which you want to list network profiles.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The type of network profile to return information about. Valid values are listed here.</p>
    pub fn r#type(mut self, input: crate::types::NetworkProfileType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The type of network profile to return information about. Valid values are listed here.</p>
    pub fn set_type(
        mut self,
        input: std::option::Option<crate::types::NetworkProfileType>,
    ) -> Self {
        self.r#type = input;
        self
    }
    /// <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListNetworkProfilesInput`](crate::operation::list_network_profiles::ListNetworkProfilesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_network_profiles::ListNetworkProfilesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_network_profiles::ListNetworkProfilesInput {
                arn: self.arn,
                r#type: self.r#type,
                next_token: self.next_token,
            },
        )
    }
}
