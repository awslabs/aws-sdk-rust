// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the request to install an Android application (in .apk format) or an iOS application (in .ipa format) as part of a remote access session.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstallToRemoteAccessSessionInput {
    /// <p>The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.</p>
    pub remote_access_session_arn: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of the app about which you are requesting information.</p>
    pub app_arn: ::std::option::Option<::std::string::String>,
}
impl InstallToRemoteAccessSessionInput {
    /// <p>The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.</p>
    pub fn remote_access_session_arn(&self) -> ::std::option::Option<&str> {
        self.remote_access_session_arn.as_deref()
    }
    /// <p>The ARN of the app about which you are requesting information.</p>
    pub fn app_arn(&self) -> ::std::option::Option<&str> {
        self.app_arn.as_deref()
    }
}
impl InstallToRemoteAccessSessionInput {
    /// Creates a new builder-style object to manufacture [`InstallToRemoteAccessSessionInput`](crate::operation::install_to_remote_access_session::InstallToRemoteAccessSessionInput).
    pub fn builder() -> crate::operation::install_to_remote_access_session::builders::InstallToRemoteAccessSessionInputBuilder {
        crate::operation::install_to_remote_access_session::builders::InstallToRemoteAccessSessionInputBuilder::default()
    }
}

/// A builder for [`InstallToRemoteAccessSessionInput`](crate::operation::install_to_remote_access_session::InstallToRemoteAccessSessionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InstallToRemoteAccessSessionInputBuilder {
    pub(crate) remote_access_session_arn: ::std::option::Option<::std::string::String>,
    pub(crate) app_arn: ::std::option::Option<::std::string::String>,
}
impl InstallToRemoteAccessSessionInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.</p>
    /// This field is required.
    pub fn remote_access_session_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.remote_access_session_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.</p>
    pub fn set_remote_access_session_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.remote_access_session_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.</p>
    pub fn get_remote_access_session_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.remote_access_session_arn
    }
    /// <p>The ARN of the app about which you are requesting information.</p>
    /// This field is required.
    pub fn app_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the app about which you are requesting information.</p>
    pub fn set_app_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_arn = input;
        self
    }
    /// <p>The ARN of the app about which you are requesting information.</p>
    pub fn get_app_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_arn
    }
    /// Consumes the builder and constructs a [`InstallToRemoteAccessSessionInput`](crate::operation::install_to_remote_access_session::InstallToRemoteAccessSessionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::install_to_remote_access_session::InstallToRemoteAccessSessionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::install_to_remote_access_session::InstallToRemoteAccessSessionInput {
            remote_access_session_arn: self.remote_access_session_arn,
            app_arn: self.app_arn,
        })
    }
}
