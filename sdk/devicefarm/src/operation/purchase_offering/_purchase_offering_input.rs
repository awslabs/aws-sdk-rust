// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a request for a purchase offering.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PurchaseOfferingInput {
    /// <p>The ID of the offering.</p>
    pub offering_id: ::std::option::Option<::std::string::String>,
    /// <p>The number of device slots to purchase in an offering request.</p>
    pub quantity: ::std::option::Option<i32>,
    /// <p>The ID of the offering promotion to be applied to the purchase.</p>
    pub offering_promotion_id: ::std::option::Option<::std::string::String>,
}
impl PurchaseOfferingInput {
    /// <p>The ID of the offering.</p>
    pub fn offering_id(&self) -> ::std::option::Option<&str> {
        self.offering_id.as_deref()
    }
    /// <p>The number of device slots to purchase in an offering request.</p>
    pub fn quantity(&self) -> ::std::option::Option<i32> {
        self.quantity
    }
    /// <p>The ID of the offering promotion to be applied to the purchase.</p>
    pub fn offering_promotion_id(&self) -> ::std::option::Option<&str> {
        self.offering_promotion_id.as_deref()
    }
}
impl PurchaseOfferingInput {
    /// Creates a new builder-style object to manufacture [`PurchaseOfferingInput`](crate::operation::purchase_offering::PurchaseOfferingInput).
    pub fn builder() -> crate::operation::purchase_offering::builders::PurchaseOfferingInputBuilder {
        crate::operation::purchase_offering::builders::PurchaseOfferingInputBuilder::default()
    }
}

/// A builder for [`PurchaseOfferingInput`](crate::operation::purchase_offering::PurchaseOfferingInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PurchaseOfferingInputBuilder {
    pub(crate) offering_id: ::std::option::Option<::std::string::String>,
    pub(crate) quantity: ::std::option::Option<i32>,
    pub(crate) offering_promotion_id: ::std::option::Option<::std::string::String>,
}
impl PurchaseOfferingInputBuilder {
    /// <p>The ID of the offering.</p>
    /// This field is required.
    pub fn offering_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.offering_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the offering.</p>
    pub fn set_offering_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.offering_id = input;
        self
    }
    /// <p>The ID of the offering.</p>
    pub fn get_offering_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.offering_id
    }
    /// <p>The number of device slots to purchase in an offering request.</p>
    /// This field is required.
    pub fn quantity(mut self, input: i32) -> Self {
        self.quantity = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of device slots to purchase in an offering request.</p>
    pub fn set_quantity(mut self, input: ::std::option::Option<i32>) -> Self {
        self.quantity = input;
        self
    }
    /// <p>The number of device slots to purchase in an offering request.</p>
    pub fn get_quantity(&self) -> &::std::option::Option<i32> {
        &self.quantity
    }
    /// <p>The ID of the offering promotion to be applied to the purchase.</p>
    pub fn offering_promotion_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.offering_promotion_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the offering promotion to be applied to the purchase.</p>
    pub fn set_offering_promotion_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.offering_promotion_id = input;
        self
    }
    /// <p>The ID of the offering promotion to be applied to the purchase.</p>
    pub fn get_offering_promotion_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.offering_promotion_id
    }
    /// Consumes the builder and constructs a [`PurchaseOfferingInput`](crate::operation::purchase_offering::PurchaseOfferingInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::purchase_offering::PurchaseOfferingInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::purchase_offering::PurchaseOfferingInput {
            offering_id: self.offering_id,
            quantity: self.quantity,
            offering_promotion_id: self.offering_promotion_id,
        })
    }
}
