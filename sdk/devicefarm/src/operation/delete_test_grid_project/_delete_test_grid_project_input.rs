// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteTestGridProjectInput {
    /// <p>The ARN of the project to delete, from <code>CreateTestGridProject</code> or <code>ListTestGridProjects</code>.</p>
    pub project_arn: ::std::option::Option<::std::string::String>,
}
impl DeleteTestGridProjectInput {
    /// <p>The ARN of the project to delete, from <code>CreateTestGridProject</code> or <code>ListTestGridProjects</code>.</p>
    pub fn project_arn(&self) -> ::std::option::Option<&str> {
        self.project_arn.as_deref()
    }
}
impl DeleteTestGridProjectInput {
    /// Creates a new builder-style object to manufacture [`DeleteTestGridProjectInput`](crate::operation::delete_test_grid_project::DeleteTestGridProjectInput).
    pub fn builder() -> crate::operation::delete_test_grid_project::builders::DeleteTestGridProjectInputBuilder {
        crate::operation::delete_test_grid_project::builders::DeleteTestGridProjectInputBuilder::default()
    }
}

/// A builder for [`DeleteTestGridProjectInput`](crate::operation::delete_test_grid_project::DeleteTestGridProjectInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteTestGridProjectInputBuilder {
    pub(crate) project_arn: ::std::option::Option<::std::string::String>,
}
impl DeleteTestGridProjectInputBuilder {
    /// <p>The ARN of the project to delete, from <code>CreateTestGridProject</code> or <code>ListTestGridProjects</code>.</p>
    /// This field is required.
    pub fn project_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.project_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the project to delete, from <code>CreateTestGridProject</code> or <code>ListTestGridProjects</code>.</p>
    pub fn set_project_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.project_arn = input;
        self
    }
    /// <p>The ARN of the project to delete, from <code>CreateTestGridProject</code> or <code>ListTestGridProjects</code>.</p>
    pub fn get_project_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.project_arn
    }
    /// Consumes the builder and constructs a [`DeleteTestGridProjectInput`](crate::operation::delete_test_grid_project::DeleteTestGridProjectInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_test_grid_project::DeleteTestGridProjectInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::delete_test_grid_project::DeleteTestGridProjectInput {
            project_arn: self.project_arn,
        })
    }
}
