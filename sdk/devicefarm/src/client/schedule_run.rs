// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ScheduleRun`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project_arn(impl Into<String>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::project_arn) / [`set_project_arn(Option<String>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::set_project_arn): <p>The ARN of the project for the run to be scheduled.</p>
    ///   - [`app_arn(impl Into<String>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::app_arn) / [`set_app_arn(Option<String>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::set_app_arn): <p>The ARN of an application package to run tests against, created with <code>CreateUpload</code>. See <code>ListUploads</code>.</p>
    ///   - [`device_pool_arn(impl Into<String>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::device_pool_arn) / [`set_device_pool_arn(Option<String>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::set_device_pool_arn): <p>The ARN of the device pool for the run to be scheduled.</p>
    ///   - [`device_selection_configuration(DeviceSelectionConfiguration)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::device_selection_configuration) / [`set_device_selection_configuration(Option<DeviceSelectionConfiguration>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::set_device_selection_configuration): <p>The filter criteria used to dynamically select a set of devices for a test run and the maximum number of devices to be included in the run.</p>  <p>Either <b> <code>devicePoolArn</code> </b> or <b> <code>deviceSelectionConfiguration</code> </b> is required in a request.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::set_name): <p>The name for the run to be scheduled.</p>
    ///   - [`test(ScheduleRunTest)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::test) / [`set_test(Option<ScheduleRunTest>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::set_test): <p>Information about the test for the run to be scheduled.</p>
    ///   - [`configuration(ScheduleRunConfiguration)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::configuration) / [`set_configuration(Option<ScheduleRunConfiguration>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::set_configuration): <p>Information about the settings for the run to be scheduled.</p>
    ///   - [`execution_configuration(ExecutionConfiguration)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::execution_configuration) / [`set_execution_configuration(Option<ExecutionConfiguration>)`](crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::set_execution_configuration): <p>Specifies configuration information about a test run, such as the execution timeout (in minutes).</p>
    /// - On success, responds with [`ScheduleRunOutput`](crate::operation::schedule_run::ScheduleRunOutput) with field(s):
    ///   - [`run(Option<Run>)`](crate::operation::schedule_run::ScheduleRunOutput::run): <p>Information about the scheduled run.</p>
    /// - On failure, responds with [`SdkError<ScheduleRunError>`](crate::operation::schedule_run::ScheduleRunError)
    pub fn schedule_run(
        &self,
    ) -> crate::operation::schedule_run::builders::ScheduleRunFluentBuilder {
        crate::operation::schedule_run::builders::ScheduleRunFluentBuilder::new(self.handle.clone())
    }
}
