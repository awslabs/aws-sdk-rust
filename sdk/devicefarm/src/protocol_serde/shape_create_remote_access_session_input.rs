// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_remote_access_session_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_remote_access_session::CreateRemoteAccessSessionInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.project_arn {
        object.key("projectArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.device_arn {
        object.key("deviceArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.instance_arn {
        object.key("instanceArn").string(var_3.as_str());
    }
    if let Some(var_4) = &input.ssh_public_key {
        object.key("sshPublicKey").string(var_4.as_str());
    }
    if let Some(var_5) = &input.remote_debug_enabled {
        object.key("remoteDebugEnabled").boolean(*var_5);
    }
    if let Some(var_6) = &input.remote_record_enabled {
        object.key("remoteRecordEnabled").boolean(*var_6);
    }
    if let Some(var_7) = &input.remote_record_app_arn {
        object.key("remoteRecordAppArn").string(var_7.as_str());
    }
    if let Some(var_8) = &input.name {
        object.key("name").string(var_8.as_str());
    }
    if let Some(var_9) = &input.client_id {
        object.key("clientId").string(var_9.as_str());
    }
    if let Some(var_10) = &input.configuration {
        #[allow(unused_mut)]
        let mut object_11 = object.key("configuration").start_object();
        crate::protocol_serde::shape_create_remote_access_session_configuration::ser_create_remote_access_session_configuration(
            &mut object_11,
            var_10,
        )?;
        object_11.finish();
    }
    if let Some(var_12) = &input.interaction_mode {
        object.key("interactionMode").string(var_12.as_str());
    }
    if let Some(var_13) = &input.skip_app_resign {
        object.key("skipAppResign").boolean(*var_13);
    }
    Ok(())
}
