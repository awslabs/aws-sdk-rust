// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_schedule_run_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::schedule_run::ScheduleRunInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.project_arn {
        object.key("projectArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.app_arn {
        object.key("appArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.device_pool_arn {
        object.key("devicePoolArn").string(var_3.as_str());
    }
    if let Some(var_4) = &input.device_selection_configuration {
        #[allow(unused_mut)]
        let mut object_5 = object.key("deviceSelectionConfiguration").start_object();
        crate::protocol_serde::shape_device_selection_configuration::ser_device_selection_configuration(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.name {
        object.key("name").string(var_6.as_str());
    }
    if let Some(var_7) = &input.test {
        #[allow(unused_mut)]
        let mut object_8 = object.key("test").start_object();
        crate::protocol_serde::shape_schedule_run_test::ser_schedule_run_test(
            &mut object_8,
            var_7,
        )?;
        object_8.finish();
    }
    if let Some(var_9) = &input.configuration {
        #[allow(unused_mut)]
        let mut object_10 = object.key("configuration").start_object();
        crate::protocol_serde::shape_schedule_run_configuration::ser_schedule_run_configuration(
            &mut object_10,
            var_9,
        )?;
        object_10.finish();
    }
    if let Some(var_11) = &input.execution_configuration {
        #[allow(unused_mut)]
        let mut object_12 = object.key("executionConfiguration").start_object();
        crate::protocol_serde::shape_execution_configuration::ser_execution_configuration(
            &mut object_12,
            var_11,
        )?;
        object_12.finish();
    }
    Ok(())
}
