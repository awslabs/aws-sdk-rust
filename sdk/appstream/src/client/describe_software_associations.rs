// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeSoftwareAssociations`](crate::operation::describe_software_associations::builders::DescribeSoftwareAssociationsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`associated_resource(impl Into<String>)`](crate::operation::describe_software_associations::builders::DescribeSoftwareAssociationsFluentBuilder::associated_resource) / [`set_associated_resource(Option<String>)`](crate::operation::describe_software_associations::builders::DescribeSoftwareAssociationsFluentBuilder::set_associated_resource):<br>required: **true**<br><p>The ARN of the resource to describe software associations. Possible resources are Image and ImageBuilder.</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_software_associations::builders::DescribeSoftwareAssociationsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_software_associations::builders::DescribeSoftwareAssociationsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_software_associations::builders::DescribeSoftwareAssociationsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_software_associations::builders::DescribeSoftwareAssociationsFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token to use to retrieve the next page of results for this operation.</p><br>
    /// - On success, responds with [`DescribeSoftwareAssociationsOutput`](crate::operation::describe_software_associations::DescribeSoftwareAssociationsOutput) with field(s):
    ///   - [`associated_resource(Option<String>)`](crate::operation::describe_software_associations::DescribeSoftwareAssociationsOutput::associated_resource): <p>The ARN of the resource to describe software associations.</p>
    ///   - [`software_associations(Option<Vec::<SoftwareAssociations>>)`](crate::operation::describe_software_associations::DescribeSoftwareAssociationsOutput::software_associations): <p>Collection of license included applications association details including:</p> <ul>  <li>   <p>License included application name and version information</p></li>  <li>   <p>Deployment status (SoftwareDeploymentStatus enum)</p></li>  <li>   <p>Error details for failed deployments</p></li>  <li>   <p>Association timestamps</p></li> </ul>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_software_associations::DescribeSoftwareAssociationsOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation.</p>
    /// - On failure, responds with [`SdkError<DescribeSoftwareAssociationsError>`](crate::operation::describe_software_associations::DescribeSoftwareAssociationsError)
    pub fn describe_software_associations(
        &self,
    ) -> crate::operation::describe_software_associations::builders::DescribeSoftwareAssociationsFluentBuilder {
        crate::operation::describe_software_associations::builders::DescribeSoftwareAssociationsFluentBuilder::new(self.handle.clone())
    }
}
