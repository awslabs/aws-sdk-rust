// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateStack`](crate::operation::update_stack::builders::UpdateStackFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`display_name(impl Into<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::display_name) / [`set_display_name(Option<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_display_name): <p>The stack name to display.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_description): <p>The description to display.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_name): <p>The name of the stack.</p>
    ///   - [`storage_connectors(Vec<StorageConnector>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::storage_connectors) / [`set_storage_connectors(Option<Vec<StorageConnector>>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_storage_connectors): <p>The storage connectors to enable.</p>
    ///   - [`delete_storage_connectors(bool)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::delete_storage_connectors) / [`set_delete_storage_connectors(bool)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_delete_storage_connectors): <p>Deletes the storage connectors currently enabled for the stack.</p>
    ///   - [`redirect_url(impl Into<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::redirect_url) / [`set_redirect_url(Option<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_redirect_url): <p>The URL that users are redirected to after their streaming session ends.</p>
    ///   - [`feedback_url(impl Into<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::feedback_url) / [`set_feedback_url(Option<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_feedback_url): <p>The URL that users are redirected to after they choose the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.</p>
    ///   - [`attributes_to_delete(Vec<StackAttribute>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::attributes_to_delete) / [`set_attributes_to_delete(Option<Vec<StackAttribute>>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_attributes_to_delete): <p>The stack attributes to delete.</p>
    ///   - [`user_settings(Vec<UserSetting>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::user_settings) / [`set_user_settings(Option<Vec<UserSetting>>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_user_settings): <p>The actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled.</p>
    ///   - [`application_settings(ApplicationSettings)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::application_settings) / [`set_application_settings(Option<ApplicationSettings>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_application_settings): <p>The persistent application settings for users of a stack. When these settings are enabled, changes that users make to applications and Windows settings are automatically saved after each session and applied to the next session.</p>
    ///   - [`access_endpoints(Vec<AccessEndpoint>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::access_endpoints) / [`set_access_endpoints(Option<Vec<AccessEndpoint>>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_access_endpoints): <p>The list of interface VPC endpoint (interface endpoint) objects. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.</p>
    ///   - [`embed_host_domains(Vec<String>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::embed_host_domains) / [`set_embed_host_domains(Option<Vec<String>>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_embed_host_domains): <p>The domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions. </p>
    ///   - [`streaming_experience_settings(StreamingExperienceSettings)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::streaming_experience_settings) / [`set_streaming_experience_settings(Option<StreamingExperienceSettings>)`](crate::operation::update_stack::builders::UpdateStackFluentBuilder::set_streaming_experience_settings): <p>The streaming protocol you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client.</p>
    /// - On success, responds with [`UpdateStackOutput`](crate::operation::update_stack::UpdateStackOutput) with field(s):
    ///   - [`stack(Option<Stack>)`](crate::operation::update_stack::UpdateStackOutput::stack): <p>Information about the stack.</p>
    /// - On failure, responds with [`SdkError<UpdateStackError>`](crate::operation::update_stack::UpdateStackError)
    pub fn update_stack(
        &self,
    ) -> crate::operation::update_stack::builders::UpdateStackFluentBuilder {
        crate::operation::update_stack::builders::UpdateStackFluentBuilder::new(self.handle.clone())
    }
}
