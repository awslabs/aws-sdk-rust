// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateApplicationFleet`](crate::client::fluent_builders::AssociateApplicationFleet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`fleet_name(impl Into<String>)`](crate::client::fluent_builders::AssociateApplicationFleet::fleet_name) / [`set_fleet_name(Option<String>)`](crate::client::fluent_builders::AssociateApplicationFleet::set_fleet_name): <p>The name of the fleet.</p>
    ///   - [`application_arn(impl Into<String>)`](crate::client::fluent_builders::AssociateApplicationFleet::application_arn) / [`set_application_arn(Option<String>)`](crate::client::fluent_builders::AssociateApplicationFleet::set_application_arn): <p>The ARN of the application.</p>
    /// - On success, responds with [`AssociateApplicationFleetOutput`](crate::output::AssociateApplicationFleetOutput) with field(s):
    ///   - [`application_fleet_association(Option<ApplicationFleetAssociation>)`](crate::output::AssociateApplicationFleetOutput::application_fleet_association): <p>If fleet name is specified, this returns the list of applications that are associated to it. If application ARN is specified, this returns the list of fleets to which it is associated.</p>
    /// - On failure, responds with [`SdkError<AssociateApplicationFleetError>`](crate::error::AssociateApplicationFleetError)
    pub fn associate_application_fleet(
        &self,
    ) -> crate::client::fluent_builders::AssociateApplicationFleet {
        crate::client::fluent_builders::AssociateApplicationFleet::new(self.handle.clone())
    }
}
