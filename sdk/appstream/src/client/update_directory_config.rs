// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDirectoryConfig`](crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`directory_name(impl Into<String>)`](crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder::directory_name) / [`set_directory_name(Option<String>)`](crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder::set_directory_name): <p>The name of the Directory Config object.</p>
    ///   - [`organizational_unit_distinguished_names(Vec<String>)`](crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder::organizational_unit_distinguished_names) / [`set_organizational_unit_distinguished_names(Option<Vec<String>>)`](crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder::set_organizational_unit_distinguished_names): <p>The distinguished names of the organizational units for computer accounts.</p>
    ///   - [`service_account_credentials(ServiceAccountCredentials)`](crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder::service_account_credentials) / [`set_service_account_credentials(Option<ServiceAccountCredentials>)`](crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder::set_service_account_credentials): <p>The credentials for the service account used by the fleet or image builder to connect to the directory.</p>
    ///   - [`certificate_based_auth_properties(CertificateBasedAuthProperties)`](crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder::certificate_based_auth_properties) / [`set_certificate_based_auth_properties(Option<CertificateBasedAuthProperties>)`](crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder::set_certificate_based_auth_properties): <p>The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances. Fallback is turned on by default when certificate-based authentication is <b>Enabled</b> . Fallback allows users to log in using their AD domain password if certificate-based authentication is unsuccessful, or to unlock a desktop lock screen. <b>Enabled_no_directory_login_fallback</b> enables certificate-based authentication, but does not allow users to log in using their AD domain password. Users will be disconnected to re-authenticate using certificates.</p>
    /// - On success, responds with [`UpdateDirectoryConfigOutput`](crate::operation::update_directory_config::UpdateDirectoryConfigOutput) with field(s):
    ///   - [`directory_config(Option<DirectoryConfig>)`](crate::operation::update_directory_config::UpdateDirectoryConfigOutput::directory_config): <p>Information about the Directory Config object.</p>
    /// - On failure, responds with [`SdkError<UpdateDirectoryConfigError>`](crate::operation::update_directory_config::UpdateDirectoryConfigError)
    pub fn update_directory_config(
        &self,
    ) -> crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder
    {
        crate::operation::update_directory_config::builders::UpdateDirectoryConfigFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
