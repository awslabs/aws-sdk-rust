// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateApplicationFleetOutput {
    /// <p>If fleet name is specified, this returns the list of applications that are associated to it. If application ARN is specified, this returns the list of fleets to which it is associated.</p>
    #[doc(hidden)]
    pub application_fleet_association:
        std::option::Option<crate::types::ApplicationFleetAssociation>,
    _request_id: Option<String>,
}
impl AssociateApplicationFleetOutput {
    /// <p>If fleet name is specified, this returns the list of applications that are associated to it. If application ARN is specified, this returns the list of fleets to which it is associated.</p>
    pub fn application_fleet_association(
        &self,
    ) -> std::option::Option<&crate::types::ApplicationFleetAssociation> {
        self.application_fleet_association.as_ref()
    }
}
impl aws_http::request_id::RequestId for AssociateApplicationFleetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AssociateApplicationFleetOutput {
    /// Creates a new builder-style object to manufacture [`AssociateApplicationFleetOutput`](crate::operation::associate_application_fleet::AssociateApplicationFleetOutput).
    pub fn builder() -> crate::operation::associate_application_fleet::builders::AssociateApplicationFleetOutputBuilder{
        crate::operation::associate_application_fleet::builders::AssociateApplicationFleetOutputBuilder::default()
    }
}

/// A builder for [`AssociateApplicationFleetOutput`](crate::operation::associate_application_fleet::AssociateApplicationFleetOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociateApplicationFleetOutputBuilder {
    pub(crate) application_fleet_association:
        std::option::Option<crate::types::ApplicationFleetAssociation>,
    _request_id: Option<String>,
}
impl AssociateApplicationFleetOutputBuilder {
    /// <p>If fleet name is specified, this returns the list of applications that are associated to it. If application ARN is specified, this returns the list of fleets to which it is associated.</p>
    pub fn application_fleet_association(
        mut self,
        input: crate::types::ApplicationFleetAssociation,
    ) -> Self {
        self.application_fleet_association = Some(input);
        self
    }
    /// <p>If fleet name is specified, this returns the list of applications that are associated to it. If application ARN is specified, this returns the list of fleets to which it is associated.</p>
    pub fn set_application_fleet_association(
        mut self,
        input: std::option::Option<crate::types::ApplicationFleetAssociation>,
    ) -> Self {
        self.application_fleet_association = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AssociateApplicationFleetOutput`](crate::operation::associate_application_fleet::AssociateApplicationFleetOutput).
    pub fn build(
        self,
    ) -> crate::operation::associate_application_fleet::AssociateApplicationFleetOutput {
        crate::operation::associate_application_fleet::AssociateApplicationFleetOutput {
            application_fleet_association: self.application_fleet_association,
            _request_id: self._request_id,
        }
    }
}
