// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DisassociateSoftwareFromImageBuilderInput {
    /// <p>The name of the target image builder instance.</p>
    pub image_builder_name: ::std::option::Option<::std::string::String>,
    /// <p>The list of license included applications to disassociate from the image builder.</p>
    /// <p>Possible values include the following:</p>
    /// <ul>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_64Bit</p></li>
    /// </ul>
    pub software_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DisassociateSoftwareFromImageBuilderInput {
    /// <p>The name of the target image builder instance.</p>
    pub fn image_builder_name(&self) -> ::std::option::Option<&str> {
        self.image_builder_name.as_deref()
    }
    /// <p>The list of license included applications to disassociate from the image builder.</p>
    /// <p>Possible values include the following:</p>
    /// <ul>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_64Bit</p></li>
    /// </ul>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.software_names.is_none()`.
    pub fn software_names(&self) -> &[::std::string::String] {
        self.software_names.as_deref().unwrap_or_default()
    }
}
impl DisassociateSoftwareFromImageBuilderInput {
    /// Creates a new builder-style object to manufacture [`DisassociateSoftwareFromImageBuilderInput`](crate::operation::disassociate_software_from_image_builder::DisassociateSoftwareFromImageBuilderInput).
    pub fn builder() -> crate::operation::disassociate_software_from_image_builder::builders::DisassociateSoftwareFromImageBuilderInputBuilder {
        crate::operation::disassociate_software_from_image_builder::builders::DisassociateSoftwareFromImageBuilderInputBuilder::default()
    }
}

/// A builder for [`DisassociateSoftwareFromImageBuilderInput`](crate::operation::disassociate_software_from_image_builder::DisassociateSoftwareFromImageBuilderInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DisassociateSoftwareFromImageBuilderInputBuilder {
    pub(crate) image_builder_name: ::std::option::Option<::std::string::String>,
    pub(crate) software_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DisassociateSoftwareFromImageBuilderInputBuilder {
    /// <p>The name of the target image builder instance.</p>
    /// This field is required.
    pub fn image_builder_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.image_builder_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the target image builder instance.</p>
    pub fn set_image_builder_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.image_builder_name = input;
        self
    }
    /// <p>The name of the target image builder instance.</p>
    pub fn get_image_builder_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.image_builder_name
    }
    /// Appends an item to `software_names`.
    ///
    /// To override the contents of this collection use [`set_software_names`](Self::set_software_names).
    ///
    /// <p>The list of license included applications to disassociate from the image builder.</p>
    /// <p>Possible values include the following:</p>
    /// <ul>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_64Bit</p></li>
    /// </ul>
    pub fn software_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.software_names.unwrap_or_default();
        v.push(input.into());
        self.software_names = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of license included applications to disassociate from the image builder.</p>
    /// <p>Possible values include the following:</p>
    /// <ul>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_64Bit</p></li>
    /// </ul>
    pub fn set_software_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.software_names = input;
        self
    }
    /// <p>The list of license included applications to disassociate from the image builder.</p>
    /// <p>Possible values include the following:</p>
    /// <ul>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Professional_Plus_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Professional_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Office_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2021_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Visio_2024_LTSC_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2021_Standard_64Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_32Bit</p></li>
    /// <li>
    /// <p>Microsoft_Project_2024_Standard_64Bit</p></li>
    /// </ul>
    pub fn get_software_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.software_names
    }
    /// Consumes the builder and constructs a [`DisassociateSoftwareFromImageBuilderInput`](crate::operation::disassociate_software_from_image_builder::DisassociateSoftwareFromImageBuilderInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::disassociate_software_from_image_builder::DisassociateSoftwareFromImageBuilderInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::disassociate_software_from_image_builder::DisassociateSoftwareFromImageBuilderInput {
                image_builder_name: self.image_builder_name,
                software_names: self.software_names,
            },
        )
    }
}
