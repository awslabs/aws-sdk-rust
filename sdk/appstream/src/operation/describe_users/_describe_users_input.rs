// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeUsersInput {
    /// <p>The authentication type for the users in the user pool to describe. You must specify USERPOOL.</p>
    #[doc(hidden)]
    pub authentication_type: std::option::Option<crate::types::AuthenticationType>,
    /// <p>The maximum size of each page of results.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl DescribeUsersInput {
    /// <p>The authentication type for the users in the user pool to describe. You must specify USERPOOL.</p>
    pub fn authentication_type(&self) -> std::option::Option<&crate::types::AuthenticationType> {
        self.authentication_type.as_ref()
    }
    /// <p>The maximum size of each page of results.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeUsersInput {
    /// Creates a new builder-style object to manufacture [`DescribeUsersInput`](crate::operation::describe_users::DescribeUsersInput).
    pub fn builder() -> crate::operation::describe_users::builders::DescribeUsersInputBuilder {
        crate::operation::describe_users::builders::DescribeUsersInputBuilder::default()
    }
}

/// A builder for [`DescribeUsersInput`](crate::operation::describe_users::DescribeUsersInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeUsersInputBuilder {
    pub(crate) authentication_type: std::option::Option<crate::types::AuthenticationType>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl DescribeUsersInputBuilder {
    /// <p>The authentication type for the users in the user pool to describe. You must specify USERPOOL.</p>
    pub fn authentication_type(mut self, input: crate::types::AuthenticationType) -> Self {
        self.authentication_type = Some(input);
        self
    }
    /// <p>The authentication type for the users in the user pool to describe. You must specify USERPOOL.</p>
    pub fn set_authentication_type(
        mut self,
        input: std::option::Option<crate::types::AuthenticationType>,
    ) -> Self {
        self.authentication_type = input;
        self
    }
    /// <p>The maximum size of each page of results.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum size of each page of results.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeUsersInput`](crate::operation::describe_users::DescribeUsersInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_users::DescribeUsersInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_users::DescribeUsersInput {
            authentication_type: self.authentication_type,
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
