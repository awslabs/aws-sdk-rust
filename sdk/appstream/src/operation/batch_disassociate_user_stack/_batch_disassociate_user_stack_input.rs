// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchDisassociateUserStackInput {
    /// <p>The list of UserStackAssociation objects.</p>
    pub user_stack_associations: ::std::option::Option<::std::vec::Vec<crate::types::UserStackAssociation>>,
}
impl BatchDisassociateUserStackInput {
    /// <p>The list of UserStackAssociation objects.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.user_stack_associations.is_none()`.
    pub fn user_stack_associations(&self) -> &[crate::types::UserStackAssociation] {
        self.user_stack_associations.as_deref().unwrap_or_default()
    }
}
impl BatchDisassociateUserStackInput {
    /// Creates a new builder-style object to manufacture [`BatchDisassociateUserStackInput`](crate::operation::batch_disassociate_user_stack::BatchDisassociateUserStackInput).
    pub fn builder() -> crate::operation::batch_disassociate_user_stack::builders::BatchDisassociateUserStackInputBuilder {
        crate::operation::batch_disassociate_user_stack::builders::BatchDisassociateUserStackInputBuilder::default()
    }
}

/// A builder for [`BatchDisassociateUserStackInput`](crate::operation::batch_disassociate_user_stack::BatchDisassociateUserStackInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchDisassociateUserStackInputBuilder {
    pub(crate) user_stack_associations: ::std::option::Option<::std::vec::Vec<crate::types::UserStackAssociation>>,
}
impl BatchDisassociateUserStackInputBuilder {
    /// Appends an item to `user_stack_associations`.
    ///
    /// To override the contents of this collection use [`set_user_stack_associations`](Self::set_user_stack_associations).
    ///
    /// <p>The list of UserStackAssociation objects.</p>
    pub fn user_stack_associations(mut self, input: crate::types::UserStackAssociation) -> Self {
        let mut v = self.user_stack_associations.unwrap_or_default();
        v.push(input);
        self.user_stack_associations = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of UserStackAssociation objects.</p>
    pub fn set_user_stack_associations(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::UserStackAssociation>>) -> Self {
        self.user_stack_associations = input;
        self
    }
    /// <p>The list of UserStackAssociation objects.</p>
    pub fn get_user_stack_associations(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::UserStackAssociation>> {
        &self.user_stack_associations
    }
    /// Consumes the builder and constructs a [`BatchDisassociateUserStackInput`](crate::operation::batch_disassociate_user_stack::BatchDisassociateUserStackInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_disassociate_user_stack::BatchDisassociateUserStackInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::batch_disassociate_user_stack::BatchDisassociateUserStackInput {
            user_stack_associations: self.user_stack_associations,
        })
    }
}
