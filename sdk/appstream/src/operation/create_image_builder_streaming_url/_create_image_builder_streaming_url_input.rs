// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateImageBuilderStreamingUrlInput {
    /// <p>The name of the image builder.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 3600 seconds.</p>
    #[doc(hidden)]
    pub validity: std::option::Option<i64>,
}
impl CreateImageBuilderStreamingUrlInput {
    /// <p>The name of the image builder.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 3600 seconds.</p>
    pub fn validity(&self) -> std::option::Option<i64> {
        self.validity
    }
}
impl CreateImageBuilderStreamingUrlInput {
    /// Creates a new builder-style object to manufacture [`CreateImageBuilderStreamingUrlInput`](crate::operation::create_image_builder_streaming_url::CreateImageBuilderStreamingUrlInput).
    pub fn builder() -> crate::operation::create_image_builder_streaming_url::builders::CreateImageBuilderStreamingUrlInputBuilder{
        crate::operation::create_image_builder_streaming_url::builders::CreateImageBuilderStreamingUrlInputBuilder::default()
    }
}

/// A builder for [`CreateImageBuilderStreamingUrlInput`](crate::operation::create_image_builder_streaming_url::CreateImageBuilderStreamingUrlInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateImageBuilderStreamingUrlInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) validity: std::option::Option<i64>,
}
impl CreateImageBuilderStreamingUrlInputBuilder {
    /// <p>The name of the image builder.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the image builder.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 3600 seconds.</p>
    pub fn validity(mut self, input: i64) -> Self {
        self.validity = Some(input);
        self
    }
    /// <p>The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 3600 seconds.</p>
    pub fn set_validity(mut self, input: std::option::Option<i64>) -> Self {
        self.validity = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateImageBuilderStreamingUrlInput`](crate::operation::create_image_builder_streaming_url::CreateImageBuilderStreamingUrlInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_image_builder_streaming_url::CreateImageBuilderStreamingUrlInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_image_builder_streaming_url::CreateImageBuilderStreamingUrlInput {
                name: self.name
                ,
                validity: self.validity
                ,
            }
        )
    }
}
