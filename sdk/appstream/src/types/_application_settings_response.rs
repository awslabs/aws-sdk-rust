// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the persistent application settings for users of a stack.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ApplicationSettingsResponse {
    /// <p>Specifies whether persistent application settings are enabled for users during their streaming sessions.</p>
    #[doc(hidden)]
    pub enabled: bool,
    /// <p>The path prefix for the S3 bucket where users’ persistent application settings are stored.</p>
    #[doc(hidden)]
    pub settings_group: std::option::Option<std::string::String>,
    /// <p>The S3 bucket where users’ persistent application settings are stored. When persistent application settings are enabled for the first time for an account in an AWS Region, an S3 bucket is created. The bucket is unique to the AWS account and the Region. </p>
    #[doc(hidden)]
    pub s3_bucket_name: std::option::Option<std::string::String>,
}
impl ApplicationSettingsResponse {
    /// <p>Specifies whether persistent application settings are enabled for users during their streaming sessions.</p>
    pub fn enabled(&self) -> bool {
        self.enabled
    }
    /// <p>The path prefix for the S3 bucket where users’ persistent application settings are stored.</p>
    pub fn settings_group(&self) -> std::option::Option<&str> {
        self.settings_group.as_deref()
    }
    /// <p>The S3 bucket where users’ persistent application settings are stored. When persistent application settings are enabled for the first time for an account in an AWS Region, an S3 bucket is created. The bucket is unique to the AWS account and the Region. </p>
    pub fn s3_bucket_name(&self) -> std::option::Option<&str> {
        self.s3_bucket_name.as_deref()
    }
}
impl ApplicationSettingsResponse {
    /// Creates a new builder-style object to manufacture [`ApplicationSettingsResponse`](crate::types::ApplicationSettingsResponse).
    pub fn builder() -> crate::types::builders::ApplicationSettingsResponseBuilder {
        crate::types::builders::ApplicationSettingsResponseBuilder::default()
    }
}

/// A builder for [`ApplicationSettingsResponse`](crate::types::ApplicationSettingsResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ApplicationSettingsResponseBuilder {
    pub(crate) enabled: std::option::Option<bool>,
    pub(crate) settings_group: std::option::Option<std::string::String>,
    pub(crate) s3_bucket_name: std::option::Option<std::string::String>,
}
impl ApplicationSettingsResponseBuilder {
    /// <p>Specifies whether persistent application settings are enabled for users during their streaming sessions.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = Some(input);
        self
    }
    /// <p>Specifies whether persistent application settings are enabled for users during their streaming sessions.</p>
    pub fn set_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// <p>The path prefix for the S3 bucket where users’ persistent application settings are stored.</p>
    pub fn settings_group(mut self, input: impl Into<std::string::String>) -> Self {
        self.settings_group = Some(input.into());
        self
    }
    /// <p>The path prefix for the S3 bucket where users’ persistent application settings are stored.</p>
    pub fn set_settings_group(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.settings_group = input;
        self
    }
    /// <p>The S3 bucket where users’ persistent application settings are stored. When persistent application settings are enabled for the first time for an account in an AWS Region, an S3 bucket is created. The bucket is unique to the AWS account and the Region. </p>
    pub fn s3_bucket_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_bucket_name = Some(input.into());
        self
    }
    /// <p>The S3 bucket where users’ persistent application settings are stored. When persistent application settings are enabled for the first time for an account in an AWS Region, an S3 bucket is created. The bucket is unique to the AWS account and the Region. </p>
    pub fn set_s3_bucket_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_bucket_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ApplicationSettingsResponse`](crate::types::ApplicationSettingsResponse).
    pub fn build(self) -> crate::types::ApplicationSettingsResponse {
        crate::types::ApplicationSettingsResponse {
            enabled: self.enabled.unwrap_or_default(),
            settings_group: self.settings_group,
            s3_bucket_name: self.s3_bucket_name,
        }
    }
}
