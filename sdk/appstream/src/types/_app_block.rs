// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an app block.</p>
/// <p>App blocks are an Amazon AppStream 2.0 resource that stores the details about the virtual hard disk in an S3 bucket. It also stores the setup script with details about how to mount the virtual hard disk. The virtual hard disk includes the application binaries and other files necessary to launch your applications. Multiple applications can be assigned to a single app block.</p>
/// <p>This is only supported for Elastic fleets.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AppBlock {
    /// <p>The name of the app block.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The ARN of the app block.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The description of the app block.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The display name of the app block.</p>
    #[doc(hidden)]
    pub display_name: std::option::Option<std::string::String>,
    /// <p>The source S3 location of the app block.</p>
    #[doc(hidden)]
    pub source_s3_location: std::option::Option<crate::types::S3Location>,
    /// <p>The setup script details of the app block.</p>
    #[doc(hidden)]
    pub setup_script_details: std::option::Option<crate::types::ScriptDetails>,
    /// <p>The created time of the app block.</p>
    #[doc(hidden)]
    pub created_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl AppBlock {
    /// <p>The name of the app block.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The ARN of the app block.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The description of the app block.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The display name of the app block.</p>
    pub fn display_name(&self) -> std::option::Option<&str> {
        self.display_name.as_deref()
    }
    /// <p>The source S3 location of the app block.</p>
    pub fn source_s3_location(&self) -> std::option::Option<&crate::types::S3Location> {
        self.source_s3_location.as_ref()
    }
    /// <p>The setup script details of the app block.</p>
    pub fn setup_script_details(&self) -> std::option::Option<&crate::types::ScriptDetails> {
        self.setup_script_details.as_ref()
    }
    /// <p>The created time of the app block.</p>
    pub fn created_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_time.as_ref()
    }
}
impl AppBlock {
    /// Creates a new builder-style object to manufacture [`AppBlock`](crate::types::AppBlock).
    pub fn builder() -> crate::types::builders::AppBlockBuilder {
        crate::types::builders::AppBlockBuilder::default()
    }
}

/// A builder for [`AppBlock`](crate::types::AppBlock).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AppBlockBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) display_name: std::option::Option<std::string::String>,
    pub(crate) source_s3_location: std::option::Option<crate::types::S3Location>,
    pub(crate) setup_script_details: std::option::Option<crate::types::ScriptDetails>,
    pub(crate) created_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl AppBlockBuilder {
    /// <p>The name of the app block.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the app block.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The ARN of the app block.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The ARN of the app block.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The description of the app block.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the app block.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The display name of the app block.</p>
    pub fn display_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.display_name = Some(input.into());
        self
    }
    /// <p>The display name of the app block.</p>
    pub fn set_display_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The source S3 location of the app block.</p>
    pub fn source_s3_location(mut self, input: crate::types::S3Location) -> Self {
        self.source_s3_location = Some(input);
        self
    }
    /// <p>The source S3 location of the app block.</p>
    pub fn set_source_s3_location(
        mut self,
        input: std::option::Option<crate::types::S3Location>,
    ) -> Self {
        self.source_s3_location = input;
        self
    }
    /// <p>The setup script details of the app block.</p>
    pub fn setup_script_details(mut self, input: crate::types::ScriptDetails) -> Self {
        self.setup_script_details = Some(input);
        self
    }
    /// <p>The setup script details of the app block.</p>
    pub fn set_setup_script_details(
        mut self,
        input: std::option::Option<crate::types::ScriptDetails>,
    ) -> Self {
        self.setup_script_details = input;
        self
    }
    /// <p>The created time of the app block.</p>
    pub fn created_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_time = Some(input);
        self
    }
    /// <p>The created time of the app block.</p>
    pub fn set_created_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_time = input;
        self
    }
    /// Consumes the builder and constructs a [`AppBlock`](crate::types::AppBlock).
    pub fn build(self) -> crate::types::AppBlock {
        crate::types::AppBlock {
            name: self.name,
            arn: self.arn,
            description: self.description,
            display_name: self.display_name,
            source_s3_location: self.source_s3_location,
            setup_script_details: self.setup_script_details,
            created_time: self.created_time,
        }
    }
}
