// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the permissions that are available to the specified AWS account for a shared image.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SharedImagePermissions {
    /// <p>The 12-digit identifier of the AWS account with which the image is shared.</p>
    pub shared_account_id: ::std::option::Option<::std::string::String>,
    /// <p>Describes the permissions for a shared image.</p>
    pub image_permissions: ::std::option::Option<crate::types::ImagePermissions>,
}
impl SharedImagePermissions {
    /// <p>The 12-digit identifier of the AWS account with which the image is shared.</p>
    pub fn shared_account_id(&self) -> ::std::option::Option<&str> {
        self.shared_account_id.as_deref()
    }
    /// <p>Describes the permissions for a shared image.</p>
    pub fn image_permissions(&self) -> ::std::option::Option<&crate::types::ImagePermissions> {
        self.image_permissions.as_ref()
    }
}
impl SharedImagePermissions {
    /// Creates a new builder-style object to manufacture [`SharedImagePermissions`](crate::types::SharedImagePermissions).
    pub fn builder() -> crate::types::builders::SharedImagePermissionsBuilder {
        crate::types::builders::SharedImagePermissionsBuilder::default()
    }
}

/// A builder for [`SharedImagePermissions`](crate::types::SharedImagePermissions).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SharedImagePermissionsBuilder {
    pub(crate) shared_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) image_permissions: ::std::option::Option<crate::types::ImagePermissions>,
}
impl SharedImagePermissionsBuilder {
    /// <p>The 12-digit identifier of the AWS account with which the image is shared.</p>
    /// This field is required.
    pub fn shared_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.shared_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The 12-digit identifier of the AWS account with which the image is shared.</p>
    pub fn set_shared_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.shared_account_id = input;
        self
    }
    /// <p>The 12-digit identifier of the AWS account with which the image is shared.</p>
    pub fn get_shared_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.shared_account_id
    }
    /// <p>Describes the permissions for a shared image.</p>
    /// This field is required.
    pub fn image_permissions(mut self, input: crate::types::ImagePermissions) -> Self {
        self.image_permissions = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes the permissions for a shared image.</p>
    pub fn set_image_permissions(mut self, input: ::std::option::Option<crate::types::ImagePermissions>) -> Self {
        self.image_permissions = input;
        self
    }
    /// <p>Describes the permissions for a shared image.</p>
    pub fn get_image_permissions(&self) -> &::std::option::Option<crate::types::ImagePermissions> {
        &self.image_permissions
    }
    /// Consumes the builder and constructs a [`SharedImagePermissions`](crate::types::SharedImagePermissions).
    pub fn build(self) -> crate::types::SharedImagePermissions {
        crate::types::SharedImagePermissions {
            shared_account_id: self.shared_account_id,
            image_permissions: self.image_permissions,
        }
    }
}
