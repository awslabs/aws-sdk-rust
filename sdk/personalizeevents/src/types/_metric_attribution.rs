// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a metric attribution associated with an event. For more information about metric attributions, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/measuring-recommendation-impact.html">Measuring impact of recommendations</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MetricAttribution {
    /// <p>The source of the event, such as a third party.</p>
    pub event_attribution_source: ::std::string::String,
}
impl MetricAttribution {
    /// <p>The source of the event, such as a third party.</p>
    pub fn event_attribution_source(&self) -> &str {
        use std::ops::Deref;
        self.event_attribution_source.deref()
    }
}
impl MetricAttribution {
    /// Creates a new builder-style object to manufacture [`MetricAttribution`](crate::types::MetricAttribution).
    pub fn builder() -> crate::types::builders::MetricAttributionBuilder {
        crate::types::builders::MetricAttributionBuilder::default()
    }
}

/// A builder for [`MetricAttribution`](crate::types::MetricAttribution).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MetricAttributionBuilder {
    pub(crate) event_attribution_source: ::std::option::Option<::std::string::String>,
}
impl MetricAttributionBuilder {
    /// <p>The source of the event, such as a third party.</p>
    /// This field is required.
    pub fn event_attribution_source(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_attribution_source = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The source of the event, such as a third party.</p>
    pub fn set_event_attribution_source(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_attribution_source = input;
        self
    }
    /// <p>The source of the event, such as a third party.</p>
    pub fn get_event_attribution_source(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_attribution_source
    }
    /// Consumes the builder and constructs a [`MetricAttribution`](crate::types::MetricAttribution).
    /// This method will fail if any of the following fields are not set:
    /// - [`event_attribution_source`](crate::types::builders::MetricAttributionBuilder::event_attribution_source)
    pub fn build(self) -> ::std::result::Result<crate::types::MetricAttribution, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MetricAttribution {
            event_attribution_source: self.event_attribution_source.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "event_attribution_source",
                    "event_attribution_source was not specified but it is required when building MetricAttribution",
                )
            })?,
        })
    }
}
