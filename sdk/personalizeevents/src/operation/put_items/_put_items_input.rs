// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutItemsInput {
    /// <p>The Amazon Resource Name (ARN) of the Items dataset you are adding the item or items to.</p>
    #[doc(hidden)]
    pub dataset_arn: std::option::Option<std::string::String>,
    /// <p>A list of item data.</p>
    #[doc(hidden)]
    pub items: std::option::Option<std::vec::Vec<crate::types::Item>>,
}
impl PutItemsInput {
    /// <p>The Amazon Resource Name (ARN) of the Items dataset you are adding the item or items to.</p>
    pub fn dataset_arn(&self) -> std::option::Option<&str> {
        self.dataset_arn.as_deref()
    }
    /// <p>A list of item data.</p>
    pub fn items(&self) -> std::option::Option<&[crate::types::Item]> {
        self.items.as_deref()
    }
}
impl PutItemsInput {
    /// Creates a new builder-style object to manufacture [`PutItemsInput`](crate::operation::put_items::PutItemsInput).
    pub fn builder() -> crate::operation::put_items::builders::PutItemsInputBuilder {
        crate::operation::put_items::builders::PutItemsInputBuilder::default()
    }
}

/// A builder for [`PutItemsInput`](crate::operation::put_items::PutItemsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutItemsInputBuilder {
    pub(crate) dataset_arn: std::option::Option<std::string::String>,
    pub(crate) items: std::option::Option<std::vec::Vec<crate::types::Item>>,
}
impl PutItemsInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Items dataset you are adding the item or items to.</p>
    pub fn dataset_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.dataset_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Items dataset you are adding the item or items to.</p>
    pub fn set_dataset_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.dataset_arn = input;
        self
    }
    /// Appends an item to `items`.
    ///
    /// To override the contents of this collection use [`set_items`](Self::set_items).
    ///
    /// <p>A list of item data.</p>
    pub fn items(mut self, input: crate::types::Item) -> Self {
        let mut v = self.items.unwrap_or_default();
        v.push(input);
        self.items = Some(v);
        self
    }
    /// <p>A list of item data.</p>
    pub fn set_items(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Item>>,
    ) -> Self {
        self.items = input;
        self
    }
    /// Consumes the builder and constructs a [`PutItemsInput`](crate::operation::put_items::PutItemsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_items::PutItemsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::put_items::PutItemsInput {
            dataset_arn: self.dataset_arn,
            items: self.items,
        })
    }
}
