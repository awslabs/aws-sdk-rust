// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct PutUsersOutput {}
impl std::fmt::Debug for PutUsersOutput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("PutUsersOutput");
        formatter.finish()
    }
}
/// See [`PutUsersOutput`](crate::output::PutUsersOutput)
pub mod put_users_output {
    /// A builder for [`PutUsersOutput`](crate::output::PutUsersOutput)
    #[non_exhaustive]
    #[derive(std::default::Default, std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
    pub struct Builder {}
    impl Builder {
        /// Consumes the builder and constructs a [`PutUsersOutput`](crate::output::PutUsersOutput)
        pub fn build(self) -> crate::output::PutUsersOutput {
            crate::output::PutUsersOutput {}
        }
    }
}
impl PutUsersOutput {
    /// Creates a new builder-style object to manufacture [`PutUsersOutput`](crate::output::PutUsersOutput)
    pub fn builder() -> crate::output::put_users_output::Builder {
        crate::output::put_users_output::Builder::default()
    }
}

#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct PutItemsOutput {}
impl std::fmt::Debug for PutItemsOutput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("PutItemsOutput");
        formatter.finish()
    }
}
/// See [`PutItemsOutput`](crate::output::PutItemsOutput)
pub mod put_items_output {
    /// A builder for [`PutItemsOutput`](crate::output::PutItemsOutput)
    #[non_exhaustive]
    #[derive(std::default::Default, std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
    pub struct Builder {}
    impl Builder {
        /// Consumes the builder and constructs a [`PutItemsOutput`](crate::output::PutItemsOutput)
        pub fn build(self) -> crate::output::PutItemsOutput {
            crate::output::PutItemsOutput {}
        }
    }
}
impl PutItemsOutput {
    /// Creates a new builder-style object to manufacture [`PutItemsOutput`](crate::output::PutItemsOutput)
    pub fn builder() -> crate::output::put_items_output::Builder {
        crate::output::put_items_output::Builder::default()
    }
}

#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct PutEventsOutput {}
impl std::fmt::Debug for PutEventsOutput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("PutEventsOutput");
        formatter.finish()
    }
}
/// See [`PutEventsOutput`](crate::output::PutEventsOutput)
pub mod put_events_output {
    /// A builder for [`PutEventsOutput`](crate::output::PutEventsOutput)
    #[non_exhaustive]
    #[derive(std::default::Default, std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
    pub struct Builder {}
    impl Builder {
        /// Consumes the builder and constructs a [`PutEventsOutput`](crate::output::PutEventsOutput)
        pub fn build(self) -> crate::output::PutEventsOutput {
            crate::output::PutEventsOutput {}
        }
    }
}
impl PutEventsOutput {
    /// Creates a new builder-style object to manufacture [`PutEventsOutput`](crate::output::PutEventsOutput)
    pub fn builder() -> crate::output::put_events_output::Builder {
        crate::output::put_events_output::Builder::default()
    }
}
