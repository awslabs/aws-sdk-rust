// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Response for GetProgrammaticAccessCredentials operation
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetProgrammaticAccessCredentialsOutput {
    /// <p>Returns the programmatic credentials.</p>
    #[doc(hidden)]
    pub credentials: std::option::Option<crate::types::Credentials>,
    /// <p>Returns the duration in which the credentials will remain valid.</p>
    #[doc(hidden)]
    pub duration_in_minutes: i64,
    _request_id: Option<String>,
}
impl GetProgrammaticAccessCredentialsOutput {
    /// <p>Returns the programmatic credentials.</p>
    pub fn credentials(&self) -> std::option::Option<&crate::types::Credentials> {
        self.credentials.as_ref()
    }
    /// <p>Returns the duration in which the credentials will remain valid.</p>
    pub fn duration_in_minutes(&self) -> i64 {
        self.duration_in_minutes
    }
}
impl aws_http::request_id::RequestId for GetProgrammaticAccessCredentialsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetProgrammaticAccessCredentialsOutput {
    /// Creates a new builder-style object to manufacture [`GetProgrammaticAccessCredentialsOutput`](crate::operation::get_programmatic_access_credentials::GetProgrammaticAccessCredentialsOutput).
    pub fn builder() -> crate::operation::get_programmatic_access_credentials::builders::GetProgrammaticAccessCredentialsOutputBuilder{
        crate::operation::get_programmatic_access_credentials::builders::GetProgrammaticAccessCredentialsOutputBuilder::default()
    }
}

/// A builder for [`GetProgrammaticAccessCredentialsOutput`](crate::operation::get_programmatic_access_credentials::GetProgrammaticAccessCredentialsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetProgrammaticAccessCredentialsOutputBuilder {
    pub(crate) credentials: std::option::Option<crate::types::Credentials>,
    pub(crate) duration_in_minutes: std::option::Option<i64>,
    _request_id: Option<String>,
}
impl GetProgrammaticAccessCredentialsOutputBuilder {
    /// <p>Returns the programmatic credentials.</p>
    pub fn credentials(mut self, input: crate::types::Credentials) -> Self {
        self.credentials = Some(input);
        self
    }
    /// <p>Returns the programmatic credentials.</p>
    pub fn set_credentials(
        mut self,
        input: std::option::Option<crate::types::Credentials>,
    ) -> Self {
        self.credentials = input;
        self
    }
    /// <p>Returns the duration in which the credentials will remain valid.</p>
    pub fn duration_in_minutes(mut self, input: i64) -> Self {
        self.duration_in_minutes = Some(input);
        self
    }
    /// <p>Returns the duration in which the credentials will remain valid.</p>
    pub fn set_duration_in_minutes(mut self, input: std::option::Option<i64>) -> Self {
        self.duration_in_minutes = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetProgrammaticAccessCredentialsOutput`](crate::operation::get_programmatic_access_credentials::GetProgrammaticAccessCredentialsOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_programmatic_access_credentials::GetProgrammaticAccessCredentialsOutput
    {
        crate::operation::get_programmatic_access_credentials::GetProgrammaticAccessCredentialsOutput {
            credentials: self.credentials
            ,
            duration_in_minutes: self.duration_in_minutes
                .unwrap_or_default()
            ,
            _request_id: self._request_id,
        }
    }
}
