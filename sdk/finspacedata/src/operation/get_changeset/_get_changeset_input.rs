// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Request to describe a changeset.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetChangesetInput {
    /// <p>The unique identifier for the FinSpace Dataset where the Changeset is created.</p>
    #[doc(hidden)]
    pub dataset_id: std::option::Option<std::string::String>,
    /// <p>The unique identifier of the Changeset for which to get data.</p>
    #[doc(hidden)]
    pub changeset_id: std::option::Option<std::string::String>,
}
impl GetChangesetInput {
    /// <p>The unique identifier for the FinSpace Dataset where the Changeset is created.</p>
    pub fn dataset_id(&self) -> std::option::Option<&str> {
        self.dataset_id.as_deref()
    }
    /// <p>The unique identifier of the Changeset for which to get data.</p>
    pub fn changeset_id(&self) -> std::option::Option<&str> {
        self.changeset_id.as_deref()
    }
}
impl GetChangesetInput {
    /// Creates a new builder-style object to manufacture [`GetChangesetInput`](crate::operation::get_changeset::GetChangesetInput).
    pub fn builder() -> crate::operation::get_changeset::builders::GetChangesetInputBuilder {
        crate::operation::get_changeset::builders::GetChangesetInputBuilder::default()
    }
}

/// A builder for [`GetChangesetInput`](crate::operation::get_changeset::GetChangesetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetChangesetInputBuilder {
    pub(crate) dataset_id: std::option::Option<std::string::String>,
    pub(crate) changeset_id: std::option::Option<std::string::String>,
}
impl GetChangesetInputBuilder {
    /// <p>The unique identifier for the FinSpace Dataset where the Changeset is created.</p>
    pub fn dataset_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.dataset_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the FinSpace Dataset where the Changeset is created.</p>
    pub fn set_dataset_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.dataset_id = input;
        self
    }
    /// <p>The unique identifier of the Changeset for which to get data.</p>
    pub fn changeset_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.changeset_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the Changeset for which to get data.</p>
    pub fn set_changeset_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.changeset_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetChangesetInput`](crate::operation::get_changeset::GetChangesetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_changeset::GetChangesetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_changeset::GetChangesetInput {
            dataset_id: self.dataset_id,
            changeset_id: self.changeset_id,
        })
    }
}
