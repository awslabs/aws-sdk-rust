// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetExternalDataViewAccessDetailsInput {
    /// <p>The unique identifier for the Dataview that you want to access.</p>
    #[doc(hidden)]
    pub data_view_id: std::option::Option<std::string::String>,
    /// <p>The unique identifier for the Dataset.</p>
    #[doc(hidden)]
    pub dataset_id: std::option::Option<std::string::String>,
}
impl GetExternalDataViewAccessDetailsInput {
    /// <p>The unique identifier for the Dataview that you want to access.</p>
    pub fn data_view_id(&self) -> std::option::Option<&str> {
        self.data_view_id.as_deref()
    }
    /// <p>The unique identifier for the Dataset.</p>
    pub fn dataset_id(&self) -> std::option::Option<&str> {
        self.dataset_id.as_deref()
    }
}
impl GetExternalDataViewAccessDetailsInput {
    /// Creates a new builder-style object to manufacture [`GetExternalDataViewAccessDetailsInput`](crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput).
    pub fn builder() -> crate::operation::get_external_data_view_access_details::builders::GetExternalDataViewAccessDetailsInputBuilder{
        crate::operation::get_external_data_view_access_details::builders::GetExternalDataViewAccessDetailsInputBuilder::default()
    }
}

/// A builder for [`GetExternalDataViewAccessDetailsInput`](crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetExternalDataViewAccessDetailsInputBuilder {
    pub(crate) data_view_id: std::option::Option<std::string::String>,
    pub(crate) dataset_id: std::option::Option<std::string::String>,
}
impl GetExternalDataViewAccessDetailsInputBuilder {
    /// <p>The unique identifier for the Dataview that you want to access.</p>
    pub fn data_view_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.data_view_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the Dataview that you want to access.</p>
    pub fn set_data_view_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.data_view_id = input;
        self
    }
    /// <p>The unique identifier for the Dataset.</p>
    pub fn dataset_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.dataset_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the Dataset.</p>
    pub fn set_dataset_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.dataset_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetExternalDataViewAccessDetailsInput`](crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput).
    pub fn build(self) -> Result<crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput {
                data_view_id: self.data_view_id
                ,
                dataset_id: self.dataset_id
                ,
            }
        )
    }
}
