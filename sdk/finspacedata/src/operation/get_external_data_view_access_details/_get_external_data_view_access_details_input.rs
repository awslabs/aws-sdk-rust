// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetExternalDataViewAccessDetailsInput {
    /// <p>The unique identifier for the Dataview that you want to access.</p>
    pub data_view_id: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier for the Dataset.</p>
    pub dataset_id: ::std::option::Option<::std::string::String>,
}
impl GetExternalDataViewAccessDetailsInput {
    /// <p>The unique identifier for the Dataview that you want to access.</p>
    pub fn data_view_id(&self) -> ::std::option::Option<&str> {
        self.data_view_id.as_deref()
    }
    /// <p>The unique identifier for the Dataset.</p>
    pub fn dataset_id(&self) -> ::std::option::Option<&str> {
        self.dataset_id.as_deref()
    }
}
impl GetExternalDataViewAccessDetailsInput {
    /// Creates a new builder-style object to manufacture [`GetExternalDataViewAccessDetailsInput`](crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput).
    pub fn builder() -> crate::operation::get_external_data_view_access_details::builders::GetExternalDataViewAccessDetailsInputBuilder {
        crate::operation::get_external_data_view_access_details::builders::GetExternalDataViewAccessDetailsInputBuilder::default()
    }
}

/// A builder for [`GetExternalDataViewAccessDetailsInput`](crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetExternalDataViewAccessDetailsInputBuilder {
    pub(crate) data_view_id: ::std::option::Option<::std::string::String>,
    pub(crate) dataset_id: ::std::option::Option<::std::string::String>,
}
impl GetExternalDataViewAccessDetailsInputBuilder {
    /// <p>The unique identifier for the Dataview that you want to access.</p>
    /// This field is required.
    pub fn data_view_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_view_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the Dataview that you want to access.</p>
    pub fn set_data_view_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_view_id = input;
        self
    }
    /// <p>The unique identifier for the Dataview that you want to access.</p>
    pub fn get_data_view_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_view_id
    }
    /// <p>The unique identifier for the Dataset.</p>
    /// This field is required.
    pub fn dataset_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.dataset_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the Dataset.</p>
    pub fn set_dataset_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.dataset_id = input;
        self
    }
    /// <p>The unique identifier for the Dataset.</p>
    pub fn get_dataset_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.dataset_id
    }
    /// Consumes the builder and constructs a [`GetExternalDataViewAccessDetailsInput`](crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_external_data_view_access_details::GetExternalDataViewAccessDetailsInput {
                data_view_id: self.data_view_id,
                dataset_id: self.dataset_id,
            },
        )
    }
}
