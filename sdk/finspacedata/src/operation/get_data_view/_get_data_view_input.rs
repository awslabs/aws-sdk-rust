// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Request for retrieving a data view detail. Grouped / accessible within a dataset by its dataset id.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDataViewInput {
    /// <p>The unique identifier for the Dataview.</p>
    #[doc(hidden)]
    pub data_view_id: std::option::Option<std::string::String>,
    /// <p>The unique identifier for the Dataset used in the Dataview.</p>
    #[doc(hidden)]
    pub dataset_id: std::option::Option<std::string::String>,
}
impl GetDataViewInput {
    /// <p>The unique identifier for the Dataview.</p>
    pub fn data_view_id(&self) -> std::option::Option<&str> {
        self.data_view_id.as_deref()
    }
    /// <p>The unique identifier for the Dataset used in the Dataview.</p>
    pub fn dataset_id(&self) -> std::option::Option<&str> {
        self.dataset_id.as_deref()
    }
}
impl GetDataViewInput {
    /// Creates a new builder-style object to manufacture [`GetDataViewInput`](crate::operation::get_data_view::GetDataViewInput).
    pub fn builder() -> crate::operation::get_data_view::builders::GetDataViewInputBuilder {
        crate::operation::get_data_view::builders::GetDataViewInputBuilder::default()
    }
}

/// A builder for [`GetDataViewInput`](crate::operation::get_data_view::GetDataViewInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDataViewInputBuilder {
    pub(crate) data_view_id: std::option::Option<std::string::String>,
    pub(crate) dataset_id: std::option::Option<std::string::String>,
}
impl GetDataViewInputBuilder {
    /// <p>The unique identifier for the Dataview.</p>
    pub fn data_view_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.data_view_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the Dataview.</p>
    pub fn set_data_view_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.data_view_id = input;
        self
    }
    /// <p>The unique identifier for the Dataset used in the Dataview.</p>
    pub fn dataset_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.dataset_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the Dataset used in the Dataview.</p>
    pub fn set_dataset_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.dataset_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetDataViewInput`](crate::operation::get_data_view::GetDataViewInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_data_view::GetDataViewInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_data_view::GetDataViewInput {
            data_view_id: self.data_view_id,
            dataset_id: self.dataset_id,
        })
    }
}
