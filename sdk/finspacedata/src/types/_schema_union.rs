// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A union of schema types.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SchemaUnion {
    /// <p>The configuration for a schema on a tabular Dataset.</p>
    #[doc(hidden)]
    pub tabular_schema_config: std::option::Option<crate::types::SchemaDefinition>,
}
impl SchemaUnion {
    /// <p>The configuration for a schema on a tabular Dataset.</p>
    pub fn tabular_schema_config(&self) -> std::option::Option<&crate::types::SchemaDefinition> {
        self.tabular_schema_config.as_ref()
    }
}
impl SchemaUnion {
    /// Creates a new builder-style object to manufacture [`SchemaUnion`](crate::types::SchemaUnion).
    pub fn builder() -> crate::types::builders::SchemaUnionBuilder {
        crate::types::builders::SchemaUnionBuilder::default()
    }
}

/// A builder for [`SchemaUnion`](crate::types::SchemaUnion).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SchemaUnionBuilder {
    pub(crate) tabular_schema_config: std::option::Option<crate::types::SchemaDefinition>,
}
impl SchemaUnionBuilder {
    /// <p>The configuration for a schema on a tabular Dataset.</p>
    pub fn tabular_schema_config(mut self, input: crate::types::SchemaDefinition) -> Self {
        self.tabular_schema_config = Some(input);
        self
    }
    /// <p>The configuration for a schema on a tabular Dataset.</p>
    pub fn set_tabular_schema_config(
        mut self,
        input: std::option::Option<crate::types::SchemaDefinition>,
    ) -> Self {
        self.tabular_schema_config = input;
        self
    }
    /// Consumes the builder and constructs a [`SchemaUnion`](crate::types::SchemaUnion).
    pub fn build(self) -> crate::types::SchemaUnion {
        crate::types::SchemaUnion {
            tabular_schema_config: self.tabular_schema_config,
        }
    }
}
