// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDataView`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::set_client_token): <p>A token that ensures idempotency. This token expires in 10 minutes.</p>
    ///   - [`dataset_id(impl Into<String>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::dataset_id) / [`set_dataset_id(Option<String>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::set_dataset_id): <p>The unique Dataset identifier that is used to create a Dataview.</p>
    ///   - [`auto_update(bool)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::auto_update) / [`set_auto_update(bool)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::set_auto_update): <p>Flag to indicate Dataview should be updated automatically.</p>
    ///   - [`sort_columns(Vec<String>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::sort_columns) / [`set_sort_columns(Option<Vec<String>>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::set_sort_columns): <p>Columns to be used for sorting the data.</p>
    ///   - [`partition_columns(Vec<String>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::partition_columns) / [`set_partition_columns(Option<Vec<String>>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::set_partition_columns): <p>Ordered set of column names used to partition data.</p>
    ///   - [`as_of_timestamp(i64)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::as_of_timestamp) / [`set_as_of_timestamp(Option<i64>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::set_as_of_timestamp): <p>Beginning time to use for the Dataview. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    ///   - [`destination_type_params(DataViewDestinationTypeParams)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::destination_type_params) / [`set_destination_type_params(Option<DataViewDestinationTypeParams>)`](crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::set_destination_type_params): <p>Options that define the destination type for the Dataview.</p>
    /// - On success, responds with [`CreateDataViewOutput`](crate::operation::create_data_view::CreateDataViewOutput) with field(s):
    ///   - [`dataset_id(Option<String>)`](crate::operation::create_data_view::CreateDataViewOutput::dataset_id): <p>The unique identifier of the Dataset used for the Dataview.</p>
    ///   - [`data_view_id(Option<String>)`](crate::operation::create_data_view::CreateDataViewOutput::data_view_id): <p>The unique identifier for the created Dataview.</p>
    /// - On failure, responds with [`SdkError<CreateDataViewError>`](crate::operation::create_data_view::CreateDataViewError)
    pub fn create_data_view(
        &self,
    ) -> crate::operation::create_data_view::builders::CreateDataViewFluentBuilder {
        crate::operation::create_data_view::builders::CreateDataViewFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
