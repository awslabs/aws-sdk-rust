// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisableUser`](crate::client::fluent_builders::DisableUser) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::DisableUser::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::DisableUser::set_user_id): <p>The unique identifier for the user account that you want to disable.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DisableUser::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DisableUser::set_client_token): <p>A token that ensures idempotency. This token expires in 10 minutes.</p>
    /// - On success, responds with [`DisableUserOutput`](crate::output::DisableUserOutput) with field(s):
    ///   - [`user_id(Option<String>)`](crate::output::DisableUserOutput::user_id): <p>The unique identifier for the disabled user account.</p>
    /// - On failure, responds with [`SdkError<DisableUserError>`](crate::error::DisableUserError)
    pub fn disable_user(&self) -> crate::client::fluent_builders::DisableUser {
        crate::client::fluent_builders::DisableUser::new(self.handle.clone())
    }
}
