// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisassociateUserFromPermissionGroup`](crate::client::fluent_builders::DisassociateUserFromPermissionGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`permission_group_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateUserFromPermissionGroup::permission_group_id) / [`set_permission_group_id(Option<String>)`](crate::client::fluent_builders::DisassociateUserFromPermissionGroup::set_permission_group_id): <p>The unique identifier for the permission group.</p>
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateUserFromPermissionGroup::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::DisassociateUserFromPermissionGroup::set_user_id): <p>The unique identifier for the user.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DisassociateUserFromPermissionGroup::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DisassociateUserFromPermissionGroup::set_client_token): <p>A token that ensures idempotency. This token expires in 10 minutes.</p>
    /// - On success, responds with [`DisassociateUserFromPermissionGroupOutput`](crate::output::DisassociateUserFromPermissionGroupOutput) with field(s):
    ///   - [`status_code(i32)`](crate::output::DisassociateUserFromPermissionGroupOutput::status_code): <p>The returned status code of the response.</p>
    /// - On failure, responds with [`SdkError<DisassociateUserFromPermissionGroupError>`](crate::error::DisassociateUserFromPermissionGroupError)
    pub fn disassociate_user_from_permission_group(
        &self,
    ) -> crate::client::fluent_builders::DisassociateUserFromPermissionGroup {
        crate::client::fluent_builders::DisassociateUserFromPermissionGroup::new(
            self.handle.clone(),
        )
    }
}
