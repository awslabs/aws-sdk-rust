// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePermissionGroup`](crate::client::fluent_builders::DeletePermissionGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`permission_group_id(impl Into<String>)`](crate::client::fluent_builders::DeletePermissionGroup::permission_group_id) / [`set_permission_group_id(Option<String>)`](crate::client::fluent_builders::DeletePermissionGroup::set_permission_group_id): <p>The unique identifier for the permission group that you want to delete.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeletePermissionGroup::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeletePermissionGroup::set_client_token): <p>A token that ensures idempotency. This token expires in 10 minutes.</p>
    /// - On success, responds with [`DeletePermissionGroupOutput`](crate::output::DeletePermissionGroupOutput) with field(s):
    ///   - [`permission_group_id(Option<String>)`](crate::output::DeletePermissionGroupOutput::permission_group_id): <p>The unique identifier for the deleted permission group.</p>
    /// - On failure, responds with [`SdkError<DeletePermissionGroupError>`](crate::error::DeletePermissionGroupError)
    pub fn delete_permission_group(&self) -> crate::client::fluent_builders::DeletePermissionGroup {
        crate::client::fluent_builders::DeletePermissionGroup::new(self.handle.clone())
    }
}
