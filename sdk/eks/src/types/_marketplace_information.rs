// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an Amazon EKS add-on from the Amazon Web Services Marketplace.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MarketplaceInformation {
    /// <p>The product ID from the Amazon Web Services Marketplace.</p>
    #[doc(hidden)]
    pub product_id: std::option::Option<std::string::String>,
    /// <p>The product URL from the Amazon Web Services Marketplace.</p>
    #[doc(hidden)]
    pub product_url: std::option::Option<std::string::String>,
}
impl MarketplaceInformation {
    /// <p>The product ID from the Amazon Web Services Marketplace.</p>
    pub fn product_id(&self) -> std::option::Option<&str> {
        self.product_id.as_deref()
    }
    /// <p>The product URL from the Amazon Web Services Marketplace.</p>
    pub fn product_url(&self) -> std::option::Option<&str> {
        self.product_url.as_deref()
    }
}
impl MarketplaceInformation {
    /// Creates a new builder-style object to manufacture [`MarketplaceInformation`](crate::types::MarketplaceInformation).
    pub fn builder() -> crate::types::builders::MarketplaceInformationBuilder {
        crate::types::builders::MarketplaceInformationBuilder::default()
    }
}

/// A builder for [`MarketplaceInformation`](crate::types::MarketplaceInformation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MarketplaceInformationBuilder {
    pub(crate) product_id: std::option::Option<std::string::String>,
    pub(crate) product_url: std::option::Option<std::string::String>,
}
impl MarketplaceInformationBuilder {
    /// <p>The product ID from the Amazon Web Services Marketplace.</p>
    pub fn product_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.product_id = Some(input.into());
        self
    }
    /// <p>The product ID from the Amazon Web Services Marketplace.</p>
    pub fn set_product_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.product_id = input;
        self
    }
    /// <p>The product URL from the Amazon Web Services Marketplace.</p>
    pub fn product_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.product_url = Some(input.into());
        self
    }
    /// <p>The product URL from the Amazon Web Services Marketplace.</p>
    pub fn set_product_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.product_url = input;
        self
    }
    /// Consumes the builder and constructs a [`MarketplaceInformation`](crate::types::MarketplaceInformation).
    pub fn build(self) -> crate::types::MarketplaceInformation {
        crate::types::MarketplaceInformation {
            product_id: self.product_id,
            product_url: self.product_url,
        }
    }
}
