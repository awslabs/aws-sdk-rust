// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object representing the resources associated with the node group, such as Auto Scaling groups and security groups for remote access.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NodegroupResources {
    /// <p>The Auto Scaling groups associated with the node group.</p>
    pub auto_scaling_groups: ::std::option::Option<::std::vec::Vec<crate::types::AutoScalingGroup>>,
    /// <p>The remote access security group associated with the node group. This security group controls SSH access to the nodes.</p>
    pub remote_access_security_group: ::std::option::Option<::std::string::String>,
}
impl NodegroupResources {
    /// <p>The Auto Scaling groups associated with the node group.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.auto_scaling_groups.is_none()`.
    pub fn auto_scaling_groups(&self) -> &[crate::types::AutoScalingGroup] {
        self.auto_scaling_groups.as_deref().unwrap_or_default()
    }
    /// <p>The remote access security group associated with the node group. This security group controls SSH access to the nodes.</p>
    pub fn remote_access_security_group(&self) -> ::std::option::Option<&str> {
        self.remote_access_security_group.as_deref()
    }
}
impl NodegroupResources {
    /// Creates a new builder-style object to manufacture [`NodegroupResources`](crate::types::NodegroupResources).
    pub fn builder() -> crate::types::builders::NodegroupResourcesBuilder {
        crate::types::builders::NodegroupResourcesBuilder::default()
    }
}

/// A builder for [`NodegroupResources`](crate::types::NodegroupResources).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct NodegroupResourcesBuilder {
    pub(crate) auto_scaling_groups: ::std::option::Option<::std::vec::Vec<crate::types::AutoScalingGroup>>,
    pub(crate) remote_access_security_group: ::std::option::Option<::std::string::String>,
}
impl NodegroupResourcesBuilder {
    /// Appends an item to `auto_scaling_groups`.
    ///
    /// To override the contents of this collection use [`set_auto_scaling_groups`](Self::set_auto_scaling_groups).
    ///
    /// <p>The Auto Scaling groups associated with the node group.</p>
    pub fn auto_scaling_groups(mut self, input: crate::types::AutoScalingGroup) -> Self {
        let mut v = self.auto_scaling_groups.unwrap_or_default();
        v.push(input);
        self.auto_scaling_groups = ::std::option::Option::Some(v);
        self
    }
    /// <p>The Auto Scaling groups associated with the node group.</p>
    pub fn set_auto_scaling_groups(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AutoScalingGroup>>) -> Self {
        self.auto_scaling_groups = input;
        self
    }
    /// <p>The Auto Scaling groups associated with the node group.</p>
    pub fn get_auto_scaling_groups(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AutoScalingGroup>> {
        &self.auto_scaling_groups
    }
    /// <p>The remote access security group associated with the node group. This security group controls SSH access to the nodes.</p>
    pub fn remote_access_security_group(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.remote_access_security_group = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The remote access security group associated with the node group. This security group controls SSH access to the nodes.</p>
    pub fn set_remote_access_security_group(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.remote_access_security_group = input;
        self
    }
    /// <p>The remote access security group associated with the node group. This security group controls SSH access to the nodes.</p>
    pub fn get_remote_access_security_group(&self) -> &::std::option::Option<::std::string::String> {
        &self.remote_access_security_group
    }
    /// Consumes the builder and constructs a [`NodegroupResources`](crate::types::NodegroupResources).
    pub fn build(self) -> crate::types::NodegroupResources {
        crate::types::NodegroupResources {
            auto_scaling_groups: self.auto_scaling_groups,
            remote_access_security_group: self.remote_access_security_group,
        }
    }
}
