// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteAddon`](crate::client::fluent_builders::DeleteAddon) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::DeleteAddon::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::DeleteAddon::set_cluster_name): <p>The name of the cluster to delete the add-on from.</p>
    ///   - [`addon_name(impl Into<String>)`](crate::client::fluent_builders::DeleteAddon::addon_name) / [`set_addon_name(Option<String>)`](crate::client::fluent_builders::DeleteAddon::set_addon_name): <p>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.</p>
    ///   - [`preserve(bool)`](crate::client::fluent_builders::DeleteAddon::preserve) / [`set_preserve(bool)`](crate::client::fluent_builders::DeleteAddon::set_preserve): <p>Specifying this option preserves the add-on software on your cluster but Amazon EKS stops managing any settings for the add-on. If an IAM account is associated with the add-on, it isn't removed.</p>
    /// - On success, responds with [`DeleteAddonOutput`](crate::output::DeleteAddonOutput) with field(s):
    ///   - [`addon(Option<Addon>)`](crate::output::DeleteAddonOutput::addon): <p>An Amazon EKS add-on. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.</p>
    /// - On failure, responds with [`SdkError<DeleteAddonError>`](crate::error::DeleteAddonError)
    pub fn delete_addon(&self) -> crate::client::fluent_builders::DeleteAddon {
        crate::client::fluent_builders::DeleteAddon::new(self.handle.clone())
    }
}
