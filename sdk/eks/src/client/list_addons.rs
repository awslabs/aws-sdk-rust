// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAddons`](crate::client::fluent_builders::ListAddons) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAddons::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::ListAddons::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::ListAddons::set_cluster_name): <p>The name of the cluster.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAddons::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAddons::set_max_results): <p>The maximum number of add-on results returned by <code>ListAddonsRequest</code> in paginated output. When you use this parameter, <code>ListAddonsRequest</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListAddonsRequest</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListAddonsRequest</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAddons::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAddons::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>ListAddonsRequest</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note>   <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>  </note>
    /// - On success, responds with [`ListAddonsOutput`](crate::output::ListAddonsOutput) with field(s):
    ///   - [`addons(Option<Vec<String>>)`](crate::output::ListAddonsOutput::addons): <p>A list of available add-ons.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAddonsOutput::next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>ListAddonsResponse</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note>   <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>  </note>
    /// - On failure, responds with [`SdkError<ListAddonsError>`](crate::error::ListAddonsError)
    pub fn list_addons(&self) -> crate::client::fluent_builders::ListAddons {
        crate::client::fluent_builders::ListAddons::new(self.handle.clone())
    }
}
