// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateIdentityProviderConfig`](crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder::cluster_name) / [`set_cluster_name(Option<String>)`](crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder::set_cluster_name):<br>required: **true**<br><p>The name of the cluster to associate the configuration to.</p><br>
    ///   - [`oidc(OidcIdentityProviderConfigRequest)`](crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder::oidc) / [`set_oidc(Option<OidcIdentityProviderConfigRequest>)`](crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder::set_oidc):<br>required: **true**<br><p>An object representing an OpenID Connect (OIDC) identity provider configuration.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder::set_tags):<br>required: **false**<br><p>The metadata to apply to the configuration to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder::set_client_request_token):<br>required: **false**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p><br>
    /// - On success, responds with [`AssociateIdentityProviderConfigOutput`](crate::operation::associate_identity_provider_config::AssociateIdentityProviderConfigOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::operation::associate_identity_provider_config::AssociateIdentityProviderConfigOutput::update): <p>An object representing an asynchronous update.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::associate_identity_provider_config::AssociateIdentityProviderConfigOutput::tags): <p>The tags for the resource.</p>
    /// - On failure, responds with [`SdkError<AssociateIdentityProviderConfigError>`](crate::operation::associate_identity_provider_config::AssociateIdentityProviderConfigError)
    pub fn associate_identity_provider_config(
        &self,
    ) -> crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder {
        crate::operation::associate_identity_provider_config::builders::AssociateIdentityProviderConfigFluentBuilder::new(self.handle.clone())
    }
}
