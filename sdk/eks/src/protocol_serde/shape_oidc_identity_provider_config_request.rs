// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_oidc_identity_provider_config_request(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::OidcIdentityProviderConfigRequest,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object
            .key("identityProviderConfigName")
            .string(input.identity_provider_config_name.as_str());
    }
    {
        object.key("issuerUrl").string(input.issuer_url.as_str());
    }
    {
        object.key("clientId").string(input.client_id.as_str());
    }
    if let Some(var_1) = &input.username_claim {
        object.key("usernameClaim").string(var_1.as_str());
    }
    if let Some(var_2) = &input.username_prefix {
        object.key("usernamePrefix").string(var_2.as_str());
    }
    if let Some(var_3) = &input.groups_claim {
        object.key("groupsClaim").string(var_3.as_str());
    }
    if let Some(var_4) = &input.groups_prefix {
        object.key("groupsPrefix").string(var_4.as_str());
    }
    if let Some(var_5) = &input.required_claims {
        #[allow(unused_mut)]
        let mut object_6 = object.key("requiredClaims").start_object();
        for (key_7, value_8) in var_5 {
            {
                object_6.key(key_7.as_str()).string(value_8.as_str());
            }
        }
        object_6.finish();
    }
    Ok(())
}
