// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon Elastic Kubernetes Service
///
/// Client for invoking operations on Amazon Elastic Kubernetes Service. Each operation on Amazon Elastic Kubernetes Service is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_eks::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_eks::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_eks::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AssociateEncryptionConfig`](crate::client::fluent_builders::AssociateEncryptionConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::AssociateEncryptionConfig::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::AssociateEncryptionConfig::set_cluster_name): <p>The name of the cluster that you are associating with encryption configuration.</p>
    ///   - [`encryption_config(Vec<EncryptionConfig>)`](crate::client::fluent_builders::AssociateEncryptionConfig::encryption_config) / [`set_encryption_config(Option<Vec<EncryptionConfig>>)`](crate::client::fluent_builders::AssociateEncryptionConfig::set_encryption_config): <p>The configuration you are using for encryption.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::AssociateEncryptionConfig::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::AssociateEncryptionConfig::set_client_request_token): <p>The client request token you are using with the encryption configuration.</p>
    /// - On success, responds with [`AssociateEncryptionConfigOutput`](crate::output::AssociateEncryptionConfigOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::output::AssociateEncryptionConfigOutput::update): <p>An object representing an asynchronous update.</p>
    /// - On failure, responds with [`SdkError<AssociateEncryptionConfigError>`](crate::error::AssociateEncryptionConfigError)
    pub fn associate_encryption_config(
        &self,
    ) -> crate::client::fluent_builders::AssociateEncryptionConfig {
        crate::client::fluent_builders::AssociateEncryptionConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`AssociateIdentityProviderConfig`](crate::client::fluent_builders::AssociateIdentityProviderConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::AssociateIdentityProviderConfig::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::AssociateIdentityProviderConfig::set_cluster_name): <p>The name of the cluster to associate the configuration to.</p>
    ///   - [`oidc(OidcIdentityProviderConfigRequest)`](crate::client::fluent_builders::AssociateIdentityProviderConfig::oidc) / [`set_oidc(Option<OidcIdentityProviderConfigRequest>)`](crate::client::fluent_builders::AssociateIdentityProviderConfig::set_oidc): <p>An object representing an OpenID Connect (OIDC) identity provider configuration.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::AssociateIdentityProviderConfig::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::AssociateIdentityProviderConfig::set_tags): <p>The metadata to apply to the configuration to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::AssociateIdentityProviderConfig::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::AssociateIdentityProviderConfig::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    /// - On success, responds with [`AssociateIdentityProviderConfigOutput`](crate::output::AssociateIdentityProviderConfigOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::output::AssociateIdentityProviderConfigOutput::update): <p>An object representing an asynchronous update.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::AssociateIdentityProviderConfigOutput::tags): <p>The tags for the resource.</p>
    /// - On failure, responds with [`SdkError<AssociateIdentityProviderConfigError>`](crate::error::AssociateIdentityProviderConfigError)
    pub fn associate_identity_provider_config(
        &self,
    ) -> crate::client::fluent_builders::AssociateIdentityProviderConfig {
        crate::client::fluent_builders::AssociateIdentityProviderConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateAddon`](crate::client::fluent_builders::CreateAddon) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::CreateAddon::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::CreateAddon::set_cluster_name): <p>The name of the cluster to create the add-on for.</p>
    ///   - [`addon_name(impl Into<String>)`](crate::client::fluent_builders::CreateAddon::addon_name) / [`set_addon_name(Option<String>)`](crate::client::fluent_builders::CreateAddon::set_addon_name): <p>The name of the add-on. The name must match one of the names that <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a> returns.</p>
    ///   - [`addon_version(impl Into<String>)`](crate::client::fluent_builders::CreateAddon::addon_version) / [`set_addon_version(Option<String>)`](crate::client::fluent_builders::CreateAddon::set_addon_version): <p>The version of the add-on. The version must match one of the versions returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a>.</p>
    ///   - [`service_account_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateAddon::service_account_role_arn) / [`set_service_account_role_arn(Option<String>)`](crate::client::fluent_builders::CreateAddon::set_service_account_role_arn): <p>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</p> <note>   <p>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</p>  </note>
    ///   - [`resolve_conflicts(ResolveConflicts)`](crate::client::fluent_builders::CreateAddon::resolve_conflicts) / [`set_resolve_conflicts(Option<ResolveConflicts>)`](crate::client::fluent_builders::CreateAddon::set_resolve_conflicts): <p>How to resolve field value conflicts for an Amazon EKS add-on. Conflicts are handled based on the value you choose:</p>  <ul>   <li> <p> <b>None</b> – If the self-managed version of the add-on is installed on your cluster, Amazon EKS doesn't change the value. Creation of the add-on might fail.</p> </li>   <li> <p> <b>Overwrite</b> – If the self-managed version of the add-on is installed on your cluster and the Amazon EKS default value is different than the existing value, Amazon EKS changes the value to the Amazon EKS default value.</p> </li>   <li> <p> <b>Preserve</b> – Not supported. You can set this value when updating an add-on though. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html">UpdateAddon</a>.</p> </li>  </ul>  <p>If you don't currently have the self-managed version of the add-on installed on your cluster, the Amazon EKS add-on is installed. Amazon EKS sets all values to default values, regardless of the option that you specify.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::CreateAddon::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::CreateAddon::set_client_request_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateAddon::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateAddon::set_tags): <p>The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.</p>
    ///   - [`configuration_values(impl Into<String>)`](crate::client::fluent_builders::CreateAddon::configuration_values) / [`set_configuration_values(Option<String>)`](crate::client::fluent_builders::CreateAddon::set_configuration_values): <p>The set of configuration values for the add-on that's created. The values that you provide are validated against the schema in <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html"> <code>DescribeAddonConfiguration</code> </a>.</p>
    /// - On success, responds with [`CreateAddonOutput`](crate::output::CreateAddonOutput) with field(s):
    ///   - [`addon(Option<Addon>)`](crate::output::CreateAddonOutput::addon): <p>An Amazon EKS add-on. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.</p>
    /// - On failure, responds with [`SdkError<CreateAddonError>`](crate::error::CreateAddonError)
    pub fn create_addon(&self) -> crate::client::fluent_builders::CreateAddon {
        crate::client::fluent_builders::CreateAddon::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateCluster`](crate::client::fluent_builders::CreateCluster) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateCluster::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateCluster::set_name): <p>The unique name to give to your cluster.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::CreateCluster::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::CreateCluster::set_version): <p>The desired Kubernetes version for your cluster. If you don't specify a value here, the default version available in Amazon EKS is used.</p> <note>   <p>The default version might not be the latest version available.</p>  </note>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateCluster::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::CreateCluster::set_role_arn): <p>The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon EKS Service IAM Role</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p>
    ///   - [`resources_vpc_config(VpcConfigRequest)`](crate::client::fluent_builders::CreateCluster::resources_vpc_config) / [`set_resources_vpc_config(Option<VpcConfigRequest>)`](crate::client::fluent_builders::CreateCluster::set_resources_vpc_config): <p>The VPC configuration that's used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster VPC Considerations</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>. You must specify at least two subnets. You can specify up to five security groups. However, we recommend that you use a dedicated security group for your cluster control plane.</p>
    ///   - [`kubernetes_network_config(KubernetesNetworkConfigRequest)`](crate::client::fluent_builders::CreateCluster::kubernetes_network_config) / [`set_kubernetes_network_config(Option<KubernetesNetworkConfigRequest>)`](crate::client::fluent_builders::CreateCluster::set_kubernetes_network_config): <p>The Kubernetes network configuration for the cluster.</p>
    ///   - [`logging(Logging)`](crate::client::fluent_builders::CreateCluster::logging) / [`set_logging(Option<Logging>)`](crate::client::fluent_builders::CreateCluster::set_logging): <p>Enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon EKS Cluster control plane logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p> <note>   <p>CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch Pricing</a>.</p>  </note>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::CreateCluster::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::CreateCluster::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateCluster::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateCluster::set_tags): <p>The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.</p>
    ///   - [`encryption_config(Vec<EncryptionConfig>)`](crate::client::fluent_builders::CreateCluster::encryption_config) / [`set_encryption_config(Option<Vec<EncryptionConfig>>)`](crate::client::fluent_builders::CreateCluster::set_encryption_config): <p>The encryption configuration for the cluster.</p>
    ///   - [`outpost_config(OutpostConfigRequest)`](crate::client::fluent_builders::CreateCluster::outpost_config) / [`set_outpost_config(Option<OutpostConfigRequest>)`](crate::client::fluent_builders::CreateCluster::set_outpost_config): <p>An object representing the configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. Before creating a local cluster on an Outpost, review <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-overview.html">Local clusters for Amazon EKS on Amazon Web Services Outposts</a> in the <i>Amazon EKS User Guide</i>. This object isn't available for creating Amazon EKS clusters on the Amazon Web Services cloud.</p>
    /// - On success, responds with [`CreateClusterOutput`](crate::output::CreateClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::output::CreateClusterOutput::cluster): <p>The full description of your new cluster.</p>
    /// - On failure, responds with [`SdkError<CreateClusterError>`](crate::error::CreateClusterError)
    pub fn create_cluster(&self) -> crate::client::fluent_builders::CreateCluster {
        crate::client::fluent_builders::CreateCluster::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateFargateProfile`](crate::client::fluent_builders::CreateFargateProfile) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`fargate_profile_name(impl Into<String>)`](crate::client::fluent_builders::CreateFargateProfile::fargate_profile_name) / [`set_fargate_profile_name(Option<String>)`](crate::client::fluent_builders::CreateFargateProfile::set_fargate_profile_name): <p>The name of the Fargate profile.</p>
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::CreateFargateProfile::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::CreateFargateProfile::set_cluster_name): <p>The name of the Amazon EKS cluster to apply the Fargate profile to.</p>
    ///   - [`pod_execution_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateFargateProfile::pod_execution_role_arn) / [`set_pod_execution_role_arn(Option<String>)`](crate::client::fluent_builders::CreateFargateProfile::set_pod_execution_role_arn): <p>The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod Execution Role</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`subnets(Vec<String>)`](crate::client::fluent_builders::CreateFargateProfile::subnets) / [`set_subnets(Option<Vec<String>>)`](crate::client::fluent_builders::CreateFargateProfile::set_subnets): <p>The IDs of subnets to launch your pods into. At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.</p>
    ///   - [`selectors(Vec<FargateProfileSelector>)`](crate::client::fluent_builders::CreateFargateProfile::selectors) / [`set_selectors(Option<Vec<FargateProfileSelector>>)`](crate::client::fluent_builders::CreateFargateProfile::set_selectors): <p>The selectors to match for pods to use this Fargate profile. Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace. You may specify up to five selectors in a Fargate profile.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::CreateFargateProfile::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::CreateFargateProfile::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateFargateProfile::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateFargateProfile::set_tags): <p>The metadata to apply to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.</p>
    /// - On success, responds with [`CreateFargateProfileOutput`](crate::output::CreateFargateProfileOutput) with field(s):
    ///   - [`fargate_profile(Option<FargateProfile>)`](crate::output::CreateFargateProfileOutput::fargate_profile): <p>The full description of your new Fargate profile.</p>
    /// - On failure, responds with [`SdkError<CreateFargateProfileError>`](crate::error::CreateFargateProfileError)
    pub fn create_fargate_profile(&self) -> crate::client::fluent_builders::CreateFargateProfile {
        crate::client::fluent_builders::CreateFargateProfile::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateNodegroup`](crate::client::fluent_builders::CreateNodegroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::CreateNodegroup::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::CreateNodegroup::set_cluster_name): <p>The name of the cluster to create the node group in.</p>
    ///   - [`nodegroup_name(impl Into<String>)`](crate::client::fluent_builders::CreateNodegroup::nodegroup_name) / [`set_nodegroup_name(Option<String>)`](crate::client::fluent_builders::CreateNodegroup::set_nodegroup_name): <p>The unique name to give your node group.</p>
    ///   - [`scaling_config(NodegroupScalingConfig)`](crate::client::fluent_builders::CreateNodegroup::scaling_config) / [`set_scaling_config(Option<NodegroupScalingConfig>)`](crate::client::fluent_builders::CreateNodegroup::set_scaling_config): <p>The scaling configuration details for the Auto Scaling group that is created for your node group.</p>
    ///   - [`disk_size(i32)`](crate::client::fluent_builders::CreateNodegroup::disk_size) / [`set_disk_size(Option<i32>)`](crate::client::fluent_builders::CreateNodegroup::set_disk_size): <p>The root device disk size (in GiB) for your node group instances. The default disk size is 20 GiB for Linux and Bottlerocket. The default disk size is 50 GiB for Windows. If you specify <code>launchTemplate</code>, then don't specify <code>diskSize</code>, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`subnets(Vec<String>)`](crate::client::fluent_builders::CreateNodegroup::subnets) / [`set_subnets(Option<Vec<String>>)`](crate::client::fluent_builders::CreateNodegroup::set_subnets): <p>The subnets to use for the Auto Scaling group that is created for your node group. If you specify <code>launchTemplate</code>, then don't specify <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html"> <code>SubnetId</code> </a> in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`instance_types(Vec<String>)`](crate::client::fluent_builders::CreateNodegroup::instance_types) / [`set_instance_types(Option<Vec<String>>)`](crate::client::fluent_builders::CreateNodegroup::set_instance_types): <p>Specify the instance types for a node group. If you specify a GPU instance type, make sure to also specify an applicable GPU AMI type with the <code>amiType</code> parameter. If you specify <code>launchTemplate</code>, then you can specify zero or one instance type in your launch template <i>or</i> you can specify 0-20 instance types for <code>instanceTypes</code>. If however, you specify an instance type in your launch template <i>and</i> specify any <code>instanceTypes</code>, the node group deployment will fail. If you don't specify an instance type in a launch template or for <code>instanceTypes</code>, then <code>t3.medium</code> is used, by default. If you specify <code>Spot</code> for <code>capacityType</code>, then we recommend specifying multiple values for <code>instanceTypes</code>. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types">Managed node group capacity types</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`ami_type(AmiTypes)`](crate::client::fluent_builders::CreateNodegroup::ami_type) / [`set_ami_type(Option<AmiTypes>)`](crate::client::fluent_builders::CreateNodegroup::set_ami_type): <p>The AMI type for your node group. If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>amiType</code>, or the node group deployment will fail. If your launch template uses a Windows custom AMI, then add <code>eks:kube-proxy-windows</code> to your Windows nodes <code>rolearn</code> in the <code>aws-auth</code> <code>ConfigMap</code>. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`remote_access(RemoteAccessConfig)`](crate::client::fluent_builders::CreateNodegroup::remote_access) / [`set_remote_access(Option<RemoteAccessConfig>)`](crate::client::fluent_builders::CreateNodegroup::set_remote_access): <p>The remote access configuration to use with your node group. For Linux, the protocol is SSH. For Windows, the protocol is RDP. If you specify <code>launchTemplate</code>, then don't specify <code>remoteAccess</code>, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`node_role(impl Into<String>)`](crate::client::fluent_builders::CreateNodegroup::node_role) / [`set_node_role(Option<String>)`](crate::client::fluent_builders::CreateNodegroup::set_node_role): <p>The Amazon Resource Name (ARN) of the IAM role to associate with your node group. The Amazon EKS worker node <code>kubelet</code> daemon makes calls to Amazon Web Services APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch nodes and register them into a cluster, you must create an IAM role for those nodes to use when they are launched. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon EKS node IAM role</a> in the <i> <i>Amazon EKS User Guide</i> </i>. If you specify <code>launchTemplate</code>, then don't specify <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html"> <code>IamInstanceProfile</code> </a> in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`labels(HashMap<String, String>)`](crate::client::fluent_builders::CreateNodegroup::labels) / [`set_labels(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateNodegroup::set_labels): <p>The Kubernetes labels to be applied to the nodes in the node group when they are created.</p>
    ///   - [`taints(Vec<Taint>)`](crate::client::fluent_builders::CreateNodegroup::taints) / [`set_taints(Option<Vec<Taint>>)`](crate::client::fluent_builders::CreateNodegroup::set_taints): <p>The Kubernetes taints to be applied to the nodes in the node group. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html">Node taints on managed node groups</a>.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateNodegroup::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateNodegroup::set_tags): <p>The metadata to apply to the node group to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::CreateNodegroup::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::CreateNodegroup::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`launch_template(LaunchTemplateSpecification)`](crate::client::fluent_builders::CreateNodegroup::launch_template) / [`set_launch_template(Option<LaunchTemplateSpecification>)`](crate::client::fluent_builders::CreateNodegroup::set_launch_template): <p>An object representing a node group's launch template specification. If specified, then do not specify <code>instanceTypes</code>, <code>diskSize</code>, or <code>remoteAccess</code> and make sure that the launch template meets the requirements in <code>launchTemplateSpecification</code>.</p>
    ///   - [`update_config(NodegroupUpdateConfig)`](crate::client::fluent_builders::CreateNodegroup::update_config) / [`set_update_config(Option<NodegroupUpdateConfig>)`](crate::client::fluent_builders::CreateNodegroup::set_update_config): <p>The node group update configuration.</p>
    ///   - [`capacity_type(CapacityTypes)`](crate::client::fluent_builders::CreateNodegroup::capacity_type) / [`set_capacity_type(Option<CapacityTypes>)`](crate::client::fluent_builders::CreateNodegroup::set_capacity_type): <p>The capacity type for your node group.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::CreateNodegroup::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::CreateNodegroup::set_version): <p>The Kubernetes version to use for your managed nodes. By default, the Kubernetes version of the cluster is used, and this is the only accepted specified value. If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>version</code>, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`release_version(impl Into<String>)`](crate::client::fluent_builders::CreateNodegroup::release_version) / [`set_release_version(Option<String>)`](crate::client::fluent_builders::CreateNodegroup::set_release_version): <p>The AMI version of the Amazon EKS optimized AMI to use with your node group. By default, the latest available AMI version for the node group's current Kubernetes version is used. For information about Linux versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon EKS optimized Amazon Linux AMI versions</a> in the <i>Amazon EKS User Guide</i>. Amazon EKS managed node groups support the November 2022 and later releases of the Windows AMIs. For information about Windows versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-ami-versions-windows.html">Amazon EKS optimized Windows AMI versions</a> in the <i>Amazon EKS User Guide</i>.</p>  <p>If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>releaseVersion</code>, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    /// - On success, responds with [`CreateNodegroupOutput`](crate::output::CreateNodegroupOutput) with field(s):
    ///   - [`nodegroup(Option<Nodegroup>)`](crate::output::CreateNodegroupOutput::nodegroup): <p>The full description of your new node group.</p>
    /// - On failure, responds with [`SdkError<CreateNodegroupError>`](crate::error::CreateNodegroupError)
    pub fn create_nodegroup(&self) -> crate::client::fluent_builders::CreateNodegroup {
        crate::client::fluent_builders::CreateNodegroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteAddon`](crate::client::fluent_builders::DeleteAddon) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::DeleteAddon::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::DeleteAddon::set_cluster_name): <p>The name of the cluster to delete the add-on from.</p>
    ///   - [`addon_name(impl Into<String>)`](crate::client::fluent_builders::DeleteAddon::addon_name) / [`set_addon_name(Option<String>)`](crate::client::fluent_builders::DeleteAddon::set_addon_name): <p>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.</p>
    ///   - [`preserve(bool)`](crate::client::fluent_builders::DeleteAddon::preserve) / [`set_preserve(bool)`](crate::client::fluent_builders::DeleteAddon::set_preserve): <p>Specifying this option preserves the add-on software on your cluster but Amazon EKS stops managing any settings for the add-on. If an IAM account is associated with the add-on, it isn't removed.</p>
    /// - On success, responds with [`DeleteAddonOutput`](crate::output::DeleteAddonOutput) with field(s):
    ///   - [`addon(Option<Addon>)`](crate::output::DeleteAddonOutput::addon): <p>An Amazon EKS add-on. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.</p>
    /// - On failure, responds with [`SdkError<DeleteAddonError>`](crate::error::DeleteAddonError)
    pub fn delete_addon(&self) -> crate::client::fluent_builders::DeleteAddon {
        crate::client::fluent_builders::DeleteAddon::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteCluster`](crate::client::fluent_builders::DeleteCluster) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DeleteCluster::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DeleteCluster::set_name): <p>The name of the cluster to delete.</p>
    /// - On success, responds with [`DeleteClusterOutput`](crate::output::DeleteClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::output::DeleteClusterOutput::cluster): <p>The full description of the cluster to delete.</p>
    /// - On failure, responds with [`SdkError<DeleteClusterError>`](crate::error::DeleteClusterError)
    pub fn delete_cluster(&self) -> crate::client::fluent_builders::DeleteCluster {
        crate::client::fluent_builders::DeleteCluster::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteFargateProfile`](crate::client::fluent_builders::DeleteFargateProfile) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::DeleteFargateProfile::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::DeleteFargateProfile::set_cluster_name): <p>The name of the Amazon EKS cluster associated with the Fargate profile to delete.</p>
    ///   - [`fargate_profile_name(impl Into<String>)`](crate::client::fluent_builders::DeleteFargateProfile::fargate_profile_name) / [`set_fargate_profile_name(Option<String>)`](crate::client::fluent_builders::DeleteFargateProfile::set_fargate_profile_name): <p>The name of the Fargate profile to delete.</p>
    /// - On success, responds with [`DeleteFargateProfileOutput`](crate::output::DeleteFargateProfileOutput) with field(s):
    ///   - [`fargate_profile(Option<FargateProfile>)`](crate::output::DeleteFargateProfileOutput::fargate_profile): <p>The deleted Fargate profile.</p>
    /// - On failure, responds with [`SdkError<DeleteFargateProfileError>`](crate::error::DeleteFargateProfileError)
    pub fn delete_fargate_profile(&self) -> crate::client::fluent_builders::DeleteFargateProfile {
        crate::client::fluent_builders::DeleteFargateProfile::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteNodegroup`](crate::client::fluent_builders::DeleteNodegroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::DeleteNodegroup::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::DeleteNodegroup::set_cluster_name): <p>The name of the Amazon EKS cluster that is associated with your node group.</p>
    ///   - [`nodegroup_name(impl Into<String>)`](crate::client::fluent_builders::DeleteNodegroup::nodegroup_name) / [`set_nodegroup_name(Option<String>)`](crate::client::fluent_builders::DeleteNodegroup::set_nodegroup_name): <p>The name of the node group to delete.</p>
    /// - On success, responds with [`DeleteNodegroupOutput`](crate::output::DeleteNodegroupOutput) with field(s):
    ///   - [`nodegroup(Option<Nodegroup>)`](crate::output::DeleteNodegroupOutput::nodegroup): <p>The full description of your deleted node group.</p>
    /// - On failure, responds with [`SdkError<DeleteNodegroupError>`](crate::error::DeleteNodegroupError)
    pub fn delete_nodegroup(&self) -> crate::client::fluent_builders::DeleteNodegroup {
        crate::client::fluent_builders::DeleteNodegroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeregisterCluster`](crate::client::fluent_builders::DeregisterCluster) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DeregisterCluster::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DeregisterCluster::set_name): <p>The name of the connected cluster to deregister.</p>
    /// - On success, responds with [`DeregisterClusterOutput`](crate::output::DeregisterClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::output::DeregisterClusterOutput::cluster): <p>An object representing an Amazon EKS cluster.</p>
    /// - On failure, responds with [`SdkError<DeregisterClusterError>`](crate::error::DeregisterClusterError)
    pub fn deregister_cluster(&self) -> crate::client::fluent_builders::DeregisterCluster {
        crate::client::fluent_builders::DeregisterCluster::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAddon`](crate::client::fluent_builders::DescribeAddon) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::DescribeAddon::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::DescribeAddon::set_cluster_name): <p>The name of the cluster.</p>
    ///   - [`addon_name(impl Into<String>)`](crate::client::fluent_builders::DescribeAddon::addon_name) / [`set_addon_name(Option<String>)`](crate::client::fluent_builders::DescribeAddon::set_addon_name): <p>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.</p>
    /// - On success, responds with [`DescribeAddonOutput`](crate::output::DescribeAddonOutput) with field(s):
    ///   - [`addon(Option<Addon>)`](crate::output::DescribeAddonOutput::addon): <p>An Amazon EKS add-on. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.</p>
    /// - On failure, responds with [`SdkError<DescribeAddonError>`](crate::error::DescribeAddonError)
    pub fn describe_addon(&self) -> crate::client::fluent_builders::DescribeAddon {
        crate::client::fluent_builders::DescribeAddon::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAddonConfiguration`](crate::client::fluent_builders::DescribeAddonConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`addon_name(impl Into<String>)`](crate::client::fluent_builders::DescribeAddonConfiguration::addon_name) / [`set_addon_name(Option<String>)`](crate::client::fluent_builders::DescribeAddonConfiguration::set_addon_name): <p>The name of the add-on. The name must match one of the names that <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a> returns.</p>
    ///   - [`addon_version(impl Into<String>)`](crate::client::fluent_builders::DescribeAddonConfiguration::addon_version) / [`set_addon_version(Option<String>)`](crate::client::fluent_builders::DescribeAddonConfiguration::set_addon_version): <p>The version of the add-on. The version must match one of the versions returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a>.</p>
    /// - On success, responds with [`DescribeAddonConfigurationOutput`](crate::output::DescribeAddonConfigurationOutput) with field(s):
    ///   - [`addon_name(Option<String>)`](crate::output::DescribeAddonConfigurationOutput::addon_name): <p>The name of the add-on.</p>
    ///   - [`addon_version(Option<String>)`](crate::output::DescribeAddonConfigurationOutput::addon_version): <p>The version of the add-on. The version must match one of the versions returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a>.</p>
    ///   - [`configuration_schema(Option<String>)`](crate::output::DescribeAddonConfigurationOutput::configuration_schema): <p>A JSON schema that's used to validate the configuration values that you provide when an addon is created or updated.</p>
    /// - On failure, responds with [`SdkError<DescribeAddonConfigurationError>`](crate::error::DescribeAddonConfigurationError)
    pub fn describe_addon_configuration(
        &self,
    ) -> crate::client::fluent_builders::DescribeAddonConfiguration {
        crate::client::fluent_builders::DescribeAddonConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAddonVersions`](crate::client::fluent_builders::DescribeAddonVersions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeAddonVersions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`kubernetes_version(impl Into<String>)`](crate::client::fluent_builders::DescribeAddonVersions::kubernetes_version) / [`set_kubernetes_version(Option<String>)`](crate::client::fluent_builders::DescribeAddonVersions::set_kubernetes_version): <p>The Kubernetes versions that you can use the add-on with.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeAddonVersions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeAddonVersions::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeAddonVersions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeAddonVersions::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeAddonVersionsRequest</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note>   <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>  </note>
    ///   - [`addon_name(impl Into<String>)`](crate::client::fluent_builders::DescribeAddonVersions::addon_name) / [`set_addon_name(Option<String>)`](crate::client::fluent_builders::DescribeAddonVersions::set_addon_name): <p>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.</p>
    ///   - [`types(Vec<String>)`](crate::client::fluent_builders::DescribeAddonVersions::types) / [`set_types(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeAddonVersions::set_types): <p>The type of the add-on. For valid <code>types</code>, don't specify a value for this property.</p>
    ///   - [`publishers(Vec<String>)`](crate::client::fluent_builders::DescribeAddonVersions::publishers) / [`set_publishers(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeAddonVersions::set_publishers): <p>The publisher of the add-on. For valid <code>publishers</code>, don't specify a value for this property.</p>
    ///   - [`owners(Vec<String>)`](crate::client::fluent_builders::DescribeAddonVersions::owners) / [`set_owners(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeAddonVersions::set_owners): <p>The owner of the add-on. For valid <code>owners</code>, don't specify a value for this property.</p>
    /// - On success, responds with [`DescribeAddonVersionsOutput`](crate::output::DescribeAddonVersionsOutput) with field(s):
    ///   - [`addons(Option<Vec<AddonInfo>>)`](crate::output::DescribeAddonVersionsOutput::addons): <p>The list of available versions with Kubernetes version compatibility and other properties.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeAddonVersionsOutput::next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeAddonVersionsResponse</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note>   <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>  </note>
    /// - On failure, responds with [`SdkError<DescribeAddonVersionsError>`](crate::error::DescribeAddonVersionsError)
    pub fn describe_addon_versions(&self) -> crate::client::fluent_builders::DescribeAddonVersions {
        crate::client::fluent_builders::DescribeAddonVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeCluster`](crate::client::fluent_builders::DescribeCluster) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DescribeCluster::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DescribeCluster::set_name): <p>The name of the cluster to describe.</p>
    /// - On success, responds with [`DescribeClusterOutput`](crate::output::DescribeClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::output::DescribeClusterOutput::cluster): <p>The full description of your specified cluster.</p>
    /// - On failure, responds with [`SdkError<DescribeClusterError>`](crate::error::DescribeClusterError)
    pub fn describe_cluster(&self) -> crate::client::fluent_builders::DescribeCluster {
        crate::client::fluent_builders::DescribeCluster::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeFargateProfile`](crate::client::fluent_builders::DescribeFargateProfile) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::DescribeFargateProfile::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::DescribeFargateProfile::set_cluster_name): <p>The name of the Amazon EKS cluster associated with the Fargate profile.</p>
    ///   - [`fargate_profile_name(impl Into<String>)`](crate::client::fluent_builders::DescribeFargateProfile::fargate_profile_name) / [`set_fargate_profile_name(Option<String>)`](crate::client::fluent_builders::DescribeFargateProfile::set_fargate_profile_name): <p>The name of the Fargate profile to describe.</p>
    /// - On success, responds with [`DescribeFargateProfileOutput`](crate::output::DescribeFargateProfileOutput) with field(s):
    ///   - [`fargate_profile(Option<FargateProfile>)`](crate::output::DescribeFargateProfileOutput::fargate_profile): <p>The full description of your Fargate profile.</p>
    /// - On failure, responds with [`SdkError<DescribeFargateProfileError>`](crate::error::DescribeFargateProfileError)
    pub fn describe_fargate_profile(
        &self,
    ) -> crate::client::fluent_builders::DescribeFargateProfile {
        crate::client::fluent_builders::DescribeFargateProfile::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeIdentityProviderConfig`](crate::client::fluent_builders::DescribeIdentityProviderConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::DescribeIdentityProviderConfig::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::DescribeIdentityProviderConfig::set_cluster_name): <p>The cluster name that the identity provider configuration is associated to.</p>
    ///   - [`identity_provider_config(IdentityProviderConfig)`](crate::client::fluent_builders::DescribeIdentityProviderConfig::identity_provider_config) / [`set_identity_provider_config(Option<IdentityProviderConfig>)`](crate::client::fluent_builders::DescribeIdentityProviderConfig::set_identity_provider_config): <p>An object representing an identity provider configuration.</p>
    /// - On success, responds with [`DescribeIdentityProviderConfigOutput`](crate::output::DescribeIdentityProviderConfigOutput) with field(s):
    ///   - [`identity_provider_config(Option<IdentityProviderConfigResponse>)`](crate::output::DescribeIdentityProviderConfigOutput::identity_provider_config): <p>The object that represents an OpenID Connect (OIDC) identity provider configuration.</p>
    /// - On failure, responds with [`SdkError<DescribeIdentityProviderConfigError>`](crate::error::DescribeIdentityProviderConfigError)
    pub fn describe_identity_provider_config(
        &self,
    ) -> crate::client::fluent_builders::DescribeIdentityProviderConfig {
        crate::client::fluent_builders::DescribeIdentityProviderConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeNodegroup`](crate::client::fluent_builders::DescribeNodegroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::DescribeNodegroup::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::DescribeNodegroup::set_cluster_name): <p>The name of the Amazon EKS cluster associated with the node group.</p>
    ///   - [`nodegroup_name(impl Into<String>)`](crate::client::fluent_builders::DescribeNodegroup::nodegroup_name) / [`set_nodegroup_name(Option<String>)`](crate::client::fluent_builders::DescribeNodegroup::set_nodegroup_name): <p>The name of the node group to describe.</p>
    /// - On success, responds with [`DescribeNodegroupOutput`](crate::output::DescribeNodegroupOutput) with field(s):
    ///   - [`nodegroup(Option<Nodegroup>)`](crate::output::DescribeNodegroupOutput::nodegroup): <p>The full description of your node group.</p>
    /// - On failure, responds with [`SdkError<DescribeNodegroupError>`](crate::error::DescribeNodegroupError)
    pub fn describe_nodegroup(&self) -> crate::client::fluent_builders::DescribeNodegroup {
        crate::client::fluent_builders::DescribeNodegroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeUpdate`](crate::client::fluent_builders::DescribeUpdate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DescribeUpdate::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DescribeUpdate::set_name): <p>The name of the Amazon EKS cluster associated with the update.</p>
    ///   - [`update_id(impl Into<String>)`](crate::client::fluent_builders::DescribeUpdate::update_id) / [`set_update_id(Option<String>)`](crate::client::fluent_builders::DescribeUpdate::set_update_id): <p>The ID of the update to describe.</p>
    ///   - [`nodegroup_name(impl Into<String>)`](crate::client::fluent_builders::DescribeUpdate::nodegroup_name) / [`set_nodegroup_name(Option<String>)`](crate::client::fluent_builders::DescribeUpdate::set_nodegroup_name): <p>The name of the Amazon EKS node group associated with the update. This parameter is required if the update is a node group update.</p>
    ///   - [`addon_name(impl Into<String>)`](crate::client::fluent_builders::DescribeUpdate::addon_name) / [`set_addon_name(Option<String>)`](crate::client::fluent_builders::DescribeUpdate::set_addon_name): <p>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>. This parameter is required if the update is an add-on update.</p>
    /// - On success, responds with [`DescribeUpdateOutput`](crate::output::DescribeUpdateOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::output::DescribeUpdateOutput::update): <p>The full description of the specified update.</p>
    /// - On failure, responds with [`SdkError<DescribeUpdateError>`](crate::error::DescribeUpdateError)
    pub fn describe_update(&self) -> crate::client::fluent_builders::DescribeUpdate {
        crate::client::fluent_builders::DescribeUpdate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DisassociateIdentityProviderConfig`](crate::client::fluent_builders::DisassociateIdentityProviderConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::DisassociateIdentityProviderConfig::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::DisassociateIdentityProviderConfig::set_cluster_name): <p>The name of the cluster to disassociate an identity provider from.</p>
    ///   - [`identity_provider_config(IdentityProviderConfig)`](crate::client::fluent_builders::DisassociateIdentityProviderConfig::identity_provider_config) / [`set_identity_provider_config(Option<IdentityProviderConfig>)`](crate::client::fluent_builders::DisassociateIdentityProviderConfig::set_identity_provider_config): <p>An object representing an identity provider configuration.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::DisassociateIdentityProviderConfig::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::DisassociateIdentityProviderConfig::set_client_request_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    /// - On success, responds with [`DisassociateIdentityProviderConfigOutput`](crate::output::DisassociateIdentityProviderConfigOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::output::DisassociateIdentityProviderConfigOutput::update): <p>An object representing an asynchronous update.</p>
    /// - On failure, responds with [`SdkError<DisassociateIdentityProviderConfigError>`](crate::error::DisassociateIdentityProviderConfigError)
    pub fn disassociate_identity_provider_config(
        &self,
    ) -> crate::client::fluent_builders::DisassociateIdentityProviderConfig {
        crate::client::fluent_builders::DisassociateIdentityProviderConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAddons`](crate::client::fluent_builders::ListAddons) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAddons::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::ListAddons::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::ListAddons::set_cluster_name): <p>The name of the cluster.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAddons::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAddons::set_max_results): <p>The maximum number of add-on results returned by <code>ListAddonsRequest</code> in paginated output. When you use this parameter, <code>ListAddonsRequest</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListAddonsRequest</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListAddonsRequest</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAddons::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAddons::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>ListAddonsRequest</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note>   <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>  </note>
    /// - On success, responds with [`ListAddonsOutput`](crate::output::ListAddonsOutput) with field(s):
    ///   - [`addons(Option<Vec<String>>)`](crate::output::ListAddonsOutput::addons): <p>A list of available add-ons.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAddonsOutput::next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>ListAddonsResponse</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note>   <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>  </note>
    /// - On failure, responds with [`SdkError<ListAddonsError>`](crate::error::ListAddonsError)
    pub fn list_addons(&self) -> crate::client::fluent_builders::ListAddons {
        crate::client::fluent_builders::ListAddons::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListClusters`](crate::client::fluent_builders::ListClusters) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListClusters::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListClusters::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListClusters::set_max_results): <p>The maximum number of cluster results returned by <code>ListClusters</code> in paginated output. When you use this parameter, <code>ListClusters</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListClusters</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListClusters</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListClusters::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListClusters::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p> <note>   <p>This token should be treated as an opaque identifier that is used only to retrieve the next items in a list and not for other programmatic purposes.</p>  </note>
    ///   - [`include(Vec<String>)`](crate::client::fluent_builders::ListClusters::include) / [`set_include(Option<Vec<String>>)`](crate::client::fluent_builders::ListClusters::set_include): <p>Indicates whether external clusters are included in the returned list. Use '<code>all</code>' to return connected clusters, or blank to return only Amazon EKS clusters. '<code>all</code>' must be in lowercase otherwise an error occurs.</p>
    /// - On success, responds with [`ListClustersOutput`](crate::output::ListClustersOutput) with field(s):
    ///   - [`clusters(Option<Vec<String>>)`](crate::output::ListClustersOutput::clusters): <p>A list of all of the clusters for your account in the specified Region.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListClustersOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>ListClusters</code> request. When the results of a <code>ListClusters</code> request exceed <code>maxResults</code>, you can use this value to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListClustersError>`](crate::error::ListClustersError)
    pub fn list_clusters(&self) -> crate::client::fluent_builders::ListClusters {
        crate::client::fluent_builders::ListClusters::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListFargateProfiles`](crate::client::fluent_builders::ListFargateProfiles) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListFargateProfiles::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::ListFargateProfiles::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::ListFargateProfiles::set_cluster_name): <p>The name of the Amazon EKS cluster that you would like to list Fargate profiles in.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListFargateProfiles::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListFargateProfiles::set_max_results): <p>The maximum number of Fargate profile results returned by <code>ListFargateProfiles</code> in paginated output. When you use this parameter, <code>ListFargateProfiles</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListFargateProfiles</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListFargateProfiles</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListFargateProfiles::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListFargateProfiles::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>ListFargateProfiles</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p>
    /// - On success, responds with [`ListFargateProfilesOutput`](crate::output::ListFargateProfilesOutput) with field(s):
    ///   - [`fargate_profile_names(Option<Vec<String>>)`](crate::output::ListFargateProfilesOutput::fargate_profile_names): <p>A list of all of the Fargate profiles associated with the specified cluster.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListFargateProfilesOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>ListFargateProfiles</code> request. When the results of a <code>ListFargateProfiles</code> request exceed <code>maxResults</code>, you can use this value to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListFargateProfilesError>`](crate::error::ListFargateProfilesError)
    pub fn list_fargate_profiles(&self) -> crate::client::fluent_builders::ListFargateProfiles {
        crate::client::fluent_builders::ListFargateProfiles::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListIdentityProviderConfigs`](crate::client::fluent_builders::ListIdentityProviderConfigs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListIdentityProviderConfigs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::ListIdentityProviderConfigs::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::ListIdentityProviderConfigs::set_cluster_name): <p>The cluster name that you want to list identity provider configurations for.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListIdentityProviderConfigs::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListIdentityProviderConfigs::set_max_results): <p>The maximum number of identity provider configurations returned by <code>ListIdentityProviderConfigs</code> in paginated output. When you use this parameter, <code>ListIdentityProviderConfigs</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListIdentityProviderConfigs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListIdentityProviderConfigs</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListIdentityProviderConfigs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListIdentityProviderConfigs::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>IdentityProviderConfigsRequest</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p>
    /// - On success, responds with [`ListIdentityProviderConfigsOutput`](crate::output::ListIdentityProviderConfigsOutput) with field(s):
    ///   - [`identity_provider_configs(Option<Vec<IdentityProviderConfig>>)`](crate::output::ListIdentityProviderConfigsOutput::identity_provider_configs): <p>The identity provider configurations for the cluster.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListIdentityProviderConfigsOutput::next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>ListIdentityProviderConfigsResponse</code> where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p>
    /// - On failure, responds with [`SdkError<ListIdentityProviderConfigsError>`](crate::error::ListIdentityProviderConfigsError)
    pub fn list_identity_provider_configs(
        &self,
    ) -> crate::client::fluent_builders::ListIdentityProviderConfigs {
        crate::client::fluent_builders::ListIdentityProviderConfigs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListNodegroups`](crate::client::fluent_builders::ListNodegroups) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListNodegroups::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::ListNodegroups::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::ListNodegroups::set_cluster_name): <p>The name of the Amazon EKS cluster that you would like to list node groups in.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListNodegroups::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListNodegroups::set_max_results): <p>The maximum number of node group results returned by <code>ListNodegroups</code> in paginated output. When you use this parameter, <code>ListNodegroups</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListNodegroups</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListNodegroups</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListNodegroups::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListNodegroups::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>ListNodegroups</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p>
    /// - On success, responds with [`ListNodegroupsOutput`](crate::output::ListNodegroupsOutput) with field(s):
    ///   - [`nodegroups(Option<Vec<String>>)`](crate::output::ListNodegroupsOutput::nodegroups): <p>A list of all of the node groups associated with the specified cluster.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListNodegroupsOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>ListNodegroups</code> request. When the results of a <code>ListNodegroups</code> request exceed <code>maxResults</code>, you can use this value to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListNodegroupsError>`](crate::error::ListNodegroupsError)
    pub fn list_nodegroups(&self) -> crate::client::fluent_builders::ListNodegroups {
        crate::client::fluent_builders::ListNodegroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the supported resources are Amazon EKS clusters and managed node groups.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::ListTagsForResourceOutput::tags): <p>The tags for the resource.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListUpdates`](crate::client::fluent_builders::ListUpdates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListUpdates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::ListUpdates::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::ListUpdates::set_name): <p>The name of the Amazon EKS cluster to list updates for.</p>
    ///   - [`nodegroup_name(impl Into<String>)`](crate::client::fluent_builders::ListUpdates::nodegroup_name) / [`set_nodegroup_name(Option<String>)`](crate::client::fluent_builders::ListUpdates::set_nodegroup_name): <p>The name of the Amazon EKS managed node group to list updates for.</p>
    ///   - [`addon_name(impl Into<String>)`](crate::client::fluent_builders::ListUpdates::addon_name) / [`set_addon_name(Option<String>)`](crate::client::fluent_builders::ListUpdates::set_addon_name): <p>The names of the installed add-ons that have available updates.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListUpdates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListUpdates::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>ListUpdates</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListUpdates::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListUpdates::set_max_results): <p>The maximum number of update results returned by <code>ListUpdates</code> in paginated output. When you use this parameter, <code>ListUpdates</code> returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. You can see the remaining results of the initial request by sending another <code>ListUpdates</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If you don't use this parameter, <code>ListUpdates</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>
    /// - On success, responds with [`ListUpdatesOutput`](crate::output::ListUpdatesOutput) with field(s):
    ///   - [`update_ids(Option<Vec<String>>)`](crate::output::ListUpdatesOutput::update_ids): <p>A list of all the updates for the specified cluster and Region.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListUpdatesOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>ListUpdates</code> request. When the results of a <code>ListUpdates</code> request exceed <code>maxResults</code>, you can use this value to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListUpdatesError>`](crate::error::ListUpdatesError)
    pub fn list_updates(&self) -> crate::client::fluent_builders::ListUpdates {
        crate::client::fluent_builders::ListUpdates::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RegisterCluster`](crate::client::fluent_builders::RegisterCluster) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::RegisterCluster::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::RegisterCluster::set_name): <p>Define a unique name for this cluster for your Region.</p>
    ///   - [`connector_config(ConnectorConfigRequest)`](crate::client::fluent_builders::RegisterCluster::connector_config) / [`set_connector_config(Option<ConnectorConfigRequest>)`](crate::client::fluent_builders::RegisterCluster::set_connector_config): <p>The configuration settings required to connect the Kubernetes cluster to the Amazon EKS control plane.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::RegisterCluster::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::RegisterCluster::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::RegisterCluster::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::RegisterCluster::set_tags): <p>The metadata that you apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Cluster tags do not propagate to any other resources associated with the cluster.</p>
    /// - On success, responds with [`RegisterClusterOutput`](crate::output::RegisterClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::output::RegisterClusterOutput::cluster): <p>An object representing an Amazon EKS cluster.</p>
    /// - On failure, responds with [`SdkError<RegisterClusterError>`](crate::error::RegisterClusterError)
    pub fn register_cluster(&self) -> crate::client::fluent_builders::RegisterCluster {
        crate::client::fluent_builders::RegisterCluster::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the supported resources are Amazon EKS clusters and managed node groups.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>The tags to add to the resource. A tag is an array of key-value pairs.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently, the supported resources are Amazon EKS clusters and managed node groups.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>The keys of the tags to be removed.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAddon`](crate::client::fluent_builders::UpdateAddon) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::UpdateAddon::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::UpdateAddon::set_cluster_name): <p>The name of the cluster.</p>
    ///   - [`addon_name(impl Into<String>)`](crate::client::fluent_builders::UpdateAddon::addon_name) / [`set_addon_name(Option<String>)`](crate::client::fluent_builders::UpdateAddon::set_addon_name): <p>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.</p>
    ///   - [`addon_version(impl Into<String>)`](crate::client::fluent_builders::UpdateAddon::addon_version) / [`set_addon_version(Option<String>)`](crate::client::fluent_builders::UpdateAddon::set_addon_version): <p>The version of the add-on. The version must match one of the versions returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a>.</p>
    ///   - [`service_account_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateAddon::service_account_role_arn) / [`set_service_account_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateAddon::set_service_account_role_arn): <p>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</p> <note>   <p>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</p>  </note>
    ///   - [`resolve_conflicts(ResolveConflicts)`](crate::client::fluent_builders::UpdateAddon::resolve_conflicts) / [`set_resolve_conflicts(Option<ResolveConflicts>)`](crate::client::fluent_builders::UpdateAddon::set_resolve_conflicts): <p>How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Conflicts are handled based on the option you choose:</p>  <ul>   <li> <p> <b>None</b> – Amazon EKS doesn't change the value. The update might fail.</p> </li>   <li> <p> <b>Overwrite</b> – Amazon EKS overwrites the changed value back to the Amazon EKS default value.</p> </li>   <li> <p> <b>Preserve</b> – Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.</p> </li>  </ul>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::UpdateAddon::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::UpdateAddon::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`configuration_values(impl Into<String>)`](crate::client::fluent_builders::UpdateAddon::configuration_values) / [`set_configuration_values(Option<String>)`](crate::client::fluent_builders::UpdateAddon::set_configuration_values): <p>The set of configuration values for the add-on that's created. The values that you provide are validated against the schema in <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html">DescribeAddonConfiguration</a>.</p>
    /// - On success, responds with [`UpdateAddonOutput`](crate::output::UpdateAddonOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::output::UpdateAddonOutput::update): <p>An object representing an asynchronous update.</p>
    /// - On failure, responds with [`SdkError<UpdateAddonError>`](crate::error::UpdateAddonError)
    pub fn update_addon(&self) -> crate::client::fluent_builders::UpdateAddon {
        crate::client::fluent_builders::UpdateAddon::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateClusterConfig`](crate::client::fluent_builders::UpdateClusterConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateClusterConfig::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateClusterConfig::set_name): <p>The name of the Amazon EKS cluster to update.</p>
    ///   - [`resources_vpc_config(VpcConfigRequest)`](crate::client::fluent_builders::UpdateClusterConfig::resources_vpc_config) / [`set_resources_vpc_config(Option<VpcConfigRequest>)`](crate::client::fluent_builders::UpdateClusterConfig::set_resources_vpc_config): <p>An object representing the VPC configuration to use for an Amazon EKS cluster.</p>
    ///   - [`logging(Logging)`](crate::client::fluent_builders::UpdateClusterConfig::logging) / [`set_logging(Option<Logging>)`](crate::client::fluent_builders::UpdateClusterConfig::set_logging): <p>Enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon EKS cluster control plane logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p> <note>   <p>CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch Pricing</a>.</p>  </note>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::UpdateClusterConfig::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::UpdateClusterConfig::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    /// - On success, responds with [`UpdateClusterConfigOutput`](crate::output::UpdateClusterConfigOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::output::UpdateClusterConfigOutput::update): <p>An object representing an asynchronous update.</p>
    /// - On failure, responds with [`SdkError<UpdateClusterConfigError>`](crate::error::UpdateClusterConfigError)
    pub fn update_cluster_config(&self) -> crate::client::fluent_builders::UpdateClusterConfig {
        crate::client::fluent_builders::UpdateClusterConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateClusterVersion`](crate::client::fluent_builders::UpdateClusterVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateClusterVersion::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateClusterVersion::set_name): <p>The name of the Amazon EKS cluster to update.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::UpdateClusterVersion::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::UpdateClusterVersion::set_version): <p>The desired Kubernetes version following a successful update.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::UpdateClusterVersion::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::UpdateClusterVersion::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    /// - On success, responds with [`UpdateClusterVersionOutput`](crate::output::UpdateClusterVersionOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::output::UpdateClusterVersionOutput::update): <p>The full description of the specified update</p>
    /// - On failure, responds with [`SdkError<UpdateClusterVersionError>`](crate::error::UpdateClusterVersionError)
    pub fn update_cluster_version(&self) -> crate::client::fluent_builders::UpdateClusterVersion {
        crate::client::fluent_builders::UpdateClusterVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateNodegroupConfig`](crate::client::fluent_builders::UpdateNodegroupConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::UpdateNodegroupConfig::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::UpdateNodegroupConfig::set_cluster_name): <p>The name of the Amazon EKS cluster that the managed node group resides in.</p>
    ///   - [`nodegroup_name(impl Into<String>)`](crate::client::fluent_builders::UpdateNodegroupConfig::nodegroup_name) / [`set_nodegroup_name(Option<String>)`](crate::client::fluent_builders::UpdateNodegroupConfig::set_nodegroup_name): <p>The name of the managed node group to update.</p>
    ///   - [`labels(UpdateLabelsPayload)`](crate::client::fluent_builders::UpdateNodegroupConfig::labels) / [`set_labels(Option<UpdateLabelsPayload>)`](crate::client::fluent_builders::UpdateNodegroupConfig::set_labels): <p>The Kubernetes labels to be applied to the nodes in the node group after the update.</p>
    ///   - [`taints(UpdateTaintsPayload)`](crate::client::fluent_builders::UpdateNodegroupConfig::taints) / [`set_taints(Option<UpdateTaintsPayload>)`](crate::client::fluent_builders::UpdateNodegroupConfig::set_taints): <p>The Kubernetes taints to be applied to the nodes in the node group after the update. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html">Node taints on managed node groups</a>.</p>
    ///   - [`scaling_config(NodegroupScalingConfig)`](crate::client::fluent_builders::UpdateNodegroupConfig::scaling_config) / [`set_scaling_config(Option<NodegroupScalingConfig>)`](crate::client::fluent_builders::UpdateNodegroupConfig::set_scaling_config): <p>The scaling configuration details for the Auto Scaling group after the update.</p>
    ///   - [`update_config(NodegroupUpdateConfig)`](crate::client::fluent_builders::UpdateNodegroupConfig::update_config) / [`set_update_config(Option<NodegroupUpdateConfig>)`](crate::client::fluent_builders::UpdateNodegroupConfig::set_update_config): <p>The node group update configuration.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::UpdateNodegroupConfig::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::UpdateNodegroupConfig::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    /// - On success, responds with [`UpdateNodegroupConfigOutput`](crate::output::UpdateNodegroupConfigOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::output::UpdateNodegroupConfigOutput::update): <p>An object representing an asynchronous update.</p>
    /// - On failure, responds with [`SdkError<UpdateNodegroupConfigError>`](crate::error::UpdateNodegroupConfigError)
    pub fn update_nodegroup_config(&self) -> crate::client::fluent_builders::UpdateNodegroupConfig {
        crate::client::fluent_builders::UpdateNodegroupConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateNodegroupVersion`](crate::client::fluent_builders::UpdateNodegroupVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::cluster_name) / [`set_cluster_name(Option<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::set_cluster_name): <p>The name of the Amazon EKS cluster that is associated with the managed node group to update.</p>
    ///   - [`nodegroup_name(impl Into<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::nodegroup_name) / [`set_nodegroup_name(Option<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::set_nodegroup_name): <p>The name of the managed node group to update.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::set_version): <p>The Kubernetes version to update to. If no version is specified, then the Kubernetes version of the node group does not change. You can specify the Kubernetes version of the cluster to update the node group to the latest AMI version of the cluster's Kubernetes version. If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>version</code>, or the node group update will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`release_version(impl Into<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::release_version) / [`set_release_version(Option<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::set_release_version): <p>The AMI version of the Amazon EKS optimized AMI to use for the update. By default, the latest available AMI version for the node group's Kubernetes version is used. For information about Linux versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon EKS optimized Amazon Linux AMI versions</a> in the <i>Amazon EKS User Guide</i>. Amazon EKS managed node groups support the November 2022 and later releases of the Windows AMIs. For information about Windows versions, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-ami-versions-windows.html">Amazon EKS optimized Windows AMI versions</a> in the <i>Amazon EKS User Guide</i>.</p>  <p>If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>releaseVersion</code>, or the node group update will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the <i>Amazon EKS User Guide</i>.</p>
    ///   - [`launch_template(LaunchTemplateSpecification)`](crate::client::fluent_builders::UpdateNodegroupVersion::launch_template) / [`set_launch_template(Option<LaunchTemplateSpecification>)`](crate::client::fluent_builders::UpdateNodegroupVersion::set_launch_template): <p>An object representing a node group's launch template specification. You can only update a node group using a launch template if the node group was originally deployed with a launch template.</p>
    ///   - [`force(bool)`](crate::client::fluent_builders::UpdateNodegroupVersion::force) / [`set_force(bool)`](crate::client::fluent_builders::UpdateNodegroupVersion::set_force): <p>Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::UpdateNodegroupVersion::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    /// - On success, responds with [`UpdateNodegroupVersionOutput`](crate::output::UpdateNodegroupVersionOutput) with field(s):
    ///   - [`update(Option<Update>)`](crate::output::UpdateNodegroupVersionOutput::update): <p>An object representing an asynchronous update.</p>
    /// - On failure, responds with [`SdkError<UpdateNodegroupVersionError>`](crate::error::UpdateNodegroupVersionError)
    pub fn update_nodegroup_version(
        &self,
    ) -> crate::client::fluent_builders::UpdateNodegroupVersion {
        crate::client::fluent_builders::UpdateNodegroupVersion::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
