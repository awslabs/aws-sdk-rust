// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeNodegroupInput {
    /// <p>The name of the Amazon EKS cluster associated with the node group.</p>
    pub cluster_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the node group to describe.</p>
    pub nodegroup_name: ::std::option::Option<::std::string::String>,
}
impl DescribeNodegroupInput {
    /// <p>The name of the Amazon EKS cluster associated with the node group.</p>
    pub fn cluster_name(&self) -> ::std::option::Option<&str> {
        self.cluster_name.as_deref()
    }
    /// <p>The name of the node group to describe.</p>
    pub fn nodegroup_name(&self) -> ::std::option::Option<&str> {
        self.nodegroup_name.as_deref()
    }
}
impl DescribeNodegroupInput {
    /// Creates a new builder-style object to manufacture [`DescribeNodegroupInput`](crate::operation::describe_nodegroup::DescribeNodegroupInput).
    pub fn builder() -> crate::operation::describe_nodegroup::builders::DescribeNodegroupInputBuilder {
        crate::operation::describe_nodegroup::builders::DescribeNodegroupInputBuilder::default()
    }
}

/// A builder for [`DescribeNodegroupInput`](crate::operation::describe_nodegroup::DescribeNodegroupInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeNodegroupInputBuilder {
    pub(crate) cluster_name: ::std::option::Option<::std::string::String>,
    pub(crate) nodegroup_name: ::std::option::Option<::std::string::String>,
}
impl DescribeNodegroupInputBuilder {
    /// <p>The name of the Amazon EKS cluster associated with the node group.</p>
    /// This field is required.
    pub fn cluster_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Amazon EKS cluster associated with the node group.</p>
    pub fn set_cluster_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_name = input;
        self
    }
    /// <p>The name of the Amazon EKS cluster associated with the node group.</p>
    pub fn get_cluster_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_name
    }
    /// <p>The name of the node group to describe.</p>
    /// This field is required.
    pub fn nodegroup_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.nodegroup_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the node group to describe.</p>
    pub fn set_nodegroup_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.nodegroup_name = input;
        self
    }
    /// <p>The name of the node group to describe.</p>
    pub fn get_nodegroup_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.nodegroup_name
    }
    /// Consumes the builder and constructs a [`DescribeNodegroupInput`](crate::operation::describe_nodegroup::DescribeNodegroupInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_nodegroup::DescribeNodegroupInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::describe_nodegroup::DescribeNodegroupInput {
            cluster_name: self.cluster_name,
            nodegroup_name: self.nodegroup_name,
        })
    }
}
