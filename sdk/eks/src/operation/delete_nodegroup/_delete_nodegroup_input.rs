// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteNodegroupInput {
    /// <p>The name of the Amazon EKS cluster that is associated with your node group.</p>
    #[doc(hidden)]
    pub cluster_name: std::option::Option<std::string::String>,
    /// <p>The name of the node group to delete.</p>
    #[doc(hidden)]
    pub nodegroup_name: std::option::Option<std::string::String>,
}
impl DeleteNodegroupInput {
    /// <p>The name of the Amazon EKS cluster that is associated with your node group.</p>
    pub fn cluster_name(&self) -> std::option::Option<&str> {
        self.cluster_name.as_deref()
    }
    /// <p>The name of the node group to delete.</p>
    pub fn nodegroup_name(&self) -> std::option::Option<&str> {
        self.nodegroup_name.as_deref()
    }
}
impl DeleteNodegroupInput {
    /// Creates a new builder-style object to manufacture [`DeleteNodegroupInput`](crate::operation::delete_nodegroup::DeleteNodegroupInput).
    pub fn builder() -> crate::operation::delete_nodegroup::builders::DeleteNodegroupInputBuilder {
        crate::operation::delete_nodegroup::builders::DeleteNodegroupInputBuilder::default()
    }
}

/// A builder for [`DeleteNodegroupInput`](crate::operation::delete_nodegroup::DeleteNodegroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteNodegroupInputBuilder {
    pub(crate) cluster_name: std::option::Option<std::string::String>,
    pub(crate) nodegroup_name: std::option::Option<std::string::String>,
}
impl DeleteNodegroupInputBuilder {
    /// <p>The name of the Amazon EKS cluster that is associated with your node group.</p>
    pub fn cluster_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster_name = Some(input.into());
        self
    }
    /// <p>The name of the Amazon EKS cluster that is associated with your node group.</p>
    pub fn set_cluster_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster_name = input;
        self
    }
    /// <p>The name of the node group to delete.</p>
    pub fn nodegroup_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.nodegroup_name = Some(input.into());
        self
    }
    /// <p>The name of the node group to delete.</p>
    pub fn set_nodegroup_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.nodegroup_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteNodegroupInput`](crate::operation::delete_nodegroup::DeleteNodegroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_nodegroup::DeleteNodegroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_nodegroup::DeleteNodegroupInput {
            cluster_name: self.cluster_name,
            nodegroup_name: self.nodegroup_name,
        })
    }
}
