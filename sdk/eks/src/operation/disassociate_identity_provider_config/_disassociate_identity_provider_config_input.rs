// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateIdentityProviderConfigInput {
    /// <p>The name of the cluster to disassociate an identity provider from.</p>
    #[doc(hidden)]
    pub cluster_name: std::option::Option<std::string::String>,
    /// <p>An object representing an identity provider configuration.</p>
    #[doc(hidden)]
    pub identity_provider_config: std::option::Option<crate::types::IdentityProviderConfig>,
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    #[doc(hidden)]
    pub client_request_token: std::option::Option<std::string::String>,
}
impl DisassociateIdentityProviderConfigInput {
    /// <p>The name of the cluster to disassociate an identity provider from.</p>
    pub fn cluster_name(&self) -> std::option::Option<&str> {
        self.cluster_name.as_deref()
    }
    /// <p>An object representing an identity provider configuration.</p>
    pub fn identity_provider_config(
        &self,
    ) -> std::option::Option<&crate::types::IdentityProviderConfig> {
        self.identity_provider_config.as_ref()
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    pub fn client_request_token(&self) -> std::option::Option<&str> {
        self.client_request_token.as_deref()
    }
}
impl DisassociateIdentityProviderConfigInput {
    /// Creates a new builder-style object to manufacture [`DisassociateIdentityProviderConfigInput`](crate::operation::disassociate_identity_provider_config::DisassociateIdentityProviderConfigInput).
    pub fn builder() -> crate::operation::disassociate_identity_provider_config::builders::DisassociateIdentityProviderConfigInputBuilder{
        crate::operation::disassociate_identity_provider_config::builders::DisassociateIdentityProviderConfigInputBuilder::default()
    }
}

/// A builder for [`DisassociateIdentityProviderConfigInput`](crate::operation::disassociate_identity_provider_config::DisassociateIdentityProviderConfigInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisassociateIdentityProviderConfigInputBuilder {
    pub(crate) cluster_name: std::option::Option<std::string::String>,
    pub(crate) identity_provider_config: std::option::Option<crate::types::IdentityProviderConfig>,
    pub(crate) client_request_token: std::option::Option<std::string::String>,
}
impl DisassociateIdentityProviderConfigInputBuilder {
    /// <p>The name of the cluster to disassociate an identity provider from.</p>
    pub fn cluster_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster_name = Some(input.into());
        self
    }
    /// <p>The name of the cluster to disassociate an identity provider from.</p>
    pub fn set_cluster_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster_name = input;
        self
    }
    /// <p>An object representing an identity provider configuration.</p>
    pub fn identity_provider_config(mut self, input: crate::types::IdentityProviderConfig) -> Self {
        self.identity_provider_config = Some(input);
        self
    }
    /// <p>An object representing an identity provider configuration.</p>
    pub fn set_identity_provider_config(
        mut self,
        input: std::option::Option<crate::types::IdentityProviderConfig>,
    ) -> Self {
        self.identity_provider_config = input;
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    pub fn client_request_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_request_token = Some(input.into());
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    pub fn set_client_request_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.client_request_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DisassociateIdentityProviderConfigInput`](crate::operation::disassociate_identity_provider_config::DisassociateIdentityProviderConfigInput).
    pub fn build(self) -> Result<crate::operation::disassociate_identity_provider_config::DisassociateIdentityProviderConfigInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::disassociate_identity_provider_config::DisassociateIdentityProviderConfigInput {
                cluster_name: self.cluster_name
                ,
                identity_provider_config: self.identity_provider_config
                ,
                client_request_token: self.client_request_token
                ,
            }
        )
    }
}
