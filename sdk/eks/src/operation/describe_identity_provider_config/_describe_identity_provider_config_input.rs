// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeIdentityProviderConfigInput {
    /// <p>The cluster name that the identity provider configuration is associated to.</p>
    pub cluster_name: ::std::option::Option<::std::string::String>,
    /// <p>An object representing an identity provider configuration.</p>
    pub identity_provider_config: ::std::option::Option<crate::types::IdentityProviderConfig>,
}
impl DescribeIdentityProviderConfigInput {
    /// <p>The cluster name that the identity provider configuration is associated to.</p>
    pub fn cluster_name(&self) -> ::std::option::Option<&str> {
        self.cluster_name.as_deref()
    }
    /// <p>An object representing an identity provider configuration.</p>
    pub fn identity_provider_config(&self) -> ::std::option::Option<&crate::types::IdentityProviderConfig> {
        self.identity_provider_config.as_ref()
    }
}
impl DescribeIdentityProviderConfigInput {
    /// Creates a new builder-style object to manufacture [`DescribeIdentityProviderConfigInput`](crate::operation::describe_identity_provider_config::DescribeIdentityProviderConfigInput).
    pub fn builder() -> crate::operation::describe_identity_provider_config::builders::DescribeIdentityProviderConfigInputBuilder {
        crate::operation::describe_identity_provider_config::builders::DescribeIdentityProviderConfigInputBuilder::default()
    }
}

/// A builder for [`DescribeIdentityProviderConfigInput`](crate::operation::describe_identity_provider_config::DescribeIdentityProviderConfigInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeIdentityProviderConfigInputBuilder {
    pub(crate) cluster_name: ::std::option::Option<::std::string::String>,
    pub(crate) identity_provider_config: ::std::option::Option<crate::types::IdentityProviderConfig>,
}
impl DescribeIdentityProviderConfigInputBuilder {
    /// <p>The cluster name that the identity provider configuration is associated to.</p>
    /// This field is required.
    pub fn cluster_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The cluster name that the identity provider configuration is associated to.</p>
    pub fn set_cluster_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_name = input;
        self
    }
    /// <p>The cluster name that the identity provider configuration is associated to.</p>
    pub fn get_cluster_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_name
    }
    /// <p>An object representing an identity provider configuration.</p>
    /// This field is required.
    pub fn identity_provider_config(mut self, input: crate::types::IdentityProviderConfig) -> Self {
        self.identity_provider_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object representing an identity provider configuration.</p>
    pub fn set_identity_provider_config(mut self, input: ::std::option::Option<crate::types::IdentityProviderConfig>) -> Self {
        self.identity_provider_config = input;
        self
    }
    /// <p>An object representing an identity provider configuration.</p>
    pub fn get_identity_provider_config(&self) -> &::std::option::Option<crate::types::IdentityProviderConfig> {
        &self.identity_provider_config
    }
    /// Consumes the builder and constructs a [`DescribeIdentityProviderConfigInput`](crate::operation::describe_identity_provider_config::DescribeIdentityProviderConfigInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_identity_provider_config::DescribeIdentityProviderConfigInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_identity_provider_config::DescribeIdentityProviderConfigInput {
            cluster_name: self.cluster_name,
            identity_provider_config: self.identity_provider_config,
        })
    }
}
