// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The location where SimSpace Weaver sends simulation log data.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LogDestination {
    /// <p>An Amazon CloudWatch Logs log group that stores simulation log data. For more information about log groups, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html">Working with log groups and log streams</a> in the <i>Amazon CloudWatch Logs User Guide</i>.</p>
    #[doc(hidden)]
    pub cloud_watch_logs_log_group: std::option::Option<crate::types::CloudWatchLogsLogGroup>,
}
impl LogDestination {
    /// <p>An Amazon CloudWatch Logs log group that stores simulation log data. For more information about log groups, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html">Working with log groups and log streams</a> in the <i>Amazon CloudWatch Logs User Guide</i>.</p>
    pub fn cloud_watch_logs_log_group(
        &self,
    ) -> std::option::Option<&crate::types::CloudWatchLogsLogGroup> {
        self.cloud_watch_logs_log_group.as_ref()
    }
}
impl LogDestination {
    /// Creates a new builder-style object to manufacture [`LogDestination`](crate::types::LogDestination).
    pub fn builder() -> crate::types::builders::LogDestinationBuilder {
        crate::types::builders::LogDestinationBuilder::default()
    }
}

/// A builder for [`LogDestination`](crate::types::LogDestination).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LogDestinationBuilder {
    pub(crate) cloud_watch_logs_log_group:
        std::option::Option<crate::types::CloudWatchLogsLogGroup>,
}
impl LogDestinationBuilder {
    /// <p>An Amazon CloudWatch Logs log group that stores simulation log data. For more information about log groups, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html">Working with log groups and log streams</a> in the <i>Amazon CloudWatch Logs User Guide</i>.</p>
    pub fn cloud_watch_logs_log_group(
        mut self,
        input: crate::types::CloudWatchLogsLogGroup,
    ) -> Self {
        self.cloud_watch_logs_log_group = Some(input);
        self
    }
    /// <p>An Amazon CloudWatch Logs log group that stores simulation log data. For more information about log groups, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html">Working with log groups and log streams</a> in the <i>Amazon CloudWatch Logs User Guide</i>.</p>
    pub fn set_cloud_watch_logs_log_group(
        mut self,
        input: std::option::Option<crate::types::CloudWatchLogsLogGroup>,
    ) -> Self {
        self.cloud_watch_logs_log_group = input;
        self
    }
    /// Consumes the builder and constructs a [`LogDestination`](crate::types::LogDestination).
    pub fn build(self) -> crate::types::LogDestination {
        crate::types::LogDestination {
            cloud_watch_logs_log_group: self.cloud_watch_logs_log_group,
        }
    }
}
