// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn add_tags_to_resource_output_correct_errors(
    mut builder: crate::operation::add_tags_to_resource::builders::AddTagsToResourceOutputBuilder,
) -> crate::operation::add_tags_to_resource::builders::AddTagsToResourceOutputBuilder {
    if builder.status.is_none() {
        builder.status = Some(Default::default())
    }
    builder
}

pub(crate) fn delete_hapg_output_correct_errors(
    mut builder: crate::operation::delete_hapg::builders::DeleteHapgOutputBuilder,
) -> crate::operation::delete_hapg::builders::DeleteHapgOutputBuilder {
    if builder.status.is_none() {
        builder.status = Some(Default::default())
    }
    builder
}

pub(crate) fn delete_hsm_output_correct_errors(
    mut builder: crate::operation::delete_hsm::builders::DeleteHsmOutputBuilder,
) -> crate::operation::delete_hsm::builders::DeleteHsmOutputBuilder {
    if builder.status.is_none() {
        builder.status = Some(Default::default())
    }
    builder
}

pub(crate) fn delete_luna_client_output_correct_errors(
    mut builder: crate::operation::delete_luna_client::builders::DeleteLunaClientOutputBuilder,
) -> crate::operation::delete_luna_client::builders::DeleteLunaClientOutputBuilder {
    if builder.status.is_none() {
        builder.status = Some(Default::default())
    }
    builder
}

pub(crate) fn list_hapgs_output_correct_errors(
    mut builder: crate::operation::list_hapgs::builders::ListHapgsOutputBuilder,
) -> crate::operation::list_hapgs::builders::ListHapgsOutputBuilder {
    if builder.hapg_list.is_none() {
        builder.hapg_list = Some(Default::default())
    }
    builder
}

pub(crate) fn list_luna_clients_output_correct_errors(
    mut builder: crate::operation::list_luna_clients::builders::ListLunaClientsOutputBuilder,
) -> crate::operation::list_luna_clients::builders::ListLunaClientsOutputBuilder {
    if builder.client_list.is_none() {
        builder.client_list = Some(Default::default())
    }
    builder
}

pub(crate) fn list_tags_for_resource_output_correct_errors(
    mut builder: crate::operation::list_tags_for_resource::builders::ListTagsForResourceOutputBuilder,
) -> crate::operation::list_tags_for_resource::builders::ListTagsForResourceOutputBuilder {
    if builder.tag_list.is_none() {
        builder.tag_list = Some(Default::default())
    }
    builder
}

pub(crate) fn remove_tags_from_resource_output_correct_errors(
    mut builder: crate::operation::remove_tags_from_resource::builders::RemoveTagsFromResourceOutputBuilder,
) -> crate::operation::remove_tags_from_resource::builders::RemoveTagsFromResourceOutputBuilder {
    if builder.status.is_none() {
        builder.status = Some(Default::default())
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}
