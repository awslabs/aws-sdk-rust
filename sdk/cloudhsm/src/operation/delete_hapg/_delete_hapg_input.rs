// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the inputs for the <code>DeleteHapg</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteHapgInput {
    /// <p>The ARN of the high-availability partition group to delete.</p>
    #[doc(hidden)]
    pub hapg_arn: std::option::Option<std::string::String>,
}
impl DeleteHapgInput {
    /// <p>The ARN of the high-availability partition group to delete.</p>
    pub fn hapg_arn(&self) -> std::option::Option<&str> {
        self.hapg_arn.as_deref()
    }
}
impl DeleteHapgInput {
    /// Creates a new builder-style object to manufacture [`DeleteHapgInput`](crate::operation::delete_hapg::DeleteHapgInput).
    pub fn builder() -> crate::operation::delete_hapg::builders::DeleteHapgInputBuilder {
        crate::operation::delete_hapg::builders::DeleteHapgInputBuilder::default()
    }
}

/// A builder for [`DeleteHapgInput`](crate::operation::delete_hapg::DeleteHapgInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteHapgInputBuilder {
    pub(crate) hapg_arn: std::option::Option<std::string::String>,
}
impl DeleteHapgInputBuilder {
    /// <p>The ARN of the high-availability partition group to delete.</p>
    pub fn hapg_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.hapg_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the high-availability partition group to delete.</p>
    pub fn set_hapg_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.hapg_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteHapgInput`](crate::operation::delete_hapg::DeleteHapgInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_hapg::DeleteHapgInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_hapg::DeleteHapgInput {
            hapg_arn: self.hapg_arn,
        })
    }
}
