// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the minimum and maximum capacity for a scheduled action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ScalableTargetAction {
    /// <p>The minimum capacity.</p>
    /// <p>When the scheduled action runs, the resource will have at least this much capacity, but it might have more depending on other settings, such as the target utilization level of a target tracking scaling policy.</p>
    #[doc(hidden)]
    pub min_capacity: std::option::Option<i32>,
    /// <p>The maximum capacity.</p>
    /// <p>Although you can specify a large maximum capacity, note that service quotas may impose lower limits. Each service has its own default quotas for the maximum capacity of the resource. If you want to specify a higher limit, you can request an increase. For more information, consult the documentation for that service. For information about the default quotas for each service, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html">Service endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
    #[doc(hidden)]
    pub max_capacity: std::option::Option<i32>,
}
impl ScalableTargetAction {
    /// <p>The minimum capacity.</p>
    /// <p>When the scheduled action runs, the resource will have at least this much capacity, but it might have more depending on other settings, such as the target utilization level of a target tracking scaling policy.</p>
    pub fn min_capacity(&self) -> std::option::Option<i32> {
        self.min_capacity
    }
    /// <p>The maximum capacity.</p>
    /// <p>Although you can specify a large maximum capacity, note that service quotas may impose lower limits. Each service has its own default quotas for the maximum capacity of the resource. If you want to specify a higher limit, you can request an increase. For more information, consult the documentation for that service. For information about the default quotas for each service, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html">Service endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn max_capacity(&self) -> std::option::Option<i32> {
        self.max_capacity
    }
}
impl ScalableTargetAction {
    /// Creates a new builder-style object to manufacture [`ScalableTargetAction`](crate::types::ScalableTargetAction).
    pub fn builder() -> crate::types::builders::ScalableTargetActionBuilder {
        crate::types::builders::ScalableTargetActionBuilder::default()
    }
}

/// A builder for [`ScalableTargetAction`](crate::types::ScalableTargetAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ScalableTargetActionBuilder {
    pub(crate) min_capacity: std::option::Option<i32>,
    pub(crate) max_capacity: std::option::Option<i32>,
}
impl ScalableTargetActionBuilder {
    /// <p>The minimum capacity.</p>
    /// <p>When the scheduled action runs, the resource will have at least this much capacity, but it might have more depending on other settings, such as the target utilization level of a target tracking scaling policy.</p>
    pub fn min_capacity(mut self, input: i32) -> Self {
        self.min_capacity = Some(input);
        self
    }
    /// <p>The minimum capacity.</p>
    /// <p>When the scheduled action runs, the resource will have at least this much capacity, but it might have more depending on other settings, such as the target utilization level of a target tracking scaling policy.</p>
    pub fn set_min_capacity(mut self, input: std::option::Option<i32>) -> Self {
        self.min_capacity = input;
        self
    }
    /// <p>The maximum capacity.</p>
    /// <p>Although you can specify a large maximum capacity, note that service quotas may impose lower limits. Each service has its own default quotas for the maximum capacity of the resource. If you want to specify a higher limit, you can request an increase. For more information, consult the documentation for that service. For information about the default quotas for each service, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html">Service endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn max_capacity(mut self, input: i32) -> Self {
        self.max_capacity = Some(input);
        self
    }
    /// <p>The maximum capacity.</p>
    /// <p>Although you can specify a large maximum capacity, note that service quotas may impose lower limits. Each service has its own default quotas for the maximum capacity of the resource. If you want to specify a higher limit, you can request an increase. For more information, consult the documentation for that service. For information about the default quotas for each service, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html">Service endpoints and quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn set_max_capacity(mut self, input: std::option::Option<i32>) -> Self {
        self.max_capacity = input;
        self
    }
    /// Consumes the builder and constructs a [`ScalableTargetAction`](crate::types::ScalableTargetAction).
    pub fn build(self) -> crate::types::ScalableTargetAction {
        crate::types::ScalableTargetAction {
            min_capacity: self.min_capacity,
            max_capacity: self.max_capacity,
        }
    }
}
