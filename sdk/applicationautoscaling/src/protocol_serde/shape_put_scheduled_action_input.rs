// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_put_scheduled_action_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::put_scheduled_action::PutScheduledActionInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.service_namespace {
        object.key("ServiceNamespace").string(var_1.as_str());
    }
    if let Some(var_2) = &input.schedule {
        object.key("Schedule").string(var_2.as_str());
    }
    if let Some(var_3) = &input.timezone {
        object.key("Timezone").string(var_3.as_str());
    }
    if let Some(var_4) = &input.scheduled_action_name {
        object.key("ScheduledActionName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.resource_id {
        object.key("ResourceId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.scalable_dimension {
        object.key("ScalableDimension").string(var_6.as_str());
    }
    if let Some(var_7) = &input.start_time {
        object
            .key("StartTime")
            .date_time(var_7, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_8) = &input.end_time {
        object
            .key("EndTime")
            .date_time(var_8, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_9) = &input.scalable_target_action {
        #[allow(unused_mut)]
        let mut object_10 = object.key("ScalableTargetAction").start_object();
        crate::protocol_serde::shape_scalable_target_action::ser_scalable_target_action(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}
