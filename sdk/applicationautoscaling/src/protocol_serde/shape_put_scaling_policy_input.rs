// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_put_scaling_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::put_scaling_policy::PutScalingPolicyInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.policy_name {
        object.key("PolicyName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.service_namespace {
        object.key("ServiceNamespace").string(var_2.as_str());
    }
    if let Some(var_3) = &input.resource_id {
        object.key("ResourceId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.scalable_dimension {
        object.key("ScalableDimension").string(var_4.as_str());
    }
    if let Some(var_5) = &input.policy_type {
        object.key("PolicyType").string(var_5.as_str());
    }
    if let Some(var_6) = &input.step_scaling_policy_configuration {
        #[allow(unused_mut)]
        let mut object_7 = object.key("StepScalingPolicyConfiguration").start_object();
        crate::protocol_serde::shape_step_scaling_policy_configuration::ser_step_scaling_policy_configuration(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.target_tracking_scaling_policy_configuration {
        #[allow(unused_mut)]
        let mut object_9 = object
            .key("TargetTrackingScalingPolicyConfiguration")
            .start_object();
        crate::protocol_serde::shape_target_tracking_scaling_policy_configuration::ser_target_tracking_scaling_policy_configuration(&mut object_9, var_8)?;
        object_9.finish();
    }
    Ok(())
}
