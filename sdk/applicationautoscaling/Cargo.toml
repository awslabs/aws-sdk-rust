# Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
[package]
name = "aws-sdk-applicationautoscaling"
version = "0.0.12-alpha"
description = "<p>With Application Auto Scaling, you can configure automatic scaling for the following\n      resources:</p>\n         <ul>\n            <li>\n               <p>Amazon ECS services</p>\n            </li>\n            <li>\n               <p>Amazon EC2 Spot Fleet requests</p>\n            </li>\n            <li>\n               <p>Amazon EMR clusters</p>\n            </li>\n            <li>\n               <p>Amazon AppStream 2.0 fleets</p>\n            </li>\n            <li>\n               <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p>\n            </li>\n            <li>\n               <p>Amazon Aurora Replicas</p>\n            </li>\n            <li>\n               <p>Amazon SageMaker endpoint variants</p>\n            </li>\n            <li>\n               <p>Custom resources provided by your own applications or services</p>\n            </li>\n            <li>\n               <p>Amazon Comprehend document classification and entity recognizer endpoints</p>\n            </li>\n            <li>\n               <p>AWS Lambda function provisioned concurrency</p>\n            </li>\n            <li>\n               <p>Amazon Keyspaces (for Apache Cassandra) tables</p>\n            </li>\n            <li>\n               <p>Amazon Managed Streaming for Apache Kafka broker storage</p>\n            </li>\n         </ul>\n         <p>\n            <b>API Summary</b>\n         </p>\n         <p>The Application Auto Scaling service API includes three key sets of actions: </p>\n         <ul>\n            <li>\n               <p>Register and manage scalable targets - Register AWS or custom resources as scalable\n          targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and\n          retrieve information on existing scalable targets.</p>\n            </li>\n            <li>\n               <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale\n          your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions,\n          and retrieve your recent scaling activity history.</p>\n            </li>\n            <li>\n               <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by\n          calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can\n          suspend and resume (individually or in combination) scale-out activities that are\n          triggered by a scaling policy, scale-in activities that are triggered by a scaling policy,\n          and scheduled scaling.</p>\n            </li>\n         </ul>\n\n      \n         <p>To learn more about Application Auto Scaling, including information about granting IAM users required\n      permissions for Application Auto Scaling actions, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User\n        Guide</a>.</p>"
authors = ["AWS Rust SDK Team <aws-sdk-rust@amazon.com>", "Russell Cohen <rcoh@amazon.com>"]
license = "Apache-2.0"
edition = "2018"
[dependencies.aws-endpoint]
path = "..//aws-endpoint"
[dependencies.aws-hyper]
path = "..//aws-hyper"
features = ["test-util"]
optional = true
[dependencies.smithy-http]
path = "..//smithy-http"
[dependencies.aws-types]
path = "..//aws-types"
[dependencies.aws-auth]
path = "..//aws-auth"
[dependencies.smithy-types]
path = "..//smithy-types"
[dependencies.aws-http]
path = "..//aws-http"
[dependencies.aws-sig-auth]
path = "..//aws-sig-auth"
[dependencies.http]
version = "0.2"
[dependencies.bytes]
version = "1"
[dependencies.smithy-json]
path = "..//smithy-json"
[features]
client = ["aws-hyper"]
rustls = ["aws-hyper/rustls"]
native-tls = ["aws-hyper/native-tls"]
default = ["client", "rustls"]


