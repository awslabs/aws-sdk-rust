// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The parameters for using an Active MQ broker as a source.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdatePipeSourceActiveMqBrokerParameters {
    /// <p>The credentials needed to access the resource.</p>
    pub credentials: ::std::option::Option<crate::types::MqBrokerAccessCredentials>,
    /// <p>The maximum number of records to include in each batch.</p>
    pub batch_size: ::std::option::Option<i32>,
    /// <p>The maximum length of a time to wait for events.</p>
    pub maximum_batching_window_in_seconds: ::std::option::Option<i32>,
}
impl UpdatePipeSourceActiveMqBrokerParameters {
    /// <p>The credentials needed to access the resource.</p>
    pub fn credentials(&self) -> ::std::option::Option<&crate::types::MqBrokerAccessCredentials> {
        self.credentials.as_ref()
    }
    /// <p>The maximum number of records to include in each batch.</p>
    pub fn batch_size(&self) -> ::std::option::Option<i32> {
        self.batch_size
    }
    /// <p>The maximum length of a time to wait for events.</p>
    pub fn maximum_batching_window_in_seconds(&self) -> ::std::option::Option<i32> {
        self.maximum_batching_window_in_seconds
    }
}
impl UpdatePipeSourceActiveMqBrokerParameters {
    /// Creates a new builder-style object to manufacture [`UpdatePipeSourceActiveMqBrokerParameters`](crate::types::UpdatePipeSourceActiveMqBrokerParameters).
    pub fn builder() -> crate::types::builders::UpdatePipeSourceActiveMqBrokerParametersBuilder {
        crate::types::builders::UpdatePipeSourceActiveMqBrokerParametersBuilder::default()
    }
}

/// A builder for [`UpdatePipeSourceActiveMqBrokerParameters`](crate::types::UpdatePipeSourceActiveMqBrokerParameters).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdatePipeSourceActiveMqBrokerParametersBuilder {
    pub(crate) credentials: ::std::option::Option<crate::types::MqBrokerAccessCredentials>,
    pub(crate) batch_size: ::std::option::Option<i32>,
    pub(crate) maximum_batching_window_in_seconds: ::std::option::Option<i32>,
}
impl UpdatePipeSourceActiveMqBrokerParametersBuilder {
    /// <p>The credentials needed to access the resource.</p>
    /// This field is required.
    pub fn credentials(mut self, input: crate::types::MqBrokerAccessCredentials) -> Self {
        self.credentials = ::std::option::Option::Some(input);
        self
    }
    /// <p>The credentials needed to access the resource.</p>
    pub fn set_credentials(mut self, input: ::std::option::Option<crate::types::MqBrokerAccessCredentials>) -> Self {
        self.credentials = input;
        self
    }
    /// <p>The credentials needed to access the resource.</p>
    pub fn get_credentials(&self) -> &::std::option::Option<crate::types::MqBrokerAccessCredentials> {
        &self.credentials
    }
    /// <p>The maximum number of records to include in each batch.</p>
    pub fn batch_size(mut self, input: i32) -> Self {
        self.batch_size = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of records to include in each batch.</p>
    pub fn set_batch_size(mut self, input: ::std::option::Option<i32>) -> Self {
        self.batch_size = input;
        self
    }
    /// <p>The maximum number of records to include in each batch.</p>
    pub fn get_batch_size(&self) -> &::std::option::Option<i32> {
        &self.batch_size
    }
    /// <p>The maximum length of a time to wait for events.</p>
    pub fn maximum_batching_window_in_seconds(mut self, input: i32) -> Self {
        self.maximum_batching_window_in_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum length of a time to wait for events.</p>
    pub fn set_maximum_batching_window_in_seconds(mut self, input: ::std::option::Option<i32>) -> Self {
        self.maximum_batching_window_in_seconds = input;
        self
    }
    /// <p>The maximum length of a time to wait for events.</p>
    pub fn get_maximum_batching_window_in_seconds(&self) -> &::std::option::Option<i32> {
        &self.maximum_batching_window_in_seconds
    }
    /// Consumes the builder and constructs a [`UpdatePipeSourceActiveMqBrokerParameters`](crate::types::UpdatePipeSourceActiveMqBrokerParameters).
    pub fn build(self) -> crate::types::UpdatePipeSourceActiveMqBrokerParameters {
        crate::types::UpdatePipeSourceActiveMqBrokerParameters {
            credentials: self.credentials,
            batch_size: self.batch_size,
            maximum_batching_window_in_seconds: self.maximum_batching_window_in_seconds,
        }
    }
}
