// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_pipe_source_self_managed_kafka_parameters(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::UpdatePipeSourceSelfManagedKafkaParameters,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.batch_size {
        object.key("BatchSize").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_1).into()),
        );
    }
    if let Some(var_2) = &input.maximum_batching_window_in_seconds {
        object.key("MaximumBatchingWindowInSeconds").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    if let Some(var_3) = &input.credentials {
        #[allow(unused_mut)]
        let mut object_4 = object.key("Credentials").start_object();
        crate::protocol_serde::shape_self_managed_kafka_access_configuration_credentials::ser_self_managed_kafka_access_configuration_credentials(
            &mut object_4,
            var_3,
        )?;
        object_4.finish();
    }
    if let Some(var_5) = &input.server_root_ca_certificate {
        object.key("ServerRootCaCertificate").string(var_5.as_str());
    }
    if let Some(var_6) = &input.vpc {
        #[allow(unused_mut)]
        let mut object_7 = object.key("Vpc").start_object();
        crate::protocol_serde::shape_self_managed_kafka_access_configuration_vpc::ser_self_managed_kafka_access_configuration_vpc(
            &mut object_7,
            var_6,
        )?;
        object_7.finish();
    }
    Ok(())
}
