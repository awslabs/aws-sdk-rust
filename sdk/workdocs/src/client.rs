// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon WorkDocs
///
/// Client for invoking operations on Amazon WorkDocs. Each operation on Amazon WorkDocs is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_workdocs::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_workdocs::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_workdocs::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AbortDocumentVersionUpload`](crate::client::fluent_builders::AbortDocumentVersionUpload) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::AbortDocumentVersionUpload::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::AbortDocumentVersionUpload::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::AbortDocumentVersionUpload::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::AbortDocumentVersionUpload::set_document_id): <p>The ID of the document.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::AbortDocumentVersionUpload::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::AbortDocumentVersionUpload::set_version_id): <p>The ID of the version.</p>
    /// - On success, responds with [`AbortDocumentVersionUploadOutput`](crate::output::AbortDocumentVersionUploadOutput)

    /// - On failure, responds with [`SdkError<AbortDocumentVersionUploadError>`](crate::error::AbortDocumentVersionUploadError)
    pub fn abort_document_version_upload(
        &self,
    ) -> crate::client::fluent_builders::AbortDocumentVersionUpload {
        crate::client::fluent_builders::AbortDocumentVersionUpload::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ActivateUser`](crate::client::fluent_builders::ActivateUser) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::ActivateUser::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::ActivateUser::set_user_id): <p>The ID of the user.</p>
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::ActivateUser::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::ActivateUser::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    /// - On success, responds with [`ActivateUserOutput`](crate::output::ActivateUserOutput) with field(s):
    ///   - [`user(Option<User>)`](crate::output::ActivateUserOutput::user): <p>The user information.</p>
    /// - On failure, responds with [`SdkError<ActivateUserError>`](crate::error::ActivateUserError)
    pub fn activate_user(&self) -> crate::client::fluent_builders::ActivateUser {
        crate::client::fluent_builders::ActivateUser::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`AddResourcePermissions`](crate::client::fluent_builders::AddResourcePermissions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::AddResourcePermissions::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::AddResourcePermissions::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::AddResourcePermissions::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::AddResourcePermissions::set_resource_id): <p>The ID of the resource.</p>
    ///   - [`principals(Vec<SharePrincipal>)`](crate::client::fluent_builders::AddResourcePermissions::principals) / [`set_principals(Option<Vec<SharePrincipal>>)`](crate::client::fluent_builders::AddResourcePermissions::set_principals): <p>The users, groups, or organization being granted permission.</p>
    ///   - [`notification_options(NotificationOptions)`](crate::client::fluent_builders::AddResourcePermissions::notification_options) / [`set_notification_options(Option<NotificationOptions>)`](crate::client::fluent_builders::AddResourcePermissions::set_notification_options): <p>The notification options.</p>
    /// - On success, responds with [`AddResourcePermissionsOutput`](crate::output::AddResourcePermissionsOutput) with field(s):
    ///   - [`share_results(Option<Vec<ShareResult>>)`](crate::output::AddResourcePermissionsOutput::share_results): <p>The share results.</p>
    /// - On failure, responds with [`SdkError<AddResourcePermissionsError>`](crate::error::AddResourcePermissionsError)
    pub fn add_resource_permissions(
        &self,
    ) -> crate::client::fluent_builders::AddResourcePermissions {
        crate::client::fluent_builders::AddResourcePermissions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateComment`](crate::client::fluent_builders::CreateComment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::CreateComment::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::CreateComment::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::CreateComment::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::CreateComment::set_document_id): <p>The ID of the document.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::CreateComment::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::CreateComment::set_version_id): <p>The ID of the document version.</p>
    ///   - [`parent_id(impl Into<String>)`](crate::client::fluent_builders::CreateComment::parent_id) / [`set_parent_id(Option<String>)`](crate::client::fluent_builders::CreateComment::set_parent_id): <p>The ID of the parent comment.</p>
    ///   - [`thread_id(impl Into<String>)`](crate::client::fluent_builders::CreateComment::thread_id) / [`set_thread_id(Option<String>)`](crate::client::fluent_builders::CreateComment::set_thread_id): <p>The ID of the root comment in the thread.</p>
    ///   - [`text(impl Into<String>)`](crate::client::fluent_builders::CreateComment::text) / [`set_text(Option<String>)`](crate::client::fluent_builders::CreateComment::set_text): <p>The text of the comment.</p>
    ///   - [`visibility(CommentVisibilityType)`](crate::client::fluent_builders::CreateComment::visibility) / [`set_visibility(Option<CommentVisibilityType>)`](crate::client::fluent_builders::CreateComment::set_visibility): <p>The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.</p>
    ///   - [`notify_collaborators(bool)`](crate::client::fluent_builders::CreateComment::notify_collaborators) / [`set_notify_collaborators(bool)`](crate::client::fluent_builders::CreateComment::set_notify_collaborators): <p>Set this parameter to TRUE to send an email out to the document collaborators after the comment is created.</p>
    /// - On success, responds with [`CreateCommentOutput`](crate::output::CreateCommentOutput) with field(s):
    ///   - [`comment(Option<Comment>)`](crate::output::CreateCommentOutput::comment): <p>The comment that has been created.</p>
    /// - On failure, responds with [`SdkError<CreateCommentError>`](crate::error::CreateCommentError)
    pub fn create_comment(&self) -> crate::client::fluent_builders::CreateComment {
        crate::client::fluent_builders::CreateComment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateCustomMetadata`](crate::client::fluent_builders::CreateCustomMetadata) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::CreateCustomMetadata::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::CreateCustomMetadata::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::CreateCustomMetadata::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::CreateCustomMetadata::set_resource_id): <p>The ID of the resource.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::CreateCustomMetadata::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::CreateCustomMetadata::set_version_id): <p>The ID of the version, if the custom metadata is being added to a document version.</p>
    ///   - [`custom_metadata(HashMap<String, String>)`](crate::client::fluent_builders::CreateCustomMetadata::custom_metadata) / [`set_custom_metadata(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateCustomMetadata::set_custom_metadata): <p>Custom metadata in the form of name-value pairs.</p>
    /// - On success, responds with [`CreateCustomMetadataOutput`](crate::output::CreateCustomMetadataOutput)

    /// - On failure, responds with [`SdkError<CreateCustomMetadataError>`](crate::error::CreateCustomMetadataError)
    pub fn create_custom_metadata(&self) -> crate::client::fluent_builders::CreateCustomMetadata {
        crate::client::fluent_builders::CreateCustomMetadata::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateFolder`](crate::client::fluent_builders::CreateFolder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::CreateFolder::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::CreateFolder::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateFolder::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateFolder::set_name): <p>The name of the new folder.</p>
    ///   - [`parent_folder_id(impl Into<String>)`](crate::client::fluent_builders::CreateFolder::parent_folder_id) / [`set_parent_folder_id(Option<String>)`](crate::client::fluent_builders::CreateFolder::set_parent_folder_id): <p>The ID of the parent folder.</p>
    /// - On success, responds with [`CreateFolderOutput`](crate::output::CreateFolderOutput) with field(s):
    ///   - [`metadata(Option<FolderMetadata>)`](crate::output::CreateFolderOutput::metadata): <p>The metadata of the folder.</p>
    /// - On failure, responds with [`SdkError<CreateFolderError>`](crate::error::CreateFolderError)
    pub fn create_folder(&self) -> crate::client::fluent_builders::CreateFolder {
        crate::client::fluent_builders::CreateFolder::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateLabels`](crate::client::fluent_builders::CreateLabels) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::CreateLabels::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::CreateLabels::set_resource_id): <p>The ID of the resource.</p>
    ///   - [`labels(Vec<String>)`](crate::client::fluent_builders::CreateLabels::labels) / [`set_labels(Option<Vec<String>>)`](crate::client::fluent_builders::CreateLabels::set_labels): <p>List of labels to add to the resource.</p>
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::CreateLabels::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::CreateLabels::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    /// - On success, responds with [`CreateLabelsOutput`](crate::output::CreateLabelsOutput)

    /// - On failure, responds with [`SdkError<CreateLabelsError>`](crate::error::CreateLabelsError)
    pub fn create_labels(&self) -> crate::client::fluent_builders::CreateLabels {
        crate::client::fluent_builders::CreateLabels::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateNotificationSubscription`](crate::client::fluent_builders::CreateNotificationSubscription) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::CreateNotificationSubscription::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::CreateNotificationSubscription::set_organization_id): <p>The ID of the organization.</p>
    ///   - [`endpoint(impl Into<String>)`](crate::client::fluent_builders::CreateNotificationSubscription::endpoint) / [`set_endpoint(Option<String>)`](crate::client::fluent_builders::CreateNotificationSubscription::set_endpoint): <p>The endpoint to receive the notifications. If the protocol is HTTPS, the endpoint is a URL that begins with <code>https</code>.</p>
    ///   - [`protocol(SubscriptionProtocolType)`](crate::client::fluent_builders::CreateNotificationSubscription::protocol) / [`set_protocol(Option<SubscriptionProtocolType>)`](crate::client::fluent_builders::CreateNotificationSubscription::set_protocol): <p>The protocol to use. The supported value is https, which delivers JSON-encoded messages using HTTPS POST.</p>
    ///   - [`subscription_type(SubscriptionType)`](crate::client::fluent_builders::CreateNotificationSubscription::subscription_type) / [`set_subscription_type(Option<SubscriptionType>)`](crate::client::fluent_builders::CreateNotificationSubscription::set_subscription_type): <p>The notification type.</p>
    /// - On success, responds with [`CreateNotificationSubscriptionOutput`](crate::output::CreateNotificationSubscriptionOutput) with field(s):
    ///   - [`subscription(Option<Subscription>)`](crate::output::CreateNotificationSubscriptionOutput::subscription): <p>The subscription.</p>
    /// - On failure, responds with [`SdkError<CreateNotificationSubscriptionError>`](crate::error::CreateNotificationSubscriptionError)
    pub fn create_notification_subscription(
        &self,
    ) -> crate::client::fluent_builders::CreateNotificationSubscription {
        crate::client::fluent_builders::CreateNotificationSubscription::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateUser`](crate::client::fluent_builders::CreateUser) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::CreateUser::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::CreateUser::set_organization_id): <p>The ID of the organization.</p>
    ///   - [`username(impl Into<String>)`](crate::client::fluent_builders::CreateUser::username) / [`set_username(Option<String>)`](crate::client::fluent_builders::CreateUser::set_username): <p>The login name of the user.</p>
    ///   - [`email_address(impl Into<String>)`](crate::client::fluent_builders::CreateUser::email_address) / [`set_email_address(Option<String>)`](crate::client::fluent_builders::CreateUser::set_email_address): <p>The email address of the user.</p>
    ///   - [`given_name(impl Into<String>)`](crate::client::fluent_builders::CreateUser::given_name) / [`set_given_name(Option<String>)`](crate::client::fluent_builders::CreateUser::set_given_name): <p>The given name of the user.</p>
    ///   - [`surname(impl Into<String>)`](crate::client::fluent_builders::CreateUser::surname) / [`set_surname(Option<String>)`](crate::client::fluent_builders::CreateUser::set_surname): <p>The surname of the user.</p>
    ///   - [`password(impl Into<String>)`](crate::client::fluent_builders::CreateUser::password) / [`set_password(Option<String>)`](crate::client::fluent_builders::CreateUser::set_password): <p>The password of the user.</p>
    ///   - [`time_zone_id(impl Into<String>)`](crate::client::fluent_builders::CreateUser::time_zone_id) / [`set_time_zone_id(Option<String>)`](crate::client::fluent_builders::CreateUser::set_time_zone_id): <p>The time zone ID of the user.</p>
    ///   - [`storage_rule(StorageRuleType)`](crate::client::fluent_builders::CreateUser::storage_rule) / [`set_storage_rule(Option<StorageRuleType>)`](crate::client::fluent_builders::CreateUser::set_storage_rule): <p>The amount of storage for the user.</p>
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::CreateUser::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::CreateUser::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    /// - On success, responds with [`CreateUserOutput`](crate::output::CreateUserOutput) with field(s):
    ///   - [`user(Option<User>)`](crate::output::CreateUserOutput::user): <p>The user information.</p>
    /// - On failure, responds with [`SdkError<CreateUserError>`](crate::error::CreateUserError)
    pub fn create_user(&self) -> crate::client::fluent_builders::CreateUser {
        crate::client::fluent_builders::CreateUser::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeactivateUser`](crate::client::fluent_builders::DeactivateUser) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::DeactivateUser::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::DeactivateUser::set_user_id): <p>The ID of the user.</p>
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DeactivateUser::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DeactivateUser::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    /// - On success, responds with [`DeactivateUserOutput`](crate::output::DeactivateUserOutput)

    /// - On failure, responds with [`SdkError<DeactivateUserError>`](crate::error::DeactivateUserError)
    pub fn deactivate_user(&self) -> crate::client::fluent_builders::DeactivateUser {
        crate::client::fluent_builders::DeactivateUser::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteComment`](crate::client::fluent_builders::DeleteComment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DeleteComment::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DeleteComment::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::DeleteComment::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::DeleteComment::set_document_id): <p>The ID of the document.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::DeleteComment::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::DeleteComment::set_version_id): <p>The ID of the document version.</p>
    ///   - [`comment_id(impl Into<String>)`](crate::client::fluent_builders::DeleteComment::comment_id) / [`set_comment_id(Option<String>)`](crate::client::fluent_builders::DeleteComment::set_comment_id): <p>The ID of the comment.</p>
    /// - On success, responds with [`DeleteCommentOutput`](crate::output::DeleteCommentOutput)

    /// - On failure, responds with [`SdkError<DeleteCommentError>`](crate::error::DeleteCommentError)
    pub fn delete_comment(&self) -> crate::client::fluent_builders::DeleteComment {
        crate::client::fluent_builders::DeleteComment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteCustomMetadata`](crate::client::fluent_builders::DeleteCustomMetadata) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DeleteCustomMetadata::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DeleteCustomMetadata::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::DeleteCustomMetadata::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::DeleteCustomMetadata::set_resource_id): <p>The ID of the resource, either a document or folder.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::DeleteCustomMetadata::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::DeleteCustomMetadata::set_version_id): <p>The ID of the version, if the custom metadata is being deleted from a document version.</p>
    ///   - [`keys(Vec<String>)`](crate::client::fluent_builders::DeleteCustomMetadata::keys) / [`set_keys(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteCustomMetadata::set_keys): <p>List of properties to remove.</p>
    ///   - [`delete_all(bool)`](crate::client::fluent_builders::DeleteCustomMetadata::delete_all) / [`set_delete_all(bool)`](crate::client::fluent_builders::DeleteCustomMetadata::set_delete_all): <p>Flag to indicate removal of all custom metadata properties from the specified resource.</p>
    /// - On success, responds with [`DeleteCustomMetadataOutput`](crate::output::DeleteCustomMetadataOutput)

    /// - On failure, responds with [`SdkError<DeleteCustomMetadataError>`](crate::error::DeleteCustomMetadataError)
    pub fn delete_custom_metadata(&self) -> crate::client::fluent_builders::DeleteCustomMetadata {
        crate::client::fluent_builders::DeleteCustomMetadata::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteDocument`](crate::client::fluent_builders::DeleteDocument) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DeleteDocument::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DeleteDocument::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::DeleteDocument::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::DeleteDocument::set_document_id): <p>The ID of the document.</p>
    /// - On success, responds with [`DeleteDocumentOutput`](crate::output::DeleteDocumentOutput)

    /// - On failure, responds with [`SdkError<DeleteDocumentError>`](crate::error::DeleteDocumentError)
    pub fn delete_document(&self) -> crate::client::fluent_builders::DeleteDocument {
        crate::client::fluent_builders::DeleteDocument::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteDocumentVersion`](crate::client::fluent_builders::DeleteDocumentVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DeleteDocumentVersion::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DeleteDocumentVersion::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::DeleteDocumentVersion::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::DeleteDocumentVersion::set_document_id): <p>The ID of a document.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::DeleteDocumentVersion::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::DeleteDocumentVersion::set_version_id): <p>The version ID of a document.</p>
    ///   - [`delete_prior_versions(bool)`](crate::client::fluent_builders::DeleteDocumentVersion::delete_prior_versions) / [`set_delete_prior_versions(bool)`](crate::client::fluent_builders::DeleteDocumentVersion::set_delete_prior_versions): <p>When set to <code>TRUE</code>, deletes the specified version and <i>all prior versions</i> of a document.</p>
    /// - On success, responds with [`DeleteDocumentVersionOutput`](crate::output::DeleteDocumentVersionOutput)

    /// - On failure, responds with [`SdkError<DeleteDocumentVersionError>`](crate::error::DeleteDocumentVersionError)
    pub fn delete_document_version(&self) -> crate::client::fluent_builders::DeleteDocumentVersion {
        crate::client::fluent_builders::DeleteDocumentVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteFolder`](crate::client::fluent_builders::DeleteFolder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DeleteFolder::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DeleteFolder::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`folder_id(impl Into<String>)`](crate::client::fluent_builders::DeleteFolder::folder_id) / [`set_folder_id(Option<String>)`](crate::client::fluent_builders::DeleteFolder::set_folder_id): <p>The ID of the folder.</p>
    /// - On success, responds with [`DeleteFolderOutput`](crate::output::DeleteFolderOutput)

    /// - On failure, responds with [`SdkError<DeleteFolderError>`](crate::error::DeleteFolderError)
    pub fn delete_folder(&self) -> crate::client::fluent_builders::DeleteFolder {
        crate::client::fluent_builders::DeleteFolder::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteFolderContents`](crate::client::fluent_builders::DeleteFolderContents) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DeleteFolderContents::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DeleteFolderContents::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`folder_id(impl Into<String>)`](crate::client::fluent_builders::DeleteFolderContents::folder_id) / [`set_folder_id(Option<String>)`](crate::client::fluent_builders::DeleteFolderContents::set_folder_id): <p>The ID of the folder.</p>
    /// - On success, responds with [`DeleteFolderContentsOutput`](crate::output::DeleteFolderContentsOutput)

    /// - On failure, responds with [`SdkError<DeleteFolderContentsError>`](crate::error::DeleteFolderContentsError)
    pub fn delete_folder_contents(&self) -> crate::client::fluent_builders::DeleteFolderContents {
        crate::client::fluent_builders::DeleteFolderContents::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteLabels`](crate::client::fluent_builders::DeleteLabels) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::DeleteLabels::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::DeleteLabels::set_resource_id): <p>The ID of the resource.</p>
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DeleteLabels::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DeleteLabels::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`labels(Vec<String>)`](crate::client::fluent_builders::DeleteLabels::labels) / [`set_labels(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteLabels::set_labels): <p>List of labels to delete from the resource.</p>
    ///   - [`delete_all(bool)`](crate::client::fluent_builders::DeleteLabels::delete_all) / [`set_delete_all(bool)`](crate::client::fluent_builders::DeleteLabels::set_delete_all): <p>Flag to request removal of all labels from the specified resource.</p>
    /// - On success, responds with [`DeleteLabelsOutput`](crate::output::DeleteLabelsOutput)

    /// - On failure, responds with [`SdkError<DeleteLabelsError>`](crate::error::DeleteLabelsError)
    pub fn delete_labels(&self) -> crate::client::fluent_builders::DeleteLabels {
        crate::client::fluent_builders::DeleteLabels::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteNotificationSubscription`](crate::client::fluent_builders::DeleteNotificationSubscription) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscription_id(impl Into<String>)`](crate::client::fluent_builders::DeleteNotificationSubscription::subscription_id) / [`set_subscription_id(Option<String>)`](crate::client::fluent_builders::DeleteNotificationSubscription::set_subscription_id): <p>The ID of the subscription.</p>
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::DeleteNotificationSubscription::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::DeleteNotificationSubscription::set_organization_id): <p>The ID of the organization.</p>
    /// - On success, responds with [`DeleteNotificationSubscriptionOutput`](crate::output::DeleteNotificationSubscriptionOutput)

    /// - On failure, responds with [`SdkError<DeleteNotificationSubscriptionError>`](crate::error::DeleteNotificationSubscriptionError)
    pub fn delete_notification_subscription(
        &self,
    ) -> crate::client::fluent_builders::DeleteNotificationSubscription {
        crate::client::fluent_builders::DeleteNotificationSubscription::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteUser`](crate::client::fluent_builders::DeleteUser) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DeleteUser::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DeleteUser::set_authentication_token): <p>Amazon WorkDocs authentication token. Do not set this field when using administrative API actions, as in accessing the API using AWS credentials.</p>
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::DeleteUser::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::DeleteUser::set_user_id): <p>The ID of the user.</p>
    /// - On success, responds with [`DeleteUserOutput`](crate::output::DeleteUserOutput)

    /// - On failure, responds with [`SdkError<DeleteUserError>`](crate::error::DeleteUserError)
    pub fn delete_user(&self) -> crate::client::fluent_builders::DeleteUser {
        crate::client::fluent_builders::DeleteUser::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeActivities`](crate::client::fluent_builders::DescribeActivities) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DescribeActivities::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DescribeActivities::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::DescribeActivities::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::DescribeActivities::set_start_time): <p>The timestamp that determines the starting time of the activities. The response includes the activities performed after the specified timestamp.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::DescribeActivities::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::DescribeActivities::set_end_time): <p>The timestamp that determines the end time of the activities. The response includes the activities performed before the specified timestamp.</p>
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::DescribeActivities::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::DescribeActivities::set_organization_id): <p>The ID of the organization. This is a mandatory parameter when using administrative API (SigV4) requests.</p>
    ///   - [`activity_types(impl Into<String>)`](crate::client::fluent_builders::DescribeActivities::activity_types) / [`set_activity_types(Option<String>)`](crate::client::fluent_builders::DescribeActivities::set_activity_types): <p>Specifies which activity types to include in the response. If this field is left empty, all activity types are returned.</p>
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::DescribeActivities::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::DescribeActivities::set_resource_id): <p>The document or folder ID for which to describe activity types.</p>
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::DescribeActivities::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::DescribeActivities::set_user_id): <p>The ID of the user who performed the action. The response includes activities pertaining to this user. This is an optional parameter and is only applicable for administrative API (SigV4) requests.</p>
    ///   - [`include_indirect_activities(bool)`](crate::client::fluent_builders::DescribeActivities::include_indirect_activities) / [`set_include_indirect_activities(bool)`](crate::client::fluent_builders::DescribeActivities::set_include_indirect_activities): <p>Includes indirect activities. An indirect activity results from a direct activity performed on a parent resource. For example, sharing a parent folder (the direct activity) shares all of the subfolders and documents within the parent folder (the indirect activity).</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribeActivities::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::DescribeActivities::set_limit): <p>The maximum number of items to return.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeActivities::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeActivities::set_marker): <p>The marker for the next set of results.</p>
    /// - On success, responds with [`DescribeActivitiesOutput`](crate::output::DescribeActivitiesOutput) with field(s):
    ///   - [`user_activities(Option<Vec<Activity>>)`](crate::output::DescribeActivitiesOutput::user_activities): <p>The list of activities for the specified user and time period.</p>
    ///   - [`marker(Option<String>)`](crate::output::DescribeActivitiesOutput::marker): <p>The marker for the next set of results.</p>
    /// - On failure, responds with [`SdkError<DescribeActivitiesError>`](crate::error::DescribeActivitiesError)
    pub fn describe_activities(&self) -> crate::client::fluent_builders::DescribeActivities {
        crate::client::fluent_builders::DescribeActivities::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeComments`](crate::client::fluent_builders::DescribeComments) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DescribeComments::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DescribeComments::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::DescribeComments::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::DescribeComments::set_document_id): <p>The ID of the document.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::DescribeComments::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::DescribeComments::set_version_id): <p>The ID of the document version.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribeComments::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::DescribeComments::set_limit): <p>The maximum number of items to return.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeComments::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeComments::set_marker): <p>The marker for the next set of results. This marker was received from a previous call.</p>
    /// - On success, responds with [`DescribeCommentsOutput`](crate::output::DescribeCommentsOutput) with field(s):
    ///   - [`comments(Option<Vec<Comment>>)`](crate::output::DescribeCommentsOutput::comments): <p>The list of comments for the specified document version.</p>
    ///   - [`marker(Option<String>)`](crate::output::DescribeCommentsOutput::marker): <p>The marker for the next set of results. This marker was received from a previous call.</p>
    /// - On failure, responds with [`SdkError<DescribeCommentsError>`](crate::error::DescribeCommentsError)
    pub fn describe_comments(&self) -> crate::client::fluent_builders::DescribeComments {
        crate::client::fluent_builders::DescribeComments::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeDocumentVersions`](crate::client::fluent_builders::DescribeDocumentVersions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeDocumentVersions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::set_document_id): <p>The ID of the document.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::set_marker): <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribeDocumentVersions::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::DescribeDocumentVersions::set_limit): <p>The maximum number of versions to return with this call.</p>
    ///   - [`include(impl Into<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::include) / [`set_include(Option<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::set_include): <p>A comma-separated list of values. Specify "INITIALIZED" to include incomplete versions.</p>
    ///   - [`fields(impl Into<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::fields) / [`set_fields(Option<String>)`](crate::client::fluent_builders::DescribeDocumentVersions::set_fields): <p>Specify "SOURCE" to include initialized versions and a URL for the source document.</p>
    /// - On success, responds with [`DescribeDocumentVersionsOutput`](crate::output::DescribeDocumentVersionsOutput) with field(s):
    ///   - [`document_versions(Option<Vec<DocumentVersionMetadata>>)`](crate::output::DescribeDocumentVersionsOutput::document_versions): <p>The document versions.</p>
    ///   - [`marker(Option<String>)`](crate::output::DescribeDocumentVersionsOutput::marker): <p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeDocumentVersionsError>`](crate::error::DescribeDocumentVersionsError)
    pub fn describe_document_versions(
        &self,
    ) -> crate::client::fluent_builders::DescribeDocumentVersions {
        crate::client::fluent_builders::DescribeDocumentVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeFolderContents`](crate::client::fluent_builders::DescribeFolderContents) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeFolderContents::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DescribeFolderContents::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DescribeFolderContents::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`folder_id(impl Into<String>)`](crate::client::fluent_builders::DescribeFolderContents::folder_id) / [`set_folder_id(Option<String>)`](crate::client::fluent_builders::DescribeFolderContents::set_folder_id): <p>The ID of the folder.</p>
    ///   - [`sort(ResourceSortType)`](crate::client::fluent_builders::DescribeFolderContents::sort) / [`set_sort(Option<ResourceSortType>)`](crate::client::fluent_builders::DescribeFolderContents::set_sort): <p>The sorting criteria.</p>
    ///   - [`order(OrderType)`](crate::client::fluent_builders::DescribeFolderContents::order) / [`set_order(Option<OrderType>)`](crate::client::fluent_builders::DescribeFolderContents::set_order): <p>The order for the contents of the folder.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribeFolderContents::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::DescribeFolderContents::set_limit): <p>The maximum number of items to return with this call.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeFolderContents::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeFolderContents::set_marker): <p>The marker for the next set of results. This marker was received from a previous call.</p>
    ///   - [`r#type(FolderContentType)`](crate::client::fluent_builders::DescribeFolderContents::type) / [`set_type(Option<FolderContentType>)`](crate::client::fluent_builders::DescribeFolderContents::set_type): <p>The type of items.</p>
    ///   - [`include(impl Into<String>)`](crate::client::fluent_builders::DescribeFolderContents::include) / [`set_include(Option<String>)`](crate::client::fluent_builders::DescribeFolderContents::set_include): <p>The contents to include. Specify "INITIALIZED" to include initialized documents.</p>
    /// - On success, responds with [`DescribeFolderContentsOutput`](crate::output::DescribeFolderContentsOutput) with field(s):
    ///   - [`folders(Option<Vec<FolderMetadata>>)`](crate::output::DescribeFolderContentsOutput::folders): <p>The subfolders in the specified folder.</p>
    ///   - [`documents(Option<Vec<DocumentMetadata>>)`](crate::output::DescribeFolderContentsOutput::documents): <p>The documents in the specified folder.</p>
    ///   - [`marker(Option<String>)`](crate::output::DescribeFolderContentsOutput::marker): <p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeFolderContentsError>`](crate::error::DescribeFolderContentsError)
    pub fn describe_folder_contents(
        &self,
    ) -> crate::client::fluent_builders::DescribeFolderContents {
        crate::client::fluent_builders::DescribeFolderContents::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeGroups`](crate::client::fluent_builders::DescribeGroups) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DescribeGroups::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DescribeGroups::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`search_query(impl Into<String>)`](crate::client::fluent_builders::DescribeGroups::search_query) / [`set_search_query(Option<String>)`](crate::client::fluent_builders::DescribeGroups::set_search_query): <p>A query to describe groups by group name.</p>
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::DescribeGroups::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::DescribeGroups::set_organization_id): <p>The ID of the organization.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeGroups::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeGroups::set_marker): <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribeGroups::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::DescribeGroups::set_limit): <p>The maximum number of items to return with this call.</p>
    /// - On success, responds with [`DescribeGroupsOutput`](crate::output::DescribeGroupsOutput) with field(s):
    ///   - [`groups(Option<Vec<GroupMetadata>>)`](crate::output::DescribeGroupsOutput::groups): <p>The list of groups.</p>
    ///   - [`marker(Option<String>)`](crate::output::DescribeGroupsOutput::marker): <p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeGroupsError>`](crate::error::DescribeGroupsError)
    pub fn describe_groups(&self) -> crate::client::fluent_builders::DescribeGroups {
        crate::client::fluent_builders::DescribeGroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeNotificationSubscriptions`](crate::client::fluent_builders::DescribeNotificationSubscriptions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::DescribeNotificationSubscriptions::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::DescribeNotificationSubscriptions::set_organization_id): <p>The ID of the organization.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeNotificationSubscriptions::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeNotificationSubscriptions::set_marker): <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribeNotificationSubscriptions::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::DescribeNotificationSubscriptions::set_limit): <p>The maximum number of items to return with this call.</p>
    /// - On success, responds with [`DescribeNotificationSubscriptionsOutput`](crate::output::DescribeNotificationSubscriptionsOutput) with field(s):
    ///   - [`subscriptions(Option<Vec<Subscription>>)`](crate::output::DescribeNotificationSubscriptionsOutput::subscriptions): <p>The subscriptions.</p>
    ///   - [`marker(Option<String>)`](crate::output::DescribeNotificationSubscriptionsOutput::marker): <p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeNotificationSubscriptionsError>`](crate::error::DescribeNotificationSubscriptionsError)
    pub fn describe_notification_subscriptions(
        &self,
    ) -> crate::client::fluent_builders::DescribeNotificationSubscriptions {
        crate::client::fluent_builders::DescribeNotificationSubscriptions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeResourcePermissions`](crate::client::fluent_builders::DescribeResourcePermissions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DescribeResourcePermissions::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DescribeResourcePermissions::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::DescribeResourcePermissions::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::DescribeResourcePermissions::set_resource_id): <p>The ID of the resource.</p>
    ///   - [`principal_id(impl Into<String>)`](crate::client::fluent_builders::DescribeResourcePermissions::principal_id) / [`set_principal_id(Option<String>)`](crate::client::fluent_builders::DescribeResourcePermissions::set_principal_id): <p>The ID of the principal to filter permissions by.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribeResourcePermissions::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::DescribeResourcePermissions::set_limit): <p>The maximum number of items to return with this call.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeResourcePermissions::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeResourcePermissions::set_marker): <p>The marker for the next set of results. (You received this marker from a previous call)</p>
    /// - On success, responds with [`DescribeResourcePermissionsOutput`](crate::output::DescribeResourcePermissionsOutput) with field(s):
    ///   - [`principals(Option<Vec<Principal>>)`](crate::output::DescribeResourcePermissionsOutput::principals): <p>The principals.</p>
    ///   - [`marker(Option<String>)`](crate::output::DescribeResourcePermissionsOutput::marker): <p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeResourcePermissionsError>`](crate::error::DescribeResourcePermissionsError)
    pub fn describe_resource_permissions(
        &self,
    ) -> crate::client::fluent_builders::DescribeResourcePermissions {
        crate::client::fluent_builders::DescribeResourcePermissions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeRootFolders`](crate::client::fluent_builders::DescribeRootFolders) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DescribeRootFolders::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DescribeRootFolders::set_authentication_token): <p>Amazon WorkDocs authentication token.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribeRootFolders::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::DescribeRootFolders::set_limit): <p>The maximum number of items to return.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeRootFolders::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeRootFolders::set_marker): <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
    /// - On success, responds with [`DescribeRootFoldersOutput`](crate::output::DescribeRootFoldersOutput) with field(s):
    ///   - [`folders(Option<Vec<FolderMetadata>>)`](crate::output::DescribeRootFoldersOutput::folders): <p>The user's special folders.</p>
    ///   - [`marker(Option<String>)`](crate::output::DescribeRootFoldersOutput::marker): <p>The marker for the next set of results.</p>
    /// - On failure, responds with [`SdkError<DescribeRootFoldersError>`](crate::error::DescribeRootFoldersError)
    pub fn describe_root_folders(&self) -> crate::client::fluent_builders::DescribeRootFolders {
        crate::client::fluent_builders::DescribeRootFolders::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeUsers`](crate::client::fluent_builders::DescribeUsers) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeUsers::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::DescribeUsers::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::DescribeUsers::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::DescribeUsers::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::DescribeUsers::set_organization_id): <p>The ID of the organization.</p>
    ///   - [`user_ids(impl Into<String>)`](crate::client::fluent_builders::DescribeUsers::user_ids) / [`set_user_ids(Option<String>)`](crate::client::fluent_builders::DescribeUsers::set_user_ids): <p>The IDs of the users.</p>
    ///   - [`query(impl Into<String>)`](crate::client::fluent_builders::DescribeUsers::query) / [`set_query(Option<String>)`](crate::client::fluent_builders::DescribeUsers::set_query): <p>A query to filter users by user name. Remember the following about the <code>Userids</code> and <code>Query</code> parameters:</p>  <ul>   <li> <p>If you don't use either parameter, the API returns a paginated list of all users on the site.</p> </li>   <li> <p>If you use both parameters, the API ignores the <code>Query</code> parameter.</p> </li>   <li> <p>The <code>Userid</code> parameter only returns user names that match a corresponding user ID.</p> </li>   <li> <p>The <code>Query</code> parameter runs a "prefix" search for users by the <code>GivenName</code>, <code>SurName</code>, or <code>UserName</code> fields included in a <a href="https://docs.aws.amazon.com/workdocs/latest/APIReference/API_CreateUser.html">CreateUser</a> API call. For example, querying on <code>Ma</code> returns Márcia Oliveira, María García, and Mateo Jackson. If you use multiple characters, the API only returns data that matches all characters. For example, querying on <code>Ma J</code> only returns Mateo Jackson.</p> </li>  </ul>
    ///   - [`include(UserFilterType)`](crate::client::fluent_builders::DescribeUsers::include) / [`set_include(Option<UserFilterType>)`](crate::client::fluent_builders::DescribeUsers::set_include): <p>The state of the users. Specify "ALL" to include inactive users.</p>
    ///   - [`order(OrderType)`](crate::client::fluent_builders::DescribeUsers::order) / [`set_order(Option<OrderType>)`](crate::client::fluent_builders::DescribeUsers::set_order): <p>The order for the results.</p>
    ///   - [`sort(UserSortType)`](crate::client::fluent_builders::DescribeUsers::sort) / [`set_sort(Option<UserSortType>)`](crate::client::fluent_builders::DescribeUsers::set_sort): <p>The sorting criteria.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeUsers::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeUsers::set_marker): <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribeUsers::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::DescribeUsers::set_limit): <p>The maximum number of items to return.</p>
    ///   - [`fields(impl Into<String>)`](crate::client::fluent_builders::DescribeUsers::fields) / [`set_fields(Option<String>)`](crate::client::fluent_builders::DescribeUsers::set_fields): <p>A comma-separated list of values. Specify "STORAGE_METADATA" to include the user storage quota and utilization information.</p>
    /// - On success, responds with [`DescribeUsersOutput`](crate::output::DescribeUsersOutput) with field(s):
    ///   - [`users(Option<Vec<User>>)`](crate::output::DescribeUsersOutput::users): <p>The users.</p>
    ///   - [`total_number_of_users(Option<i64>)`](crate::output::DescribeUsersOutput::total_number_of_users): <p>The total number of users included in the results.</p>
    ///   - [`marker(Option<String>)`](crate::output::DescribeUsersOutput::marker): <p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeUsersError>`](crate::error::DescribeUsersError)
    pub fn describe_users(&self) -> crate::client::fluent_builders::DescribeUsers {
        crate::client::fluent_builders::DescribeUsers::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCurrentUser`](crate::client::fluent_builders::GetCurrentUser) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::GetCurrentUser::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::GetCurrentUser::set_authentication_token): <p>Amazon WorkDocs authentication token.</p>
    /// - On success, responds with [`GetCurrentUserOutput`](crate::output::GetCurrentUserOutput) with field(s):
    ///   - [`user(Option<User>)`](crate::output::GetCurrentUserOutput::user): <p>Metadata of the user.</p>
    /// - On failure, responds with [`SdkError<GetCurrentUserError>`](crate::error::GetCurrentUserError)
    pub fn get_current_user(&self) -> crate::client::fluent_builders::GetCurrentUser {
        crate::client::fluent_builders::GetCurrentUser::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDocument`](crate::client::fluent_builders::GetDocument) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::GetDocument::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::GetDocument::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::GetDocument::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::GetDocument::set_document_id): <p>The ID of the document.</p>
    ///   - [`include_custom_metadata(bool)`](crate::client::fluent_builders::GetDocument::include_custom_metadata) / [`set_include_custom_metadata(bool)`](crate::client::fluent_builders::GetDocument::set_include_custom_metadata): <p>Set this to <code>TRUE</code> to include custom metadata in the response.</p>
    /// - On success, responds with [`GetDocumentOutput`](crate::output::GetDocumentOutput) with field(s):
    ///   - [`metadata(Option<DocumentMetadata>)`](crate::output::GetDocumentOutput::metadata): <p>The metadata details of the document.</p>
    ///   - [`custom_metadata(Option<HashMap<String, String>>)`](crate::output::GetDocumentOutput::custom_metadata): <p>The custom metadata on the document.</p>
    /// - On failure, responds with [`SdkError<GetDocumentError>`](crate::error::GetDocumentError)
    pub fn get_document(&self) -> crate::client::fluent_builders::GetDocument {
        crate::client::fluent_builders::GetDocument::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDocumentPath`](crate::client::fluent_builders::GetDocumentPath) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::GetDocumentPath::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::GetDocumentPath::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::GetDocumentPath::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::GetDocumentPath::set_document_id): <p>The ID of the document.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::GetDocumentPath::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::GetDocumentPath::set_limit): <p>The maximum number of levels in the hierarchy to return.</p>
    ///   - [`fields(impl Into<String>)`](crate::client::fluent_builders::GetDocumentPath::fields) / [`set_fields(Option<String>)`](crate::client::fluent_builders::GetDocumentPath::set_fields): <p>A comma-separated list of values. Specify <code>NAME</code> to include the names of the parent folders.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::GetDocumentPath::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::GetDocumentPath::set_marker): <p>This value is not supported.</p>
    /// - On success, responds with [`GetDocumentPathOutput`](crate::output::GetDocumentPathOutput) with field(s):
    ///   - [`path(Option<ResourcePath>)`](crate::output::GetDocumentPathOutput::path): <p>The path information.</p>
    /// - On failure, responds with [`SdkError<GetDocumentPathError>`](crate::error::GetDocumentPathError)
    pub fn get_document_path(&self) -> crate::client::fluent_builders::GetDocumentPath {
        crate::client::fluent_builders::GetDocumentPath::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDocumentVersion`](crate::client::fluent_builders::GetDocumentVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::GetDocumentVersion::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::GetDocumentVersion::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::GetDocumentVersion::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::GetDocumentVersion::set_document_id): <p>The ID of the document.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::GetDocumentVersion::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::GetDocumentVersion::set_version_id): <p>The version ID of the document.</p>
    ///   - [`fields(impl Into<String>)`](crate::client::fluent_builders::GetDocumentVersion::fields) / [`set_fields(Option<String>)`](crate::client::fluent_builders::GetDocumentVersion::set_fields): <p>A comma-separated list of values. Specify "SOURCE" to include a URL for the source document.</p>
    ///   - [`include_custom_metadata(bool)`](crate::client::fluent_builders::GetDocumentVersion::include_custom_metadata) / [`set_include_custom_metadata(bool)`](crate::client::fluent_builders::GetDocumentVersion::set_include_custom_metadata): <p>Set this to TRUE to include custom metadata in the response.</p>
    /// - On success, responds with [`GetDocumentVersionOutput`](crate::output::GetDocumentVersionOutput) with field(s):
    ///   - [`metadata(Option<DocumentVersionMetadata>)`](crate::output::GetDocumentVersionOutput::metadata): <p>The version metadata.</p>
    ///   - [`custom_metadata(Option<HashMap<String, String>>)`](crate::output::GetDocumentVersionOutput::custom_metadata): <p>The custom metadata on the document version.</p>
    /// - On failure, responds with [`SdkError<GetDocumentVersionError>`](crate::error::GetDocumentVersionError)
    pub fn get_document_version(&self) -> crate::client::fluent_builders::GetDocumentVersion {
        crate::client::fluent_builders::GetDocumentVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetFolder`](crate::client::fluent_builders::GetFolder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::GetFolder::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::GetFolder::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`folder_id(impl Into<String>)`](crate::client::fluent_builders::GetFolder::folder_id) / [`set_folder_id(Option<String>)`](crate::client::fluent_builders::GetFolder::set_folder_id): <p>The ID of the folder.</p>
    ///   - [`include_custom_metadata(bool)`](crate::client::fluent_builders::GetFolder::include_custom_metadata) / [`set_include_custom_metadata(bool)`](crate::client::fluent_builders::GetFolder::set_include_custom_metadata): <p>Set to TRUE to include custom metadata in the response.</p>
    /// - On success, responds with [`GetFolderOutput`](crate::output::GetFolderOutput) with field(s):
    ///   - [`metadata(Option<FolderMetadata>)`](crate::output::GetFolderOutput::metadata): <p>The metadata of the folder.</p>
    ///   - [`custom_metadata(Option<HashMap<String, String>>)`](crate::output::GetFolderOutput::custom_metadata): <p>The custom metadata on the folder.</p>
    /// - On failure, responds with [`SdkError<GetFolderError>`](crate::error::GetFolderError)
    pub fn get_folder(&self) -> crate::client::fluent_builders::GetFolder {
        crate::client::fluent_builders::GetFolder::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetFolderPath`](crate::client::fluent_builders::GetFolderPath) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::GetFolderPath::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::GetFolderPath::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`folder_id(impl Into<String>)`](crate::client::fluent_builders::GetFolderPath::folder_id) / [`set_folder_id(Option<String>)`](crate::client::fluent_builders::GetFolderPath::set_folder_id): <p>The ID of the folder.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::GetFolderPath::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::GetFolderPath::set_limit): <p>The maximum number of levels in the hierarchy to return.</p>
    ///   - [`fields(impl Into<String>)`](crate::client::fluent_builders::GetFolderPath::fields) / [`set_fields(Option<String>)`](crate::client::fluent_builders::GetFolderPath::set_fields): <p>A comma-separated list of values. Specify "NAME" to include the names of the parent folders.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::GetFolderPath::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::GetFolderPath::set_marker): <p>This value is not supported.</p>
    /// - On success, responds with [`GetFolderPathOutput`](crate::output::GetFolderPathOutput) with field(s):
    ///   - [`path(Option<ResourcePath>)`](crate::output::GetFolderPathOutput::path): <p>The path information.</p>
    /// - On failure, responds with [`SdkError<GetFolderPathError>`](crate::error::GetFolderPathError)
    pub fn get_folder_path(&self) -> crate::client::fluent_builders::GetFolderPath {
        crate::client::fluent_builders::GetFolderPath::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetResources`](crate::client::fluent_builders::GetResources) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::GetResources::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::GetResources::set_authentication_token): <p>The Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::GetResources::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::GetResources::set_user_id): <p>The user ID for the resource collection. This is a required field for accessing the API operation using IAM credentials.</p>
    ///   - [`collection_type(ResourceCollectionType)`](crate::client::fluent_builders::GetResources::collection_type) / [`set_collection_type(Option<ResourceCollectionType>)`](crate::client::fluent_builders::GetResources::set_collection_type): <p>The collection type.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::GetResources::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::GetResources::set_limit): <p>The maximum number of resources to return.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::GetResources::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::GetResources::set_marker): <p>The marker for the next set of results. This marker was received from a previous call.</p>
    /// - On success, responds with [`GetResourcesOutput`](crate::output::GetResourcesOutput) with field(s):
    ///   - [`folders(Option<Vec<FolderMetadata>>)`](crate::output::GetResourcesOutput::folders): <p>The folders in the specified folder.</p>
    ///   - [`documents(Option<Vec<DocumentMetadata>>)`](crate::output::GetResourcesOutput::documents): <p>The documents in the specified collection.</p>
    ///   - [`marker(Option<String>)`](crate::output::GetResourcesOutput::marker): <p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>
    /// - On failure, responds with [`SdkError<GetResourcesError>`](crate::error::GetResourcesError)
    pub fn get_resources(&self) -> crate::client::fluent_builders::GetResources {
        crate::client::fluent_builders::GetResources::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`InitiateDocumentVersionUpload`](crate::client::fluent_builders::InitiateDocumentVersionUpload) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::set_id): <p>The ID of the document.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::set_name): <p>The name of the document.</p>
    ///   - [`content_created_timestamp(DateTime)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::content_created_timestamp) / [`set_content_created_timestamp(Option<DateTime>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::set_content_created_timestamp): <p>The timestamp when the content of the document was originally created.</p>
    ///   - [`content_modified_timestamp(DateTime)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::content_modified_timestamp) / [`set_content_modified_timestamp(Option<DateTime>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::set_content_modified_timestamp): <p>The timestamp when the content of the document was modified.</p>
    ///   - [`content_type(impl Into<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::content_type) / [`set_content_type(Option<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::set_content_type): <p>The content type of the document.</p>
    ///   - [`document_size_in_bytes(i64)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::document_size_in_bytes) / [`set_document_size_in_bytes(Option<i64>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::set_document_size_in_bytes): <p>The size of the document, in bytes.</p>
    ///   - [`parent_folder_id(impl Into<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::parent_folder_id) / [`set_parent_folder_id(Option<String>)`](crate::client::fluent_builders::InitiateDocumentVersionUpload::set_parent_folder_id): <p>The ID of the parent folder.</p>
    /// - On success, responds with [`InitiateDocumentVersionUploadOutput`](crate::output::InitiateDocumentVersionUploadOutput) with field(s):
    ///   - [`metadata(Option<DocumentMetadata>)`](crate::output::InitiateDocumentVersionUploadOutput::metadata): <p>The document metadata.</p>
    ///   - [`upload_metadata(Option<UploadMetadata>)`](crate::output::InitiateDocumentVersionUploadOutput::upload_metadata): <p>The upload metadata.</p>
    /// - On failure, responds with [`SdkError<InitiateDocumentVersionUploadError>`](crate::error::InitiateDocumentVersionUploadError)
    pub fn initiate_document_version_upload(
        &self,
    ) -> crate::client::fluent_builders::InitiateDocumentVersionUpload {
        crate::client::fluent_builders::InitiateDocumentVersionUpload::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RemoveAllResourcePermissions`](crate::client::fluent_builders::RemoveAllResourcePermissions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::RemoveAllResourcePermissions::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::RemoveAllResourcePermissions::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::RemoveAllResourcePermissions::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::RemoveAllResourcePermissions::set_resource_id): <p>The ID of the resource.</p>
    /// - On success, responds with [`RemoveAllResourcePermissionsOutput`](crate::output::RemoveAllResourcePermissionsOutput)

    /// - On failure, responds with [`SdkError<RemoveAllResourcePermissionsError>`](crate::error::RemoveAllResourcePermissionsError)
    pub fn remove_all_resource_permissions(
        &self,
    ) -> crate::client::fluent_builders::RemoveAllResourcePermissions {
        crate::client::fluent_builders::RemoveAllResourcePermissions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RemoveResourcePermission`](crate::client::fluent_builders::RemoveResourcePermission) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::RemoveResourcePermission::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::RemoveResourcePermission::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::RemoveResourcePermission::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::RemoveResourcePermission::set_resource_id): <p>The ID of the resource.</p>
    ///   - [`principal_id(impl Into<String>)`](crate::client::fluent_builders::RemoveResourcePermission::principal_id) / [`set_principal_id(Option<String>)`](crate::client::fluent_builders::RemoveResourcePermission::set_principal_id): <p>The principal ID of the resource.</p>
    ///   - [`principal_type(PrincipalType)`](crate::client::fluent_builders::RemoveResourcePermission::principal_type) / [`set_principal_type(Option<PrincipalType>)`](crate::client::fluent_builders::RemoveResourcePermission::set_principal_type): <p>The principal type of the resource.</p>
    /// - On success, responds with [`RemoveResourcePermissionOutput`](crate::output::RemoveResourcePermissionOutput)

    /// - On failure, responds with [`SdkError<RemoveResourcePermissionError>`](crate::error::RemoveResourcePermissionError)
    pub fn remove_resource_permission(
        &self,
    ) -> crate::client::fluent_builders::RemoveResourcePermission {
        crate::client::fluent_builders::RemoveResourcePermission::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RestoreDocumentVersions`](crate::client::fluent_builders::RestoreDocumentVersions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::RestoreDocumentVersions::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::RestoreDocumentVersions::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::RestoreDocumentVersions::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::RestoreDocumentVersions::set_document_id): <p>The ID of the document.</p>
    /// - On success, responds with [`RestoreDocumentVersionsOutput`](crate::output::RestoreDocumentVersionsOutput)

    /// - On failure, responds with [`SdkError<RestoreDocumentVersionsError>`](crate::error::RestoreDocumentVersionsError)
    pub fn restore_document_versions(
        &self,
    ) -> crate::client::fluent_builders::RestoreDocumentVersions {
        crate::client::fluent_builders::RestoreDocumentVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateDocument`](crate::client::fluent_builders::UpdateDocument) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::UpdateDocument::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::UpdateDocument::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::UpdateDocument::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::UpdateDocument::set_document_id): <p>The ID of the document.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateDocument::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateDocument::set_name): <p>The name of the document.</p>
    ///   - [`parent_folder_id(impl Into<String>)`](crate::client::fluent_builders::UpdateDocument::parent_folder_id) / [`set_parent_folder_id(Option<String>)`](crate::client::fluent_builders::UpdateDocument::set_parent_folder_id): <p>The ID of the parent folder.</p>
    ///   - [`resource_state(ResourceStateType)`](crate::client::fluent_builders::UpdateDocument::resource_state) / [`set_resource_state(Option<ResourceStateType>)`](crate::client::fluent_builders::UpdateDocument::set_resource_state): <p>The resource state of the document. Only ACTIVE and RECYCLED are supported.</p>
    /// - On success, responds with [`UpdateDocumentOutput`](crate::output::UpdateDocumentOutput)

    /// - On failure, responds with [`SdkError<UpdateDocumentError>`](crate::error::UpdateDocumentError)
    pub fn update_document(&self) -> crate::client::fluent_builders::UpdateDocument {
        crate::client::fluent_builders::UpdateDocument::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateDocumentVersion`](crate::client::fluent_builders::UpdateDocumentVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::UpdateDocumentVersion::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::UpdateDocumentVersion::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::client::fluent_builders::UpdateDocumentVersion::document_id) / [`set_document_id(Option<String>)`](crate::client::fluent_builders::UpdateDocumentVersion::set_document_id): <p>The ID of the document.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::UpdateDocumentVersion::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::UpdateDocumentVersion::set_version_id): <p>The version ID of the document.</p>
    ///   - [`version_status(DocumentVersionStatus)`](crate::client::fluent_builders::UpdateDocumentVersion::version_status) / [`set_version_status(Option<DocumentVersionStatus>)`](crate::client::fluent_builders::UpdateDocumentVersion::set_version_status): <p>The status of the version.</p>
    /// - On success, responds with [`UpdateDocumentVersionOutput`](crate::output::UpdateDocumentVersionOutput)

    /// - On failure, responds with [`SdkError<UpdateDocumentVersionError>`](crate::error::UpdateDocumentVersionError)
    pub fn update_document_version(&self) -> crate::client::fluent_builders::UpdateDocumentVersion {
        crate::client::fluent_builders::UpdateDocumentVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateFolder`](crate::client::fluent_builders::UpdateFolder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::UpdateFolder::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::UpdateFolder::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`folder_id(impl Into<String>)`](crate::client::fluent_builders::UpdateFolder::folder_id) / [`set_folder_id(Option<String>)`](crate::client::fluent_builders::UpdateFolder::set_folder_id): <p>The ID of the folder.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateFolder::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateFolder::set_name): <p>The name of the folder.</p>
    ///   - [`parent_folder_id(impl Into<String>)`](crate::client::fluent_builders::UpdateFolder::parent_folder_id) / [`set_parent_folder_id(Option<String>)`](crate::client::fluent_builders::UpdateFolder::set_parent_folder_id): <p>The ID of the parent folder.</p>
    ///   - [`resource_state(ResourceStateType)`](crate::client::fluent_builders::UpdateFolder::resource_state) / [`set_resource_state(Option<ResourceStateType>)`](crate::client::fluent_builders::UpdateFolder::set_resource_state): <p>The resource state of the folder. Only ACTIVE and RECYCLED are accepted values from the API.</p>
    /// - On success, responds with [`UpdateFolderOutput`](crate::output::UpdateFolderOutput)

    /// - On failure, responds with [`SdkError<UpdateFolderError>`](crate::error::UpdateFolderError)
    pub fn update_folder(&self) -> crate::client::fluent_builders::UpdateFolder {
        crate::client::fluent_builders::UpdateFolder::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateUser`](crate::client::fluent_builders::UpdateUser) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::UpdateUser::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::UpdateUser::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::UpdateUser::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::UpdateUser::set_user_id): <p>The ID of the user.</p>
    ///   - [`given_name(impl Into<String>)`](crate::client::fluent_builders::UpdateUser::given_name) / [`set_given_name(Option<String>)`](crate::client::fluent_builders::UpdateUser::set_given_name): <p>The given name of the user.</p>
    ///   - [`surname(impl Into<String>)`](crate::client::fluent_builders::UpdateUser::surname) / [`set_surname(Option<String>)`](crate::client::fluent_builders::UpdateUser::set_surname): <p>The surname of the user.</p>
    ///   - [`r#type(UserType)`](crate::client::fluent_builders::UpdateUser::type) / [`set_type(Option<UserType>)`](crate::client::fluent_builders::UpdateUser::set_type): <p>The type of the user.</p>
    ///   - [`storage_rule(StorageRuleType)`](crate::client::fluent_builders::UpdateUser::storage_rule) / [`set_storage_rule(Option<StorageRuleType>)`](crate::client::fluent_builders::UpdateUser::set_storage_rule): <p>The amount of storage for the user.</p>
    ///   - [`time_zone_id(impl Into<String>)`](crate::client::fluent_builders::UpdateUser::time_zone_id) / [`set_time_zone_id(Option<String>)`](crate::client::fluent_builders::UpdateUser::set_time_zone_id): <p>The time zone ID of the user.</p>
    ///   - [`locale(LocaleType)`](crate::client::fluent_builders::UpdateUser::locale) / [`set_locale(Option<LocaleType>)`](crate::client::fluent_builders::UpdateUser::set_locale): <p>The locale of the user.</p>
    ///   - [`grant_poweruser_privileges(BooleanEnumType)`](crate::client::fluent_builders::UpdateUser::grant_poweruser_privileges) / [`set_grant_poweruser_privileges(Option<BooleanEnumType>)`](crate::client::fluent_builders::UpdateUser::set_grant_poweruser_privileges): <p>Boolean value to determine whether the user is granted Poweruser privileges.</p>
    /// - On success, responds with [`UpdateUserOutput`](crate::output::UpdateUserOutput) with field(s):
    ///   - [`user(Option<User>)`](crate::output::UpdateUserOutput::user): <p>The user information.</p>
    /// - On failure, responds with [`SdkError<UpdateUserError>`](crate::error::UpdateUserError)
    pub fn update_user(&self) -> crate::client::fluent_builders::UpdateUser {
        crate::client::fluent_builders::UpdateUser::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
