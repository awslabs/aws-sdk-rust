// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteNotificationSubscriptionInput {
    /// <p>The ID of the subscription.</p>
    #[doc(hidden)]
    pub subscription_id: std::option::Option<std::string::String>,
    /// <p>The ID of the organization.</p>
    #[doc(hidden)]
    pub organization_id: std::option::Option<std::string::String>,
}
impl DeleteNotificationSubscriptionInput {
    /// <p>The ID of the subscription.</p>
    pub fn subscription_id(&self) -> std::option::Option<&str> {
        self.subscription_id.as_deref()
    }
    /// <p>The ID of the organization.</p>
    pub fn organization_id(&self) -> std::option::Option<&str> {
        self.organization_id.as_deref()
    }
}
impl DeleteNotificationSubscriptionInput {
    /// Creates a new builder-style object to manufacture [`DeleteNotificationSubscriptionInput`](crate::operation::delete_notification_subscription::DeleteNotificationSubscriptionInput).
    pub fn builder() -> crate::operation::delete_notification_subscription::builders::DeleteNotificationSubscriptionInputBuilder{
        crate::operation::delete_notification_subscription::builders::DeleteNotificationSubscriptionInputBuilder::default()
    }
}

/// A builder for [`DeleteNotificationSubscriptionInput`](crate::operation::delete_notification_subscription::DeleteNotificationSubscriptionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteNotificationSubscriptionInputBuilder {
    pub(crate) subscription_id: std::option::Option<std::string::String>,
    pub(crate) organization_id: std::option::Option<std::string::String>,
}
impl DeleteNotificationSubscriptionInputBuilder {
    /// <p>The ID of the subscription.</p>
    pub fn subscription_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.subscription_id = Some(input.into());
        self
    }
    /// <p>The ID of the subscription.</p>
    pub fn set_subscription_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.subscription_id = input;
        self
    }
    /// <p>The ID of the organization.</p>
    pub fn organization_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organization_id = Some(input.into());
        self
    }
    /// <p>The ID of the organization.</p>
    pub fn set_organization_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.organization_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteNotificationSubscriptionInput`](crate::operation::delete_notification_subscription::DeleteNotificationSubscriptionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_notification_subscription::DeleteNotificationSubscriptionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_notification_subscription::DeleteNotificationSubscriptionInput {
                subscription_id: self.subscription_id
                ,
                organization_id: self.organization_id
                ,
            }
        )
    }
}
