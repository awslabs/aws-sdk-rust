// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_abort_document_version_upload;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_activate_user;

pub(crate) mod shape_add_resource_permissions;

pub(crate) mod shape_create_comment;

pub(crate) mod shape_create_custom_metadata;

pub(crate) mod shape_create_folder;

pub(crate) mod shape_create_labels;

pub(crate) mod shape_create_notification_subscription;

pub(crate) mod shape_create_user;

pub(crate) mod shape_deactivate_user;

pub(crate) mod shape_delete_comment;

pub(crate) mod shape_delete_custom_metadata;

pub(crate) mod shape_delete_document;

pub(crate) mod shape_delete_document_version;

pub(crate) mod shape_delete_folder;

pub(crate) mod shape_delete_folder_contents;

pub(crate) mod shape_delete_labels;

pub(crate) mod shape_delete_notification_subscription;

pub(crate) mod shape_delete_user;

pub(crate) mod shape_describe_activities;

pub(crate) mod shape_describe_comments;

pub(crate) mod shape_describe_document_versions;

pub(crate) mod shape_describe_folder_contents;

pub(crate) mod shape_describe_groups;

pub(crate) mod shape_describe_notification_subscriptions;

pub(crate) mod shape_describe_resource_permissions;

pub(crate) mod shape_describe_root_folders;

pub(crate) mod shape_describe_users;

pub(crate) mod shape_get_current_user;

pub(crate) mod shape_get_document;

pub(crate) mod shape_get_document_path;

pub(crate) mod shape_get_document_version;

pub(crate) mod shape_get_folder;

pub(crate) mod shape_get_folder_path;

pub(crate) mod shape_get_resources;

pub(crate) mod shape_initiate_document_version_upload;

pub(crate) mod shape_remove_all_resource_permissions;

pub(crate) mod shape_remove_resource_permission;

pub(crate) mod shape_restore_document_versions;

pub(crate) mod shape_update_document;

pub(crate) mod shape_update_document_version;

pub(crate) mod shape_update_folder;

pub(crate) mod shape_update_user;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_add_resource_permissions_input;

pub(crate) mod shape_concurrent_modification_exception;

pub(crate) mod shape_conflicting_operation_exception;

pub(crate) mod shape_create_comment_input;

pub(crate) mod shape_create_custom_metadata_input;

pub(crate) mod shape_create_folder_input;

pub(crate) mod shape_create_labels_input;

pub(crate) mod shape_create_notification_subscription_input;

pub(crate) mod shape_create_user_input;

pub(crate) mod shape_custom_metadata_limit_exceeded_exception;

pub(crate) mod shape_deactivating_last_system_user_exception;

pub(crate) mod shape_document_locked_for_comments_exception;

pub(crate) mod shape_draft_upload_out_of_sync_exception;

pub(crate) mod shape_entity_already_exists_exception;

pub(crate) mod shape_entity_not_exists_exception;

pub(crate) mod shape_failed_dependency_exception;

pub(crate) mod shape_illegal_user_state_exception;

pub(crate) mod shape_initiate_document_version_upload_input;

pub(crate) mod shape_invalid_argument_exception;

pub(crate) mod shape_invalid_comment_operation_exception;

pub(crate) mod shape_invalid_operation_exception;

pub(crate) mod shape_invalid_password_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_prohibited_state_exception;

pub(crate) mod shape_requested_entity_too_large_exception;

pub(crate) mod shape_resource_already_checked_out_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_storage_limit_exceeded_exception;

pub(crate) mod shape_storage_limit_will_exceed_exception;

pub(crate) mod shape_too_many_labels_exception;

pub(crate) mod shape_too_many_subscriptions_exception;

pub(crate) mod shape_unauthorized_operation_exception;

pub(crate) mod shape_unauthorized_resource_access_exception;

pub(crate) mod shape_update_document_input;

pub(crate) mod shape_update_document_version_input;

pub(crate) mod shape_update_folder_input;

pub(crate) mod shape_update_user_input;

pub(crate) mod shape_comment;

pub(crate) mod shape_comment_list;

pub(crate) mod shape_custom_metadata_map;

pub(crate) mod shape_document_metadata;

pub(crate) mod shape_document_metadata_list;

pub(crate) mod shape_document_version_metadata;

pub(crate) mod shape_document_version_metadata_list;

pub(crate) mod shape_entity_id_list;

pub(crate) mod shape_folder_metadata;

pub(crate) mod shape_folder_metadata_list;

pub(crate) mod shape_group_metadata_list;

pub(crate) mod shape_notification_options;

pub(crate) mod shape_organization_user_list;

pub(crate) mod shape_principal_list;

pub(crate) mod shape_resource_path;

pub(crate) mod shape_share_principal;

pub(crate) mod shape_share_results_list;

pub(crate) mod shape_storage_rule_type;

pub(crate) mod shape_subscription;

pub(crate) mod shape_subscription_list;

pub(crate) mod shape_upload_metadata;

pub(crate) mod shape_user;

pub(crate) mod shape_user_activities;

pub(crate) mod shape_activity;

pub(crate) mod shape_document_source_url_map;

pub(crate) mod shape_document_thumbnail_url_map;

pub(crate) mod shape_group_metadata;

pub(crate) mod shape_principal;

pub(crate) mod shape_resource_path_component_list;

pub(crate) mod shape_share_result;

pub(crate) mod shape_shared_labels;

pub(crate) mod shape_signed_header_map;

pub(crate) mod shape_user_storage_metadata;

pub(crate) mod shape_comment_metadata;

pub(crate) mod shape_participants;

pub(crate) mod shape_permission_info_list;

pub(crate) mod shape_resource_metadata;

pub(crate) mod shape_resource_path_component;

pub(crate) mod shape_user_metadata;

pub(crate) mod shape_permission_info;

pub(crate) mod shape_user_metadata_list;
