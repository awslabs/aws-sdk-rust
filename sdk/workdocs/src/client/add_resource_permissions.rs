// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AddResourcePermissions`](crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder::authentication_token) / [`set_authentication_token(Option<String>)`](crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder::set_authentication_token):<br>required: **false**<br><p>Amazon WorkDocs authentication token. Not required when using Amazon Web Services administrator credentials to access the API.</p><br>
    ///   - [`resource_id(impl Into<String>)`](crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder::resource_id) / [`set_resource_id(Option<String>)`](crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder::set_resource_id):<br>required: **true**<br><p>The ID of the resource.</p><br>
    ///   - [`principals(SharePrincipal)`](crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder::principals) / [`set_principals(Option<Vec::<SharePrincipal>>)`](crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder::set_principals):<br>required: **true**<br><p>The users, groups, or organization being granted permission.</p><br>
    ///   - [`notification_options(NotificationOptions)`](crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder::notification_options) / [`set_notification_options(Option<NotificationOptions>)`](crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder::set_notification_options):<br>required: **false**<br><p>The notification options.</p><br>
    /// - On success, responds with [`AddResourcePermissionsOutput`](crate::operation::add_resource_permissions::AddResourcePermissionsOutput) with field(s):
    ///   - [`share_results(Option<Vec::<ShareResult>>)`](crate::operation::add_resource_permissions::AddResourcePermissionsOutput::share_results): <p>The share results.</p>
    /// - On failure, responds with [`SdkError<AddResourcePermissionsError>`](crate::operation::add_resource_permissions::AddResourcePermissionsError)
    pub fn add_resource_permissions(&self) -> crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder {
        crate::operation::add_resource_permissions::builders::AddResourcePermissionsFluentBuilder::new(self.handle.clone())
    }
}
