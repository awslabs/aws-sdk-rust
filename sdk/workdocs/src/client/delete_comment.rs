// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteComment`](crate::operation::delete_comment::builders::DeleteCommentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::operation::delete_comment::builders::DeleteCommentFluentBuilder::authentication_token) / [`set_authentication_token(Option<String>)`](crate::operation::delete_comment::builders::DeleteCommentFluentBuilder::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::operation::delete_comment::builders::DeleteCommentFluentBuilder::document_id) / [`set_document_id(Option<String>)`](crate::operation::delete_comment::builders::DeleteCommentFluentBuilder::set_document_id): <p>The ID of the document.</p>
    ///   - [`version_id(impl Into<String>)`](crate::operation::delete_comment::builders::DeleteCommentFluentBuilder::version_id) / [`set_version_id(Option<String>)`](crate::operation::delete_comment::builders::DeleteCommentFluentBuilder::set_version_id): <p>The ID of the document version.</p>
    ///   - [`comment_id(impl Into<String>)`](crate::operation::delete_comment::builders::DeleteCommentFluentBuilder::comment_id) / [`set_comment_id(Option<String>)`](crate::operation::delete_comment::builders::DeleteCommentFluentBuilder::set_comment_id): <p>The ID of the comment.</p>
    /// - On success, responds with [`DeleteCommentOutput`](crate::operation::delete_comment::DeleteCommentOutput)
    /// - On failure, responds with [`SdkError<DeleteCommentError>`](crate::operation::delete_comment::DeleteCommentError)
    pub fn delete_comment(
        &self,
    ) -> crate::operation::delete_comment::builders::DeleteCommentFluentBuilder {
        crate::operation::delete_comment::builders::DeleteCommentFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
