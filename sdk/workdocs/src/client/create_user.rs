// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateUser`](crate::operation::create_user::builders::CreateUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_organization_id): <p>The ID of the organization.</p>
    ///   - [`username(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_username): <p>The login name of the user.</p>
    ///   - [`email_address(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::email_address) / [`set_email_address(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_email_address): <p>The email address of the user.</p>
    ///   - [`given_name(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::given_name) / [`set_given_name(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_given_name): <p>The given name of the user.</p>
    ///   - [`surname(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::surname) / [`set_surname(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_surname): <p>The surname of the user.</p>
    ///   - [`password(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::password) / [`set_password(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_password): <p>The password of the user.</p>
    ///   - [`time_zone_id(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::time_zone_id) / [`set_time_zone_id(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_time_zone_id): <p>The time zone ID of the user.</p>
    ///   - [`storage_rule(StorageRuleType)`](crate::operation::create_user::builders::CreateUserFluentBuilder::storage_rule) / [`set_storage_rule(Option<StorageRuleType>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_storage_rule): <p>The amount of storage for the user.</p>
    ///   - [`authentication_token(impl Into<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::authentication_token) / [`set_authentication_token(Option<String>)`](crate::operation::create_user::builders::CreateUserFluentBuilder::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    /// - On success, responds with [`CreateUserOutput`](crate::operation::create_user::CreateUserOutput) with field(s):
    ///   - [`user(Option<User>)`](crate::operation::create_user::CreateUserOutput::user): <p>The user information.</p>
    /// - On failure, responds with [`SdkError<CreateUserError>`](crate::operation::create_user::CreateUserError)
    pub fn create_user(&self) -> crate::operation::create_user::builders::CreateUserFluentBuilder {
        crate::operation::create_user::builders::CreateUserFluentBuilder::new(self.handle.clone())
    }
}
