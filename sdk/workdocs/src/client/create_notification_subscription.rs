// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateNotificationSubscription`](crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_id(impl Into<String>)`](crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder::organization_id) / [`set_organization_id(Option<String>)`](crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder::set_organization_id):<br>required: **true**<br><p>The ID of the organization.</p><br>
    ///   - [`endpoint(impl Into<String>)`](crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder::endpoint) / [`set_endpoint(Option<String>)`](crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder::set_endpoint):<br>required: **true**<br><p>The endpoint to receive the notifications. If the protocol is HTTPS, the endpoint is a URL that begins with <code>https</code>.</p><br>
    ///   - [`protocol(SubscriptionProtocolType)`](crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder::protocol) / [`set_protocol(Option<SubscriptionProtocolType>)`](crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder::set_protocol):<br>required: **true**<br><p>The protocol to use. The supported value is https, which delivers JSON-encoded messages using HTTPS POST.</p><br>
    ///   - [`subscription_type(SubscriptionType)`](crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder::subscription_type) / [`set_subscription_type(Option<SubscriptionType>)`](crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder::set_subscription_type):<br>required: **true**<br><p>The notification type.</p><br>
    /// - On success, responds with [`CreateNotificationSubscriptionOutput`](crate::operation::create_notification_subscription::CreateNotificationSubscriptionOutput) with field(s):
    ///   - [`subscription(Option<Subscription>)`](crate::operation::create_notification_subscription::CreateNotificationSubscriptionOutput::subscription): <p>The subscription.</p>
    /// - On failure, responds with [`SdkError<CreateNotificationSubscriptionError>`](crate::operation::create_notification_subscription::CreateNotificationSubscriptionError)
    pub fn create_notification_subscription(
        &self,
    ) -> crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder {
        crate::operation::create_notification_subscription::builders::CreateNotificationSubscriptionFluentBuilder::new(self.handle.clone())
    }
}
