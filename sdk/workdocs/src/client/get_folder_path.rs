// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetFolderPath`](crate::client::fluent_builders::GetFolderPath) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::client::fluent_builders::GetFolderPath::authentication_token) / [`set_authentication_token(Option<String>)`](crate::client::fluent_builders::GetFolderPath::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`folder_id(impl Into<String>)`](crate::client::fluent_builders::GetFolderPath::folder_id) / [`set_folder_id(Option<String>)`](crate::client::fluent_builders::GetFolderPath::set_folder_id): <p>The ID of the folder.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::GetFolderPath::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::GetFolderPath::set_limit): <p>The maximum number of levels in the hierarchy to return.</p>
    ///   - [`fields(impl Into<String>)`](crate::client::fluent_builders::GetFolderPath::fields) / [`set_fields(Option<String>)`](crate::client::fluent_builders::GetFolderPath::set_fields): <p>A comma-separated list of values. Specify "NAME" to include the names of the parent folders.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::GetFolderPath::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::GetFolderPath::set_marker): <p>This value is not supported.</p>
    /// - On success, responds with [`GetFolderPathOutput`](crate::output::GetFolderPathOutput) with field(s):
    ///   - [`path(Option<ResourcePath>)`](crate::output::GetFolderPathOutput::path): <p>The path information.</p>
    /// - On failure, responds with [`SdkError<GetFolderPathError>`](crate::error::GetFolderPathError)
    pub fn get_folder_path(&self) -> crate::client::fluent_builders::GetFolderPath {
        crate::client::fluent_builders::GetFolderPath::new(self.handle.clone())
    }
}
