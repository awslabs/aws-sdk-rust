// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDocumentVersion`](crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder::authentication_token) / [`set_authentication_token(Option<String>)`](crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder::set_authentication_token): <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    ///   - [`document_id(impl Into<String>)`](crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder::document_id) / [`set_document_id(Option<String>)`](crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder::set_document_id): <p>The ID of a document.</p>
    ///   - [`version_id(impl Into<String>)`](crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder::version_id) / [`set_version_id(Option<String>)`](crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder::set_version_id): <p>The version ID of a document.</p>
    ///   - [`delete_prior_versions(bool)`](crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder::delete_prior_versions) / [`set_delete_prior_versions(bool)`](crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder::set_delete_prior_versions): <p>When set to <code>TRUE</code>, deletes the specified version and <i>all prior versions</i> of a document.</p>
    /// - On success, responds with [`DeleteDocumentVersionOutput`](crate::operation::delete_document_version::DeleteDocumentVersionOutput)
    /// - On failure, responds with [`SdkError<DeleteDocumentVersionError>`](crate::operation::delete_document_version::DeleteDocumentVersionError)
    pub fn delete_document_version(
        &self,
    ) -> crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder
    {
        crate::operation::delete_document_version::builders::DeleteDocumentVersionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
