// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateComment`](crate::operation::create_comment::builders::CreateCommentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`authentication_token(impl Into<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::authentication_token) / [`set_authentication_token(Option<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::set_authentication_token):<br>required: **false**<br><p>Amazon WorkDocs authentication token. Not required when using Amazon Web Services administrator credentials to access the API.</p><br>
    ///   - [`document_id(impl Into<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::document_id) / [`set_document_id(Option<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::set_document_id):<br>required: **true**<br><p>The ID of the document.</p><br>
    ///   - [`version_id(impl Into<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::version_id) / [`set_version_id(Option<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::set_version_id):<br>required: **true**<br><p>The ID of the document version.</p><br>
    ///   - [`parent_id(impl Into<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::parent_id) / [`set_parent_id(Option<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::set_parent_id):<br>required: **false**<br><p>The ID of the parent comment.</p><br>
    ///   - [`thread_id(impl Into<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::thread_id) / [`set_thread_id(Option<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::set_thread_id):<br>required: **false**<br><p>The ID of the root comment in the thread.</p><br>
    ///   - [`text(impl Into<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::text) / [`set_text(Option<String>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::set_text):<br>required: **true**<br><p>The text of the comment.</p><br>
    ///   - [`visibility(CommentVisibilityType)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::visibility) / [`set_visibility(Option<CommentVisibilityType>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::set_visibility):<br>required: **false**<br><p>The visibility of the comment. Options are either PRIVATE, where the comment is visible only to the comment author and document owner and co-owners, or PUBLIC, where the comment is visible to document owners, co-owners, and contributors.</p><br>
    ///   - [`notify_collaborators(bool)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::notify_collaborators) / [`set_notify_collaborators(Option<bool>)`](crate::operation::create_comment::builders::CreateCommentFluentBuilder::set_notify_collaborators):<br>required: **false**<br><p>Set this parameter to TRUE to send an email out to the document collaborators after the comment is created.</p><br>
    /// - On success, responds with [`CreateCommentOutput`](crate::operation::create_comment::CreateCommentOutput) with field(s):
    ///   - [`comment(Option<Comment>)`](crate::operation::create_comment::CreateCommentOutput::comment): <p>The comment that has been created.</p>
    /// - On failure, responds with [`SdkError<CreateCommentError>`](crate::operation::create_comment::CreateCommentError)
    pub fn create_comment(&self) -> crate::operation::create_comment::builders::CreateCommentFluentBuilder {
        crate::operation::create_comment::builders::CreateCommentFluentBuilder::new(self.handle.clone())
    }
}
