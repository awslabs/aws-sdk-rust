// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_associate_team_member;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_project;

pub(crate) mod shape_create_user_profile;

pub(crate) mod shape_delete_project;

pub(crate) mod shape_delete_user_profile;

pub(crate) mod shape_describe_project;

pub(crate) mod shape_describe_user_profile;

pub(crate) mod shape_disassociate_team_member;

pub(crate) mod shape_list_projects;

pub(crate) mod shape_list_resources;

pub(crate) mod shape_list_tags_for_project;

pub(crate) mod shape_list_team_members;

pub(crate) mod shape_list_user_profiles;

pub(crate) mod shape_tag_project;

pub(crate) mod shape_untag_project;

pub(crate) mod shape_update_project;

pub(crate) mod shape_update_team_member;

pub(crate) mod shape_update_user_profile;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_associate_team_member_input;

pub(crate) mod shape_concurrent_modification_exception;

pub(crate) mod shape_create_project_input;

pub(crate) mod shape_create_user_profile_input;

pub(crate) mod shape_delete_project_input;

pub(crate) mod shape_delete_user_profile_input;

pub(crate) mod shape_describe_project_input;

pub(crate) mod shape_describe_user_profile_input;

pub(crate) mod shape_disassociate_team_member_input;

pub(crate) mod shape_invalid_next_token_exception;

pub(crate) mod shape_invalid_service_role_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_projects_input;

pub(crate) mod shape_list_resources_input;

pub(crate) mod shape_list_tags_for_project_input;

pub(crate) mod shape_list_team_members_input;

pub(crate) mod shape_list_user_profiles_input;

pub(crate) mod shape_project_already_exists_exception;

pub(crate) mod shape_project_configuration_exception;

pub(crate) mod shape_project_creation_failed_exception;

pub(crate) mod shape_project_not_found_exception;

pub(crate) mod shape_tag_project_input;

pub(crate) mod shape_team_member_already_associated_exception;

pub(crate) mod shape_team_member_not_found_exception;

pub(crate) mod shape_untag_project_input;

pub(crate) mod shape_update_project_input;

pub(crate) mod shape_update_team_member_input;

pub(crate) mod shape_update_user_profile_input;

pub(crate) mod shape_user_profile_already_exists_exception;

pub(crate) mod shape_user_profile_not_found_exception;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_code;

pub(crate) mod shape_project_status;

pub(crate) mod shape_projects_list;

pub(crate) mod shape_resources_result;

pub(crate) mod shape_tags;

pub(crate) mod shape_team_member_result;

pub(crate) mod shape_toolchain;

pub(crate) mod shape_user_profiles_list;

pub(crate) mod shape_code_destination;

pub(crate) mod shape_code_source;

pub(crate) mod shape_project_summary;

pub(crate) mod shape_resource;

pub(crate) mod shape_team_member;

pub(crate) mod shape_toolchain_source;

pub(crate) mod shape_user_profile_summary;

pub(crate) mod shape_code_commit_code_destination;

pub(crate) mod shape_git_hub_code_destination;

pub(crate) mod shape_s3_location;
