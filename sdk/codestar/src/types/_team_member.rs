// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a team member in a project.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TeamMember {
    /// <p>The Amazon Resource Name (ARN) of the user in IAM.</p>
    pub user_arn: ::std::string::String,
    /// <p>The role assigned to the user in the project. Project roles have different levels of access. For more information, see <a href="http://docs.aws.amazon.com/codestar/latest/userguide/working-with-teams.html">Working with Teams</a> in the <i>AWS CodeStar User Guide</i>. </p>
    pub project_role: ::std::string::String,
    /// <p>Whether the user is allowed to remotely access project resources using an SSH public/private key pair.</p>
    pub remote_access_allowed: ::std::option::Option<bool>,
}
impl TeamMember {
    /// <p>The Amazon Resource Name (ARN) of the user in IAM.</p>
    pub fn user_arn(&self) -> &str {
        use std::ops::Deref;
        self.user_arn.deref()
    }
    /// <p>The role assigned to the user in the project. Project roles have different levels of access. For more information, see <a href="http://docs.aws.amazon.com/codestar/latest/userguide/working-with-teams.html">Working with Teams</a> in the <i>AWS CodeStar User Guide</i>. </p>
    pub fn project_role(&self) -> &str {
        use std::ops::Deref;
        self.project_role.deref()
    }
    /// <p>Whether the user is allowed to remotely access project resources using an SSH public/private key pair.</p>
    pub fn remote_access_allowed(&self) -> ::std::option::Option<bool> {
        self.remote_access_allowed
    }
}
impl TeamMember {
    /// Creates a new builder-style object to manufacture [`TeamMember`](crate::types::TeamMember).
    pub fn builder() -> crate::types::builders::TeamMemberBuilder {
        crate::types::builders::TeamMemberBuilder::default()
    }
}

/// A builder for [`TeamMember`](crate::types::TeamMember).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TeamMemberBuilder {
    pub(crate) user_arn: ::std::option::Option<::std::string::String>,
    pub(crate) project_role: ::std::option::Option<::std::string::String>,
    pub(crate) remote_access_allowed: ::std::option::Option<bool>,
}
impl TeamMemberBuilder {
    /// <p>The Amazon Resource Name (ARN) of the user in IAM.</p>
    /// This field is required.
    pub fn user_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the user in IAM.</p>
    pub fn set_user_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the user in IAM.</p>
    pub fn get_user_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_arn
    }
    /// <p>The role assigned to the user in the project. Project roles have different levels of access. For more information, see <a href="http://docs.aws.amazon.com/codestar/latest/userguide/working-with-teams.html">Working with Teams</a> in the <i>AWS CodeStar User Guide</i>. </p>
    /// This field is required.
    pub fn project_role(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.project_role = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The role assigned to the user in the project. Project roles have different levels of access. For more information, see <a href="http://docs.aws.amazon.com/codestar/latest/userguide/working-with-teams.html">Working with Teams</a> in the <i>AWS CodeStar User Guide</i>. </p>
    pub fn set_project_role(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.project_role = input;
        self
    }
    /// <p>The role assigned to the user in the project. Project roles have different levels of access. For more information, see <a href="http://docs.aws.amazon.com/codestar/latest/userguide/working-with-teams.html">Working with Teams</a> in the <i>AWS CodeStar User Guide</i>. </p>
    pub fn get_project_role(&self) -> &::std::option::Option<::std::string::String> {
        &self.project_role
    }
    /// <p>Whether the user is allowed to remotely access project resources using an SSH public/private key pair.</p>
    pub fn remote_access_allowed(mut self, input: bool) -> Self {
        self.remote_access_allowed = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether the user is allowed to remotely access project resources using an SSH public/private key pair.</p>
    pub fn set_remote_access_allowed(mut self, input: ::std::option::Option<bool>) -> Self {
        self.remote_access_allowed = input;
        self
    }
    /// <p>Whether the user is allowed to remotely access project resources using an SSH public/private key pair.</p>
    pub fn get_remote_access_allowed(&self) -> &::std::option::Option<bool> {
        &self.remote_access_allowed
    }
    /// Consumes the builder and constructs a [`TeamMember`](crate::types::TeamMember).
    /// This method will fail if any of the following fields are not set:
    /// - [`user_arn`](crate::types::builders::TeamMemberBuilder::user_arn)
    /// - [`project_role`](crate::types::builders::TeamMemberBuilder::project_role)
    pub fn build(self) -> ::std::result::Result<crate::types::TeamMember, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TeamMember {
            user_arn: self.user_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "user_arn",
                    "user_arn was not specified but it is required when building TeamMember",
                )
            })?,
            project_role: self.project_role.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "project_role",
                    "project_role was not specified but it is required when building TeamMember",
                )
            })?,
            remote_access_allowed: self.remote_access_allowed,
        })
    }
}
