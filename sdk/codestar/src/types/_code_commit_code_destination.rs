// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the AWS CodeCommit repository to be created in AWS CodeStar. This is where the source code files provided with the project request will be uploaded after project creation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CodeCommitCodeDestination {
    /// <p>The name of the AWS CodeCommit repository to be created in AWS CodeStar.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl CodeCommitCodeDestination {
    /// <p>The name of the AWS CodeCommit repository to be created in AWS CodeStar.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl CodeCommitCodeDestination {
    /// Creates a new builder-style object to manufacture [`CodeCommitCodeDestination`](crate::types::CodeCommitCodeDestination).
    pub fn builder() -> crate::types::builders::CodeCommitCodeDestinationBuilder {
        crate::types::builders::CodeCommitCodeDestinationBuilder::default()
    }
}

/// A builder for [`CodeCommitCodeDestination`](crate::types::CodeCommitCodeDestination).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CodeCommitCodeDestinationBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
}
impl CodeCommitCodeDestinationBuilder {
    /// <p>The name of the AWS CodeCommit repository to be created in AWS CodeStar.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the AWS CodeCommit repository to be created in AWS CodeStar.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`CodeCommitCodeDestination`](crate::types::CodeCommitCodeDestination).
    pub fn build(self) -> crate::types::CodeCommitCodeDestination {
        crate::types::CodeCommitCodeDestination { name: self.name }
    }
}
