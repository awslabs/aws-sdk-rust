// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateTeamMemberInput {
    /// <p>The ID of the AWS CodeStar project from which you want to remove a team member.</p>
    #[doc(hidden)]
    pub project_id: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the IAM user or group whom you want to remove from the project.</p>
    #[doc(hidden)]
    pub user_arn: std::option::Option<std::string::String>,
}
impl DisassociateTeamMemberInput {
    /// <p>The ID of the AWS CodeStar project from which you want to remove a team member.</p>
    pub fn project_id(&self) -> std::option::Option<&str> {
        self.project_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM user or group whom you want to remove from the project.</p>
    pub fn user_arn(&self) -> std::option::Option<&str> {
        self.user_arn.as_deref()
    }
}
impl DisassociateTeamMemberInput {
    /// Creates a new builder-style object to manufacture [`DisassociateTeamMemberInput`](crate::operation::disassociate_team_member::DisassociateTeamMemberInput).
    pub fn builder(
    ) -> crate::operation::disassociate_team_member::builders::DisassociateTeamMemberInputBuilder
    {
        crate::operation::disassociate_team_member::builders::DisassociateTeamMemberInputBuilder::default()
    }
}

/// A builder for [`DisassociateTeamMemberInput`](crate::operation::disassociate_team_member::DisassociateTeamMemberInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisassociateTeamMemberInputBuilder {
    pub(crate) project_id: std::option::Option<std::string::String>,
    pub(crate) user_arn: std::option::Option<std::string::String>,
}
impl DisassociateTeamMemberInputBuilder {
    /// <p>The ID of the AWS CodeStar project from which you want to remove a team member.</p>
    pub fn project_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.project_id = Some(input.into());
        self
    }
    /// <p>The ID of the AWS CodeStar project from which you want to remove a team member.</p>
    pub fn set_project_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.project_id = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM user or group whom you want to remove from the project.</p>
    pub fn user_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.user_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM user or group whom you want to remove from the project.</p>
    pub fn set_user_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.user_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`DisassociateTeamMemberInput`](crate::operation::disassociate_team_member::DisassociateTeamMemberInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::disassociate_team_member::DisassociateTeamMemberInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::disassociate_team_member::DisassociateTeamMemberInput {
                project_id: self.project_id,
                user_arn: self.user_arn,
            },
        )
    }
}
