// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn create_project_output_correct_errors(
    mut builder: crate::operation::create_project::builders::CreateProjectOutputBuilder,
) -> crate::operation::create_project::builders::CreateProjectOutputBuilder {
    if builder.id.is_none() {
        builder.id = Some(Default::default())
    }
    if builder.arn.is_none() {
        builder.arn = Some(Default::default())
    }
    builder
}

pub(crate) fn create_user_profile_output_correct_errors(
    mut builder: crate::operation::create_user_profile::builders::CreateUserProfileOutputBuilder,
) -> crate::operation::create_user_profile::builders::CreateUserProfileOutputBuilder {
    if builder.user_arn.is_none() {
        builder.user_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn delete_user_profile_output_correct_errors(
    mut builder: crate::operation::delete_user_profile::builders::DeleteUserProfileOutputBuilder,
) -> crate::operation::delete_user_profile::builders::DeleteUserProfileOutputBuilder {
    if builder.user_arn.is_none() {
        builder.user_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn describe_user_profile_output_correct_errors(
    mut builder: crate::operation::describe_user_profile::builders::DescribeUserProfileOutputBuilder,
) -> crate::operation::describe_user_profile::builders::DescribeUserProfileOutputBuilder {
    if builder.user_arn.is_none() {
        builder.user_arn = Some(Default::default())
    }
    if builder.created_timestamp.is_none() {
        builder.created_timestamp = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.last_modified_timestamp.is_none() {
        builder.last_modified_timestamp = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    builder
}

pub(crate) fn list_projects_output_correct_errors(
    mut builder: crate::operation::list_projects::builders::ListProjectsOutputBuilder,
) -> crate::operation::list_projects::builders::ListProjectsOutputBuilder {
    if builder.projects.is_none() {
        builder.projects = Some(Default::default())
    }
    builder
}

pub(crate) fn list_team_members_output_correct_errors(
    mut builder: crate::operation::list_team_members::builders::ListTeamMembersOutputBuilder,
) -> crate::operation::list_team_members::builders::ListTeamMembersOutputBuilder {
    if builder.team_members.is_none() {
        builder.team_members = Some(Default::default())
    }
    builder
}

pub(crate) fn list_user_profiles_output_correct_errors(
    mut builder: crate::operation::list_user_profiles::builders::ListUserProfilesOutputBuilder,
) -> crate::operation::list_user_profiles::builders::ListUserProfilesOutputBuilder {
    if builder.user_profiles.is_none() {
        builder.user_profiles = Some(Default::default())
    }
    builder
}

pub(crate) fn update_user_profile_output_correct_errors(
    mut builder: crate::operation::update_user_profile::builders::UpdateUserProfileOutputBuilder,
) -> crate::operation::update_user_profile::builders::UpdateUserProfileOutputBuilder {
    if builder.user_arn.is_none() {
        builder.user_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn project_status_correct_errors(
    mut builder: crate::types::builders::ProjectStatusBuilder,
) -> crate::types::builders::ProjectStatusBuilder {
    if builder.state.is_none() {
        builder.state = Some(Default::default())
    }
    builder
}

pub(crate) fn resource_correct_errors(mut builder: crate::types::builders::ResourceBuilder) -> crate::types::builders::ResourceBuilder {
    if builder.id.is_none() {
        builder.id = Some(Default::default())
    }
    builder
}

pub(crate) fn team_member_correct_errors(mut builder: crate::types::builders::TeamMemberBuilder) -> crate::types::builders::TeamMemberBuilder {
    if builder.user_arn.is_none() {
        builder.user_arn = Some(Default::default())
    }
    if builder.project_role.is_none() {
        builder.project_role = Some(Default::default())
    }
    builder
}
