// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSystemInstance`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::set_tags): <p>Metadata, consisting of key-value pairs, that can be used to categorize your system instances.</p>
    ///   - [`definition(DefinitionDocument)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::definition) / [`set_definition(Option<DefinitionDocument>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::set_definition): <p>A document that defines an entity. </p>
    ///   - [`target(DeploymentTarget)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::target) / [`set_target(Option<DeploymentTarget>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::set_target): <p>The target type of the deployment. Valid values are <code>GREENGRASS</code> and <code>CLOUD</code>.</p>
    ///   - [`greengrass_group_name(impl Into<String>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::greengrass_group_name) / [`set_greengrass_group_name(Option<String>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::set_greengrass_group_name): <p>The name of the Greengrass group where the system instance will be deployed. This value is required if the value of the <code>target</code> parameter is <code>GREENGRASS</code>.</p>
    ///   - [`s3_bucket_name(impl Into<String>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::s3_bucket_name) / [`set_s3_bucket_name(Option<String>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::set_s3_bucket_name): <p>The name of the Amazon Simple Storage Service bucket that will be used to store and deploy the system instance's resource file. This value is required if the value of the <code>target</code> parameter is <code>GREENGRASS</code>.</p>
    ///   - [`metrics_configuration(MetricsConfiguration)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::metrics_configuration) / [`set_metrics_configuration(Option<MetricsConfiguration>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::set_metrics_configuration): <p>An object that specifies whether cloud metrics are collected in a deployment and, if so, what role is used to collect metrics.</p>
    ///   - [`flow_actions_role_arn(impl Into<String>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::flow_actions_role_arn) / [`set_flow_actions_role_arn(Option<String>)`](crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::set_flow_actions_role_arn): <p>The ARN of the IAM role that AWS IoT Things Graph will assume when it executes the flow. This role must have read and write access to AWS Lambda and AWS IoT and any other AWS services that the flow uses when it executes. This value is required if the value of the <code>target</code> parameter is <code>CLOUD</code>.</p>
    /// - On success, responds with [`CreateSystemInstanceOutput`](crate::operation::create_system_instance::CreateSystemInstanceOutput) with field(s):
    ///   - [`summary(Option<SystemInstanceSummary>)`](crate::operation::create_system_instance::CreateSystemInstanceOutput::summary): <p>The summary object that describes the new system instance.</p>
    /// - On failure, responds with [`SdkError<CreateSystemInstanceError>`](crate::operation::create_system_instance::CreateSystemInstanceError)
    #[deprecated(note = "since: 2022-08-30")]
    pub fn create_system_instance(
        &self,
    ) -> crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder {
        crate::operation::create_system_instance::builders::CreateSystemInstanceFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
