// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateFlowTemplate`](crate::client::fluent_builders::UpdateFlowTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::UpdateFlowTemplate::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::UpdateFlowTemplate::set_id): <p>The ID of the workflow to be updated.</p>  <p>The ID should be in the following format.</p>  <p> <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code> </p>
    ///   - [`definition(DefinitionDocument)`](crate::client::fluent_builders::UpdateFlowTemplate::definition) / [`set_definition(Option<DefinitionDocument>)`](crate::client::fluent_builders::UpdateFlowTemplate::set_definition): <p>The <code>DefinitionDocument</code> that contains the updated workflow definition.</p>
    ///   - [`compatible_namespace_version(i64)`](crate::client::fluent_builders::UpdateFlowTemplate::compatible_namespace_version) / [`set_compatible_namespace_version(Option<i64>)`](crate::client::fluent_builders::UpdateFlowTemplate::set_compatible_namespace_version): <p>The version of the user's namespace.</p>  <p>If no value is specified, the latest version is used by default. Use the <code>GetFlowTemplateRevisions</code> if you want to find earlier revisions of the flow to update.</p>
    /// - On success, responds with [`UpdateFlowTemplateOutput`](crate::output::UpdateFlowTemplateOutput) with field(s):
    ///   - [`summary(Option<FlowTemplateSummary>)`](crate::output::UpdateFlowTemplateOutput::summary): <p>An object containing summary information about the updated workflow.</p>
    /// - On failure, responds with [`SdkError<UpdateFlowTemplateError>`](crate::error::UpdateFlowTemplateError)
    #[deprecated(note = "since: 2022-08-30")]
    pub fn update_flow_template(&self) -> crate::client::fluent_builders::UpdateFlowTemplate {
        crate::client::fluent_builders::UpdateFlowTemplate::new(self.handle.clone())
    }
}
