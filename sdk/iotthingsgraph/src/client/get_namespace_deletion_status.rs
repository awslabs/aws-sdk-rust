// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetNamespaceDeletionStatus`](crate::operation::get_namespace_deletion_status::builders::GetNamespaceDeletionStatusFluentBuilder) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::operation::get_namespace_deletion_status::builders::GetNamespaceDeletionStatusFluentBuilder::send) it.
    /// - On success, responds with [`GetNamespaceDeletionStatusOutput`](crate::operation::get_namespace_deletion_status::GetNamespaceDeletionStatusOutput) with field(s):
    ///   - [`namespace_arn(Option<String>)`](crate::operation::get_namespace_deletion_status::GetNamespaceDeletionStatusOutput::namespace_arn): <p>The ARN of the namespace that is being deleted.</p>
    ///   - [`namespace_name(Option<String>)`](crate::operation::get_namespace_deletion_status::GetNamespaceDeletionStatusOutput::namespace_name): <p>The name of the namespace that is being deleted.</p>
    ///   - [`status(Option<NamespaceDeletionStatus>)`](crate::operation::get_namespace_deletion_status::GetNamespaceDeletionStatusOutput::status): <p>The status of the deletion request.</p>
    ///   - [`error_code(Option<NamespaceDeletionStatusErrorCodes>)`](crate::operation::get_namespace_deletion_status::GetNamespaceDeletionStatusOutput::error_code): <p>An error code returned by the namespace deletion task.</p>
    ///   - [`error_message(Option<String>)`](crate::operation::get_namespace_deletion_status::GetNamespaceDeletionStatusOutput::error_message): <p>An error code returned by the namespace deletion task.</p>
    /// - On failure, responds with [`SdkError<GetNamespaceDeletionStatusError>`](crate::operation::get_namespace_deletion_status::GetNamespaceDeletionStatusError)
    #[deprecated(note = "since: 2022-08-30")]
    pub fn get_namespace_deletion_status(&self) -> crate::operation::get_namespace_deletion_status::builders::GetNamespaceDeletionStatusFluentBuilder{
        crate::operation::get_namespace_deletion_status::builders::GetNamespaceDeletionStatusFluentBuilder::new(self.handle.clone())
    }
}
