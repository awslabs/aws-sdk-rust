// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DissociateEntityFromThing`](crate::client::fluent_builders::DissociateEntityFromThing) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`thing_name(impl Into<String>)`](crate::client::fluent_builders::DissociateEntityFromThing::thing_name) / [`set_thing_name(Option<String>)`](crate::client::fluent_builders::DissociateEntityFromThing::set_thing_name): <p>The name of the thing to disassociate.</p>
    ///   - [`entity_type(EntityType)`](crate::client::fluent_builders::DissociateEntityFromThing::entity_type) / [`set_entity_type(Option<EntityType>)`](crate::client::fluent_builders::DissociateEntityFromThing::set_entity_type): <p>The entity type from which to disassociate the thing.</p>
    /// - On success, responds with [`DissociateEntityFromThingOutput`](crate::output::DissociateEntityFromThingOutput)
    /// - On failure, responds with [`SdkError<DissociateEntityFromThingError>`](crate::error::DissociateEntityFromThingError)
    #[deprecated(note = "since: 2022-08-30")]
    pub fn dissociate_entity_from_thing(
        &self,
    ) -> crate::client::fluent_builders::DissociateEntityFromThing {
        crate::client::fluent_builders::DissociateEntityFromThing::new(self.handle.clone())
    }
}
