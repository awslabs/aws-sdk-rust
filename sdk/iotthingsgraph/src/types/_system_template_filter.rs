// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that filters a system search.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SystemTemplateFilter {
    /// <p>The name of the system search filter field.</p>
    pub name: crate::types::SystemTemplateFilterName,
    /// <p>An array of string values for the search filter field. Multiple values function as AND criteria in the search.</p>
    pub value: ::std::vec::Vec<::std::string::String>,
}
impl SystemTemplateFilter {
    /// <p>The name of the system search filter field.</p>
    pub fn name(&self) -> &crate::types::SystemTemplateFilterName {
        &self.name
    }
    /// <p>An array of string values for the search filter field. Multiple values function as AND criteria in the search.</p>
    pub fn value(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.value.deref()
    }
}
impl SystemTemplateFilter {
    /// Creates a new builder-style object to manufacture [`SystemTemplateFilter`](crate::types::SystemTemplateFilter).
    pub fn builder() -> crate::types::builders::SystemTemplateFilterBuilder {
        crate::types::builders::SystemTemplateFilterBuilder::default()
    }
}

/// A builder for [`SystemTemplateFilter`](crate::types::SystemTemplateFilter).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SystemTemplateFilterBuilder {
    pub(crate) name: ::std::option::Option<crate::types::SystemTemplateFilterName>,
    pub(crate) value: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl SystemTemplateFilterBuilder {
    /// <p>The name of the system search filter field.</p>
    /// This field is required.
    pub fn name(mut self, input: crate::types::SystemTemplateFilterName) -> Self {
        self.name = ::std::option::Option::Some(input);
        self
    }
    /// <p>The name of the system search filter field.</p>
    pub fn set_name(mut self, input: ::std::option::Option<crate::types::SystemTemplateFilterName>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the system search filter field.</p>
    pub fn get_name(&self) -> &::std::option::Option<crate::types::SystemTemplateFilterName> {
        &self.name
    }
    /// Appends an item to `value`.
    ///
    /// To override the contents of this collection use [`set_value`](Self::set_value).
    ///
    /// <p>An array of string values for the search filter field. Multiple values function as AND criteria in the search.</p>
    pub fn value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.value.unwrap_or_default();
        v.push(input.into());
        self.value = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of string values for the search filter field. Multiple values function as AND criteria in the search.</p>
    pub fn set_value(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.value = input;
        self
    }
    /// <p>An array of string values for the search filter field. Multiple values function as AND criteria in the search.</p>
    pub fn get_value(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.value
    }
    /// Consumes the builder and constructs a [`SystemTemplateFilter`](crate::types::SystemTemplateFilter).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::SystemTemplateFilterBuilder::name)
    /// - [`value`](crate::types::builders::SystemTemplateFilterBuilder::value)
    pub fn build(self) -> ::std::result::Result<crate::types::SystemTemplateFilter, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SystemTemplateFilter {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building SystemTemplateFilter",
                )
            })?,
            value: self.value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "value",
                    "value was not specified but it is required when building SystemTemplateFilter",
                )
            })?,
        })
    }
}
