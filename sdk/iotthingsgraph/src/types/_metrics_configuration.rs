// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that specifies whether cloud metrics are collected in a deployment and, if so, what role is used to collect metrics.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MetricsConfiguration {
    /// <p>A Boolean that specifies whether cloud metrics are collected.</p>
    #[doc(hidden)]
    pub cloud_metric_enabled: bool,
    /// <p>The ARN of the role that is used to collect cloud metrics.</p>
    #[doc(hidden)]
    pub metric_rule_role_arn: std::option::Option<std::string::String>,
}
impl MetricsConfiguration {
    /// <p>A Boolean that specifies whether cloud metrics are collected.</p>
    pub fn cloud_metric_enabled(&self) -> bool {
        self.cloud_metric_enabled
    }
    /// <p>The ARN of the role that is used to collect cloud metrics.</p>
    pub fn metric_rule_role_arn(&self) -> std::option::Option<&str> {
        self.metric_rule_role_arn.as_deref()
    }
}
impl MetricsConfiguration {
    /// Creates a new builder-style object to manufacture [`MetricsConfiguration`](crate::types::MetricsConfiguration).
    pub fn builder() -> crate::types::builders::MetricsConfigurationBuilder {
        crate::types::builders::MetricsConfigurationBuilder::default()
    }
}

/// A builder for [`MetricsConfiguration`](crate::types::MetricsConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MetricsConfigurationBuilder {
    pub(crate) cloud_metric_enabled: std::option::Option<bool>,
    pub(crate) metric_rule_role_arn: std::option::Option<std::string::String>,
}
impl MetricsConfigurationBuilder {
    /// <p>A Boolean that specifies whether cloud metrics are collected.</p>
    pub fn cloud_metric_enabled(mut self, input: bool) -> Self {
        self.cloud_metric_enabled = Some(input);
        self
    }
    /// <p>A Boolean that specifies whether cloud metrics are collected.</p>
    pub fn set_cloud_metric_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.cloud_metric_enabled = input;
        self
    }
    /// <p>The ARN of the role that is used to collect cloud metrics.</p>
    pub fn metric_rule_role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.metric_rule_role_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the role that is used to collect cloud metrics.</p>
    pub fn set_metric_rule_role_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.metric_rule_role_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`MetricsConfiguration`](crate::types::MetricsConfiguration).
    pub fn build(self) -> crate::types::MetricsConfiguration {
        crate::types::MetricsConfiguration {
            cloud_metric_enabled: self.cloud_metric_enabled.unwrap_or_default(),
            metric_rule_role_arn: self.metric_rule_role_arn,
        }
    }
}
