// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains summary information about a system instance.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SystemInstanceSummary {
    /// <p>The ID of the system instance.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The ARN of the system instance.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The status of the system instance.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::SystemInstanceDeploymentStatus>,
    /// <p>The target of the system instance.</p>
    #[doc(hidden)]
    pub target: std::option::Option<crate::types::DeploymentTarget>,
    /// <p>The ID of the Greengrass group where the system instance is deployed.</p>
    #[doc(hidden)]
    pub greengrass_group_name: std::option::Option<std::string::String>,
    /// <p>The date when the system instance was created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p> The date and time when the system instance was last updated.</p>
    #[doc(hidden)]
    pub updated_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The ID of the Greengrass group where the system instance is deployed.</p>
    #[doc(hidden)]
    pub greengrass_group_id: std::option::Option<std::string::String>,
    /// <p>The version of the Greengrass group where the system instance is deployed.</p>
    #[doc(hidden)]
    pub greengrass_group_version_id: std::option::Option<std::string::String>,
}
impl SystemInstanceSummary {
    /// <p>The ID of the system instance.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The ARN of the system instance.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The status of the system instance.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::SystemInstanceDeploymentStatus> {
        self.status.as_ref()
    }
    /// <p>The target of the system instance.</p>
    pub fn target(&self) -> std::option::Option<&crate::types::DeploymentTarget> {
        self.target.as_ref()
    }
    /// <p>The ID of the Greengrass group where the system instance is deployed.</p>
    pub fn greengrass_group_name(&self) -> std::option::Option<&str> {
        self.greengrass_group_name.as_deref()
    }
    /// <p>The date when the system instance was created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p> The date and time when the system instance was last updated.</p>
    pub fn updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
    /// <p>The ID of the Greengrass group where the system instance is deployed.</p>
    pub fn greengrass_group_id(&self) -> std::option::Option<&str> {
        self.greengrass_group_id.as_deref()
    }
    /// <p>The version of the Greengrass group where the system instance is deployed.</p>
    pub fn greengrass_group_version_id(&self) -> std::option::Option<&str> {
        self.greengrass_group_version_id.as_deref()
    }
}
impl SystemInstanceSummary {
    /// Creates a new builder-style object to manufacture [`SystemInstanceSummary`](crate::types::SystemInstanceSummary).
    pub fn builder() -> crate::types::builders::SystemInstanceSummaryBuilder {
        crate::types::builders::SystemInstanceSummaryBuilder::default()
    }
}

/// A builder for [`SystemInstanceSummary`](crate::types::SystemInstanceSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SystemInstanceSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::SystemInstanceDeploymentStatus>,
    pub(crate) target: std::option::Option<crate::types::DeploymentTarget>,
    pub(crate) greengrass_group_name: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) updated_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) greengrass_group_id: std::option::Option<std::string::String>,
    pub(crate) greengrass_group_version_id: std::option::Option<std::string::String>,
}
impl SystemInstanceSummaryBuilder {
    /// <p>The ID of the system instance.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of the system instance.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ARN of the system instance.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The ARN of the system instance.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The status of the system instance.</p>
    pub fn status(mut self, input: crate::types::SystemInstanceDeploymentStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the system instance.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::SystemInstanceDeploymentStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The target of the system instance.</p>
    pub fn target(mut self, input: crate::types::DeploymentTarget) -> Self {
        self.target = Some(input);
        self
    }
    /// <p>The target of the system instance.</p>
    pub fn set_target(
        mut self,
        input: std::option::Option<crate::types::DeploymentTarget>,
    ) -> Self {
        self.target = input;
        self
    }
    /// <p>The ID of the Greengrass group where the system instance is deployed.</p>
    pub fn greengrass_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.greengrass_group_name = Some(input.into());
        self
    }
    /// <p>The ID of the Greengrass group where the system instance is deployed.</p>
    pub fn set_greengrass_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.greengrass_group_name = input;
        self
    }
    /// <p>The date when the system instance was created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The date when the system instance was created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p> The date and time when the system instance was last updated.</p>
    pub fn updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_at = Some(input);
        self
    }
    /// <p> The date and time when the system instance was last updated.</p>
    pub fn set_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The ID of the Greengrass group where the system instance is deployed.</p>
    pub fn greengrass_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.greengrass_group_id = Some(input.into());
        self
    }
    /// <p>The ID of the Greengrass group where the system instance is deployed.</p>
    pub fn set_greengrass_group_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.greengrass_group_id = input;
        self
    }
    /// <p>The version of the Greengrass group where the system instance is deployed.</p>
    pub fn greengrass_group_version_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.greengrass_group_version_id = Some(input.into());
        self
    }
    /// <p>The version of the Greengrass group where the system instance is deployed.</p>
    pub fn set_greengrass_group_version_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.greengrass_group_version_id = input;
        self
    }
    /// Consumes the builder and constructs a [`SystemInstanceSummary`](crate::types::SystemInstanceSummary).
    pub fn build(self) -> crate::types::SystemInstanceSummary {
        crate::types::SystemInstanceSummary {
            id: self.id,
            arn: self.arn,
            status: self.status,
            target: self.target,
            greengrass_group_name: self.greengrass_group_name,
            created_at: self.created_at,
            updated_at: self.updated_at,
            greengrass_group_id: self.greengrass_group_id,
            greengrass_group_version_id: self.greengrass_group_version_id,
        }
    }
}
