// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_associate_entity_to_thing;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_flow_template;

pub(crate) mod shape_create_system_instance;

pub(crate) mod shape_create_system_template;

pub(crate) mod shape_delete_flow_template;

pub(crate) mod shape_delete_namespace;

pub(crate) mod shape_delete_system_instance;

pub(crate) mod shape_delete_system_template;

pub(crate) mod shape_deploy_system_instance;

pub(crate) mod shape_deprecate_flow_template;

pub(crate) mod shape_deprecate_system_template;

pub(crate) mod shape_describe_namespace;

pub(crate) mod shape_dissociate_entity_from_thing;

pub(crate) mod shape_get_entities;

pub(crate) mod shape_get_flow_template;

pub(crate) mod shape_get_flow_template_revisions;

pub(crate) mod shape_get_namespace_deletion_status;

pub(crate) mod shape_get_system_instance;

pub(crate) mod shape_get_system_template;

pub(crate) mod shape_get_system_template_revisions;

pub(crate) mod shape_get_upload_status;

pub(crate) mod shape_list_flow_execution_messages;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_search_entities;

pub(crate) mod shape_search_flow_executions;

pub(crate) mod shape_search_flow_templates;

pub(crate) mod shape_search_system_instances;

pub(crate) mod shape_search_system_templates;

pub(crate) mod shape_search_things;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_undeploy_system_instance;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_flow_template;

pub(crate) mod shape_update_system_template;

pub(crate) mod shape_upload_entity_definitions;

pub(crate) mod shape_associate_entity_to_thing_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_create_flow_template_input;

pub(crate) mod shape_create_system_instance_input;

pub(crate) mod shape_create_system_template_input;

pub(crate) mod shape_delete_flow_template_input;

pub(crate) mod shape_delete_system_instance_input;

pub(crate) mod shape_delete_system_template_input;

pub(crate) mod shape_deploy_system_instance_input;

pub(crate) mod shape_deprecate_flow_template_input;

pub(crate) mod shape_deprecate_system_template_input;

pub(crate) mod shape_describe_namespace_input;

pub(crate) mod shape_dissociate_entity_from_thing_input;

pub(crate) mod shape_get_entities_input;

pub(crate) mod shape_get_flow_template_input;

pub(crate) mod shape_get_flow_template_revisions_input;

pub(crate) mod shape_get_system_instance_input;

pub(crate) mod shape_get_system_template_input;

pub(crate) mod shape_get_system_template_revisions_input;

pub(crate) mod shape_get_upload_status_input;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_flow_execution_messages_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_resource_already_exists_exception;

pub(crate) mod shape_resource_in_use_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_search_entities_input;

pub(crate) mod shape_search_flow_executions_input;

pub(crate) mod shape_search_flow_templates_input;

pub(crate) mod shape_search_system_instances_input;

pub(crate) mod shape_search_system_templates_input;

pub(crate) mod shape_search_things_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_undeploy_system_instance_input;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_flow_template_input;

pub(crate) mod shape_update_system_template_input;

pub(crate) mod shape_upload_entity_definitions_input;

pub(crate) mod shape_definition_document;

pub(crate) mod shape_entity_descriptions;

pub(crate) mod shape_entity_filter;

pub(crate) mod shape_flow_execution_messages;

pub(crate) mod shape_flow_execution_summaries;

pub(crate) mod shape_flow_template_description;

pub(crate) mod shape_flow_template_filter;

pub(crate) mod shape_flow_template_summaries;

pub(crate) mod shape_flow_template_summary;

pub(crate) mod shape_metrics_configuration;

pub(crate) mod shape_string_list;

pub(crate) mod shape_system_instance_description;

pub(crate) mod shape_system_instance_filter;

pub(crate) mod shape_system_instance_summaries;

pub(crate) mod shape_system_instance_summary;

pub(crate) mod shape_system_template_description;

pub(crate) mod shape_system_template_filter;

pub(crate) mod shape_system_template_summaries;

pub(crate) mod shape_system_template_summary;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_things;

pub(crate) mod shape_dependency_revisions;

pub(crate) mod shape_entity_description;

pub(crate) mod shape_flow_execution_message;

pub(crate) mod shape_flow_execution_summary;

pub(crate) mod shape_thing;

pub(crate) mod shape_dependency_revision;
