// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn access_denied_exception_correct_errors(
    mut builder: crate::types::error::builders::AccessDeniedExceptionBuilder,
) -> crate::types::error::builders::AccessDeniedExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn internal_server_exception_correct_errors(
    mut builder: crate::types::error::builders::InternalServerExceptionBuilder,
) -> crate::types::error::builders::InternalServerExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn resource_not_found_exception_correct_errors(
    mut builder: crate::types::error::builders::ResourceNotFoundExceptionBuilder,
) -> crate::types::error::builders::ResourceNotFoundExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    if builder.resource_id.is_none() {
        builder.resource_id = Some(Default::default())
    }
    if builder.resource_type.is_none() {
        builder.resource_type = Some(Default::default())
    }
    builder
}

pub(crate) fn throttling_exception_correct_errors(
    mut builder: crate::types::error::builders::ThrottlingExceptionBuilder,
) -> crate::types::error::builders::ThrottlingExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn validation_exception_correct_errors(
    mut builder: crate::types::error::builders::ValidationExceptionBuilder,
) -> crate::types::error::builders::ValidationExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn batch_get_field_output_correct_errors(
    mut builder: crate::operation::batch_get_field::builders::BatchGetFieldOutputBuilder,
) -> crate::operation::batch_get_field::builders::BatchGetFieldOutputBuilder {
    if builder.fields.is_none() {
        builder.fields = Some(Default::default())
    }
    if builder.errors.is_none() {
        builder.errors = Some(Default::default())
    }
    builder
}

pub(crate) fn service_quota_exceeded_exception_correct_errors(
    mut builder: crate::types::error::builders::ServiceQuotaExceededExceptionBuilder,
) -> crate::types::error::builders::ServiceQuotaExceededExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn conflict_exception_correct_errors(
    mut builder: crate::types::error::builders::ConflictExceptionBuilder,
) -> crate::types::error::builders::ConflictExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn create_case_output_correct_errors(
    mut builder: crate::operation::create_case::builders::CreateCaseOutputBuilder,
) -> crate::operation::create_case::builders::CreateCaseOutputBuilder {
    if builder.case_id.is_none() {
        builder.case_id = Some(Default::default())
    }
    if builder.case_arn.is_none() {
        builder.case_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn create_domain_output_correct_errors(
    mut builder: crate::operation::create_domain::builders::CreateDomainOutputBuilder,
) -> crate::operation::create_domain::builders::CreateDomainOutputBuilder {
    if builder.domain_id.is_none() {
        builder.domain_id = Some(Default::default())
    }
    if builder.domain_arn.is_none() {
        builder.domain_arn = Some(Default::default())
    }
    if builder.domain_status.is_none() {
        builder.domain_status = "no value was set".parse::<crate::types::DomainStatus>().ok()
    }
    builder
}

pub(crate) fn create_field_output_correct_errors(
    mut builder: crate::operation::create_field::builders::CreateFieldOutputBuilder,
) -> crate::operation::create_field::builders::CreateFieldOutputBuilder {
    if builder.field_id.is_none() {
        builder.field_id = Some(Default::default())
    }
    if builder.field_arn.is_none() {
        builder.field_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn create_layout_output_correct_errors(
    mut builder: crate::operation::create_layout::builders::CreateLayoutOutputBuilder,
) -> crate::operation::create_layout::builders::CreateLayoutOutputBuilder {
    if builder.layout_id.is_none() {
        builder.layout_id = Some(Default::default())
    }
    if builder.layout_arn.is_none() {
        builder.layout_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn create_related_item_output_correct_errors(
    mut builder: crate::operation::create_related_item::builders::CreateRelatedItemOutputBuilder,
) -> crate::operation::create_related_item::builders::CreateRelatedItemOutputBuilder {
    if builder.related_item_id.is_none() {
        builder.related_item_id = Some(Default::default())
    }
    if builder.related_item_arn.is_none() {
        builder.related_item_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn create_template_output_correct_errors(
    mut builder: crate::operation::create_template::builders::CreateTemplateOutputBuilder,
) -> crate::operation::create_template::builders::CreateTemplateOutputBuilder {
    if builder.template_id.is_none() {
        builder.template_id = Some(Default::default())
    }
    if builder.template_arn.is_none() {
        builder.template_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn get_case_output_correct_errors(
    mut builder: crate::operation::get_case::builders::GetCaseOutputBuilder,
) -> crate::operation::get_case::builders::GetCaseOutputBuilder {
    if builder.fields.is_none() {
        builder.fields = Some(Default::default())
    }
    if builder.template_id.is_none() {
        builder.template_id = Some(Default::default())
    }
    builder
}

pub(crate) fn get_case_event_configuration_output_correct_errors(
    mut builder: crate::operation::get_case_event_configuration::builders::GetCaseEventConfigurationOutputBuilder,
) -> crate::operation::get_case_event_configuration::builders::GetCaseEventConfigurationOutputBuilder {
    if builder.event_bridge.is_none() {
        builder.event_bridge = {
            let builder = crate::types::builders::EventBridgeConfigurationBuilder::default();
            crate::serde_util::event_bridge_configuration_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn get_domain_output_correct_errors(
    mut builder: crate::operation::get_domain::builders::GetDomainOutputBuilder,
) -> crate::operation::get_domain::builders::GetDomainOutputBuilder {
    if builder.domain_id.is_none() {
        builder.domain_id = Some(Default::default())
    }
    if builder.domain_arn.is_none() {
        builder.domain_arn = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.created_time.is_none() {
        builder.created_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.domain_status.is_none() {
        builder.domain_status = "no value was set".parse::<crate::types::DomainStatus>().ok()
    }
    builder
}

pub(crate) fn get_layout_output_correct_errors(
    mut builder: crate::operation::get_layout::builders::GetLayoutOutputBuilder,
) -> crate::operation::get_layout::builders::GetLayoutOutputBuilder {
    if builder.layout_id.is_none() {
        builder.layout_id = Some(Default::default())
    }
    if builder.layout_arn.is_none() {
        builder.layout_arn = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.content.is_none() {
        builder.content = Some(crate::types::LayoutContent::Unknown)
    }
    builder
}

pub(crate) fn get_template_output_correct_errors(
    mut builder: crate::operation::get_template::builders::GetTemplateOutputBuilder,
) -> crate::operation::get_template::builders::GetTemplateOutputBuilder {
    if builder.template_id.is_none() {
        builder.template_id = Some(Default::default())
    }
    if builder.template_arn.is_none() {
        builder.template_arn = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.status.is_none() {
        builder.status = "no value was set".parse::<crate::types::TemplateStatus>().ok()
    }
    builder
}

pub(crate) fn list_cases_for_contact_output_correct_errors(
    mut builder: crate::operation::list_cases_for_contact::builders::ListCasesForContactOutputBuilder,
) -> crate::operation::list_cases_for_contact::builders::ListCasesForContactOutputBuilder {
    if builder.cases.is_none() {
        builder.cases = Some(Default::default())
    }
    builder
}

pub(crate) fn list_domains_output_correct_errors(
    mut builder: crate::operation::list_domains::builders::ListDomainsOutputBuilder,
) -> crate::operation::list_domains::builders::ListDomainsOutputBuilder {
    if builder.domains.is_none() {
        builder.domains = Some(Default::default())
    }
    builder
}

pub(crate) fn list_field_options_output_correct_errors(
    mut builder: crate::operation::list_field_options::builders::ListFieldOptionsOutputBuilder,
) -> crate::operation::list_field_options::builders::ListFieldOptionsOutputBuilder {
    if builder.options.is_none() {
        builder.options = Some(Default::default())
    }
    builder
}

pub(crate) fn list_fields_output_correct_errors(
    mut builder: crate::operation::list_fields::builders::ListFieldsOutputBuilder,
) -> crate::operation::list_fields::builders::ListFieldsOutputBuilder {
    if builder.fields.is_none() {
        builder.fields = Some(Default::default())
    }
    builder
}

pub(crate) fn list_layouts_output_correct_errors(
    mut builder: crate::operation::list_layouts::builders::ListLayoutsOutputBuilder,
) -> crate::operation::list_layouts::builders::ListLayoutsOutputBuilder {
    if builder.layouts.is_none() {
        builder.layouts = Some(Default::default())
    }
    builder
}

pub(crate) fn list_templates_output_correct_errors(
    mut builder: crate::operation::list_templates::builders::ListTemplatesOutputBuilder,
) -> crate::operation::list_templates::builders::ListTemplatesOutputBuilder {
    if builder.templates.is_none() {
        builder.templates = Some(Default::default())
    }
    builder
}

pub(crate) fn search_cases_output_correct_errors(
    mut builder: crate::operation::search_cases::builders::SearchCasesOutputBuilder,
) -> crate::operation::search_cases::builders::SearchCasesOutputBuilder {
    if builder.cases.is_none() {
        builder.cases = Some(Default::default())
    }
    builder
}

pub(crate) fn search_related_items_output_correct_errors(
    mut builder: crate::operation::search_related_items::builders::SearchRelatedItemsOutputBuilder,
) -> crate::operation::search_related_items::builders::SearchRelatedItemsOutputBuilder {
    if builder.related_items.is_none() {
        builder.related_items = Some(Default::default())
    }
    builder
}

pub(crate) fn event_bridge_configuration_correct_errors(
    mut builder: crate::types::builders::EventBridgeConfigurationBuilder,
) -> crate::types::builders::EventBridgeConfigurationBuilder {
    if builder.enabled.is_none() {
        builder.enabled = Some(Default::default())
    }
    builder
}

pub(crate) fn case_summary_correct_errors(mut builder: crate::types::builders::CaseSummaryBuilder) -> crate::types::builders::CaseSummaryBuilder {
    if builder.case_id.is_none() {
        builder.case_id = Some(Default::default())
    }
    if builder.template_id.is_none() {
        builder.template_id = Some(Default::default())
    }
    builder
}

pub(crate) fn domain_summary_correct_errors(
    mut builder: crate::types::builders::DomainSummaryBuilder,
) -> crate::types::builders::DomainSummaryBuilder {
    if builder.domain_id.is_none() {
        builder.domain_id = Some(Default::default())
    }
    if builder.domain_arn.is_none() {
        builder.domain_arn = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    builder
}

pub(crate) fn field_error_correct_errors(mut builder: crate::types::builders::FieldErrorBuilder) -> crate::types::builders::FieldErrorBuilder {
    if builder.id.is_none() {
        builder.id = Some(Default::default())
    }
    if builder.error_code.is_none() {
        builder.error_code = Some(Default::default())
    }
    builder
}

pub(crate) fn field_option_correct_errors(mut builder: crate::types::builders::FieldOptionBuilder) -> crate::types::builders::FieldOptionBuilder {
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    if builder.active.is_none() {
        builder.active = Some(Default::default())
    }
    builder
}

pub(crate) fn field_option_error_correct_errors(
    mut builder: crate::types::builders::FieldOptionErrorBuilder,
) -> crate::types::builders::FieldOptionErrorBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    if builder.error_code.is_none() {
        builder.error_code = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}

pub(crate) fn field_summary_correct_errors(mut builder: crate::types::builders::FieldSummaryBuilder) -> crate::types::builders::FieldSummaryBuilder {
    if builder.field_id.is_none() {
        builder.field_id = Some(Default::default())
    }
    if builder.field_arn.is_none() {
        builder.field_arn = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::FieldType>().ok()
    }
    if builder.namespace.is_none() {
        builder.namespace = "no value was set".parse::<crate::types::FieldNamespace>().ok()
    }
    builder
}

pub(crate) fn field_value_correct_errors(mut builder: crate::types::builders::FieldValueBuilder) -> crate::types::builders::FieldValueBuilder {
    if builder.id.is_none() {
        builder.id = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(crate::types::FieldValueUnion::Unknown)
    }
    builder
}

pub(crate) fn get_field_response_correct_errors(
    mut builder: crate::types::builders::GetFieldResponseBuilder,
) -> crate::types::builders::GetFieldResponseBuilder {
    if builder.field_id.is_none() {
        builder.field_id = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.field_arn.is_none() {
        builder.field_arn = Some(Default::default())
    }
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::FieldType>().ok()
    }
    if builder.namespace.is_none() {
        builder.namespace = "no value was set".parse::<crate::types::FieldNamespace>().ok()
    }
    builder
}

pub(crate) fn layout_summary_correct_errors(
    mut builder: crate::types::builders::LayoutSummaryBuilder,
) -> crate::types::builders::LayoutSummaryBuilder {
    if builder.layout_id.is_none() {
        builder.layout_id = Some(Default::default())
    }
    if builder.layout_arn.is_none() {
        builder.layout_arn = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    builder
}

pub(crate) fn required_field_correct_errors(
    mut builder: crate::types::builders::RequiredFieldBuilder,
) -> crate::types::builders::RequiredFieldBuilder {
    if builder.field_id.is_none() {
        builder.field_id = Some(Default::default())
    }
    builder
}

pub(crate) fn search_cases_response_item_correct_errors(
    mut builder: crate::types::builders::SearchCasesResponseItemBuilder,
) -> crate::types::builders::SearchCasesResponseItemBuilder {
    if builder.case_id.is_none() {
        builder.case_id = Some(Default::default())
    }
    if builder.template_id.is_none() {
        builder.template_id = Some(Default::default())
    }
    if builder.fields.is_none() {
        builder.fields = Some(Default::default())
    }
    builder
}

pub(crate) fn search_related_items_response_item_correct_errors(
    mut builder: crate::types::builders::SearchRelatedItemsResponseItemBuilder,
) -> crate::types::builders::SearchRelatedItemsResponseItemBuilder {
    if builder.related_item_id.is_none() {
        builder.related_item_id = Some(Default::default())
    }
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::RelatedItemType>().ok()
    }
    if builder.association_time.is_none() {
        builder.association_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.content.is_none() {
        builder.content = Some(crate::types::RelatedItemContent::Unknown)
    }
    builder
}

pub(crate) fn template_summary_correct_errors(
    mut builder: crate::types::builders::TemplateSummaryBuilder,
) -> crate::types::builders::TemplateSummaryBuilder {
    if builder.template_id.is_none() {
        builder.template_id = Some(Default::default())
    }
    if builder.template_arn.is_none() {
        builder.template_arn = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.status.is_none() {
        builder.status = "no value was set".parse::<crate::types::TemplateStatus>().ok()
    }
    builder
}

pub(crate) fn case_event_included_data_correct_errors(
    mut builder: crate::types::builders::CaseEventIncludedDataBuilder,
) -> crate::types::builders::CaseEventIncludedDataBuilder {
    if builder.fields.is_none() {
        builder.fields = Some(Default::default())
    }
    builder
}

pub(crate) fn related_item_event_included_data_correct_errors(
    mut builder: crate::types::builders::RelatedItemEventIncludedDataBuilder,
) -> crate::types::builders::RelatedItemEventIncludedDataBuilder {
    if builder.include_content.is_none() {
        builder.include_content = Some(Default::default())
    }
    builder
}

pub(crate) fn comment_content_correct_errors(
    mut builder: crate::types::builders::CommentContentBuilder,
) -> crate::types::builders::CommentContentBuilder {
    if builder.body.is_none() {
        builder.body = Some(Default::default())
    }
    if builder.content_type.is_none() {
        builder.content_type = "no value was set".parse::<crate::types::CommentBodyTextType>().ok()
    }
    builder
}

pub(crate) fn contact_content_correct_errors(
    mut builder: crate::types::builders::ContactContentBuilder,
) -> crate::types::builders::ContactContentBuilder {
    if builder.contact_arn.is_none() {
        builder.contact_arn = Some(Default::default())
    }
    if builder.channel.is_none() {
        builder.channel = Some(Default::default())
    }
    if builder.connected_to_system_time.is_none() {
        builder.connected_to_system_time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    builder
}

pub(crate) fn field_identifier_correct_errors(
    mut builder: crate::types::builders::FieldIdentifierBuilder,
) -> crate::types::builders::FieldIdentifierBuilder {
    if builder.id.is_none() {
        builder.id = Some(Default::default())
    }
    builder
}

pub(crate) fn field_group_correct_errors(mut builder: crate::types::builders::FieldGroupBuilder) -> crate::types::builders::FieldGroupBuilder {
    if builder.fields.is_none() {
        builder.fields = Some(Default::default())
    }
    builder
}

pub(crate) fn field_item_correct_errors(mut builder: crate::types::builders::FieldItemBuilder) -> crate::types::builders::FieldItemBuilder {
    if builder.id.is_none() {
        builder.id = Some(Default::default())
    }
    builder
}
