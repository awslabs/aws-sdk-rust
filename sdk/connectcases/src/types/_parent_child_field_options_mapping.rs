// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A mapping between a parent field option value and child field option values.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ParentChildFieldOptionsMapping {
    /// <p>The value in the parent field.</p>
    pub parent_field_option_value: ::std::string::String,
    /// <p>A list of allowed values in the child field.</p>
    pub child_field_option_values: ::std::vec::Vec<::std::string::String>,
}
impl ParentChildFieldOptionsMapping {
    /// <p>The value in the parent field.</p>
    pub fn parent_field_option_value(&self) -> &str {
        use std::ops::Deref;
        self.parent_field_option_value.deref()
    }
    /// <p>A list of allowed values in the child field.</p>
    pub fn child_field_option_values(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.child_field_option_values.deref()
    }
}
impl ParentChildFieldOptionsMapping {
    /// Creates a new builder-style object to manufacture [`ParentChildFieldOptionsMapping`](crate::types::ParentChildFieldOptionsMapping).
    pub fn builder() -> crate::types::builders::ParentChildFieldOptionsMappingBuilder {
        crate::types::builders::ParentChildFieldOptionsMappingBuilder::default()
    }
}

/// A builder for [`ParentChildFieldOptionsMapping`](crate::types::ParentChildFieldOptionsMapping).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ParentChildFieldOptionsMappingBuilder {
    pub(crate) parent_field_option_value: ::std::option::Option<::std::string::String>,
    pub(crate) child_field_option_values: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl ParentChildFieldOptionsMappingBuilder {
    /// <p>The value in the parent field.</p>
    /// This field is required.
    pub fn parent_field_option_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.parent_field_option_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The value in the parent field.</p>
    pub fn set_parent_field_option_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.parent_field_option_value = input;
        self
    }
    /// <p>The value in the parent field.</p>
    pub fn get_parent_field_option_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.parent_field_option_value
    }
    /// Appends an item to `child_field_option_values`.
    ///
    /// To override the contents of this collection use [`set_child_field_option_values`](Self::set_child_field_option_values).
    ///
    /// <p>A list of allowed values in the child field.</p>
    pub fn child_field_option_values(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.child_field_option_values.unwrap_or_default();
        v.push(input.into());
        self.child_field_option_values = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of allowed values in the child field.</p>
    pub fn set_child_field_option_values(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.child_field_option_values = input;
        self
    }
    /// <p>A list of allowed values in the child field.</p>
    pub fn get_child_field_option_values(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.child_field_option_values
    }
    /// Consumes the builder and constructs a [`ParentChildFieldOptionsMapping`](crate::types::ParentChildFieldOptionsMapping).
    /// This method will fail if any of the following fields are not set:
    /// - [`parent_field_option_value`](crate::types::builders::ParentChildFieldOptionsMappingBuilder::parent_field_option_value)
    /// - [`child_field_option_values`](crate::types::builders::ParentChildFieldOptionsMappingBuilder::child_field_option_values)
    pub fn build(self) -> ::std::result::Result<crate::types::ParentChildFieldOptionsMapping, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ParentChildFieldOptionsMapping {
            parent_field_option_value: self.parent_field_option_value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "parent_field_option_value",
                    "parent_field_option_value was not specified but it is required when building ParentChildFieldOptionsMapping",
                )
            })?,
            child_field_option_values: self.child_field_option_values.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "child_field_option_values",
                    "child_field_option_values was not specified but it is required when building ParentChildFieldOptionsMapping",
                )
            })?,
        })
    }
}
