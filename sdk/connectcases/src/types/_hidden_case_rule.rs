// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A rule that controls field visibility based on conditions. Fields can be shown or hidden dynamically based on values in other fields.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HiddenCaseRule {
    /// <p>Whether the field is hidden when no conditions match.</p>
    pub default_value: bool,
    /// <p>A list of conditions that determine field visibility.</p>
    pub conditions: ::std::vec::Vec<crate::types::BooleanCondition>,
}
impl HiddenCaseRule {
    /// <p>Whether the field is hidden when no conditions match.</p>
    pub fn default_value(&self) -> bool {
        self.default_value
    }
    /// <p>A list of conditions that determine field visibility.</p>
    pub fn conditions(&self) -> &[crate::types::BooleanCondition] {
        use std::ops::Deref;
        self.conditions.deref()
    }
}
impl HiddenCaseRule {
    /// Creates a new builder-style object to manufacture [`HiddenCaseRule`](crate::types::HiddenCaseRule).
    pub fn builder() -> crate::types::builders::HiddenCaseRuleBuilder {
        crate::types::builders::HiddenCaseRuleBuilder::default()
    }
}

/// A builder for [`HiddenCaseRule`](crate::types::HiddenCaseRule).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct HiddenCaseRuleBuilder {
    pub(crate) default_value: ::std::option::Option<bool>,
    pub(crate) conditions: ::std::option::Option<::std::vec::Vec<crate::types::BooleanCondition>>,
}
impl HiddenCaseRuleBuilder {
    /// <p>Whether the field is hidden when no conditions match.</p>
    /// This field is required.
    pub fn default_value(mut self, input: bool) -> Self {
        self.default_value = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether the field is hidden when no conditions match.</p>
    pub fn set_default_value(mut self, input: ::std::option::Option<bool>) -> Self {
        self.default_value = input;
        self
    }
    /// <p>Whether the field is hidden when no conditions match.</p>
    pub fn get_default_value(&self) -> &::std::option::Option<bool> {
        &self.default_value
    }
    /// Appends an item to `conditions`.
    ///
    /// To override the contents of this collection use [`set_conditions`](Self::set_conditions).
    ///
    /// <p>A list of conditions that determine field visibility.</p>
    pub fn conditions(mut self, input: crate::types::BooleanCondition) -> Self {
        let mut v = self.conditions.unwrap_or_default();
        v.push(input);
        self.conditions = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of conditions that determine field visibility.</p>
    pub fn set_conditions(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::BooleanCondition>>) -> Self {
        self.conditions = input;
        self
    }
    /// <p>A list of conditions that determine field visibility.</p>
    pub fn get_conditions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BooleanCondition>> {
        &self.conditions
    }
    /// Consumes the builder and constructs a [`HiddenCaseRule`](crate::types::HiddenCaseRule).
    /// This method will fail if any of the following fields are not set:
    /// - [`default_value`](crate::types::builders::HiddenCaseRuleBuilder::default_value)
    /// - [`conditions`](crate::types::builders::HiddenCaseRuleBuilder::conditions)
    pub fn build(self) -> ::std::result::Result<crate::types::HiddenCaseRule, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::HiddenCaseRule {
            default_value: self.default_value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "default_value",
                    "default_value was not specified but it is required when building HiddenCaseRule",
                )
            })?,
            conditions: self.conditions.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "conditions",
                    "conditions was not specified but it is required when building HiddenCaseRule",
                )
            })?,
        })
    }
}
