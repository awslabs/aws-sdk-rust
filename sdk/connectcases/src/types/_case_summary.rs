// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Case summary information.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CaseSummary {
    /// <p>A unique identifier of the case.</p>
    pub case_id: ::std::string::String,
    /// <p>A unique identifier of a template.</p>
    pub template_id: ::std::string::String,
}
impl CaseSummary {
    /// <p>A unique identifier of the case.</p>
    pub fn case_id(&self) -> &str {
        use std::ops::Deref;
        self.case_id.deref()
    }
    /// <p>A unique identifier of a template.</p>
    pub fn template_id(&self) -> &str {
        use std::ops::Deref;
        self.template_id.deref()
    }
}
impl CaseSummary {
    /// Creates a new builder-style object to manufacture [`CaseSummary`](crate::types::CaseSummary).
    pub fn builder() -> crate::types::builders::CaseSummaryBuilder {
        crate::types::builders::CaseSummaryBuilder::default()
    }
}

/// A builder for [`CaseSummary`](crate::types::CaseSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CaseSummaryBuilder {
    pub(crate) case_id: ::std::option::Option<::std::string::String>,
    pub(crate) template_id: ::std::option::Option<::std::string::String>,
}
impl CaseSummaryBuilder {
    /// <p>A unique identifier of the case.</p>
    /// This field is required.
    pub fn case_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.case_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier of the case.</p>
    pub fn set_case_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.case_id = input;
        self
    }
    /// <p>A unique identifier of the case.</p>
    pub fn get_case_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.case_id
    }
    /// <p>A unique identifier of a template.</p>
    /// This field is required.
    pub fn template_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.template_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier of a template.</p>
    pub fn set_template_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.template_id = input;
        self
    }
    /// <p>A unique identifier of a template.</p>
    pub fn get_template_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.template_id
    }
    /// Consumes the builder and constructs a [`CaseSummary`](crate::types::CaseSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`case_id`](crate::types::builders::CaseSummaryBuilder::case_id)
    /// - [`template_id`](crate::types::builders::CaseSummaryBuilder::template_id)
    pub fn build(self) -> ::std::result::Result<crate::types::CaseSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CaseSummary {
            case_id: self.case_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "case_id",
                    "case_id was not specified but it is required when building CaseSummary",
                )
            })?,
            template_id: self.template_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "template_id",
                    "template_id was not specified but it is required when building CaseSummary",
                )
            })?,
        })
    }
}
