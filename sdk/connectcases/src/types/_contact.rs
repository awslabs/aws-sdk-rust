// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents an Amazon Connect contact object. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Contact {
    /// <p>A unique identifier of a contact in Amazon Connect.</p>
    #[doc(hidden)]
    pub contact_arn: std::option::Option<std::string::String>,
}
impl Contact {
    /// <p>A unique identifier of a contact in Amazon Connect.</p>
    pub fn contact_arn(&self) -> std::option::Option<&str> {
        self.contact_arn.as_deref()
    }
}
impl Contact {
    /// Creates a new builder-style object to manufacture [`Contact`](crate::types::Contact).
    pub fn builder() -> crate::types::builders::ContactBuilder {
        crate::types::builders::ContactBuilder::default()
    }
}

/// A builder for [`Contact`](crate::types::Contact).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ContactBuilder {
    pub(crate) contact_arn: std::option::Option<std::string::String>,
}
impl ContactBuilder {
    /// <p>A unique identifier of a contact in Amazon Connect.</p>
    pub fn contact_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.contact_arn = Some(input.into());
        self
    }
    /// <p>A unique identifier of a contact in Amazon Connect.</p>
    pub fn set_contact_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.contact_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`Contact`](crate::types::Contact).
    pub fn build(self) -> crate::types::Contact {
        crate::types::Contact {
            contact_arn: self.contact_arn,
        }
    }
}
