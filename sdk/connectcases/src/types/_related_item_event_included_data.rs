// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details of what related item data is published through the case event stream.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RelatedItemEventIncludedData {
    /// <p>Details of what related item data is published through the case event stream.</p>
    pub include_content: bool,
}
impl RelatedItemEventIncludedData {
    /// <p>Details of what related item data is published through the case event stream.</p>
    pub fn include_content(&self) -> bool {
        self.include_content
    }
}
impl RelatedItemEventIncludedData {
    /// Creates a new builder-style object to manufacture [`RelatedItemEventIncludedData`](crate::types::RelatedItemEventIncludedData).
    pub fn builder() -> crate::types::builders::RelatedItemEventIncludedDataBuilder {
        crate::types::builders::RelatedItemEventIncludedDataBuilder::default()
    }
}

/// A builder for [`RelatedItemEventIncludedData`](crate::types::RelatedItemEventIncludedData).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RelatedItemEventIncludedDataBuilder {
    pub(crate) include_content: ::std::option::Option<bool>,
}
impl RelatedItemEventIncludedDataBuilder {
    /// <p>Details of what related item data is published through the case event stream.</p>
    /// This field is required.
    pub fn include_content(mut self, input: bool) -> Self {
        self.include_content = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details of what related item data is published through the case event stream.</p>
    pub fn set_include_content(mut self, input: ::std::option::Option<bool>) -> Self {
        self.include_content = input;
        self
    }
    /// <p>Details of what related item data is published through the case event stream.</p>
    pub fn get_include_content(&self) -> &::std::option::Option<bool> {
        &self.include_content
    }
    /// Consumes the builder and constructs a [`RelatedItemEventIncludedData`](crate::types::RelatedItemEventIncludedData).
    /// This method will fail if any of the following fields are not set:
    /// - [`include_content`](crate::types::builders::RelatedItemEventIncludedDataBuilder::include_content)
    pub fn build(self) -> ::std::result::Result<crate::types::RelatedItemEventIncludedData, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RelatedItemEventIncludedData {
            include_content: self.include_content.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "include_content",
                    "include_content was not specified but it is required when building RelatedItemEventIncludedData",
                )
            })?,
        })
    }
}
