// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Object for the summarized details of the domain.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DomainSummary {
    /// <p>The unique identifier of the domain.</p>
    #[doc(hidden)]
    pub domain_id: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the domain.</p>
    #[doc(hidden)]
    pub domain_arn: std::option::Option<std::string::String>,
    /// <p>The name of the domain.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl DomainSummary {
    /// <p>The unique identifier of the domain.</p>
    pub fn domain_id(&self) -> std::option::Option<&str> {
        self.domain_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the domain.</p>
    pub fn domain_arn(&self) -> std::option::Option<&str> {
        self.domain_arn.as_deref()
    }
    /// <p>The name of the domain.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl DomainSummary {
    /// Creates a new builder-style object to manufacture [`DomainSummary`](crate::types::DomainSummary).
    pub fn builder() -> crate::types::builders::DomainSummaryBuilder {
        crate::types::builders::DomainSummaryBuilder::default()
    }
}

/// A builder for [`DomainSummary`](crate::types::DomainSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DomainSummaryBuilder {
    pub(crate) domain_id: std::option::Option<std::string::String>,
    pub(crate) domain_arn: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
}
impl DomainSummaryBuilder {
    /// <p>The unique identifier of the domain.</p>
    pub fn domain_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the domain.</p>
    pub fn set_domain_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_id = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the domain.</p>
    pub fn domain_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the domain.</p>
    pub fn set_domain_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_arn = input;
        self
    }
    /// <p>The name of the domain.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the domain.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`DomainSummary`](crate::types::DomainSummary).
    pub fn build(self) -> crate::types::DomainSummary {
        crate::types::DomainSummary {
            domain_id: self.domain_id,
            domain_arn: self.domain_arn,
            name: self.name,
        }
    }
}
