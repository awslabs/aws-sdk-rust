// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTemplates`](crate::client::fluent_builders::ListTemplates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTemplates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_id(impl Into<String>)`](crate::client::fluent_builders::ListTemplates::domain_id) / [`set_domain_id(Option<String>)`](crate::client::fluent_builders::ListTemplates::set_domain_id): <p>The unique identifier of the Cases domain. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTemplates::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTemplates::set_max_results): <p>The maximum number of results to return per page.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTemplates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTemplates::set_next_token): <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>
    ///   - [`status(Vec<TemplateStatus>)`](crate::client::fluent_builders::ListTemplates::status) / [`set_status(Option<Vec<TemplateStatus>>)`](crate::client::fluent_builders::ListTemplates::set_status): <p>A list of status values to filter on.</p>
    /// - On success, responds with [`ListTemplatesOutput`](crate::output::ListTemplatesOutput) with field(s):
    ///   - [`templates(Option<Vec<TemplateSummary>>)`](crate::output::ListTemplatesOutput::templates): <p>List of template summary objects.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTemplatesOutput::next_token): <p>The token for the next set of results. This is null if there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListTemplatesError>`](crate::error::ListTemplatesError)
    pub fn list_templates(&self) -> crate::client::fluent_builders::ListTemplates {
        crate::client::fluent_builders::ListTemplates::new(self.handle.clone())
    }
}
