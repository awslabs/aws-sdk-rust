// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetLayout`](crate::operation::get_layout::builders::GetLayoutFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_id(impl Into<String>)`](crate::operation::get_layout::builders::GetLayoutFluentBuilder::domain_id) / [`set_domain_id(Option<String>)`](crate::operation::get_layout::builders::GetLayoutFluentBuilder::set_domain_id): <p>The unique identifier of the Cases domain. </p>
    ///   - [`layout_id(impl Into<String>)`](crate::operation::get_layout::builders::GetLayoutFluentBuilder::layout_id) / [`set_layout_id(Option<String>)`](crate::operation::get_layout::builders::GetLayoutFluentBuilder::set_layout_id): <p>The unique identifier of the layout.</p>
    /// - On success, responds with [`GetLayoutOutput`](crate::operation::get_layout::GetLayoutOutput) with field(s):
    ///   - [`layout_id(Option<String>)`](crate::operation::get_layout::GetLayoutOutput::layout_id): <p>The unique identifier of the layout.</p>
    ///   - [`layout_arn(Option<String>)`](crate::operation::get_layout::GetLayoutOutput::layout_arn): <p>The Amazon Resource Name (ARN) of the newly created layout.</p>
    ///   - [`name(Option<String>)`](crate::operation::get_layout::GetLayoutOutput::name): <p>The name of the layout. It must be unique.</p>
    ///   - [`content(Option<LayoutContent>)`](crate::operation::get_layout::GetLayoutOutput::content): <p>Information about which fields will be present in the layout, the order of the fields, and read-only attribute of the field. </p>
    ///   - [`tags(Option<HashMap<String, Option<String>>>)`](crate::operation::get_layout::GetLayoutOutput::tags): <p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>
    /// - On failure, responds with [`SdkError<GetLayoutError>`](crate::operation::get_layout::GetLayoutError)
    pub fn get_layout(&self) -> crate::operation::get_layout::builders::GetLayoutFluentBuilder {
        crate::operation::get_layout::builders::GetLayoutFluentBuilder::new(self.handle.clone())
    }
}
