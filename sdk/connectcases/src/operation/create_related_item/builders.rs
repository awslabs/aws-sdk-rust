// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::create_related_item::_create_related_item_output::CreateRelatedItemOutputBuilder;

pub use crate::operation::create_related_item::_create_related_item_input::CreateRelatedItemInputBuilder;

/// Fluent builder constructing a request to `CreateRelatedItem`.
///
/// <p>Creates a related item (comments, tasks, and contacts) and associates it with a case.</p> <note>
/// <p>A Related Item is a resource that is associated with a case. It may or may not have an external identifier linking it to an external resource (for example, a <code>contactArn</code>). All Related Items have their own internal identifier, the <code>relatedItemArn</code>. Examples of related items include <code>comments</code> and <code>contacts</code>.</p>
/// </note>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct CreateRelatedItemFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::create_related_item::builders::CreateRelatedItemInputBuilder,
}
impl CreateRelatedItemFluentBuilder {
    /// Creates a new `CreateRelatedItem`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::create_related_item::CreateRelatedItem,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::create_related_item::CreateRelatedItemError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::create_related_item::CreateRelatedItemOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::create_related_item::CreateRelatedItemError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn domain_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.domain_id(input.into());
        self
    }
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn set_domain_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_domain_id(input);
        self
    }
    /// <p>A unique identifier of the case.</p>
    pub fn case_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.case_id(input.into());
        self
    }
    /// <p>A unique identifier of the case.</p>
    pub fn set_case_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_case_id(input);
        self
    }
    /// <p>The type of a related item.</p>
    pub fn r#type(mut self, input: crate::types::RelatedItemType) -> Self {
        self.inner = self.inner.r#type(input);
        self
    }
    /// <p>The type of a related item.</p>
    pub fn set_type(mut self, input: std::option::Option<crate::types::RelatedItemType>) -> Self {
        self.inner = self.inner.set_type(input);
        self
    }
    /// <p>The content of a related item to be created.</p>
    pub fn content(mut self, input: crate::types::RelatedItemInputContent) -> Self {
        self.inner = self.inner.content(input);
        self
    }
    /// <p>The content of a related item to be created.</p>
    pub fn set_content(
        mut self,
        input: std::option::Option<crate::types::RelatedItemInputContent>,
    ) -> Self {
        self.inner = self.inner.set_content(input);
        self
    }
}
