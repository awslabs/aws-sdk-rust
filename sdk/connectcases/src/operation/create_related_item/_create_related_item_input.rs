// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateRelatedItemInput {
    /// <p>The unique identifier of the Cases domain. </p>
    #[doc(hidden)]
    pub domain_id: std::option::Option<std::string::String>,
    /// <p>A unique identifier of the case.</p>
    #[doc(hidden)]
    pub case_id: std::option::Option<std::string::String>,
    /// <p>The type of a related item.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::RelatedItemType>,
    /// <p>The content of a related item to be created.</p>
    #[doc(hidden)]
    pub content: std::option::Option<crate::types::RelatedItemInputContent>,
}
impl CreateRelatedItemInput {
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn domain_id(&self) -> std::option::Option<&str> {
        self.domain_id.as_deref()
    }
    /// <p>A unique identifier of the case.</p>
    pub fn case_id(&self) -> std::option::Option<&str> {
        self.case_id.as_deref()
    }
    /// <p>The type of a related item.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::RelatedItemType> {
        self.r#type.as_ref()
    }
    /// <p>The content of a related item to be created.</p>
    pub fn content(&self) -> std::option::Option<&crate::types::RelatedItemInputContent> {
        self.content.as_ref()
    }
}
impl CreateRelatedItemInput {
    /// Creates a new builder-style object to manufacture [`CreateRelatedItemInput`](crate::operation::create_related_item::CreateRelatedItemInput).
    pub fn builder(
    ) -> crate::operation::create_related_item::builders::CreateRelatedItemInputBuilder {
        crate::operation::create_related_item::builders::CreateRelatedItemInputBuilder::default()
    }
}

/// A builder for [`CreateRelatedItemInput`](crate::operation::create_related_item::CreateRelatedItemInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateRelatedItemInputBuilder {
    pub(crate) domain_id: std::option::Option<std::string::String>,
    pub(crate) case_id: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<crate::types::RelatedItemType>,
    pub(crate) content: std::option::Option<crate::types::RelatedItemInputContent>,
}
impl CreateRelatedItemInputBuilder {
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn domain_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn set_domain_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_id = input;
        self
    }
    /// <p>A unique identifier of the case.</p>
    pub fn case_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.case_id = Some(input.into());
        self
    }
    /// <p>A unique identifier of the case.</p>
    pub fn set_case_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.case_id = input;
        self
    }
    /// <p>The type of a related item.</p>
    pub fn r#type(mut self, input: crate::types::RelatedItemType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The type of a related item.</p>
    pub fn set_type(mut self, input: std::option::Option<crate::types::RelatedItemType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The content of a related item to be created.</p>
    pub fn content(mut self, input: crate::types::RelatedItemInputContent) -> Self {
        self.content = Some(input);
        self
    }
    /// <p>The content of a related item to be created.</p>
    pub fn set_content(
        mut self,
        input: std::option::Option<crate::types::RelatedItemInputContent>,
    ) -> Self {
        self.content = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateRelatedItemInput`](crate::operation::create_related_item::CreateRelatedItemInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_related_item::CreateRelatedItemInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_related_item::CreateRelatedItemInput {
                domain_id: self.domain_id,
                case_id: self.case_id,
                r#type: self.r#type,
                content: self.content,
            },
        )
    }
}
