// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchGetFieldInput {
    /// <p>The unique identifier of the Cases domain. </p>
    #[doc(hidden)]
    pub domain_id: std::option::Option<std::string::String>,
    /// <p>A list of unique field identifiers. </p>
    #[doc(hidden)]
    pub fields: std::option::Option<std::vec::Vec<crate::types::FieldIdentifier>>,
}
impl BatchGetFieldInput {
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn domain_id(&self) -> std::option::Option<&str> {
        self.domain_id.as_deref()
    }
    /// <p>A list of unique field identifiers. </p>
    pub fn fields(&self) -> std::option::Option<&[crate::types::FieldIdentifier]> {
        self.fields.as_deref()
    }
}
impl BatchGetFieldInput {
    /// Creates a new builder-style object to manufacture [`BatchGetFieldInput`](crate::operation::batch_get_field::BatchGetFieldInput).
    pub fn builder() -> crate::operation::batch_get_field::builders::BatchGetFieldInputBuilder {
        crate::operation::batch_get_field::builders::BatchGetFieldInputBuilder::default()
    }
}

/// A builder for [`BatchGetFieldInput`](crate::operation::batch_get_field::BatchGetFieldInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchGetFieldInputBuilder {
    pub(crate) domain_id: std::option::Option<std::string::String>,
    pub(crate) fields: std::option::Option<std::vec::Vec<crate::types::FieldIdentifier>>,
}
impl BatchGetFieldInputBuilder {
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn domain_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn set_domain_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_id = input;
        self
    }
    /// Appends an item to `fields`.
    ///
    /// To override the contents of this collection use [`set_fields`](Self::set_fields).
    ///
    /// <p>A list of unique field identifiers. </p>
    pub fn fields(mut self, input: crate::types::FieldIdentifier) -> Self {
        let mut v = self.fields.unwrap_or_default();
        v.push(input);
        self.fields = Some(v);
        self
    }
    /// <p>A list of unique field identifiers. </p>
    pub fn set_fields(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::FieldIdentifier>>,
    ) -> Self {
        self.fields = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetFieldInput`](crate::operation::batch_get_field::BatchGetFieldInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_get_field::BatchGetFieldInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::batch_get_field::BatchGetFieldInput {
            domain_id: self.domain_id,
            fields: self.fields,
        })
    }
}
