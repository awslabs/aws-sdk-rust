// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchPutFieldOptionsInput {
    /// <p>The unique identifier of the Cases domain. </p>
    #[doc(hidden)]
    pub domain_id: std::option::Option<std::string::String>,
    /// <p>The unique identifier of a field.</p>
    #[doc(hidden)]
    pub field_id: std::option::Option<std::string::String>,
    /// <p>A list of <code>FieldOption</code> objects.</p>
    #[doc(hidden)]
    pub options: std::option::Option<std::vec::Vec<crate::types::FieldOption>>,
}
impl BatchPutFieldOptionsInput {
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn domain_id(&self) -> std::option::Option<&str> {
        self.domain_id.as_deref()
    }
    /// <p>The unique identifier of a field.</p>
    pub fn field_id(&self) -> std::option::Option<&str> {
        self.field_id.as_deref()
    }
    /// <p>A list of <code>FieldOption</code> objects.</p>
    pub fn options(&self) -> std::option::Option<&[crate::types::FieldOption]> {
        self.options.as_deref()
    }
}
impl BatchPutFieldOptionsInput {
    /// Creates a new builder-style object to manufacture [`BatchPutFieldOptionsInput`](crate::operation::batch_put_field_options::BatchPutFieldOptionsInput).
    pub fn builder(
    ) -> crate::operation::batch_put_field_options::builders::BatchPutFieldOptionsInputBuilder {
        crate::operation::batch_put_field_options::builders::BatchPutFieldOptionsInputBuilder::default()
    }
}

/// A builder for [`BatchPutFieldOptionsInput`](crate::operation::batch_put_field_options::BatchPutFieldOptionsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchPutFieldOptionsInputBuilder {
    pub(crate) domain_id: std::option::Option<std::string::String>,
    pub(crate) field_id: std::option::Option<std::string::String>,
    pub(crate) options: std::option::Option<std::vec::Vec<crate::types::FieldOption>>,
}
impl BatchPutFieldOptionsInputBuilder {
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn domain_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn set_domain_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_id = input;
        self
    }
    /// <p>The unique identifier of a field.</p>
    pub fn field_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.field_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of a field.</p>
    pub fn set_field_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.field_id = input;
        self
    }
    /// Appends an item to `options`.
    ///
    /// To override the contents of this collection use [`set_options`](Self::set_options).
    ///
    /// <p>A list of <code>FieldOption</code> objects.</p>
    pub fn options(mut self, input: crate::types::FieldOption) -> Self {
        let mut v = self.options.unwrap_or_default();
        v.push(input);
        self.options = Some(v);
        self
    }
    /// <p>A list of <code>FieldOption</code> objects.</p>
    pub fn set_options(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::FieldOption>>,
    ) -> Self {
        self.options = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchPutFieldOptionsInput`](crate::operation::batch_put_field_options::BatchPutFieldOptionsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_put_field_options::BatchPutFieldOptionsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::batch_put_field_options::BatchPutFieldOptionsInput {
                domain_id: self.domain_id,
                field_id: self.field_id,
                options: self.options,
            },
        )
    }
}
