// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutCaseEventConfigurationInput {
    /// <p>The unique identifier of the Cases domain. </p>
    pub domain_id: ::std::option::Option<::std::string::String>,
    /// <p>Configuration to enable EventBridge case event delivery and determine what data is delivered.</p>
    pub event_bridge: ::std::option::Option<crate::types::EventBridgeConfiguration>,
}
impl PutCaseEventConfigurationInput {
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn domain_id(&self) -> ::std::option::Option<&str> {
        self.domain_id.as_deref()
    }
    /// <p>Configuration to enable EventBridge case event delivery and determine what data is delivered.</p>
    pub fn event_bridge(&self) -> ::std::option::Option<&crate::types::EventBridgeConfiguration> {
        self.event_bridge.as_ref()
    }
}
impl PutCaseEventConfigurationInput {
    /// Creates a new builder-style object to manufacture [`PutCaseEventConfigurationInput`](crate::operation::put_case_event_configuration::PutCaseEventConfigurationInput).
    pub fn builder() -> crate::operation::put_case_event_configuration::builders::PutCaseEventConfigurationInputBuilder {
        crate::operation::put_case_event_configuration::builders::PutCaseEventConfigurationInputBuilder::default()
    }
}

/// A builder for [`PutCaseEventConfigurationInput`](crate::operation::put_case_event_configuration::PutCaseEventConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutCaseEventConfigurationInputBuilder {
    pub(crate) domain_id: ::std::option::Option<::std::string::String>,
    pub(crate) event_bridge: ::std::option::Option<crate::types::EventBridgeConfiguration>,
}
impl PutCaseEventConfigurationInputBuilder {
    /// <p>The unique identifier of the Cases domain. </p>
    /// This field is required.
    pub fn domain_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn set_domain_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_id = input;
        self
    }
    /// <p>The unique identifier of the Cases domain. </p>
    pub fn get_domain_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_id
    }
    /// <p>Configuration to enable EventBridge case event delivery and determine what data is delivered.</p>
    /// This field is required.
    pub fn event_bridge(mut self, input: crate::types::EventBridgeConfiguration) -> Self {
        self.event_bridge = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration to enable EventBridge case event delivery and determine what data is delivered.</p>
    pub fn set_event_bridge(mut self, input: ::std::option::Option<crate::types::EventBridgeConfiguration>) -> Self {
        self.event_bridge = input;
        self
    }
    /// <p>Configuration to enable EventBridge case event delivery and determine what data is delivered.</p>
    pub fn get_event_bridge(&self) -> &::std::option::Option<crate::types::EventBridgeConfiguration> {
        &self.event_bridge
    }
    /// Consumes the builder and constructs a [`PutCaseEventConfigurationInput`](crate::operation::put_case_event_configuration::PutCaseEventConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_case_event_configuration::PutCaseEventConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::put_case_event_configuration::PutCaseEventConfigurationInput {
            domain_id: self.domain_id,
            event_bridge: self.event_bridge,
        })
    }
}
