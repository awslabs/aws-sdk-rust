// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeEndpointInput {
    /// <p>The name of the endpoint you want to get information about. For example, <code>"Name":"us-east-2-custom_bus_A-endpoint"</code>.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The primary Region of the endpoint you want to get information about. For example <code>"HomeRegion": "us-east-1"</code>.</p>
    #[doc(hidden)]
    pub home_region: std::option::Option<std::string::String>,
}
impl DescribeEndpointInput {
    /// <p>The name of the endpoint you want to get information about. For example, <code>"Name":"us-east-2-custom_bus_A-endpoint"</code>.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The primary Region of the endpoint you want to get information about. For example <code>"HomeRegion": "us-east-1"</code>.</p>
    pub fn home_region(&self) -> std::option::Option<&str> {
        self.home_region.as_deref()
    }
}
impl DescribeEndpointInput {
    /// Creates a new builder-style object to manufacture [`DescribeEndpointInput`](crate::operation::describe_endpoint::DescribeEndpointInput).
    pub fn builder() -> crate::operation::describe_endpoint::builders::DescribeEndpointInputBuilder
    {
        crate::operation::describe_endpoint::builders::DescribeEndpointInputBuilder::default()
    }
}

/// A builder for [`DescribeEndpointInput`](crate::operation::describe_endpoint::DescribeEndpointInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeEndpointInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) home_region: std::option::Option<std::string::String>,
}
impl DescribeEndpointInputBuilder {
    /// <p>The name of the endpoint you want to get information about. For example, <code>"Name":"us-east-2-custom_bus_A-endpoint"</code>.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the endpoint you want to get information about. For example, <code>"Name":"us-east-2-custom_bus_A-endpoint"</code>.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The primary Region of the endpoint you want to get information about. For example <code>"HomeRegion": "us-east-1"</code>.</p>
    pub fn home_region(mut self, input: impl Into<std::string::String>) -> Self {
        self.home_region = Some(input.into());
        self
    }
    /// <p>The primary Region of the endpoint you want to get information about. For example <code>"HomeRegion": "us-east-1"</code>.</p>
    pub fn set_home_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.home_region = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeEndpointInput`](crate::operation::describe_endpoint::DescribeEndpointInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_endpoint::DescribeEndpointInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_endpoint::DescribeEndpointInput {
            name: self.name,
            home_region: self.home_region,
        })
    }
}
