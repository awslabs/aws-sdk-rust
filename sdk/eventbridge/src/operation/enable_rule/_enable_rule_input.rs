// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnableRuleInput {
    /// <p>The name of the rule.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.</p>
    pub event_bus_name: ::std::option::Option<::std::string::String>,
}
impl EnableRuleInput {
    /// <p>The name of the rule.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.</p>
    pub fn event_bus_name(&self) -> ::std::option::Option<&str> {
        self.event_bus_name.as_deref()
    }
}
impl EnableRuleInput {
    /// Creates a new builder-style object to manufacture [`EnableRuleInput`](crate::operation::enable_rule::EnableRuleInput).
    pub fn builder() -> crate::operation::enable_rule::builders::EnableRuleInputBuilder {
        crate::operation::enable_rule::builders::EnableRuleInputBuilder::default()
    }
}

/// A builder for [`EnableRuleInput`](crate::operation::enable_rule::EnableRuleInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EnableRuleInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) event_bus_name: ::std::option::Option<::std::string::String>,
}
impl EnableRuleInputBuilder {
    /// <p>The name of the rule.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the rule.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the rule.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.</p>
    pub fn event_bus_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.event_bus_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.</p>
    pub fn set_event_bus_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.event_bus_name = input;
        self
    }
    /// <p>The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.</p>
    pub fn get_event_bus_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.event_bus_name
    }
    /// Consumes the builder and constructs a [`EnableRuleInput`](crate::operation::enable_rule::EnableRuleInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::enable_rule::EnableRuleInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::enable_rule::EnableRuleInput {
            name: self.name,
            event_bus_name: self.event_bus_name,
        })
    }
}
