// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_endpoint_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_endpoint::UpdateEndpointInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.name {
        object.key("Name").string(var_1.as_str());
    }
    if let Some(var_2) = &input.description {
        object.key("Description").string(var_2.as_str());
    }
    if let Some(var_3) = &input.routing_config {
        #[allow(unused_mut)]
        let mut object_4 = object.key("RoutingConfig").start_object();
        crate::protocol_serde::shape_routing_config::ser_routing_config(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.replication_config {
        #[allow(unused_mut)]
        let mut object_6 = object.key("ReplicationConfig").start_object();
        crate::protocol_serde::shape_replication_config::ser_replication_config(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.event_buses {
        let mut array_8 = object.key("EventBuses").start_array();
        for item_9 in var_7 {
            {
                #[allow(unused_mut)]
                let mut object_10 = array_8.value().start_object();
                crate::protocol_serde::shape_endpoint_event_bus::ser_endpoint_event_bus(
                    &mut object_10,
                    item_9,
                )?;
                object_10.finish();
            }
        }
        array_8.finish();
    }
    if let Some(var_11) = &input.role_arn {
        object.key("RoleArn").string(var_11.as_str());
    }
    Ok(())
}
