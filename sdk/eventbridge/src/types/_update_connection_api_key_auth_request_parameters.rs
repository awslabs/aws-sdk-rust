// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the API key authorization parameters to use to update the connection.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateConnectionApiKeyAuthRequestParameters {
    /// <p>The name of the API key to use for authorization.</p>
    #[doc(hidden)]
    pub api_key_name: std::option::Option<std::string::String>,
    /// <p>The value associated with teh API key to use for authorization.</p>
    #[doc(hidden)]
    pub api_key_value: std::option::Option<std::string::String>,
}
impl UpdateConnectionApiKeyAuthRequestParameters {
    /// <p>The name of the API key to use for authorization.</p>
    pub fn api_key_name(&self) -> std::option::Option<&str> {
        self.api_key_name.as_deref()
    }
    /// <p>The value associated with teh API key to use for authorization.</p>
    pub fn api_key_value(&self) -> std::option::Option<&str> {
        self.api_key_value.as_deref()
    }
}
impl UpdateConnectionApiKeyAuthRequestParameters {
    /// Creates a new builder-style object to manufacture [`UpdateConnectionApiKeyAuthRequestParameters`](crate::types::UpdateConnectionApiKeyAuthRequestParameters).
    pub fn builder() -> crate::types::builders::UpdateConnectionApiKeyAuthRequestParametersBuilder {
        crate::types::builders::UpdateConnectionApiKeyAuthRequestParametersBuilder::default()
    }
}

/// A builder for [`UpdateConnectionApiKeyAuthRequestParameters`](crate::types::UpdateConnectionApiKeyAuthRequestParameters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateConnectionApiKeyAuthRequestParametersBuilder {
    pub(crate) api_key_name: std::option::Option<std::string::String>,
    pub(crate) api_key_value: std::option::Option<std::string::String>,
}
impl UpdateConnectionApiKeyAuthRequestParametersBuilder {
    /// <p>The name of the API key to use for authorization.</p>
    pub fn api_key_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.api_key_name = Some(input.into());
        self
    }
    /// <p>The name of the API key to use for authorization.</p>
    pub fn set_api_key_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.api_key_name = input;
        self
    }
    /// <p>The value associated with teh API key to use for authorization.</p>
    pub fn api_key_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.api_key_value = Some(input.into());
        self
    }
    /// <p>The value associated with teh API key to use for authorization.</p>
    pub fn set_api_key_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.api_key_value = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateConnectionApiKeyAuthRequestParameters`](crate::types::UpdateConnectionApiKeyAuthRequestParameters).
    pub fn build(self) -> crate::types::UpdateConnectionApiKeyAuthRequestParameters {
        crate::types::UpdateConnectionApiKeyAuthRequestParameters {
            api_key_name: self.api_key_name,
            api_key_value: self.api_key_value,
        }
    }
}
