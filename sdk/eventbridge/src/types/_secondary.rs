// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The secondary Region that processes events when failover is triggered or replication is enabled.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Secondary {
    /// <p>Defines the secondary Region.</p>
    #[doc(hidden)]
    pub route: std::option::Option<std::string::String>,
}
impl Secondary {
    /// <p>Defines the secondary Region.</p>
    pub fn route(&self) -> std::option::Option<&str> {
        self.route.as_deref()
    }
}
impl Secondary {
    /// Creates a new builder-style object to manufacture [`Secondary`](crate::types::Secondary).
    pub fn builder() -> crate::types::builders::SecondaryBuilder {
        crate::types::builders::SecondaryBuilder::default()
    }
}

/// A builder for [`Secondary`](crate::types::Secondary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SecondaryBuilder {
    pub(crate) route: std::option::Option<std::string::String>,
}
impl SecondaryBuilder {
    /// <p>Defines the secondary Region.</p>
    pub fn route(mut self, input: impl Into<std::string::String>) -> Self {
        self.route = Some(input.into());
        self
    }
    /// <p>Defines the secondary Region.</p>
    pub fn set_route(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.route = input;
        self
    }
    /// Consumes the builder and constructs a [`Secondary`](crate::types::Secondary).
    pub fn build(self) -> crate::types::Secondary {
        crate::types::Secondary { route: self.route }
    }
}
