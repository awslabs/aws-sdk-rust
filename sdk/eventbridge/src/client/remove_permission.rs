// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RemovePermission`](crate::client::fluent_builders::RemovePermission) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`statement_id(impl Into<String>)`](crate::client::fluent_builders::RemovePermission::statement_id) / [`set_statement_id(Option<String>)`](crate::client::fluent_builders::RemovePermission::set_statement_id): <p>The statement ID corresponding to the account that is no longer allowed to put events to the default event bus.</p>
    ///   - [`remove_all_permissions(bool)`](crate::client::fluent_builders::RemovePermission::remove_all_permissions) / [`set_remove_all_permissions(bool)`](crate::client::fluent_builders::RemovePermission::set_remove_all_permissions): <p>Specifies whether to remove all permissions.</p>
    ///   - [`event_bus_name(impl Into<String>)`](crate::client::fluent_builders::RemovePermission::event_bus_name) / [`set_event_bus_name(Option<String>)`](crate::client::fluent_builders::RemovePermission::set_event_bus_name): <p>The name of the event bus to revoke permissions for. If you omit this, the default event bus is used.</p>
    /// - On success, responds with [`RemovePermissionOutput`](crate::output::RemovePermissionOutput)
    /// - On failure, responds with [`SdkError<RemovePermissionError>`](crate::error::RemovePermissionError)
    pub fn remove_permission(&self) -> crate::client::fluent_builders::RemovePermission {
        crate::client::fluent_builders::RemovePermission::new(self.handle.clone())
    }
}
