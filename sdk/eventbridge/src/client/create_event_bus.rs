// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEventBus`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_name): <p>The name of the new event bus. </p>  <p>Event bus names cannot contain the / character. You can't use the name <code>default</code> for a custom event bus, as this name is already used for your account's default event bus.</p>  <p>If this is a partner event bus, the name must exactly match the name of the partner event source that this event bus is matched to.</p>
    ///   - [`event_source_name(impl Into<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::event_source_name) / [`set_event_source_name(Option<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_event_source_name): <p>If you are creating a partner event bus, this specifies the partner event source that the new event bus will be matched with.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_tags): <p>Tags to associate with the event bus.</p>
    /// - On success, responds with [`CreateEventBusOutput`](crate::operation::create_event_bus::CreateEventBusOutput) with field(s):
    ///   - [`event_bus_arn(Option<String>)`](crate::operation::create_event_bus::CreateEventBusOutput::event_bus_arn): <p>The ARN of the new event bus.</p>
    /// - On failure, responds with [`SdkError<CreateEventBusError>`](crate::operation::create_event_bus::CreateEventBusError)
    pub fn create_event_bus(
        &self,
    ) -> crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder {
        crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
