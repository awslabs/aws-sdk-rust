// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RemoveTargets`](crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`rule(impl Into<String>)`](crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder::rule) / [`set_rule(Option<String>)`](crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder::set_rule):<br>required: **true**<br><p>The name of the rule.</p><br>
    ///   - [`event_bus_name(impl Into<String>)`](crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder::event_bus_name) / [`set_event_bus_name(Option<String>)`](crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder::set_event_bus_name):<br>required: **false**<br><p>The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.</p><br>
    ///   - [`ids(impl Into<String>)`](crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder::ids) / [`set_ids(Option<Vec::<String>>)`](crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder::set_ids):<br>required: **true**<br><p>The IDs of the targets to remove from the rule.</p><br>
    ///   - [`force(bool)`](crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder::force) / [`set_force(Option<bool>)`](crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder::set_force):<br>required: **false**<br><p>If this is a managed rule, created by an Amazon Web Services service on your behalf, you must specify <code>Force</code> as <code>True</code> to remove targets. This parameter is ignored for rules that are not managed rules. You can check whether a rule is a managed rule by using <code>DescribeRule</code> or <code>ListRules</code> and checking the <code>ManagedBy</code> field of the response.</p><br>
    /// - On success, responds with [`RemoveTargetsOutput`](crate::operation::remove_targets::RemoveTargetsOutput) with field(s):
    ///   - [`failed_entry_count(i32)`](crate::operation::remove_targets::RemoveTargetsOutput::failed_entry_count): <p>The number of failed entries.</p>
    ///   - [`failed_entries(Option<Vec::<RemoveTargetsResultEntry>>)`](crate::operation::remove_targets::RemoveTargetsOutput::failed_entries): <p>The failed target entries.</p>
    /// - On failure, responds with [`SdkError<RemoveTargetsError>`](crate::operation::remove_targets::RemoveTargetsError)
    pub fn remove_targets(&self) -> crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder {
        crate::operation::remove_targets::builders::RemoveTargetsFluentBuilder::new(self.handle.clone())
    }
}
