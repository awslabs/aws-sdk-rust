// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#![cfg(feature = "test-util")]
#[::tokio::test]
async fn operation_input_test_put_events_1() {
    /* builtIns: {
        "AWS::Region": "us-east-1"
    } */
    /* clientParams: {} */
    let (http_client, rcvr) = ::aws_smithy_runtime::client::http::test_util::capture_request(None);
    let conf = {
        #[allow(unused_mut)]
        let mut builder = aws_sdk_eventbridge::Config::builder().with_test_defaults().http_client(http_client);
        let builder = builder.region(::aws_types::region::Region::new("us-east-1"));
        builder.build()
    };
    let client = aws_sdk_eventbridge::Client::from_conf(conf);
    let _result = dbg!(
        client
            .put_events()
            .set_endpoint_id(::std::option::Option::Some("abc123.456def".to_owned()))
            .set_entries(::std::option::Option::Some(vec![
                aws_sdk_eventbridge::types::PutEventsRequestEntry::builder()
                    .set_detail_type(::std::option::Option::Some("detailType".to_owned()))
                    .set_detail(::std::option::Option::Some("{ \"test\": [\"test\"] }".to_owned()))
                    .set_event_bus_name(::std::option::Option::Some("my-sdk-app".to_owned()))
                    .build(),
            ]))
            .send()
            .await
    );
    let req = rcvr.expect_request();
    let uri = req.uri().to_string();
    assert!(
        uri.starts_with("https://abc123.456def.endpoint.events.amazonaws.com"),
        "expected URI to start with `https://abc123.456def.endpoint.events.amazonaws.com` but it was `{}`",
        uri
    );
}
