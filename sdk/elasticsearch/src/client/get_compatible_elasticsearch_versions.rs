// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCompatibleElasticsearchVersions`](crate::operation::get_compatible_elasticsearch_versions::builders::GetCompatibleElasticsearchVersionsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::operation::get_compatible_elasticsearch_versions::builders::GetCompatibleElasticsearchVersionsFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::get_compatible_elasticsearch_versions::builders::GetCompatibleElasticsearchVersionsFluentBuilder::set_domain_name):<br>required: **false**<br><p>The name of an Elasticsearch domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).</p><br>
    /// - On success, responds with [`GetCompatibleElasticsearchVersionsOutput`](crate::operation::get_compatible_elasticsearch_versions::GetCompatibleElasticsearchVersionsOutput) with field(s):
    ///   - [`compatible_elasticsearch_versions(Option<Vec::<CompatibleVersionsMap>>)`](crate::operation::get_compatible_elasticsearch_versions::GetCompatibleElasticsearchVersionsOutput::compatible_elasticsearch_versions): <p> A map of compatible Elasticsearch versions returned as part of the <code> <code>GetCompatibleElasticsearchVersions</code> </code> operation. </p>
    /// - On failure, responds with [`SdkError<GetCompatibleElasticsearchVersionsError>`](crate::operation::get_compatible_elasticsearch_versions::GetCompatibleElasticsearchVersionsError)
    pub fn get_compatible_elasticsearch_versions(
        &self,
    ) -> crate::operation::get_compatible_elasticsearch_versions::builders::GetCompatibleElasticsearchVersionsFluentBuilder {
        crate::operation::get_compatible_elasticsearch_versions::builders::GetCompatibleElasticsearchVersionsFluentBuilder::new(self.handle.clone())
    }
}
