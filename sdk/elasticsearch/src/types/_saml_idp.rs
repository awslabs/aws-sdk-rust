// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the SAML Identity Provider's information.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SamlIdp {
    /// <p>The Metadata of the SAML application in xml format.</p>
    #[doc(hidden)]
    pub metadata_content: std::option::Option<std::string::String>,
    /// <p>The unique Entity ID of the application in SAML Identity Provider.</p>
    #[doc(hidden)]
    pub entity_id: std::option::Option<std::string::String>,
}
impl SamlIdp {
    /// <p>The Metadata of the SAML application in xml format.</p>
    pub fn metadata_content(&self) -> std::option::Option<&str> {
        self.metadata_content.as_deref()
    }
    /// <p>The unique Entity ID of the application in SAML Identity Provider.</p>
    pub fn entity_id(&self) -> std::option::Option<&str> {
        self.entity_id.as_deref()
    }
}
impl SamlIdp {
    /// Creates a new builder-style object to manufacture [`SamlIdp`](crate::types::SamlIdp).
    pub fn builder() -> crate::types::builders::SamlIdpBuilder {
        crate::types::builders::SamlIdpBuilder::default()
    }
}

/// A builder for [`SamlIdp`](crate::types::SamlIdp).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SamlIdpBuilder {
    pub(crate) metadata_content: std::option::Option<std::string::String>,
    pub(crate) entity_id: std::option::Option<std::string::String>,
}
impl SamlIdpBuilder {
    /// <p>The Metadata of the SAML application in xml format.</p>
    pub fn metadata_content(mut self, input: impl Into<std::string::String>) -> Self {
        self.metadata_content = Some(input.into());
        self
    }
    /// <p>The Metadata of the SAML application in xml format.</p>
    pub fn set_metadata_content(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.metadata_content = input;
        self
    }
    /// <p>The unique Entity ID of the application in SAML Identity Provider.</p>
    pub fn entity_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.entity_id = Some(input.into());
        self
    }
    /// <p>The unique Entity ID of the application in SAML Identity Provider.</p>
    pub fn set_entity_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.entity_id = input;
        self
    }
    /// Consumes the builder and constructs a [`SamlIdp`](crate::types::SamlIdp).
    pub fn build(self) -> crate::types::SamlIdp {
        crate::types::SamlIdp {
            metadata_content: self.metadata_content,
            entity_id: self.entity_id,
        }
    }
}
