// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutoTuneOptionsInput {
    /// <p>Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. </p>
    pub desired_state: ::std::option::Option<crate::types::AutoTuneDesiredState>,
    /// <p>Specifies list of maitenance schedules. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.</p>
    pub maintenance_schedules: ::std::option::Option<::std::vec::Vec<crate::types::AutoTuneMaintenanceSchedule>>,
}
impl AutoTuneOptionsInput {
    /// <p>Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. </p>
    pub fn desired_state(&self) -> ::std::option::Option<&crate::types::AutoTuneDesiredState> {
        self.desired_state.as_ref()
    }
    /// <p>Specifies list of maitenance schedules. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.maintenance_schedules.is_none()`.
    pub fn maintenance_schedules(&self) -> &[crate::types::AutoTuneMaintenanceSchedule] {
        self.maintenance_schedules.as_deref().unwrap_or_default()
    }
}
impl AutoTuneOptionsInput {
    /// Creates a new builder-style object to manufacture [`AutoTuneOptionsInput`](crate::types::AutoTuneOptionsInput).
    pub fn builder() -> crate::types::builders::AutoTuneOptionsInputBuilder {
        crate::types::builders::AutoTuneOptionsInputBuilder::default()
    }
}

/// A builder for [`AutoTuneOptionsInput`](crate::types::AutoTuneOptionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AutoTuneOptionsInputBuilder {
    pub(crate) desired_state: ::std::option::Option<crate::types::AutoTuneDesiredState>,
    pub(crate) maintenance_schedules: ::std::option::Option<::std::vec::Vec<crate::types::AutoTuneMaintenanceSchedule>>,
}
impl AutoTuneOptionsInputBuilder {
    /// <p>Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. </p>
    pub fn desired_state(mut self, input: crate::types::AutoTuneDesiredState) -> Self {
        self.desired_state = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. </p>
    pub fn set_desired_state(mut self, input: ::std::option::Option<crate::types::AutoTuneDesiredState>) -> Self {
        self.desired_state = input;
        self
    }
    /// <p>Specifies the Auto-Tune desired state. Valid values are ENABLED, DISABLED. </p>
    pub fn get_desired_state(&self) -> &::std::option::Option<crate::types::AutoTuneDesiredState> {
        &self.desired_state
    }
    /// Appends an item to `maintenance_schedules`.
    ///
    /// To override the contents of this collection use [`set_maintenance_schedules`](Self::set_maintenance_schedules).
    ///
    /// <p>Specifies list of maitenance schedules. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.</p>
    pub fn maintenance_schedules(mut self, input: crate::types::AutoTuneMaintenanceSchedule) -> Self {
        let mut v = self.maintenance_schedules.unwrap_or_default();
        v.push(input);
        self.maintenance_schedules = ::std::option::Option::Some(v);
        self
    }
    /// <p>Specifies list of maitenance schedules. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.</p>
    pub fn set_maintenance_schedules(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AutoTuneMaintenanceSchedule>>) -> Self {
        self.maintenance_schedules = input;
        self
    }
    /// <p>Specifies list of maitenance schedules. See the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a> for more information.</p>
    pub fn get_maintenance_schedules(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AutoTuneMaintenanceSchedule>> {
        &self.maintenance_schedules
    }
    /// Consumes the builder and constructs a [`AutoTuneOptionsInput`](crate::types::AutoTuneOptionsInput).
    pub fn build(self) -> crate::types::AutoTuneOptionsInput {
        crate::types::AutoTuneOptionsInput {
            desired_state: self.desired_state,
            maintenance_schedules: self.maintenance_schedules,
        }
    }
}
