// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configured endpoint options for the domain and their current status.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DomainEndpointOptionsStatus {
    /// <p>Options to configure endpoint for the Elasticsearch domain.</p>
    pub options: ::std::option::Option<crate::types::DomainEndpointOptions>,
    /// <p>The status of the endpoint options for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that's included. </p>
    pub status: ::std::option::Option<crate::types::OptionStatus>,
}
impl DomainEndpointOptionsStatus {
    /// <p>Options to configure endpoint for the Elasticsearch domain.</p>
    pub fn options(&self) -> ::std::option::Option<&crate::types::DomainEndpointOptions> {
        self.options.as_ref()
    }
    /// <p>The status of the endpoint options for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that's included. </p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::OptionStatus> {
        self.status.as_ref()
    }
}
impl DomainEndpointOptionsStatus {
    /// Creates a new builder-style object to manufacture [`DomainEndpointOptionsStatus`](crate::types::DomainEndpointOptionsStatus).
    pub fn builder() -> crate::types::builders::DomainEndpointOptionsStatusBuilder {
        crate::types::builders::DomainEndpointOptionsStatusBuilder::default()
    }
}

/// A builder for [`DomainEndpointOptionsStatus`](crate::types::DomainEndpointOptionsStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DomainEndpointOptionsStatusBuilder {
    pub(crate) options: ::std::option::Option<crate::types::DomainEndpointOptions>,
    pub(crate) status: ::std::option::Option<crate::types::OptionStatus>,
}
impl DomainEndpointOptionsStatusBuilder {
    /// <p>Options to configure endpoint for the Elasticsearch domain.</p>
    /// This field is required.
    pub fn options(mut self, input: crate::types::DomainEndpointOptions) -> Self {
        self.options = ::std::option::Option::Some(input);
        self
    }
    /// <p>Options to configure endpoint for the Elasticsearch domain.</p>
    pub fn set_options(mut self, input: ::std::option::Option<crate::types::DomainEndpointOptions>) -> Self {
        self.options = input;
        self
    }
    /// <p>Options to configure endpoint for the Elasticsearch domain.</p>
    pub fn get_options(&self) -> &::std::option::Option<crate::types::DomainEndpointOptions> {
        &self.options
    }
    /// <p>The status of the endpoint options for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that's included. </p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::OptionStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the endpoint options for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that's included. </p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::OptionStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the endpoint options for the Elasticsearch domain. See <code>OptionStatus</code> for the status information that's included. </p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::OptionStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`DomainEndpointOptionsStatus`](crate::types::DomainEndpointOptionsStatus).
    pub fn build(self) -> crate::types::DomainEndpointOptionsStatus {
        crate::types::DomainEndpointOptionsStatus {
            options: self.options,
            status: self.status,
        }
    }
}
