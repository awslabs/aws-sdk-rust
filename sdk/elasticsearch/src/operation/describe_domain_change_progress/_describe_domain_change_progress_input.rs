// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Container for the parameters to the <code>DescribeDomainChangeProgress</code> operation. Specifies the domain name and optional change specific identity for which you want progress information. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeDomainChangeProgressInput {
    /// <p>The domain you want to get the progress information about.</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
    /// <p>The specific change ID for which you want to get progress information. This is an optional parameter. If omitted, the service returns information about the most recent configuration change. </p>
    #[doc(hidden)]
    pub change_id: std::option::Option<std::string::String>,
}
impl DescribeDomainChangeProgressInput {
    /// <p>The domain you want to get the progress information about.</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
    /// <p>The specific change ID for which you want to get progress information. This is an optional parameter. If omitted, the service returns information about the most recent configuration change. </p>
    pub fn change_id(&self) -> std::option::Option<&str> {
        self.change_id.as_deref()
    }
}
impl DescribeDomainChangeProgressInput {
    /// Creates a new builder-style object to manufacture [`DescribeDomainChangeProgressInput`](crate::operation::describe_domain_change_progress::DescribeDomainChangeProgressInput).
    pub fn builder() -> crate::operation::describe_domain_change_progress::builders::DescribeDomainChangeProgressInputBuilder{
        crate::operation::describe_domain_change_progress::builders::DescribeDomainChangeProgressInputBuilder::default()
    }
}

/// A builder for [`DescribeDomainChangeProgressInput`](crate::operation::describe_domain_change_progress::DescribeDomainChangeProgressInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeDomainChangeProgressInputBuilder {
    pub(crate) domain_name: std::option::Option<std::string::String>,
    pub(crate) change_id: std::option::Option<std::string::String>,
}
impl DescribeDomainChangeProgressInputBuilder {
    /// <p>The domain you want to get the progress information about.</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>The domain you want to get the progress information about.</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>The specific change ID for which you want to get progress information. This is an optional parameter. If omitted, the service returns information about the most recent configuration change. </p>
    pub fn change_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.change_id = Some(input.into());
        self
    }
    /// <p>The specific change ID for which you want to get progress information. This is an optional parameter. If omitted, the service returns information about the most recent configuration change. </p>
    pub fn set_change_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.change_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDomainChangeProgressInput`](crate::operation::describe_domain_change_progress::DescribeDomainChangeProgressInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_domain_change_progress::DescribeDomainChangeProgressInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_domain_change_progress::DescribeDomainChangeProgressInput {
                domain_name: self.domain_name,
                change_id: self.change_id,
            },
        )
    }
}
