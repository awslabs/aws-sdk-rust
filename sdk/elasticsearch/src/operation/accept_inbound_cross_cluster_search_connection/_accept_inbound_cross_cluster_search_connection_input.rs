// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Container for the parameters to the <code><code>AcceptInboundCrossClusterSearchConnection</code></code> operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AcceptInboundCrossClusterSearchConnectionInput {
    /// <p>The id of the inbound connection that you want to accept.</p>
    #[doc(hidden)]
    pub cross_cluster_search_connection_id: std::option::Option<std::string::String>,
}
impl AcceptInboundCrossClusterSearchConnectionInput {
    /// <p>The id of the inbound connection that you want to accept.</p>
    pub fn cross_cluster_search_connection_id(&self) -> std::option::Option<&str> {
        self.cross_cluster_search_connection_id.as_deref()
    }
}
impl AcceptInboundCrossClusterSearchConnectionInput {
    /// Creates a new builder-style object to manufacture [`AcceptInboundCrossClusterSearchConnectionInput`](crate::operation::accept_inbound_cross_cluster_search_connection::AcceptInboundCrossClusterSearchConnectionInput).
    pub fn builder() -> crate::operation::accept_inbound_cross_cluster_search_connection::builders::AcceptInboundCrossClusterSearchConnectionInputBuilder{
        crate::operation::accept_inbound_cross_cluster_search_connection::builders::AcceptInboundCrossClusterSearchConnectionInputBuilder::default()
    }
}

/// A builder for [`AcceptInboundCrossClusterSearchConnectionInput`](crate::operation::accept_inbound_cross_cluster_search_connection::AcceptInboundCrossClusterSearchConnectionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AcceptInboundCrossClusterSearchConnectionInputBuilder {
    pub(crate) cross_cluster_search_connection_id: std::option::Option<std::string::String>,
}
impl AcceptInboundCrossClusterSearchConnectionInputBuilder {
    /// <p>The id of the inbound connection that you want to accept.</p>
    pub fn cross_cluster_search_connection_id(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.cross_cluster_search_connection_id = Some(input.into());
        self
    }
    /// <p>The id of the inbound connection that you want to accept.</p>
    pub fn set_cross_cluster_search_connection_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.cross_cluster_search_connection_id = input;
        self
    }
    /// Consumes the builder and constructs a [`AcceptInboundCrossClusterSearchConnectionInput`](crate::operation::accept_inbound_cross_cluster_search_connection::AcceptInboundCrossClusterSearchConnectionInput).
    pub fn build(self) -> Result<crate::operation::accept_inbound_cross_cluster_search_connection::AcceptInboundCrossClusterSearchConnectionInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::accept_inbound_cross_cluster_search_connection::AcceptInboundCrossClusterSearchConnectionInput {
                cross_cluster_search_connection_id: self.cross_cluster_search_connection_id
                ,
            }
        )
    }
}
