// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Container for results from <code>DescribeReservedElasticsearchInstances</code></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeReservedElasticsearchInstancesOutput {
    /// <p>Provides an identifier to allow retrieval of paginated results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>List of reserved Elasticsearch instances.</p>
    #[doc(hidden)]
    pub reserved_elasticsearch_instances:
        std::option::Option<std::vec::Vec<crate::types::ReservedElasticsearchInstance>>,
    _request_id: Option<String>,
}
impl DescribeReservedElasticsearchInstancesOutput {
    /// <p>Provides an identifier to allow retrieval of paginated results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>List of reserved Elasticsearch instances.</p>
    pub fn reserved_elasticsearch_instances(
        &self,
    ) -> std::option::Option<&[crate::types::ReservedElasticsearchInstance]> {
        self.reserved_elasticsearch_instances.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeReservedElasticsearchInstancesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeReservedElasticsearchInstancesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeReservedElasticsearchInstancesOutput`](crate::operation::describe_reserved_elasticsearch_instances::DescribeReservedElasticsearchInstancesOutput).
    pub fn builder() -> crate::operation::describe_reserved_elasticsearch_instances::builders::DescribeReservedElasticsearchInstancesOutputBuilder{
        crate::operation::describe_reserved_elasticsearch_instances::builders::DescribeReservedElasticsearchInstancesOutputBuilder::default()
    }
}

/// A builder for [`DescribeReservedElasticsearchInstancesOutput`](crate::operation::describe_reserved_elasticsearch_instances::DescribeReservedElasticsearchInstancesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeReservedElasticsearchInstancesOutputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) reserved_elasticsearch_instances:
        std::option::Option<std::vec::Vec<crate::types::ReservedElasticsearchInstance>>,
    _request_id: Option<String>,
}
impl DescribeReservedElasticsearchInstancesOutputBuilder {
    /// <p>Provides an identifier to allow retrieval of paginated results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Provides an identifier to allow retrieval of paginated results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Appends an item to `reserved_elasticsearch_instances`.
    ///
    /// To override the contents of this collection use [`set_reserved_elasticsearch_instances`](Self::set_reserved_elasticsearch_instances).
    ///
    /// <p>List of reserved Elasticsearch instances.</p>
    pub fn reserved_elasticsearch_instances(
        mut self,
        input: crate::types::ReservedElasticsearchInstance,
    ) -> Self {
        let mut v = self.reserved_elasticsearch_instances.unwrap_or_default();
        v.push(input);
        self.reserved_elasticsearch_instances = Some(v);
        self
    }
    /// <p>List of reserved Elasticsearch instances.</p>
    pub fn set_reserved_elasticsearch_instances(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ReservedElasticsearchInstance>>,
    ) -> Self {
        self.reserved_elasticsearch_instances = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeReservedElasticsearchInstancesOutput`](crate::operation::describe_reserved_elasticsearch_instances::DescribeReservedElasticsearchInstancesOutput).
    pub fn build(self) -> crate::operation::describe_reserved_elasticsearch_instances::DescribeReservedElasticsearchInstancesOutput{
        crate::operation::describe_reserved_elasticsearch_instances::DescribeReservedElasticsearchInstancesOutput {
            next_token: self.next_token
            ,
            reserved_elasticsearch_instances: self.reserved_elasticsearch_instances
            ,
            _request_id: self._request_id,
        }
    }
}
