// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Container for response parameters to the <code><code>CreateVpcEndpoint</code></code> operation. Contains the configuration and status of the VPC Endpoint being created.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateVpcEndpointOutput {
    /// <p>Information about the newly created VPC endpoint.</p>
    #[doc(hidden)]
    pub vpc_endpoint: std::option::Option<crate::types::VpcEndpoint>,
    _request_id: Option<String>,
}
impl CreateVpcEndpointOutput {
    /// <p>Information about the newly created VPC endpoint.</p>
    pub fn vpc_endpoint(&self) -> std::option::Option<&crate::types::VpcEndpoint> {
        self.vpc_endpoint.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateVpcEndpointOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateVpcEndpointOutput {
    /// Creates a new builder-style object to manufacture [`CreateVpcEndpointOutput`](crate::operation::create_vpc_endpoint::CreateVpcEndpointOutput).
    pub fn builder(
    ) -> crate::operation::create_vpc_endpoint::builders::CreateVpcEndpointOutputBuilder {
        crate::operation::create_vpc_endpoint::builders::CreateVpcEndpointOutputBuilder::default()
    }
}

/// A builder for [`CreateVpcEndpointOutput`](crate::operation::create_vpc_endpoint::CreateVpcEndpointOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateVpcEndpointOutputBuilder {
    pub(crate) vpc_endpoint: std::option::Option<crate::types::VpcEndpoint>,
    _request_id: Option<String>,
}
impl CreateVpcEndpointOutputBuilder {
    /// <p>Information about the newly created VPC endpoint.</p>
    pub fn vpc_endpoint(mut self, input: crate::types::VpcEndpoint) -> Self {
        self.vpc_endpoint = Some(input);
        self
    }
    /// <p>Information about the newly created VPC endpoint.</p>
    pub fn set_vpc_endpoint(
        mut self,
        input: std::option::Option<crate::types::VpcEndpoint>,
    ) -> Self {
        self.vpc_endpoint = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateVpcEndpointOutput`](crate::operation::create_vpc_endpoint::CreateVpcEndpointOutput).
    pub fn build(self) -> crate::operation::create_vpc_endpoint::CreateVpcEndpointOutput {
        crate::operation::create_vpc_endpoint::CreateVpcEndpointOutput {
            vpc_endpoint: self.vpc_endpoint,
            _request_id: self._request_id,
        }
    }
}
