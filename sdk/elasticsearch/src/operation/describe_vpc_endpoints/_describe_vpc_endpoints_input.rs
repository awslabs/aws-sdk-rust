// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Container for request parameters to the <code><code>DescribeVpcEndpoints</code></code> operation. Specifies the list of VPC endpoints to be described.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeVpcEndpointsInput {
    /// <p>The unique identifiers of the endpoints to get information about.</p>
    pub vpc_endpoint_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeVpcEndpointsInput {
    /// <p>The unique identifiers of the endpoints to get information about.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.vpc_endpoint_ids.is_none()`.
    pub fn vpc_endpoint_ids(&self) -> &[::std::string::String] {
        self.vpc_endpoint_ids.as_deref().unwrap_or_default()
    }
}
impl DescribeVpcEndpointsInput {
    /// Creates a new builder-style object to manufacture [`DescribeVpcEndpointsInput`](crate::operation::describe_vpc_endpoints::DescribeVpcEndpointsInput).
    pub fn builder() -> crate::operation::describe_vpc_endpoints::builders::DescribeVpcEndpointsInputBuilder {
        crate::operation::describe_vpc_endpoints::builders::DescribeVpcEndpointsInputBuilder::default()
    }
}

/// A builder for [`DescribeVpcEndpointsInput`](crate::operation::describe_vpc_endpoints::DescribeVpcEndpointsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeVpcEndpointsInputBuilder {
    pub(crate) vpc_endpoint_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeVpcEndpointsInputBuilder {
    /// Appends an item to `vpc_endpoint_ids`.
    ///
    /// To override the contents of this collection use [`set_vpc_endpoint_ids`](Self::set_vpc_endpoint_ids).
    ///
    /// <p>The unique identifiers of the endpoints to get information about.</p>
    pub fn vpc_endpoint_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.vpc_endpoint_ids.unwrap_or_default();
        v.push(input.into());
        self.vpc_endpoint_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>The unique identifiers of the endpoints to get information about.</p>
    pub fn set_vpc_endpoint_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.vpc_endpoint_ids = input;
        self
    }
    /// <p>The unique identifiers of the endpoints to get information about.</p>
    pub fn get_vpc_endpoint_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.vpc_endpoint_ids
    }
    /// Consumes the builder and constructs a [`DescribeVpcEndpointsInput`](crate::operation::describe_vpc_endpoints::DescribeVpcEndpointsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_vpc_endpoints::DescribeVpcEndpointsInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::describe_vpc_endpoints::DescribeVpcEndpointsInput {
            vpc_endpoint_ids: self.vpc_endpoint_ids,
        })
    }
}
