// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of a <code>StartElasticsearchServiceSoftwareUpdate</code> operation. Contains the status of the update.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartElasticsearchServiceSoftwareUpdateOutput {
    /// <p>The current status of the Elasticsearch service software update.</p>
    #[doc(hidden)]
    pub service_software_options: std::option::Option<crate::types::ServiceSoftwareOptions>,
    _request_id: Option<String>,
}
impl StartElasticsearchServiceSoftwareUpdateOutput {
    /// <p>The current status of the Elasticsearch service software update.</p>
    pub fn service_software_options(
        &self,
    ) -> std::option::Option<&crate::types::ServiceSoftwareOptions> {
        self.service_software_options.as_ref()
    }
}
impl aws_http::request_id::RequestId for StartElasticsearchServiceSoftwareUpdateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl StartElasticsearchServiceSoftwareUpdateOutput {
    /// Creates a new builder-style object to manufacture [`StartElasticsearchServiceSoftwareUpdateOutput`](crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateOutput).
    pub fn builder() -> crate::operation::start_elasticsearch_service_software_update::builders::StartElasticsearchServiceSoftwareUpdateOutputBuilder{
        crate::operation::start_elasticsearch_service_software_update::builders::StartElasticsearchServiceSoftwareUpdateOutputBuilder::default()
    }
}

/// A builder for [`StartElasticsearchServiceSoftwareUpdateOutput`](crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartElasticsearchServiceSoftwareUpdateOutputBuilder {
    pub(crate) service_software_options: std::option::Option<crate::types::ServiceSoftwareOptions>,
    _request_id: Option<String>,
}
impl StartElasticsearchServiceSoftwareUpdateOutputBuilder {
    /// <p>The current status of the Elasticsearch service software update.</p>
    pub fn service_software_options(mut self, input: crate::types::ServiceSoftwareOptions) -> Self {
        self.service_software_options = Some(input);
        self
    }
    /// <p>The current status of the Elasticsearch service software update.</p>
    pub fn set_service_software_options(
        mut self,
        input: std::option::Option<crate::types::ServiceSoftwareOptions>,
    ) -> Self {
        self.service_software_options = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`StartElasticsearchServiceSoftwareUpdateOutput`](crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateOutput).
    pub fn build(self) -> crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateOutput{
        crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateOutput {
            service_software_options: self.service_software_options
            ,
            _request_id: self._request_id,
        }
    }
}
