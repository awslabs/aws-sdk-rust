// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Container for the parameters to the <code><code>StartElasticsearchServiceSoftwareUpdate</code></code> operation. Specifies the name of the Elasticsearch domain that you wish to schedule a service software update on.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartElasticsearchServiceSoftwareUpdateInput {
    /// <p>The name of the domain that you want to update to the latest service software.</p>
    pub domain_name: ::std::option::Option<::std::string::String>,
}
impl StartElasticsearchServiceSoftwareUpdateInput {
    /// <p>The name of the domain that you want to update to the latest service software.</p>
    pub fn domain_name(&self) -> ::std::option::Option<&str> {
        self.domain_name.as_deref()
    }
}
impl StartElasticsearchServiceSoftwareUpdateInput {
    /// Creates a new builder-style object to manufacture [`StartElasticsearchServiceSoftwareUpdateInput`](crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateInput).
    pub fn builder() -> crate::operation::start_elasticsearch_service_software_update::builders::StartElasticsearchServiceSoftwareUpdateInputBuilder {
        crate::operation::start_elasticsearch_service_software_update::builders::StartElasticsearchServiceSoftwareUpdateInputBuilder::default()
    }
}

/// A builder for [`StartElasticsearchServiceSoftwareUpdateInput`](crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StartElasticsearchServiceSoftwareUpdateInputBuilder {
    pub(crate) domain_name: ::std::option::Option<::std::string::String>,
}
impl StartElasticsearchServiceSoftwareUpdateInputBuilder {
    /// <p>The name of the domain that you want to update to the latest service software.</p>
    /// This field is required.
    pub fn domain_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the domain that you want to update to the latest service software.</p>
    pub fn set_domain_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>The name of the domain that you want to update to the latest service software.</p>
    pub fn get_domain_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain_name
    }
    /// Consumes the builder and constructs a [`StartElasticsearchServiceSoftwareUpdateInput`](crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::start_elasticsearch_service_software_update::StartElasticsearchServiceSoftwareUpdateInput {
                domain_name: self.domain_name,
            },
        )
    }
}
