// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Container for the parameters for response received from <code> <code>ListElasticsearchVersions</code> </code> operation. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListElasticsearchVersionsOutput {
    /// <p>List of supported elastic search versions. </p>
    #[doc(hidden)]
    pub elasticsearch_versions: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p> Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListElasticsearchVersionsOutput {
    /// <p>List of supported elastic search versions. </p>
    pub fn elasticsearch_versions(&self) -> std::option::Option<&[std::string::String]> {
        self.elasticsearch_versions.as_deref()
    }
    /// <p> Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListElasticsearchVersionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListElasticsearchVersionsOutput {
    /// Creates a new builder-style object to manufacture [`ListElasticsearchVersionsOutput`](crate::operation::list_elasticsearch_versions::ListElasticsearchVersionsOutput).
    pub fn builder() -> crate::operation::list_elasticsearch_versions::builders::ListElasticsearchVersionsOutputBuilder{
        crate::operation::list_elasticsearch_versions::builders::ListElasticsearchVersionsOutputBuilder::default()
    }
}

/// A builder for [`ListElasticsearchVersionsOutput`](crate::operation::list_elasticsearch_versions::ListElasticsearchVersionsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListElasticsearchVersionsOutputBuilder {
    pub(crate) elasticsearch_versions: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListElasticsearchVersionsOutputBuilder {
    /// Appends an item to `elasticsearch_versions`.
    ///
    /// To override the contents of this collection use [`set_elasticsearch_versions`](Self::set_elasticsearch_versions).
    ///
    /// <p>List of supported elastic search versions. </p>
    pub fn elasticsearch_versions(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.elasticsearch_versions.unwrap_or_default();
        v.push(input.into());
        self.elasticsearch_versions = Some(v);
        self
    }
    /// <p>List of supported elastic search versions. </p>
    pub fn set_elasticsearch_versions(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.elasticsearch_versions = input;
        self
    }
    /// <p> Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p> Paginated APIs accepts NextToken input to returns next page results and provides a NextToken output in the response which can be used by the client to retrieve more results. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListElasticsearchVersionsOutput`](crate::operation::list_elasticsearch_versions::ListElasticsearchVersionsOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_elasticsearch_versions::ListElasticsearchVersionsOutput {
        crate::operation::list_elasticsearch_versions::ListElasticsearchVersionsOutput {
            elasticsearch_versions: self.elasticsearch_versions,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
