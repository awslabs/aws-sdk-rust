// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Deletes an Amazon OpenSearch Service-managed interface VPC endpoint.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteVpcEndpointInput {
    /// <p>The unique identifier of the endpoint to be deleted.</p>
    #[doc(hidden)]
    pub vpc_endpoint_id: std::option::Option<std::string::String>,
}
impl DeleteVpcEndpointInput {
    /// <p>The unique identifier of the endpoint to be deleted.</p>
    pub fn vpc_endpoint_id(&self) -> std::option::Option<&str> {
        self.vpc_endpoint_id.as_deref()
    }
}
impl DeleteVpcEndpointInput {
    /// Creates a new builder-style object to manufacture [`DeleteVpcEndpointInput`](crate::operation::delete_vpc_endpoint::DeleteVpcEndpointInput).
    pub fn builder(
    ) -> crate::operation::delete_vpc_endpoint::builders::DeleteVpcEndpointInputBuilder {
        crate::operation::delete_vpc_endpoint::builders::DeleteVpcEndpointInputBuilder::default()
    }
}

/// A builder for [`DeleteVpcEndpointInput`](crate::operation::delete_vpc_endpoint::DeleteVpcEndpointInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteVpcEndpointInputBuilder {
    pub(crate) vpc_endpoint_id: std::option::Option<std::string::String>,
}
impl DeleteVpcEndpointInputBuilder {
    /// <p>The unique identifier of the endpoint to be deleted.</p>
    pub fn vpc_endpoint_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.vpc_endpoint_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the endpoint to be deleted.</p>
    pub fn set_vpc_endpoint_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.vpc_endpoint_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteVpcEndpointInput`](crate::operation::delete_vpc_endpoint::DeleteVpcEndpointInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_vpc_endpoint::DeleteVpcEndpointInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_vpc_endpoint::DeleteVpcEndpointInput {
                vpc_endpoint_id: self.vpc_endpoint_id,
            },
        )
    }
}
