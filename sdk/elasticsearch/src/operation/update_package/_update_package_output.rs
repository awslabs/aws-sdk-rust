// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Container for response returned by <code> <code>UpdatePackage</code> </code> operation. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdatePackageOutput {
    /// <p>Information about the package <code>PackageDetails</code>.</p>
    #[doc(hidden)]
    pub package_details: std::option::Option<crate::types::PackageDetails>,
    _request_id: Option<String>,
}
impl UpdatePackageOutput {
    /// <p>Information about the package <code>PackageDetails</code>.</p>
    pub fn package_details(&self) -> std::option::Option<&crate::types::PackageDetails> {
        self.package_details.as_ref()
    }
}
impl aws_http::request_id::RequestId for UpdatePackageOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdatePackageOutput {
    /// Creates a new builder-style object to manufacture [`UpdatePackageOutput`](crate::operation::update_package::UpdatePackageOutput).
    pub fn builder() -> crate::operation::update_package::builders::UpdatePackageOutputBuilder {
        crate::operation::update_package::builders::UpdatePackageOutputBuilder::default()
    }
}

/// A builder for [`UpdatePackageOutput`](crate::operation::update_package::UpdatePackageOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdatePackageOutputBuilder {
    pub(crate) package_details: std::option::Option<crate::types::PackageDetails>,
    _request_id: Option<String>,
}
impl UpdatePackageOutputBuilder {
    /// <p>Information about the package <code>PackageDetails</code>.</p>
    pub fn package_details(mut self, input: crate::types::PackageDetails) -> Self {
        self.package_details = Some(input);
        self
    }
    /// <p>Information about the package <code>PackageDetails</code>.</p>
    pub fn set_package_details(
        mut self,
        input: std::option::Option<crate::types::PackageDetails>,
    ) -> Self {
        self.package_details = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdatePackageOutput`](crate::operation::update_package::UpdatePackageOutput).
    pub fn build(self) -> crate::operation::update_package::UpdatePackageOutput {
        crate::operation::update_package::UpdatePackageOutput {
            package_details: self.package_details,
            _request_id: self._request_id,
        }
    }
}
