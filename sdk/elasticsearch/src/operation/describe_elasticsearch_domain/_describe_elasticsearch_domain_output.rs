// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of a <code>DescribeElasticsearchDomain</code> request. Contains the status of the domain specified in the request.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeElasticsearchDomainOutput {
    /// <p>The current status of the Elasticsearch domain.</p>
    pub domain_status: ::std::option::Option<crate::types::ElasticsearchDomainStatus>,
    _request_id: Option<String>,
}
impl DescribeElasticsearchDomainOutput {
    /// <p>The current status of the Elasticsearch domain.</p>
    pub fn domain_status(&self) -> ::std::option::Option<&crate::types::ElasticsearchDomainStatus> {
        self.domain_status.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for DescribeElasticsearchDomainOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeElasticsearchDomainOutput {
    /// Creates a new builder-style object to manufacture [`DescribeElasticsearchDomainOutput`](crate::operation::describe_elasticsearch_domain::DescribeElasticsearchDomainOutput).
    pub fn builder() -> crate::operation::describe_elasticsearch_domain::builders::DescribeElasticsearchDomainOutputBuilder {
        crate::operation::describe_elasticsearch_domain::builders::DescribeElasticsearchDomainOutputBuilder::default()
    }
}

/// A builder for [`DescribeElasticsearchDomainOutput`](crate::operation::describe_elasticsearch_domain::DescribeElasticsearchDomainOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeElasticsearchDomainOutputBuilder {
    pub(crate) domain_status: ::std::option::Option<crate::types::ElasticsearchDomainStatus>,
    _request_id: Option<String>,
}
impl DescribeElasticsearchDomainOutputBuilder {
    /// <p>The current status of the Elasticsearch domain.</p>
    /// This field is required.
    pub fn domain_status(mut self, input: crate::types::ElasticsearchDomainStatus) -> Self {
        self.domain_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the Elasticsearch domain.</p>
    pub fn set_domain_status(mut self, input: ::std::option::Option<crate::types::ElasticsearchDomainStatus>) -> Self {
        self.domain_status = input;
        self
    }
    /// <p>The current status of the Elasticsearch domain.</p>
    pub fn get_domain_status(&self) -> &::std::option::Option<crate::types::ElasticsearchDomainStatus> {
        &self.domain_status
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeElasticsearchDomainOutput`](crate::operation::describe_elasticsearch_domain::DescribeElasticsearchDomainOutput).
    pub fn build(self) -> crate::operation::describe_elasticsearch_domain::DescribeElasticsearchDomainOutput {
        crate::operation::describe_elasticsearch_domain::DescribeElasticsearchDomainOutput {
            domain_status: self.domain_status,
            _request_id: self._request_id,
        }
    }
}
