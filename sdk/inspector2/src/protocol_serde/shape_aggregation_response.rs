// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_aggregation_response<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::AggregationResponse>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    let mut variant = None;
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => return Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => loop {
            match tokens.next().transpose()? {
                Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                    if variant.is_some() {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(
                                "encountered mixed variants in union",
                            ),
                        );
                    }
                    variant = match key.to_unescaped()?.as_ref() {
                            "accountAggregation" => {
                                Some(crate::types::AggregationResponse::AccountAggregation(
                                    crate::protocol_serde::shape_account_aggregation_response::de_account_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'accountAggregation' cannot be null"))?
                                ))
                            }
                            "amiAggregation" => {
                                Some(crate::types::AggregationResponse::AmiAggregation(
                                    crate::protocol_serde::shape_ami_aggregation_response::de_ami_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'amiAggregation' cannot be null"))?
                                ))
                            }
                            "awsEcrContainerAggregation" => {
                                Some(crate::types::AggregationResponse::AwsEcrContainerAggregation(
                                    crate::protocol_serde::shape_aws_ecr_container_aggregation_response::de_aws_ecr_container_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'awsEcrContainerAggregation' cannot be null"))?
                                ))
                            }
                            "ec2InstanceAggregation" => {
                                Some(crate::types::AggregationResponse::Ec2InstanceAggregation(
                                    crate::protocol_serde::shape_ec2_instance_aggregation_response::de_ec2_instance_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'ec2InstanceAggregation' cannot be null"))?
                                ))
                            }
                            "findingTypeAggregation" => {
                                Some(crate::types::AggregationResponse::FindingTypeAggregation(
                                    crate::protocol_serde::shape_finding_type_aggregation_response::de_finding_type_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'findingTypeAggregation' cannot be null"))?
                                ))
                            }
                            "imageLayerAggregation" => {
                                Some(crate::types::AggregationResponse::ImageLayerAggregation(
                                    crate::protocol_serde::shape_image_layer_aggregation_response::de_image_layer_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'imageLayerAggregation' cannot be null"))?
                                ))
                            }
                            "packageAggregation" => {
                                Some(crate::types::AggregationResponse::PackageAggregation(
                                    crate::protocol_serde::shape_package_aggregation_response::de_package_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'packageAggregation' cannot be null"))?
                                ))
                            }
                            "repositoryAggregation" => {
                                Some(crate::types::AggregationResponse::RepositoryAggregation(
                                    crate::protocol_serde::shape_repository_aggregation_response::de_repository_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'repositoryAggregation' cannot be null"))?
                                ))
                            }
                            "titleAggregation" => {
                                Some(crate::types::AggregationResponse::TitleAggregation(
                                    crate::protocol_serde::shape_title_aggregation_response::de_title_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'titleAggregation' cannot be null"))?
                                ))
                            }
                            "lambdaLayerAggregation" => {
                                Some(crate::types::AggregationResponse::LambdaLayerAggregation(
                                    crate::protocol_serde::shape_lambda_layer_aggregation_response::de_lambda_layer_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'lambdaLayerAggregation' cannot be null"))?
                                ))
                            }
                            "lambdaFunctionAggregation" => {
                                Some(crate::types::AggregationResponse::LambdaFunctionAggregation(
                                    crate::protocol_serde::shape_lambda_function_aggregation_response::de_lambda_function_aggregation_response(tokens)?
                                    .ok_or_else(|| aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'lambdaFunctionAggregation' cannot be null"))?
                                ))
                            }
                            _ => {
                                                                      aws_smithy_json::deserialize::token::skip_value(tokens)?;
                                                                      Some(crate::types::AggregationResponse::Unknown)
                                                                    }
                        };
                }
                other => {
                    return Err(
                        aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )),
                    )
                }
            }
        },
        _ => {
            return Err(
                aws_smithy_json::deserialize::error::DeserializeError::custom(
                    "expected start object or null",
                ),
            )
        }
    }
    Ok(variant)
}
