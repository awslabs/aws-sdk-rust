// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_code_security_scan_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::CodeSecurityScanConfiguration,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.periodic_scan_configuration {
        #[allow(unused_mut)]
        let mut object_2 = object.key("periodicScanConfiguration").start_object();
        crate::protocol_serde::shape_periodic_scan_configuration::ser_periodic_scan_configuration(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.continuous_integration_scan_configuration {
        #[allow(unused_mut)]
        let mut object_4 = object.key("continuousIntegrationScanConfiguration").start_object();
        crate::protocol_serde::shape_continuous_integration_scan_configuration::ser_continuous_integration_scan_configuration(&mut object_4, var_3)?;
        object_4.finish();
    }
    {
        let mut array_5 = object.key("ruleSetCategories").start_array();
        for item_6 in &input.rule_set_categories {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    Ok(())
}

pub(crate) fn de_code_security_scan_configuration<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::CodeSecurityScanConfiguration>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::CodeSecurityScanConfigurationBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "periodicScanConfiguration" => {
                                builder = builder.set_periodic_scan_configuration(
                                    crate::protocol_serde::shape_periodic_scan_configuration::de_periodic_scan_configuration(tokens)?,
                                );
                            }
                            "continuousIntegrationScanConfiguration" => {
                                builder = builder.set_continuous_integration_scan_configuration(
                                    crate::protocol_serde::shape_continuous_integration_scan_configuration::de_continuous_integration_scan_configuration(tokens)?
                                );
                            }
                            "ruleSetCategories" => {
                                builder = builder
                                    .set_rule_set_categories(crate::protocol_serde::shape_rule_set_categories::de_rule_set_categories(tokens)?);
                            }
                            _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(
                crate::serde_util::code_security_scan_configuration_correct_errors(builder)
                    .build()
                    .map_err(|err| ::aws_smithy_json::deserialize::error::DeserializeError::custom_source("Response was invalid", err))?,
            ))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
