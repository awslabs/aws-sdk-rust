// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SearchVulnerabilitiesInput {
    /// <p>The criteria used to filter the results of a vulnerability search.</p>
    pub filter_criteria: ::std::option::Option<crate::types::SearchVulnerabilitiesFilterCriteria>,
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl SearchVulnerabilitiesInput {
    /// <p>The criteria used to filter the results of a vulnerability search.</p>
    pub fn filter_criteria(&self) -> ::std::option::Option<&crate::types::SearchVulnerabilitiesFilterCriteria> {
        self.filter_criteria.as_ref()
    }
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl SearchVulnerabilitiesInput {
    /// Creates a new builder-style object to manufacture [`SearchVulnerabilitiesInput`](crate::operation::search_vulnerabilities::SearchVulnerabilitiesInput).
    pub fn builder() -> crate::operation::search_vulnerabilities::builders::SearchVulnerabilitiesInputBuilder {
        crate::operation::search_vulnerabilities::builders::SearchVulnerabilitiesInputBuilder::default()
    }
}

/// A builder for [`SearchVulnerabilitiesInput`](crate::operation::search_vulnerabilities::SearchVulnerabilitiesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SearchVulnerabilitiesInputBuilder {
    pub(crate) filter_criteria: ::std::option::Option<crate::types::SearchVulnerabilitiesFilterCriteria>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl SearchVulnerabilitiesInputBuilder {
    /// <p>The criteria used to filter the results of a vulnerability search.</p>
    /// This field is required.
    pub fn filter_criteria(mut self, input: crate::types::SearchVulnerabilitiesFilterCriteria) -> Self {
        self.filter_criteria = ::std::option::Option::Some(input);
        self
    }
    /// <p>The criteria used to filter the results of a vulnerability search.</p>
    pub fn set_filter_criteria(mut self, input: ::std::option::Option<crate::types::SearchVulnerabilitiesFilterCriteria>) -> Self {
        self.filter_criteria = input;
        self
    }
    /// <p>The criteria used to filter the results of a vulnerability search.</p>
    pub fn get_filter_criteria(&self) -> &::std::option::Option<crate::types::SearchVulnerabilitiesFilterCriteria> {
        &self.filter_criteria
    }
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`SearchVulnerabilitiesInput`](crate::operation::search_vulnerabilities::SearchVulnerabilitiesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::search_vulnerabilities::SearchVulnerabilitiesInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::search_vulnerabilities::SearchVulnerabilitiesInput {
            filter_criteria: self.filter_criteria,
            next_token: self.next_token,
        })
    }
}
