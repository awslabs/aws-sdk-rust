// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EnableInput {
    /// <p>A list of account IDs you want to enable Amazon Inspector scans for.</p>
    #[doc(hidden)]
    pub account_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The resource scan types you want to enable.</p>
    #[doc(hidden)]
    pub resource_types: std::option::Option<std::vec::Vec<crate::types::ResourceScanType>>,
    /// <p>The idempotency token for the request.</p>
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
}
impl EnableInput {
    /// <p>A list of account IDs you want to enable Amazon Inspector scans for.</p>
    pub fn account_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.account_ids.as_deref()
    }
    /// <p>The resource scan types you want to enable.</p>
    pub fn resource_types(&self) -> std::option::Option<&[crate::types::ResourceScanType]> {
        self.resource_types.as_deref()
    }
    /// <p>The idempotency token for the request.</p>
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl EnableInput {
    /// Creates a new builder-style object to manufacture [`EnableInput`](crate::operation::enable::EnableInput).
    pub fn builder() -> crate::operation::enable::builders::EnableInputBuilder {
        crate::operation::enable::builders::EnableInputBuilder::default()
    }
}

/// A builder for [`EnableInput`](crate::operation::enable::EnableInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EnableInputBuilder {
    pub(crate) account_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) resource_types: std::option::Option<std::vec::Vec<crate::types::ResourceScanType>>,
    pub(crate) client_token: std::option::Option<std::string::String>,
}
impl EnableInputBuilder {
    /// Appends an item to `account_ids`.
    ///
    /// To override the contents of this collection use [`set_account_ids`](Self::set_account_ids).
    ///
    /// <p>A list of account IDs you want to enable Amazon Inspector scans for.</p>
    pub fn account_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.account_ids.unwrap_or_default();
        v.push(input.into());
        self.account_ids = Some(v);
        self
    }
    /// <p>A list of account IDs you want to enable Amazon Inspector scans for.</p>
    pub fn set_account_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.account_ids = input;
        self
    }
    /// Appends an item to `resource_types`.
    ///
    /// To override the contents of this collection use [`set_resource_types`](Self::set_resource_types).
    ///
    /// <p>The resource scan types you want to enable.</p>
    pub fn resource_types(mut self, input: crate::types::ResourceScanType) -> Self {
        let mut v = self.resource_types.unwrap_or_default();
        v.push(input);
        self.resource_types = Some(v);
        self
    }
    /// <p>The resource scan types you want to enable.</p>
    pub fn set_resource_types(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ResourceScanType>>,
    ) -> Self {
        self.resource_types = input;
        self
    }
    /// <p>The idempotency token for the request.</p>
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// <p>The idempotency token for the request.</p>
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Consumes the builder and constructs a [`EnableInput`](crate::operation::enable::EnableInput).
    pub fn build(
        self,
    ) -> Result<crate::operation::enable::EnableInput, aws_smithy_http::operation::error::BuildError>
    {
        Ok(crate::operation::enable::EnableInput {
            account_ids: self.account_ids,
            resource_types: self.resource_types,
            client_token: self.client_token,
        })
    }
}
