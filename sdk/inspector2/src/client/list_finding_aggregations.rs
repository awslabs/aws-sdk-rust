// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListFindingAggregations`](crate::client::fluent_builders::ListFindingAggregations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListFindingAggregations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`aggregation_type(AggregationType)`](crate::client::fluent_builders::ListFindingAggregations::aggregation_type) / [`set_aggregation_type(Option<AggregationType>)`](crate::client::fluent_builders::ListFindingAggregations::set_aggregation_type): <p>The type of the aggregation request.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListFindingAggregations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListFindingAggregations::set_next_token): <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListFindingAggregations::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListFindingAggregations::set_max_results): <p>The maximum number of results to return in the response.</p>
    ///   - [`account_ids(Vec<StringFilter>)`](crate::client::fluent_builders::ListFindingAggregations::account_ids) / [`set_account_ids(Option<Vec<StringFilter>>)`](crate::client::fluent_builders::ListFindingAggregations::set_account_ids): <p>The Amazon Web Services account IDs to retrieve finding aggregation data for.</p>
    ///   - [`aggregation_request(AggregationRequest)`](crate::client::fluent_builders::ListFindingAggregations::aggregation_request) / [`set_aggregation_request(Option<AggregationRequest>)`](crate::client::fluent_builders::ListFindingAggregations::set_aggregation_request): <p>Details of the aggregation request that is used to filter your aggregation results.</p>
    /// - On success, responds with [`ListFindingAggregationsOutput`](crate::output::ListFindingAggregationsOutput) with field(s):
    ///   - [`aggregation_type(Option<AggregationType>)`](crate::output::ListFindingAggregationsOutput::aggregation_type): <p>The type of aggregation to perform.</p>
    ///   - [`responses(Option<Vec<AggregationResponse>>)`](crate::output::ListFindingAggregationsOutput::responses): <p>Objects that contain the results of an aggregation operation.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListFindingAggregationsOutput::next_token): <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.</p>
    /// - On failure, responds with [`SdkError<ListFindingAggregationsError>`](crate::error::ListFindingAggregationsError)
    pub fn list_finding_aggregations(
        &self,
    ) -> crate::client::fluent_builders::ListFindingAggregations {
        crate::client::fluent_builders::ListFindingAggregations::new(self.handle.clone())
    }
}
