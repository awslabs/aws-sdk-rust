// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListCoverage`](crate::client::fluent_builders::ListCoverage) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCoverage::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListCoverage::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListCoverage::set_max_results): <p>The maximum number of results to return in the response.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCoverage::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCoverage::set_next_token): <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.</p>
    ///   - [`filter_criteria(CoverageFilterCriteria)`](crate::client::fluent_builders::ListCoverage::filter_criteria) / [`set_filter_criteria(Option<CoverageFilterCriteria>)`](crate::client::fluent_builders::ListCoverage::set_filter_criteria): <p>An object that contains details on the filters to apply to the coverage data for your environment.</p>
    /// - On success, responds with [`ListCoverageOutput`](crate::output::ListCoverageOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListCoverageOutput::next_token): <p>A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.</p>
    ///   - [`covered_resources(Option<Vec<CoveredResource>>)`](crate::output::ListCoverageOutput::covered_resources): <p>An object that contains details on the covered resources in your environment.</p>
    /// - On failure, responds with [`SdkError<ListCoverageError>`](crate::error::ListCoverageError)
    pub fn list_coverage(&self) -> crate::client::fluent_builders::ListCoverage {
        crate::client::fluent_builders::ListCoverage::new(self.handle.clone())
    }
}
