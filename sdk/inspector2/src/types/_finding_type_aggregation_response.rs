// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A response that contains the results of a finding type aggregation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FindingTypeAggregationResponse {
    /// <p>The ID of the Amazon Web Services account associated with the findings.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>The value to sort results by.</p>
    #[doc(hidden)]
    pub severity_counts: std::option::Option<crate::types::SeverityCounts>,
}
impl FindingTypeAggregationResponse {
    /// <p>The ID of the Amazon Web Services account associated with the findings.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The value to sort results by.</p>
    pub fn severity_counts(&self) -> std::option::Option<&crate::types::SeverityCounts> {
        self.severity_counts.as_ref()
    }
}
impl FindingTypeAggregationResponse {
    /// Creates a new builder-style object to manufacture [`FindingTypeAggregationResponse`](crate::types::FindingTypeAggregationResponse).
    pub fn builder() -> crate::types::builders::FindingTypeAggregationResponseBuilder {
        crate::types::builders::FindingTypeAggregationResponseBuilder::default()
    }
}

/// A builder for [`FindingTypeAggregationResponse`](crate::types::FindingTypeAggregationResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FindingTypeAggregationResponseBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) severity_counts: std::option::Option<crate::types::SeverityCounts>,
}
impl FindingTypeAggregationResponseBuilder {
    /// <p>The ID of the Amazon Web Services account associated with the findings.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account associated with the findings.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The value to sort results by.</p>
    pub fn severity_counts(mut self, input: crate::types::SeverityCounts) -> Self {
        self.severity_counts = Some(input);
        self
    }
    /// <p>The value to sort results by.</p>
    pub fn set_severity_counts(
        mut self,
        input: std::option::Option<crate::types::SeverityCounts>,
    ) -> Self {
        self.severity_counts = input;
        self
    }
    /// Consumes the builder and constructs a [`FindingTypeAggregationResponse`](crate::types::FindingTypeAggregationResponse).
    pub fn build(self) -> crate::types::FindingTypeAggregationResponse {
        crate::types::FindingTypeAggregationResponse {
            account_id: self.account_id,
            severity_counts: self.severity_counts,
        }
    }
}
