// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The CVSS score for a finding.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CvssScore {
    /// <p>The base CVSS score used for the finding.</p>
    pub base_score: f64,
    /// <p>The vector string of the CVSS score.</p>
    pub scoring_vector: ::std::string::String,
    /// <p>The version of CVSS used for the score.</p>
    pub version: ::std::string::String,
    /// <p>The source of the CVSS score.</p>
    pub source: ::std::string::String,
}
impl CvssScore {
    /// <p>The base CVSS score used for the finding.</p>
    pub fn base_score(&self) -> f64 {
        self.base_score
    }
    /// <p>The vector string of the CVSS score.</p>
    pub fn scoring_vector(&self) -> &str {
        use std::ops::Deref;
        self.scoring_vector.deref()
    }
    /// <p>The version of CVSS used for the score.</p>
    pub fn version(&self) -> &str {
        use std::ops::Deref;
        self.version.deref()
    }
    /// <p>The source of the CVSS score.</p>
    pub fn source(&self) -> &str {
        use std::ops::Deref;
        self.source.deref()
    }
}
impl CvssScore {
    /// Creates a new builder-style object to manufacture [`CvssScore`](crate::types::CvssScore).
    pub fn builder() -> crate::types::builders::CvssScoreBuilder {
        crate::types::builders::CvssScoreBuilder::default()
    }
}

/// A builder for [`CvssScore`](crate::types::CvssScore).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CvssScoreBuilder {
    pub(crate) base_score: ::std::option::Option<f64>,
    pub(crate) scoring_vector: ::std::option::Option<::std::string::String>,
    pub(crate) version: ::std::option::Option<::std::string::String>,
    pub(crate) source: ::std::option::Option<::std::string::String>,
}
impl CvssScoreBuilder {
    /// <p>The base CVSS score used for the finding.</p>
    /// This field is required.
    pub fn base_score(mut self, input: f64) -> Self {
        self.base_score = ::std::option::Option::Some(input);
        self
    }
    /// <p>The base CVSS score used for the finding.</p>
    pub fn set_base_score(mut self, input: ::std::option::Option<f64>) -> Self {
        self.base_score = input;
        self
    }
    /// <p>The base CVSS score used for the finding.</p>
    pub fn get_base_score(&self) -> &::std::option::Option<f64> {
        &self.base_score
    }
    /// <p>The vector string of the CVSS score.</p>
    /// This field is required.
    pub fn scoring_vector(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.scoring_vector = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The vector string of the CVSS score.</p>
    pub fn set_scoring_vector(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.scoring_vector = input;
        self
    }
    /// <p>The vector string of the CVSS score.</p>
    pub fn get_scoring_vector(&self) -> &::std::option::Option<::std::string::String> {
        &self.scoring_vector
    }
    /// <p>The version of CVSS used for the score.</p>
    /// This field is required.
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of CVSS used for the score.</p>
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// <p>The version of CVSS used for the score.</p>
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    /// <p>The source of the CVSS score.</p>
    /// This field is required.
    pub fn source(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The source of the CVSS score.</p>
    pub fn set_source(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source = input;
        self
    }
    /// <p>The source of the CVSS score.</p>
    pub fn get_source(&self) -> &::std::option::Option<::std::string::String> {
        &self.source
    }
    /// Consumes the builder and constructs a [`CvssScore`](crate::types::CvssScore).
    /// This method will fail if any of the following fields are not set:
    /// - [`base_score`](crate::types::builders::CvssScoreBuilder::base_score)
    /// - [`scoring_vector`](crate::types::builders::CvssScoreBuilder::scoring_vector)
    /// - [`version`](crate::types::builders::CvssScoreBuilder::version)
    /// - [`source`](crate::types::builders::CvssScoreBuilder::source)
    pub fn build(self) -> ::std::result::Result<crate::types::CvssScore, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CvssScore {
            base_score: self.base_score.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "base_score",
                    "base_score was not specified but it is required when building CvssScore",
                )
            })?,
            scoring_vector: self.scoring_vector.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "scoring_vector",
                    "scoring_vector was not specified but it is required when building CvssScore",
                )
            })?,
            version: self.version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "version",
                    "version was not specified but it is required when building CvssScore",
                )
            })?,
            source: self.source.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "source",
                    "source was not specified but it is required when building CvssScore",
                )
            })?,
        })
    }
}
