// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object with details the status of an Amazon Web Services account within your Amazon Inspector environment.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AccountState {
    /// <p>The Amazon Web Services account ID.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>An object detailing the status of Amazon Inspector for the account.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::State>,
    /// <p>An object detailing which resources Amazon Inspector is enabled to scan for the account.</p>
    #[doc(hidden)]
    pub resource_state: std::option::Option<crate::types::ResourceState>,
}
impl AccountState {
    /// <p>The Amazon Web Services account ID.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>An object detailing the status of Amazon Inspector for the account.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::State> {
        self.state.as_ref()
    }
    /// <p>An object detailing which resources Amazon Inspector is enabled to scan for the account.</p>
    pub fn resource_state(&self) -> std::option::Option<&crate::types::ResourceState> {
        self.resource_state.as_ref()
    }
}
impl AccountState {
    /// Creates a new builder-style object to manufacture [`AccountState`](crate::types::AccountState).
    pub fn builder() -> crate::types::builders::AccountStateBuilder {
        crate::types::builders::AccountStateBuilder::default()
    }
}

/// A builder for [`AccountState`](crate::types::AccountState).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccountStateBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) state: std::option::Option<crate::types::State>,
    pub(crate) resource_state: std::option::Option<crate::types::ResourceState>,
}
impl AccountStateBuilder {
    /// <p>The Amazon Web Services account ID.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>An object detailing the status of Amazon Inspector for the account.</p>
    pub fn state(mut self, input: crate::types::State) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>An object detailing the status of Amazon Inspector for the account.</p>
    pub fn set_state(mut self, input: std::option::Option<crate::types::State>) -> Self {
        self.state = input;
        self
    }
    /// <p>An object detailing which resources Amazon Inspector is enabled to scan for the account.</p>
    pub fn resource_state(mut self, input: crate::types::ResourceState) -> Self {
        self.resource_state = Some(input);
        self
    }
    /// <p>An object detailing which resources Amazon Inspector is enabled to scan for the account.</p>
    pub fn set_resource_state(
        mut self,
        input: std::option::Option<crate::types::ResourceState>,
    ) -> Self {
        self.resource_state = input;
        self
    }
    /// Consumes the builder and constructs a [`AccountState`](crate::types::AccountState).
    pub fn build(self) -> crate::types::AccountState {
        crate::types::AccountState {
            account_id: self.account_id,
            state: self.state,
            resource_state: self.resource_state,
        }
    }
}
