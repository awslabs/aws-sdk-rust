// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains information about the Amazon Inspector free trial for an account.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FreeTrialInfo {
    /// <p>The type of scan covered by the Amazon Inspector free trail.</p>
    pub r#type: crate::types::FreeTrialType,
    /// <p>The date and time that the Amazon Inspector free trail started for a given account.</p>
    pub start: ::aws_smithy_types::DateTime,
    /// <p>The date and time that the Amazon Inspector free trail ends for a given account.</p>
    pub end: ::aws_smithy_types::DateTime,
    /// <p>The order to sort results by.</p>
    pub status: crate::types::FreeTrialStatus,
}
impl FreeTrialInfo {
    /// <p>The type of scan covered by the Amazon Inspector free trail.</p>
    pub fn r#type(&self) -> &crate::types::FreeTrialType {
        &self.r#type
    }
    /// <p>The date and time that the Amazon Inspector free trail started for a given account.</p>
    pub fn start(&self) -> &::aws_smithy_types::DateTime {
        &self.start
    }
    /// <p>The date and time that the Amazon Inspector free trail ends for a given account.</p>
    pub fn end(&self) -> &::aws_smithy_types::DateTime {
        &self.end
    }
    /// <p>The order to sort results by.</p>
    pub fn status(&self) -> &crate::types::FreeTrialStatus {
        &self.status
    }
}
impl FreeTrialInfo {
    /// Creates a new builder-style object to manufacture [`FreeTrialInfo`](crate::types::FreeTrialInfo).
    pub fn builder() -> crate::types::builders::FreeTrialInfoBuilder {
        crate::types::builders::FreeTrialInfoBuilder::default()
    }
}

/// A builder for [`FreeTrialInfo`](crate::types::FreeTrialInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct FreeTrialInfoBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::FreeTrialType>,
    pub(crate) start: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::FreeTrialStatus>,
}
impl FreeTrialInfoBuilder {
    /// <p>The type of scan covered by the Amazon Inspector free trail.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::FreeTrialType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of scan covered by the Amazon Inspector free trail.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::FreeTrialType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of scan covered by the Amazon Inspector free trail.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::FreeTrialType> {
        &self.r#type
    }
    /// <p>The date and time that the Amazon Inspector free trail started for a given account.</p>
    /// This field is required.
    pub fn start(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the Amazon Inspector free trail started for a given account.</p>
    pub fn set_start(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start = input;
        self
    }
    /// <p>The date and time that the Amazon Inspector free trail started for a given account.</p>
    pub fn get_start(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start
    }
    /// <p>The date and time that the Amazon Inspector free trail ends for a given account.</p>
    /// This field is required.
    pub fn end(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the Amazon Inspector free trail ends for a given account.</p>
    pub fn set_end(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end = input;
        self
    }
    /// <p>The date and time that the Amazon Inspector free trail ends for a given account.</p>
    pub fn get_end(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end
    }
    /// <p>The order to sort results by.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::FreeTrialStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The order to sort results by.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::FreeTrialStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The order to sort results by.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::FreeTrialStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`FreeTrialInfo`](crate::types::FreeTrialInfo).
    /// This method will fail if any of the following fields are not set:
    /// - [`r#type`](crate::types::builders::FreeTrialInfoBuilder::r#type)
    /// - [`start`](crate::types::builders::FreeTrialInfoBuilder::start)
    /// - [`end`](crate::types::builders::FreeTrialInfoBuilder::end)
    /// - [`status`](crate::types::builders::FreeTrialInfoBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::FreeTrialInfo, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FreeTrialInfo {
            r#type: self.r#type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "r#type",
                    "r#type was not specified but it is required when building FreeTrialInfo",
                )
            })?,
            start: self.start.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "start",
                    "start was not specified but it is required when building FreeTrialInfo",
                )
            })?,
            end: self.end.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "end",
                    "end was not specified but it is required when building FreeTrialInfo",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building FreeTrialInfo",
                )
            })?,
        })
    }
}
