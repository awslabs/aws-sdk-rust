// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information on how to remediate a finding.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Remediation {
    /// <p>An object that contains information about the recommended course of action to remediate the finding.</p>
    #[doc(hidden)]
    pub recommendation: std::option::Option<crate::types::Recommendation>,
}
impl Remediation {
    /// <p>An object that contains information about the recommended course of action to remediate the finding.</p>
    pub fn recommendation(&self) -> std::option::Option<&crate::types::Recommendation> {
        self.recommendation.as_ref()
    }
}
impl Remediation {
    /// Creates a new builder-style object to manufacture [`Remediation`](crate::types::Remediation).
    pub fn builder() -> crate::types::builders::RemediationBuilder {
        crate::types::builders::RemediationBuilder::default()
    }
}

/// A builder for [`Remediation`](crate::types::Remediation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RemediationBuilder {
    pub(crate) recommendation: std::option::Option<crate::types::Recommendation>,
}
impl RemediationBuilder {
    /// <p>An object that contains information about the recommended course of action to remediate the finding.</p>
    pub fn recommendation(mut self, input: crate::types::Recommendation) -> Self {
        self.recommendation = Some(input);
        self
    }
    /// <p>An object that contains information about the recommended course of action to remediate the finding.</p>
    pub fn set_recommendation(
        mut self,
        input: std::option::Option<crate::types::Recommendation>,
    ) -> Self {
        self.recommendation = input;
        self
    }
    /// Consumes the builder and constructs a [`Remediation`](crate::types::Remediation).
    pub fn build(self) -> crate::types::Remediation {
        crate::types::Remediation {
            recommendation: self.recommendation,
        }
    }
}
