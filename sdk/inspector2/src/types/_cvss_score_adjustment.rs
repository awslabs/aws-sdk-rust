// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details on adjustments Amazon Inspector made to the CVSS score for a finding.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CvssScoreAdjustment {
    /// <p>The metric used to adjust the CVSS score.</p>
    pub metric: ::std::string::String,
    /// <p>The reason the CVSS score has been adjustment.</p>
    pub reason: ::std::string::String,
}
impl CvssScoreAdjustment {
    /// <p>The metric used to adjust the CVSS score.</p>
    pub fn metric(&self) -> &str {
        use std::ops::Deref;
        self.metric.deref()
    }
    /// <p>The reason the CVSS score has been adjustment.</p>
    pub fn reason(&self) -> &str {
        use std::ops::Deref;
        self.reason.deref()
    }
}
impl CvssScoreAdjustment {
    /// Creates a new builder-style object to manufacture [`CvssScoreAdjustment`](crate::types::CvssScoreAdjustment).
    pub fn builder() -> crate::types::builders::CvssScoreAdjustmentBuilder {
        crate::types::builders::CvssScoreAdjustmentBuilder::default()
    }
}

/// A builder for [`CvssScoreAdjustment`](crate::types::CvssScoreAdjustment).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CvssScoreAdjustmentBuilder {
    pub(crate) metric: ::std::option::Option<::std::string::String>,
    pub(crate) reason: ::std::option::Option<::std::string::String>,
}
impl CvssScoreAdjustmentBuilder {
    /// <p>The metric used to adjust the CVSS score.</p>
    /// This field is required.
    pub fn metric(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.metric = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The metric used to adjust the CVSS score.</p>
    pub fn set_metric(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.metric = input;
        self
    }
    /// <p>The metric used to adjust the CVSS score.</p>
    pub fn get_metric(&self) -> &::std::option::Option<::std::string::String> {
        &self.metric
    }
    /// <p>The reason the CVSS score has been adjustment.</p>
    /// This field is required.
    pub fn reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The reason the CVSS score has been adjustment.</p>
    pub fn set_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.reason = input;
        self
    }
    /// <p>The reason the CVSS score has been adjustment.</p>
    pub fn get_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.reason
    }
    /// Consumes the builder and constructs a [`CvssScoreAdjustment`](crate::types::CvssScoreAdjustment).
    /// This method will fail if any of the following fields are not set:
    /// - [`metric`](crate::types::builders::CvssScoreAdjustmentBuilder::metric)
    /// - [`reason`](crate::types::builders::CvssScoreAdjustmentBuilder::reason)
    pub fn build(self) -> ::std::result::Result<crate::types::CvssScoreAdjustment, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CvssScoreAdjustment {
            metric: self.metric.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "metric",
                    "metric was not specified but it is required when building CvssScoreAdjustment",
                )
            })?,
            reason: self.reason.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "reason",
                    "reason was not specified but it is required when building CvssScoreAdjustment",
                )
            })?,
        })
    }
}
