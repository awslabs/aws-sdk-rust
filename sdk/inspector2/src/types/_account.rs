// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An Amazon Web Services account within your environment that Amazon Inspector has been enabled for.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Account {
    /// <p>The ID of the Amazon Web Services account.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>The status of Amazon Inspector for the account.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::Status>,
    /// <p>Details of the status of Amazon Inspector scans by resource type.</p>
    #[doc(hidden)]
    pub resource_status: std::option::Option<crate::types::ResourceStatus>,
}
impl Account {
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The status of Amazon Inspector for the account.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::Status> {
        self.status.as_ref()
    }
    /// <p>Details of the status of Amazon Inspector scans by resource type.</p>
    pub fn resource_status(&self) -> std::option::Option<&crate::types::ResourceStatus> {
        self.resource_status.as_ref()
    }
}
impl Account {
    /// Creates a new builder-style object to manufacture [`Account`](crate::types::Account).
    pub fn builder() -> crate::types::builders::AccountBuilder {
        crate::types::builders::AccountBuilder::default()
    }
}

/// A builder for [`Account`](crate::types::Account).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccountBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::Status>,
    pub(crate) resource_status: std::option::Option<crate::types::ResourceStatus>,
}
impl AccountBuilder {
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The status of Amazon Inspector for the account.</p>
    pub fn status(mut self, input: crate::types::Status) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of Amazon Inspector for the account.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::Status>) -> Self {
        self.status = input;
        self
    }
    /// <p>Details of the status of Amazon Inspector scans by resource type.</p>
    pub fn resource_status(mut self, input: crate::types::ResourceStatus) -> Self {
        self.resource_status = Some(input);
        self
    }
    /// <p>Details of the status of Amazon Inspector scans by resource type.</p>
    pub fn set_resource_status(
        mut self,
        input: std::option::Option<crate::types::ResourceStatus>,
    ) -> Self {
        self.resource_status = input;
        self
    }
    /// Consumes the builder and constructs a [`Account`](crate::types::Account).
    pub fn build(self) -> crate::types::Account {
        crate::types::Account {
            account_id: self.account_id,
            status: self.status,
            resource_status: self.resource_status,
        }
    }
}
