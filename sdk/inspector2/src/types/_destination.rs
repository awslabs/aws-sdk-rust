// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details of the Amazon S3 bucket and KMS key used to export findings.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Destination {
    /// <p>The name of the Amazon S3 bucket to export findings to.</p>
    #[doc(hidden)]
    pub bucket_name: std::option::Option<std::string::String>,
    /// <p>The prefix of the KMS key used to export findings.</p>
    #[doc(hidden)]
    pub key_prefix: std::option::Option<std::string::String>,
    /// <p>The ARN of the KMS key used to encrypt data when exporting findings.</p>
    #[doc(hidden)]
    pub kms_key_arn: std::option::Option<std::string::String>,
}
impl Destination {
    /// <p>The name of the Amazon S3 bucket to export findings to.</p>
    pub fn bucket_name(&self) -> std::option::Option<&str> {
        self.bucket_name.as_deref()
    }
    /// <p>The prefix of the KMS key used to export findings.</p>
    pub fn key_prefix(&self) -> std::option::Option<&str> {
        self.key_prefix.as_deref()
    }
    /// <p>The ARN of the KMS key used to encrypt data when exporting findings.</p>
    pub fn kms_key_arn(&self) -> std::option::Option<&str> {
        self.kms_key_arn.as_deref()
    }
}
impl Destination {
    /// Creates a new builder-style object to manufacture [`Destination`](crate::types::Destination).
    pub fn builder() -> crate::types::builders::DestinationBuilder {
        crate::types::builders::DestinationBuilder::default()
    }
}

/// A builder for [`Destination`](crate::types::Destination).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DestinationBuilder {
    pub(crate) bucket_name: std::option::Option<std::string::String>,
    pub(crate) key_prefix: std::option::Option<std::string::String>,
    pub(crate) kms_key_arn: std::option::Option<std::string::String>,
}
impl DestinationBuilder {
    /// <p>The name of the Amazon S3 bucket to export findings to.</p>
    pub fn bucket_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_name = Some(input.into());
        self
    }
    /// <p>The name of the Amazon S3 bucket to export findings to.</p>
    pub fn set_bucket_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket_name = input;
        self
    }
    /// <p>The prefix of the KMS key used to export findings.</p>
    pub fn key_prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.key_prefix = Some(input.into());
        self
    }
    /// <p>The prefix of the KMS key used to export findings.</p>
    pub fn set_key_prefix(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.key_prefix = input;
        self
    }
    /// <p>The ARN of the KMS key used to encrypt data when exporting findings.</p>
    pub fn kms_key_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.kms_key_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the KMS key used to encrypt data when exporting findings.</p>
    pub fn set_kms_key_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.kms_key_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`Destination`](crate::types::Destination).
    pub fn build(self) -> crate::types::Destination {
        crate::types::Destination {
            bucket_name: self.bucket_name,
            key_prefix: self.key_prefix,
            kms_key_arn: self.kms_key_arn,
        }
    }
}
