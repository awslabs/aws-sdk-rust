// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information about the DataIntegration association.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DataIntegrationAssociationSummary {
    /// <p>The Amazon Resource Name (ARN) of the DataIntegration association.</p>
    #[doc(hidden)]
    pub data_integration_association_arn: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN)of the DataIntegration.</p>
    #[doc(hidden)]
    pub data_integration_arn: std::option::Option<std::string::String>,
    /// <p>The identifier for teh client that is associated with the DataIntegration association.</p>
    #[doc(hidden)]
    pub client_id: std::option::Option<std::string::String>,
}
impl DataIntegrationAssociationSummary {
    /// <p>The Amazon Resource Name (ARN) of the DataIntegration association.</p>
    pub fn data_integration_association_arn(&self) -> std::option::Option<&str> {
        self.data_integration_association_arn.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN)of the DataIntegration.</p>
    pub fn data_integration_arn(&self) -> std::option::Option<&str> {
        self.data_integration_arn.as_deref()
    }
    /// <p>The identifier for teh client that is associated with the DataIntegration association.</p>
    pub fn client_id(&self) -> std::option::Option<&str> {
        self.client_id.as_deref()
    }
}
impl DataIntegrationAssociationSummary {
    /// Creates a new builder-style object to manufacture [`DataIntegrationAssociationSummary`](crate::types::DataIntegrationAssociationSummary).
    pub fn builder() -> crate::types::builders::DataIntegrationAssociationSummaryBuilder {
        crate::types::builders::DataIntegrationAssociationSummaryBuilder::default()
    }
}

/// A builder for [`DataIntegrationAssociationSummary`](crate::types::DataIntegrationAssociationSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DataIntegrationAssociationSummaryBuilder {
    pub(crate) data_integration_association_arn: std::option::Option<std::string::String>,
    pub(crate) data_integration_arn: std::option::Option<std::string::String>,
    pub(crate) client_id: std::option::Option<std::string::String>,
}
impl DataIntegrationAssociationSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the DataIntegration association.</p>
    pub fn data_integration_association_arn(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.data_integration_association_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the DataIntegration association.</p>
    pub fn set_data_integration_association_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.data_integration_association_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN)of the DataIntegration.</p>
    pub fn data_integration_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.data_integration_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN)of the DataIntegration.</p>
    pub fn set_data_integration_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.data_integration_arn = input;
        self
    }
    /// <p>The identifier for teh client that is associated with the DataIntegration association.</p>
    pub fn client_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_id = Some(input.into());
        self
    }
    /// <p>The identifier for teh client that is associated with the DataIntegration association.</p>
    pub fn set_client_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DataIntegrationAssociationSummary`](crate::types::DataIntegrationAssociationSummary).
    pub fn build(self) -> crate::types::DataIntegrationAssociationSummary {
        crate::types::DataIntegrationAssociationSummary {
            data_integration_association_arn: self.data_integration_association_arn,
            data_integration_arn: self.data_integration_arn,
            client_id: self.client_id,
        }
    }
}
