// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_create_event_integration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateEventIntegrationInput,
) {
    if let Some(var_1) = &input.client_token {
        object.key("ClientToken").string(var_1);
    }
    if let Some(var_2) = &input.description {
        object.key("Description").string(var_2);
    }
    if let Some(var_3) = &input.event_bridge_bus {
        object.key("EventBridgeBus").string(var_3);
    }
    if let Some(var_4) = &input.event_filter {
        let mut object_5 = object.key("EventFilter").start_object();
        crate::json_ser::serialize_structure_event_filter(&mut object_5, var_4);
        object_5.finish();
    }
    if let Some(var_6) = &input.name {
        object.key("Name").string(var_6);
    }
    if let Some(var_7) = &input.tags {
        let mut object_8 = object.key("Tags").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9).string(value_10);
            }
        }
        object_8.finish();
    }
}

pub fn serialize_structure_tag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_11) = &input.tags {
        let mut object_12 = object.key("tags").start_object();
        for (key_13, value_14) in var_11 {
            {
                object_12.key(key_13).string(value_14);
            }
        }
        object_12.finish();
    }
}

pub fn serialize_structure_update_event_integration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateEventIntegrationInput,
) {
    if let Some(var_15) = &input.description {
        object.key("Description").string(var_15);
    }
}

pub fn serialize_structure_event_filter(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::EventFilter,
) {
    if let Some(var_16) = &input.source {
        object.key("Source").string(var_16);
    }
}
