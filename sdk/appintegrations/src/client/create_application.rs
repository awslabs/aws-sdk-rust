// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateApplication`](crate::operation::create_application::builders::CreateApplicationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::set_name):<br>required: **true**<br><p>The name of the application.</p><br>
    ///   - [`namespace(impl Into<String>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::namespace) / [`set_namespace(Option<String>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::set_namespace):<br>required: **true**<br><p>The namespace of the application.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::set_description):<br>required: **false**<br><p>The description of the application.</p><br>
    ///   - [`application_source_config(ApplicationSourceConfig)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::application_source_config) / [`set_application_source_config(Option<ApplicationSourceConfig>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::set_application_source_config):<br>required: **true**<br><p>The configuration for where the application should be loaded from.</p><br>
    ///   - [`subscriptions(Subscription)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::subscriptions) / [`set_subscriptions(Option<Vec::<Subscription>>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::set_subscriptions):<br>required: **false**<br><p>The events that the application subscribes.</p><br>
    ///   - [`publications(Publication)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::publications) / [`set_publications(Option<Vec::<Publication>>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::set_publications):<br>required: **false**<br><p>The events that the application publishes.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_application::builders::CreateApplicationFluentBuilder::set_tags):<br>required: **false**<br><p>The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.</p><br>
    /// - On success, responds with [`CreateApplicationOutput`](crate::operation::create_application::CreateApplicationOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_application::CreateApplicationOutput::arn): <p>The Amazon Resource Name (ARN) of the Application.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_application::CreateApplicationOutput::id): <p>A unique identifier for the Application.</p>
    /// - On failure, responds with [`SdkError<CreateApplicationError>`](crate::operation::create_application::CreateApplicationError)
    pub fn create_application(&self) -> crate::operation::create_application::builders::CreateApplicationFluentBuilder {
        crate::operation::create_application::builders::CreateApplicationFluentBuilder::new(self.handle.clone())
    }
}
