// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetSolNetworkPackageDescriptorInput {
    /// <p>ID of the network service descriptor in the network package.</p>
    pub nsd_info_id: ::std::option::Option<::std::string::String>,
}
impl GetSolNetworkPackageDescriptorInput {
    /// <p>ID of the network service descriptor in the network package.</p>
    pub fn nsd_info_id(&self) -> ::std::option::Option<&str> {
        self.nsd_info_id.as_deref()
    }
}
impl GetSolNetworkPackageDescriptorInput {
    /// Creates a new builder-style object to manufacture [`GetSolNetworkPackageDescriptorInput`](crate::operation::get_sol_network_package_descriptor::GetSolNetworkPackageDescriptorInput).
    pub fn builder() -> crate::operation::get_sol_network_package_descriptor::builders::GetSolNetworkPackageDescriptorInputBuilder {
        crate::operation::get_sol_network_package_descriptor::builders::GetSolNetworkPackageDescriptorInputBuilder::default()
    }
}

/// A builder for [`GetSolNetworkPackageDescriptorInput`](crate::operation::get_sol_network_package_descriptor::GetSolNetworkPackageDescriptorInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetSolNetworkPackageDescriptorInputBuilder {
    pub(crate) nsd_info_id: ::std::option::Option<::std::string::String>,
}
impl GetSolNetworkPackageDescriptorInputBuilder {
    /// <p>ID of the network service descriptor in the network package.</p>
    /// This field is required.
    pub fn nsd_info_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.nsd_info_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ID of the network service descriptor in the network package.</p>
    pub fn set_nsd_info_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.nsd_info_id = input;
        self
    }
    /// <p>ID of the network service descriptor in the network package.</p>
    pub fn get_nsd_info_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.nsd_info_id
    }
    /// Consumes the builder and constructs a [`GetSolNetworkPackageDescriptorInput`](crate::operation::get_sol_network_package_descriptor::GetSolNetworkPackageDescriptorInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_sol_network_package_descriptor::GetSolNetworkPackageDescriptorInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_sol_network_package_descriptor::GetSolNetworkPackageDescriptorInput {
                nsd_info_id: self.nsd_info_id,
            },
        )
    }
}
