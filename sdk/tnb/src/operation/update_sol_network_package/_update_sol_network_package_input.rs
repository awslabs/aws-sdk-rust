// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateSolNetworkPackageInput {
    /// <p>ID of the network service descriptor in the network package.</p>
    pub nsd_info_id: ::std::option::Option<::std::string::String>,
    /// <p>Operational state of the network service descriptor in the network package.</p>
    pub nsd_operational_state: ::std::option::Option<crate::types::NsdOperationalState>,
}
impl UpdateSolNetworkPackageInput {
    /// <p>ID of the network service descriptor in the network package.</p>
    pub fn nsd_info_id(&self) -> ::std::option::Option<&str> {
        self.nsd_info_id.as_deref()
    }
    /// <p>Operational state of the network service descriptor in the network package.</p>
    pub fn nsd_operational_state(&self) -> ::std::option::Option<&crate::types::NsdOperationalState> {
        self.nsd_operational_state.as_ref()
    }
}
impl UpdateSolNetworkPackageInput {
    /// Creates a new builder-style object to manufacture [`UpdateSolNetworkPackageInput`](crate::operation::update_sol_network_package::UpdateSolNetworkPackageInput).
    pub fn builder() -> crate::operation::update_sol_network_package::builders::UpdateSolNetworkPackageInputBuilder {
        crate::operation::update_sol_network_package::builders::UpdateSolNetworkPackageInputBuilder::default()
    }
}

/// A builder for [`UpdateSolNetworkPackageInput`](crate::operation::update_sol_network_package::UpdateSolNetworkPackageInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateSolNetworkPackageInputBuilder {
    pub(crate) nsd_info_id: ::std::option::Option<::std::string::String>,
    pub(crate) nsd_operational_state: ::std::option::Option<crate::types::NsdOperationalState>,
}
impl UpdateSolNetworkPackageInputBuilder {
    /// <p>ID of the network service descriptor in the network package.</p>
    /// This field is required.
    pub fn nsd_info_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.nsd_info_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ID of the network service descriptor in the network package.</p>
    pub fn set_nsd_info_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.nsd_info_id = input;
        self
    }
    /// <p>ID of the network service descriptor in the network package.</p>
    pub fn get_nsd_info_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.nsd_info_id
    }
    /// <p>Operational state of the network service descriptor in the network package.</p>
    /// This field is required.
    pub fn nsd_operational_state(mut self, input: crate::types::NsdOperationalState) -> Self {
        self.nsd_operational_state = ::std::option::Option::Some(input);
        self
    }
    /// <p>Operational state of the network service descriptor in the network package.</p>
    pub fn set_nsd_operational_state(mut self, input: ::std::option::Option<crate::types::NsdOperationalState>) -> Self {
        self.nsd_operational_state = input;
        self
    }
    /// <p>Operational state of the network service descriptor in the network package.</p>
    pub fn get_nsd_operational_state(&self) -> &::std::option::Option<crate::types::NsdOperationalState> {
        &self.nsd_operational_state
    }
    /// Consumes the builder and constructs a [`UpdateSolNetworkPackageInput`](crate::operation::update_sol_network_package::UpdateSolNetworkPackageInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_sol_network_package::UpdateSolNetworkPackageInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_sol_network_package::UpdateSolNetworkPackageInput {
            nsd_info_id: self.nsd_info_id,
            nsd_operational_state: self.nsd_operational_state,
        })
    }
}
