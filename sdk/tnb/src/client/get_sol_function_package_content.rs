// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSolFunctionPackageContent`](crate::operation::get_sol_function_package_content::builders::GetSolFunctionPackageContentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`vnf_pkg_id(impl Into<String>)`](crate::operation::get_sol_function_package_content::builders::GetSolFunctionPackageContentFluentBuilder::vnf_pkg_id) / [`set_vnf_pkg_id(Option<String>)`](crate::operation::get_sol_function_package_content::builders::GetSolFunctionPackageContentFluentBuilder::set_vnf_pkg_id):<br>required: **true**<br><p>ID of the function package.</p><br>
    ///   - [`accept(PackageContentType)`](crate::operation::get_sol_function_package_content::builders::GetSolFunctionPackageContentFluentBuilder::accept) / [`set_accept(Option<PackageContentType>)`](crate::operation::get_sol_function_package_content::builders::GetSolFunctionPackageContentFluentBuilder::set_accept):<br>required: **true**<br><p>The format of the package that you want to download from the function packages.</p><br>
    /// - On success, responds with [`GetSolFunctionPackageContentOutput`](crate::operation::get_sol_function_package_content::GetSolFunctionPackageContentOutput) with field(s):
    ///   - [`content_type(Option<PackageContentType>)`](crate::operation::get_sol_function_package_content::GetSolFunctionPackageContentOutput::content_type): <p>Indicates the media type of the resource.</p>
    ///   - [`package_content(Option<Blob>)`](crate::operation::get_sol_function_package_content::GetSolFunctionPackageContentOutput::package_content): <p>Contents of the function package.</p>
    /// - On failure, responds with [`SdkError<GetSolFunctionPackageContentError>`](crate::operation::get_sol_function_package_content::GetSolFunctionPackageContentError)
    pub fn get_sol_function_package_content(
        &self,
    ) -> crate::operation::get_sol_function_package_content::builders::GetSolFunctionPackageContentFluentBuilder {
        crate::operation::get_sol_function_package_content::builders::GetSolFunctionPackageContentFluentBuilder::new(self.handle.clone())
    }
}
