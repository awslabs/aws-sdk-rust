// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ValidateSolNetworkPackageContent`](crate::operation::validate_sol_network_package_content::builders::ValidateSolNetworkPackageContentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`nsd_info_id(impl Into<String>)`](crate::operation::validate_sol_network_package_content::builders::ValidateSolNetworkPackageContentFluentBuilder::nsd_info_id) / [`set_nsd_info_id(Option<String>)`](crate::operation::validate_sol_network_package_content::builders::ValidateSolNetworkPackageContentFluentBuilder::set_nsd_info_id):<br>required: **true**<br><p>Network service descriptor file.</p><br>
    ///   - [`content_type(PackageContentType)`](crate::operation::validate_sol_network_package_content::builders::ValidateSolNetworkPackageContentFluentBuilder::content_type) / [`set_content_type(Option<PackageContentType>)`](crate::operation::validate_sol_network_package_content::builders::ValidateSolNetworkPackageContentFluentBuilder::set_content_type):<br>required: **false**<br><p>Network package content type.</p><br>
    ///   - [`file(Blob)`](crate::operation::validate_sol_network_package_content::builders::ValidateSolNetworkPackageContentFluentBuilder::file) / [`set_file(Option<Blob>)`](crate::operation::validate_sol_network_package_content::builders::ValidateSolNetworkPackageContentFluentBuilder::set_file):<br>required: **true**<br><p>Network package file.</p><br>
    /// - On success, responds with [`ValidateSolNetworkPackageContentOutput`](crate::operation::validate_sol_network_package_content::ValidateSolNetworkPackageContentOutput) with field(s):
    ///   - [`id(String)`](crate::operation::validate_sol_network_package_content::ValidateSolNetworkPackageContentOutput::id): <p>Network package ID.</p>
    ///   - [`arn(String)`](crate::operation::validate_sol_network_package_content::ValidateSolNetworkPackageContentOutput::arn): <p>Network package ARN.</p>
    ///   - [`nsd_id(String)`](crate::operation::validate_sol_network_package_content::ValidateSolNetworkPackageContentOutput::nsd_id): <p>Network service descriptor ID.</p>
    ///   - [`nsd_name(String)`](crate::operation::validate_sol_network_package_content::ValidateSolNetworkPackageContentOutput::nsd_name): <p>Network service descriptor name.</p>
    ///   - [`nsd_version(String)`](crate::operation::validate_sol_network_package_content::ValidateSolNetworkPackageContentOutput::nsd_version): <p>Network service descriptor version.</p>
    ///   - [`vnf_pkg_ids(Vec::<String>)`](crate::operation::validate_sol_network_package_content::ValidateSolNetworkPackageContentOutput::vnf_pkg_ids): <p>Function package IDs.</p>
    ///   - [`metadata(Option<ValidateSolNetworkPackageContentMetadata>)`](crate::operation::validate_sol_network_package_content::ValidateSolNetworkPackageContentOutput::metadata): <p>Network package metadata.</p>
    /// - On failure, responds with [`SdkError<ValidateSolNetworkPackageContentError>`](crate::operation::validate_sol_network_package_content::ValidateSolNetworkPackageContentError)
    pub fn validate_sol_network_package_content(
        &self,
    ) -> crate::operation::validate_sol_network_package_content::builders::ValidateSolNetworkPackageContentFluentBuilder {
        crate::operation::validate_sol_network_package_content::builders::ValidateSolNetworkPackageContentFluentBuilder::new(self.handle.clone())
    }
}
