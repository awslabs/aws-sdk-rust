// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration information for Amazon AppIntegrations to automatically ingest content.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AppIntegrationsConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the AppIntegrations DataIntegration to use for ingesting content.</p>
    #[doc(hidden)]
    pub app_integration_arn: std::option::Option<std::string::String>,
    /// <p>The fields from the source that are made available to your agents in Wisdom. </p>
    /// <ul>
    /// <li> <p> For <a href="https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm"> Salesforce</a>, you must include at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code>. </p> </li>
    /// <li> <p>For <a href="https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api"> ServiceNow</a>, you must include at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code>. </p> </li>
    /// </ul>
    /// <p>Make sure to include additional fields. These fields are indexed and used to source recommendations. </p>
    #[doc(hidden)]
    pub object_fields: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl AppIntegrationsConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the AppIntegrations DataIntegration to use for ingesting content.</p>
    pub fn app_integration_arn(&self) -> std::option::Option<&str> {
        self.app_integration_arn.as_deref()
    }
    /// <p>The fields from the source that are made available to your agents in Wisdom. </p>
    /// <ul>
    /// <li> <p> For <a href="https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm"> Salesforce</a>, you must include at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code>. </p> </li>
    /// <li> <p>For <a href="https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api"> ServiceNow</a>, you must include at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code>. </p> </li>
    /// </ul>
    /// <p>Make sure to include additional fields. These fields are indexed and used to source recommendations. </p>
    pub fn object_fields(&self) -> std::option::Option<&[std::string::String]> {
        self.object_fields.as_deref()
    }
}
impl AppIntegrationsConfiguration {
    /// Creates a new builder-style object to manufacture [`AppIntegrationsConfiguration`](crate::types::AppIntegrationsConfiguration).
    pub fn builder() -> crate::types::builders::AppIntegrationsConfigurationBuilder {
        crate::types::builders::AppIntegrationsConfigurationBuilder::default()
    }
}

/// A builder for [`AppIntegrationsConfiguration`](crate::types::AppIntegrationsConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AppIntegrationsConfigurationBuilder {
    pub(crate) app_integration_arn: std::option::Option<std::string::String>,
    pub(crate) object_fields: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl AppIntegrationsConfigurationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the AppIntegrations DataIntegration to use for ingesting content.</p>
    pub fn app_integration_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.app_integration_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the AppIntegrations DataIntegration to use for ingesting content.</p>
    pub fn set_app_integration_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.app_integration_arn = input;
        self
    }
    /// Appends an item to `object_fields`.
    ///
    /// To override the contents of this collection use [`set_object_fields`](Self::set_object_fields).
    ///
    /// <p>The fields from the source that are made available to your agents in Wisdom. </p>
    /// <ul>
    /// <li> <p> For <a href="https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm"> Salesforce</a>, you must include at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code>. </p> </li>
    /// <li> <p>For <a href="https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api"> ServiceNow</a>, you must include at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code>. </p> </li>
    /// </ul>
    /// <p>Make sure to include additional fields. These fields are indexed and used to source recommendations. </p>
    pub fn object_fields(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.object_fields.unwrap_or_default();
        v.push(input.into());
        self.object_fields = Some(v);
        self
    }
    /// <p>The fields from the source that are made available to your agents in Wisdom. </p>
    /// <ul>
    /// <li> <p> For <a href="https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm"> Salesforce</a>, you must include at least <code>Id</code>, <code>ArticleNumber</code>, <code>VersionNumber</code>, <code>Title</code>, <code>PublishStatus</code>, and <code>IsDeleted</code>. </p> </li>
    /// <li> <p>For <a href="https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api"> ServiceNow</a>, you must include at least <code>number</code>, <code>short_description</code>, <code>sys_mod_count</code>, <code>workflow_state</code>, and <code>active</code>. </p> </li>
    /// </ul>
    /// <p>Make sure to include additional fields. These fields are indexed and used to source recommendations. </p>
    pub fn set_object_fields(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.object_fields = input;
        self
    }
    /// Consumes the builder and constructs a [`AppIntegrationsConfiguration`](crate::types::AppIntegrationsConfiguration).
    pub fn build(self) -> crate::types::AppIntegrationsConfiguration {
        crate::types::AppIntegrationsConfiguration {
            app_integration_arn: self.app_integration_arn,
            object_fields: self.object_fields,
        }
    }
}
