// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An error occurred when creating a recommendation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NotifyRecommendationsReceivedError {
    /// <p>The identifier of the recommendation that is in error.</p>
    #[doc(hidden)]
    pub recommendation_id: std::option::Option<std::string::String>,
    /// <p>A recommendation is causing an error.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl NotifyRecommendationsReceivedError {
    /// <p>The identifier of the recommendation that is in error.</p>
    pub fn recommendation_id(&self) -> std::option::Option<&str> {
        self.recommendation_id.as_deref()
    }
    /// <p>A recommendation is causing an error.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl NotifyRecommendationsReceivedError {
    /// Creates a new builder-style object to manufacture [`NotifyRecommendationsReceivedError`](crate::types::NotifyRecommendationsReceivedError).
    pub fn builder() -> crate::types::builders::NotifyRecommendationsReceivedErrorBuilder {
        crate::types::builders::NotifyRecommendationsReceivedErrorBuilder::default()
    }
}

/// A builder for [`NotifyRecommendationsReceivedError`](crate::types::NotifyRecommendationsReceivedError).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NotifyRecommendationsReceivedErrorBuilder {
    pub(crate) recommendation_id: std::option::Option<std::string::String>,
    pub(crate) message: std::option::Option<std::string::String>,
}
impl NotifyRecommendationsReceivedErrorBuilder {
    /// <p>The identifier of the recommendation that is in error.</p>
    pub fn recommendation_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.recommendation_id = Some(input.into());
        self
    }
    /// <p>The identifier of the recommendation that is in error.</p>
    pub fn set_recommendation_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.recommendation_id = input;
        self
    }
    /// <p>A recommendation is causing an error.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>A recommendation is causing an error.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`NotifyRecommendationsReceivedError`](crate::types::NotifyRecommendationsReceivedError).
    pub fn build(self) -> crate::types::NotifyRecommendationsReceivedError {
        crate::types::NotifyRecommendationsReceivedError {
            recommendation_id: self.recommendation_id,
            message: self.message,
        }
    }
}
