// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateKnowledgeBase`](crate::client::fluent_builders::CreateKnowledgeBase) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateKnowledgeBase::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateKnowledgeBase::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateKnowledgeBase::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateKnowledgeBase::set_name): <p>The name of the knowledge base.</p>
    ///   - [`knowledge_base_type(KnowledgeBaseType)`](crate::client::fluent_builders::CreateKnowledgeBase::knowledge_base_type) / [`set_knowledge_base_type(Option<KnowledgeBaseType>)`](crate::client::fluent_builders::CreateKnowledgeBase::set_knowledge_base_type): <p>The type of knowledge base. Only CUSTOM knowledge bases allow you to upload your own content. EXTERNAL knowledge bases support integrations with third-party systems whose content is synchronized automatically. </p>
    ///   - [`source_configuration(SourceConfiguration)`](crate::client::fluent_builders::CreateKnowledgeBase::source_configuration) / [`set_source_configuration(Option<SourceConfiguration>)`](crate::client::fluent_builders::CreateKnowledgeBase::set_source_configuration): <p>The source of the knowledge base content. Only set this argument for EXTERNAL knowledge bases.</p>
    ///   - [`rendering_configuration(RenderingConfiguration)`](crate::client::fluent_builders::CreateKnowledgeBase::rendering_configuration) / [`set_rendering_configuration(Option<RenderingConfiguration>)`](crate::client::fluent_builders::CreateKnowledgeBase::set_rendering_configuration): <p>Information about how to render the content.</p>
    ///   - [`server_side_encryption_configuration(ServerSideEncryptionConfiguration)`](crate::client::fluent_builders::CreateKnowledgeBase::server_side_encryption_configuration) / [`set_server_side_encryption_configuration(Option<ServerSideEncryptionConfiguration>)`](crate::client::fluent_builders::CreateKnowledgeBase::set_server_side_encryption_configuration): <p>The KMS key used for encryption.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateKnowledgeBase::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateKnowledgeBase::set_description): <p>The description.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateKnowledgeBase::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateKnowledgeBase::set_tags): <p>The tags used to organize, track, or control access for this resource.</p>
    /// - On success, responds with [`CreateKnowledgeBaseOutput`](crate::output::CreateKnowledgeBaseOutput) with field(s):
    ///   - [`knowledge_base(Option<KnowledgeBaseData>)`](crate::output::CreateKnowledgeBaseOutput::knowledge_base): <p>The knowledge base.</p>
    /// - On failure, responds with [`SdkError<CreateKnowledgeBaseError>`](crate::error::CreateKnowledgeBaseError)
    pub fn create_knowledge_base(&self) -> crate::client::fluent_builders::CreateKnowledgeBase {
        crate::client::fluent_builders::CreateKnowledgeBase::new(self.handle.clone())
    }
}
