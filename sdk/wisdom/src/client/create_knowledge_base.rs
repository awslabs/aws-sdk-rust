// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateKnowledgeBase`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_name): <p>The name of the knowledge base.</p>
    ///   - [`knowledge_base_type(KnowledgeBaseType)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::knowledge_base_type) / [`set_knowledge_base_type(Option<KnowledgeBaseType>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_knowledge_base_type): <p>The type of knowledge base. Only CUSTOM knowledge bases allow you to upload your own content. EXTERNAL knowledge bases support integrations with third-party systems whose content is synchronized automatically. </p>
    ///   - [`source_configuration(SourceConfiguration)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::source_configuration) / [`set_source_configuration(Option<SourceConfiguration>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_source_configuration): <p>The source of the knowledge base content. Only set this argument for EXTERNAL knowledge bases.</p>
    ///   - [`rendering_configuration(RenderingConfiguration)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::rendering_configuration) / [`set_rendering_configuration(Option<RenderingConfiguration>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_rendering_configuration): <p>Information about how to render the content.</p>
    ///   - [`server_side_encryption_configuration(ServerSideEncryptionConfiguration)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::server_side_encryption_configuration) / [`set_server_side_encryption_configuration(Option<ServerSideEncryptionConfiguration>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_server_side_encryption_configuration): <p>The KMS key used for encryption.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_description): <p>The description.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_tags): <p>The tags used to organize, track, or control access for this resource.</p>
    /// - On success, responds with [`CreateKnowledgeBaseOutput`](crate::operation::create_knowledge_base::CreateKnowledgeBaseOutput) with field(s):
    ///   - [`knowledge_base(Option<KnowledgeBaseData>)`](crate::operation::create_knowledge_base::CreateKnowledgeBaseOutput::knowledge_base): <p>The knowledge base.</p>
    /// - On failure, responds with [`SdkError<CreateKnowledgeBaseError>`](crate::operation::create_knowledge_base::CreateKnowledgeBaseError)
    pub fn create_knowledge_base(
        &self,
    ) -> crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder {
        crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
