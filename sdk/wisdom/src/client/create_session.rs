// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSession`](crate::client::fluent_builders::CreateSession) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateSession::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateSession::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`assistant_id(impl Into<String>)`](crate::client::fluent_builders::CreateSession::assistant_id) / [`set_assistant_id(Option<String>)`](crate::client::fluent_builders::CreateSession::set_assistant_id): <p>The identifier of the Wisdom assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateSession::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateSession::set_name): <p>The name of the session.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateSession::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateSession::set_description): <p>The description.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateSession::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateSession::set_tags): <p>The tags used to organize, track, or control access for this resource.</p>
    /// - On success, responds with [`CreateSessionOutput`](crate::output::CreateSessionOutput) with field(s):
    ///   - [`session(Option<SessionData>)`](crate::output::CreateSessionOutput::session): <p>The session.</p>
    /// - On failure, responds with [`SdkError<CreateSessionError>`](crate::error::CreateSessionError)
    pub fn create_session(&self) -> crate::client::fluent_builders::CreateSession {
        crate::client::fluent_builders::CreateSession::new(self.handle.clone())
    }
}
