// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_assistant_association_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_assistant_association::CreateAssistantAssociationInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.association {
        #[allow(unused_mut)]
        let mut object_2 = object.key("association").start_object();
        crate::protocol_serde::shape_assistant_association_input_data::ser_assistant_association_input_data(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.association_type {
        object.key("associationType").string(var_3.as_str());
    }
    if let Some(var_4) = &input.client_token {
        object.key("clientToken").string(var_4.as_str());
    }
    if let Some(var_5) = &input.tags {
        #[allow(unused_mut)]
        let mut object_6 = object.key("tags").start_object();
        for (key_7, value_8) in var_5 {
            {
                object_6.key(key_7.as_str()).string(value_8.as_str());
            }
        }
        object_6.finish();
    }
    Ok(())
}
