// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetContentSummaryInput {
    /// <p>The identifier of the content. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>
    #[doc(hidden)]
    pub content_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>
    #[doc(hidden)]
    pub knowledge_base_id: std::option::Option<std::string::String>,
}
impl GetContentSummaryInput {
    /// <p>The identifier of the content. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>
    pub fn content_id(&self) -> std::option::Option<&str> {
        self.content_id.as_deref()
    }
    /// <p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>
    pub fn knowledge_base_id(&self) -> std::option::Option<&str> {
        self.knowledge_base_id.as_deref()
    }
}
impl GetContentSummaryInput {
    /// Creates a new builder-style object to manufacture [`GetContentSummaryInput`](crate::operation::get_content_summary::GetContentSummaryInput).
    pub fn builder(
    ) -> crate::operation::get_content_summary::builders::GetContentSummaryInputBuilder {
        crate::operation::get_content_summary::builders::GetContentSummaryInputBuilder::default()
    }
}

/// A builder for [`GetContentSummaryInput`](crate::operation::get_content_summary::GetContentSummaryInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetContentSummaryInputBuilder {
    pub(crate) content_id: std::option::Option<std::string::String>,
    pub(crate) knowledge_base_id: std::option::Option<std::string::String>,
}
impl GetContentSummaryInputBuilder {
    /// <p>The identifier of the content. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>
    pub fn content_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.content_id = Some(input.into());
        self
    }
    /// <p>The identifier of the content. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>
    pub fn set_content_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.content_id = input;
        self
    }
    /// <p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>
    pub fn knowledge_base_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.knowledge_base_id = Some(input.into());
        self
    }
    /// <p>The identifier of the knowledge base. Can be either the ID or the ARN. URLs cannot contain the ARN.</p>
    pub fn set_knowledge_base_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.knowledge_base_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetContentSummaryInput`](crate::operation::get_content_summary::GetContentSummaryInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_content_summary::GetContentSummaryInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_content_summary::GetContentSummaryInput {
                content_id: self.content_id,
                knowledge_base_id: self.knowledge_base_id,
            },
        )
    }
}
