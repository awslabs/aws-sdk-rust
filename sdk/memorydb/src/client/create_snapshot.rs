// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSnapshot`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::cluster_name) / [`set_cluster_name(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_cluster_name): <p>The snapshot is created from this cluster.</p>
    ///   - [`snapshot_name(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::snapshot_name) / [`set_snapshot_name(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_snapshot_name): <p>A name for the snapshot being created.</p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_kms_key_id): <p>The ID of the KMS key used to encrypt the snapshot.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::set_tags): <p>A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.</p>
    /// - On success, responds with [`CreateSnapshotOutput`](crate::operation::create_snapshot::CreateSnapshotOutput) with field(s):
    ///   - [`snapshot(Option<Snapshot>)`](crate::operation::create_snapshot::CreateSnapshotOutput::snapshot): <p>The newly-created snapshot.</p>
    /// - On failure, responds with [`SdkError<CreateSnapshotError>`](crate::operation::create_snapshot::CreateSnapshotError)
    pub fn create_snapshot(
        &self,
    ) -> crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder {
        crate::operation::create_snapshot::builders::CreateSnapshotFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
