// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCluster`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::cluster_name) / [`set_cluster_name(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_cluster_name): <p>The name of the cluster. This value must be unique as it also serves as the cluster identifier.</p>
    ///   - [`node_type(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::node_type) / [`set_node_type(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_node_type): <p>The compute and memory capacity of the nodes in the cluster.</p>
    ///   - [`parameter_group_name(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::parameter_group_name) / [`set_parameter_group_name(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_parameter_group_name): <p>The name of the parameter group associated with the cluster.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_description): <p>An optional description of the cluster.</p>
    ///   - [`num_shards(i32)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::num_shards) / [`set_num_shards(Option<i32>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_num_shards): <p>The number of shards the cluster will contain. The default value is 1. </p>
    ///   - [`num_replicas_per_shard(i32)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::num_replicas_per_shard) / [`set_num_replicas_per_shard(Option<i32>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_num_replicas_per_shard): <p>The number of replicas to apply to each shard. The default value is 1. The maximum is 5. </p>
    ///   - [`subnet_group_name(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::subnet_group_name) / [`set_subnet_group_name(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_subnet_group_name): <p>The name of the subnet group to be used for the cluster.</p>
    ///   - [`security_group_ids(Vec<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec<String>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_security_group_ids): <p>A list of security group names to associate with this cluster.</p>
    ///   - [`maintenance_window(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::maintenance_window) / [`set_maintenance_window(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_maintenance_window): <p>Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.</p>  <p>Valid values for <code>ddd</code> are:</p>  <ul>   <li> <p> <code>sun</code> </p> </li>   <li> <p> <code>mon</code> </p> </li>   <li> <p> <code>tue</code> </p> </li>   <li> <p> <code>wed</code> </p> </li>   <li> <p> <code>thu</code> </p> </li>   <li> <p> <code>fri</code> </p> </li>   <li> <p> <code>sat</code> </p> </li>  </ul>  <p>Example: <code>sun:23:00-mon:01:30</code> </p>
    ///   - [`port(i32)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_port): <p>The port number on which each of the nodes accepts connections.</p>
    ///   - [`sns_topic_arn(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::sns_topic_arn) / [`set_sns_topic_arn(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_sns_topic_arn): <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.</p>
    ///   - [`tls_enabled(bool)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::tls_enabled) / [`set_tls_enabled(Option<bool>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_tls_enabled): <p>A flag to enable in-transit encryption on the cluster.</p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_kms_key_id): <p>The ID of the KMS key used to encrypt the cluster.</p>
    ///   - [`snapshot_arns(Vec<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::snapshot_arns) / [`set_snapshot_arns(Option<Vec<String>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_snapshot_arns): <p>A list of Amazon Resource Names (ARN) that uniquely identify the RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new cluster. The Amazon S3 object name in the ARN cannot contain any commas.</p>
    ///   - [`snapshot_name(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::snapshot_name) / [`set_snapshot_name(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_snapshot_name): <p>The name of a snapshot from which to restore data into the new cluster. The snapshot status changes to restoring while the new cluster is being created.</p>
    ///   - [`snapshot_retention_limit(i32)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::snapshot_retention_limit) / [`set_snapshot_retention_limit(Option<i32>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_snapshot_retention_limit): <p>The number of days for which MemoryDB retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_tags): <p>A list of tags to be added to this resource. Tags are comma-separated key,value pairs (e.g. Key=myKey, Value=myKeyValue. You can include multiple tags as shown following: Key=myKey, Value=myKeyValue Key=mySecondKey, Value=mySecondKeyValue.</p>
    ///   - [`snapshot_window(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::snapshot_window) / [`set_snapshot_window(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_snapshot_window): <p>The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard.</p>  <p> Example: 05:00-09:00</p>  <p> If you do not specify this parameter, MemoryDB automatically chooses an appropriate time range.</p>
    ///   - [`acl_name(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::acl_name) / [`set_acl_name(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_acl_name): <p>The name of the Access Control List to associate with the cluster.</p>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_engine_version): <p>The version number of the Redis engine to be used for the cluster.</p>
    ///   - [`auto_minor_version_upgrade(bool)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::auto_minor_version_upgrade) / [`set_auto_minor_version_upgrade(Option<bool>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_auto_minor_version_upgrade): <p>When set to true, the cluster will automatically receive minor engine version upgrades after launch.</p>
    ///   - [`data_tiering(bool)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::data_tiering) / [`set_data_tiering(Option<bool>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_data_tiering): <p>Enables data tiering. Data tiering is only supported for clusters using the r6gd node type. This parameter must be set when using r6gd nodes. For more information, see <a href="https://docs.aws.amazon.com/memorydb/latest/devguide/data-tiering.html">Data tiering</a>.</p>
    /// - On success, responds with [`CreateClusterOutput`](crate::operation::create_cluster::CreateClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::operation::create_cluster::CreateClusterOutput::cluster): <p>The newly-created cluster.</p>
    /// - On failure, responds with [`SdkError<CreateClusterError>`](crate::operation::create_cluster::CreateClusterError)
    pub fn create_cluster(
        &self,
    ) -> crate::operation::create_cluster::builders::CreateClusterFluentBuilder {
        crate::operation::create_cluster::builders::CreateClusterFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
