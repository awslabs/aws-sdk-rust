// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchUpdateClusterInput {
    /// <p>The cluster names to apply the updates.</p>
    #[doc(hidden)]
    pub cluster_names: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The unique ID of the service update</p>
    #[doc(hidden)]
    pub service_update: std::option::Option<crate::types::ServiceUpdateRequest>,
}
impl BatchUpdateClusterInput {
    /// <p>The cluster names to apply the updates.</p>
    pub fn cluster_names(&self) -> std::option::Option<&[std::string::String]> {
        self.cluster_names.as_deref()
    }
    /// <p>The unique ID of the service update</p>
    pub fn service_update(&self) -> std::option::Option<&crate::types::ServiceUpdateRequest> {
        self.service_update.as_ref()
    }
}
impl BatchUpdateClusterInput {
    /// Creates a new builder-style object to manufacture [`BatchUpdateClusterInput`](crate::operation::batch_update_cluster::BatchUpdateClusterInput).
    pub fn builder(
    ) -> crate::operation::batch_update_cluster::builders::BatchUpdateClusterInputBuilder {
        crate::operation::batch_update_cluster::builders::BatchUpdateClusterInputBuilder::default()
    }
}

/// A builder for [`BatchUpdateClusterInput`](crate::operation::batch_update_cluster::BatchUpdateClusterInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchUpdateClusterInputBuilder {
    pub(crate) cluster_names: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) service_update: std::option::Option<crate::types::ServiceUpdateRequest>,
}
impl BatchUpdateClusterInputBuilder {
    /// Appends an item to `cluster_names`.
    ///
    /// To override the contents of this collection use [`set_cluster_names`](Self::set_cluster_names).
    ///
    /// <p>The cluster names to apply the updates.</p>
    pub fn cluster_names(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.cluster_names.unwrap_or_default();
        v.push(input.into());
        self.cluster_names = Some(v);
        self
    }
    /// <p>The cluster names to apply the updates.</p>
    pub fn set_cluster_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.cluster_names = input;
        self
    }
    /// <p>The unique ID of the service update</p>
    pub fn service_update(mut self, input: crate::types::ServiceUpdateRequest) -> Self {
        self.service_update = Some(input);
        self
    }
    /// <p>The unique ID of the service update</p>
    pub fn set_service_update(
        mut self,
        input: std::option::Option<crate::types::ServiceUpdateRequest>,
    ) -> Self {
        self.service_update = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchUpdateClusterInput`](crate::operation::batch_update_cluster::BatchUpdateClusterInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_update_cluster::BatchUpdateClusterInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::batch_update_cluster::BatchUpdateClusterInput {
                cluster_names: self.cluster_names,
                service_update: self.service_update,
            },
        )
    }
}
