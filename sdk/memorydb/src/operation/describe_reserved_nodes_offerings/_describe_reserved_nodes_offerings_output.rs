// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeReservedNodesOfferingsOutput {
    /// <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>Lists available reserved node offerings.</p>
    #[doc(hidden)]
    pub reserved_nodes_offerings:
        std::option::Option<std::vec::Vec<crate::types::ReservedNodesOffering>>,
    _request_id: Option<String>,
}
impl DescribeReservedNodesOfferingsOutput {
    /// <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>Lists available reserved node offerings.</p>
    pub fn reserved_nodes_offerings(
        &self,
    ) -> std::option::Option<&[crate::types::ReservedNodesOffering]> {
        self.reserved_nodes_offerings.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeReservedNodesOfferingsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeReservedNodesOfferingsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeReservedNodesOfferingsOutput`](crate::operation::describe_reserved_nodes_offerings::DescribeReservedNodesOfferingsOutput).
    pub fn builder() -> crate::operation::describe_reserved_nodes_offerings::builders::DescribeReservedNodesOfferingsOutputBuilder{
        crate::operation::describe_reserved_nodes_offerings::builders::DescribeReservedNodesOfferingsOutputBuilder::default()
    }
}

/// A builder for [`DescribeReservedNodesOfferingsOutput`](crate::operation::describe_reserved_nodes_offerings::DescribeReservedNodesOfferingsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeReservedNodesOfferingsOutputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) reserved_nodes_offerings:
        std::option::Option<std::vec::Vec<crate::types::ReservedNodesOffering>>,
    _request_id: Option<String>,
}
impl DescribeReservedNodesOfferingsOutputBuilder {
    /// <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Appends an item to `reserved_nodes_offerings`.
    ///
    /// To override the contents of this collection use [`set_reserved_nodes_offerings`](Self::set_reserved_nodes_offerings).
    ///
    /// <p>Lists available reserved node offerings.</p>
    pub fn reserved_nodes_offerings(mut self, input: crate::types::ReservedNodesOffering) -> Self {
        let mut v = self.reserved_nodes_offerings.unwrap_or_default();
        v.push(input);
        self.reserved_nodes_offerings = Some(v);
        self
    }
    /// <p>Lists available reserved node offerings.</p>
    pub fn set_reserved_nodes_offerings(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ReservedNodesOffering>>,
    ) -> Self {
        self.reserved_nodes_offerings = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeReservedNodesOfferingsOutput`](crate::operation::describe_reserved_nodes_offerings::DescribeReservedNodesOfferingsOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_reserved_nodes_offerings::DescribeReservedNodesOfferingsOutput
    {
        crate::operation::describe_reserved_nodes_offerings::DescribeReservedNodesOfferingsOutput {
            next_token: self.next_token,
            reserved_nodes_offerings: self.reserved_nodes_offerings,
            _request_id: self._request_id,
        }
    }
}
