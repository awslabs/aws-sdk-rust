// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FailoverShardInput {
    /// <p>The cluster being failed over</p>
    #[doc(hidden)]
    pub cluster_name: std::option::Option<std::string::String>,
    /// <p>The name of the shard</p>
    #[doc(hidden)]
    pub shard_name: std::option::Option<std::string::String>,
}
impl FailoverShardInput {
    /// <p>The cluster being failed over</p>
    pub fn cluster_name(&self) -> std::option::Option<&str> {
        self.cluster_name.as_deref()
    }
    /// <p>The name of the shard</p>
    pub fn shard_name(&self) -> std::option::Option<&str> {
        self.shard_name.as_deref()
    }
}
impl FailoverShardInput {
    /// Creates a new builder-style object to manufacture [`FailoverShardInput`](crate::operation::failover_shard::FailoverShardInput).
    pub fn builder() -> crate::operation::failover_shard::builders::FailoverShardInputBuilder {
        crate::operation::failover_shard::builders::FailoverShardInputBuilder::default()
    }
}

/// A builder for [`FailoverShardInput`](crate::operation::failover_shard::FailoverShardInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FailoverShardInputBuilder {
    pub(crate) cluster_name: std::option::Option<std::string::String>,
    pub(crate) shard_name: std::option::Option<std::string::String>,
}
impl FailoverShardInputBuilder {
    /// <p>The cluster being failed over</p>
    pub fn cluster_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster_name = Some(input.into());
        self
    }
    /// <p>The cluster being failed over</p>
    pub fn set_cluster_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster_name = input;
        self
    }
    /// <p>The name of the shard</p>
    pub fn shard_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.shard_name = Some(input.into());
        self
    }
    /// <p>The name of the shard</p>
    pub fn set_shard_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.shard_name = input;
        self
    }
    /// Consumes the builder and constructs a [`FailoverShardInput`](crate::operation::failover_shard::FailoverShardInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::failover_shard::FailoverShardInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::failover_shard::FailoverShardInput {
            cluster_name: self.cluster_name,
            shard_name: self.shard_name,
        })
    }
}
