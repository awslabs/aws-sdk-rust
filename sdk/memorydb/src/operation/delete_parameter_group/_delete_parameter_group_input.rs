// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteParameterGroupInput {
    /// <p>The name of the parameter group to delete.</p>
    #[doc(hidden)]
    pub parameter_group_name: std::option::Option<std::string::String>,
}
impl DeleteParameterGroupInput {
    /// <p>The name of the parameter group to delete.</p>
    pub fn parameter_group_name(&self) -> std::option::Option<&str> {
        self.parameter_group_name.as_deref()
    }
}
impl DeleteParameterGroupInput {
    /// Creates a new builder-style object to manufacture [`DeleteParameterGroupInput`](crate::operation::delete_parameter_group::DeleteParameterGroupInput).
    pub fn builder(
    ) -> crate::operation::delete_parameter_group::builders::DeleteParameterGroupInputBuilder {
        crate::operation::delete_parameter_group::builders::DeleteParameterGroupInputBuilder::default()
    }
}

/// A builder for [`DeleteParameterGroupInput`](crate::operation::delete_parameter_group::DeleteParameterGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteParameterGroupInputBuilder {
    pub(crate) parameter_group_name: std::option::Option<std::string::String>,
}
impl DeleteParameterGroupInputBuilder {
    /// <p>The name of the parameter group to delete.</p>
    pub fn parameter_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_group_name = Some(input.into());
        self
    }
    /// <p>The name of the parameter group to delete.</p>
    pub fn set_parameter_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.parameter_group_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteParameterGroupInput`](crate::operation::delete_parameter_group::DeleteParameterGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_parameter_group::DeleteParameterGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_parameter_group::DeleteParameterGroupInput {
                parameter_group_name: self.parameter_group_name,
            },
        )
    }
}
