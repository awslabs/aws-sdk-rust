// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a copy of an entire cluster as of the time when the snapshot was taken.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Snapshot {
    /// <p>The name of the snapshot</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The status of the snapshot. Valid values: creating | available | restoring | copying | deleting.</p>
    #[doc(hidden)]
    pub status: std::option::Option<std::string::String>,
    /// <p>Indicates whether the snapshot is from an automatic backup (automated) or was created manually (manual).</p>
    #[doc(hidden)]
    pub source: std::option::Option<std::string::String>,
    /// <p>The ID of the KMS key used to encrypt the snapshot.</p>
    #[doc(hidden)]
    pub kms_key_id: std::option::Option<std::string::String>,
    /// <p>The ARN (Amazon Resource Name) of the snapshot.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The configuration of the cluster from which the snapshot was taken</p>
    #[doc(hidden)]
    pub cluster_configuration: std::option::Option<crate::types::ClusterConfiguration>,
    /// <p>Enables data tiering. Data tiering is only supported for clusters using the r6gd node type. This parameter must be set when using r6gd nodes. For more information, see <a href="https://docs.aws.amazon.com/memorydb/latest/devguide/data-tiering.html">Data tiering</a>.</p>
    #[doc(hidden)]
    pub data_tiering: std::option::Option<crate::types::DataTieringStatus>,
}
impl Snapshot {
    /// <p>The name of the snapshot</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The status of the snapshot. Valid values: creating | available | restoring | copying | deleting.</p>
    pub fn status(&self) -> std::option::Option<&str> {
        self.status.as_deref()
    }
    /// <p>Indicates whether the snapshot is from an automatic backup (automated) or was created manually (manual).</p>
    pub fn source(&self) -> std::option::Option<&str> {
        self.source.as_deref()
    }
    /// <p>The ID of the KMS key used to encrypt the snapshot.</p>
    pub fn kms_key_id(&self) -> std::option::Option<&str> {
        self.kms_key_id.as_deref()
    }
    /// <p>The ARN (Amazon Resource Name) of the snapshot.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The configuration of the cluster from which the snapshot was taken</p>
    pub fn cluster_configuration(
        &self,
    ) -> std::option::Option<&crate::types::ClusterConfiguration> {
        self.cluster_configuration.as_ref()
    }
    /// <p>Enables data tiering. Data tiering is only supported for clusters using the r6gd node type. This parameter must be set when using r6gd nodes. For more information, see <a href="https://docs.aws.amazon.com/memorydb/latest/devguide/data-tiering.html">Data tiering</a>.</p>
    pub fn data_tiering(&self) -> std::option::Option<&crate::types::DataTieringStatus> {
        self.data_tiering.as_ref()
    }
}
impl Snapshot {
    /// Creates a new builder-style object to manufacture [`Snapshot`](crate::types::Snapshot).
    pub fn builder() -> crate::types::builders::SnapshotBuilder {
        crate::types::builders::SnapshotBuilder::default()
    }
}

/// A builder for [`Snapshot`](crate::types::Snapshot).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SnapshotBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<std::string::String>,
    pub(crate) source: std::option::Option<std::string::String>,
    pub(crate) kms_key_id: std::option::Option<std::string::String>,
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) cluster_configuration: std::option::Option<crate::types::ClusterConfiguration>,
    pub(crate) data_tiering: std::option::Option<crate::types::DataTieringStatus>,
}
impl SnapshotBuilder {
    /// <p>The name of the snapshot</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the snapshot</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The status of the snapshot. Valid values: creating | available | restoring | copying | deleting.</p>
    pub fn status(mut self, input: impl Into<std::string::String>) -> Self {
        self.status = Some(input.into());
        self
    }
    /// <p>The status of the snapshot. Valid values: creating | available | restoring | copying | deleting.</p>
    pub fn set_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>Indicates whether the snapshot is from an automatic backup (automated) or was created manually (manual).</p>
    pub fn source(mut self, input: impl Into<std::string::String>) -> Self {
        self.source = Some(input.into());
        self
    }
    /// <p>Indicates whether the snapshot is from an automatic backup (automated) or was created manually (manual).</p>
    pub fn set_source(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source = input;
        self
    }
    /// <p>The ID of the KMS key used to encrypt the snapshot.</p>
    pub fn kms_key_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.kms_key_id = Some(input.into());
        self
    }
    /// <p>The ID of the KMS key used to encrypt the snapshot.</p>
    pub fn set_kms_key_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.kms_key_id = input;
        self
    }
    /// <p>The ARN (Amazon Resource Name) of the snapshot.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The ARN (Amazon Resource Name) of the snapshot.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The configuration of the cluster from which the snapshot was taken</p>
    pub fn cluster_configuration(mut self, input: crate::types::ClusterConfiguration) -> Self {
        self.cluster_configuration = Some(input);
        self
    }
    /// <p>The configuration of the cluster from which the snapshot was taken</p>
    pub fn set_cluster_configuration(
        mut self,
        input: std::option::Option<crate::types::ClusterConfiguration>,
    ) -> Self {
        self.cluster_configuration = input;
        self
    }
    /// <p>Enables data tiering. Data tiering is only supported for clusters using the r6gd node type. This parameter must be set when using r6gd nodes. For more information, see <a href="https://docs.aws.amazon.com/memorydb/latest/devguide/data-tiering.html">Data tiering</a>.</p>
    pub fn data_tiering(mut self, input: crate::types::DataTieringStatus) -> Self {
        self.data_tiering = Some(input);
        self
    }
    /// <p>Enables data tiering. Data tiering is only supported for clusters using the r6gd node type. This parameter must be set when using r6gd nodes. For more information, see <a href="https://docs.aws.amazon.com/memorydb/latest/devguide/data-tiering.html">Data tiering</a>.</p>
    pub fn set_data_tiering(
        mut self,
        input: std::option::Option<crate::types::DataTieringStatus>,
    ) -> Self {
        self.data_tiering = input;
        self
    }
    /// Consumes the builder and constructs a [`Snapshot`](crate::types::Snapshot).
    pub fn build(self) -> crate::types::Snapshot {
        crate::types::Snapshot {
            name: self.name,
            status: self.status,
            source: self.source,
            kms_key_id: self.kms_key_id,
            arn: self.arn,
            cluster_configuration: self.cluster_configuration,
            data_tiering: self.data_tiering,
        }
    }
}
