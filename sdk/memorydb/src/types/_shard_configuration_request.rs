// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A request to configure the sharding properties of a cluster</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ShardConfigurationRequest {
    /// <p>The number of shards in the cluster</p>
    #[doc(hidden)]
    pub shard_count: i32,
}
impl ShardConfigurationRequest {
    /// <p>The number of shards in the cluster</p>
    pub fn shard_count(&self) -> i32 {
        self.shard_count
    }
}
impl ShardConfigurationRequest {
    /// Creates a new builder-style object to manufacture [`ShardConfigurationRequest`](crate::types::ShardConfigurationRequest).
    pub fn builder() -> crate::types::builders::ShardConfigurationRequestBuilder {
        crate::types::builders::ShardConfigurationRequestBuilder::default()
    }
}

/// A builder for [`ShardConfigurationRequest`](crate::types::ShardConfigurationRequest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ShardConfigurationRequestBuilder {
    pub(crate) shard_count: std::option::Option<i32>,
}
impl ShardConfigurationRequestBuilder {
    /// <p>The number of shards in the cluster</p>
    pub fn shard_count(mut self, input: i32) -> Self {
        self.shard_count = Some(input);
        self
    }
    /// <p>The number of shards in the cluster</p>
    pub fn set_shard_count(mut self, input: std::option::Option<i32>) -> Self {
        self.shard_count = input;
        self
    }
    /// Consumes the builder and constructs a [`ShardConfigurationRequest`](crate::types::ShardConfigurationRequest).
    pub fn build(self) -> crate::types::ShardConfigurationRequest {
        crate::types::ShardConfigurationRequest {
            shard_count: self.shard_count.unwrap_or_default(),
        }
    }
}
