// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the contents of a message that's sent through a custom channel to recipients of a campaign.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CampaignCustomMessage {
    /// <p>The raw, JSON-formatted string to use as the payload for the message. The maximum size is 5 KB.</p>
    #[doc(hidden)]
    pub data: std::option::Option<std::string::String>,
}
impl CampaignCustomMessage {
    /// <p>The raw, JSON-formatted string to use as the payload for the message. The maximum size is 5 KB.</p>
    pub fn data(&self) -> std::option::Option<&str> {
        self.data.as_deref()
    }
}
impl CampaignCustomMessage {
    /// Creates a new builder-style object to manufacture [`CampaignCustomMessage`](crate::types::CampaignCustomMessage).
    pub fn builder() -> crate::types::builders::CampaignCustomMessageBuilder {
        crate::types::builders::CampaignCustomMessageBuilder::default()
    }
}

/// A builder for [`CampaignCustomMessage`](crate::types::CampaignCustomMessage).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CampaignCustomMessageBuilder {
    pub(crate) data: std::option::Option<std::string::String>,
}
impl CampaignCustomMessageBuilder {
    /// <p>The raw, JSON-formatted string to use as the payload for the message. The maximum size is 5 KB.</p>
    pub fn data(mut self, input: impl Into<std::string::String>) -> Self {
        self.data = Some(input.into());
        self
    }
    /// <p>The raw, JSON-formatted string to use as the payload for the message. The maximum size is 5 KB.</p>
    pub fn set_data(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.data = input;
        self
    }
    /// Consumes the builder and constructs a [`CampaignCustomMessage`](crate::types::CampaignCustomMessage).
    pub fn build(self) -> crate::types::CampaignCustomMessage {
        crate::types::CampaignCustomMessage { data: self.data }
    }
}
