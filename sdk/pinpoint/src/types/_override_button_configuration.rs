// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Override button configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OverrideButtonConfiguration {
    /// <p>Action triggered by the button.</p>
    pub button_action: ::std::option::Option<crate::types::ButtonAction>,
    /// <p>Button destination.</p>
    pub link: ::std::option::Option<::std::string::String>,
}
impl OverrideButtonConfiguration {
    /// <p>Action triggered by the button.</p>
    pub fn button_action(&self) -> ::std::option::Option<&crate::types::ButtonAction> {
        self.button_action.as_ref()
    }
    /// <p>Button destination.</p>
    pub fn link(&self) -> ::std::option::Option<&str> {
        self.link.as_deref()
    }
}
impl OverrideButtonConfiguration {
    /// Creates a new builder-style object to manufacture [`OverrideButtonConfiguration`](crate::types::OverrideButtonConfiguration).
    pub fn builder() -> crate::types::builders::OverrideButtonConfigurationBuilder {
        crate::types::builders::OverrideButtonConfigurationBuilder::default()
    }
}

/// A builder for [`OverrideButtonConfiguration`](crate::types::OverrideButtonConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OverrideButtonConfigurationBuilder {
    pub(crate) button_action: ::std::option::Option<crate::types::ButtonAction>,
    pub(crate) link: ::std::option::Option<::std::string::String>,
}
impl OverrideButtonConfigurationBuilder {
    /// <p>Action triggered by the button.</p>
    /// This field is required.
    pub fn button_action(mut self, input: crate::types::ButtonAction) -> Self {
        self.button_action = ::std::option::Option::Some(input);
        self
    }
    /// <p>Action triggered by the button.</p>
    pub fn set_button_action(mut self, input: ::std::option::Option<crate::types::ButtonAction>) -> Self {
        self.button_action = input;
        self
    }
    /// <p>Action triggered by the button.</p>
    pub fn get_button_action(&self) -> &::std::option::Option<crate::types::ButtonAction> {
        &self.button_action
    }
    /// <p>Button destination.</p>
    pub fn link(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.link = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Button destination.</p>
    pub fn set_link(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.link = input;
        self
    }
    /// <p>Button destination.</p>
    pub fn get_link(&self) -> &::std::option::Option<::std::string::String> {
        &self.link
    }
    /// Consumes the builder and constructs a [`OverrideButtonConfiguration`](crate::types::OverrideButtonConfiguration).
    pub fn build(self) -> crate::types::OverrideButtonConfiguration {
        crate::types::OverrideButtonConfiguration {
            button_action: self.button_action,
            link: self.link,
        }
    }
}
