// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies a batch of endpoints to create or update and the settings and attributes to set or change for each endpoint.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EndpointBatchRequest {
    /// <p>An array that defines the endpoints to create or update and, for each endpoint, the property values to set or change. An array can contain a maximum of 100 items.</p>
    #[doc(hidden)]
    pub item: std::option::Option<std::vec::Vec<crate::types::EndpointBatchItem>>,
}
impl EndpointBatchRequest {
    /// <p>An array that defines the endpoints to create or update and, for each endpoint, the property values to set or change. An array can contain a maximum of 100 items.</p>
    pub fn item(&self) -> std::option::Option<&[crate::types::EndpointBatchItem]> {
        self.item.as_deref()
    }
}
impl EndpointBatchRequest {
    /// Creates a new builder-style object to manufacture [`EndpointBatchRequest`](crate::types::EndpointBatchRequest).
    pub fn builder() -> crate::types::builders::EndpointBatchRequestBuilder {
        crate::types::builders::EndpointBatchRequestBuilder::default()
    }
}

/// A builder for [`EndpointBatchRequest`](crate::types::EndpointBatchRequest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EndpointBatchRequestBuilder {
    pub(crate) item: std::option::Option<std::vec::Vec<crate::types::EndpointBatchItem>>,
}
impl EndpointBatchRequestBuilder {
    /// Appends an item to `item`.
    ///
    /// To override the contents of this collection use [`set_item`](Self::set_item).
    ///
    /// <p>An array that defines the endpoints to create or update and, for each endpoint, the property values to set or change. An array can contain a maximum of 100 items.</p>
    pub fn item(mut self, input: crate::types::EndpointBatchItem) -> Self {
        let mut v = self.item.unwrap_or_default();
        v.push(input);
        self.item = Some(v);
        self
    }
    /// <p>An array that defines the endpoints to create or update and, for each endpoint, the property values to set or change. An array can contain a maximum of 100 items.</p>
    pub fn set_item(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::EndpointBatchItem>>,
    ) -> Self {
        self.item = input;
        self
    }
    /// Consumes the builder and constructs a [`EndpointBatchRequest`](crate::types::EndpointBatchRequest).
    pub fn build(self) -> crate::types::EndpointBatchRequest {
        crate::types::EndpointBatchRequest { item: self.item }
    }
}
