// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Text config for Message Body.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InAppMessageBodyConfig {
    /// <p>The alignment of the text. Valid values: LEFT, CENTER, RIGHT.</p>
    #[doc(hidden)]
    pub alignment: std::option::Option<crate::types::Alignment>,
    /// <p>Message Body.</p>
    #[doc(hidden)]
    pub body: std::option::Option<std::string::String>,
    /// <p>The text color.</p>
    #[doc(hidden)]
    pub text_color: std::option::Option<std::string::String>,
}
impl InAppMessageBodyConfig {
    /// <p>The alignment of the text. Valid values: LEFT, CENTER, RIGHT.</p>
    pub fn alignment(&self) -> std::option::Option<&crate::types::Alignment> {
        self.alignment.as_ref()
    }
    /// <p>Message Body.</p>
    pub fn body(&self) -> std::option::Option<&str> {
        self.body.as_deref()
    }
    /// <p>The text color.</p>
    pub fn text_color(&self) -> std::option::Option<&str> {
        self.text_color.as_deref()
    }
}
impl InAppMessageBodyConfig {
    /// Creates a new builder-style object to manufacture [`InAppMessageBodyConfig`](crate::types::InAppMessageBodyConfig).
    pub fn builder() -> crate::types::builders::InAppMessageBodyConfigBuilder {
        crate::types::builders::InAppMessageBodyConfigBuilder::default()
    }
}

/// A builder for [`InAppMessageBodyConfig`](crate::types::InAppMessageBodyConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InAppMessageBodyConfigBuilder {
    pub(crate) alignment: std::option::Option<crate::types::Alignment>,
    pub(crate) body: std::option::Option<std::string::String>,
    pub(crate) text_color: std::option::Option<std::string::String>,
}
impl InAppMessageBodyConfigBuilder {
    /// <p>The alignment of the text. Valid values: LEFT, CENTER, RIGHT.</p>
    pub fn alignment(mut self, input: crate::types::Alignment) -> Self {
        self.alignment = Some(input);
        self
    }
    /// <p>The alignment of the text. Valid values: LEFT, CENTER, RIGHT.</p>
    pub fn set_alignment(mut self, input: std::option::Option<crate::types::Alignment>) -> Self {
        self.alignment = input;
        self
    }
    /// <p>Message Body.</p>
    pub fn body(mut self, input: impl Into<std::string::String>) -> Self {
        self.body = Some(input.into());
        self
    }
    /// <p>Message Body.</p>
    pub fn set_body(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.body = input;
        self
    }
    /// <p>The text color.</p>
    pub fn text_color(mut self, input: impl Into<std::string::String>) -> Self {
        self.text_color = Some(input.into());
        self
    }
    /// <p>The text color.</p>
    pub fn set_text_color(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.text_color = input;
        self
    }
    /// Consumes the builder and constructs a [`InAppMessageBodyConfig`](crate::types::InAppMessageBodyConfig).
    pub fn build(self) -> crate::types::InAppMessageBodyConfig {
        crate::types::InAppMessageBodyConfig {
            alignment: self.alignment,
            body: self.body,
            text_color: self.text_color,
        }
    }
}
