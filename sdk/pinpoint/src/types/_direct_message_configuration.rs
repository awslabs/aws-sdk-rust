// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the settings and content for the default message and any default messages that you tailored for specific channels.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DirectMessageConfiguration {
    /// <p>The default push notification message for the ADM (Amazon Device Messaging) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    #[doc(hidden)]
    pub adm_message: std::option::Option<crate::types::AdmMessage>,
    /// <p>The default push notification message for the APNs (Apple Push Notification service) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    #[doc(hidden)]
    pub apns_message: std::option::Option<crate::types::ApnsMessage>,
    /// <p>The default push notification message for the Baidu (Baidu Cloud Push) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    #[doc(hidden)]
    pub baidu_message: std::option::Option<crate::types::BaiduMessage>,
    /// <p>The default message for all channels.</p>
    #[doc(hidden)]
    pub default_message: std::option::Option<crate::types::DefaultMessage>,
    /// <p>The default push notification message for all push notification channels.</p>
    #[doc(hidden)]
    pub default_push_notification_message:
        std::option::Option<crate::types::DefaultPushNotificationMessage>,
    /// <p>The default message for the email channel. This message overrides the default message (DefaultMessage).</p>
    #[doc(hidden)]
    pub email_message: std::option::Option<crate::types::EmailMessage>,
    /// <p>The default push notification message for the GCM channel, which is used to send notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    #[doc(hidden)]
    pub gcm_message: std::option::Option<crate::types::GcmMessage>,
    /// <p>The default message for the SMS channel. This message overrides the default message (DefaultMessage).</p>
    #[doc(hidden)]
    pub sms_message: std::option::Option<crate::types::SmsMessage>,
    /// <p>The default message for the voice channel. This message overrides the default message (DefaultMessage).</p>
    #[doc(hidden)]
    pub voice_message: std::option::Option<crate::types::VoiceMessage>,
}
impl DirectMessageConfiguration {
    /// <p>The default push notification message for the ADM (Amazon Device Messaging) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn adm_message(&self) -> std::option::Option<&crate::types::AdmMessage> {
        self.adm_message.as_ref()
    }
    /// <p>The default push notification message for the APNs (Apple Push Notification service) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn apns_message(&self) -> std::option::Option<&crate::types::ApnsMessage> {
        self.apns_message.as_ref()
    }
    /// <p>The default push notification message for the Baidu (Baidu Cloud Push) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn baidu_message(&self) -> std::option::Option<&crate::types::BaiduMessage> {
        self.baidu_message.as_ref()
    }
    /// <p>The default message for all channels.</p>
    pub fn default_message(&self) -> std::option::Option<&crate::types::DefaultMessage> {
        self.default_message.as_ref()
    }
    /// <p>The default push notification message for all push notification channels.</p>
    pub fn default_push_notification_message(
        &self,
    ) -> std::option::Option<&crate::types::DefaultPushNotificationMessage> {
        self.default_push_notification_message.as_ref()
    }
    /// <p>The default message for the email channel. This message overrides the default message (DefaultMessage).</p>
    pub fn email_message(&self) -> std::option::Option<&crate::types::EmailMessage> {
        self.email_message.as_ref()
    }
    /// <p>The default push notification message for the GCM channel, which is used to send notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn gcm_message(&self) -> std::option::Option<&crate::types::GcmMessage> {
        self.gcm_message.as_ref()
    }
    /// <p>The default message for the SMS channel. This message overrides the default message (DefaultMessage).</p>
    pub fn sms_message(&self) -> std::option::Option<&crate::types::SmsMessage> {
        self.sms_message.as_ref()
    }
    /// <p>The default message for the voice channel. This message overrides the default message (DefaultMessage).</p>
    pub fn voice_message(&self) -> std::option::Option<&crate::types::VoiceMessage> {
        self.voice_message.as_ref()
    }
}
impl DirectMessageConfiguration {
    /// Creates a new builder-style object to manufacture [`DirectMessageConfiguration`](crate::types::DirectMessageConfiguration).
    pub fn builder() -> crate::types::builders::DirectMessageConfigurationBuilder {
        crate::types::builders::DirectMessageConfigurationBuilder::default()
    }
}

/// A builder for [`DirectMessageConfiguration`](crate::types::DirectMessageConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DirectMessageConfigurationBuilder {
    pub(crate) adm_message: std::option::Option<crate::types::AdmMessage>,
    pub(crate) apns_message: std::option::Option<crate::types::ApnsMessage>,
    pub(crate) baidu_message: std::option::Option<crate::types::BaiduMessage>,
    pub(crate) default_message: std::option::Option<crate::types::DefaultMessage>,
    pub(crate) default_push_notification_message:
        std::option::Option<crate::types::DefaultPushNotificationMessage>,
    pub(crate) email_message: std::option::Option<crate::types::EmailMessage>,
    pub(crate) gcm_message: std::option::Option<crate::types::GcmMessage>,
    pub(crate) sms_message: std::option::Option<crate::types::SmsMessage>,
    pub(crate) voice_message: std::option::Option<crate::types::VoiceMessage>,
}
impl DirectMessageConfigurationBuilder {
    /// <p>The default push notification message for the ADM (Amazon Device Messaging) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn adm_message(mut self, input: crate::types::AdmMessage) -> Self {
        self.adm_message = Some(input);
        self
    }
    /// <p>The default push notification message for the ADM (Amazon Device Messaging) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn set_adm_message(mut self, input: std::option::Option<crate::types::AdmMessage>) -> Self {
        self.adm_message = input;
        self
    }
    /// <p>The default push notification message for the APNs (Apple Push Notification service) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn apns_message(mut self, input: crate::types::ApnsMessage) -> Self {
        self.apns_message = Some(input);
        self
    }
    /// <p>The default push notification message for the APNs (Apple Push Notification service) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn set_apns_message(
        mut self,
        input: std::option::Option<crate::types::ApnsMessage>,
    ) -> Self {
        self.apns_message = input;
        self
    }
    /// <p>The default push notification message for the Baidu (Baidu Cloud Push) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn baidu_message(mut self, input: crate::types::BaiduMessage) -> Self {
        self.baidu_message = Some(input);
        self
    }
    /// <p>The default push notification message for the Baidu (Baidu Cloud Push) channel. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn set_baidu_message(
        mut self,
        input: std::option::Option<crate::types::BaiduMessage>,
    ) -> Self {
        self.baidu_message = input;
        self
    }
    /// <p>The default message for all channels.</p>
    pub fn default_message(mut self, input: crate::types::DefaultMessage) -> Self {
        self.default_message = Some(input);
        self
    }
    /// <p>The default message for all channels.</p>
    pub fn set_default_message(
        mut self,
        input: std::option::Option<crate::types::DefaultMessage>,
    ) -> Self {
        self.default_message = input;
        self
    }
    /// <p>The default push notification message for all push notification channels.</p>
    pub fn default_push_notification_message(
        mut self,
        input: crate::types::DefaultPushNotificationMessage,
    ) -> Self {
        self.default_push_notification_message = Some(input);
        self
    }
    /// <p>The default push notification message for all push notification channels.</p>
    pub fn set_default_push_notification_message(
        mut self,
        input: std::option::Option<crate::types::DefaultPushNotificationMessage>,
    ) -> Self {
        self.default_push_notification_message = input;
        self
    }
    /// <p>The default message for the email channel. This message overrides the default message (DefaultMessage).</p>
    pub fn email_message(mut self, input: crate::types::EmailMessage) -> Self {
        self.email_message = Some(input);
        self
    }
    /// <p>The default message for the email channel. This message overrides the default message (DefaultMessage).</p>
    pub fn set_email_message(
        mut self,
        input: std::option::Option<crate::types::EmailMessage>,
    ) -> Self {
        self.email_message = input;
        self
    }
    /// <p>The default push notification message for the GCM channel, which is used to send notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn gcm_message(mut self, input: crate::types::GcmMessage) -> Self {
        self.gcm_message = Some(input);
        self
    }
    /// <p>The default push notification message for the GCM channel, which is used to send notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service. This message overrides the default push notification message (DefaultPushNotificationMessage).</p>
    pub fn set_gcm_message(mut self, input: std::option::Option<crate::types::GcmMessage>) -> Self {
        self.gcm_message = input;
        self
    }
    /// <p>The default message for the SMS channel. This message overrides the default message (DefaultMessage).</p>
    pub fn sms_message(mut self, input: crate::types::SmsMessage) -> Self {
        self.sms_message = Some(input);
        self
    }
    /// <p>The default message for the SMS channel. This message overrides the default message (DefaultMessage).</p>
    pub fn set_sms_message(mut self, input: std::option::Option<crate::types::SmsMessage>) -> Self {
        self.sms_message = input;
        self
    }
    /// <p>The default message for the voice channel. This message overrides the default message (DefaultMessage).</p>
    pub fn voice_message(mut self, input: crate::types::VoiceMessage) -> Self {
        self.voice_message = Some(input);
        self
    }
    /// <p>The default message for the voice channel. This message overrides the default message (DefaultMessage).</p>
    pub fn set_voice_message(
        mut self,
        input: std::option::Option<crate::types::VoiceMessage>,
    ) -> Self {
        self.voice_message = input;
        self
    }
    /// Consumes the builder and constructs a [`DirectMessageConfiguration`](crate::types::DirectMessageConfiguration).
    pub fn build(self) -> crate::types::DirectMessageConfiguration {
        crate::types::DirectMessageConfiguration {
            adm_message: self.adm_message,
            apns_message: self.apns_message,
            baidu_message: self.baidu_message,
            default_message: self.default_message,
            default_push_notification_message: self.default_push_notification_message,
            email_message: self.email_message,
            gcm_message: self.gcm_message,
            sms_message: self.sms_message,
            voice_message: self.voice_message,
        }
    }
}
