// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the GPS coordinates of a location.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GpsCoordinates {
    /// <p>The latitude coordinate of the location.</p>
    #[doc(hidden)]
    pub latitude: f64,
    /// <p>The longitude coordinate of the location.</p>
    #[doc(hidden)]
    pub longitude: f64,
}
impl GpsCoordinates {
    /// <p>The latitude coordinate of the location.</p>
    pub fn latitude(&self) -> f64 {
        self.latitude
    }
    /// <p>The longitude coordinate of the location.</p>
    pub fn longitude(&self) -> f64 {
        self.longitude
    }
}
impl GpsCoordinates {
    /// Creates a new builder-style object to manufacture [`GpsCoordinates`](crate::types::GpsCoordinates).
    pub fn builder() -> crate::types::builders::GpsCoordinatesBuilder {
        crate::types::builders::GpsCoordinatesBuilder::default()
    }
}

/// A builder for [`GpsCoordinates`](crate::types::GpsCoordinates).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GpsCoordinatesBuilder {
    pub(crate) latitude: std::option::Option<f64>,
    pub(crate) longitude: std::option::Option<f64>,
}
impl GpsCoordinatesBuilder {
    /// <p>The latitude coordinate of the location.</p>
    pub fn latitude(mut self, input: f64) -> Self {
        self.latitude = Some(input);
        self
    }
    /// <p>The latitude coordinate of the location.</p>
    pub fn set_latitude(mut self, input: std::option::Option<f64>) -> Self {
        self.latitude = input;
        self
    }
    /// <p>The longitude coordinate of the location.</p>
    pub fn longitude(mut self, input: f64) -> Self {
        self.longitude = Some(input);
        self
    }
    /// <p>The longitude coordinate of the location.</p>
    pub fn set_longitude(mut self, input: std::option::Option<f64>) -> Self {
        self.longitude = input;
        self
    }
    /// Consumes the builder and constructs a [`GpsCoordinates`](crate::types::GpsCoordinates).
    pub fn build(self) -> crate::types::GpsCoordinates {
        crate::types::GpsCoordinates {
            latitude: self.latitude.unwrap_or_default(),
            longitude: self.longitude.unwrap_or_default(),
        }
    }
}
