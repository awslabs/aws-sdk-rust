// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Get in-app messages response object.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InAppMessagesResponse {
    /// <p>List of targeted in-app message campaigns.</p>
    #[doc(hidden)]
    pub in_app_message_campaigns:
        std::option::Option<std::vec::Vec<crate::types::InAppMessageCampaign>>,
}
impl InAppMessagesResponse {
    /// <p>List of targeted in-app message campaigns.</p>
    pub fn in_app_message_campaigns(
        &self,
    ) -> std::option::Option<&[crate::types::InAppMessageCampaign]> {
        self.in_app_message_campaigns.as_deref()
    }
}
impl InAppMessagesResponse {
    /// Creates a new builder-style object to manufacture [`InAppMessagesResponse`](crate::types::InAppMessagesResponse).
    pub fn builder() -> crate::types::builders::InAppMessagesResponseBuilder {
        crate::types::builders::InAppMessagesResponseBuilder::default()
    }
}

/// A builder for [`InAppMessagesResponse`](crate::types::InAppMessagesResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InAppMessagesResponseBuilder {
    pub(crate) in_app_message_campaigns:
        std::option::Option<std::vec::Vec<crate::types::InAppMessageCampaign>>,
}
impl InAppMessagesResponseBuilder {
    /// Appends an item to `in_app_message_campaigns`.
    ///
    /// To override the contents of this collection use [`set_in_app_message_campaigns`](Self::set_in_app_message_campaigns).
    ///
    /// <p>List of targeted in-app message campaigns.</p>
    pub fn in_app_message_campaigns(mut self, input: crate::types::InAppMessageCampaign) -> Self {
        let mut v = self.in_app_message_campaigns.unwrap_or_default();
        v.push(input);
        self.in_app_message_campaigns = Some(v);
        self
    }
    /// <p>List of targeted in-app message campaigns.</p>
    pub fn set_in_app_message_campaigns(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::InAppMessageCampaign>>,
    ) -> Self {
        self.in_app_message_campaigns = input;
        self
    }
    /// Consumes the builder and constructs a [`InAppMessagesResponse`](crate::types::InAppMessagesResponse).
    pub fn build(self) -> crate::types::InAppMessagesResponse {
        crate::types::InAppMessagesResponse {
            in_app_message_campaigns: self.in_app_message_campaigns,
        }
    }
}
