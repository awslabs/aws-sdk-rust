// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the message content for a custom channel message that's sent to participants in a journey.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct JourneyCustomMessage {
    /// <p>The message content that's passed to an AWS Lambda function or to a web hook.</p>
    #[doc(hidden)]
    pub data: std::option::Option<std::string::String>,
}
impl JourneyCustomMessage {
    /// <p>The message content that's passed to an AWS Lambda function or to a web hook.</p>
    pub fn data(&self) -> std::option::Option<&str> {
        self.data.as_deref()
    }
}
impl JourneyCustomMessage {
    /// Creates a new builder-style object to manufacture [`JourneyCustomMessage`](crate::types::JourneyCustomMessage).
    pub fn builder() -> crate::types::builders::JourneyCustomMessageBuilder {
        crate::types::builders::JourneyCustomMessageBuilder::default()
    }
}

/// A builder for [`JourneyCustomMessage`](crate::types::JourneyCustomMessage).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct JourneyCustomMessageBuilder {
    pub(crate) data: std::option::Option<std::string::String>,
}
impl JourneyCustomMessageBuilder {
    /// <p>The message content that's passed to an AWS Lambda function or to a web hook.</p>
    pub fn data(mut self, input: impl Into<std::string::String>) -> Self {
        self.data = Some(input.into());
        self
    }
    /// <p>The message content that's passed to an AWS Lambda function or to a web hook.</p>
    pub fn set_data(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.data = input;
        self
    }
    /// Consumes the builder and constructs a [`JourneyCustomMessage`](crate::types::JourneyCustomMessage).
    pub fn build(self) -> crate::types::JourneyCustomMessage {
        crate::types::JourneyCustomMessage { data: self.data }
    }
}
