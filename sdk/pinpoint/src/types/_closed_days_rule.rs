// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Closed Days Rule. Part of Journey sending schedule.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClosedDaysRule {
    /// <p>Name of the rule.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>Start Datetime in ISO 8601 format.</p>
    #[doc(hidden)]
    pub start_date_time: std::option::Option<std::string::String>,
    /// <p>End Datetime in ISO 8601 format.</p>
    #[doc(hidden)]
    pub end_date_time: std::option::Option<std::string::String>,
}
impl ClosedDaysRule {
    /// <p>Name of the rule.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Start Datetime in ISO 8601 format.</p>
    pub fn start_date_time(&self) -> std::option::Option<&str> {
        self.start_date_time.as_deref()
    }
    /// <p>End Datetime in ISO 8601 format.</p>
    pub fn end_date_time(&self) -> std::option::Option<&str> {
        self.end_date_time.as_deref()
    }
}
impl ClosedDaysRule {
    /// Creates a new builder-style object to manufacture [`ClosedDaysRule`](crate::types::ClosedDaysRule).
    pub fn builder() -> crate::types::builders::ClosedDaysRuleBuilder {
        crate::types::builders::ClosedDaysRuleBuilder::default()
    }
}

/// A builder for [`ClosedDaysRule`](crate::types::ClosedDaysRule).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClosedDaysRuleBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) start_date_time: std::option::Option<std::string::String>,
    pub(crate) end_date_time: std::option::Option<std::string::String>,
}
impl ClosedDaysRuleBuilder {
    /// <p>Name of the rule.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>Name of the rule.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Start Datetime in ISO 8601 format.</p>
    pub fn start_date_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.start_date_time = Some(input.into());
        self
    }
    /// <p>Start Datetime in ISO 8601 format.</p>
    pub fn set_start_date_time(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.start_date_time = input;
        self
    }
    /// <p>End Datetime in ISO 8601 format.</p>
    pub fn end_date_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.end_date_time = Some(input.into());
        self
    }
    /// <p>End Datetime in ISO 8601 format.</p>
    pub fn set_end_date_time(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.end_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`ClosedDaysRule`](crate::types::ClosedDaysRule).
    pub fn build(self) -> crate::types::ClosedDaysRule {
        crate::types::ClosedDaysRule {
            name: self.name,
            start_date_time: self.start_date_time,
            end_date_time: self.end_date_time,
        }
    }
}
