// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the "From" address for an email message that's sent to participants in a journey.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct JourneyEmailMessage {
    /// <p>The verified email address to send the email message from. The default address is the FromAddress specified for the email channel for the application.</p>
    #[doc(hidden)]
    pub from_address: std::option::Option<std::string::String>,
}
impl JourneyEmailMessage {
    /// <p>The verified email address to send the email message from. The default address is the FromAddress specified for the email channel for the application.</p>
    pub fn from_address(&self) -> std::option::Option<&str> {
        self.from_address.as_deref()
    }
}
impl JourneyEmailMessage {
    /// Creates a new builder-style object to manufacture [`JourneyEmailMessage`](crate::types::JourneyEmailMessage).
    pub fn builder() -> crate::types::builders::JourneyEmailMessageBuilder {
        crate::types::builders::JourneyEmailMessageBuilder::default()
    }
}

/// A builder for [`JourneyEmailMessage`](crate::types::JourneyEmailMessage).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct JourneyEmailMessageBuilder {
    pub(crate) from_address: std::option::Option<std::string::String>,
}
impl JourneyEmailMessageBuilder {
    /// <p>The verified email address to send the email message from. The default address is the FromAddress specified for the email channel for the application.</p>
    pub fn from_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.from_address = Some(input.into());
        self
    }
    /// <p>The verified email address to send the email message from. The default address is the FromAddress specified for the email channel for the application.</p>
    pub fn set_from_address(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.from_address = input;
        self
    }
    /// Consumes the builder and constructs a [`JourneyEmailMessage`](crate::types::JourneyEmailMessage).
    pub fn build(self) -> crate::types::JourneyEmailMessage {
        crate::types::JourneyEmailMessage {
            from_address: self.from_address,
        }
    }
}
