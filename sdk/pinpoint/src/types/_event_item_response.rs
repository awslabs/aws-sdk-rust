// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the status code and message that result from processing an event.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EventItemResponse {
    /// <p>A custom message that's returned in the response as a result of processing the event.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
    /// <p>The status code that's returned in the response as a result of processing the event. Possible values are: 202, for events that were accepted; and, 400, for events that weren't valid.</p>
    #[doc(hidden)]
    pub status_code: i32,
}
impl EventItemResponse {
    /// <p>A custom message that's returned in the response as a result of processing the event.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
    /// <p>The status code that's returned in the response as a result of processing the event. Possible values are: 202, for events that were accepted; and, 400, for events that weren't valid.</p>
    pub fn status_code(&self) -> i32 {
        self.status_code
    }
}
impl EventItemResponse {
    /// Creates a new builder-style object to manufacture [`EventItemResponse`](crate::types::EventItemResponse).
    pub fn builder() -> crate::types::builders::EventItemResponseBuilder {
        crate::types::builders::EventItemResponseBuilder::default()
    }
}

/// A builder for [`EventItemResponse`](crate::types::EventItemResponse).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EventItemResponseBuilder {
    pub(crate) message: std::option::Option<std::string::String>,
    pub(crate) status_code: std::option::Option<i32>,
}
impl EventItemResponseBuilder {
    /// <p>A custom message that's returned in the response as a result of processing the event.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>A custom message that's returned in the response as a result of processing the event.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>The status code that's returned in the response as a result of processing the event. Possible values are: 202, for events that were accepted; and, 400, for events that weren't valid.</p>
    pub fn status_code(mut self, input: i32) -> Self {
        self.status_code = Some(input);
        self
    }
    /// <p>The status code that's returned in the response as a result of processing the event. Possible values are: 202, for events that were accepted; and, 400, for events that weren't valid.</p>
    pub fn set_status_code(mut self, input: std::option::Option<i32>) -> Self {
        self.status_code = input;
        self
    }
    /// Consumes the builder and constructs a [`EventItemResponse`](crate::types::EventItemResponse).
    pub fn build(self) -> crate::types::EventItemResponse {
        crate::types::EventItemResponse {
            message: self.message,
            status_code: self.status_code.unwrap_or_default(),
        }
    }
}
