// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon Pinpoint
///
/// Client for invoking operations on Amazon Pinpoint. Each operation on Amazon Pinpoint is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_pinpoint::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_pinpoint::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_pinpoint::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`CreateApp`](crate::client::fluent_builders::CreateApp) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`create_application_request(CreateApplicationRequest)`](crate::client::fluent_builders::CreateApp::create_application_request) / [`set_create_application_request(Option<CreateApplicationRequest>)`](crate::client::fluent_builders::CreateApp::set_create_application_request): <p>Specifies the display name of an application and the tags to associate with the application.</p>
    /// - On success, responds with [`CreateAppOutput`](crate::output::CreateAppOutput) with field(s):
    ///   - [`application_response(Option<ApplicationResponse>)`](crate::output::CreateAppOutput::application_response): <p>Provides information about an application.</p>
    /// - On failure, responds with [`SdkError<CreateAppError>`](crate::error::CreateAppError)
    pub fn create_app(&self) -> crate::client::fluent_builders::CreateApp {
        crate::client::fluent_builders::CreateApp::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateCampaign`](crate::client::fluent_builders::CreateCampaign) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::CreateCampaign::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::CreateCampaign::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`write_campaign_request(WriteCampaignRequest)`](crate::client::fluent_builders::CreateCampaign::write_campaign_request) / [`set_write_campaign_request(Option<WriteCampaignRequest>)`](crate::client::fluent_builders::CreateCampaign::set_write_campaign_request): <p>Specifies the configuration and other settings for a campaign.</p>
    /// - On success, responds with [`CreateCampaignOutput`](crate::output::CreateCampaignOutput) with field(s):
    ///   - [`campaign_response(Option<CampaignResponse>)`](crate::output::CreateCampaignOutput::campaign_response): <p>Provides information about the status, configuration, and other settings for a campaign.</p>
    /// - On failure, responds with [`SdkError<CreateCampaignError>`](crate::error::CreateCampaignError)
    pub fn create_campaign(&self) -> crate::client::fluent_builders::CreateCampaign {
        crate::client::fluent_builders::CreateCampaign::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEmailTemplate`](crate::client::fluent_builders::CreateEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_template_request(EmailTemplateRequest)`](crate::client::fluent_builders::CreateEmailTemplate::email_template_request) / [`set_email_template_request(Option<EmailTemplateRequest>)`](crate::client::fluent_builders::CreateEmailTemplate::set_email_template_request): <p>Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateEmailTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    /// - On success, responds with [`CreateEmailTemplateOutput`](crate::output::CreateEmailTemplateOutput) with field(s):
    ///   - [`create_template_message_body(Option<CreateTemplateMessageBody>)`](crate::output::CreateEmailTemplateOutput::create_template_message_body): <p>Provides information about a request to create a message template.</p>
    /// - On failure, responds with [`SdkError<CreateEmailTemplateError>`](crate::error::CreateEmailTemplateError)
    pub fn create_email_template(&self) -> crate::client::fluent_builders::CreateEmailTemplate {
        crate::client::fluent_builders::CreateEmailTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateExportJob`](crate::client::fluent_builders::CreateExportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::CreateExportJob::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::CreateExportJob::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`export_job_request(ExportJobRequest)`](crate::client::fluent_builders::CreateExportJob::export_job_request) / [`set_export_job_request(Option<ExportJobRequest>)`](crate::client::fluent_builders::CreateExportJob::set_export_job_request): <p>Specifies the settings for a job that exports endpoint definitions to an Amazon Simple Storage Service (Amazon S3) bucket.</p>
    /// - On success, responds with [`CreateExportJobOutput`](crate::output::CreateExportJobOutput) with field(s):
    ///   - [`export_job_response(Option<ExportJobResponse>)`](crate::output::CreateExportJobOutput::export_job_response): <p>Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.</p>
    /// - On failure, responds with [`SdkError<CreateExportJobError>`](crate::error::CreateExportJobError)
    pub fn create_export_job(&self) -> crate::client::fluent_builders::CreateExportJob {
        crate::client::fluent_builders::CreateExportJob::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateImportJob`](crate::client::fluent_builders::CreateImportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::CreateImportJob::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::CreateImportJob::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`import_job_request(ImportJobRequest)`](crate::client::fluent_builders::CreateImportJob::import_job_request) / [`set_import_job_request(Option<ImportJobRequest>)`](crate::client::fluent_builders::CreateImportJob::set_import_job_request): <p>Specifies the settings for a job that imports endpoint definitions from an Amazon Simple Storage Service (Amazon S3) bucket.</p>
    /// - On success, responds with [`CreateImportJobOutput`](crate::output::CreateImportJobOutput) with field(s):
    ///   - [`import_job_response(Option<ImportJobResponse>)`](crate::output::CreateImportJobOutput::import_job_response): <p>Provides information about the status and settings of a job that imports endpoint definitions from one or more files. The files can be stored in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly from a computer by using the Amazon Pinpoint console.</p>
    /// - On failure, responds with [`SdkError<CreateImportJobError>`](crate::error::CreateImportJobError)
    pub fn create_import_job(&self) -> crate::client::fluent_builders::CreateImportJob {
        crate::client::fluent_builders::CreateImportJob::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateInAppTemplate`](crate::client::fluent_builders::CreateInAppTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`in_app_template_request(InAppTemplateRequest)`](crate::client::fluent_builders::CreateInAppTemplate::in_app_template_request) / [`set_in_app_template_request(Option<InAppTemplateRequest>)`](crate::client::fluent_builders::CreateInAppTemplate::set_in_app_template_request): <p>InApp Template Request.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateInAppTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateInAppTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    /// - On success, responds with [`CreateInAppTemplateOutput`](crate::output::CreateInAppTemplateOutput) with field(s):
    ///   - [`template_create_message_body(Option<TemplateCreateMessageBody>)`](crate::output::CreateInAppTemplateOutput::template_create_message_body): <p>Provides information about a request to create a message template.</p>
    /// - On failure, responds with [`SdkError<CreateInAppTemplateError>`](crate::error::CreateInAppTemplateError)
    pub fn create_in_app_template(&self) -> crate::client::fluent_builders::CreateInAppTemplate {
        crate::client::fluent_builders::CreateInAppTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateJourney`](crate::client::fluent_builders::CreateJourney) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::CreateJourney::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::CreateJourney::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`write_journey_request(WriteJourneyRequest)`](crate::client::fluent_builders::CreateJourney::write_journey_request) / [`set_write_journey_request(Option<WriteJourneyRequest>)`](crate::client::fluent_builders::CreateJourney::set_write_journey_request): <p>Specifies the configuration and other settings for a journey.</p>
    /// - On success, responds with [`CreateJourneyOutput`](crate::output::CreateJourneyOutput) with field(s):
    ///   - [`journey_response(Option<JourneyResponse>)`](crate::output::CreateJourneyOutput::journey_response): <p>Provides information about the status, configuration, and other settings for a journey.</p>
    /// - On failure, responds with [`SdkError<CreateJourneyError>`](crate::error::CreateJourneyError)
    pub fn create_journey(&self) -> crate::client::fluent_builders::CreateJourney {
        crate::client::fluent_builders::CreateJourney::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreatePushTemplate`](crate::client::fluent_builders::CreatePushTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`push_notification_template_request(PushNotificationTemplateRequest)`](crate::client::fluent_builders::CreatePushTemplate::push_notification_template_request) / [`set_push_notification_template_request(Option<PushNotificationTemplateRequest>)`](crate::client::fluent_builders::CreatePushTemplate::set_push_notification_template_request): <p>Specifies the content and settings for a message template that can be used in messages that are sent through a push notification channel.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreatePushTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreatePushTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    /// - On success, responds with [`CreatePushTemplateOutput`](crate::output::CreatePushTemplateOutput) with field(s):
    ///   - [`create_template_message_body(Option<CreateTemplateMessageBody>)`](crate::output::CreatePushTemplateOutput::create_template_message_body): <p>Provides information about a request to create a message template.</p>
    /// - On failure, responds with [`SdkError<CreatePushTemplateError>`](crate::error::CreatePushTemplateError)
    pub fn create_push_template(&self) -> crate::client::fluent_builders::CreatePushTemplate {
        crate::client::fluent_builders::CreatePushTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateRecommenderConfiguration`](crate::client::fluent_builders::CreateRecommenderConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`create_recommender_configuration(CreateRecommenderConfigurationShape)`](crate::client::fluent_builders::CreateRecommenderConfiguration::create_recommender_configuration) / [`set_create_recommender_configuration(Option<CreateRecommenderConfigurationShape>)`](crate::client::fluent_builders::CreateRecommenderConfiguration::set_create_recommender_configuration): <p>Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.</p>
    /// - On success, responds with [`CreateRecommenderConfigurationOutput`](crate::output::CreateRecommenderConfigurationOutput) with field(s):
    ///   - [`recommender_configuration_response(Option<RecommenderConfigurationResponse>)`](crate::output::CreateRecommenderConfigurationOutput::recommender_configuration_response): <p>Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.</p>
    /// - On failure, responds with [`SdkError<CreateRecommenderConfigurationError>`](crate::error::CreateRecommenderConfigurationError)
    pub fn create_recommender_configuration(
        &self,
    ) -> crate::client::fluent_builders::CreateRecommenderConfiguration {
        crate::client::fluent_builders::CreateRecommenderConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateSegment`](crate::client::fluent_builders::CreateSegment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::CreateSegment::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::CreateSegment::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`write_segment_request(WriteSegmentRequest)`](crate::client::fluent_builders::CreateSegment::write_segment_request) / [`set_write_segment_request(Option<WriteSegmentRequest>)`](crate::client::fluent_builders::CreateSegment::set_write_segment_request): <p>Specifies the configuration, dimension, and other settings for a segment. A WriteSegmentRequest object can include a Dimensions object or a SegmentGroups object, but not both.</p>
    /// - On success, responds with [`CreateSegmentOutput`](crate::output::CreateSegmentOutput) with field(s):
    ///   - [`segment_response(Option<SegmentResponse>)`](crate::output::CreateSegmentOutput::segment_response): <p>Provides information about the configuration, dimension, and other settings for a segment.</p>
    /// - On failure, responds with [`SdkError<CreateSegmentError>`](crate::error::CreateSegmentError)
    pub fn create_segment(&self) -> crate::client::fluent_builders::CreateSegment {
        crate::client::fluent_builders::CreateSegment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateSmsTemplate`](crate::client::fluent_builders::CreateSmsTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sms_template_request(SmsTemplateRequest)`](crate::client::fluent_builders::CreateSmsTemplate::sms_template_request) / [`set_sms_template_request(Option<SmsTemplateRequest>)`](crate::client::fluent_builders::CreateSmsTemplate::set_sms_template_request): <p>Specifies the content and settings for a message template that can be used in text messages that are sent through the SMS channel.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateSmsTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateSmsTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    /// - On success, responds with [`CreateSmsTemplateOutput`](crate::output::CreateSmsTemplateOutput) with field(s):
    ///   - [`create_template_message_body(Option<CreateTemplateMessageBody>)`](crate::output::CreateSmsTemplateOutput::create_template_message_body): <p>Provides information about a request to create a message template.</p>
    /// - On failure, responds with [`SdkError<CreateSmsTemplateError>`](crate::error::CreateSmsTemplateError)
    pub fn create_sms_template(&self) -> crate::client::fluent_builders::CreateSmsTemplate {
        crate::client::fluent_builders::CreateSmsTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateVoiceTemplate`](crate::client::fluent_builders::CreateVoiceTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateVoiceTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateVoiceTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`voice_template_request(VoiceTemplateRequest)`](crate::client::fluent_builders::CreateVoiceTemplate::voice_template_request) / [`set_voice_template_request(Option<VoiceTemplateRequest>)`](crate::client::fluent_builders::CreateVoiceTemplate::set_voice_template_request): <p>Specifies the content and settings for a message template that can be used in messages that are sent through the voice channel.</p>
    /// - On success, responds with [`CreateVoiceTemplateOutput`](crate::output::CreateVoiceTemplateOutput) with field(s):
    ///   - [`create_template_message_body(Option<CreateTemplateMessageBody>)`](crate::output::CreateVoiceTemplateOutput::create_template_message_body): <p>Provides information about a request to create a message template.</p>
    /// - On failure, responds with [`SdkError<CreateVoiceTemplateError>`](crate::error::CreateVoiceTemplateError)
    pub fn create_voice_template(&self) -> crate::client::fluent_builders::CreateVoiceTemplate {
        crate::client::fluent_builders::CreateVoiceTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteAdmChannel`](crate::client::fluent_builders::DeleteAdmChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteAdmChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteAdmChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteAdmChannelOutput`](crate::output::DeleteAdmChannelOutput) with field(s):
    ///   - [`adm_channel_response(Option<AdmChannelResponse>)`](crate::output::DeleteAdmChannelOutput::adm_channel_response): <p>Provides information about the status and settings of the ADM (Amazon Device Messaging) channel for an application.</p>
    /// - On failure, responds with [`SdkError<DeleteAdmChannelError>`](crate::error::DeleteAdmChannelError)
    pub fn delete_adm_channel(&self) -> crate::client::fluent_builders::DeleteAdmChannel {
        crate::client::fluent_builders::DeleteAdmChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteApnsChannel`](crate::client::fluent_builders::DeleteApnsChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteApnsChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteApnsChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteApnsChannelOutput`](crate::output::DeleteApnsChannelOutput) with field(s):
    ///   - [`apns_channel_response(Option<ApnsChannelResponse>)`](crate::output::DeleteApnsChannelOutput::apns_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) channel for an application.</p>
    /// - On failure, responds with [`SdkError<DeleteApnsChannelError>`](crate::error::DeleteApnsChannelError)
    pub fn delete_apns_channel(&self) -> crate::client::fluent_builders::DeleteApnsChannel {
        crate::client::fluent_builders::DeleteApnsChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteApnsSandboxChannel`](crate::client::fluent_builders::DeleteApnsSandboxChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteApnsSandboxChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteApnsSandboxChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteApnsSandboxChannelOutput`](crate::output::DeleteApnsSandboxChannelOutput) with field(s):
    ///   - [`apns_sandbox_channel_response(Option<ApnsSandboxChannelResponse>)`](crate::output::DeleteApnsSandboxChannelOutput::apns_sandbox_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.</p>
    /// - On failure, responds with [`SdkError<DeleteApnsSandboxChannelError>`](crate::error::DeleteApnsSandboxChannelError)
    pub fn delete_apns_sandbox_channel(
        &self,
    ) -> crate::client::fluent_builders::DeleteApnsSandboxChannel {
        crate::client::fluent_builders::DeleteApnsSandboxChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteApnsVoipChannel`](crate::client::fluent_builders::DeleteApnsVoipChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteApnsVoipChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteApnsVoipChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteApnsVoipChannelOutput`](crate::output::DeleteApnsVoipChannelOutput) with field(s):
    ///   - [`apns_voip_channel_response(Option<ApnsVoipChannelResponse>)`](crate::output::DeleteApnsVoipChannelOutput::apns_voip_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.</p>
    /// - On failure, responds with [`SdkError<DeleteApnsVoipChannelError>`](crate::error::DeleteApnsVoipChannelError)
    pub fn delete_apns_voip_channel(
        &self,
    ) -> crate::client::fluent_builders::DeleteApnsVoipChannel {
        crate::client::fluent_builders::DeleteApnsVoipChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteApnsVoipSandboxChannel`](crate::client::fluent_builders::DeleteApnsVoipSandboxChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteApnsVoipSandboxChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteApnsVoipSandboxChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteApnsVoipSandboxChannelOutput`](crate::output::DeleteApnsVoipSandboxChannelOutput) with field(s):
    ///   - [`apns_voip_sandbox_channel_response(Option<ApnsVoipSandboxChannelResponse>)`](crate::output::DeleteApnsVoipSandboxChannelOutput::apns_voip_sandbox_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.</p>
    /// - On failure, responds with [`SdkError<DeleteApnsVoipSandboxChannelError>`](crate::error::DeleteApnsVoipSandboxChannelError)
    pub fn delete_apns_voip_sandbox_channel(
        &self,
    ) -> crate::client::fluent_builders::DeleteApnsVoipSandboxChannel {
        crate::client::fluent_builders::DeleteApnsVoipSandboxChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteApp`](crate::client::fluent_builders::DeleteApp) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteApp::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteApp::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteAppOutput`](crate::output::DeleteAppOutput) with field(s):
    ///   - [`application_response(Option<ApplicationResponse>)`](crate::output::DeleteAppOutput::application_response): <p>Provides information about an application.</p>
    /// - On failure, responds with [`SdkError<DeleteAppError>`](crate::error::DeleteAppError)
    pub fn delete_app(&self) -> crate::client::fluent_builders::DeleteApp {
        crate::client::fluent_builders::DeleteApp::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBaiduChannel`](crate::client::fluent_builders::DeleteBaiduChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteBaiduChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteBaiduChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteBaiduChannelOutput`](crate::output::DeleteBaiduChannelOutput) with field(s):
    ///   - [`baidu_channel_response(Option<BaiduChannelResponse>)`](crate::output::DeleteBaiduChannelOutput::baidu_channel_response): <p>Provides information about the status and settings of the Baidu (Baidu Cloud Push) channel for an application.</p>
    /// - On failure, responds with [`SdkError<DeleteBaiduChannelError>`](crate::error::DeleteBaiduChannelError)
    pub fn delete_baidu_channel(&self) -> crate::client::fluent_builders::DeleteBaiduChannel {
        crate::client::fluent_builders::DeleteBaiduChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteCampaign`](crate::client::fluent_builders::DeleteCampaign) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteCampaign::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteCampaign::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`campaign_id(impl Into<String>)`](crate::client::fluent_builders::DeleteCampaign::campaign_id) / [`set_campaign_id(Option<String>)`](crate::client::fluent_builders::DeleteCampaign::set_campaign_id): <p>The unique identifier for the campaign.</p>
    /// - On success, responds with [`DeleteCampaignOutput`](crate::output::DeleteCampaignOutput) with field(s):
    ///   - [`campaign_response(Option<CampaignResponse>)`](crate::output::DeleteCampaignOutput::campaign_response): <p>Provides information about the status, configuration, and other settings for a campaign.</p>
    /// - On failure, responds with [`SdkError<DeleteCampaignError>`](crate::error::DeleteCampaignError)
    pub fn delete_campaign(&self) -> crate::client::fluent_builders::DeleteCampaign {
        crate::client::fluent_builders::DeleteCampaign::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEmailChannel`](crate::client::fluent_builders::DeleteEmailChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteEmailChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteEmailChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteEmailChannelOutput`](crate::output::DeleteEmailChannelOutput) with field(s):
    ///   - [`email_channel_response(Option<EmailChannelResponse>)`](crate::output::DeleteEmailChannelOutput::email_channel_response): <p>Provides information about the status and settings of the email channel for an application.</p>
    /// - On failure, responds with [`SdkError<DeleteEmailChannelError>`](crate::error::DeleteEmailChannelError)
    pub fn delete_email_channel(&self) -> crate::client::fluent_builders::DeleteEmailChannel {
        crate::client::fluent_builders::DeleteEmailChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEmailTemplate`](crate::client::fluent_builders::DeleteEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeleteEmailTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::DeleteEmailTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::DeleteEmailTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`DeleteEmailTemplateOutput`](crate::output::DeleteEmailTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::DeleteEmailTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<DeleteEmailTemplateError>`](crate::error::DeleteEmailTemplateError)
    pub fn delete_email_template(&self) -> crate::client::fluent_builders::DeleteEmailTemplate {
        crate::client::fluent_builders::DeleteEmailTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEndpoint`](crate::client::fluent_builders::DeleteEndpoint) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteEndpoint::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteEndpoint::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`endpoint_id(impl Into<String>)`](crate::client::fluent_builders::DeleteEndpoint::endpoint_id) / [`set_endpoint_id(Option<String>)`](crate::client::fluent_builders::DeleteEndpoint::set_endpoint_id): <p>The unique identifier for the endpoint.</p>
    /// - On success, responds with [`DeleteEndpointOutput`](crate::output::DeleteEndpointOutput) with field(s):
    ///   - [`endpoint_response(Option<EndpointResponse>)`](crate::output::DeleteEndpointOutput::endpoint_response): <p>Provides information about the channel type and other settings for an endpoint.</p>
    /// - On failure, responds with [`SdkError<DeleteEndpointError>`](crate::error::DeleteEndpointError)
    pub fn delete_endpoint(&self) -> crate::client::fluent_builders::DeleteEndpoint {
        crate::client::fluent_builders::DeleteEndpoint::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEventStream`](crate::client::fluent_builders::DeleteEventStream) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteEventStream::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteEventStream::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteEventStreamOutput`](crate::output::DeleteEventStreamOutput) with field(s):
    ///   - [`event_stream(Option<EventStream>)`](crate::output::DeleteEventStreamOutput::event_stream): <p>Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.</p>
    /// - On failure, responds with [`SdkError<DeleteEventStreamError>`](crate::error::DeleteEventStreamError)
    pub fn delete_event_stream(&self) -> crate::client::fluent_builders::DeleteEventStream {
        crate::client::fluent_builders::DeleteEventStream::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteGcmChannel`](crate::client::fluent_builders::DeleteGcmChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteGcmChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteGcmChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteGcmChannelOutput`](crate::output::DeleteGcmChannelOutput) with field(s):
    ///   - [`gcm_channel_response(Option<GcmChannelResponse>)`](crate::output::DeleteGcmChannelOutput::gcm_channel_response): <p>Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.</p>
    /// - On failure, responds with [`SdkError<DeleteGcmChannelError>`](crate::error::DeleteGcmChannelError)
    pub fn delete_gcm_channel(&self) -> crate::client::fluent_builders::DeleteGcmChannel {
        crate::client::fluent_builders::DeleteGcmChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteInAppTemplate`](crate::client::fluent_builders::DeleteInAppTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteInAppTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeleteInAppTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::DeleteInAppTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::DeleteInAppTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`DeleteInAppTemplateOutput`](crate::output::DeleteInAppTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::DeleteInAppTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<DeleteInAppTemplateError>`](crate::error::DeleteInAppTemplateError)
    pub fn delete_in_app_template(&self) -> crate::client::fluent_builders::DeleteInAppTemplate {
        crate::client::fluent_builders::DeleteInAppTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteJourney`](crate::client::fluent_builders::DeleteJourney) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteJourney::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteJourney::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`journey_id(impl Into<String>)`](crate::client::fluent_builders::DeleteJourney::journey_id) / [`set_journey_id(Option<String>)`](crate::client::fluent_builders::DeleteJourney::set_journey_id): <p>The unique identifier for the journey.</p>
    /// - On success, responds with [`DeleteJourneyOutput`](crate::output::DeleteJourneyOutput) with field(s):
    ///   - [`journey_response(Option<JourneyResponse>)`](crate::output::DeleteJourneyOutput::journey_response): <p>Provides information about the status, configuration, and other settings for a journey.</p>
    /// - On failure, responds with [`SdkError<DeleteJourneyError>`](crate::error::DeleteJourneyError)
    pub fn delete_journey(&self) -> crate::client::fluent_builders::DeleteJourney {
        crate::client::fluent_builders::DeleteJourney::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeletePushTemplate`](crate::client::fluent_builders::DeletePushTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeletePushTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeletePushTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::DeletePushTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::DeletePushTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`DeletePushTemplateOutput`](crate::output::DeletePushTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::DeletePushTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<DeletePushTemplateError>`](crate::error::DeletePushTemplateError)
    pub fn delete_push_template(&self) -> crate::client::fluent_builders::DeletePushTemplate {
        crate::client::fluent_builders::DeletePushTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteRecommenderConfiguration`](crate::client::fluent_builders::DeleteRecommenderConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`recommender_id(impl Into<String>)`](crate::client::fluent_builders::DeleteRecommenderConfiguration::recommender_id) / [`set_recommender_id(Option<String>)`](crate::client::fluent_builders::DeleteRecommenderConfiguration::set_recommender_id): <p>The unique identifier for the recommender model configuration. This identifier is displayed as the <b>Recommender ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteRecommenderConfigurationOutput`](crate::output::DeleteRecommenderConfigurationOutput) with field(s):
    ///   - [`recommender_configuration_response(Option<RecommenderConfigurationResponse>)`](crate::output::DeleteRecommenderConfigurationOutput::recommender_configuration_response): <p>Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.</p>
    /// - On failure, responds with [`SdkError<DeleteRecommenderConfigurationError>`](crate::error::DeleteRecommenderConfigurationError)
    pub fn delete_recommender_configuration(
        &self,
    ) -> crate::client::fluent_builders::DeleteRecommenderConfiguration {
        crate::client::fluent_builders::DeleteRecommenderConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteSegment`](crate::client::fluent_builders::DeleteSegment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteSegment::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteSegment::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`segment_id(impl Into<String>)`](crate::client::fluent_builders::DeleteSegment::segment_id) / [`set_segment_id(Option<String>)`](crate::client::fluent_builders::DeleteSegment::set_segment_id): <p>The unique identifier for the segment.</p>
    /// - On success, responds with [`DeleteSegmentOutput`](crate::output::DeleteSegmentOutput) with field(s):
    ///   - [`segment_response(Option<SegmentResponse>)`](crate::output::DeleteSegmentOutput::segment_response): <p>Provides information about the configuration, dimension, and other settings for a segment.</p>
    /// - On failure, responds with [`SdkError<DeleteSegmentError>`](crate::error::DeleteSegmentError)
    pub fn delete_segment(&self) -> crate::client::fluent_builders::DeleteSegment {
        crate::client::fluent_builders::DeleteSegment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteSmsChannel`](crate::client::fluent_builders::DeleteSmsChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteSmsChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteSmsChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteSmsChannelOutput`](crate::output::DeleteSmsChannelOutput) with field(s):
    ///   - [`sms_channel_response(Option<SmsChannelResponse>)`](crate::output::DeleteSmsChannelOutput::sms_channel_response): <p>Provides information about the status and settings of the SMS channel for an application.</p>
    /// - On failure, responds with [`SdkError<DeleteSmsChannelError>`](crate::error::DeleteSmsChannelError)
    pub fn delete_sms_channel(&self) -> crate::client::fluent_builders::DeleteSmsChannel {
        crate::client::fluent_builders::DeleteSmsChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteSmsTemplate`](crate::client::fluent_builders::DeleteSmsTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteSmsTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeleteSmsTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::DeleteSmsTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::DeleteSmsTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`DeleteSmsTemplateOutput`](crate::output::DeleteSmsTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::DeleteSmsTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<DeleteSmsTemplateError>`](crate::error::DeleteSmsTemplateError)
    pub fn delete_sms_template(&self) -> crate::client::fluent_builders::DeleteSmsTemplate {
        crate::client::fluent_builders::DeleteSmsTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteUserEndpoints`](crate::client::fluent_builders::DeleteUserEndpoints) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteUserEndpoints::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteUserEndpoints::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::DeleteUserEndpoints::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::DeleteUserEndpoints::set_user_id): <p>The unique identifier for the user.</p>
    /// - On success, responds with [`DeleteUserEndpointsOutput`](crate::output::DeleteUserEndpointsOutput) with field(s):
    ///   - [`endpoints_response(Option<EndpointsResponse>)`](crate::output::DeleteUserEndpointsOutput::endpoints_response): <p>Provides information about all the endpoints that are associated with a user ID.</p>
    /// - On failure, responds with [`SdkError<DeleteUserEndpointsError>`](crate::error::DeleteUserEndpointsError)
    pub fn delete_user_endpoints(&self) -> crate::client::fluent_builders::DeleteUserEndpoints {
        crate::client::fluent_builders::DeleteUserEndpoints::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteVoiceChannel`](crate::client::fluent_builders::DeleteVoiceChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::DeleteVoiceChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`DeleteVoiceChannelOutput`](crate::output::DeleteVoiceChannelOutput) with field(s):
    ///   - [`voice_channel_response(Option<VoiceChannelResponse>)`](crate::output::DeleteVoiceChannelOutput::voice_channel_response): <p>Provides information about the status and settings of the voice channel for an application.</p>
    /// - On failure, responds with [`SdkError<DeleteVoiceChannelError>`](crate::error::DeleteVoiceChannelError)
    pub fn delete_voice_channel(&self) -> crate::client::fluent_builders::DeleteVoiceChannel {
        crate::client::fluent_builders::DeleteVoiceChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteVoiceTemplate`](crate::client::fluent_builders::DeleteVoiceTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeleteVoiceTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::DeleteVoiceTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`DeleteVoiceTemplateOutput`](crate::output::DeleteVoiceTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::DeleteVoiceTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<DeleteVoiceTemplateError>`](crate::error::DeleteVoiceTemplateError)
    pub fn delete_voice_template(&self) -> crate::client::fluent_builders::DeleteVoiceTemplate {
        crate::client::fluent_builders::DeleteVoiceTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetAdmChannel`](crate::client::fluent_builders::GetAdmChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetAdmChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetAdmChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetAdmChannelOutput`](crate::output::GetAdmChannelOutput) with field(s):
    ///   - [`adm_channel_response(Option<AdmChannelResponse>)`](crate::output::GetAdmChannelOutput::adm_channel_response): <p>Provides information about the status and settings of the ADM (Amazon Device Messaging) channel for an application.</p>
    /// - On failure, responds with [`SdkError<GetAdmChannelError>`](crate::error::GetAdmChannelError)
    pub fn get_adm_channel(&self) -> crate::client::fluent_builders::GetAdmChannel {
        crate::client::fluent_builders::GetAdmChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetApnsChannel`](crate::client::fluent_builders::GetApnsChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetApnsChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetApnsChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetApnsChannelOutput`](crate::output::GetApnsChannelOutput) with field(s):
    ///   - [`apns_channel_response(Option<ApnsChannelResponse>)`](crate::output::GetApnsChannelOutput::apns_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) channel for an application.</p>
    /// - On failure, responds with [`SdkError<GetApnsChannelError>`](crate::error::GetApnsChannelError)
    pub fn get_apns_channel(&self) -> crate::client::fluent_builders::GetApnsChannel {
        crate::client::fluent_builders::GetApnsChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetApnsSandboxChannel`](crate::client::fluent_builders::GetApnsSandboxChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetApnsSandboxChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetApnsSandboxChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetApnsSandboxChannelOutput`](crate::output::GetApnsSandboxChannelOutput) with field(s):
    ///   - [`apns_sandbox_channel_response(Option<ApnsSandboxChannelResponse>)`](crate::output::GetApnsSandboxChannelOutput::apns_sandbox_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.</p>
    /// - On failure, responds with [`SdkError<GetApnsSandboxChannelError>`](crate::error::GetApnsSandboxChannelError)
    pub fn get_apns_sandbox_channel(
        &self,
    ) -> crate::client::fluent_builders::GetApnsSandboxChannel {
        crate::client::fluent_builders::GetApnsSandboxChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetApnsVoipChannel`](crate::client::fluent_builders::GetApnsVoipChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetApnsVoipChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetApnsVoipChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetApnsVoipChannelOutput`](crate::output::GetApnsVoipChannelOutput) with field(s):
    ///   - [`apns_voip_channel_response(Option<ApnsVoipChannelResponse>)`](crate::output::GetApnsVoipChannelOutput::apns_voip_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.</p>
    /// - On failure, responds with [`SdkError<GetApnsVoipChannelError>`](crate::error::GetApnsVoipChannelError)
    pub fn get_apns_voip_channel(&self) -> crate::client::fluent_builders::GetApnsVoipChannel {
        crate::client::fluent_builders::GetApnsVoipChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetApnsVoipSandboxChannel`](crate::client::fluent_builders::GetApnsVoipSandboxChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetApnsVoipSandboxChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetApnsVoipSandboxChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetApnsVoipSandboxChannelOutput`](crate::output::GetApnsVoipSandboxChannelOutput) with field(s):
    ///   - [`apns_voip_sandbox_channel_response(Option<ApnsVoipSandboxChannelResponse>)`](crate::output::GetApnsVoipSandboxChannelOutput::apns_voip_sandbox_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.</p>
    /// - On failure, responds with [`SdkError<GetApnsVoipSandboxChannelError>`](crate::error::GetApnsVoipSandboxChannelError)
    pub fn get_apns_voip_sandbox_channel(
        &self,
    ) -> crate::client::fluent_builders::GetApnsVoipSandboxChannel {
        crate::client::fluent_builders::GetApnsVoipSandboxChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetApp`](crate::client::fluent_builders::GetApp) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetApp::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetApp::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetAppOutput`](crate::output::GetAppOutput) with field(s):
    ///   - [`application_response(Option<ApplicationResponse>)`](crate::output::GetAppOutput::application_response): <p>Provides information about an application.</p>
    /// - On failure, responds with [`SdkError<GetAppError>`](crate::error::GetAppError)
    pub fn get_app(&self) -> crate::client::fluent_builders::GetApp {
        crate::client::fluent_builders::GetApp::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetApplicationDateRangeKpi`](crate::client::fluent_builders::GetApplicationDateRangeKpi) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::set_end_time): <p>The last date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.</p>
    ///   - [`kpi_name(impl Into<String>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::kpi_name) / [`set_kpi_name(Option<String>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::set_kpi_name): <p>The name of the metric, also referred to as a <i>key performance indicator (KPI)</i>, to retrieve data for. This value describes the associated metric and consists of two or more terms, which are comprised of lowercase alphanumeric characters, separated by a hyphen. Examples are email-open-rate and successful-delivery-rate. For a list of valid values, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html">Amazon Pinpoint Developer Guide</a>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::set_next_token): <p>The string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::GetApplicationDateRangeKpi::set_start_time): <p>The first date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This value should also be fewer than 90 days from the current day.</p>
    /// - On success, responds with [`GetApplicationDateRangeKpiOutput`](crate::output::GetApplicationDateRangeKpiOutput) with field(s):
    ///   - [`application_date_range_kpi_response(Option<ApplicationDateRangeKpiResponse>)`](crate::output::GetApplicationDateRangeKpiOutput::application_date_range_kpi_response): <p>Provides the results of a query that retrieved the data for a standard metric that applies to an application, and provides information about that query.</p>
    /// - On failure, responds with [`SdkError<GetApplicationDateRangeKpiError>`](crate::error::GetApplicationDateRangeKpiError)
    pub fn get_application_date_range_kpi(
        &self,
    ) -> crate::client::fluent_builders::GetApplicationDateRangeKpi {
        crate::client::fluent_builders::GetApplicationDateRangeKpi::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetApplicationSettings`](crate::client::fluent_builders::GetApplicationSettings) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetApplicationSettings::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetApplicationSettings::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetApplicationSettingsOutput`](crate::output::GetApplicationSettingsOutput) with field(s):
    ///   - [`application_settings_resource(Option<ApplicationSettingsResource>)`](crate::output::GetApplicationSettingsOutput::application_settings_resource): <p>Provides information about an application, including the default settings for an application.</p>
    /// - On failure, responds with [`SdkError<GetApplicationSettingsError>`](crate::error::GetApplicationSettingsError)
    pub fn get_application_settings(
        &self,
    ) -> crate::client::fluent_builders::GetApplicationSettings {
        crate::client::fluent_builders::GetApplicationSettings::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetApps`](crate::client::fluent_builders::GetApps) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetApps::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetApps::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetApps::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetApps::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetAppsOutput`](crate::output::GetAppsOutput) with field(s):
    ///   - [`applications_response(Option<ApplicationsResponse>)`](crate::output::GetAppsOutput::applications_response): <p>Provides information about all of your applications.</p>
    /// - On failure, responds with [`SdkError<GetAppsError>`](crate::error::GetAppsError)
    pub fn get_apps(&self) -> crate::client::fluent_builders::GetApps {
        crate::client::fluent_builders::GetApps::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBaiduChannel`](crate::client::fluent_builders::GetBaiduChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetBaiduChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetBaiduChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetBaiduChannelOutput`](crate::output::GetBaiduChannelOutput) with field(s):
    ///   - [`baidu_channel_response(Option<BaiduChannelResponse>)`](crate::output::GetBaiduChannelOutput::baidu_channel_response): <p>Provides information about the status and settings of the Baidu (Baidu Cloud Push) channel for an application.</p>
    /// - On failure, responds with [`SdkError<GetBaiduChannelError>`](crate::error::GetBaiduChannelError)
    pub fn get_baidu_channel(&self) -> crate::client::fluent_builders::GetBaiduChannel {
        crate::client::fluent_builders::GetBaiduChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCampaign`](crate::client::fluent_builders::GetCampaign) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaign::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetCampaign::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`campaign_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaign::campaign_id) / [`set_campaign_id(Option<String>)`](crate::client::fluent_builders::GetCampaign::set_campaign_id): <p>The unique identifier for the campaign.</p>
    /// - On success, responds with [`GetCampaignOutput`](crate::output::GetCampaignOutput) with field(s):
    ///   - [`campaign_response(Option<CampaignResponse>)`](crate::output::GetCampaignOutput::campaign_response): <p>Provides information about the status, configuration, and other settings for a campaign.</p>
    /// - On failure, responds with [`SdkError<GetCampaignError>`](crate::error::GetCampaignError)
    pub fn get_campaign(&self) -> crate::client::fluent_builders::GetCampaign {
        crate::client::fluent_builders::GetCampaign::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCampaignActivities`](crate::client::fluent_builders::GetCampaignActivities) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaignActivities::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetCampaignActivities::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`campaign_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaignActivities::campaign_id) / [`set_campaign_id(Option<String>)`](crate::client::fluent_builders::GetCampaignActivities::set_campaign_id): <p>The unique identifier for the campaign.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetCampaignActivities::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetCampaignActivities::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetCampaignActivities::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetCampaignActivities::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetCampaignActivitiesOutput`](crate::output::GetCampaignActivitiesOutput) with field(s):
    ///   - [`activities_response(Option<ActivitiesResponse>)`](crate::output::GetCampaignActivitiesOutput::activities_response): <p>Provides information about the activities that were performed by a campaign.</p>
    /// - On failure, responds with [`SdkError<GetCampaignActivitiesError>`](crate::error::GetCampaignActivitiesError)
    pub fn get_campaign_activities(&self) -> crate::client::fluent_builders::GetCampaignActivities {
        crate::client::fluent_builders::GetCampaignActivities::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCampaignDateRangeKpi`](crate::client::fluent_builders::GetCampaignDateRangeKpi) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`campaign_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::campaign_id) / [`set_campaign_id(Option<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::set_campaign_id): <p>The unique identifier for the campaign.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::set_end_time): <p>The last date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.</p>
    ///   - [`kpi_name(impl Into<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::kpi_name) / [`set_kpi_name(Option<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::set_kpi_name): <p>The name of the metric, also referred to as a <i>key performance indicator (KPI)</i>, to retrieve data for. This value describes the associated metric and consists of two or more terms, which are comprised of lowercase alphanumeric characters, separated by a hyphen. Examples are email-open-rate and successful-delivery-rate. For a list of valid values, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html">Amazon Pinpoint Developer Guide</a>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::set_next_token): <p>The string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::GetCampaignDateRangeKpi::set_start_time): <p>The first date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This value should also be fewer than 90 days from the current day.</p>
    /// - On success, responds with [`GetCampaignDateRangeKpiOutput`](crate::output::GetCampaignDateRangeKpiOutput) with field(s):
    ///   - [`campaign_date_range_kpi_response(Option<CampaignDateRangeKpiResponse>)`](crate::output::GetCampaignDateRangeKpiOutput::campaign_date_range_kpi_response): <p>Provides the results of a query that retrieved the data for a standard metric that applies to a campaign, and provides information about that query.</p>
    /// - On failure, responds with [`SdkError<GetCampaignDateRangeKpiError>`](crate::error::GetCampaignDateRangeKpiError)
    pub fn get_campaign_date_range_kpi(
        &self,
    ) -> crate::client::fluent_builders::GetCampaignDateRangeKpi {
        crate::client::fluent_builders::GetCampaignDateRangeKpi::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCampaigns`](crate::client::fluent_builders::GetCampaigns) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaigns::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetCampaigns::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetCampaigns::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetCampaigns::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetCampaigns::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetCampaigns::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetCampaignsOutput`](crate::output::GetCampaignsOutput) with field(s):
    ///   - [`campaigns_response(Option<CampaignsResponse>)`](crate::output::GetCampaignsOutput::campaigns_response): <p>Provides information about the configuration and other settings for all the campaigns that are associated with an application.</p>
    /// - On failure, responds with [`SdkError<GetCampaignsError>`](crate::error::GetCampaignsError)
    pub fn get_campaigns(&self) -> crate::client::fluent_builders::GetCampaigns {
        crate::client::fluent_builders::GetCampaigns::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCampaignVersion`](crate::client::fluent_builders::GetCampaignVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaignVersion::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetCampaignVersion::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`campaign_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaignVersion::campaign_id) / [`set_campaign_id(Option<String>)`](crate::client::fluent_builders::GetCampaignVersion::set_campaign_id): <p>The unique identifier for the campaign.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::GetCampaignVersion::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::GetCampaignVersion::set_version): <p>The unique version number (Version property) for the campaign version.</p>
    /// - On success, responds with [`GetCampaignVersionOutput`](crate::output::GetCampaignVersionOutput) with field(s):
    ///   - [`campaign_response(Option<CampaignResponse>)`](crate::output::GetCampaignVersionOutput::campaign_response): <p>Provides information about the status, configuration, and other settings for a campaign.</p>
    /// - On failure, responds with [`SdkError<GetCampaignVersionError>`](crate::error::GetCampaignVersionError)
    pub fn get_campaign_version(&self) -> crate::client::fluent_builders::GetCampaignVersion {
        crate::client::fluent_builders::GetCampaignVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCampaignVersions`](crate::client::fluent_builders::GetCampaignVersions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaignVersions::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetCampaignVersions::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`campaign_id(impl Into<String>)`](crate::client::fluent_builders::GetCampaignVersions::campaign_id) / [`set_campaign_id(Option<String>)`](crate::client::fluent_builders::GetCampaignVersions::set_campaign_id): <p>The unique identifier for the campaign.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetCampaignVersions::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetCampaignVersions::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetCampaignVersions::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetCampaignVersions::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetCampaignVersionsOutput`](crate::output::GetCampaignVersionsOutput) with field(s):
    ///   - [`campaigns_response(Option<CampaignsResponse>)`](crate::output::GetCampaignVersionsOutput::campaigns_response): <p>Provides information about the configuration and other settings for all the campaigns that are associated with an application.</p>
    /// - On failure, responds with [`SdkError<GetCampaignVersionsError>`](crate::error::GetCampaignVersionsError)
    pub fn get_campaign_versions(&self) -> crate::client::fluent_builders::GetCampaignVersions {
        crate::client::fluent_builders::GetCampaignVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetChannels`](crate::client::fluent_builders::GetChannels) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetChannels::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetChannels::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetChannelsOutput`](crate::output::GetChannelsOutput) with field(s):
    ///   - [`channels_response(Option<ChannelsResponse>)`](crate::output::GetChannelsOutput::channels_response): <p>Provides information about the general settings and status of all channels for an application, including channels that aren't enabled for the application.</p>
    /// - On failure, responds with [`SdkError<GetChannelsError>`](crate::error::GetChannelsError)
    pub fn get_channels(&self) -> crate::client::fluent_builders::GetChannels {
        crate::client::fluent_builders::GetChannels::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEmailChannel`](crate::client::fluent_builders::GetEmailChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetEmailChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetEmailChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetEmailChannelOutput`](crate::output::GetEmailChannelOutput) with field(s):
    ///   - [`email_channel_response(Option<EmailChannelResponse>)`](crate::output::GetEmailChannelOutput::email_channel_response): <p>Provides information about the status and settings of the email channel for an application.</p>
    /// - On failure, responds with [`SdkError<GetEmailChannelError>`](crate::error::GetEmailChannelError)
    pub fn get_email_channel(&self) -> crate::client::fluent_builders::GetEmailChannel {
        crate::client::fluent_builders::GetEmailChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEmailTemplate`](crate::client::fluent_builders::GetEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetEmailTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::GetEmailTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::GetEmailTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`GetEmailTemplateOutput`](crate::output::GetEmailTemplateOutput) with field(s):
    ///   - [`email_template_response(Option<EmailTemplateResponse>)`](crate::output::GetEmailTemplateOutput::email_template_response): <p>Provides information about the content and settings for a message template that can be used in messages that are sent through the email channel.</p>
    /// - On failure, responds with [`SdkError<GetEmailTemplateError>`](crate::error::GetEmailTemplateError)
    pub fn get_email_template(&self) -> crate::client::fluent_builders::GetEmailTemplate {
        crate::client::fluent_builders::GetEmailTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEndpoint`](crate::client::fluent_builders::GetEndpoint) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetEndpoint::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetEndpoint::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`endpoint_id(impl Into<String>)`](crate::client::fluent_builders::GetEndpoint::endpoint_id) / [`set_endpoint_id(Option<String>)`](crate::client::fluent_builders::GetEndpoint::set_endpoint_id): <p>The unique identifier for the endpoint.</p>
    /// - On success, responds with [`GetEndpointOutput`](crate::output::GetEndpointOutput) with field(s):
    ///   - [`endpoint_response(Option<EndpointResponse>)`](crate::output::GetEndpointOutput::endpoint_response): <p>Provides information about the channel type and other settings for an endpoint.</p>
    /// - On failure, responds with [`SdkError<GetEndpointError>`](crate::error::GetEndpointError)
    pub fn get_endpoint(&self) -> crate::client::fluent_builders::GetEndpoint {
        crate::client::fluent_builders::GetEndpoint::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEventStream`](crate::client::fluent_builders::GetEventStream) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetEventStream::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetEventStream::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetEventStreamOutput`](crate::output::GetEventStreamOutput) with field(s):
    ///   - [`event_stream(Option<EventStream>)`](crate::output::GetEventStreamOutput::event_stream): <p>Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.</p>
    /// - On failure, responds with [`SdkError<GetEventStreamError>`](crate::error::GetEventStreamError)
    pub fn get_event_stream(&self) -> crate::client::fluent_builders::GetEventStream {
        crate::client::fluent_builders::GetEventStream::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetExportJob`](crate::client::fluent_builders::GetExportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetExportJob::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetExportJob::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`job_id(impl Into<String>)`](crate::client::fluent_builders::GetExportJob::job_id) / [`set_job_id(Option<String>)`](crate::client::fluent_builders::GetExportJob::set_job_id): <p>The unique identifier for the job.</p>
    /// - On success, responds with [`GetExportJobOutput`](crate::output::GetExportJobOutput) with field(s):
    ///   - [`export_job_response(Option<ExportJobResponse>)`](crate::output::GetExportJobOutput::export_job_response): <p>Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.</p>
    /// - On failure, responds with [`SdkError<GetExportJobError>`](crate::error::GetExportJobError)
    pub fn get_export_job(&self) -> crate::client::fluent_builders::GetExportJob {
        crate::client::fluent_builders::GetExportJob::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetExportJobs`](crate::client::fluent_builders::GetExportJobs) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetExportJobs::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetExportJobs::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetExportJobs::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetExportJobs::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetExportJobs::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetExportJobs::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetExportJobsOutput`](crate::output::GetExportJobsOutput) with field(s):
    ///   - [`export_jobs_response(Option<ExportJobsResponse>)`](crate::output::GetExportJobsOutput::export_jobs_response): <p>Provides information about all the export jobs that are associated with an application or segment. An export job is a job that exports endpoint definitions to a file.</p>
    /// - On failure, responds with [`SdkError<GetExportJobsError>`](crate::error::GetExportJobsError)
    pub fn get_export_jobs(&self) -> crate::client::fluent_builders::GetExportJobs {
        crate::client::fluent_builders::GetExportJobs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetGcmChannel`](crate::client::fluent_builders::GetGcmChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetGcmChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetGcmChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetGcmChannelOutput`](crate::output::GetGcmChannelOutput) with field(s):
    ///   - [`gcm_channel_response(Option<GcmChannelResponse>)`](crate::output::GetGcmChannelOutput::gcm_channel_response): <p>Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.</p>
    /// - On failure, responds with [`SdkError<GetGcmChannelError>`](crate::error::GetGcmChannelError)
    pub fn get_gcm_channel(&self) -> crate::client::fluent_builders::GetGcmChannel {
        crate::client::fluent_builders::GetGcmChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetImportJob`](crate::client::fluent_builders::GetImportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetImportJob::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetImportJob::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`job_id(impl Into<String>)`](crate::client::fluent_builders::GetImportJob::job_id) / [`set_job_id(Option<String>)`](crate::client::fluent_builders::GetImportJob::set_job_id): <p>The unique identifier for the job.</p>
    /// - On success, responds with [`GetImportJobOutput`](crate::output::GetImportJobOutput) with field(s):
    ///   - [`import_job_response(Option<ImportJobResponse>)`](crate::output::GetImportJobOutput::import_job_response): <p>Provides information about the status and settings of a job that imports endpoint definitions from one or more files. The files can be stored in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly from a computer by using the Amazon Pinpoint console.</p>
    /// - On failure, responds with [`SdkError<GetImportJobError>`](crate::error::GetImportJobError)
    pub fn get_import_job(&self) -> crate::client::fluent_builders::GetImportJob {
        crate::client::fluent_builders::GetImportJob::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetImportJobs`](crate::client::fluent_builders::GetImportJobs) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetImportJobs::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetImportJobs::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetImportJobs::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetImportJobs::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetImportJobs::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetImportJobs::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetImportJobsOutput`](crate::output::GetImportJobsOutput) with field(s):
    ///   - [`import_jobs_response(Option<ImportJobsResponse>)`](crate::output::GetImportJobsOutput::import_jobs_response): <p>Provides information about the status and settings of all the import jobs that are associated with an application or segment. An import job is a job that imports endpoint definitions from one or more files.</p>
    /// - On failure, responds with [`SdkError<GetImportJobsError>`](crate::error::GetImportJobsError)
    pub fn get_import_jobs(&self) -> crate::client::fluent_builders::GetImportJobs {
        crate::client::fluent_builders::GetImportJobs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetInAppMessages`](crate::client::fluent_builders::GetInAppMessages) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetInAppMessages::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetInAppMessages::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`endpoint_id(impl Into<String>)`](crate::client::fluent_builders::GetInAppMessages::endpoint_id) / [`set_endpoint_id(Option<String>)`](crate::client::fluent_builders::GetInAppMessages::set_endpoint_id): <p>The unique identifier for the endpoint.</p>
    /// - On success, responds with [`GetInAppMessagesOutput`](crate::output::GetInAppMessagesOutput) with field(s):
    ///   - [`in_app_messages_response(Option<InAppMessagesResponse>)`](crate::output::GetInAppMessagesOutput::in_app_messages_response): <p>Get in-app messages response object.</p>
    /// - On failure, responds with [`SdkError<GetInAppMessagesError>`](crate::error::GetInAppMessagesError)
    pub fn get_in_app_messages(&self) -> crate::client::fluent_builders::GetInAppMessages {
        crate::client::fluent_builders::GetInAppMessages::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetInAppTemplate`](crate::client::fluent_builders::GetInAppTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetInAppTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetInAppTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::GetInAppTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::GetInAppTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`GetInAppTemplateOutput`](crate::output::GetInAppTemplateOutput) with field(s):
    ///   - [`in_app_template_response(Option<InAppTemplateResponse>)`](crate::output::GetInAppTemplateOutput::in_app_template_response): <p>In-App Template Response.</p>
    /// - On failure, responds with [`SdkError<GetInAppTemplateError>`](crate::error::GetInAppTemplateError)
    pub fn get_in_app_template(&self) -> crate::client::fluent_builders::GetInAppTemplate {
        crate::client::fluent_builders::GetInAppTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetJourney`](crate::client::fluent_builders::GetJourney) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetJourney::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetJourney::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`journey_id(impl Into<String>)`](crate::client::fluent_builders::GetJourney::journey_id) / [`set_journey_id(Option<String>)`](crate::client::fluent_builders::GetJourney::set_journey_id): <p>The unique identifier for the journey.</p>
    /// - On success, responds with [`GetJourneyOutput`](crate::output::GetJourneyOutput) with field(s):
    ///   - [`journey_response(Option<JourneyResponse>)`](crate::output::GetJourneyOutput::journey_response): <p>Provides information about the status, configuration, and other settings for a journey.</p>
    /// - On failure, responds with [`SdkError<GetJourneyError>`](crate::error::GetJourneyError)
    pub fn get_journey(&self) -> crate::client::fluent_builders::GetJourney {
        crate::client::fluent_builders::GetJourney::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetJourneyDateRangeKpi`](crate::client::fluent_builders::GetJourneyDateRangeKpi) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::set_end_time): <p>The last date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.</p>
    ///   - [`journey_id(impl Into<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::journey_id) / [`set_journey_id(Option<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::set_journey_id): <p>The unique identifier for the journey.</p>
    ///   - [`kpi_name(impl Into<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::kpi_name) / [`set_kpi_name(Option<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::set_kpi_name): <p>The name of the metric, also referred to as a <i>key performance indicator (KPI)</i>, to retrieve data for. This value describes the associated metric and consists of two or more terms, which are comprised of lowercase alphanumeric characters, separated by a hyphen. Examples are email-open-rate and successful-delivery-rate. For a list of valid values, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html">Amazon Pinpoint Developer Guide</a>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::set_next_token): <p>The string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::GetJourneyDateRangeKpi::set_start_time): <p>The first date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This value should also be fewer than 90 days from the current day.</p>
    /// - On success, responds with [`GetJourneyDateRangeKpiOutput`](crate::output::GetJourneyDateRangeKpiOutput) with field(s):
    ///   - [`journey_date_range_kpi_response(Option<JourneyDateRangeKpiResponse>)`](crate::output::GetJourneyDateRangeKpiOutput::journey_date_range_kpi_response): <p>Provides the results of a query that retrieved the data for a standard engagement metric that applies to a journey, and provides information about that query.</p>
    /// - On failure, responds with [`SdkError<GetJourneyDateRangeKpiError>`](crate::error::GetJourneyDateRangeKpiError)
    pub fn get_journey_date_range_kpi(
        &self,
    ) -> crate::client::fluent_builders::GetJourneyDateRangeKpi {
        crate::client::fluent_builders::GetJourneyDateRangeKpi::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetJourneyExecutionActivityMetrics`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`journey_activity_id(impl Into<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::journey_activity_id) / [`set_journey_activity_id(Option<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::set_journey_activity_id): <p>The unique identifier for the journey activity.</p>
    ///   - [`journey_id(impl Into<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::journey_id) / [`set_journey_id(Option<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::set_journey_id): <p>The unique identifier for the journey.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::set_next_token): <p>The string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    /// - On success, responds with [`GetJourneyExecutionActivityMetricsOutput`](crate::output::GetJourneyExecutionActivityMetricsOutput) with field(s):
    ///   - [`journey_execution_activity_metrics_response(Option<JourneyExecutionActivityMetricsResponse>)`](crate::output::GetJourneyExecutionActivityMetricsOutput::journey_execution_activity_metrics_response): <p>Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey activity, and provides information about that query.</p>
    /// - On failure, responds with [`SdkError<GetJourneyExecutionActivityMetricsError>`](crate::error::GetJourneyExecutionActivityMetricsError)
    pub fn get_journey_execution_activity_metrics(
        &self,
    ) -> crate::client::fluent_builders::GetJourneyExecutionActivityMetrics {
        crate::client::fluent_builders::GetJourneyExecutionActivityMetrics::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetJourneyExecutionMetrics`](crate::client::fluent_builders::GetJourneyExecutionMetrics) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetJourneyExecutionMetrics::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetJourneyExecutionMetrics::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`journey_id(impl Into<String>)`](crate::client::fluent_builders::GetJourneyExecutionMetrics::journey_id) / [`set_journey_id(Option<String>)`](crate::client::fluent_builders::GetJourneyExecutionMetrics::set_journey_id): <p>The unique identifier for the journey.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetJourneyExecutionMetrics::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetJourneyExecutionMetrics::set_next_token): <p>The string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetJourneyExecutionMetrics::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetJourneyExecutionMetrics::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    /// - On success, responds with [`GetJourneyExecutionMetricsOutput`](crate::output::GetJourneyExecutionMetricsOutput) with field(s):
    ///   - [`journey_execution_metrics_response(Option<JourneyExecutionMetricsResponse>)`](crate::output::GetJourneyExecutionMetricsOutput::journey_execution_metrics_response): <p>Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey, and provides information about that query.</p>
    /// - On failure, responds with [`SdkError<GetJourneyExecutionMetricsError>`](crate::error::GetJourneyExecutionMetricsError)
    pub fn get_journey_execution_metrics(
        &self,
    ) -> crate::client::fluent_builders::GetJourneyExecutionMetrics {
        crate::client::fluent_builders::GetJourneyExecutionMetrics::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetPushTemplate`](crate::client::fluent_builders::GetPushTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetPushTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetPushTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::GetPushTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::GetPushTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`GetPushTemplateOutput`](crate::output::GetPushTemplateOutput) with field(s):
    ///   - [`push_notification_template_response(Option<PushNotificationTemplateResponse>)`](crate::output::GetPushTemplateOutput::push_notification_template_response): <p>Provides information about the content and settings for a message template that can be used in messages that are sent through a push notification channel.</p>
    /// - On failure, responds with [`SdkError<GetPushTemplateError>`](crate::error::GetPushTemplateError)
    pub fn get_push_template(&self) -> crate::client::fluent_builders::GetPushTemplate {
        crate::client::fluent_builders::GetPushTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetRecommenderConfiguration`](crate::client::fluent_builders::GetRecommenderConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`recommender_id(impl Into<String>)`](crate::client::fluent_builders::GetRecommenderConfiguration::recommender_id) / [`set_recommender_id(Option<String>)`](crate::client::fluent_builders::GetRecommenderConfiguration::set_recommender_id): <p>The unique identifier for the recommender model configuration. This identifier is displayed as the <b>Recommender ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetRecommenderConfigurationOutput`](crate::output::GetRecommenderConfigurationOutput) with field(s):
    ///   - [`recommender_configuration_response(Option<RecommenderConfigurationResponse>)`](crate::output::GetRecommenderConfigurationOutput::recommender_configuration_response): <p>Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.</p>
    /// - On failure, responds with [`SdkError<GetRecommenderConfigurationError>`](crate::error::GetRecommenderConfigurationError)
    pub fn get_recommender_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetRecommenderConfiguration {
        crate::client::fluent_builders::GetRecommenderConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetRecommenderConfigurations`](crate::client::fluent_builders::GetRecommenderConfigurations) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetRecommenderConfigurations::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetRecommenderConfigurations::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetRecommenderConfigurations::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetRecommenderConfigurations::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetRecommenderConfigurationsOutput`](crate::output::GetRecommenderConfigurationsOutput) with field(s):
    ///   - [`list_recommender_configurations_response(Option<ListRecommenderConfigurationsResponse>)`](crate::output::GetRecommenderConfigurationsOutput::list_recommender_configurations_response): <p>Provides information about all the recommender model configurations that are associated with your Amazon Pinpoint account.</p>
    /// - On failure, responds with [`SdkError<GetRecommenderConfigurationsError>`](crate::error::GetRecommenderConfigurationsError)
    pub fn get_recommender_configurations(
        &self,
    ) -> crate::client::fluent_builders::GetRecommenderConfigurations {
        crate::client::fluent_builders::GetRecommenderConfigurations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSegment`](crate::client::fluent_builders::GetSegment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetSegment::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetSegment::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`segment_id(impl Into<String>)`](crate::client::fluent_builders::GetSegment::segment_id) / [`set_segment_id(Option<String>)`](crate::client::fluent_builders::GetSegment::set_segment_id): <p>The unique identifier for the segment.</p>
    /// - On success, responds with [`GetSegmentOutput`](crate::output::GetSegmentOutput) with field(s):
    ///   - [`segment_response(Option<SegmentResponse>)`](crate::output::GetSegmentOutput::segment_response): <p>Provides information about the configuration, dimension, and other settings for a segment.</p>
    /// - On failure, responds with [`SdkError<GetSegmentError>`](crate::error::GetSegmentError)
    pub fn get_segment(&self) -> crate::client::fluent_builders::GetSegment {
        crate::client::fluent_builders::GetSegment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSegmentExportJobs`](crate::client::fluent_builders::GetSegmentExportJobs) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetSegmentExportJobs::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetSegmentExportJobs::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetSegmentExportJobs::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetSegmentExportJobs::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`segment_id(impl Into<String>)`](crate::client::fluent_builders::GetSegmentExportJobs::segment_id) / [`set_segment_id(Option<String>)`](crate::client::fluent_builders::GetSegmentExportJobs::set_segment_id): <p>The unique identifier for the segment.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetSegmentExportJobs::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetSegmentExportJobs::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetSegmentExportJobsOutput`](crate::output::GetSegmentExportJobsOutput) with field(s):
    ///   - [`export_jobs_response(Option<ExportJobsResponse>)`](crate::output::GetSegmentExportJobsOutput::export_jobs_response): <p>Provides information about all the export jobs that are associated with an application or segment. An export job is a job that exports endpoint definitions to a file.</p>
    /// - On failure, responds with [`SdkError<GetSegmentExportJobsError>`](crate::error::GetSegmentExportJobsError)
    pub fn get_segment_export_jobs(&self) -> crate::client::fluent_builders::GetSegmentExportJobs {
        crate::client::fluent_builders::GetSegmentExportJobs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSegmentImportJobs`](crate::client::fluent_builders::GetSegmentImportJobs) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetSegmentImportJobs::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetSegmentImportJobs::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetSegmentImportJobs::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetSegmentImportJobs::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`segment_id(impl Into<String>)`](crate::client::fluent_builders::GetSegmentImportJobs::segment_id) / [`set_segment_id(Option<String>)`](crate::client::fluent_builders::GetSegmentImportJobs::set_segment_id): <p>The unique identifier for the segment.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetSegmentImportJobs::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetSegmentImportJobs::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetSegmentImportJobsOutput`](crate::output::GetSegmentImportJobsOutput) with field(s):
    ///   - [`import_jobs_response(Option<ImportJobsResponse>)`](crate::output::GetSegmentImportJobsOutput::import_jobs_response): <p>Provides information about the status and settings of all the import jobs that are associated with an application or segment. An import job is a job that imports endpoint definitions from one or more files.</p>
    /// - On failure, responds with [`SdkError<GetSegmentImportJobsError>`](crate::error::GetSegmentImportJobsError)
    pub fn get_segment_import_jobs(&self) -> crate::client::fluent_builders::GetSegmentImportJobs {
        crate::client::fluent_builders::GetSegmentImportJobs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSegments`](crate::client::fluent_builders::GetSegments) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetSegments::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetSegments::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetSegments::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetSegments::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetSegments::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetSegments::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetSegmentsOutput`](crate::output::GetSegmentsOutput) with field(s):
    ///   - [`segments_response(Option<SegmentsResponse>)`](crate::output::GetSegmentsOutput::segments_response): <p>Provides information about all the segments that are associated with an application.</p>
    /// - On failure, responds with [`SdkError<GetSegmentsError>`](crate::error::GetSegmentsError)
    pub fn get_segments(&self) -> crate::client::fluent_builders::GetSegments {
        crate::client::fluent_builders::GetSegments::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSegmentVersion`](crate::client::fluent_builders::GetSegmentVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetSegmentVersion::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetSegmentVersion::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`segment_id(impl Into<String>)`](crate::client::fluent_builders::GetSegmentVersion::segment_id) / [`set_segment_id(Option<String>)`](crate::client::fluent_builders::GetSegmentVersion::set_segment_id): <p>The unique identifier for the segment.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::GetSegmentVersion::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::GetSegmentVersion::set_version): <p>The unique version number (Version property) for the campaign version.</p>
    /// - On success, responds with [`GetSegmentVersionOutput`](crate::output::GetSegmentVersionOutput) with field(s):
    ///   - [`segment_response(Option<SegmentResponse>)`](crate::output::GetSegmentVersionOutput::segment_response): <p>Provides information about the configuration, dimension, and other settings for a segment.</p>
    /// - On failure, responds with [`SdkError<GetSegmentVersionError>`](crate::error::GetSegmentVersionError)
    pub fn get_segment_version(&self) -> crate::client::fluent_builders::GetSegmentVersion {
        crate::client::fluent_builders::GetSegmentVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSegmentVersions`](crate::client::fluent_builders::GetSegmentVersions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetSegmentVersions::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetSegmentVersions::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::GetSegmentVersions::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::GetSegmentVersions::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`segment_id(impl Into<String>)`](crate::client::fluent_builders::GetSegmentVersions::segment_id) / [`set_segment_id(Option<String>)`](crate::client::fluent_builders::GetSegmentVersions::set_segment_id): <p>The unique identifier for the segment.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::GetSegmentVersions::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::GetSegmentVersions::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetSegmentVersionsOutput`](crate::output::GetSegmentVersionsOutput) with field(s):
    ///   - [`segments_response(Option<SegmentsResponse>)`](crate::output::GetSegmentVersionsOutput::segments_response): <p>Provides information about all the segments that are associated with an application.</p>
    /// - On failure, responds with [`SdkError<GetSegmentVersionsError>`](crate::error::GetSegmentVersionsError)
    pub fn get_segment_versions(&self) -> crate::client::fluent_builders::GetSegmentVersions {
        crate::client::fluent_builders::GetSegmentVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSmsChannel`](crate::client::fluent_builders::GetSmsChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetSmsChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetSmsChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetSmsChannelOutput`](crate::output::GetSmsChannelOutput) with field(s):
    ///   - [`sms_channel_response(Option<SmsChannelResponse>)`](crate::output::GetSmsChannelOutput::sms_channel_response): <p>Provides information about the status and settings of the SMS channel for an application.</p>
    /// - On failure, responds with [`SdkError<GetSmsChannelError>`](crate::error::GetSmsChannelError)
    pub fn get_sms_channel(&self) -> crate::client::fluent_builders::GetSmsChannel {
        crate::client::fluent_builders::GetSmsChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSmsTemplate`](crate::client::fluent_builders::GetSmsTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetSmsTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetSmsTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::GetSmsTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::GetSmsTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`GetSmsTemplateOutput`](crate::output::GetSmsTemplateOutput) with field(s):
    ///   - [`sms_template_response(Option<SmsTemplateResponse>)`](crate::output::GetSmsTemplateOutput::sms_template_response): <p>Provides information about the content and settings for a message template that can be used in text messages that are sent through the SMS channel.</p>
    /// - On failure, responds with [`SdkError<GetSmsTemplateError>`](crate::error::GetSmsTemplateError)
    pub fn get_sms_template(&self) -> crate::client::fluent_builders::GetSmsTemplate {
        crate::client::fluent_builders::GetSmsTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetUserEndpoints`](crate::client::fluent_builders::GetUserEndpoints) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetUserEndpoints::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetUserEndpoints::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`user_id(impl Into<String>)`](crate::client::fluent_builders::GetUserEndpoints::user_id) / [`set_user_id(Option<String>)`](crate::client::fluent_builders::GetUserEndpoints::set_user_id): <p>The unique identifier for the user.</p>
    /// - On success, responds with [`GetUserEndpointsOutput`](crate::output::GetUserEndpointsOutput) with field(s):
    ///   - [`endpoints_response(Option<EndpointsResponse>)`](crate::output::GetUserEndpointsOutput::endpoints_response): <p>Provides information about all the endpoints that are associated with a user ID.</p>
    /// - On failure, responds with [`SdkError<GetUserEndpointsError>`](crate::error::GetUserEndpointsError)
    pub fn get_user_endpoints(&self) -> crate::client::fluent_builders::GetUserEndpoints {
        crate::client::fluent_builders::GetUserEndpoints::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetVoiceChannel`](crate::client::fluent_builders::GetVoiceChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::GetVoiceChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`GetVoiceChannelOutput`](crate::output::GetVoiceChannelOutput) with field(s):
    ///   - [`voice_channel_response(Option<VoiceChannelResponse>)`](crate::output::GetVoiceChannelOutput::voice_channel_response): <p>Provides information about the status and settings of the voice channel for an application.</p>
    /// - On failure, responds with [`SdkError<GetVoiceChannelError>`](crate::error::GetVoiceChannelError)
    pub fn get_voice_channel(&self) -> crate::client::fluent_builders::GetVoiceChannel {
        crate::client::fluent_builders::GetVoiceChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetVoiceTemplate`](crate::client::fluent_builders::GetVoiceTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetVoiceTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetVoiceTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::GetVoiceTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::GetVoiceTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`GetVoiceTemplateOutput`](crate::output::GetVoiceTemplateOutput) with field(s):
    ///   - [`voice_template_response(Option<VoiceTemplateResponse>)`](crate::output::GetVoiceTemplateOutput::voice_template_response): <p>Provides information about the content and settings for a message template that can be used in messages that are sent through the voice channel.</p>
    /// - On failure, responds with [`SdkError<GetVoiceTemplateError>`](crate::error::GetVoiceTemplateError)
    pub fn get_voice_template(&self) -> crate::client::fluent_builders::GetVoiceTemplate {
        crate::client::fluent_builders::GetVoiceTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListJourneys`](crate::client::fluent_builders::ListJourneys) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::ListJourneys::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::ListJourneys::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::ListJourneys::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::ListJourneys::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::ListJourneys::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::ListJourneys::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`ListJourneysOutput`](crate::output::ListJourneysOutput) with field(s):
    ///   - [`journeys_response(Option<JourneysResponse>)`](crate::output::ListJourneysOutput::journeys_response): <p>Provides information about the status, configuration, and other settings for all the journeys that are associated with an application.</p>
    /// - On failure, responds with [`SdkError<ListJourneysError>`](crate::error::ListJourneysError)
    pub fn list_journeys(&self) -> crate::client::fluent_builders::ListJourneys {
        crate::client::fluent_builders::ListJourneys::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags_model(Option<TagsModel>)`](crate::output::ListTagsForResourceOutput::tags_model): <p>Specifies the tags (keys and values) for an application, campaign, message template, or segment.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTemplates`](crate::client::fluent_builders::ListTemplates) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTemplates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTemplates::set_next_token): <p>The string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::ListTemplates::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::ListTemplates::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`prefix(impl Into<String>)`](crate::client::fluent_builders::ListTemplates::prefix) / [`set_prefix(Option<String>)`](crate::client::fluent_builders::ListTemplates::set_prefix): <p>The substring to match in the names of the message templates to include in the results. If you specify this value, Amazon Pinpoint returns only those templates whose names begin with the value that you specify.</p>
    ///   - [`template_type(impl Into<String>)`](crate::client::fluent_builders::ListTemplates::template_type) / [`set_template_type(Option<String>)`](crate::client::fluent_builders::ListTemplates::set_template_type): <p>The type of message template to include in the results. Valid values are: EMAIL, PUSH, SMS, and VOICE. To include all types of templates in the results, don't include this parameter in your request.</p>
    /// - On success, responds with [`ListTemplatesOutput`](crate::output::ListTemplatesOutput) with field(s):
    ///   - [`templates_response(Option<TemplatesResponse>)`](crate::output::ListTemplatesOutput::templates_response): <p>Provides information about all the message templates that are associated with your Amazon Pinpoint account.</p>
    /// - On failure, responds with [`SdkError<ListTemplatesError>`](crate::error::ListTemplatesError)
    pub fn list_templates(&self) -> crate::client::fluent_builders::ListTemplates {
        crate::client::fluent_builders::ListTemplates::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTemplateVersions`](crate::client::fluent_builders::ListTemplateVersions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTemplateVersions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTemplateVersions::set_next_token): <p>The string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`page_size(impl Into<String>)`](crate::client::fluent_builders::ListTemplateVersions::page_size) / [`set_page_size(Option<String>)`](crate::client::fluent_builders::ListTemplateVersions::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::ListTemplateVersions::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::ListTemplateVersions::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`template_type(impl Into<String>)`](crate::client::fluent_builders::ListTemplateVersions::template_type) / [`set_template_type(Option<String>)`](crate::client::fluent_builders::ListTemplateVersions::set_template_type): <p>The type of channel that the message template is designed for. Valid values are: EMAIL, PUSH, SMS, and VOICE.</p>
    /// - On success, responds with [`ListTemplateVersionsOutput`](crate::output::ListTemplateVersionsOutput) with field(s):
    ///   - [`template_versions_response(Option<TemplateVersionsResponse>)`](crate::output::ListTemplateVersionsOutput::template_versions_response): <p>Provides information about all the versions of a specific message template.</p>
    /// - On failure, responds with [`SdkError<ListTemplateVersionsError>`](crate::error::ListTemplateVersionsError)
    pub fn list_template_versions(&self) -> crate::client::fluent_builders::ListTemplateVersions {
        crate::client::fluent_builders::ListTemplateVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PhoneNumberValidate`](crate::client::fluent_builders::PhoneNumberValidate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`number_validate_request(NumberValidateRequest)`](crate::client::fluent_builders::PhoneNumberValidate::number_validate_request) / [`set_number_validate_request(Option<NumberValidateRequest>)`](crate::client::fluent_builders::PhoneNumberValidate::set_number_validate_request): <p>Specifies a phone number to validate and retrieve information about.</p>
    /// - On success, responds with [`PhoneNumberValidateOutput`](crate::output::PhoneNumberValidateOutput) with field(s):
    ///   - [`number_validate_response(Option<NumberValidateResponse>)`](crate::output::PhoneNumberValidateOutput::number_validate_response): <p>Provides information about a phone number.</p>
    /// - On failure, responds with [`SdkError<PhoneNumberValidateError>`](crate::error::PhoneNumberValidateError)
    pub fn phone_number_validate(&self) -> crate::client::fluent_builders::PhoneNumberValidate {
        crate::client::fluent_builders::PhoneNumberValidate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutEvents`](crate::client::fluent_builders::PutEvents) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::PutEvents::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::PutEvents::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`events_request(EventsRequest)`](crate::client::fluent_builders::PutEvents::events_request) / [`set_events_request(Option<EventsRequest>)`](crate::client::fluent_builders::PutEvents::set_events_request): <p>Specifies a batch of events to process.</p>
    /// - On success, responds with [`PutEventsOutput`](crate::output::PutEventsOutput) with field(s):
    ///   - [`events_response(Option<EventsResponse>)`](crate::output::PutEventsOutput::events_response): <p>Provides information about endpoints and the events that they're associated with.</p>
    /// - On failure, responds with [`SdkError<PutEventsError>`](crate::error::PutEventsError)
    pub fn put_events(&self) -> crate::client::fluent_builders::PutEvents {
        crate::client::fluent_builders::PutEvents::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutEventStream`](crate::client::fluent_builders::PutEventStream) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::PutEventStream::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::PutEventStream::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`write_event_stream(WriteEventStream)`](crate::client::fluent_builders::PutEventStream::write_event_stream) / [`set_write_event_stream(Option<WriteEventStream>)`](crate::client::fluent_builders::PutEventStream::set_write_event_stream): <p>Specifies the Amazon Resource Name (ARN) of an event stream to publish events to and the AWS Identity and Access Management (IAM) role to use when publishing those events.</p>
    /// - On success, responds with [`PutEventStreamOutput`](crate::output::PutEventStreamOutput) with field(s):
    ///   - [`event_stream(Option<EventStream>)`](crate::output::PutEventStreamOutput::event_stream): <p>Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.</p>
    /// - On failure, responds with [`SdkError<PutEventStreamError>`](crate::error::PutEventStreamError)
    pub fn put_event_stream(&self) -> crate::client::fluent_builders::PutEventStream {
        crate::client::fluent_builders::PutEventStream::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RemoveAttributes`](crate::client::fluent_builders::RemoveAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::RemoveAttributes::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::RemoveAttributes::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`attribute_type(impl Into<String>)`](crate::client::fluent_builders::RemoveAttributes::attribute_type) / [`set_attribute_type(Option<String>)`](crate::client::fluent_builders::RemoveAttributes::set_attribute_type): <p>The type of attribute or attributes to remove. Valid values are:</p>  <ul>  <li><p>endpoint-custom-attributes - Custom attributes that describe endpoints, such as the date when an associated user opted in or out of receiving communications from you through a specific type of channel.</p></li>   <li><p>endpoint-metric-attributes - Custom metrics that your app reports to Amazon Pinpoint for endpoints, such as the number of app sessions or the number of items left in a cart.</p></li>   <li><p>endpoint-user-attributes - Custom attributes that describe users, such as first name, last name, and age.</p></li> </ul>
    ///   - [`update_attributes_request(UpdateAttributesRequest)`](crate::client::fluent_builders::RemoveAttributes::update_attributes_request) / [`set_update_attributes_request(Option<UpdateAttributesRequest>)`](crate::client::fluent_builders::RemoveAttributes::set_update_attributes_request): <p>Specifies one or more attributes to remove from all the endpoints that are associated with an application.</p>
    /// - On success, responds with [`RemoveAttributesOutput`](crate::output::RemoveAttributesOutput) with field(s):
    ///   - [`attributes_resource(Option<AttributesResource>)`](crate::output::RemoveAttributesOutput::attributes_resource): <p>Provides information about the type and the names of attributes that were removed from all the endpoints that are associated with an application.</p>
    /// - On failure, responds with [`SdkError<RemoveAttributesError>`](crate::error::RemoveAttributesError)
    pub fn remove_attributes(&self) -> crate::client::fluent_builders::RemoveAttributes {
        crate::client::fluent_builders::RemoveAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendMessages`](crate::client::fluent_builders::SendMessages) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::SendMessages::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::SendMessages::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`message_request(MessageRequest)`](crate::client::fluent_builders::SendMessages::message_request) / [`set_message_request(Option<MessageRequest>)`](crate::client::fluent_builders::SendMessages::set_message_request): <p>Specifies the configuration and other settings for a message.</p>
    /// - On success, responds with [`SendMessagesOutput`](crate::output::SendMessagesOutput) with field(s):
    ///   - [`message_response(Option<MessageResponse>)`](crate::output::SendMessagesOutput::message_response): <p>Provides information about the results of a request to send a message to an endpoint address.</p>
    /// - On failure, responds with [`SdkError<SendMessagesError>`](crate::error::SendMessagesError)
    pub fn send_messages(&self) -> crate::client::fluent_builders::SendMessages {
        crate::client::fluent_builders::SendMessages::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendOTPMessage`](crate::client::fluent_builders::SendOTPMessage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::SendOTPMessage::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::SendOTPMessage::set_application_id): <p>The unique ID of your Amazon Pinpoint application.</p>
    ///   - [`send_otp_message_request_parameters(SendOtpMessageRequestParameters)`](crate::client::fluent_builders::SendOTPMessage::send_otp_message_request_parameters) / [`set_send_otp_message_request_parameters(Option<SendOtpMessageRequestParameters>)`](crate::client::fluent_builders::SendOTPMessage::set_send_otp_message_request_parameters): <p>Send OTP message request parameters.</p>
    /// - On success, responds with [`SendOtpMessageOutput`](crate::output::SendOtpMessageOutput) with field(s):
    ///   - [`message_response(Option<MessageResponse>)`](crate::output::SendOtpMessageOutput::message_response): <p>Provides information about the results of a request to send a message to an endpoint address.</p>
    /// - On failure, responds with [`SdkError<SendOTPMessageError>`](crate::error::SendOTPMessageError)
    pub fn send_otp_message(&self) -> crate::client::fluent_builders::SendOTPMessage {
        crate::client::fluent_builders::SendOTPMessage::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendUsersMessages`](crate::client::fluent_builders::SendUsersMessages) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::SendUsersMessages::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::SendUsersMessages::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`send_users_message_request(SendUsersMessageRequest)`](crate::client::fluent_builders::SendUsersMessages::send_users_message_request) / [`set_send_users_message_request(Option<SendUsersMessageRequest>)`](crate::client::fluent_builders::SendUsersMessages::set_send_users_message_request): <p>Specifies the configuration and other settings for a message to send to all the endpoints that are associated with a list of users.</p>
    /// - On success, responds with [`SendUsersMessagesOutput`](crate::output::SendUsersMessagesOutput) with field(s):
    ///   - [`send_users_message_response(Option<SendUsersMessageResponse>)`](crate::output::SendUsersMessagesOutput::send_users_message_response): <p>Provides information about which users and endpoints a message was sent to.</p>
    /// - On failure, responds with [`SdkError<SendUsersMessagesError>`](crate::error::SendUsersMessagesError)
    pub fn send_users_messages(&self) -> crate::client::fluent_builders::SendUsersMessages {
        crate::client::fluent_builders::SendUsersMessages::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource.</p>
    ///   - [`tags_model(TagsModel)`](crate::client::fluent_builders::TagResource::tags_model) / [`set_tags_model(Option<TagsModel>)`](crate::client::fluent_builders::TagResource::set_tags_model): <p>Specifies the tags (keys and values) for an application, campaign, message template, or segment.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>The key of the tag to remove from the resource. To remove multiple tags, append the tagKeys parameter and argument for each additional tag to remove, separated by an ampersand (&amp;).</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAdmChannel`](crate::client::fluent_builders::UpdateAdmChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`adm_channel_request(AdmChannelRequest)`](crate::client::fluent_builders::UpdateAdmChannel::adm_channel_request) / [`set_adm_channel_request(Option<AdmChannelRequest>)`](crate::client::fluent_builders::UpdateAdmChannel::set_adm_channel_request): <p>Specifies the status and settings of the ADM (Amazon Device Messaging) channel for an application.</p>
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateAdmChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateAdmChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`UpdateAdmChannelOutput`](crate::output::UpdateAdmChannelOutput) with field(s):
    ///   - [`adm_channel_response(Option<AdmChannelResponse>)`](crate::output::UpdateAdmChannelOutput::adm_channel_response): <p>Provides information about the status and settings of the ADM (Amazon Device Messaging) channel for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateAdmChannelError>`](crate::error::UpdateAdmChannelError)
    pub fn update_adm_channel(&self) -> crate::client::fluent_builders::UpdateAdmChannel {
        crate::client::fluent_builders::UpdateAdmChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateApnsChannel`](crate::client::fluent_builders::UpdateApnsChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`apns_channel_request(ApnsChannelRequest)`](crate::client::fluent_builders::UpdateApnsChannel::apns_channel_request) / [`set_apns_channel_request(Option<ApnsChannelRequest>)`](crate::client::fluent_builders::UpdateApnsChannel::set_apns_channel_request): <p>Specifies the status and settings of the APNs (Apple Push Notification service) channel for an application.</p>
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateApnsChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateApnsChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`UpdateApnsChannelOutput`](crate::output::UpdateApnsChannelOutput) with field(s):
    ///   - [`apns_channel_response(Option<ApnsChannelResponse>)`](crate::output::UpdateApnsChannelOutput::apns_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) channel for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateApnsChannelError>`](crate::error::UpdateApnsChannelError)
    pub fn update_apns_channel(&self) -> crate::client::fluent_builders::UpdateApnsChannel {
        crate::client::fluent_builders::UpdateApnsChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateApnsSandboxChannel`](crate::client::fluent_builders::UpdateApnsSandboxChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`apns_sandbox_channel_request(ApnsSandboxChannelRequest)`](crate::client::fluent_builders::UpdateApnsSandboxChannel::apns_sandbox_channel_request) / [`set_apns_sandbox_channel_request(Option<ApnsSandboxChannelRequest>)`](crate::client::fluent_builders::UpdateApnsSandboxChannel::set_apns_sandbox_channel_request): <p>Specifies the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.</p>
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateApnsSandboxChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateApnsSandboxChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`UpdateApnsSandboxChannelOutput`](crate::output::UpdateApnsSandboxChannelOutput) with field(s):
    ///   - [`apns_sandbox_channel_response(Option<ApnsSandboxChannelResponse>)`](crate::output::UpdateApnsSandboxChannelOutput::apns_sandbox_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateApnsSandboxChannelError>`](crate::error::UpdateApnsSandboxChannelError)
    pub fn update_apns_sandbox_channel(
        &self,
    ) -> crate::client::fluent_builders::UpdateApnsSandboxChannel {
        crate::client::fluent_builders::UpdateApnsSandboxChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateApnsVoipChannel`](crate::client::fluent_builders::UpdateApnsVoipChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`apns_voip_channel_request(ApnsVoipChannelRequest)`](crate::client::fluent_builders::UpdateApnsVoipChannel::apns_voip_channel_request) / [`set_apns_voip_channel_request(Option<ApnsVoipChannelRequest>)`](crate::client::fluent_builders::UpdateApnsVoipChannel::set_apns_voip_channel_request): <p>Specifies the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.</p>
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateApnsVoipChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateApnsVoipChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`UpdateApnsVoipChannelOutput`](crate::output::UpdateApnsVoipChannelOutput) with field(s):
    ///   - [`apns_voip_channel_response(Option<ApnsVoipChannelResponse>)`](crate::output::UpdateApnsVoipChannelOutput::apns_voip_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateApnsVoipChannelError>`](crate::error::UpdateApnsVoipChannelError)
    pub fn update_apns_voip_channel(
        &self,
    ) -> crate::client::fluent_builders::UpdateApnsVoipChannel {
        crate::client::fluent_builders::UpdateApnsVoipChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateApnsVoipSandboxChannel`](crate::client::fluent_builders::UpdateApnsVoipSandboxChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`apns_voip_sandbox_channel_request(ApnsVoipSandboxChannelRequest)`](crate::client::fluent_builders::UpdateApnsVoipSandboxChannel::apns_voip_sandbox_channel_request) / [`set_apns_voip_sandbox_channel_request(Option<ApnsVoipSandboxChannelRequest>)`](crate::client::fluent_builders::UpdateApnsVoipSandboxChannel::set_apns_voip_sandbox_channel_request): <p>Specifies the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.</p>
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateApnsVoipSandboxChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateApnsVoipSandboxChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    /// - On success, responds with [`UpdateApnsVoipSandboxChannelOutput`](crate::output::UpdateApnsVoipSandboxChannelOutput) with field(s):
    ///   - [`apns_voip_sandbox_channel_response(Option<ApnsVoipSandboxChannelResponse>)`](crate::output::UpdateApnsVoipSandboxChannelOutput::apns_voip_sandbox_channel_response): <p>Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateApnsVoipSandboxChannelError>`](crate::error::UpdateApnsVoipSandboxChannelError)
    pub fn update_apns_voip_sandbox_channel(
        &self,
    ) -> crate::client::fluent_builders::UpdateApnsVoipSandboxChannel {
        crate::client::fluent_builders::UpdateApnsVoipSandboxChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateApplicationSettings`](crate::client::fluent_builders::UpdateApplicationSettings) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateApplicationSettings::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateApplicationSettings::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`write_application_settings_request(WriteApplicationSettingsRequest)`](crate::client::fluent_builders::UpdateApplicationSettings::write_application_settings_request) / [`set_write_application_settings_request(Option<WriteApplicationSettingsRequest>)`](crate::client::fluent_builders::UpdateApplicationSettings::set_write_application_settings_request): <p>Specifies the default settings for an application.</p>
    /// - On success, responds with [`UpdateApplicationSettingsOutput`](crate::output::UpdateApplicationSettingsOutput) with field(s):
    ///   - [`application_settings_resource(Option<ApplicationSettingsResource>)`](crate::output::UpdateApplicationSettingsOutput::application_settings_resource): <p>Provides information about an application, including the default settings for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateApplicationSettingsError>`](crate::error::UpdateApplicationSettingsError)
    pub fn update_application_settings(
        &self,
    ) -> crate::client::fluent_builders::UpdateApplicationSettings {
        crate::client::fluent_builders::UpdateApplicationSettings::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateBaiduChannel`](crate::client::fluent_builders::UpdateBaiduChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateBaiduChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateBaiduChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`baidu_channel_request(BaiduChannelRequest)`](crate::client::fluent_builders::UpdateBaiduChannel::baidu_channel_request) / [`set_baidu_channel_request(Option<BaiduChannelRequest>)`](crate::client::fluent_builders::UpdateBaiduChannel::set_baidu_channel_request): <p>Specifies the status and settings of the Baidu (Baidu Cloud Push) channel for an application.</p>
    /// - On success, responds with [`UpdateBaiduChannelOutput`](crate::output::UpdateBaiduChannelOutput) with field(s):
    ///   - [`baidu_channel_response(Option<BaiduChannelResponse>)`](crate::output::UpdateBaiduChannelOutput::baidu_channel_response): <p>Provides information about the status and settings of the Baidu (Baidu Cloud Push) channel for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateBaiduChannelError>`](crate::error::UpdateBaiduChannelError)
    pub fn update_baidu_channel(&self) -> crate::client::fluent_builders::UpdateBaiduChannel {
        crate::client::fluent_builders::UpdateBaiduChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateCampaign`](crate::client::fluent_builders::UpdateCampaign) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateCampaign::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateCampaign::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`campaign_id(impl Into<String>)`](crate::client::fluent_builders::UpdateCampaign::campaign_id) / [`set_campaign_id(Option<String>)`](crate::client::fluent_builders::UpdateCampaign::set_campaign_id): <p>The unique identifier for the campaign.</p>
    ///   - [`write_campaign_request(WriteCampaignRequest)`](crate::client::fluent_builders::UpdateCampaign::write_campaign_request) / [`set_write_campaign_request(Option<WriteCampaignRequest>)`](crate::client::fluent_builders::UpdateCampaign::set_write_campaign_request): <p>Specifies the configuration and other settings for a campaign.</p>
    /// - On success, responds with [`UpdateCampaignOutput`](crate::output::UpdateCampaignOutput) with field(s):
    ///   - [`campaign_response(Option<CampaignResponse>)`](crate::output::UpdateCampaignOutput::campaign_response): <p>Provides information about the status, configuration, and other settings for a campaign.</p>
    /// - On failure, responds with [`SdkError<UpdateCampaignError>`](crate::error::UpdateCampaignError)
    pub fn update_campaign(&self) -> crate::client::fluent_builders::UpdateCampaign {
        crate::client::fluent_builders::UpdateCampaign::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEmailChannel`](crate::client::fluent_builders::UpdateEmailChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateEmailChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateEmailChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`email_channel_request(EmailChannelRequest)`](crate::client::fluent_builders::UpdateEmailChannel::email_channel_request) / [`set_email_channel_request(Option<EmailChannelRequest>)`](crate::client::fluent_builders::UpdateEmailChannel::set_email_channel_request): <p>Specifies the status and settings of the email channel for an application.</p>
    /// - On success, responds with [`UpdateEmailChannelOutput`](crate::output::UpdateEmailChannelOutput) with field(s):
    ///   - [`email_channel_response(Option<EmailChannelResponse>)`](crate::output::UpdateEmailChannelOutput::email_channel_response): <p>Provides information about the status and settings of the email channel for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateEmailChannelError>`](crate::error::UpdateEmailChannelError)
    pub fn update_email_channel(&self) -> crate::client::fluent_builders::UpdateEmailChannel {
        crate::client::fluent_builders::UpdateEmailChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEmailTemplate`](crate::client::fluent_builders::UpdateEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`create_new_version(bool)`](crate::client::fluent_builders::UpdateEmailTemplate::create_new_version) / [`set_create_new_version(bool)`](crate::client::fluent_builders::UpdateEmailTemplate::set_create_new_version): <p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p>
    ///   - [`email_template_request(EmailTemplateRequest)`](crate::client::fluent_builders::UpdateEmailTemplate::email_template_request) / [`set_email_template_request(Option<EmailTemplateRequest>)`](crate::client::fluent_builders::UpdateEmailTemplate::set_email_template_request): <p>Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateEmailTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::UpdateEmailTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::UpdateEmailTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`UpdateEmailTemplateOutput`](crate::output::UpdateEmailTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::UpdateEmailTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<UpdateEmailTemplateError>`](crate::error::UpdateEmailTemplateError)
    pub fn update_email_template(&self) -> crate::client::fluent_builders::UpdateEmailTemplate {
        crate::client::fluent_builders::UpdateEmailTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEndpoint`](crate::client::fluent_builders::UpdateEndpoint) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateEndpoint::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateEndpoint::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`endpoint_id(impl Into<String>)`](crate::client::fluent_builders::UpdateEndpoint::endpoint_id) / [`set_endpoint_id(Option<String>)`](crate::client::fluent_builders::UpdateEndpoint::set_endpoint_id): <p>The unique identifier for the endpoint.</p>
    ///   - [`endpoint_request(EndpointRequest)`](crate::client::fluent_builders::UpdateEndpoint::endpoint_request) / [`set_endpoint_request(Option<EndpointRequest>)`](crate::client::fluent_builders::UpdateEndpoint::set_endpoint_request): <p>Specifies the channel type and other settings for an endpoint.</p>
    /// - On success, responds with [`UpdateEndpointOutput`](crate::output::UpdateEndpointOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::UpdateEndpointOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<UpdateEndpointError>`](crate::error::UpdateEndpointError)
    pub fn update_endpoint(&self) -> crate::client::fluent_builders::UpdateEndpoint {
        crate::client::fluent_builders::UpdateEndpoint::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEndpointsBatch`](crate::client::fluent_builders::UpdateEndpointsBatch) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateEndpointsBatch::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateEndpointsBatch::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`endpoint_batch_request(EndpointBatchRequest)`](crate::client::fluent_builders::UpdateEndpointsBatch::endpoint_batch_request) / [`set_endpoint_batch_request(Option<EndpointBatchRequest>)`](crate::client::fluent_builders::UpdateEndpointsBatch::set_endpoint_batch_request): <p>Specifies a batch of endpoints to create or update and the settings and attributes to set or change for each endpoint.</p>
    /// - On success, responds with [`UpdateEndpointsBatchOutput`](crate::output::UpdateEndpointsBatchOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::UpdateEndpointsBatchOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<UpdateEndpointsBatchError>`](crate::error::UpdateEndpointsBatchError)
    pub fn update_endpoints_batch(&self) -> crate::client::fluent_builders::UpdateEndpointsBatch {
        crate::client::fluent_builders::UpdateEndpointsBatch::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateGcmChannel`](crate::client::fluent_builders::UpdateGcmChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateGcmChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateGcmChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`gcm_channel_request(GcmChannelRequest)`](crate::client::fluent_builders::UpdateGcmChannel::gcm_channel_request) / [`set_gcm_channel_request(Option<GcmChannelRequest>)`](crate::client::fluent_builders::UpdateGcmChannel::set_gcm_channel_request): <p>Specifies the status and settings of the GCM channel for an application. This channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.</p>
    /// - On success, responds with [`UpdateGcmChannelOutput`](crate::output::UpdateGcmChannelOutput) with field(s):
    ///   - [`gcm_channel_response(Option<GcmChannelResponse>)`](crate::output::UpdateGcmChannelOutput::gcm_channel_response): <p>Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.</p>
    /// - On failure, responds with [`SdkError<UpdateGcmChannelError>`](crate::error::UpdateGcmChannelError)
    pub fn update_gcm_channel(&self) -> crate::client::fluent_builders::UpdateGcmChannel {
        crate::client::fluent_builders::UpdateGcmChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateInAppTemplate`](crate::client::fluent_builders::UpdateInAppTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`create_new_version(bool)`](crate::client::fluent_builders::UpdateInAppTemplate::create_new_version) / [`set_create_new_version(bool)`](crate::client::fluent_builders::UpdateInAppTemplate::set_create_new_version): <p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p>
    ///   - [`in_app_template_request(InAppTemplateRequest)`](crate::client::fluent_builders::UpdateInAppTemplate::in_app_template_request) / [`set_in_app_template_request(Option<InAppTemplateRequest>)`](crate::client::fluent_builders::UpdateInAppTemplate::set_in_app_template_request): <p>InApp Template Request.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateInAppTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateInAppTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::UpdateInAppTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::UpdateInAppTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`UpdateInAppTemplateOutput`](crate::output::UpdateInAppTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::UpdateInAppTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<UpdateInAppTemplateError>`](crate::error::UpdateInAppTemplateError)
    pub fn update_in_app_template(&self) -> crate::client::fluent_builders::UpdateInAppTemplate {
        crate::client::fluent_builders::UpdateInAppTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateJourney`](crate::client::fluent_builders::UpdateJourney) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateJourney::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateJourney::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`journey_id(impl Into<String>)`](crate::client::fluent_builders::UpdateJourney::journey_id) / [`set_journey_id(Option<String>)`](crate::client::fluent_builders::UpdateJourney::set_journey_id): <p>The unique identifier for the journey.</p>
    ///   - [`write_journey_request(WriteJourneyRequest)`](crate::client::fluent_builders::UpdateJourney::write_journey_request) / [`set_write_journey_request(Option<WriteJourneyRequest>)`](crate::client::fluent_builders::UpdateJourney::set_write_journey_request): <p>Specifies the configuration and other settings for a journey.</p>
    /// - On success, responds with [`UpdateJourneyOutput`](crate::output::UpdateJourneyOutput) with field(s):
    ///   - [`journey_response(Option<JourneyResponse>)`](crate::output::UpdateJourneyOutput::journey_response): <p>Provides information about the status, configuration, and other settings for a journey.</p>
    /// - On failure, responds with [`SdkError<UpdateJourneyError>`](crate::error::UpdateJourneyError)
    pub fn update_journey(&self) -> crate::client::fluent_builders::UpdateJourney {
        crate::client::fluent_builders::UpdateJourney::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateJourneyState`](crate::client::fluent_builders::UpdateJourneyState) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateJourneyState::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateJourneyState::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`journey_id(impl Into<String>)`](crate::client::fluent_builders::UpdateJourneyState::journey_id) / [`set_journey_id(Option<String>)`](crate::client::fluent_builders::UpdateJourneyState::set_journey_id): <p>The unique identifier for the journey.</p>
    ///   - [`journey_state_request(JourneyStateRequest)`](crate::client::fluent_builders::UpdateJourneyState::journey_state_request) / [`set_journey_state_request(Option<JourneyStateRequest>)`](crate::client::fluent_builders::UpdateJourneyState::set_journey_state_request): <p>Changes the status of a journey.</p>
    /// - On success, responds with [`UpdateJourneyStateOutput`](crate::output::UpdateJourneyStateOutput) with field(s):
    ///   - [`journey_response(Option<JourneyResponse>)`](crate::output::UpdateJourneyStateOutput::journey_response): <p>Provides information about the status, configuration, and other settings for a journey.</p>
    /// - On failure, responds with [`SdkError<UpdateJourneyStateError>`](crate::error::UpdateJourneyStateError)
    pub fn update_journey_state(&self) -> crate::client::fluent_builders::UpdateJourneyState {
        crate::client::fluent_builders::UpdateJourneyState::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdatePushTemplate`](crate::client::fluent_builders::UpdatePushTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`create_new_version(bool)`](crate::client::fluent_builders::UpdatePushTemplate::create_new_version) / [`set_create_new_version(bool)`](crate::client::fluent_builders::UpdatePushTemplate::set_create_new_version): <p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p>
    ///   - [`push_notification_template_request(PushNotificationTemplateRequest)`](crate::client::fluent_builders::UpdatePushTemplate::push_notification_template_request) / [`set_push_notification_template_request(Option<PushNotificationTemplateRequest>)`](crate::client::fluent_builders::UpdatePushTemplate::set_push_notification_template_request): <p>Specifies the content and settings for a message template that can be used in messages that are sent through a push notification channel.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdatePushTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdatePushTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::UpdatePushTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::UpdatePushTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`UpdatePushTemplateOutput`](crate::output::UpdatePushTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::UpdatePushTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<UpdatePushTemplateError>`](crate::error::UpdatePushTemplateError)
    pub fn update_push_template(&self) -> crate::client::fluent_builders::UpdatePushTemplate {
        crate::client::fluent_builders::UpdatePushTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateRecommenderConfiguration`](crate::client::fluent_builders::UpdateRecommenderConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`recommender_id(impl Into<String>)`](crate::client::fluent_builders::UpdateRecommenderConfiguration::recommender_id) / [`set_recommender_id(Option<String>)`](crate::client::fluent_builders::UpdateRecommenderConfiguration::set_recommender_id): <p>The unique identifier for the recommender model configuration. This identifier is displayed as the <b>Recommender ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`update_recommender_configuration(UpdateRecommenderConfigurationShape)`](crate::client::fluent_builders::UpdateRecommenderConfiguration::update_recommender_configuration) / [`set_update_recommender_configuration(Option<UpdateRecommenderConfigurationShape>)`](crate::client::fluent_builders::UpdateRecommenderConfiguration::set_update_recommender_configuration): <p>Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.</p>
    /// - On success, responds with [`UpdateRecommenderConfigurationOutput`](crate::output::UpdateRecommenderConfigurationOutput) with field(s):
    ///   - [`recommender_configuration_response(Option<RecommenderConfigurationResponse>)`](crate::output::UpdateRecommenderConfigurationOutput::recommender_configuration_response): <p>Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.</p>
    /// - On failure, responds with [`SdkError<UpdateRecommenderConfigurationError>`](crate::error::UpdateRecommenderConfigurationError)
    pub fn update_recommender_configuration(
        &self,
    ) -> crate::client::fluent_builders::UpdateRecommenderConfiguration {
        crate::client::fluent_builders::UpdateRecommenderConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateSegment`](crate::client::fluent_builders::UpdateSegment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateSegment::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateSegment::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`segment_id(impl Into<String>)`](crate::client::fluent_builders::UpdateSegment::segment_id) / [`set_segment_id(Option<String>)`](crate::client::fluent_builders::UpdateSegment::set_segment_id): <p>The unique identifier for the segment.</p>
    ///   - [`write_segment_request(WriteSegmentRequest)`](crate::client::fluent_builders::UpdateSegment::write_segment_request) / [`set_write_segment_request(Option<WriteSegmentRequest>)`](crate::client::fluent_builders::UpdateSegment::set_write_segment_request): <p>Specifies the configuration, dimension, and other settings for a segment. A WriteSegmentRequest object can include a Dimensions object or a SegmentGroups object, but not both.</p>
    /// - On success, responds with [`UpdateSegmentOutput`](crate::output::UpdateSegmentOutput) with field(s):
    ///   - [`segment_response(Option<SegmentResponse>)`](crate::output::UpdateSegmentOutput::segment_response): <p>Provides information about the configuration, dimension, and other settings for a segment.</p>
    /// - On failure, responds with [`SdkError<UpdateSegmentError>`](crate::error::UpdateSegmentError)
    pub fn update_segment(&self) -> crate::client::fluent_builders::UpdateSegment {
        crate::client::fluent_builders::UpdateSegment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateSmsChannel`](crate::client::fluent_builders::UpdateSmsChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateSmsChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateSmsChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`sms_channel_request(SmsChannelRequest)`](crate::client::fluent_builders::UpdateSmsChannel::sms_channel_request) / [`set_sms_channel_request(Option<SmsChannelRequest>)`](crate::client::fluent_builders::UpdateSmsChannel::set_sms_channel_request): <p>Specifies the status and settings of the SMS channel for an application.</p>
    /// - On success, responds with [`UpdateSmsChannelOutput`](crate::output::UpdateSmsChannelOutput) with field(s):
    ///   - [`sms_channel_response(Option<SmsChannelResponse>)`](crate::output::UpdateSmsChannelOutput::sms_channel_response): <p>Provides information about the status and settings of the SMS channel for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateSmsChannelError>`](crate::error::UpdateSmsChannelError)
    pub fn update_sms_channel(&self) -> crate::client::fluent_builders::UpdateSmsChannel {
        crate::client::fluent_builders::UpdateSmsChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateSmsTemplate`](crate::client::fluent_builders::UpdateSmsTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`create_new_version(bool)`](crate::client::fluent_builders::UpdateSmsTemplate::create_new_version) / [`set_create_new_version(bool)`](crate::client::fluent_builders::UpdateSmsTemplate::set_create_new_version): <p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p>
    ///   - [`sms_template_request(SmsTemplateRequest)`](crate::client::fluent_builders::UpdateSmsTemplate::sms_template_request) / [`set_sms_template_request(Option<SmsTemplateRequest>)`](crate::client::fluent_builders::UpdateSmsTemplate::set_sms_template_request): <p>Specifies the content and settings for a message template that can be used in text messages that are sent through the SMS channel.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateSmsTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateSmsTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::UpdateSmsTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::UpdateSmsTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    /// - On success, responds with [`UpdateSmsTemplateOutput`](crate::output::UpdateSmsTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::UpdateSmsTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<UpdateSmsTemplateError>`](crate::error::UpdateSmsTemplateError)
    pub fn update_sms_template(&self) -> crate::client::fluent_builders::UpdateSmsTemplate {
        crate::client::fluent_builders::UpdateSmsTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateTemplateActiveVersion`](crate::client::fluent_builders::UpdateTemplateActiveVersion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_active_version_request(TemplateActiveVersionRequest)`](crate::client::fluent_builders::UpdateTemplateActiveVersion::template_active_version_request) / [`set_template_active_version_request(Option<TemplateActiveVersionRequest>)`](crate::client::fluent_builders::UpdateTemplateActiveVersion::set_template_active_version_request): <p>Specifies which version of a message template to use as the active version of the template.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateTemplateActiveVersion::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateTemplateActiveVersion::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`template_type(impl Into<String>)`](crate::client::fluent_builders::UpdateTemplateActiveVersion::template_type) / [`set_template_type(Option<String>)`](crate::client::fluent_builders::UpdateTemplateActiveVersion::set_template_type): <p>The type of channel that the message template is designed for. Valid values are: EMAIL, PUSH, SMS, and VOICE.</p>
    /// - On success, responds with [`UpdateTemplateActiveVersionOutput`](crate::output::UpdateTemplateActiveVersionOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::UpdateTemplateActiveVersionOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<UpdateTemplateActiveVersionError>`](crate::error::UpdateTemplateActiveVersionError)
    pub fn update_template_active_version(
        &self,
    ) -> crate::client::fluent_builders::UpdateTemplateActiveVersion {
        crate::client::fluent_builders::UpdateTemplateActiveVersion::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateVoiceChannel`](crate::client::fluent_builders::UpdateVoiceChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateVoiceChannel::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::UpdateVoiceChannel::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`voice_channel_request(VoiceChannelRequest)`](crate::client::fluent_builders::UpdateVoiceChannel::voice_channel_request) / [`set_voice_channel_request(Option<VoiceChannelRequest>)`](crate::client::fluent_builders::UpdateVoiceChannel::set_voice_channel_request): <p>Specifies the status and settings of the voice channel for an application.</p>
    /// - On success, responds with [`UpdateVoiceChannelOutput`](crate::output::UpdateVoiceChannelOutput) with field(s):
    ///   - [`voice_channel_response(Option<VoiceChannelResponse>)`](crate::output::UpdateVoiceChannelOutput::voice_channel_response): <p>Provides information about the status and settings of the voice channel for an application.</p>
    /// - On failure, responds with [`SdkError<UpdateVoiceChannelError>`](crate::error::UpdateVoiceChannelError)
    pub fn update_voice_channel(&self) -> crate::client::fluent_builders::UpdateVoiceChannel {
        crate::client::fluent_builders::UpdateVoiceChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateVoiceTemplate`](crate::client::fluent_builders::UpdateVoiceTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`create_new_version(bool)`](crate::client::fluent_builders::UpdateVoiceTemplate::create_new_version) / [`set_create_new_version(bool)`](crate::client::fluent_builders::UpdateVoiceTemplate::set_create_new_version): <p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateVoiceTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateVoiceTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::UpdateVoiceTemplate::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::UpdateVoiceTemplate::set_version): <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the   <link linkend="templates-template-name-template-type-versions">Template Versions resource.</p>  <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p>  <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p>  <ul>  <li><p>For a get operation, retrieves information about the active version of the template.</p></li>   <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li>   <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li> </ul>
    ///   - [`voice_template_request(VoiceTemplateRequest)`](crate::client::fluent_builders::UpdateVoiceTemplate::voice_template_request) / [`set_voice_template_request(Option<VoiceTemplateRequest>)`](crate::client::fluent_builders::UpdateVoiceTemplate::set_voice_template_request): <p>Specifies the content and settings for a message template that can be used in messages that are sent through the voice channel.</p>
    /// - On success, responds with [`UpdateVoiceTemplateOutput`](crate::output::UpdateVoiceTemplateOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::output::UpdateVoiceTemplateOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<UpdateVoiceTemplateError>`](crate::error::UpdateVoiceTemplateError)
    pub fn update_voice_template(&self) -> crate::client::fluent_builders::UpdateVoiceTemplate {
        crate::client::fluent_builders::UpdateVoiceTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`VerifyOTPMessage`](crate::client::fluent_builders::VerifyOTPMessage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::client::fluent_builders::VerifyOTPMessage::application_id) / [`set_application_id(Option<String>)`](crate::client::fluent_builders::VerifyOTPMessage::set_application_id): <p>The unique ID of your Amazon Pinpoint application.</p>
    ///   - [`verify_otp_message_request_parameters(VerifyOtpMessageRequestParameters)`](crate::client::fluent_builders::VerifyOTPMessage::verify_otp_message_request_parameters) / [`set_verify_otp_message_request_parameters(Option<VerifyOtpMessageRequestParameters>)`](crate::client::fluent_builders::VerifyOTPMessage::set_verify_otp_message_request_parameters): <p>Verify OTP message request.</p>
    /// - On success, responds with [`VerifyOtpMessageOutput`](crate::output::VerifyOtpMessageOutput) with field(s):
    ///   - [`verification_response(Option<VerificationResponse>)`](crate::output::VerifyOtpMessageOutput::verification_response): <p>Verify OTP Message Response.</p>
    /// - On failure, responds with [`SdkError<VerifyOTPMessageError>`](crate::error::VerifyOTPMessageError)
    pub fn verify_otp_message(&self) -> crate::client::fluent_builders::VerifyOTPMessage {
        crate::client::fluent_builders::VerifyOTPMessage::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
