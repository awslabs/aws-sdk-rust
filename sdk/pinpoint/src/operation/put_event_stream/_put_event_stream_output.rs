// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutEventStreamOutput {
    /// <p>Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.</p>
    pub event_stream: ::std::option::Option<crate::types::EventStream>,
    _request_id: Option<String>,
}
impl PutEventStreamOutput {
    /// <p>Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.</p>
    pub fn event_stream(&self) -> ::std::option::Option<&crate::types::EventStream> {
        self.event_stream.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for PutEventStreamOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PutEventStreamOutput {
    /// Creates a new builder-style object to manufacture [`PutEventStreamOutput`](crate::operation::put_event_stream::PutEventStreamOutput).
    pub fn builder() -> crate::operation::put_event_stream::builders::PutEventStreamOutputBuilder {
        crate::operation::put_event_stream::builders::PutEventStreamOutputBuilder::default()
    }
}

/// A builder for [`PutEventStreamOutput`](crate::operation::put_event_stream::PutEventStreamOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutEventStreamOutputBuilder {
    pub(crate) event_stream: ::std::option::Option<crate::types::EventStream>,
    _request_id: Option<String>,
}
impl PutEventStreamOutputBuilder {
    /// <p>Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.</p>
    /// This field is required.
    pub fn event_stream(mut self, input: crate::types::EventStream) -> Self {
        self.event_stream = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.</p>
    pub fn set_event_stream(mut self, input: ::std::option::Option<crate::types::EventStream>) -> Self {
        self.event_stream = input;
        self
    }
    /// <p>Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.</p>
    pub fn get_event_stream(&self) -> &::std::option::Option<crate::types::EventStream> {
        &self.event_stream
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PutEventStreamOutput`](crate::operation::put_event_stream::PutEventStreamOutput).
    pub fn build(self) -> crate::operation::put_event_stream::PutEventStreamOutput {
        crate::operation::put_event_stream::PutEventStreamOutput {
            event_stream: self.event_stream,
            _request_id: self._request_id,
        }
    }
}
