// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetAppsInput {
    /// <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    pub page_size: ::std::option::Option<::std::string::String>,
    /// <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    pub token: ::std::option::Option<::std::string::String>,
}
impl GetAppsInput {
    /// <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    pub fn page_size(&self) -> ::std::option::Option<&str> {
        self.page_size.as_deref()
    }
    /// <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    pub fn token(&self) -> ::std::option::Option<&str> {
        self.token.as_deref()
    }
}
impl GetAppsInput {
    /// Creates a new builder-style object to manufacture [`GetAppsInput`](crate::operation::get_apps::GetAppsInput).
    pub fn builder() -> crate::operation::get_apps::builders::GetAppsInputBuilder {
        crate::operation::get_apps::builders::GetAppsInputBuilder::default()
    }
}

/// A builder for [`GetAppsInput`](crate::operation::get_apps::GetAppsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetAppsInputBuilder {
    pub(crate) page_size: ::std::option::Option<::std::string::String>,
    pub(crate) token: ::std::option::Option<::std::string::String>,
}
impl GetAppsInputBuilder {
    /// <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    pub fn page_size(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.page_size = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    pub fn set_page_size(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.page_size = input;
        self
    }
    /// <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    pub fn get_page_size(&self) -> &::std::option::Option<::std::string::String> {
        &self.page_size
    }
    /// <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    pub fn token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    pub fn set_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.token = input;
        self
    }
    /// <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    pub fn get_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.token
    }
    /// Consumes the builder and constructs a [`GetAppsInput`](crate::operation::get_apps::GetAppsInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_apps::GetAppsInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_apps::GetAppsInput {
            page_size: self.page_size,
            token: self.token,
        })
    }
}
