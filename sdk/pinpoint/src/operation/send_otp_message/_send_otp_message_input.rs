// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SendOtpMessageInput {
    /// <p>The unique ID of your Amazon Pinpoint application.</p>
    #[doc(hidden)]
    pub application_id: std::option::Option<std::string::String>,
    /// <p>Send OTP message request parameters.</p>
    #[doc(hidden)]
    pub send_otp_message_request_parameters:
        std::option::Option<crate::types::SendOtpMessageRequestParameters>,
}
impl SendOtpMessageInput {
    /// <p>The unique ID of your Amazon Pinpoint application.</p>
    pub fn application_id(&self) -> std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>Send OTP message request parameters.</p>
    pub fn send_otp_message_request_parameters(
        &self,
    ) -> std::option::Option<&crate::types::SendOtpMessageRequestParameters> {
        self.send_otp_message_request_parameters.as_ref()
    }
}
impl SendOtpMessageInput {
    /// Creates a new builder-style object to manufacture [`SendOtpMessageInput`](crate::operation::send_otp_message::SendOtpMessageInput).
    pub fn builder() -> crate::operation::send_otp_message::builders::SendOtpMessageInputBuilder {
        crate::operation::send_otp_message::builders::SendOtpMessageInputBuilder::default()
    }
}

/// A builder for [`SendOtpMessageInput`](crate::operation::send_otp_message::SendOtpMessageInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SendOtpMessageInputBuilder {
    pub(crate) application_id: std::option::Option<std::string::String>,
    pub(crate) send_otp_message_request_parameters:
        std::option::Option<crate::types::SendOtpMessageRequestParameters>,
}
impl SendOtpMessageInputBuilder {
    /// <p>The unique ID of your Amazon Pinpoint application.</p>
    pub fn application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_id = Some(input.into());
        self
    }
    /// <p>The unique ID of your Amazon Pinpoint application.</p>
    pub fn set_application_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>Send OTP message request parameters.</p>
    pub fn send_otp_message_request_parameters(
        mut self,
        input: crate::types::SendOtpMessageRequestParameters,
    ) -> Self {
        self.send_otp_message_request_parameters = Some(input);
        self
    }
    /// <p>Send OTP message request parameters.</p>
    pub fn set_send_otp_message_request_parameters(
        mut self,
        input: std::option::Option<crate::types::SendOtpMessageRequestParameters>,
    ) -> Self {
        self.send_otp_message_request_parameters = input;
        self
    }
    /// Consumes the builder and constructs a [`SendOtpMessageInput`](crate::operation::send_otp_message::SendOtpMessageInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::send_otp_message::SendOtpMessageInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::send_otp_message::SendOtpMessageInput {
            application_id: self.application_id,
            send_otp_message_request_parameters: self.send_otp_message_request_parameters,
        })
    }
}
