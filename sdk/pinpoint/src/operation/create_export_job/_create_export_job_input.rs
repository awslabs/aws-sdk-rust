// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateExportJobInput {
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    #[doc(hidden)]
    pub application_id: std::option::Option<std::string::String>,
    /// <p>Specifies the settings for a job that exports endpoint definitions to an Amazon Simple Storage Service (Amazon S3) bucket.</p>
    #[doc(hidden)]
    pub export_job_request: std::option::Option<crate::types::ExportJobRequest>,
}
impl CreateExportJobInput {
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    pub fn application_id(&self) -> std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>Specifies the settings for a job that exports endpoint definitions to an Amazon Simple Storage Service (Amazon S3) bucket.</p>
    pub fn export_job_request(&self) -> std::option::Option<&crate::types::ExportJobRequest> {
        self.export_job_request.as_ref()
    }
}
impl CreateExportJobInput {
    /// Creates a new builder-style object to manufacture [`CreateExportJobInput`](crate::operation::create_export_job::CreateExportJobInput).
    pub fn builder() -> crate::operation::create_export_job::builders::CreateExportJobInputBuilder {
        crate::operation::create_export_job::builders::CreateExportJobInputBuilder::default()
    }
}

/// A builder for [`CreateExportJobInput`](crate::operation::create_export_job::CreateExportJobInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateExportJobInputBuilder {
    pub(crate) application_id: std::option::Option<std::string::String>,
    pub(crate) export_job_request: std::option::Option<crate::types::ExportJobRequest>,
}
impl CreateExportJobInputBuilder {
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    pub fn application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    pub fn set_application_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>Specifies the settings for a job that exports endpoint definitions to an Amazon Simple Storage Service (Amazon S3) bucket.</p>
    pub fn export_job_request(mut self, input: crate::types::ExportJobRequest) -> Self {
        self.export_job_request = Some(input);
        self
    }
    /// <p>Specifies the settings for a job that exports endpoint definitions to an Amazon Simple Storage Service (Amazon S3) bucket.</p>
    pub fn set_export_job_request(
        mut self,
        input: std::option::Option<crate::types::ExportJobRequest>,
    ) -> Self {
        self.export_job_request = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateExportJobInput`](crate::operation::create_export_job::CreateExportJobInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_export_job::CreateExportJobInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::create_export_job::CreateExportJobInput {
            application_id: self.application_id,
            export_job_request: self.export_job_request,
        })
    }
}
