// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VerifyOtpMessageInput {
    /// <p>The unique ID of your Amazon Pinpoint application.</p>
    #[doc(hidden)]
    pub application_id: std::option::Option<std::string::String>,
    /// <p>Verify OTP message request.</p>
    #[doc(hidden)]
    pub verify_otp_message_request_parameters:
        std::option::Option<crate::types::VerifyOtpMessageRequestParameters>,
}
impl VerifyOtpMessageInput {
    /// <p>The unique ID of your Amazon Pinpoint application.</p>
    pub fn application_id(&self) -> std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>Verify OTP message request.</p>
    pub fn verify_otp_message_request_parameters(
        &self,
    ) -> std::option::Option<&crate::types::VerifyOtpMessageRequestParameters> {
        self.verify_otp_message_request_parameters.as_ref()
    }
}
impl VerifyOtpMessageInput {
    /// Creates a new builder-style object to manufacture [`VerifyOtpMessageInput`](crate::operation::verify_otp_message::VerifyOtpMessageInput).
    pub fn builder() -> crate::operation::verify_otp_message::builders::VerifyOtpMessageInputBuilder
    {
        crate::operation::verify_otp_message::builders::VerifyOtpMessageInputBuilder::default()
    }
}

/// A builder for [`VerifyOtpMessageInput`](crate::operation::verify_otp_message::VerifyOtpMessageInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VerifyOtpMessageInputBuilder {
    pub(crate) application_id: std::option::Option<std::string::String>,
    pub(crate) verify_otp_message_request_parameters:
        std::option::Option<crate::types::VerifyOtpMessageRequestParameters>,
}
impl VerifyOtpMessageInputBuilder {
    /// <p>The unique ID of your Amazon Pinpoint application.</p>
    pub fn application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_id = Some(input.into());
        self
    }
    /// <p>The unique ID of your Amazon Pinpoint application.</p>
    pub fn set_application_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>Verify OTP message request.</p>
    pub fn verify_otp_message_request_parameters(
        mut self,
        input: crate::types::VerifyOtpMessageRequestParameters,
    ) -> Self {
        self.verify_otp_message_request_parameters = Some(input);
        self
    }
    /// <p>Verify OTP message request.</p>
    pub fn set_verify_otp_message_request_parameters(
        mut self,
        input: std::option::Option<crate::types::VerifyOtpMessageRequestParameters>,
    ) -> Self {
        self.verify_otp_message_request_parameters = input;
        self
    }
    /// Consumes the builder and constructs a [`VerifyOtpMessageInput`](crate::operation::verify_otp_message::VerifyOtpMessageInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::verify_otp_message::VerifyOtpMessageInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::verify_otp_message::VerifyOtpMessageInput {
                application_id: self.application_id,
                verify_otp_message_request_parameters: self.verify_otp_message_request_parameters,
            },
        )
    }
}
