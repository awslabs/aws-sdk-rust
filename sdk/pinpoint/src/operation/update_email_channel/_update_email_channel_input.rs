// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateEmailChannelInput {
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    #[doc(hidden)]
    pub application_id: std::option::Option<std::string::String>,
    /// <p>Specifies the status and settings of the email channel for an application.</p>
    #[doc(hidden)]
    pub email_channel_request: std::option::Option<crate::types::EmailChannelRequest>,
}
impl UpdateEmailChannelInput {
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    pub fn application_id(&self) -> std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>Specifies the status and settings of the email channel for an application.</p>
    pub fn email_channel_request(&self) -> std::option::Option<&crate::types::EmailChannelRequest> {
        self.email_channel_request.as_ref()
    }
}
impl UpdateEmailChannelInput {
    /// Creates a new builder-style object to manufacture [`UpdateEmailChannelInput`](crate::operation::update_email_channel::UpdateEmailChannelInput).
    pub fn builder(
    ) -> crate::operation::update_email_channel::builders::UpdateEmailChannelInputBuilder {
        crate::operation::update_email_channel::builders::UpdateEmailChannelInputBuilder::default()
    }
}

/// A builder for [`UpdateEmailChannelInput`](crate::operation::update_email_channel::UpdateEmailChannelInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateEmailChannelInputBuilder {
    pub(crate) application_id: std::option::Option<std::string::String>,
    pub(crate) email_channel_request: std::option::Option<crate::types::EmailChannelRequest>,
}
impl UpdateEmailChannelInputBuilder {
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    pub fn application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    pub fn set_application_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>Specifies the status and settings of the email channel for an application.</p>
    pub fn email_channel_request(mut self, input: crate::types::EmailChannelRequest) -> Self {
        self.email_channel_request = Some(input);
        self
    }
    /// <p>Specifies the status and settings of the email channel for an application.</p>
    pub fn set_email_channel_request(
        mut self,
        input: std::option::Option<crate::types::EmailChannelRequest>,
    ) -> Self {
        self.email_channel_request = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateEmailChannelInput`](crate::operation::update_email_channel::UpdateEmailChannelInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_email_channel::UpdateEmailChannelInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_email_channel::UpdateEmailChannelInput {
                application_id: self.application_id,
                email_channel_request: self.email_channel_request,
            },
        )
    }
}
