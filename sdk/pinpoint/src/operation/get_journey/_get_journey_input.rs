// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetJourneyInput {
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    #[doc(hidden)]
    pub application_id: std::option::Option<std::string::String>,
    /// <p>The unique identifier for the journey.</p>
    #[doc(hidden)]
    pub journey_id: std::option::Option<std::string::String>,
}
impl GetJourneyInput {
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    pub fn application_id(&self) -> std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>The unique identifier for the journey.</p>
    pub fn journey_id(&self) -> std::option::Option<&str> {
        self.journey_id.as_deref()
    }
}
impl GetJourneyInput {
    /// Creates a new builder-style object to manufacture [`GetJourneyInput`](crate::operation::get_journey::GetJourneyInput).
    pub fn builder() -> crate::operation::get_journey::builders::GetJourneyInputBuilder {
        crate::operation::get_journey::builders::GetJourneyInputBuilder::default()
    }
}

/// A builder for [`GetJourneyInput`](crate::operation::get_journey::GetJourneyInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetJourneyInputBuilder {
    pub(crate) application_id: std::option::Option<std::string::String>,
    pub(crate) journey_id: std::option::Option<std::string::String>,
}
impl GetJourneyInputBuilder {
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    pub fn application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    pub fn set_application_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>The unique identifier for the journey.</p>
    pub fn journey_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.journey_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the journey.</p>
    pub fn set_journey_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.journey_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetJourneyInput`](crate::operation::get_journey::GetJourneyInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_journey::GetJourneyInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_journey::GetJourneyInput {
            application_id: self.application_id,
            journey_id: self.journey_id,
        })
    }
}
