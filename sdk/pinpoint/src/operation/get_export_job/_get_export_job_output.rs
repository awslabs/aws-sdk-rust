// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetExportJobOutput {
    /// <p>Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.</p>
    pub export_job_response: ::std::option::Option<crate::types::ExportJobResponse>,
    _request_id: Option<String>,
}
impl GetExportJobOutput {
    /// <p>Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.</p>
    pub fn export_job_response(&self) -> ::std::option::Option<&crate::types::ExportJobResponse> {
        self.export_job_response.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for GetExportJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetExportJobOutput {
    /// Creates a new builder-style object to manufacture [`GetExportJobOutput`](crate::operation::get_export_job::GetExportJobOutput).
    pub fn builder() -> crate::operation::get_export_job::builders::GetExportJobOutputBuilder {
        crate::operation::get_export_job::builders::GetExportJobOutputBuilder::default()
    }
}

/// A builder for [`GetExportJobOutput`](crate::operation::get_export_job::GetExportJobOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetExportJobOutputBuilder {
    pub(crate) export_job_response: ::std::option::Option<crate::types::ExportJobResponse>,
    _request_id: Option<String>,
}
impl GetExportJobOutputBuilder {
    /// <p>Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.</p>
    /// This field is required.
    pub fn export_job_response(mut self, input: crate::types::ExportJobResponse) -> Self {
        self.export_job_response = ::std::option::Option::Some(input);
        self
    }
    /// <p>Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.</p>
    pub fn set_export_job_response(mut self, input: ::std::option::Option<crate::types::ExportJobResponse>) -> Self {
        self.export_job_response = input;
        self
    }
    /// <p>Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.</p>
    pub fn get_export_job_response(&self) -> &::std::option::Option<crate::types::ExportJobResponse> {
        &self.export_job_response
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetExportJobOutput`](crate::operation::get_export_job::GetExportJobOutput).
    pub fn build(self) -> crate::operation::get_export_job::GetExportJobOutput {
        crate::operation::get_export_job::GetExportJobOutput {
            export_job_response: self.export_job_response,
            _request_id: self._request_id,
        }
    }
}
