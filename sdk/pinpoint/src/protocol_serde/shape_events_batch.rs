// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_events_batch(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::EventsBatch,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.endpoint {
        #[allow(unused_mut)]
        let mut object_2 = object.key("Endpoint").start_object();
        crate::protocol_serde::shape_public_endpoint::ser_public_endpoint(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.events {
        #[allow(unused_mut)]
        let mut object_4 = object.key("Events").start_object();
        for (key_5, value_6) in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_7 = object_4.key(key_5.as_str()).start_object();
                crate::protocol_serde::shape_event::ser_event(&mut object_7, value_6)?;
                object_7.finish();
            }
        }
        object_4.finish();
    }
    Ok(())
}
