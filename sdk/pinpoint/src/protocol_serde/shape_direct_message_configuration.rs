// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_direct_message_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DirectMessageConfiguration,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.adm_message {
        #[allow(unused_mut)]
        let mut object_2 = object.key("ADMMessage").start_object();
        crate::protocol_serde::shape_adm_message::ser_adm_message(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.apns_message {
        #[allow(unused_mut)]
        let mut object_4 = object.key("APNSMessage").start_object();
        crate::protocol_serde::shape_apns_message::ser_apns_message(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.baidu_message {
        #[allow(unused_mut)]
        let mut object_6 = object.key("BaiduMessage").start_object();
        crate::protocol_serde::shape_baidu_message::ser_baidu_message(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.default_message {
        #[allow(unused_mut)]
        let mut object_8 = object.key("DefaultMessage").start_object();
        crate::protocol_serde::shape_default_message::ser_default_message(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.default_push_notification_message {
        #[allow(unused_mut)]
        let mut object_10 = object.key("DefaultPushNotificationMessage").start_object();
        crate::protocol_serde::shape_default_push_notification_message::ser_default_push_notification_message(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.email_message {
        #[allow(unused_mut)]
        let mut object_12 = object.key("EmailMessage").start_object();
        crate::protocol_serde::shape_email_message::ser_email_message(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.gcm_message {
        #[allow(unused_mut)]
        let mut object_14 = object.key("GCMMessage").start_object();
        crate::protocol_serde::shape_gcm_message::ser_gcm_message(&mut object_14, var_13)?;
        object_14.finish();
    }
    if let Some(var_15) = &input.sms_message {
        #[allow(unused_mut)]
        let mut object_16 = object.key("SMSMessage").start_object();
        crate::protocol_serde::shape_sms_message::ser_sms_message(&mut object_16, var_15)?;
        object_16.finish();
    }
    if let Some(var_17) = &input.voice_message {
        #[allow(unused_mut)]
        let mut object_18 = object.key("VoiceMessage").start_object();
        crate::protocol_serde::shape_voice_message::ser_voice_message(&mut object_18, var_17)?;
        object_18.finish();
    }
    Ok(())
}
