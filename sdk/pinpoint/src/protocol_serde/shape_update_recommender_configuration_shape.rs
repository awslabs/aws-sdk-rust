// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_recommender_configuration_shape(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::UpdateRecommenderConfigurationShape,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.attributes {
        #[allow(unused_mut)]
        let mut object_2 = object.key("Attributes").start_object();
        for (key_3, value_4) in var_1 {
            {
                object_2.key(key_3.as_str()).string(value_4.as_str());
            }
        }
        object_2.finish();
    }
    if let Some(var_5) = &input.description {
        object.key("Description").string(var_5.as_str());
    }
    if let Some(var_6) = &input.name {
        object.key("Name").string(var_6.as_str());
    }
    if let Some(var_7) = &input.recommendation_provider_id_type {
        object
            .key("RecommendationProviderIdType")
            .string(var_7.as_str());
    }
    if let Some(var_8) = &input.recommendation_provider_role_arn {
        object
            .key("RecommendationProviderRoleArn")
            .string(var_8.as_str());
    }
    if let Some(var_9) = &input.recommendation_provider_uri {
        object
            .key("RecommendationProviderUri")
            .string(var_9.as_str());
    }
    if let Some(var_10) = &input.recommendation_transformer_uri {
        object
            .key("RecommendationTransformerUri")
            .string(var_10.as_str());
    }
    if let Some(var_11) = &input.recommendations_display_name {
        object
            .key("RecommendationsDisplayName")
            .string(var_11.as_str());
    }
    if input.recommendations_per_message != 0 {
        object.key("RecommendationsPerMessage").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.recommendations_per_message).into()),
        );
    }
    Ok(())
}
