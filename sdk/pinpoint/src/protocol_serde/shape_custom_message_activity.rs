// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_custom_message_activity(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::CustomMessageActivity,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.delivery_uri {
        object.key("DeliveryUri").string(var_1.as_str());
    }
    if let Some(var_2) = &input.endpoint_types {
        let mut array_3 = object.key("EndpointTypes").start_array();
        for item_4 in var_2 {
            {
                array_3.value().string(item_4.as_str());
            }
        }
        array_3.finish();
    }
    if let Some(var_5) = &input.message_config {
        #[allow(unused_mut)]
        let mut object_6 = object.key("MessageConfig").start_object();
        crate::protocol_serde::shape_journey_custom_message::ser_journey_custom_message(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.next_activity {
        object.key("NextActivity").string(var_7.as_str());
    }
    if let Some(var_8) = &input.template_name {
        object.key("TemplateName").string(var_8.as_str());
    }
    if let Some(var_9) = &input.template_version {
        object.key("TemplateVersion").string(var_9.as_str());
    }
    Ok(())
}

pub(crate) fn de_custom_message_activity<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::CustomMessageActivity>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::CustomMessageActivityBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "DeliveryUri" => {
                            builder = builder.set_delivery_uri(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "EndpointTypes" => {
                            builder = builder.set_endpoint_types(
                                crate::protocol_serde::shape_list_of_endpoint_types_element::de_list_of_endpoint_types_element(tokens)?,
                            );
                        }
                        "MessageConfig" => {
                            builder =
                                builder.set_message_config(crate::protocol_serde::shape_journey_custom_message::de_journey_custom_message(tokens)?);
                        }
                        "NextActivity" => {
                            builder = builder.set_next_activity(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "TemplateName" => {
                            builder = builder.set_template_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "TemplateVersion" => {
                            builder = builder.set_template_version(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
