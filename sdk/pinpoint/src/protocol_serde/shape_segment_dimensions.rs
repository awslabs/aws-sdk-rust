// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_segment_dimensions(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SegmentDimensions,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.attributes {
        #[allow(unused_mut)]
        let mut object_2 = object.key("Attributes").start_object();
        for (key_3, value_4) in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_5 = object_2.key(key_3.as_str()).start_object();
                crate::protocol_serde::shape_attribute_dimension::ser_attribute_dimension(
                    &mut object_5,
                    value_4,
                )?;
                object_5.finish();
            }
        }
        object_2.finish();
    }
    if let Some(var_6) = &input.behavior {
        #[allow(unused_mut)]
        let mut object_7 = object.key("Behavior").start_object();
        crate::protocol_serde::shape_segment_behaviors::ser_segment_behaviors(
            &mut object_7,
            var_6,
        )?;
        object_7.finish();
    }
    if let Some(var_8) = &input.demographic {
        #[allow(unused_mut)]
        let mut object_9 = object.key("Demographic").start_object();
        crate::protocol_serde::shape_segment_demographics::ser_segment_demographics(
            &mut object_9,
            var_8,
        )?;
        object_9.finish();
    }
    if let Some(var_10) = &input.location {
        #[allow(unused_mut)]
        let mut object_11 = object.key("Location").start_object();
        crate::protocol_serde::shape_segment_location::ser_segment_location(
            &mut object_11,
            var_10,
        )?;
        object_11.finish();
    }
    if let Some(var_12) = &input.metrics {
        #[allow(unused_mut)]
        let mut object_13 = object.key("Metrics").start_object();
        for (key_14, value_15) in var_12 {
            {
                #[allow(unused_mut)]
                let mut object_16 = object_13.key(key_14.as_str()).start_object();
                crate::protocol_serde::shape_metric_dimension::ser_metric_dimension(
                    &mut object_16,
                    value_15,
                )?;
                object_16.finish();
            }
        }
        object_13.finish();
    }
    if let Some(var_17) = &input.user_attributes {
        #[allow(unused_mut)]
        let mut object_18 = object.key("UserAttributes").start_object();
        for (key_19, value_20) in var_17 {
            {
                #[allow(unused_mut)]
                let mut object_21 = object_18.key(key_19.as_str()).start_object();
                crate::protocol_serde::shape_attribute_dimension::ser_attribute_dimension(
                    &mut object_21,
                    value_20,
                )?;
                object_21.finish();
            }
        }
        object_18.finish();
    }
    Ok(())
}

pub(crate) fn de_segment_dimensions<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::SegmentDimensions>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::SegmentDimensionsBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "Attributes" => {
                                builder = builder.set_attributes(
                                    crate::protocol_serde::shape_map_of_attribute_dimension::de_map_of_attribute_dimension(tokens)?
                                );
                            }
                            "Behavior" => {
                                builder = builder.set_behavior(
                                    crate::protocol_serde::shape_segment_behaviors::de_segment_behaviors(tokens)?
                                );
                            }
                            "Demographic" => {
                                builder = builder.set_demographic(
                                    crate::protocol_serde::shape_segment_demographics::de_segment_demographics(tokens)?
                                );
                            }
                            "Location" => {
                                builder = builder.set_location(
                                    crate::protocol_serde::shape_segment_location::de_segment_location(tokens)?
                                );
                            }
                            "Metrics" => {
                                builder = builder.set_metrics(
                                    crate::protocol_serde::shape_map_of_metric_dimension::de_map_of_metric_dimension(tokens)?
                                );
                            }
                            "UserAttributes" => {
                                builder = builder.set_user_attributes(
                                    crate::protocol_serde::shape_map_of_attribute_dimension::de_map_of_attribute_dimension(tokens)?
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
