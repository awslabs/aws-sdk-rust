// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEmailTemplate`](crate::operation::create_email_template::builders::CreateEmailTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_template_request(EmailTemplateRequest)`](crate::operation::create_email_template::builders::CreateEmailTemplateFluentBuilder::email_template_request) / [`set_email_template_request(Option<EmailTemplateRequest>)`](crate::operation::create_email_template::builders::CreateEmailTemplateFluentBuilder::set_email_template_request): <p>Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.</p>
    ///   - [`template_name(impl Into<String>)`](crate::operation::create_email_template::builders::CreateEmailTemplateFluentBuilder::template_name) / [`set_template_name(Option<String>)`](crate::operation::create_email_template::builders::CreateEmailTemplateFluentBuilder::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    /// - On success, responds with [`CreateEmailTemplateOutput`](crate::operation::create_email_template::CreateEmailTemplateOutput) with field(s):
    ///   - [`create_template_message_body(Option<CreateTemplateMessageBody>)`](crate::operation::create_email_template::CreateEmailTemplateOutput::create_template_message_body): <p>Provides information about a request to create a message template.</p>
    /// - On failure, responds with [`SdkError<CreateEmailTemplateError>`](crate::operation::create_email_template::CreateEmailTemplateError)
    pub fn create_email_template(
        &self,
    ) -> crate::operation::create_email_template::builders::CreateEmailTemplateFluentBuilder {
        crate::operation::create_email_template::builders::CreateEmailTemplateFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
