// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateEndpoint`](crate::operation::update_endpoint::builders::UpdateEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::update_endpoint::builders::UpdateEndpointFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::update_endpoint::builders::UpdateEndpointFluentBuilder::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`endpoint_id(impl Into<String>)`](crate::operation::update_endpoint::builders::UpdateEndpointFluentBuilder::endpoint_id) / [`set_endpoint_id(Option<String>)`](crate::operation::update_endpoint::builders::UpdateEndpointFluentBuilder::set_endpoint_id): <p>The unique identifier for the endpoint.</p>
    ///   - [`endpoint_request(EndpointRequest)`](crate::operation::update_endpoint::builders::UpdateEndpointFluentBuilder::endpoint_request) / [`set_endpoint_request(Option<EndpointRequest>)`](crate::operation::update_endpoint::builders::UpdateEndpointFluentBuilder::set_endpoint_request): <p>Specifies the channel type and other settings for an endpoint.</p>
    /// - On success, responds with [`UpdateEndpointOutput`](crate::operation::update_endpoint::UpdateEndpointOutput) with field(s):
    ///   - [`message_body(Option<MessageBody>)`](crate::operation::update_endpoint::UpdateEndpointOutput::message_body): <p>Provides information about an API request or response.</p>
    /// - On failure, responds with [`SdkError<UpdateEndpointError>`](crate::operation::update_endpoint::UpdateEndpointError)
    pub fn update_endpoint(
        &self,
    ) -> crate::operation::update_endpoint::builders::UpdateEndpointFluentBuilder {
        crate::operation::update_endpoint::builders::UpdateEndpointFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
