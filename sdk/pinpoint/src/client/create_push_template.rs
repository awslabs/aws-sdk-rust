// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreatePushTemplate`](crate::operation::create_push_template::builders::CreatePushTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`push_notification_template_request(PushNotificationTemplateRequest)`](crate::operation::create_push_template::builders::CreatePushTemplateFluentBuilder::push_notification_template_request) / [`set_push_notification_template_request(Option<PushNotificationTemplateRequest>)`](crate::operation::create_push_template::builders::CreatePushTemplateFluentBuilder::set_push_notification_template_request):<br>required: **true**<br><p>Specifies the content and settings for a message template that can be used in messages that are sent through a push notification channel.</p><br>
    ///   - [`template_name(impl Into<String>)`](crate::operation::create_push_template::builders::CreatePushTemplateFluentBuilder::template_name) / [`set_template_name(Option<String>)`](crate::operation::create_push_template::builders::CreatePushTemplateFluentBuilder::set_template_name):<br>required: **true**<br><p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p><br>
    /// - On success, responds with [`CreatePushTemplateOutput`](crate::operation::create_push_template::CreatePushTemplateOutput) with field(s):
    ///   - [`create_template_message_body(Option<CreateTemplateMessageBody>)`](crate::operation::create_push_template::CreatePushTemplateOutput::create_template_message_body): <p>Provides information about a request to create a message template.</p>
    /// - On failure, responds with [`SdkError<CreatePushTemplateError>`](crate::operation::create_push_template::CreatePushTemplateError)
    pub fn create_push_template(&self) -> crate::operation::create_push_template::builders::CreatePushTemplateFluentBuilder {
        crate::operation::create_push_template::builders::CreatePushTemplateFluentBuilder::new(self.handle.clone())
    }
}
