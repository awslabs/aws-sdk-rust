// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSmsTemplate`](crate::client::fluent_builders::CreateSmsTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sms_template_request(SmsTemplateRequest)`](crate::client::fluent_builders::CreateSmsTemplate::sms_template_request) / [`set_sms_template_request(Option<SmsTemplateRequest>)`](crate::client::fluent_builders::CreateSmsTemplate::set_sms_template_request): <p>Specifies the content and settings for a message template that can be used in text messages that are sent through the SMS channel.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateSmsTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateSmsTemplate::set_template_name): <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>
    /// - On success, responds with [`CreateSmsTemplateOutput`](crate::output::CreateSmsTemplateOutput) with field(s):
    ///   - [`create_template_message_body(Option<CreateTemplateMessageBody>)`](crate::output::CreateSmsTemplateOutput::create_template_message_body): <p>Provides information about a request to create a message template.</p>
    /// - On failure, responds with [`SdkError<CreateSmsTemplateError>`](crate::error::CreateSmsTemplateError)
    pub fn create_sms_template(&self) -> crate::client::fluent_builders::CreateSmsTemplate {
        crate::client::fluent_builders::CreateSmsTemplate::new(self.handle.clone())
    }
}
