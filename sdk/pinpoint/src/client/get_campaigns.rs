// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCampaigns`](crate::operation::get_campaigns::builders::GetCampaignsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::get_campaigns::builders::GetCampaignsFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::get_campaigns::builders::GetCampaignsFluentBuilder::set_application_id): <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>
    ///   - [`page_size(impl Into<String>)`](crate::operation::get_campaigns::builders::GetCampaignsFluentBuilder::page_size) / [`set_page_size(Option<String>)`](crate::operation::get_campaigns::builders::GetCampaignsFluentBuilder::set_page_size): <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>
    ///   - [`token(impl Into<String>)`](crate::operation::get_campaigns::builders::GetCampaignsFluentBuilder::token) / [`set_token(Option<String>)`](crate::operation::get_campaigns::builders::GetCampaignsFluentBuilder::set_token): <p>The NextToken string that specifies which page of results to return in a paginated response.</p>
    /// - On success, responds with [`GetCampaignsOutput`](crate::operation::get_campaigns::GetCampaignsOutput) with field(s):
    ///   - [`campaigns_response(Option<CampaignsResponse>)`](crate::operation::get_campaigns::GetCampaignsOutput::campaigns_response): <p>Provides information about the configuration and other settings for all the campaigns that are associated with an application.</p>
    /// - On failure, responds with [`SdkError<GetCampaignsError>`](crate::operation::get_campaigns::GetCampaignsError)
    pub fn get_campaigns(
        &self,
    ) -> crate::operation::get_campaigns::builders::GetCampaignsFluentBuilder {
        crate::operation::get_campaigns::builders::GetCampaignsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
