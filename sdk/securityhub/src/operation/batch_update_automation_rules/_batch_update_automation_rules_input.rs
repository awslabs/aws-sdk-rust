// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchUpdateAutomationRulesInput {
    /// <p> An array of ARNs for the rules that are to be updated. Optionally, you can also include <code>RuleStatus</code> and <code>RuleOrder</code>. </p>
    pub update_automation_rules_request_items: ::std::option::Option<::std::vec::Vec<crate::types::UpdateAutomationRulesRequestItem>>,
}
impl BatchUpdateAutomationRulesInput {
    /// <p> An array of ARNs for the rules that are to be updated. Optionally, you can also include <code>RuleStatus</code> and <code>RuleOrder</code>. </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.update_automation_rules_request_items.is_none()`.
    pub fn update_automation_rules_request_items(&self) -> &[crate::types::UpdateAutomationRulesRequestItem] {
        self.update_automation_rules_request_items.as_deref().unwrap_or_default()
    }
}
impl BatchUpdateAutomationRulesInput {
    /// Creates a new builder-style object to manufacture [`BatchUpdateAutomationRulesInput`](crate::operation::batch_update_automation_rules::BatchUpdateAutomationRulesInput).
    pub fn builder() -> crate::operation::batch_update_automation_rules::builders::BatchUpdateAutomationRulesInputBuilder {
        crate::operation::batch_update_automation_rules::builders::BatchUpdateAutomationRulesInputBuilder::default()
    }
}

/// A builder for [`BatchUpdateAutomationRulesInput`](crate::operation::batch_update_automation_rules::BatchUpdateAutomationRulesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchUpdateAutomationRulesInputBuilder {
    pub(crate) update_automation_rules_request_items: ::std::option::Option<::std::vec::Vec<crate::types::UpdateAutomationRulesRequestItem>>,
}
impl BatchUpdateAutomationRulesInputBuilder {
    /// Appends an item to `update_automation_rules_request_items`.
    ///
    /// To override the contents of this collection use [`set_update_automation_rules_request_items`](Self::set_update_automation_rules_request_items).
    ///
    /// <p> An array of ARNs for the rules that are to be updated. Optionally, you can also include <code>RuleStatus</code> and <code>RuleOrder</code>. </p>
    pub fn update_automation_rules_request_items(mut self, input: crate::types::UpdateAutomationRulesRequestItem) -> Self {
        let mut v = self.update_automation_rules_request_items.unwrap_or_default();
        v.push(input);
        self.update_automation_rules_request_items = ::std::option::Option::Some(v);
        self
    }
    /// <p> An array of ARNs for the rules that are to be updated. Optionally, you can also include <code>RuleStatus</code> and <code>RuleOrder</code>. </p>
    pub fn set_update_automation_rules_request_items(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::UpdateAutomationRulesRequestItem>>,
    ) -> Self {
        self.update_automation_rules_request_items = input;
        self
    }
    /// <p> An array of ARNs for the rules that are to be updated. Optionally, you can also include <code>RuleStatus</code> and <code>RuleOrder</code>. </p>
    pub fn get_update_automation_rules_request_items(
        &self,
    ) -> &::std::option::Option<::std::vec::Vec<crate::types::UpdateAutomationRulesRequestItem>> {
        &self.update_automation_rules_request_items
    }
    /// Consumes the builder and constructs a [`BatchUpdateAutomationRulesInput`](crate::operation::batch_update_automation_rules::BatchUpdateAutomationRulesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_update_automation_rules::BatchUpdateAutomationRulesInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::batch_update_automation_rules::BatchUpdateAutomationRulesInput {
            update_automation_rules_request_items: self.update_automation_rules_request_items,
        })
    }
}
