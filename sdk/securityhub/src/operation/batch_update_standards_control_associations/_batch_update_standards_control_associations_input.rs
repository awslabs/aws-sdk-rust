// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchUpdateStandardsControlAssociationsInput {
    /// <p> Updates the enablement status of a security control in a specified standard. </p>
    pub standards_control_association_updates: ::std::option::Option<::std::vec::Vec<crate::types::StandardsControlAssociationUpdate>>,
}
impl BatchUpdateStandardsControlAssociationsInput {
    /// <p> Updates the enablement status of a security control in a specified standard. </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.standards_control_association_updates.is_none()`.
    pub fn standards_control_association_updates(&self) -> &[crate::types::StandardsControlAssociationUpdate] {
        self.standards_control_association_updates.as_deref().unwrap_or_default()
    }
}
impl BatchUpdateStandardsControlAssociationsInput {
    /// Creates a new builder-style object to manufacture [`BatchUpdateStandardsControlAssociationsInput`](crate::operation::batch_update_standards_control_associations::BatchUpdateStandardsControlAssociationsInput).
    pub fn builder() -> crate::operation::batch_update_standards_control_associations::builders::BatchUpdateStandardsControlAssociationsInputBuilder {
        crate::operation::batch_update_standards_control_associations::builders::BatchUpdateStandardsControlAssociationsInputBuilder::default()
    }
}

/// A builder for [`BatchUpdateStandardsControlAssociationsInput`](crate::operation::batch_update_standards_control_associations::BatchUpdateStandardsControlAssociationsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchUpdateStandardsControlAssociationsInputBuilder {
    pub(crate) standards_control_association_updates: ::std::option::Option<::std::vec::Vec<crate::types::StandardsControlAssociationUpdate>>,
}
impl BatchUpdateStandardsControlAssociationsInputBuilder {
    /// Appends an item to `standards_control_association_updates`.
    ///
    /// To override the contents of this collection use [`set_standards_control_association_updates`](Self::set_standards_control_association_updates).
    ///
    /// <p> Updates the enablement status of a security control in a specified standard. </p>
    pub fn standards_control_association_updates(mut self, input: crate::types::StandardsControlAssociationUpdate) -> Self {
        let mut v = self.standards_control_association_updates.unwrap_or_default();
        v.push(input);
        self.standards_control_association_updates = ::std::option::Option::Some(v);
        self
    }
    /// <p> Updates the enablement status of a security control in a specified standard. </p>
    pub fn set_standards_control_association_updates(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::StandardsControlAssociationUpdate>>,
    ) -> Self {
        self.standards_control_association_updates = input;
        self
    }
    /// <p> Updates the enablement status of a security control in a specified standard. </p>
    pub fn get_standards_control_association_updates(
        &self,
    ) -> &::std::option::Option<::std::vec::Vec<crate::types::StandardsControlAssociationUpdate>> {
        &self.standards_control_association_updates
    }
    /// Consumes the builder and constructs a [`BatchUpdateStandardsControlAssociationsInput`](crate::operation::batch_update_standards_control_associations::BatchUpdateStandardsControlAssociationsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_update_standards_control_associations::BatchUpdateStandardsControlAssociationsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::batch_update_standards_control_associations::BatchUpdateStandardsControlAssociationsInput {
                standards_control_association_updates: self.standards_control_association_updates,
            },
        )
    }
}
