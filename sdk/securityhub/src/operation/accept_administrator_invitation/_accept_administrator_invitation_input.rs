// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AcceptAdministratorInvitationInput {
    /// <p>The account ID of the Security Hub administrator account that sent the invitation.</p>
    pub administrator_id: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the invitation sent from the Security Hub administrator account.</p>
    pub invitation_id: ::std::option::Option<::std::string::String>,
}
impl AcceptAdministratorInvitationInput {
    /// <p>The account ID of the Security Hub administrator account that sent the invitation.</p>
    pub fn administrator_id(&self) -> ::std::option::Option<&str> {
        self.administrator_id.as_deref()
    }
    /// <p>The identifier of the invitation sent from the Security Hub administrator account.</p>
    pub fn invitation_id(&self) -> ::std::option::Option<&str> {
        self.invitation_id.as_deref()
    }
}
impl AcceptAdministratorInvitationInput {
    /// Creates a new builder-style object to manufacture [`AcceptAdministratorInvitationInput`](crate::operation::accept_administrator_invitation::AcceptAdministratorInvitationInput).
    pub fn builder() -> crate::operation::accept_administrator_invitation::builders::AcceptAdministratorInvitationInputBuilder {
        crate::operation::accept_administrator_invitation::builders::AcceptAdministratorInvitationInputBuilder::default()
    }
}

/// A builder for [`AcceptAdministratorInvitationInput`](crate::operation::accept_administrator_invitation::AcceptAdministratorInvitationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AcceptAdministratorInvitationInputBuilder {
    pub(crate) administrator_id: ::std::option::Option<::std::string::String>,
    pub(crate) invitation_id: ::std::option::Option<::std::string::String>,
}
impl AcceptAdministratorInvitationInputBuilder {
    /// <p>The account ID of the Security Hub administrator account that sent the invitation.</p>
    /// This field is required.
    pub fn administrator_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.administrator_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The account ID of the Security Hub administrator account that sent the invitation.</p>
    pub fn set_administrator_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.administrator_id = input;
        self
    }
    /// <p>The account ID of the Security Hub administrator account that sent the invitation.</p>
    pub fn get_administrator_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.administrator_id
    }
    /// <p>The identifier of the invitation sent from the Security Hub administrator account.</p>
    /// This field is required.
    pub fn invitation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.invitation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the invitation sent from the Security Hub administrator account.</p>
    pub fn set_invitation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.invitation_id = input;
        self
    }
    /// <p>The identifier of the invitation sent from the Security Hub administrator account.</p>
    pub fn get_invitation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.invitation_id
    }
    /// Consumes the builder and constructs a [`AcceptAdministratorInvitationInput`](crate::operation::accept_administrator_invitation::AcceptAdministratorInvitationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::accept_administrator_invitation::AcceptAdministratorInvitationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::accept_administrator_invitation::AcceptAdministratorInvitationInput {
            administrator_id: self.administrator_id,
            invitation_id: self.invitation_id,
        })
    }
}
