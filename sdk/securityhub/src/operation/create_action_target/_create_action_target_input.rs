// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateActionTargetInput {
    /// <p>The name of the custom action target. Can contain up to 20 characters.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The description for the custom action target.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The ID for the custom action target. Can contain up to 20 alphanumeric characters.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
}
impl CreateActionTargetInput {
    /// <p>The name of the custom action target. Can contain up to 20 characters.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The description for the custom action target.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The ID for the custom action target. Can contain up to 20 alphanumeric characters.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
}
impl CreateActionTargetInput {
    /// Creates a new builder-style object to manufacture [`CreateActionTargetInput`](crate::operation::create_action_target::CreateActionTargetInput).
    pub fn builder(
    ) -> crate::operation::create_action_target::builders::CreateActionTargetInputBuilder {
        crate::operation::create_action_target::builders::CreateActionTargetInputBuilder::default()
    }
}

/// A builder for [`CreateActionTargetInput`](crate::operation::create_action_target::CreateActionTargetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateActionTargetInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) id: std::option::Option<std::string::String>,
}
impl CreateActionTargetInputBuilder {
    /// <p>The name of the custom action target. Can contain up to 20 characters.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the custom action target. Can contain up to 20 characters.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The description for the custom action target.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description for the custom action target.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The ID for the custom action target. Can contain up to 20 alphanumeric characters.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID for the custom action target. Can contain up to 20 alphanumeric characters.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateActionTargetInput`](crate::operation::create_action_target::CreateActionTargetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_action_target::CreateActionTargetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_action_target::CreateActionTargetInput {
                name: self.name,
                description: self.description,
                id: self.id,
            },
        )
    }
}
