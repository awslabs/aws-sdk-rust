// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchEnableStandards`](crate::operation::batch_enable_standards::builders::BatchEnableStandardsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`standards_subscription_requests(StandardsSubscriptionRequest)`](crate::operation::batch_enable_standards::builders::BatchEnableStandardsFluentBuilder::standards_subscription_requests) / [`set_standards_subscription_requests(Option<Vec::<StandardsSubscriptionRequest>>)`](crate::operation::batch_enable_standards::builders::BatchEnableStandardsFluentBuilder::set_standards_subscription_requests):<br>required: **true**<br><p>The list of standards checks to enable.</p><br>
    /// - On success, responds with [`BatchEnableStandardsOutput`](crate::operation::batch_enable_standards::BatchEnableStandardsOutput) with field(s):
    ///   - [`standards_subscriptions(Option<Vec::<StandardsSubscription>>)`](crate::operation::batch_enable_standards::BatchEnableStandardsOutput::standards_subscriptions): <p>The details of the standards subscriptions that were enabled.</p>
    /// - On failure, responds with [`SdkError<BatchEnableStandardsError>`](crate::operation::batch_enable_standards::BatchEnableStandardsError)
    pub fn batch_enable_standards(&self) -> crate::operation::batch_enable_standards::builders::BatchEnableStandardsFluentBuilder {
        crate::operation::batch_enable_standards::builders::BatchEnableStandardsFluentBuilder::new(self.handle.clone())
    }
}
