// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A placement constraint object to use for tasks.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsEcsTaskDefinitionPlacementConstraintsDetails {
    /// <p>A cluster query language expression to apply to the constraint.</p>
    #[doc(hidden)]
    pub expression: std::option::Option<std::string::String>,
    /// <p>The type of constraint.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<std::string::String>,
}
impl AwsEcsTaskDefinitionPlacementConstraintsDetails {
    /// <p>A cluster query language expression to apply to the constraint.</p>
    pub fn expression(&self) -> std::option::Option<&str> {
        self.expression.as_deref()
    }
    /// <p>The type of constraint.</p>
    pub fn r#type(&self) -> std::option::Option<&str> {
        self.r#type.as_deref()
    }
}
impl AwsEcsTaskDefinitionPlacementConstraintsDetails {
    /// Creates a new builder-style object to manufacture [`AwsEcsTaskDefinitionPlacementConstraintsDetails`](crate::types::AwsEcsTaskDefinitionPlacementConstraintsDetails).
    pub fn builder(
    ) -> crate::types::builders::AwsEcsTaskDefinitionPlacementConstraintsDetailsBuilder {
        crate::types::builders::AwsEcsTaskDefinitionPlacementConstraintsDetailsBuilder::default()
    }
}

/// A builder for [`AwsEcsTaskDefinitionPlacementConstraintsDetails`](crate::types::AwsEcsTaskDefinitionPlacementConstraintsDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsEcsTaskDefinitionPlacementConstraintsDetailsBuilder {
    pub(crate) expression: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<std::string::String>,
}
impl AwsEcsTaskDefinitionPlacementConstraintsDetailsBuilder {
    /// <p>A cluster query language expression to apply to the constraint.</p>
    pub fn expression(mut self, input: impl Into<std::string::String>) -> Self {
        self.expression = Some(input.into());
        self
    }
    /// <p>A cluster query language expression to apply to the constraint.</p>
    pub fn set_expression(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.expression = input;
        self
    }
    /// <p>The type of constraint.</p>
    pub fn r#type(mut self, input: impl Into<std::string::String>) -> Self {
        self.r#type = Some(input.into());
        self
    }
    /// <p>The type of constraint.</p>
    pub fn set_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsEcsTaskDefinitionPlacementConstraintsDetails`](crate::types::AwsEcsTaskDefinitionPlacementConstraintsDetails).
    pub fn build(self) -> crate::types::AwsEcsTaskDefinitionPlacementConstraintsDetails {
        crate::types::AwsEcsTaskDefinitionPlacementConstraintsDetails {
            expression: self.expression,
            r#type: self.r#type,
        }
    }
}
