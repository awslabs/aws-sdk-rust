// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A vendor that generates a vulnerability report.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VulnerabilityVendor {
    /// <p>The name of the vendor.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The URL of the vulnerability advisory.</p>
    pub url: ::std::option::Option<::std::string::String>,
    /// <p>The severity that the vendor assigned to the vulnerability.</p>
    pub vendor_severity: ::std::option::Option<::std::string::String>,
    /// <p>Indicates when the vulnerability advisory was created.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub vendor_created_at: ::std::option::Option<::std::string::String>,
    /// <p>Indicates when the vulnerability advisory was last updated.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub vendor_updated_at: ::std::option::Option<::std::string::String>,
}
impl VulnerabilityVendor {
    /// <p>The name of the vendor.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The URL of the vulnerability advisory.</p>
    pub fn url(&self) -> ::std::option::Option<&str> {
        self.url.as_deref()
    }
    /// <p>The severity that the vendor assigned to the vulnerability.</p>
    pub fn vendor_severity(&self) -> ::std::option::Option<&str> {
        self.vendor_severity.as_deref()
    }
    /// <p>Indicates when the vulnerability advisory was created.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn vendor_created_at(&self) -> ::std::option::Option<&str> {
        self.vendor_created_at.as_deref()
    }
    /// <p>Indicates when the vulnerability advisory was last updated.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn vendor_updated_at(&self) -> ::std::option::Option<&str> {
        self.vendor_updated_at.as_deref()
    }
}
impl VulnerabilityVendor {
    /// Creates a new builder-style object to manufacture [`VulnerabilityVendor`](crate::types::VulnerabilityVendor).
    pub fn builder() -> crate::types::builders::VulnerabilityVendorBuilder {
        crate::types::builders::VulnerabilityVendorBuilder::default()
    }
}

/// A builder for [`VulnerabilityVendor`](crate::types::VulnerabilityVendor).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VulnerabilityVendorBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) url: ::std::option::Option<::std::string::String>,
    pub(crate) vendor_severity: ::std::option::Option<::std::string::String>,
    pub(crate) vendor_created_at: ::std::option::Option<::std::string::String>,
    pub(crate) vendor_updated_at: ::std::option::Option<::std::string::String>,
}
impl VulnerabilityVendorBuilder {
    /// <p>The name of the vendor.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the vendor.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the vendor.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The URL of the vulnerability advisory.</p>
    pub fn url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The URL of the vulnerability advisory.</p>
    pub fn set_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.url = input;
        self
    }
    /// <p>The URL of the vulnerability advisory.</p>
    pub fn get_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.url
    }
    /// <p>The severity that the vendor assigned to the vulnerability.</p>
    pub fn vendor_severity(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vendor_severity = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The severity that the vendor assigned to the vulnerability.</p>
    pub fn set_vendor_severity(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vendor_severity = input;
        self
    }
    /// <p>The severity that the vendor assigned to the vulnerability.</p>
    pub fn get_vendor_severity(&self) -> &::std::option::Option<::std::string::String> {
        &self.vendor_severity
    }
    /// <p>Indicates when the vulnerability advisory was created.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn vendor_created_at(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vendor_created_at = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates when the vulnerability advisory was created.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn set_vendor_created_at(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vendor_created_at = input;
        self
    }
    /// <p>Indicates when the vulnerability advisory was created.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn get_vendor_created_at(&self) -> &::std::option::Option<::std::string::String> {
        &self.vendor_created_at
    }
    /// <p>Indicates when the vulnerability advisory was last updated.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn vendor_updated_at(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vendor_updated_at = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates when the vulnerability advisory was last updated.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn set_vendor_updated_at(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vendor_updated_at = input;
        self
    }
    /// <p>Indicates when the vulnerability advisory was last updated.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn get_vendor_updated_at(&self) -> &::std::option::Option<::std::string::String> {
        &self.vendor_updated_at
    }
    /// Consumes the builder and constructs a [`VulnerabilityVendor`](crate::types::VulnerabilityVendor).
    pub fn build(self) -> crate::types::VulnerabilityVendor {
        crate::types::VulnerabilityVendor {
            name: self.name,
            url: self.url,
            vendor_severity: self.vendor_severity,
            vendor_created_at: self.vendor_created_at,
            vendor_updated_at: self.vendor_updated_at,
        }
    }
}
