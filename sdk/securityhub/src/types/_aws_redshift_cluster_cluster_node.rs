// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A node in an Amazon Redshift cluster.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsRedshiftClusterClusterNode {
    /// <p>The role of the node. A node might be a leader node or a compute node.</p>
    #[doc(hidden)]
    pub node_role: std::option::Option<std::string::String>,
    /// <p>The private IP address of the node.</p>
    #[doc(hidden)]
    pub private_ip_address: std::option::Option<std::string::String>,
    /// <p>The public IP address of the node.</p>
    #[doc(hidden)]
    pub public_ip_address: std::option::Option<std::string::String>,
}
impl AwsRedshiftClusterClusterNode {
    /// <p>The role of the node. A node might be a leader node or a compute node.</p>
    pub fn node_role(&self) -> std::option::Option<&str> {
        self.node_role.as_deref()
    }
    /// <p>The private IP address of the node.</p>
    pub fn private_ip_address(&self) -> std::option::Option<&str> {
        self.private_ip_address.as_deref()
    }
    /// <p>The public IP address of the node.</p>
    pub fn public_ip_address(&self) -> std::option::Option<&str> {
        self.public_ip_address.as_deref()
    }
}
impl AwsRedshiftClusterClusterNode {
    /// Creates a new builder-style object to manufacture [`AwsRedshiftClusterClusterNode`](crate::types::AwsRedshiftClusterClusterNode).
    pub fn builder() -> crate::types::builders::AwsRedshiftClusterClusterNodeBuilder {
        crate::types::builders::AwsRedshiftClusterClusterNodeBuilder::default()
    }
}

/// A builder for [`AwsRedshiftClusterClusterNode`](crate::types::AwsRedshiftClusterClusterNode).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsRedshiftClusterClusterNodeBuilder {
    pub(crate) node_role: std::option::Option<std::string::String>,
    pub(crate) private_ip_address: std::option::Option<std::string::String>,
    pub(crate) public_ip_address: std::option::Option<std::string::String>,
}
impl AwsRedshiftClusterClusterNodeBuilder {
    /// <p>The role of the node. A node might be a leader node or a compute node.</p>
    pub fn node_role(mut self, input: impl Into<std::string::String>) -> Self {
        self.node_role = Some(input.into());
        self
    }
    /// <p>The role of the node. A node might be a leader node or a compute node.</p>
    pub fn set_node_role(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.node_role = input;
        self
    }
    /// <p>The private IP address of the node.</p>
    pub fn private_ip_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.private_ip_address = Some(input.into());
        self
    }
    /// <p>The private IP address of the node.</p>
    pub fn set_private_ip_address(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.private_ip_address = input;
        self
    }
    /// <p>The public IP address of the node.</p>
    pub fn public_ip_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.public_ip_address = Some(input.into());
        self
    }
    /// <p>The public IP address of the node.</p>
    pub fn set_public_ip_address(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.public_ip_address = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsRedshiftClusterClusterNode`](crate::types::AwsRedshiftClusterClusterNode).
    pub fn build(self) -> crate::types::AwsRedshiftClusterClusterNode {
        crate::types::AwsRedshiftClusterClusterNode {
            node_role: self.node_role,
            private_ip_address: self.private_ip_address,
            public_ip_address: self.public_ip_address,
        }
    }
}
