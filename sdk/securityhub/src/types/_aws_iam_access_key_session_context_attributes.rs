// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Attributes of the session that the key was used for.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsIamAccessKeySessionContextAttributes {
    /// <p>Indicates whether the session used multi-factor authentication (MFA).</p>
    #[doc(hidden)]
    pub mfa_authenticated: bool,
    /// <p>Indicates when the session was created.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    #[doc(hidden)]
    pub creation_date: std::option::Option<std::string::String>,
}
impl AwsIamAccessKeySessionContextAttributes {
    /// <p>Indicates whether the session used multi-factor authentication (MFA).</p>
    pub fn mfa_authenticated(&self) -> bool {
        self.mfa_authenticated
    }
    /// <p>Indicates when the session was created.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn creation_date(&self) -> std::option::Option<&str> {
        self.creation_date.as_deref()
    }
}
impl AwsIamAccessKeySessionContextAttributes {
    /// Creates a new builder-style object to manufacture [`AwsIamAccessKeySessionContextAttributes`](crate::types::AwsIamAccessKeySessionContextAttributes).
    pub fn builder() -> crate::types::builders::AwsIamAccessKeySessionContextAttributesBuilder {
        crate::types::builders::AwsIamAccessKeySessionContextAttributesBuilder::default()
    }
}

/// A builder for [`AwsIamAccessKeySessionContextAttributes`](crate::types::AwsIamAccessKeySessionContextAttributes).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsIamAccessKeySessionContextAttributesBuilder {
    pub(crate) mfa_authenticated: std::option::Option<bool>,
    pub(crate) creation_date: std::option::Option<std::string::String>,
}
impl AwsIamAccessKeySessionContextAttributesBuilder {
    /// <p>Indicates whether the session used multi-factor authentication (MFA).</p>
    pub fn mfa_authenticated(mut self, input: bool) -> Self {
        self.mfa_authenticated = Some(input);
        self
    }
    /// <p>Indicates whether the session used multi-factor authentication (MFA).</p>
    pub fn set_mfa_authenticated(mut self, input: std::option::Option<bool>) -> Self {
        self.mfa_authenticated = input;
        self
    }
    /// <p>Indicates when the session was created.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn creation_date(mut self, input: impl Into<std::string::String>) -> Self {
        self.creation_date = Some(input.into());
        self
    }
    /// <p>Indicates when the session was created.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn set_creation_date(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.creation_date = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsIamAccessKeySessionContextAttributes`](crate::types::AwsIamAccessKeySessionContextAttributes).
    pub fn build(self) -> crate::types::AwsIamAccessKeySessionContextAttributes {
        crate::types::AwsIamAccessKeySessionContextAttributes {
            mfa_authenticated: self.mfa_authenticated.unwrap_or_default(),
            creation_date: self.creation_date,
        }
    }
}
