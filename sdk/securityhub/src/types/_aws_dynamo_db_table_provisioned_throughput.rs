// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the provisioned throughput for the table or for a global secondary index.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsDynamoDbTableProvisionedThroughput {
    /// <p>Indicates when the provisioned throughput was last decreased.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    #[doc(hidden)]
    pub last_decrease_date_time: std::option::Option<std::string::String>,
    /// <p>Indicates when the provisioned throughput was last increased.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    #[doc(hidden)]
    pub last_increase_date_time: std::option::Option<std::string::String>,
    /// <p>The number of times during the current UTC calendar day that the provisioned throughput was decreased.</p>
    #[doc(hidden)]
    pub number_of_decreases_today: i32,
    /// <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    #[doc(hidden)]
    pub read_capacity_units: i32,
    /// <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    #[doc(hidden)]
    pub write_capacity_units: i32,
}
impl AwsDynamoDbTableProvisionedThroughput {
    /// <p>Indicates when the provisioned throughput was last decreased.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn last_decrease_date_time(&self) -> std::option::Option<&str> {
        self.last_decrease_date_time.as_deref()
    }
    /// <p>Indicates when the provisioned throughput was last increased.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn last_increase_date_time(&self) -> std::option::Option<&str> {
        self.last_increase_date_time.as_deref()
    }
    /// <p>The number of times during the current UTC calendar day that the provisioned throughput was decreased.</p>
    pub fn number_of_decreases_today(&self) -> i32 {
        self.number_of_decreases_today
    }
    /// <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn read_capacity_units(&self) -> i32 {
        self.read_capacity_units
    }
    /// <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn write_capacity_units(&self) -> i32 {
        self.write_capacity_units
    }
}
impl AwsDynamoDbTableProvisionedThroughput {
    /// Creates a new builder-style object to manufacture [`AwsDynamoDbTableProvisionedThroughput`](crate::types::AwsDynamoDbTableProvisionedThroughput).
    pub fn builder() -> crate::types::builders::AwsDynamoDbTableProvisionedThroughputBuilder {
        crate::types::builders::AwsDynamoDbTableProvisionedThroughputBuilder::default()
    }
}

/// A builder for [`AwsDynamoDbTableProvisionedThroughput`](crate::types::AwsDynamoDbTableProvisionedThroughput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsDynamoDbTableProvisionedThroughputBuilder {
    pub(crate) last_decrease_date_time: std::option::Option<std::string::String>,
    pub(crate) last_increase_date_time: std::option::Option<std::string::String>,
    pub(crate) number_of_decreases_today: std::option::Option<i32>,
    pub(crate) read_capacity_units: std::option::Option<i32>,
    pub(crate) write_capacity_units: std::option::Option<i32>,
}
impl AwsDynamoDbTableProvisionedThroughputBuilder {
    /// <p>Indicates when the provisioned throughput was last decreased.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn last_decrease_date_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_decrease_date_time = Some(input.into());
        self
    }
    /// <p>Indicates when the provisioned throughput was last decreased.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn set_last_decrease_date_time(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.last_decrease_date_time = input;
        self
    }
    /// <p>Indicates when the provisioned throughput was last increased.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn last_increase_date_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_increase_date_time = Some(input.into());
        self
    }
    /// <p>Indicates when the provisioned throughput was last increased.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn set_last_increase_date_time(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.last_increase_date_time = input;
        self
    }
    /// <p>The number of times during the current UTC calendar day that the provisioned throughput was decreased.</p>
    pub fn number_of_decreases_today(mut self, input: i32) -> Self {
        self.number_of_decreases_today = Some(input);
        self
    }
    /// <p>The number of times during the current UTC calendar day that the provisioned throughput was decreased.</p>
    pub fn set_number_of_decreases_today(mut self, input: std::option::Option<i32>) -> Self {
        self.number_of_decreases_today = input;
        self
    }
    /// <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn read_capacity_units(mut self, input: i32) -> Self {
        self.read_capacity_units = Some(input);
        self
    }
    /// <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn set_read_capacity_units(mut self, input: std::option::Option<i32>) -> Self {
        self.read_capacity_units = input;
        self
    }
    /// <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn write_capacity_units(mut self, input: i32) -> Self {
        self.write_capacity_units = Some(input);
        self
    }
    /// <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.</p>
    pub fn set_write_capacity_units(mut self, input: std::option::Option<i32>) -> Self {
        self.write_capacity_units = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsDynamoDbTableProvisionedThroughput`](crate::types::AwsDynamoDbTableProvisionedThroughput).
    pub fn build(self) -> crate::types::AwsDynamoDbTableProvisionedThroughput {
        crate::types::AwsDynamoDbTableProvisionedThroughput {
            last_decrease_date_time: self.last_decrease_date_time,
            last_increase_date_time: self.last_increase_date_time,
            number_of_decreases_today: self.number_of_decreases_today.unwrap_or_default(),
            read_capacity_units: self.read_capacity_units.unwrap_or_default(),
            write_capacity_units: self.write_capacity_units.unwrap_or_default(),
        }
    }
}
