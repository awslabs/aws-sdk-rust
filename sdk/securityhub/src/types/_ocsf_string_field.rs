// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// When writing a match expression against `OcsfStringField`, it is important to ensure
/// your code is forward-compatible. That is, if a match arm handles a case for a
/// feature that is supported by the service but has not been represented as an enum
/// variant in a current version of SDK, your code should continue to work when you
/// upgrade SDK to a future version in which the enum does include a variant for that
/// feature.
///
/// Here is an example of how you can make a match expression forward-compatible:
///
/// ```text
/// # let ocsfstringfield = unimplemented!();
/// match ocsfstringfield {
///     OcsfStringField::ActivityName => { /* ... */ },
///     OcsfStringField::ClassName => { /* ... */ },
///     OcsfStringField::CloudAccountName => { /* ... */ },
///     OcsfStringField::CloudAccountUid => { /* ... */ },
///     OcsfStringField::CloudProvider => { /* ... */ },
///     OcsfStringField::CloudRegion => { /* ... */ },
///     OcsfStringField::Comment => { /* ... */ },
///     OcsfStringField::ComplianceAssessmentsCategory => { /* ... */ },
///     OcsfStringField::ComplianceAssessmentsName => { /* ... */ },
///     OcsfStringField::ComplianceControl => { /* ... */ },
///     OcsfStringField::ComplianceStandards => { /* ... */ },
///     OcsfStringField::ComplianceStatus => { /* ... */ },
///     OcsfStringField::DatabucketEncryptionDetailsAlgorithm => { /* ... */ },
///     OcsfStringField::DatabucketEncryptionDetailsKeyUid => { /* ... */ },
///     OcsfStringField::DatabucketFileDataClassificationsClassifierDetailsType => { /* ... */ },
///     OcsfStringField::EvidencesActorUserAccountUid => { /* ... */ },
///     OcsfStringField::EvidencesApiOperation => { /* ... */ },
///     OcsfStringField::EvidencesApiResponseErrorMessage => { /* ... */ },
///     OcsfStringField::EvidencesApiServiceName => { /* ... */ },
///     OcsfStringField::EvidencesConnectionInfoDirection => { /* ... */ },
///     OcsfStringField::EvidencesConnectionInfoProtocolName => { /* ... */ },
///     OcsfStringField::EvidencesDstEndpointAutonomousSystemName => { /* ... */ },
///     OcsfStringField::EvidencesDstEndpointLocationCity => { /* ... */ },
///     OcsfStringField::EvidencesDstEndpointLocationCountry => { /* ... */ },
///     OcsfStringField::EvidencesSrcEndpointAutonomousSystemName => { /* ... */ },
///     OcsfStringField::EvidencesSrcEndpointHostname => { /* ... */ },
///     OcsfStringField::EvidencesSrcEndpointLocationCity => { /* ... */ },
///     OcsfStringField::EvidencesSrcEndpointLocationCountry => { /* ... */ },
///     OcsfStringField::FindingInfoAnalyticName => { /* ... */ },
///     OcsfStringField::FindingInfoDesc => { /* ... */ },
///     OcsfStringField::FindingInfoRelatedEventsProductUid => { /* ... */ },
///     OcsfStringField::FindingInfoRelatedEventsTitle => { /* ... */ },
///     OcsfStringField::FindingInfoRelatedEventsUid => { /* ... */ },
///     OcsfStringField::FindingInfoSrcUrl => { /* ... */ },
///     OcsfStringField::FindingInfoTitle => { /* ... */ },
///     OcsfStringField::FindingInfoTypes => { /* ... */ },
///     OcsfStringField::FindingInfoUid => { /* ... */ },
///     OcsfStringField::MalwareName => { /* ... */ },
///     OcsfStringField::MalwareSeverity => { /* ... */ },
///     OcsfStringField::MalwareScanInfoUid => { /* ... */ },
///     OcsfStringField::MetadataProductName => { /* ... */ },
///     OcsfStringField::MetadataProductUid => { /* ... */ },
///     OcsfStringField::MetadataProductVendorName => { /* ... */ },
///     OcsfStringField::MetadataUid => { /* ... */ },
///     OcsfStringField::RemediationDesc => { /* ... */ },
///     OcsfStringField::RemediationReferences => { /* ... */ },
///     OcsfStringField::ResourcesCloudFunctionLayersUidAlt => { /* ... */ },
///     OcsfStringField::ResourcesCloudFunctionRuntime => { /* ... */ },
///     OcsfStringField::ResourcesCloudFunctionUserUid => { /* ... */ },
///     OcsfStringField::ResourcesCloudPartition => { /* ... */ },
///     OcsfStringField::ResourcesDeviceEncryptionDetailsKeyUid => { /* ... */ },
///     OcsfStringField::ResourcesDeviceImageUid => { /* ... */ },
///     OcsfStringField::ResourcesImageArchitecture => { /* ... */ },
///     OcsfStringField::ResourcesImageRegistryUid => { /* ... */ },
///     OcsfStringField::ResourcesImageRepositoryName => { /* ... */ },
///     OcsfStringField::ResourcesImageUid => { /* ... */ },
///     OcsfStringField::ResourcesRegion => { /* ... */ },
///     OcsfStringField::ResourcesSubnetInfoUid => { /* ... */ },
///     OcsfStringField::ResourcesType => { /* ... */ },
///     OcsfStringField::ResourcesUid => { /* ... */ },
///     OcsfStringField::ResourcesVpcUid => { /* ... */ },
///     OcsfStringField::Severity => { /* ... */ },
///     OcsfStringField::Status => { /* ... */ },
///     OcsfStringField::VulnerabilitiesAffectedCodeFilePath => { /* ... */ },
///     OcsfStringField::VulnerabilitiesAffectedPackagesName => { /* ... */ },
///     OcsfStringField::VulnerabilitiesCveEpssScore => { /* ... */ },
///     OcsfStringField::VulnerabilitiesCveUid => { /* ... */ },
///     OcsfStringField::VulnerabilitiesFixCoverage => { /* ... */ },
///     OcsfStringField::VulnerabilitiesRelatedVulnerabilities => { /* ... */ },
///     other @ _ if other.as_str() == "NewFeature" => { /* handles a case for `NewFeature` */ },
///     _ => { /* ... */ },
/// }
/// ```
/// The above code demonstrates that when `ocsfstringfield` represents
/// `NewFeature`, the execution path will lead to the second last match arm,
/// even though the enum does not contain a variant `OcsfStringField::NewFeature`
/// in the current version of SDK. The reason is that the variable `other`,
/// created by the `@` operator, is bound to
/// `OcsfStringField::Unknown(UnknownVariantValue("NewFeature".to_owned()))`
/// and calling `as_str` on it yields `"NewFeature"`.
/// This match expression is forward-compatible when executed with a newer
/// version of SDK where the variant `OcsfStringField::NewFeature` is defined.
/// Specifically, when `ocsfstringfield` represents `NewFeature`,
/// the execution path will hit the second last match arm as before by virtue of
/// calling `as_str` on `OcsfStringField::NewFeature` also yielding `"NewFeature"`.
///
/// Explicitly matching on the `Unknown` variant should
/// be avoided for two reasons:
/// - The inner data `UnknownVariantValue` is opaque, and no further information can be extracted.
/// - It might inadvertently shadow other intended match arms.
///
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::Eq, ::std::cmp::Ord, ::std::cmp::PartialEq, ::std::cmp::PartialOrd, ::std::fmt::Debug, ::std::hash::Hash,
)]
pub enum OcsfStringField {
    #[allow(missing_docs)] // documentation missing in model
    ActivityName,
    #[allow(missing_docs)] // documentation missing in model
    ClassName,
    #[allow(missing_docs)] // documentation missing in model
    CloudAccountName,
    #[allow(missing_docs)] // documentation missing in model
    CloudAccountUid,
    #[allow(missing_docs)] // documentation missing in model
    CloudProvider,
    #[allow(missing_docs)] // documentation missing in model
    CloudRegion,
    #[allow(missing_docs)] // documentation missing in model
    Comment,
    #[allow(missing_docs)] // documentation missing in model
    ComplianceAssessmentsCategory,
    #[allow(missing_docs)] // documentation missing in model
    ComplianceAssessmentsName,
    #[allow(missing_docs)] // documentation missing in model
    ComplianceControl,
    #[allow(missing_docs)] // documentation missing in model
    ComplianceStandards,
    #[allow(missing_docs)] // documentation missing in model
    ComplianceStatus,
    #[allow(missing_docs)] // documentation missing in model
    DatabucketEncryptionDetailsAlgorithm,
    #[allow(missing_docs)] // documentation missing in model
    DatabucketEncryptionDetailsKeyUid,
    #[allow(missing_docs)] // documentation missing in model
    DatabucketFileDataClassificationsClassifierDetailsType,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesActorUserAccountUid,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesApiOperation,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesApiResponseErrorMessage,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesApiServiceName,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesConnectionInfoDirection,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesConnectionInfoProtocolName,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesDstEndpointAutonomousSystemName,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesDstEndpointLocationCity,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesDstEndpointLocationCountry,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesSrcEndpointAutonomousSystemName,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesSrcEndpointHostname,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesSrcEndpointLocationCity,
    #[allow(missing_docs)] // documentation missing in model
    EvidencesSrcEndpointLocationCountry,
    #[allow(missing_docs)] // documentation missing in model
    FindingInfoAnalyticName,
    #[allow(missing_docs)] // documentation missing in model
    FindingInfoDesc,
    #[allow(missing_docs)] // documentation missing in model
    FindingInfoRelatedEventsProductUid,
    #[allow(missing_docs)] // documentation missing in model
    FindingInfoRelatedEventsTitle,
    #[allow(missing_docs)] // documentation missing in model
    FindingInfoRelatedEventsUid,
    #[allow(missing_docs)] // documentation missing in model
    FindingInfoSrcUrl,
    #[allow(missing_docs)] // documentation missing in model
    FindingInfoTitle,
    #[allow(missing_docs)] // documentation missing in model
    FindingInfoTypes,
    #[allow(missing_docs)] // documentation missing in model
    FindingInfoUid,
    #[allow(missing_docs)] // documentation missing in model
    MalwareName,
    #[allow(missing_docs)] // documentation missing in model
    MalwareSeverity,
    #[allow(missing_docs)] // documentation missing in model
    MalwareScanInfoUid,
    #[allow(missing_docs)] // documentation missing in model
    MetadataProductName,
    #[allow(missing_docs)] // documentation missing in model
    MetadataProductUid,
    #[allow(missing_docs)] // documentation missing in model
    MetadataProductVendorName,
    #[allow(missing_docs)] // documentation missing in model
    MetadataUid,
    #[allow(missing_docs)] // documentation missing in model
    RemediationDesc,
    #[allow(missing_docs)] // documentation missing in model
    RemediationReferences,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesCloudFunctionLayersUidAlt,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesCloudFunctionRuntime,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesCloudFunctionUserUid,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesCloudPartition,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesDeviceEncryptionDetailsKeyUid,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesDeviceImageUid,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesImageArchitecture,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesImageRegistryUid,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesImageRepositoryName,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesImageUid,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesRegion,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesSubnetInfoUid,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesType,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesUid,
    #[allow(missing_docs)] // documentation missing in model
    ResourcesVpcUid,
    #[allow(missing_docs)] // documentation missing in model
    Severity,
    #[allow(missing_docs)] // documentation missing in model
    Status,
    #[allow(missing_docs)] // documentation missing in model
    VulnerabilitiesAffectedCodeFilePath,
    #[allow(missing_docs)] // documentation missing in model
    VulnerabilitiesAffectedPackagesName,
    #[allow(missing_docs)] // documentation missing in model
    VulnerabilitiesCveEpssScore,
    #[allow(missing_docs)] // documentation missing in model
    VulnerabilitiesCveUid,
    #[allow(missing_docs)] // documentation missing in model
    VulnerabilitiesFixCoverage,
    #[allow(missing_docs)] // documentation missing in model
    VulnerabilitiesRelatedVulnerabilities,
    /// `Unknown` contains new variants that have been added since this code was generated.
    #[deprecated(note = "Don't directly match on `Unknown`. See the docs on this enum for the correct way to handle unknown variants.")]
    Unknown(crate::primitives::sealed_enum_unknown::UnknownVariantValue),
}
impl ::std::convert::From<&str> for OcsfStringField {
    fn from(s: &str) -> Self {
        match s {
            "activity_name" => OcsfStringField::ActivityName,
            "class_name" => OcsfStringField::ClassName,
            "cloud.account.name" => OcsfStringField::CloudAccountName,
            "cloud.account.uid" => OcsfStringField::CloudAccountUid,
            "cloud.provider" => OcsfStringField::CloudProvider,
            "cloud.region" => OcsfStringField::CloudRegion,
            "comment" => OcsfStringField::Comment,
            "compliance.assessments.category" => OcsfStringField::ComplianceAssessmentsCategory,
            "compliance.assessments.name" => OcsfStringField::ComplianceAssessmentsName,
            "compliance.control" => OcsfStringField::ComplianceControl,
            "compliance.standards" => OcsfStringField::ComplianceStandards,
            "compliance.status" => OcsfStringField::ComplianceStatus,
            "databucket.encryption_details.algorithm" => OcsfStringField::DatabucketEncryptionDetailsAlgorithm,
            "databucket.encryption_details.key_uid" => OcsfStringField::DatabucketEncryptionDetailsKeyUid,
            "databucket.file.data_classifications.classifier_details.type" => OcsfStringField::DatabucketFileDataClassificationsClassifierDetailsType,
            "evidences.actor.user.account.uid" => OcsfStringField::EvidencesActorUserAccountUid,
            "evidences.api.operation" => OcsfStringField::EvidencesApiOperation,
            "evidences.api.response.error_message" => OcsfStringField::EvidencesApiResponseErrorMessage,
            "evidences.api.service.name" => OcsfStringField::EvidencesApiServiceName,
            "evidences.connection_info.direction" => OcsfStringField::EvidencesConnectionInfoDirection,
            "evidences.connection_info.protocol_name" => OcsfStringField::EvidencesConnectionInfoProtocolName,
            "evidences.dst_endpoint.autonomous_system.name" => OcsfStringField::EvidencesDstEndpointAutonomousSystemName,
            "evidences.dst_endpoint.location.city" => OcsfStringField::EvidencesDstEndpointLocationCity,
            "evidences.dst_endpoint.location.country" => OcsfStringField::EvidencesDstEndpointLocationCountry,
            "evidences.src_endpoint.autonomous_system.name" => OcsfStringField::EvidencesSrcEndpointAutonomousSystemName,
            "evidences.src_endpoint.hostname" => OcsfStringField::EvidencesSrcEndpointHostname,
            "evidences.src_endpoint.location.city" => OcsfStringField::EvidencesSrcEndpointLocationCity,
            "evidences.src_endpoint.location.country" => OcsfStringField::EvidencesSrcEndpointLocationCountry,
            "finding_info.analytic.name" => OcsfStringField::FindingInfoAnalyticName,
            "finding_info.desc" => OcsfStringField::FindingInfoDesc,
            "finding_info.related_events.product.uid" => OcsfStringField::FindingInfoRelatedEventsProductUid,
            "finding_info.related_events.title" => OcsfStringField::FindingInfoRelatedEventsTitle,
            "finding_info.related_events.uid" => OcsfStringField::FindingInfoRelatedEventsUid,
            "finding_info.src_url" => OcsfStringField::FindingInfoSrcUrl,
            "finding_info.title" => OcsfStringField::FindingInfoTitle,
            "finding_info.types" => OcsfStringField::FindingInfoTypes,
            "finding_info.uid" => OcsfStringField::FindingInfoUid,
            "malware.name" => OcsfStringField::MalwareName,
            "malware.severity" => OcsfStringField::MalwareSeverity,
            "malware_scan_info.uid" => OcsfStringField::MalwareScanInfoUid,
            "metadata.product.name" => OcsfStringField::MetadataProductName,
            "metadata.product.uid" => OcsfStringField::MetadataProductUid,
            "metadata.product.vendor_name" => OcsfStringField::MetadataProductVendorName,
            "metadata.uid" => OcsfStringField::MetadataUid,
            "remediation.desc" => OcsfStringField::RemediationDesc,
            "remediation.references" => OcsfStringField::RemediationReferences,
            "resources.cloud_function.layers.uid_alt" => OcsfStringField::ResourcesCloudFunctionLayersUidAlt,
            "resources.cloud_function.runtime" => OcsfStringField::ResourcesCloudFunctionRuntime,
            "resources.cloud_function.user.uid" => OcsfStringField::ResourcesCloudFunctionUserUid,
            "resources.cloud_partition" => OcsfStringField::ResourcesCloudPartition,
            "resources.device.encryption_details.key_uid" => OcsfStringField::ResourcesDeviceEncryptionDetailsKeyUid,
            "resources.device.image.uid" => OcsfStringField::ResourcesDeviceImageUid,
            "resources.image.architecture" => OcsfStringField::ResourcesImageArchitecture,
            "resources.image.registry_uid" => OcsfStringField::ResourcesImageRegistryUid,
            "resources.image.repository_name" => OcsfStringField::ResourcesImageRepositoryName,
            "resources.image.uid" => OcsfStringField::ResourcesImageUid,
            "resources.region" => OcsfStringField::ResourcesRegion,
            "resources.subnet_info.uid" => OcsfStringField::ResourcesSubnetInfoUid,
            "resources.type" => OcsfStringField::ResourcesType,
            "resources.uid" => OcsfStringField::ResourcesUid,
            "resources.vpc_uid" => OcsfStringField::ResourcesVpcUid,
            "severity" => OcsfStringField::Severity,
            "status" => OcsfStringField::Status,
            "vulnerabilities.affected_code.file.path" => OcsfStringField::VulnerabilitiesAffectedCodeFilePath,
            "vulnerabilities.affected_packages.name" => OcsfStringField::VulnerabilitiesAffectedPackagesName,
            "vulnerabilities.cve.epss.score" => OcsfStringField::VulnerabilitiesCveEpssScore,
            "vulnerabilities.cve.uid" => OcsfStringField::VulnerabilitiesCveUid,
            "vulnerabilities.fix_coverage" => OcsfStringField::VulnerabilitiesFixCoverage,
            "vulnerabilities.related_vulnerabilities" => OcsfStringField::VulnerabilitiesRelatedVulnerabilities,
            other => OcsfStringField::Unknown(crate::primitives::sealed_enum_unknown::UnknownVariantValue(other.to_owned())),
        }
    }
}
impl ::std::str::FromStr for OcsfStringField {
    type Err = ::std::convert::Infallible;

    fn from_str(s: &str) -> ::std::result::Result<Self, <Self as ::std::str::FromStr>::Err> {
        ::std::result::Result::Ok(OcsfStringField::from(s))
    }
}
impl OcsfStringField {
    /// Returns the `&str` value of the enum member.
    pub fn as_str(&self) -> &str {
        match self {
            OcsfStringField::ActivityName => "activity_name",
            OcsfStringField::ClassName => "class_name",
            OcsfStringField::CloudAccountName => "cloud.account.name",
            OcsfStringField::CloudAccountUid => "cloud.account.uid",
            OcsfStringField::CloudProvider => "cloud.provider",
            OcsfStringField::CloudRegion => "cloud.region",
            OcsfStringField::Comment => "comment",
            OcsfStringField::ComplianceAssessmentsCategory => "compliance.assessments.category",
            OcsfStringField::ComplianceAssessmentsName => "compliance.assessments.name",
            OcsfStringField::ComplianceControl => "compliance.control",
            OcsfStringField::ComplianceStandards => "compliance.standards",
            OcsfStringField::ComplianceStatus => "compliance.status",
            OcsfStringField::DatabucketEncryptionDetailsAlgorithm => "databucket.encryption_details.algorithm",
            OcsfStringField::DatabucketEncryptionDetailsKeyUid => "databucket.encryption_details.key_uid",
            OcsfStringField::DatabucketFileDataClassificationsClassifierDetailsType => "databucket.file.data_classifications.classifier_details.type",
            OcsfStringField::EvidencesActorUserAccountUid => "evidences.actor.user.account.uid",
            OcsfStringField::EvidencesApiOperation => "evidences.api.operation",
            OcsfStringField::EvidencesApiResponseErrorMessage => "evidences.api.response.error_message",
            OcsfStringField::EvidencesApiServiceName => "evidences.api.service.name",
            OcsfStringField::EvidencesConnectionInfoDirection => "evidences.connection_info.direction",
            OcsfStringField::EvidencesConnectionInfoProtocolName => "evidences.connection_info.protocol_name",
            OcsfStringField::EvidencesDstEndpointAutonomousSystemName => "evidences.dst_endpoint.autonomous_system.name",
            OcsfStringField::EvidencesDstEndpointLocationCity => "evidences.dst_endpoint.location.city",
            OcsfStringField::EvidencesDstEndpointLocationCountry => "evidences.dst_endpoint.location.country",
            OcsfStringField::EvidencesSrcEndpointAutonomousSystemName => "evidences.src_endpoint.autonomous_system.name",
            OcsfStringField::EvidencesSrcEndpointHostname => "evidences.src_endpoint.hostname",
            OcsfStringField::EvidencesSrcEndpointLocationCity => "evidences.src_endpoint.location.city",
            OcsfStringField::EvidencesSrcEndpointLocationCountry => "evidences.src_endpoint.location.country",
            OcsfStringField::FindingInfoAnalyticName => "finding_info.analytic.name",
            OcsfStringField::FindingInfoDesc => "finding_info.desc",
            OcsfStringField::FindingInfoRelatedEventsProductUid => "finding_info.related_events.product.uid",
            OcsfStringField::FindingInfoRelatedEventsTitle => "finding_info.related_events.title",
            OcsfStringField::FindingInfoRelatedEventsUid => "finding_info.related_events.uid",
            OcsfStringField::FindingInfoSrcUrl => "finding_info.src_url",
            OcsfStringField::FindingInfoTitle => "finding_info.title",
            OcsfStringField::FindingInfoTypes => "finding_info.types",
            OcsfStringField::FindingInfoUid => "finding_info.uid",
            OcsfStringField::MalwareName => "malware.name",
            OcsfStringField::MalwareSeverity => "malware.severity",
            OcsfStringField::MalwareScanInfoUid => "malware_scan_info.uid",
            OcsfStringField::MetadataProductName => "metadata.product.name",
            OcsfStringField::MetadataProductUid => "metadata.product.uid",
            OcsfStringField::MetadataProductVendorName => "metadata.product.vendor_name",
            OcsfStringField::MetadataUid => "metadata.uid",
            OcsfStringField::RemediationDesc => "remediation.desc",
            OcsfStringField::RemediationReferences => "remediation.references",
            OcsfStringField::ResourcesCloudFunctionLayersUidAlt => "resources.cloud_function.layers.uid_alt",
            OcsfStringField::ResourcesCloudFunctionRuntime => "resources.cloud_function.runtime",
            OcsfStringField::ResourcesCloudFunctionUserUid => "resources.cloud_function.user.uid",
            OcsfStringField::ResourcesCloudPartition => "resources.cloud_partition",
            OcsfStringField::ResourcesDeviceEncryptionDetailsKeyUid => "resources.device.encryption_details.key_uid",
            OcsfStringField::ResourcesDeviceImageUid => "resources.device.image.uid",
            OcsfStringField::ResourcesImageArchitecture => "resources.image.architecture",
            OcsfStringField::ResourcesImageRegistryUid => "resources.image.registry_uid",
            OcsfStringField::ResourcesImageRepositoryName => "resources.image.repository_name",
            OcsfStringField::ResourcesImageUid => "resources.image.uid",
            OcsfStringField::ResourcesRegion => "resources.region",
            OcsfStringField::ResourcesSubnetInfoUid => "resources.subnet_info.uid",
            OcsfStringField::ResourcesType => "resources.type",
            OcsfStringField::ResourcesUid => "resources.uid",
            OcsfStringField::ResourcesVpcUid => "resources.vpc_uid",
            OcsfStringField::Severity => "severity",
            OcsfStringField::Status => "status",
            OcsfStringField::VulnerabilitiesAffectedCodeFilePath => "vulnerabilities.affected_code.file.path",
            OcsfStringField::VulnerabilitiesAffectedPackagesName => "vulnerabilities.affected_packages.name",
            OcsfStringField::VulnerabilitiesCveEpssScore => "vulnerabilities.cve.epss.score",
            OcsfStringField::VulnerabilitiesCveUid => "vulnerabilities.cve.uid",
            OcsfStringField::VulnerabilitiesFixCoverage => "vulnerabilities.fix_coverage",
            OcsfStringField::VulnerabilitiesRelatedVulnerabilities => "vulnerabilities.related_vulnerabilities",
            OcsfStringField::Unknown(value) => value.as_str(),
        }
    }
    /// Returns all the `&str` representations of the enum members.
    pub const fn values() -> &'static [&'static str] {
        &[
            "activity_name",
            "class_name",
            "cloud.account.name",
            "cloud.account.uid",
            "cloud.provider",
            "cloud.region",
            "comment",
            "compliance.assessments.category",
            "compliance.assessments.name",
            "compliance.control",
            "compliance.standards",
            "compliance.status",
            "databucket.encryption_details.algorithm",
            "databucket.encryption_details.key_uid",
            "databucket.file.data_classifications.classifier_details.type",
            "evidences.actor.user.account.uid",
            "evidences.api.operation",
            "evidences.api.response.error_message",
            "evidences.api.service.name",
            "evidences.connection_info.direction",
            "evidences.connection_info.protocol_name",
            "evidences.dst_endpoint.autonomous_system.name",
            "evidences.dst_endpoint.location.city",
            "evidences.dst_endpoint.location.country",
            "evidences.src_endpoint.autonomous_system.name",
            "evidences.src_endpoint.hostname",
            "evidences.src_endpoint.location.city",
            "evidences.src_endpoint.location.country",
            "finding_info.analytic.name",
            "finding_info.desc",
            "finding_info.related_events.product.uid",
            "finding_info.related_events.title",
            "finding_info.related_events.uid",
            "finding_info.src_url",
            "finding_info.title",
            "finding_info.types",
            "finding_info.uid",
            "malware.name",
            "malware.severity",
            "malware_scan_info.uid",
            "metadata.product.name",
            "metadata.product.uid",
            "metadata.product.vendor_name",
            "metadata.uid",
            "remediation.desc",
            "remediation.references",
            "resources.cloud_function.layers.uid_alt",
            "resources.cloud_function.runtime",
            "resources.cloud_function.user.uid",
            "resources.cloud_partition",
            "resources.device.encryption_details.key_uid",
            "resources.device.image.uid",
            "resources.image.architecture",
            "resources.image.registry_uid",
            "resources.image.repository_name",
            "resources.image.uid",
            "resources.region",
            "resources.subnet_info.uid",
            "resources.type",
            "resources.uid",
            "resources.vpc_uid",
            "severity",
            "status",
            "vulnerabilities.affected_code.file.path",
            "vulnerabilities.affected_packages.name",
            "vulnerabilities.cve.epss.score",
            "vulnerabilities.cve.uid",
            "vulnerabilities.fix_coverage",
            "vulnerabilities.related_vulnerabilities",
        ]
    }
}
impl ::std::convert::AsRef<str> for OcsfStringField {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}
impl OcsfStringField {
    /// Parses the enum value while disallowing unknown variants.
    ///
    /// Unknown variants will result in an error.
    pub fn try_parse(value: &str) -> ::std::result::Result<Self, crate::error::UnknownVariantError> {
        match Self::from(value) {
            #[allow(deprecated)]
            Self::Unknown(_) => ::std::result::Result::Err(crate::error::UnknownVariantError::new(value)),
            known => Ok(known),
        }
    }
}
impl ::std::fmt::Display for OcsfStringField {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        match self {
            OcsfStringField::ActivityName => write!(f, "activity_name"),
            OcsfStringField::ClassName => write!(f, "class_name"),
            OcsfStringField::CloudAccountName => write!(f, "cloud.account.name"),
            OcsfStringField::CloudAccountUid => write!(f, "cloud.account.uid"),
            OcsfStringField::CloudProvider => write!(f, "cloud.provider"),
            OcsfStringField::CloudRegion => write!(f, "cloud.region"),
            OcsfStringField::Comment => write!(f, "comment"),
            OcsfStringField::ComplianceAssessmentsCategory => write!(f, "compliance.assessments.category"),
            OcsfStringField::ComplianceAssessmentsName => write!(f, "compliance.assessments.name"),
            OcsfStringField::ComplianceControl => write!(f, "compliance.control"),
            OcsfStringField::ComplianceStandards => write!(f, "compliance.standards"),
            OcsfStringField::ComplianceStatus => write!(f, "compliance.status"),
            OcsfStringField::DatabucketEncryptionDetailsAlgorithm => write!(f, "databucket.encryption_details.algorithm"),
            OcsfStringField::DatabucketEncryptionDetailsKeyUid => write!(f, "databucket.encryption_details.key_uid"),
            OcsfStringField::DatabucketFileDataClassificationsClassifierDetailsType => {
                write!(f, "databucket.file.data_classifications.classifier_details.type")
            }
            OcsfStringField::EvidencesActorUserAccountUid => write!(f, "evidences.actor.user.account.uid"),
            OcsfStringField::EvidencesApiOperation => write!(f, "evidences.api.operation"),
            OcsfStringField::EvidencesApiResponseErrorMessage => write!(f, "evidences.api.response.error_message"),
            OcsfStringField::EvidencesApiServiceName => write!(f, "evidences.api.service.name"),
            OcsfStringField::EvidencesConnectionInfoDirection => write!(f, "evidences.connection_info.direction"),
            OcsfStringField::EvidencesConnectionInfoProtocolName => write!(f, "evidences.connection_info.protocol_name"),
            OcsfStringField::EvidencesDstEndpointAutonomousSystemName => write!(f, "evidences.dst_endpoint.autonomous_system.name"),
            OcsfStringField::EvidencesDstEndpointLocationCity => write!(f, "evidences.dst_endpoint.location.city"),
            OcsfStringField::EvidencesDstEndpointLocationCountry => write!(f, "evidences.dst_endpoint.location.country"),
            OcsfStringField::EvidencesSrcEndpointAutonomousSystemName => write!(f, "evidences.src_endpoint.autonomous_system.name"),
            OcsfStringField::EvidencesSrcEndpointHostname => write!(f, "evidences.src_endpoint.hostname"),
            OcsfStringField::EvidencesSrcEndpointLocationCity => write!(f, "evidences.src_endpoint.location.city"),
            OcsfStringField::EvidencesSrcEndpointLocationCountry => write!(f, "evidences.src_endpoint.location.country"),
            OcsfStringField::FindingInfoAnalyticName => write!(f, "finding_info.analytic.name"),
            OcsfStringField::FindingInfoDesc => write!(f, "finding_info.desc"),
            OcsfStringField::FindingInfoRelatedEventsProductUid => write!(f, "finding_info.related_events.product.uid"),
            OcsfStringField::FindingInfoRelatedEventsTitle => write!(f, "finding_info.related_events.title"),
            OcsfStringField::FindingInfoRelatedEventsUid => write!(f, "finding_info.related_events.uid"),
            OcsfStringField::FindingInfoSrcUrl => write!(f, "finding_info.src_url"),
            OcsfStringField::FindingInfoTitle => write!(f, "finding_info.title"),
            OcsfStringField::FindingInfoTypes => write!(f, "finding_info.types"),
            OcsfStringField::FindingInfoUid => write!(f, "finding_info.uid"),
            OcsfStringField::MalwareName => write!(f, "malware.name"),
            OcsfStringField::MalwareSeverity => write!(f, "malware.severity"),
            OcsfStringField::MalwareScanInfoUid => write!(f, "malware_scan_info.uid"),
            OcsfStringField::MetadataProductName => write!(f, "metadata.product.name"),
            OcsfStringField::MetadataProductUid => write!(f, "metadata.product.uid"),
            OcsfStringField::MetadataProductVendorName => write!(f, "metadata.product.vendor_name"),
            OcsfStringField::MetadataUid => write!(f, "metadata.uid"),
            OcsfStringField::RemediationDesc => write!(f, "remediation.desc"),
            OcsfStringField::RemediationReferences => write!(f, "remediation.references"),
            OcsfStringField::ResourcesCloudFunctionLayersUidAlt => write!(f, "resources.cloud_function.layers.uid_alt"),
            OcsfStringField::ResourcesCloudFunctionRuntime => write!(f, "resources.cloud_function.runtime"),
            OcsfStringField::ResourcesCloudFunctionUserUid => write!(f, "resources.cloud_function.user.uid"),
            OcsfStringField::ResourcesCloudPartition => write!(f, "resources.cloud_partition"),
            OcsfStringField::ResourcesDeviceEncryptionDetailsKeyUid => write!(f, "resources.device.encryption_details.key_uid"),
            OcsfStringField::ResourcesDeviceImageUid => write!(f, "resources.device.image.uid"),
            OcsfStringField::ResourcesImageArchitecture => write!(f, "resources.image.architecture"),
            OcsfStringField::ResourcesImageRegistryUid => write!(f, "resources.image.registry_uid"),
            OcsfStringField::ResourcesImageRepositoryName => write!(f, "resources.image.repository_name"),
            OcsfStringField::ResourcesImageUid => write!(f, "resources.image.uid"),
            OcsfStringField::ResourcesRegion => write!(f, "resources.region"),
            OcsfStringField::ResourcesSubnetInfoUid => write!(f, "resources.subnet_info.uid"),
            OcsfStringField::ResourcesType => write!(f, "resources.type"),
            OcsfStringField::ResourcesUid => write!(f, "resources.uid"),
            OcsfStringField::ResourcesVpcUid => write!(f, "resources.vpc_uid"),
            OcsfStringField::Severity => write!(f, "severity"),
            OcsfStringField::Status => write!(f, "status"),
            OcsfStringField::VulnerabilitiesAffectedCodeFilePath => write!(f, "vulnerabilities.affected_code.file.path"),
            OcsfStringField::VulnerabilitiesAffectedPackagesName => write!(f, "vulnerabilities.affected_packages.name"),
            OcsfStringField::VulnerabilitiesCveEpssScore => write!(f, "vulnerabilities.cve.epss.score"),
            OcsfStringField::VulnerabilitiesCveUid => write!(f, "vulnerabilities.cve.uid"),
            OcsfStringField::VulnerabilitiesFixCoverage => write!(f, "vulnerabilities.fix_coverage"),
            OcsfStringField::VulnerabilitiesRelatedVulnerabilities => write!(f, "vulnerabilities.related_vulnerabilities"),
            OcsfStringField::Unknown(value) => write!(f, "{}", value),
        }
    }
}
