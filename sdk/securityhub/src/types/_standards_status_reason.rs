// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The reason for the current status of a standard subscription.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StandardsStatusReason {
    /// <p>The reason code that represents the reason for the current status of a standard subscription.</p>
    pub status_reason_code: ::std::option::Option<crate::types::StatusReasonCode>,
}
impl StandardsStatusReason {
    /// <p>The reason code that represents the reason for the current status of a standard subscription.</p>
    pub fn status_reason_code(&self) -> ::std::option::Option<&crate::types::StatusReasonCode> {
        self.status_reason_code.as_ref()
    }
}
impl StandardsStatusReason {
    /// Creates a new builder-style object to manufacture [`StandardsStatusReason`](crate::types::StandardsStatusReason).
    pub fn builder() -> crate::types::builders::StandardsStatusReasonBuilder {
        crate::types::builders::StandardsStatusReasonBuilder::default()
    }
}

/// A builder for [`StandardsStatusReason`](crate::types::StandardsStatusReason).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StandardsStatusReasonBuilder {
    pub(crate) status_reason_code: ::std::option::Option<crate::types::StatusReasonCode>,
}
impl StandardsStatusReasonBuilder {
    /// <p>The reason code that represents the reason for the current status of a standard subscription.</p>
    /// This field is required.
    pub fn status_reason_code(mut self, input: crate::types::StatusReasonCode) -> Self {
        self.status_reason_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The reason code that represents the reason for the current status of a standard subscription.</p>
    pub fn set_status_reason_code(mut self, input: ::std::option::Option<crate::types::StatusReasonCode>) -> Self {
        self.status_reason_code = input;
        self
    }
    /// <p>The reason code that represents the reason for the current status of a standard subscription.</p>
    pub fn get_status_reason_code(&self) -> &::std::option::Option<crate::types::StatusReasonCode> {
        &self.status_reason_code
    }
    /// Consumes the builder and constructs a [`StandardsStatusReason`](crate::types::StandardsStatusReason).
    pub fn build(self) -> crate::types::StandardsStatusReason {
        crate::types::StandardsStatusReason {
            status_reason_code: self.status_reason_code,
        }
    }
}
