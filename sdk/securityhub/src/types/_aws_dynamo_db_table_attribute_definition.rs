// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains a definition of an attribute for the table.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsDynamoDbTableAttributeDefinition {
    /// <p>The name of the attribute.</p>
    #[doc(hidden)]
    pub attribute_name: std::option::Option<std::string::String>,
    /// <p>The type of the attribute.</p>
    #[doc(hidden)]
    pub attribute_type: std::option::Option<std::string::String>,
}
impl AwsDynamoDbTableAttributeDefinition {
    /// <p>The name of the attribute.</p>
    pub fn attribute_name(&self) -> std::option::Option<&str> {
        self.attribute_name.as_deref()
    }
    /// <p>The type of the attribute.</p>
    pub fn attribute_type(&self) -> std::option::Option<&str> {
        self.attribute_type.as_deref()
    }
}
impl AwsDynamoDbTableAttributeDefinition {
    /// Creates a new builder-style object to manufacture [`AwsDynamoDbTableAttributeDefinition`](crate::types::AwsDynamoDbTableAttributeDefinition).
    pub fn builder() -> crate::types::builders::AwsDynamoDbTableAttributeDefinitionBuilder {
        crate::types::builders::AwsDynamoDbTableAttributeDefinitionBuilder::default()
    }
}

/// A builder for [`AwsDynamoDbTableAttributeDefinition`](crate::types::AwsDynamoDbTableAttributeDefinition).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsDynamoDbTableAttributeDefinitionBuilder {
    pub(crate) attribute_name: std::option::Option<std::string::String>,
    pub(crate) attribute_type: std::option::Option<std::string::String>,
}
impl AwsDynamoDbTableAttributeDefinitionBuilder {
    /// <p>The name of the attribute.</p>
    pub fn attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.attribute_name = Some(input.into());
        self
    }
    /// <p>The name of the attribute.</p>
    pub fn set_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attribute_name = input;
        self
    }
    /// <p>The type of the attribute.</p>
    pub fn attribute_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.attribute_type = Some(input.into());
        self
    }
    /// <p>The type of the attribute.</p>
    pub fn set_attribute_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attribute_type = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsDynamoDbTableAttributeDefinition`](crate::types::AwsDynamoDbTableAttributeDefinition).
    pub fn build(self) -> crate::types::AwsDynamoDbTableAttributeDefinition {
        crate::types::AwsDynamoDbTableAttributeDefinition {
            attribute_name: self.attribute_name,
            attribute_type: self.attribute_type,
        }
    }
}
