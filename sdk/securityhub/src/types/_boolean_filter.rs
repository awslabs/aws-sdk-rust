// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Boolean filter for querying findings.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BooleanFilter {
    /// <p>The value of the boolean.</p>
    #[doc(hidden)]
    pub value: bool,
}
impl BooleanFilter {
    /// <p>The value of the boolean.</p>
    pub fn value(&self) -> bool {
        self.value
    }
}
impl BooleanFilter {
    /// Creates a new builder-style object to manufacture [`BooleanFilter`](crate::types::BooleanFilter).
    pub fn builder() -> crate::types::builders::BooleanFilterBuilder {
        crate::types::builders::BooleanFilterBuilder::default()
    }
}

/// A builder for [`BooleanFilter`](crate::types::BooleanFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BooleanFilterBuilder {
    pub(crate) value: std::option::Option<bool>,
}
impl BooleanFilterBuilder {
    /// <p>The value of the boolean.</p>
    pub fn value(mut self, input: bool) -> Self {
        self.value = Some(input);
        self
    }
    /// <p>The value of the boolean.</p>
    pub fn set_value(mut self, input: std::option::Option<bool>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`BooleanFilter`](crate::types::BooleanFilter).
    pub fn build(self) -> crate::types::BooleanFilter {
        crate::types::BooleanFilter {
            value: self.value.unwrap_or_default(),
        }
    }
}
