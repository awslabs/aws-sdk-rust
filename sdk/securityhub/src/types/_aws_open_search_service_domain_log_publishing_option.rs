// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration details for a log publishing option.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsOpenSearchServiceDomainLogPublishingOption {
    /// <p>The ARN of the CloudWatch Logs group to publish the logs to.</p>
    #[doc(hidden)]
    pub cloud_watch_logs_log_group_arn: std::option::Option<std::string::String>,
    /// <p>Whether the log publishing is enabled.</p>
    #[doc(hidden)]
    pub enabled: bool,
}
impl AwsOpenSearchServiceDomainLogPublishingOption {
    /// <p>The ARN of the CloudWatch Logs group to publish the logs to.</p>
    pub fn cloud_watch_logs_log_group_arn(&self) -> std::option::Option<&str> {
        self.cloud_watch_logs_log_group_arn.as_deref()
    }
    /// <p>Whether the log publishing is enabled.</p>
    pub fn enabled(&self) -> bool {
        self.enabled
    }
}
impl AwsOpenSearchServiceDomainLogPublishingOption {
    /// Creates a new builder-style object to manufacture [`AwsOpenSearchServiceDomainLogPublishingOption`](crate::types::AwsOpenSearchServiceDomainLogPublishingOption).
    pub fn builder() -> crate::types::builders::AwsOpenSearchServiceDomainLogPublishingOptionBuilder
    {
        crate::types::builders::AwsOpenSearchServiceDomainLogPublishingOptionBuilder::default()
    }
}

/// A builder for [`AwsOpenSearchServiceDomainLogPublishingOption`](crate::types::AwsOpenSearchServiceDomainLogPublishingOption).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsOpenSearchServiceDomainLogPublishingOptionBuilder {
    pub(crate) cloud_watch_logs_log_group_arn: std::option::Option<std::string::String>,
    pub(crate) enabled: std::option::Option<bool>,
}
impl AwsOpenSearchServiceDomainLogPublishingOptionBuilder {
    /// <p>The ARN of the CloudWatch Logs group to publish the logs to.</p>
    pub fn cloud_watch_logs_log_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.cloud_watch_logs_log_group_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the CloudWatch Logs group to publish the logs to.</p>
    pub fn set_cloud_watch_logs_log_group_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.cloud_watch_logs_log_group_arn = input;
        self
    }
    /// <p>Whether the log publishing is enabled.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = Some(input);
        self
    }
    /// <p>Whether the log publishing is enabled.</p>
    pub fn set_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsOpenSearchServiceDomainLogPublishingOption`](crate::types::AwsOpenSearchServiceDomainLogPublishingOption).
    pub fn build(self) -> crate::types::AwsOpenSearchServiceDomainLogPublishingOption {
        crate::types::AwsOpenSearchServiceDomainLogPublishingOption {
            cloud_watch_logs_log_group_arn: self.cloud_watch_logs_log_group_arn,
            enabled: self.enabled.unwrap_or_default(),
        }
    }
}
