// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A configuration option setting for the environment.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsElasticBeanstalkEnvironmentOptionSetting {
    /// <p>The type of resource that the configuration option is associated with.</p>
    #[doc(hidden)]
    pub namespace: std::option::Option<std::string::String>,
    /// <p>The name of the option.</p>
    #[doc(hidden)]
    pub option_name: std::option::Option<std::string::String>,
    /// <p>The name of the resource.</p>
    #[doc(hidden)]
    pub resource_name: std::option::Option<std::string::String>,
    /// <p>The value of the configuration setting.</p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
}
impl AwsElasticBeanstalkEnvironmentOptionSetting {
    /// <p>The type of resource that the configuration option is associated with.</p>
    pub fn namespace(&self) -> std::option::Option<&str> {
        self.namespace.as_deref()
    }
    /// <p>The name of the option.</p>
    pub fn option_name(&self) -> std::option::Option<&str> {
        self.option_name.as_deref()
    }
    /// <p>The name of the resource.</p>
    pub fn resource_name(&self) -> std::option::Option<&str> {
        self.resource_name.as_deref()
    }
    /// <p>The value of the configuration setting.</p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
}
impl AwsElasticBeanstalkEnvironmentOptionSetting {
    /// Creates a new builder-style object to manufacture [`AwsElasticBeanstalkEnvironmentOptionSetting`](crate::types::AwsElasticBeanstalkEnvironmentOptionSetting).
    pub fn builder() -> crate::types::builders::AwsElasticBeanstalkEnvironmentOptionSettingBuilder {
        crate::types::builders::AwsElasticBeanstalkEnvironmentOptionSettingBuilder::default()
    }
}

/// A builder for [`AwsElasticBeanstalkEnvironmentOptionSetting`](crate::types::AwsElasticBeanstalkEnvironmentOptionSetting).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsElasticBeanstalkEnvironmentOptionSettingBuilder {
    pub(crate) namespace: std::option::Option<std::string::String>,
    pub(crate) option_name: std::option::Option<std::string::String>,
    pub(crate) resource_name: std::option::Option<std::string::String>,
    pub(crate) value: std::option::Option<std::string::String>,
}
impl AwsElasticBeanstalkEnvironmentOptionSettingBuilder {
    /// <p>The type of resource that the configuration option is associated with.</p>
    pub fn namespace(mut self, input: impl Into<std::string::String>) -> Self {
        self.namespace = Some(input.into());
        self
    }
    /// <p>The type of resource that the configuration option is associated with.</p>
    pub fn set_namespace(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.namespace = input;
        self
    }
    /// <p>The name of the option.</p>
    pub fn option_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.option_name = Some(input.into());
        self
    }
    /// <p>The name of the option.</p>
    pub fn set_option_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.option_name = input;
        self
    }
    /// <p>The name of the resource.</p>
    pub fn resource_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_name = Some(input.into());
        self
    }
    /// <p>The name of the resource.</p>
    pub fn set_resource_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_name = input;
        self
    }
    /// <p>The value of the configuration setting.</p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value of the configuration setting.</p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsElasticBeanstalkEnvironmentOptionSetting`](crate::types::AwsElasticBeanstalkEnvironmentOptionSetting).
    pub fn build(self) -> crate::types::AwsElasticBeanstalkEnvironmentOptionSetting {
        crate::types::AwsElasticBeanstalkEnvironmentOptionSetting {
            namespace: self.namespace,
            option_name: self.option_name,
            resource_name: self.resource_name,
            value: self.value,
        }
    }
}
