// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Provides details for client authentication using TLS.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsMskClusterClusterInfoClientAuthenticationTlsDetails {
    /// <p> List of Amazon Web Services Private CA Amazon Resource Names (ARNs). Amazon Web Services Private CA enables creation of private certificate authority (CA) hierarchies, including root and subordinate CAs, without the investment and maintenance costs of operating an on-premises CA.</p>
    pub certificate_authority_arn_list: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p> Indicates whether TLS authentication is enabled or not.</p>
    pub enabled: ::std::option::Option<bool>,
}
impl AwsMskClusterClusterInfoClientAuthenticationTlsDetails {
    /// <p> List of Amazon Web Services Private CA Amazon Resource Names (ARNs). Amazon Web Services Private CA enables creation of private certificate authority (CA) hierarchies, including root and subordinate CAs, without the investment and maintenance costs of operating an on-premises CA.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.certificate_authority_arn_list.is_none()`.
    pub fn certificate_authority_arn_list(&self) -> &[::std::string::String] {
        self.certificate_authority_arn_list.as_deref().unwrap_or_default()
    }
    /// <p> Indicates whether TLS authentication is enabled or not.</p>
    pub fn enabled(&self) -> ::std::option::Option<bool> {
        self.enabled
    }
}
impl AwsMskClusterClusterInfoClientAuthenticationTlsDetails {
    /// Creates a new builder-style object to manufacture [`AwsMskClusterClusterInfoClientAuthenticationTlsDetails`](crate::types::AwsMskClusterClusterInfoClientAuthenticationTlsDetails).
    pub fn builder() -> crate::types::builders::AwsMskClusterClusterInfoClientAuthenticationTlsDetailsBuilder {
        crate::types::builders::AwsMskClusterClusterInfoClientAuthenticationTlsDetailsBuilder::default()
    }
}

/// A builder for [`AwsMskClusterClusterInfoClientAuthenticationTlsDetails`](crate::types::AwsMskClusterClusterInfoClientAuthenticationTlsDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsMskClusterClusterInfoClientAuthenticationTlsDetailsBuilder {
    pub(crate) certificate_authority_arn_list: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) enabled: ::std::option::Option<bool>,
}
impl AwsMskClusterClusterInfoClientAuthenticationTlsDetailsBuilder {
    /// Appends an item to `certificate_authority_arn_list`.
    ///
    /// To override the contents of this collection use [`set_certificate_authority_arn_list`](Self::set_certificate_authority_arn_list).
    ///
    /// <p> List of Amazon Web Services Private CA Amazon Resource Names (ARNs). Amazon Web Services Private CA enables creation of private certificate authority (CA) hierarchies, including root and subordinate CAs, without the investment and maintenance costs of operating an on-premises CA.</p>
    pub fn certificate_authority_arn_list(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.certificate_authority_arn_list.unwrap_or_default();
        v.push(input.into());
        self.certificate_authority_arn_list = ::std::option::Option::Some(v);
        self
    }
    /// <p> List of Amazon Web Services Private CA Amazon Resource Names (ARNs). Amazon Web Services Private CA enables creation of private certificate authority (CA) hierarchies, including root and subordinate CAs, without the investment and maintenance costs of operating an on-premises CA.</p>
    pub fn set_certificate_authority_arn_list(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.certificate_authority_arn_list = input;
        self
    }
    /// <p> List of Amazon Web Services Private CA Amazon Resource Names (ARNs). Amazon Web Services Private CA enables creation of private certificate authority (CA) hierarchies, including root and subordinate CAs, without the investment and maintenance costs of operating an on-premises CA.</p>
    pub fn get_certificate_authority_arn_list(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.certificate_authority_arn_list
    }
    /// <p> Indicates whether TLS authentication is enabled or not.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p> Indicates whether TLS authentication is enabled or not.</p>
    pub fn set_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// <p> Indicates whether TLS authentication is enabled or not.</p>
    pub fn get_enabled(&self) -> &::std::option::Option<bool> {
        &self.enabled
    }
    /// Consumes the builder and constructs a [`AwsMskClusterClusterInfoClientAuthenticationTlsDetails`](crate::types::AwsMskClusterClusterInfoClientAuthenticationTlsDetails).
    pub fn build(self) -> crate::types::AwsMskClusterClusterInfoClientAuthenticationTlsDetails {
        crate::types::AwsMskClusterClusterInfoClientAuthenticationTlsDetails {
            certificate_authority_arn_list: self.certificate_authority_arn_list,
            enabled: self.enabled,
        }
    }
}
