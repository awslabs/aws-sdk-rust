// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the launch template to use.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification {
    /// <p>The identifier of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.</p>
    #[doc(hidden)]
    pub launch_template_id: std::option::Option<std::string::String>,
    /// <p>The name of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.</p>
    #[doc(hidden)]
    pub launch_template_name: std::option::Option<std::string::String>,
    /// <p>Identifies the version of the launch template. You can specify a version identifier, or use the values <code>$Latest</code> or <code>$Default</code>.</p>
    #[doc(hidden)]
    pub version: std::option::Option<std::string::String>,
}
impl AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification {
    /// <p>The identifier of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.</p>
    pub fn launch_template_id(&self) -> std::option::Option<&str> {
        self.launch_template_id.as_deref()
    }
    /// <p>The name of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.</p>
    pub fn launch_template_name(&self) -> std::option::Option<&str> {
        self.launch_template_name.as_deref()
    }
    /// <p>Identifies the version of the launch template. You can specify a version identifier, or use the values <code>$Latest</code> or <code>$Default</code>.</p>
    pub fn version(&self) -> std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification {
    /// Creates a new builder-style object to manufacture [`AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification`](crate::types::AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification).
    pub fn builder() -> crate::types::builders::AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecificationBuilder{
        crate::types::builders::AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecificationBuilder::default()
    }
}

/// A builder for [`AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification`](crate::types::AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecificationBuilder {
    pub(crate) launch_template_id: std::option::Option<std::string::String>,
    pub(crate) launch_template_name: std::option::Option<std::string::String>,
    pub(crate) version: std::option::Option<std::string::String>,
}
impl AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecificationBuilder {
    /// <p>The identifier of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.</p>
    pub fn launch_template_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.launch_template_id = Some(input.into());
        self
    }
    /// <p>The identifier of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.</p>
    pub fn set_launch_template_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.launch_template_id = input;
        self
    }
    /// <p>The name of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.</p>
    pub fn launch_template_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.launch_template_name = Some(input.into());
        self
    }
    /// <p>The name of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.</p>
    pub fn set_launch_template_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.launch_template_name = input;
        self
    }
    /// <p>Identifies the version of the launch template. You can specify a version identifier, or use the values <code>$Latest</code> or <code>$Default</code>.</p>
    pub fn version(mut self, input: impl Into<std::string::String>) -> Self {
        self.version = Some(input.into());
        self
    }
    /// <p>Identifies the version of the launch template. You can specify a version identifier, or use the values <code>$Latest</code> or <code>$Default</code>.</p>
    pub fn set_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification`](crate::types::AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification).
    pub fn build(
        self,
    ) -> crate::types::AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification {
        crate::types::AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification {
            launch_template_id: self.launch_template_id,
            launch_template_name: self.launch_template_name,
            version: self.version,
        }
    }
}
