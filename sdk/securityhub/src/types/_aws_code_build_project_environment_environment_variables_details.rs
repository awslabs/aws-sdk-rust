// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an environment variable that is available to builds for the build project.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails {
    /// <p>The name of the environment variable.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The type of environment variable.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<std::string::String>,
    /// <p>The value of the environment variable.</p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
}
impl AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails {
    /// <p>The name of the environment variable.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The type of environment variable.</p>
    pub fn r#type(&self) -> std::option::Option<&str> {
        self.r#type.as_deref()
    }
    /// <p>The value of the environment variable.</p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
}
impl AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails {
    /// Creates a new builder-style object to manufacture [`AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails`](crate::types::AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails).
    pub fn builder(
    ) -> crate::types::builders::AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetailsBuilder
    {
        crate::types::builders::AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetailsBuilder::default()
    }
}

/// A builder for [`AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails`](crate::types::AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetailsBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<std::string::String>,
    pub(crate) value: std::option::Option<std::string::String>,
}
impl AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetailsBuilder {
    /// <p>The name of the environment variable.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the environment variable.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The type of environment variable.</p>
    pub fn r#type(mut self, input: impl Into<std::string::String>) -> Self {
        self.r#type = Some(input.into());
        self
    }
    /// <p>The type of environment variable.</p>
    pub fn set_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The value of the environment variable.</p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value of the environment variable.</p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails`](crate::types::AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails).
    pub fn build(self) -> crate::types::AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails {
        crate::types::AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails {
            name: self.name,
            r#type: self.r#type,
            value: self.value,
        }
    }
}
