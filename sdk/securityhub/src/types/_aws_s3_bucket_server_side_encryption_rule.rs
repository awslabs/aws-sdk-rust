// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An encryption rule to apply to the S3 bucket.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsS3BucketServerSideEncryptionRule {
    /// <p>Specifies the default server-side encryption to apply to new objects in the bucket. If a <code>PUT</code> object request doesn't specify any server-side encryption, this default encryption is applied.</p>
    #[doc(hidden)]
    pub apply_server_side_encryption_by_default:
        std::option::Option<crate::types::AwsS3BucketServerSideEncryptionByDefault>,
}
impl AwsS3BucketServerSideEncryptionRule {
    /// <p>Specifies the default server-side encryption to apply to new objects in the bucket. If a <code>PUT</code> object request doesn't specify any server-side encryption, this default encryption is applied.</p>
    pub fn apply_server_side_encryption_by_default(
        &self,
    ) -> std::option::Option<&crate::types::AwsS3BucketServerSideEncryptionByDefault> {
        self.apply_server_side_encryption_by_default.as_ref()
    }
}
impl AwsS3BucketServerSideEncryptionRule {
    /// Creates a new builder-style object to manufacture [`AwsS3BucketServerSideEncryptionRule`](crate::types::AwsS3BucketServerSideEncryptionRule).
    pub fn builder() -> crate::types::builders::AwsS3BucketServerSideEncryptionRuleBuilder {
        crate::types::builders::AwsS3BucketServerSideEncryptionRuleBuilder::default()
    }
}

/// A builder for [`AwsS3BucketServerSideEncryptionRule`](crate::types::AwsS3BucketServerSideEncryptionRule).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsS3BucketServerSideEncryptionRuleBuilder {
    pub(crate) apply_server_side_encryption_by_default:
        std::option::Option<crate::types::AwsS3BucketServerSideEncryptionByDefault>,
}
impl AwsS3BucketServerSideEncryptionRuleBuilder {
    /// <p>Specifies the default server-side encryption to apply to new objects in the bucket. If a <code>PUT</code> object request doesn't specify any server-side encryption, this default encryption is applied.</p>
    pub fn apply_server_side_encryption_by_default(
        mut self,
        input: crate::types::AwsS3BucketServerSideEncryptionByDefault,
    ) -> Self {
        self.apply_server_side_encryption_by_default = Some(input);
        self
    }
    /// <p>Specifies the default server-side encryption to apply to new objects in the bucket. If a <code>PUT</code> object request doesn't specify any server-side encryption, this default encryption is applied.</p>
    pub fn set_apply_server_side_encryption_by_default(
        mut self,
        input: std::option::Option<crate::types::AwsS3BucketServerSideEncryptionByDefault>,
    ) -> Self {
        self.apply_server_side_encryption_by_default = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsS3BucketServerSideEncryptionRule`](crate::types::AwsS3BucketServerSideEncryptionRule).
    pub fn build(self) -> crate::types::AwsS3BucketServerSideEncryptionRule {
        crate::types::AwsS3BucketServerSideEncryptionRule {
            apply_server_side_encryption_by_default: self.apply_server_side_encryption_by_default,
        }
    }
}
