// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A stateless rule group that is used by the firewall policy.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FirewallPolicyStatelessRuleGroupReferencesDetails {
    /// <p>The order in which to run the stateless rule group.</p>
    #[doc(hidden)]
    pub priority: i32,
    /// <p>The ARN of the stateless rule group.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
}
impl FirewallPolicyStatelessRuleGroupReferencesDetails {
    /// <p>The order in which to run the stateless rule group.</p>
    pub fn priority(&self) -> i32 {
        self.priority
    }
    /// <p>The ARN of the stateless rule group.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
}
impl FirewallPolicyStatelessRuleGroupReferencesDetails {
    /// Creates a new builder-style object to manufacture [`FirewallPolicyStatelessRuleGroupReferencesDetails`](crate::types::FirewallPolicyStatelessRuleGroupReferencesDetails).
    pub fn builder(
    ) -> crate::types::builders::FirewallPolicyStatelessRuleGroupReferencesDetailsBuilder {
        crate::types::builders::FirewallPolicyStatelessRuleGroupReferencesDetailsBuilder::default()
    }
}

/// A builder for [`FirewallPolicyStatelessRuleGroupReferencesDetails`](crate::types::FirewallPolicyStatelessRuleGroupReferencesDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FirewallPolicyStatelessRuleGroupReferencesDetailsBuilder {
    pub(crate) priority: std::option::Option<i32>,
    pub(crate) resource_arn: std::option::Option<std::string::String>,
}
impl FirewallPolicyStatelessRuleGroupReferencesDetailsBuilder {
    /// <p>The order in which to run the stateless rule group.</p>
    pub fn priority(mut self, input: i32) -> Self {
        self.priority = Some(input);
        self
    }
    /// <p>The order in which to run the stateless rule group.</p>
    pub fn set_priority(mut self, input: std::option::Option<i32>) -> Self {
        self.priority = input;
        self
    }
    /// <p>The ARN of the stateless rule group.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the stateless rule group.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`FirewallPolicyStatelessRuleGroupReferencesDetails`](crate::types::FirewallPolicyStatelessRuleGroupReferencesDetails).
    pub fn build(self) -> crate::types::FirewallPolicyStatelessRuleGroupReferencesDetails {
        crate::types::FirewallPolicyStatelessRuleGroupReferencesDetails {
            priority: self.priority.unwrap_or_default(),
            resource_arn: self.resource_arn,
        }
    }
}
