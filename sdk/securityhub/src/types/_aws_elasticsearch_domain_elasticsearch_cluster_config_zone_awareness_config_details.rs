// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration options for zone awareness.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails {
    /// <p>he number of Availability Zones that the domain uses. Valid values are 2 and 3. The default is 2.</p>
    #[doc(hidden)]
    pub availability_zone_count: i32,
}
impl AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails {
    /// <p>he number of Availability Zones that the domain uses. Valid values are 2 and 3. The default is 2.</p>
    pub fn availability_zone_count(&self) -> i32 {
        self.availability_zone_count
    }
}
impl AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails {
    /// Creates a new builder-style object to manufacture [`AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails`](crate::types::AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails).
    pub fn builder() -> crate::types::builders::AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetailsBuilder{
        crate::types::builders::AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetailsBuilder::default()
    }
}

/// A builder for [`AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails`](crate::types::AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetailsBuilder {
    pub(crate) availability_zone_count: std::option::Option<i32>,
}
impl AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetailsBuilder {
    /// <p>he number of Availability Zones that the domain uses. Valid values are 2 and 3. The default is 2.</p>
    pub fn availability_zone_count(mut self, input: i32) -> Self {
        self.availability_zone_count = Some(input);
        self
    }
    /// <p>he number of Availability Zones that the domain uses. Valid values are 2 and 3. The default is 2.</p>
    pub fn set_availability_zone_count(mut self, input: std::option::Option<i32>) -> Self {
        self.availability_zone_count = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails`](crate::types::AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails).
    pub fn build(
        self,
    ) -> crate::types::AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails
    {
        crate::types::AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails {
            availability_zone_count: self.availability_zone_count.unwrap_or_default(),
        }
    }
}
