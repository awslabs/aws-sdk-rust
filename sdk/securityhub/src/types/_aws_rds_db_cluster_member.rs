// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an instance in the DB cluster.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsRdsDbClusterMember {
    /// <p>Whether the cluster member is the primary instance for the DB cluster.</p>
    #[doc(hidden)]
    pub is_cluster_writer: bool,
    /// <p>Specifies the order in which an Aurora replica is promoted to the primary instance when the existing primary instance fails.</p>
    #[doc(hidden)]
    pub promotion_tier: i32,
    /// <p>The instance identifier for this member of the DB cluster.</p>
    #[doc(hidden)]
    pub db_instance_identifier: std::option::Option<std::string::String>,
    /// <p>The status of the DB cluster parameter group for this member of the DB cluster.</p>
    #[doc(hidden)]
    pub db_cluster_parameter_group_status: std::option::Option<std::string::String>,
}
impl AwsRdsDbClusterMember {
    /// <p>Whether the cluster member is the primary instance for the DB cluster.</p>
    pub fn is_cluster_writer(&self) -> bool {
        self.is_cluster_writer
    }
    /// <p>Specifies the order in which an Aurora replica is promoted to the primary instance when the existing primary instance fails.</p>
    pub fn promotion_tier(&self) -> i32 {
        self.promotion_tier
    }
    /// <p>The instance identifier for this member of the DB cluster.</p>
    pub fn db_instance_identifier(&self) -> std::option::Option<&str> {
        self.db_instance_identifier.as_deref()
    }
    /// <p>The status of the DB cluster parameter group for this member of the DB cluster.</p>
    pub fn db_cluster_parameter_group_status(&self) -> std::option::Option<&str> {
        self.db_cluster_parameter_group_status.as_deref()
    }
}
impl AwsRdsDbClusterMember {
    /// Creates a new builder-style object to manufacture [`AwsRdsDbClusterMember`](crate::types::AwsRdsDbClusterMember).
    pub fn builder() -> crate::types::builders::AwsRdsDbClusterMemberBuilder {
        crate::types::builders::AwsRdsDbClusterMemberBuilder::default()
    }
}

/// A builder for [`AwsRdsDbClusterMember`](crate::types::AwsRdsDbClusterMember).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsRdsDbClusterMemberBuilder {
    pub(crate) is_cluster_writer: std::option::Option<bool>,
    pub(crate) promotion_tier: std::option::Option<i32>,
    pub(crate) db_instance_identifier: std::option::Option<std::string::String>,
    pub(crate) db_cluster_parameter_group_status: std::option::Option<std::string::String>,
}
impl AwsRdsDbClusterMemberBuilder {
    /// <p>Whether the cluster member is the primary instance for the DB cluster.</p>
    pub fn is_cluster_writer(mut self, input: bool) -> Self {
        self.is_cluster_writer = Some(input);
        self
    }
    /// <p>Whether the cluster member is the primary instance for the DB cluster.</p>
    pub fn set_is_cluster_writer(mut self, input: std::option::Option<bool>) -> Self {
        self.is_cluster_writer = input;
        self
    }
    /// <p>Specifies the order in which an Aurora replica is promoted to the primary instance when the existing primary instance fails.</p>
    pub fn promotion_tier(mut self, input: i32) -> Self {
        self.promotion_tier = Some(input);
        self
    }
    /// <p>Specifies the order in which an Aurora replica is promoted to the primary instance when the existing primary instance fails.</p>
    pub fn set_promotion_tier(mut self, input: std::option::Option<i32>) -> Self {
        self.promotion_tier = input;
        self
    }
    /// <p>The instance identifier for this member of the DB cluster.</p>
    pub fn db_instance_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.db_instance_identifier = Some(input.into());
        self
    }
    /// <p>The instance identifier for this member of the DB cluster.</p>
    pub fn set_db_instance_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.db_instance_identifier = input;
        self
    }
    /// <p>The status of the DB cluster parameter group for this member of the DB cluster.</p>
    pub fn db_cluster_parameter_group_status(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.db_cluster_parameter_group_status = Some(input.into());
        self
    }
    /// <p>The status of the DB cluster parameter group for this member of the DB cluster.</p>
    pub fn set_db_cluster_parameter_group_status(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.db_cluster_parameter_group_status = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsRdsDbClusterMember`](crate::types::AwsRdsDbClusterMember).
    pub fn build(self) -> crate::types::AwsRdsDbClusterMember {
        crate::types::AwsRdsDbClusterMember {
            is_cluster_writer: self.is_cluster_writer.unwrap_or_default(),
            promotion_tier: self.promotion_tier.unwrap_or_default(),
            db_instance_identifier: self.db_instance_identifier,
            db_cluster_parameter_group_status: self.db_cluster_parameter_group_status,
        }
    }
}
