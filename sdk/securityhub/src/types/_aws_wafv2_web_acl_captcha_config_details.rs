// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Specifies how WAF should handle CAPTCHA evaluations for rules that don't have their own <code>CaptchaConfig</code> settings. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsWafv2WebAclCaptchaConfigDetails {
    /// <p> Determines how long a CAPTCHA timestamp in the token remains valid after the client successfully solves a CAPTCHA puzzle. </p>
    #[doc(hidden)]
    pub immunity_time_property:
        std::option::Option<crate::types::AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails>,
}
impl AwsWafv2WebAclCaptchaConfigDetails {
    /// <p> Determines how long a CAPTCHA timestamp in the token remains valid after the client successfully solves a CAPTCHA puzzle. </p>
    pub fn immunity_time_property(
        &self,
    ) -> std::option::Option<&crate::types::AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails>
    {
        self.immunity_time_property.as_ref()
    }
}
impl AwsWafv2WebAclCaptchaConfigDetails {
    /// Creates a new builder-style object to manufacture [`AwsWafv2WebAclCaptchaConfigDetails`](crate::types::AwsWafv2WebAclCaptchaConfigDetails).
    pub fn builder() -> crate::types::builders::AwsWafv2WebAclCaptchaConfigDetailsBuilder {
        crate::types::builders::AwsWafv2WebAclCaptchaConfigDetailsBuilder::default()
    }
}

/// A builder for [`AwsWafv2WebAclCaptchaConfigDetails`](crate::types::AwsWafv2WebAclCaptchaConfigDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsWafv2WebAclCaptchaConfigDetailsBuilder {
    pub(crate) immunity_time_property:
        std::option::Option<crate::types::AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails>,
}
impl AwsWafv2WebAclCaptchaConfigDetailsBuilder {
    /// <p> Determines how long a CAPTCHA timestamp in the token remains valid after the client successfully solves a CAPTCHA puzzle. </p>
    pub fn immunity_time_property(
        mut self,
        input: crate::types::AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails,
    ) -> Self {
        self.immunity_time_property = Some(input);
        self
    }
    /// <p> Determines how long a CAPTCHA timestamp in the token remains valid after the client successfully solves a CAPTCHA puzzle. </p>
    pub fn set_immunity_time_property(
        mut self,
        input: std::option::Option<
            crate::types::AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails,
        >,
    ) -> Self {
        self.immunity_time_property = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsWafv2WebAclCaptchaConfigDetails`](crate::types::AwsWafv2WebAclCaptchaConfigDetails).
    pub fn build(self) -> crate::types::AwsWafv2WebAclCaptchaConfigDetails {
        crate::types::AwsWafv2WebAclCaptchaConfigDetails {
            immunity_time_property: self.immunity_time_property,
        }
    }
}
