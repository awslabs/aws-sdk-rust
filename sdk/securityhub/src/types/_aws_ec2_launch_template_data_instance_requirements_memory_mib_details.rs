// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The minimum and maximum amount of memory, in MiB, for an Amazon EC2 instance. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails {
    /// <p> The maximum amount of memory, in MiB. </p>
    pub max: ::std::option::Option<i32>,
    /// <p> The minimum amount of memory, in MiB. </p>
    pub min: ::std::option::Option<i32>,
}
impl AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails {
    /// <p> The maximum amount of memory, in MiB. </p>
    pub fn max(&self) -> ::std::option::Option<i32> {
        self.max
    }
    /// <p> The minimum amount of memory, in MiB. </p>
    pub fn min(&self) -> ::std::option::Option<i32> {
        self.min
    }
}
impl AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails {
    /// Creates a new builder-style object to manufacture [`AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails`](crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails).
    pub fn builder() -> crate::types::builders::AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetailsBuilder {
        crate::types::builders::AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetailsBuilder::default()
    }
}

/// A builder for [`AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails`](crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetailsBuilder {
    pub(crate) max: ::std::option::Option<i32>,
    pub(crate) min: ::std::option::Option<i32>,
}
impl AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetailsBuilder {
    /// <p> The maximum amount of memory, in MiB. </p>
    pub fn max(mut self, input: i32) -> Self {
        self.max = ::std::option::Option::Some(input);
        self
    }
    /// <p> The maximum amount of memory, in MiB. </p>
    pub fn set_max(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max = input;
        self
    }
    /// <p> The maximum amount of memory, in MiB. </p>
    pub fn get_max(&self) -> &::std::option::Option<i32> {
        &self.max
    }
    /// <p> The minimum amount of memory, in MiB. </p>
    pub fn min(mut self, input: i32) -> Self {
        self.min = ::std::option::Option::Some(input);
        self
    }
    /// <p> The minimum amount of memory, in MiB. </p>
    pub fn set_min(mut self, input: ::std::option::Option<i32>) -> Self {
        self.min = input;
        self
    }
    /// <p> The minimum amount of memory, in MiB. </p>
    pub fn get_min(&self) -> &::std::option::Option<i32> {
        &self.min
    }
    /// Consumes the builder and constructs a [`AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails`](crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails).
    pub fn build(self) -> crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails {
        crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails {
            max: self.max,
            min: self.min,
        }
    }
}
