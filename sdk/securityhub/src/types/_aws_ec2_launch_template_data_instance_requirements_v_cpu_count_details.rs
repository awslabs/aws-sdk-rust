// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The minimum and maximum number of vCPUs for an Amazon EC2 instance. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails {
    /// <p> The maximum number of vCPUs. </p>
    #[doc(hidden)]
    pub max: i32,
    /// <p> The minimum number of vCPUs. </p>
    #[doc(hidden)]
    pub min: i32,
}
impl AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails {
    /// <p> The maximum number of vCPUs. </p>
    pub fn max(&self) -> i32 {
        self.max
    }
    /// <p> The minimum number of vCPUs. </p>
    pub fn min(&self) -> i32 {
        self.min
    }
}
impl AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails {
    /// Creates a new builder-style object to manufacture [`AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails`](crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails).
    pub fn builder(
    ) -> crate::types::builders::AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetailsBuilder
    {
        crate::types::builders::AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetailsBuilder::default()
    }
}

/// A builder for [`AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails`](crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetailsBuilder {
    pub(crate) max: std::option::Option<i32>,
    pub(crate) min: std::option::Option<i32>,
}
impl AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetailsBuilder {
    /// <p> The maximum number of vCPUs. </p>
    pub fn max(mut self, input: i32) -> Self {
        self.max = Some(input);
        self
    }
    /// <p> The maximum number of vCPUs. </p>
    pub fn set_max(mut self, input: std::option::Option<i32>) -> Self {
        self.max = input;
        self
    }
    /// <p> The minimum number of vCPUs. </p>
    pub fn min(mut self, input: i32) -> Self {
        self.min = Some(input);
        self
    }
    /// <p> The minimum number of vCPUs. </p>
    pub fn set_min(mut self, input: std::option::Option<i32>) -> Self {
        self.min = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails`](crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails).
    pub fn build(
        self,
    ) -> crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails {
        crate::types::AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails {
            max: self.max.unwrap_or_default(),
            min: self.min.unwrap_or_default(),
        }
    }
}
