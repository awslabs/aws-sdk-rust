// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A component of the key schema for the DynamoDB table, a global secondary index, or a local secondary index.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsDynamoDbTableKeySchema {
    /// <p>The name of the key schema attribute.</p>
    #[doc(hidden)]
    pub attribute_name: std::option::Option<std::string::String>,
    /// <p>The type of key used for the key schema attribute. Valid values are <code>HASH</code> or <code>RANGE</code>.</p>
    #[doc(hidden)]
    pub key_type: std::option::Option<std::string::String>,
}
impl AwsDynamoDbTableKeySchema {
    /// <p>The name of the key schema attribute.</p>
    pub fn attribute_name(&self) -> std::option::Option<&str> {
        self.attribute_name.as_deref()
    }
    /// <p>The type of key used for the key schema attribute. Valid values are <code>HASH</code> or <code>RANGE</code>.</p>
    pub fn key_type(&self) -> std::option::Option<&str> {
        self.key_type.as_deref()
    }
}
impl AwsDynamoDbTableKeySchema {
    /// Creates a new builder-style object to manufacture [`AwsDynamoDbTableKeySchema`](crate::types::AwsDynamoDbTableKeySchema).
    pub fn builder() -> crate::types::builders::AwsDynamoDbTableKeySchemaBuilder {
        crate::types::builders::AwsDynamoDbTableKeySchemaBuilder::default()
    }
}

/// A builder for [`AwsDynamoDbTableKeySchema`](crate::types::AwsDynamoDbTableKeySchema).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsDynamoDbTableKeySchemaBuilder {
    pub(crate) attribute_name: std::option::Option<std::string::String>,
    pub(crate) key_type: std::option::Option<std::string::String>,
}
impl AwsDynamoDbTableKeySchemaBuilder {
    /// <p>The name of the key schema attribute.</p>
    pub fn attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.attribute_name = Some(input.into());
        self
    }
    /// <p>The name of the key schema attribute.</p>
    pub fn set_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attribute_name = input;
        self
    }
    /// <p>The type of key used for the key schema attribute. Valid values are <code>HASH</code> or <code>RANGE</code>.</p>
    pub fn key_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.key_type = Some(input.into());
        self
    }
    /// <p>The type of key used for the key schema attribute. Valid values are <code>HASH</code> or <code>RANGE</code>.</p>
    pub fn set_key_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.key_type = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsDynamoDbTableKeySchema`](crate::types::AwsDynamoDbTableKeySchema).
    pub fn build(self) -> crate::types::AwsDynamoDbTableKeySchema {
        crate::types::AwsDynamoDbTableKeySchema {
            attribute_name: self.attribute_name,
            key_type: self.key_type,
        }
    }
}
