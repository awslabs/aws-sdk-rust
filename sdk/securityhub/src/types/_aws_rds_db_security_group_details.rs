// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about an Amazon RDS DB security group.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsRdsDbSecurityGroupDetails {
    /// <p>The ARN for the DB security group.</p>
    pub db_security_group_arn: ::std::option::Option<::std::string::String>,
    /// <p>Provides the description of the DB security group.</p>
    pub db_security_group_description: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the name of the DB security group.</p>
    pub db_security_group_name: ::std::option::Option<::std::string::String>,
    /// <p>Contains a list of EC2 security groups.</p>
    pub ec2_security_groups: ::std::option::Option<::std::vec::Vec<crate::types::AwsRdsDbSecurityGroupEc2SecurityGroup>>,
    /// <p>Contains a list of IP ranges.</p>
    pub ip_ranges: ::std::option::Option<::std::vec::Vec<crate::types::AwsRdsDbSecurityGroupIpRange>>,
    /// <p>Provides the Amazon Web Services ID of the owner of a specific DB security group.</p>
    pub owner_id: ::std::option::Option<::std::string::String>,
    /// <p>Provides VPC ID associated with the DB security group. </p>
    pub vpc_id: ::std::option::Option<::std::string::String>,
}
impl AwsRdsDbSecurityGroupDetails {
    /// <p>The ARN for the DB security group.</p>
    pub fn db_security_group_arn(&self) -> ::std::option::Option<&str> {
        self.db_security_group_arn.as_deref()
    }
    /// <p>Provides the description of the DB security group.</p>
    pub fn db_security_group_description(&self) -> ::std::option::Option<&str> {
        self.db_security_group_description.as_deref()
    }
    /// <p>Specifies the name of the DB security group.</p>
    pub fn db_security_group_name(&self) -> ::std::option::Option<&str> {
        self.db_security_group_name.as_deref()
    }
    /// <p>Contains a list of EC2 security groups.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.ec2_security_groups.is_none()`.
    pub fn ec2_security_groups(&self) -> &[crate::types::AwsRdsDbSecurityGroupEc2SecurityGroup] {
        self.ec2_security_groups.as_deref().unwrap_or_default()
    }
    /// <p>Contains a list of IP ranges.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.ip_ranges.is_none()`.
    pub fn ip_ranges(&self) -> &[crate::types::AwsRdsDbSecurityGroupIpRange] {
        self.ip_ranges.as_deref().unwrap_or_default()
    }
    /// <p>Provides the Amazon Web Services ID of the owner of a specific DB security group.</p>
    pub fn owner_id(&self) -> ::std::option::Option<&str> {
        self.owner_id.as_deref()
    }
    /// <p>Provides VPC ID associated with the DB security group. </p>
    pub fn vpc_id(&self) -> ::std::option::Option<&str> {
        self.vpc_id.as_deref()
    }
}
impl AwsRdsDbSecurityGroupDetails {
    /// Creates a new builder-style object to manufacture [`AwsRdsDbSecurityGroupDetails`](crate::types::AwsRdsDbSecurityGroupDetails).
    pub fn builder() -> crate::types::builders::AwsRdsDbSecurityGroupDetailsBuilder {
        crate::types::builders::AwsRdsDbSecurityGroupDetailsBuilder::default()
    }
}

/// A builder for [`AwsRdsDbSecurityGroupDetails`](crate::types::AwsRdsDbSecurityGroupDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsRdsDbSecurityGroupDetailsBuilder {
    pub(crate) db_security_group_arn: ::std::option::Option<::std::string::String>,
    pub(crate) db_security_group_description: ::std::option::Option<::std::string::String>,
    pub(crate) db_security_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) ec2_security_groups: ::std::option::Option<::std::vec::Vec<crate::types::AwsRdsDbSecurityGroupEc2SecurityGroup>>,
    pub(crate) ip_ranges: ::std::option::Option<::std::vec::Vec<crate::types::AwsRdsDbSecurityGroupIpRange>>,
    pub(crate) owner_id: ::std::option::Option<::std::string::String>,
    pub(crate) vpc_id: ::std::option::Option<::std::string::String>,
}
impl AwsRdsDbSecurityGroupDetailsBuilder {
    /// <p>The ARN for the DB security group.</p>
    pub fn db_security_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.db_security_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN for the DB security group.</p>
    pub fn set_db_security_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.db_security_group_arn = input;
        self
    }
    /// <p>The ARN for the DB security group.</p>
    pub fn get_db_security_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.db_security_group_arn
    }
    /// <p>Provides the description of the DB security group.</p>
    pub fn db_security_group_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.db_security_group_description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Provides the description of the DB security group.</p>
    pub fn set_db_security_group_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.db_security_group_description = input;
        self
    }
    /// <p>Provides the description of the DB security group.</p>
    pub fn get_db_security_group_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.db_security_group_description
    }
    /// <p>Specifies the name of the DB security group.</p>
    pub fn db_security_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.db_security_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the name of the DB security group.</p>
    pub fn set_db_security_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.db_security_group_name = input;
        self
    }
    /// <p>Specifies the name of the DB security group.</p>
    pub fn get_db_security_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.db_security_group_name
    }
    /// Appends an item to `ec2_security_groups`.
    ///
    /// To override the contents of this collection use [`set_ec2_security_groups`](Self::set_ec2_security_groups).
    ///
    /// <p>Contains a list of EC2 security groups.</p>
    pub fn ec2_security_groups(mut self, input: crate::types::AwsRdsDbSecurityGroupEc2SecurityGroup) -> Self {
        let mut v = self.ec2_security_groups.unwrap_or_default();
        v.push(input);
        self.ec2_security_groups = ::std::option::Option::Some(v);
        self
    }
    /// <p>Contains a list of EC2 security groups.</p>
    pub fn set_ec2_security_groups(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::AwsRdsDbSecurityGroupEc2SecurityGroup>>,
    ) -> Self {
        self.ec2_security_groups = input;
        self
    }
    /// <p>Contains a list of EC2 security groups.</p>
    pub fn get_ec2_security_groups(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AwsRdsDbSecurityGroupEc2SecurityGroup>> {
        &self.ec2_security_groups
    }
    /// Appends an item to `ip_ranges`.
    ///
    /// To override the contents of this collection use [`set_ip_ranges`](Self::set_ip_ranges).
    ///
    /// <p>Contains a list of IP ranges.</p>
    pub fn ip_ranges(mut self, input: crate::types::AwsRdsDbSecurityGroupIpRange) -> Self {
        let mut v = self.ip_ranges.unwrap_or_default();
        v.push(input);
        self.ip_ranges = ::std::option::Option::Some(v);
        self
    }
    /// <p>Contains a list of IP ranges.</p>
    pub fn set_ip_ranges(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AwsRdsDbSecurityGroupIpRange>>) -> Self {
        self.ip_ranges = input;
        self
    }
    /// <p>Contains a list of IP ranges.</p>
    pub fn get_ip_ranges(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AwsRdsDbSecurityGroupIpRange>> {
        &self.ip_ranges
    }
    /// <p>Provides the Amazon Web Services ID of the owner of a specific DB security group.</p>
    pub fn owner_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.owner_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Provides the Amazon Web Services ID of the owner of a specific DB security group.</p>
    pub fn set_owner_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.owner_id = input;
        self
    }
    /// <p>Provides the Amazon Web Services ID of the owner of a specific DB security group.</p>
    pub fn get_owner_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.owner_id
    }
    /// <p>Provides VPC ID associated with the DB security group. </p>
    pub fn vpc_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vpc_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Provides VPC ID associated with the DB security group. </p>
    pub fn set_vpc_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vpc_id = input;
        self
    }
    /// <p>Provides VPC ID associated with the DB security group. </p>
    pub fn get_vpc_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.vpc_id
    }
    /// Consumes the builder and constructs a [`AwsRdsDbSecurityGroupDetails`](crate::types::AwsRdsDbSecurityGroupDetails).
    pub fn build(self) -> crate::types::AwsRdsDbSecurityGroupDetails {
        crate::types::AwsRdsDbSecurityGroupDetails {
            db_security_group_arn: self.db_security_group_arn,
            db_security_group_description: self.db_security_group_description,
            db_security_group_name: self.db_security_group_name,
            ec2_security_groups: self.ec2_security_groups,
            ip_ranges: self.ip_ranges,
            owner_id: self.owner_id,
            vpc_id: self.vpc_id,
        }
    }
}
