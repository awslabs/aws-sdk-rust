// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A resource to assign to a container.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails {
    /// <p>The type of resource to assign to a container. Valid values are <code>GPU</code> or <code>InferenceAccelerator</code>.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<std::string::String>,
    /// <p>The value for the specified resource type.</p>
    /// <p>For <code>GPU</code>, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container.</p>
    /// <p>For <code>InferenceAccelerator</code>, the value should match the <code>DeviceName</code> attribute of an entry in <code>InferenceAccelerators</code>.</p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
}
impl AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails {
    /// <p>The type of resource to assign to a container. Valid values are <code>GPU</code> or <code>InferenceAccelerator</code>.</p>
    pub fn r#type(&self) -> std::option::Option<&str> {
        self.r#type.as_deref()
    }
    /// <p>The value for the specified resource type.</p>
    /// <p>For <code>GPU</code>, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container.</p>
    /// <p>For <code>InferenceAccelerator</code>, the value should match the <code>DeviceName</code> attribute of an entry in <code>InferenceAccelerators</code>.</p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
}
impl AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails {
    /// Creates a new builder-style object to manufacture [`AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails`](crate::types::AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails).
    pub fn builder() -> crate::types::builders::AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetailsBuilder{
        crate::types::builders::AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetailsBuilder::default()
    }
}

/// A builder for [`AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails`](crate::types::AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetailsBuilder {
    pub(crate) r#type: std::option::Option<std::string::String>,
    pub(crate) value: std::option::Option<std::string::String>,
}
impl AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetailsBuilder {
    /// <p>The type of resource to assign to a container. Valid values are <code>GPU</code> or <code>InferenceAccelerator</code>.</p>
    pub fn r#type(mut self, input: impl Into<std::string::String>) -> Self {
        self.r#type = Some(input.into());
        self
    }
    /// <p>The type of resource to assign to a container. Valid values are <code>GPU</code> or <code>InferenceAccelerator</code>.</p>
    pub fn set_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The value for the specified resource type.</p>
    /// <p>For <code>GPU</code>, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container.</p>
    /// <p>For <code>InferenceAccelerator</code>, the value should match the <code>DeviceName</code> attribute of an entry in <code>InferenceAccelerators</code>.</p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value for the specified resource type.</p>
    /// <p>For <code>GPU</code>, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container.</p>
    /// <p>For <code>InferenceAccelerator</code>, the value should match the <code>DeviceName</code> attribute of an entry in <code>InferenceAccelerators</code>.</p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails`](crate::types::AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails).
    pub fn build(
        self,
    ) -> crate::types::AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails {
        crate::types::AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails {
            r#type: self.r#type,
            value: self.value,
        }
    }
}
