// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the billing for read/write capacity on the table.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsDynamoDbTableBillingModeSummary {
    /// <p>The method used to charge for read and write throughput and to manage capacity.</p>
    #[doc(hidden)]
    pub billing_mode: std::option::Option<std::string::String>,
    /// <p>If the billing mode is <code>PAY_PER_REQUEST</code>, indicates when the billing mode was set to that value.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    #[doc(hidden)]
    pub last_update_to_pay_per_request_date_time: std::option::Option<std::string::String>,
}
impl AwsDynamoDbTableBillingModeSummary {
    /// <p>The method used to charge for read and write throughput and to manage capacity.</p>
    pub fn billing_mode(&self) -> std::option::Option<&str> {
        self.billing_mode.as_deref()
    }
    /// <p>If the billing mode is <code>PAY_PER_REQUEST</code>, indicates when the billing mode was set to that value.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn last_update_to_pay_per_request_date_time(&self) -> std::option::Option<&str> {
        self.last_update_to_pay_per_request_date_time.as_deref()
    }
}
impl AwsDynamoDbTableBillingModeSummary {
    /// Creates a new builder-style object to manufacture [`AwsDynamoDbTableBillingModeSummary`](crate::types::AwsDynamoDbTableBillingModeSummary).
    pub fn builder() -> crate::types::builders::AwsDynamoDbTableBillingModeSummaryBuilder {
        crate::types::builders::AwsDynamoDbTableBillingModeSummaryBuilder::default()
    }
}

/// A builder for [`AwsDynamoDbTableBillingModeSummary`](crate::types::AwsDynamoDbTableBillingModeSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsDynamoDbTableBillingModeSummaryBuilder {
    pub(crate) billing_mode: std::option::Option<std::string::String>,
    pub(crate) last_update_to_pay_per_request_date_time: std::option::Option<std::string::String>,
}
impl AwsDynamoDbTableBillingModeSummaryBuilder {
    /// <p>The method used to charge for read and write throughput and to manage capacity.</p>
    pub fn billing_mode(mut self, input: impl Into<std::string::String>) -> Self {
        self.billing_mode = Some(input.into());
        self
    }
    /// <p>The method used to charge for read and write throughput and to manage capacity.</p>
    pub fn set_billing_mode(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.billing_mode = input;
        self
    }
    /// <p>If the billing mode is <code>PAY_PER_REQUEST</code>, indicates when the billing mode was set to that value.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn last_update_to_pay_per_request_date_time(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.last_update_to_pay_per_request_date_time = Some(input.into());
        self
    }
    /// <p>If the billing mode is <code>PAY_PER_REQUEST</code>, indicates when the billing mode was set to that value.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn set_last_update_to_pay_per_request_date_time(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.last_update_to_pay_per_request_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsDynamoDbTableBillingModeSummary`](crate::types::AwsDynamoDbTableBillingModeSummary).
    pub fn build(self) -> crate::types::AwsDynamoDbTableBillingModeSummary {
        crate::types::AwsDynamoDbTableBillingModeSummary {
            billing_mode: self.billing_mode,
            last_update_to_pay_per_request_date_time: self.last_update_to_pay_per_request_date_time,
        }
    }
}
