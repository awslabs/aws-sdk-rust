// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the IP address where the scanned port is located.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActionLocalIpDetails {
    /// <p>The IP address.</p>
    #[doc(hidden)]
    pub ip_address_v4: std::option::Option<std::string::String>,
}
impl ActionLocalIpDetails {
    /// <p>The IP address.</p>
    pub fn ip_address_v4(&self) -> std::option::Option<&str> {
        self.ip_address_v4.as_deref()
    }
}
impl ActionLocalIpDetails {
    /// Creates a new builder-style object to manufacture [`ActionLocalIpDetails`](crate::types::ActionLocalIpDetails).
    pub fn builder() -> crate::types::builders::ActionLocalIpDetailsBuilder {
        crate::types::builders::ActionLocalIpDetailsBuilder::default()
    }
}

/// A builder for [`ActionLocalIpDetails`](crate::types::ActionLocalIpDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActionLocalIpDetailsBuilder {
    pub(crate) ip_address_v4: std::option::Option<std::string::String>,
}
impl ActionLocalIpDetailsBuilder {
    /// <p>The IP address.</p>
    pub fn ip_address_v4(mut self, input: impl Into<std::string::String>) -> Self {
        self.ip_address_v4 = Some(input.into());
        self
    }
    /// <p>The IP address.</p>
    pub fn set_ip_address_v4(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ip_address_v4 = input;
        self
    }
    /// Consumes the builder and constructs a [`ActionLocalIpDetails`](crate::types::ActionLocalIpDetails).
    pub fn build(self) -> crate::types::ActionLocalIpDetails {
        crate::types::ActionLocalIpDetails {
            ip_address_v4: self.ip_address_v4,
        }
    }
}
