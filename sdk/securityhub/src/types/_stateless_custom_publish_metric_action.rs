// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about metrics to publish to CloudWatch.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StatelessCustomPublishMetricAction {
    /// <p>Defines CloudWatch dimension values to publish.</p>
    #[doc(hidden)]
    pub dimensions: std::option::Option<
        std::vec::Vec<crate::types::StatelessCustomPublishMetricActionDimension>,
    >,
}
impl StatelessCustomPublishMetricAction {
    /// <p>Defines CloudWatch dimension values to publish.</p>
    pub fn dimensions(
        &self,
    ) -> std::option::Option<&[crate::types::StatelessCustomPublishMetricActionDimension]> {
        self.dimensions.as_deref()
    }
}
impl StatelessCustomPublishMetricAction {
    /// Creates a new builder-style object to manufacture [`StatelessCustomPublishMetricAction`](crate::types::StatelessCustomPublishMetricAction).
    pub fn builder() -> crate::types::builders::StatelessCustomPublishMetricActionBuilder {
        crate::types::builders::StatelessCustomPublishMetricActionBuilder::default()
    }
}

/// A builder for [`StatelessCustomPublishMetricAction`](crate::types::StatelessCustomPublishMetricAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StatelessCustomPublishMetricActionBuilder {
    pub(crate) dimensions: std::option::Option<
        std::vec::Vec<crate::types::StatelessCustomPublishMetricActionDimension>,
    >,
}
impl StatelessCustomPublishMetricActionBuilder {
    /// Appends an item to `dimensions`.
    ///
    /// To override the contents of this collection use [`set_dimensions`](Self::set_dimensions).
    ///
    /// <p>Defines CloudWatch dimension values to publish.</p>
    pub fn dimensions(
        mut self,
        input: crate::types::StatelessCustomPublishMetricActionDimension,
    ) -> Self {
        let mut v = self.dimensions.unwrap_or_default();
        v.push(input);
        self.dimensions = Some(v);
        self
    }
    /// <p>Defines CloudWatch dimension values to publish.</p>
    pub fn set_dimensions(
        mut self,
        input: std::option::Option<
            std::vec::Vec<crate::types::StatelessCustomPublishMetricActionDimension>,
        >,
    ) -> Self {
        self.dimensions = input;
        self
    }
    /// Consumes the builder and constructs a [`StatelessCustomPublishMetricAction`](crate::types::StatelessCustomPublishMetricAction).
    pub fn build(self) -> crate::types::StatelessCustomPublishMetricAction {
        crate::types::StatelessCustomPublishMetricAction {
            dimensions: self.dimensions,
        }
    }
}
