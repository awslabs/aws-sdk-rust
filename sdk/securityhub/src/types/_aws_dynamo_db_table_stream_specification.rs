// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The current DynamoDB Streams configuration for the table.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsDynamoDbTableStreamSpecification {
    /// <p>Indicates whether DynamoDB Streams is enabled on the table.</p>
    #[doc(hidden)]
    pub stream_enabled: bool,
    /// <p>Determines the information that is written to the table.</p>
    #[doc(hidden)]
    pub stream_view_type: std::option::Option<std::string::String>,
}
impl AwsDynamoDbTableStreamSpecification {
    /// <p>Indicates whether DynamoDB Streams is enabled on the table.</p>
    pub fn stream_enabled(&self) -> bool {
        self.stream_enabled
    }
    /// <p>Determines the information that is written to the table.</p>
    pub fn stream_view_type(&self) -> std::option::Option<&str> {
        self.stream_view_type.as_deref()
    }
}
impl AwsDynamoDbTableStreamSpecification {
    /// Creates a new builder-style object to manufacture [`AwsDynamoDbTableStreamSpecification`](crate::types::AwsDynamoDbTableStreamSpecification).
    pub fn builder() -> crate::types::builders::AwsDynamoDbTableStreamSpecificationBuilder {
        crate::types::builders::AwsDynamoDbTableStreamSpecificationBuilder::default()
    }
}

/// A builder for [`AwsDynamoDbTableStreamSpecification`](crate::types::AwsDynamoDbTableStreamSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsDynamoDbTableStreamSpecificationBuilder {
    pub(crate) stream_enabled: std::option::Option<bool>,
    pub(crate) stream_view_type: std::option::Option<std::string::String>,
}
impl AwsDynamoDbTableStreamSpecificationBuilder {
    /// <p>Indicates whether DynamoDB Streams is enabled on the table.</p>
    pub fn stream_enabled(mut self, input: bool) -> Self {
        self.stream_enabled = Some(input);
        self
    }
    /// <p>Indicates whether DynamoDB Streams is enabled on the table.</p>
    pub fn set_stream_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.stream_enabled = input;
        self
    }
    /// <p>Determines the information that is written to the table.</p>
    pub fn stream_view_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.stream_view_type = Some(input.into());
        self
    }
    /// <p>Determines the information that is written to the table.</p>
    pub fn set_stream_view_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stream_view_type = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsDynamoDbTableStreamSpecification`](crate::types::AwsDynamoDbTableStreamSpecification).
    pub fn build(self) -> crate::types::AwsDynamoDbTableStreamSpecification {
        crate::types::AwsDynamoDbTableStreamSpecification {
            stream_enabled: self.stream_enabled.unwrap_or_default(),
            stream_view_type: self.stream_view_type,
        }
    }
}
