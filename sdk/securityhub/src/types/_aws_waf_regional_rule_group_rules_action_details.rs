// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the action that WAF should take on a web request when it matches the criteria defined in the rule. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsWafRegionalRuleGroupRulesActionDetails {
    /// <p>Specifies the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, and <code>SizeConstraintSet</code> objects that you want to add to a rule and, for each object, indicates whether you want to negate the settings.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<std::string::String>,
}
impl AwsWafRegionalRuleGroupRulesActionDetails {
    /// <p>Specifies the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, and <code>SizeConstraintSet</code> objects that you want to add to a rule and, for each object, indicates whether you want to negate the settings.</p>
    pub fn r#type(&self) -> std::option::Option<&str> {
        self.r#type.as_deref()
    }
}
impl AwsWafRegionalRuleGroupRulesActionDetails {
    /// Creates a new builder-style object to manufacture [`AwsWafRegionalRuleGroupRulesActionDetails`](crate::types::AwsWafRegionalRuleGroupRulesActionDetails).
    pub fn builder() -> crate::types::builders::AwsWafRegionalRuleGroupRulesActionDetailsBuilder {
        crate::types::builders::AwsWafRegionalRuleGroupRulesActionDetailsBuilder::default()
    }
}

/// A builder for [`AwsWafRegionalRuleGroupRulesActionDetails`](crate::types::AwsWafRegionalRuleGroupRulesActionDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsWafRegionalRuleGroupRulesActionDetailsBuilder {
    pub(crate) r#type: std::option::Option<std::string::String>,
}
impl AwsWafRegionalRuleGroupRulesActionDetailsBuilder {
    /// <p>Specifies the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, and <code>SizeConstraintSet</code> objects that you want to add to a rule and, for each object, indicates whether you want to negate the settings.</p>
    pub fn r#type(mut self, input: impl Into<std::string::String>) -> Self {
        self.r#type = Some(input.into());
        self
    }
    /// <p>Specifies the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, and <code>SizeConstraintSet</code> objects that you want to add to a rule and, for each object, indicates whether you want to negate the settings.</p>
    pub fn set_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsWafRegionalRuleGroupRulesActionDetails`](crate::types::AwsWafRegionalRuleGroupRulesActionDetails).
    pub fn build(self) -> crate::types::AwsWafRegionalRuleGroupRulesActionDetails {
        crate::types::AwsWafRegionalRuleGroupRulesActionDetails {
            r#type: self.r#type,
        }
    }
}
