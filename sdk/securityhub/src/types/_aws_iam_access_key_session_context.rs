// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the session that the key was used for.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsIamAccessKeySessionContext {
    /// <p>Attributes of the session that the key was used for.</p>
    #[doc(hidden)]
    pub attributes: std::option::Option<crate::types::AwsIamAccessKeySessionContextAttributes>,
    /// <p>Information about the entity that created the session.</p>
    #[doc(hidden)]
    pub session_issuer:
        std::option::Option<crate::types::AwsIamAccessKeySessionContextSessionIssuer>,
}
impl AwsIamAccessKeySessionContext {
    /// <p>Attributes of the session that the key was used for.</p>
    pub fn attributes(
        &self,
    ) -> std::option::Option<&crate::types::AwsIamAccessKeySessionContextAttributes> {
        self.attributes.as_ref()
    }
    /// <p>Information about the entity that created the session.</p>
    pub fn session_issuer(
        &self,
    ) -> std::option::Option<&crate::types::AwsIamAccessKeySessionContextSessionIssuer> {
        self.session_issuer.as_ref()
    }
}
impl AwsIamAccessKeySessionContext {
    /// Creates a new builder-style object to manufacture [`AwsIamAccessKeySessionContext`](crate::types::AwsIamAccessKeySessionContext).
    pub fn builder() -> crate::types::builders::AwsIamAccessKeySessionContextBuilder {
        crate::types::builders::AwsIamAccessKeySessionContextBuilder::default()
    }
}

/// A builder for [`AwsIamAccessKeySessionContext`](crate::types::AwsIamAccessKeySessionContext).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsIamAccessKeySessionContextBuilder {
    pub(crate) attributes:
        std::option::Option<crate::types::AwsIamAccessKeySessionContextAttributes>,
    pub(crate) session_issuer:
        std::option::Option<crate::types::AwsIamAccessKeySessionContextSessionIssuer>,
}
impl AwsIamAccessKeySessionContextBuilder {
    /// <p>Attributes of the session that the key was used for.</p>
    pub fn attributes(
        mut self,
        input: crate::types::AwsIamAccessKeySessionContextAttributes,
    ) -> Self {
        self.attributes = Some(input);
        self
    }
    /// <p>Attributes of the session that the key was used for.</p>
    pub fn set_attributes(
        mut self,
        input: std::option::Option<crate::types::AwsIamAccessKeySessionContextAttributes>,
    ) -> Self {
        self.attributes = input;
        self
    }
    /// <p>Information about the entity that created the session.</p>
    pub fn session_issuer(
        mut self,
        input: crate::types::AwsIamAccessKeySessionContextSessionIssuer,
    ) -> Self {
        self.session_issuer = Some(input);
        self
    }
    /// <p>Information about the entity that created the session.</p>
    pub fn set_session_issuer(
        mut self,
        input: std::option::Option<crate::types::AwsIamAccessKeySessionContextSessionIssuer>,
    ) -> Self {
        self.session_issuer = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsIamAccessKeySessionContext`](crate::types::AwsIamAccessKeySessionContext).
    pub fn build(self) -> crate::types::AwsIamAccessKeySessionContext {
        crate::types::AwsIamAccessKeySessionContext {
            attributes: self.attributes,
            session_issuer: self.session_issuer,
        }
    }
}
