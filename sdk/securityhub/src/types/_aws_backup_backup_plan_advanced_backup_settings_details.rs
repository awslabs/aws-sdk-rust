// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides a list of backup options for each resource type. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsBackupBackupPlanAdvancedBackupSettingsDetails {
    /// <p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs. Valid values are as follows:</p>
    /// <ul>
    /// <li> <p>Set to <code>WindowsVSS: enabled</code> to enable the WindowsVSS backup option and create a Windows VSS backup.</p> </li>
    /// <li> <p>Set to <code>WindowsVSS: disabled</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub backup_options:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    /// <p>The name of a resource type. The only supported resource type is Amazon EC2 instances with Windows VSS.</p>
    /// <p>The only valid value is <code>EC2</code>.</p>
    #[doc(hidden)]
    pub resource_type: std::option::Option<std::string::String>,
}
impl AwsBackupBackupPlanAdvancedBackupSettingsDetails {
    /// <p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs. Valid values are as follows:</p>
    /// <ul>
    /// <li> <p>Set to <code>WindowsVSS: enabled</code> to enable the WindowsVSS backup option and create a Windows VSS backup.</p> </li>
    /// <li> <p>Set to <code>WindowsVSS: disabled</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p> </li>
    /// </ul>
    pub fn backup_options(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.backup_options.as_ref()
    }
    /// <p>The name of a resource type. The only supported resource type is Amazon EC2 instances with Windows VSS.</p>
    /// <p>The only valid value is <code>EC2</code>.</p>
    pub fn resource_type(&self) -> std::option::Option<&str> {
        self.resource_type.as_deref()
    }
}
impl AwsBackupBackupPlanAdvancedBackupSettingsDetails {
    /// Creates a new builder-style object to manufacture [`AwsBackupBackupPlanAdvancedBackupSettingsDetails`](crate::types::AwsBackupBackupPlanAdvancedBackupSettingsDetails).
    pub fn builder(
    ) -> crate::types::builders::AwsBackupBackupPlanAdvancedBackupSettingsDetailsBuilder {
        crate::types::builders::AwsBackupBackupPlanAdvancedBackupSettingsDetailsBuilder::default()
    }
}

/// A builder for [`AwsBackupBackupPlanAdvancedBackupSettingsDetails`](crate::types::AwsBackupBackupPlanAdvancedBackupSettingsDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsBackupBackupPlanAdvancedBackupSettingsDetailsBuilder {
    pub(crate) backup_options:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    pub(crate) resource_type: std::option::Option<std::string::String>,
}
impl AwsBackupBackupPlanAdvancedBackupSettingsDetailsBuilder {
    /// Adds a key-value pair to `backup_options`.
    ///
    /// To override the contents of this collection use [`set_backup_options`](Self::set_backup_options).
    ///
    /// <p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs. Valid values are as follows:</p>
    /// <ul>
    /// <li> <p>Set to <code>WindowsVSS: enabled</code> to enable the WindowsVSS backup option and create a Windows VSS backup.</p> </li>
    /// <li> <p>Set to <code>WindowsVSS: disabled</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p> </li>
    /// </ul>
    pub fn backup_options(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.backup_options.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.backup_options = Some(hash_map);
        self
    }
    /// <p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs. Valid values are as follows:</p>
    /// <ul>
    /// <li> <p>Set to <code>WindowsVSS: enabled</code> to enable the WindowsVSS backup option and create a Windows VSS backup.</p> </li>
    /// <li> <p>Set to <code>WindowsVSS: disabled</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p> </li>
    /// </ul>
    pub fn set_backup_options(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.backup_options = input;
        self
    }
    /// <p>The name of a resource type. The only supported resource type is Amazon EC2 instances with Windows VSS.</p>
    /// <p>The only valid value is <code>EC2</code>.</p>
    pub fn resource_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_type = Some(input.into());
        self
    }
    /// <p>The name of a resource type. The only supported resource type is Amazon EC2 instances with Windows VSS.</p>
    /// <p>The only valid value is <code>EC2</code>.</p>
    pub fn set_resource_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_type = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsBackupBackupPlanAdvancedBackupSettingsDetails`](crate::types::AwsBackupBackupPlanAdvancedBackupSettingsDetails).
    pub fn build(self) -> crate::types::AwsBackupBackupPlanAdvancedBackupSettingsDetails {
        crate::types::AwsBackupBackupPlanAdvancedBackupSettingsDetails {
            backup_options: self.backup_options,
            resource_type: self.resource_type,
        }
    }
}
