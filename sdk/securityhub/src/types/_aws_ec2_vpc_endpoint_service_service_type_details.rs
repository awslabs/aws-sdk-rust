// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The service type information for a VPC endpoint service.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsEc2VpcEndpointServiceServiceTypeDetails {
    /// <p>The type of service.</p>
    #[doc(hidden)]
    pub service_type: std::option::Option<std::string::String>,
}
impl AwsEc2VpcEndpointServiceServiceTypeDetails {
    /// <p>The type of service.</p>
    pub fn service_type(&self) -> std::option::Option<&str> {
        self.service_type.as_deref()
    }
}
impl AwsEc2VpcEndpointServiceServiceTypeDetails {
    /// Creates a new builder-style object to manufacture [`AwsEc2VpcEndpointServiceServiceTypeDetails`](crate::types::AwsEc2VpcEndpointServiceServiceTypeDetails).
    pub fn builder() -> crate::types::builders::AwsEc2VpcEndpointServiceServiceTypeDetailsBuilder {
        crate::types::builders::AwsEc2VpcEndpointServiceServiceTypeDetailsBuilder::default()
    }
}

/// A builder for [`AwsEc2VpcEndpointServiceServiceTypeDetails`](crate::types::AwsEc2VpcEndpointServiceServiceTypeDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsEc2VpcEndpointServiceServiceTypeDetailsBuilder {
    pub(crate) service_type: std::option::Option<std::string::String>,
}
impl AwsEc2VpcEndpointServiceServiceTypeDetailsBuilder {
    /// <p>The type of service.</p>
    pub fn service_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.service_type = Some(input.into());
        self
    }
    /// <p>The type of service.</p>
    pub fn set_service_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.service_type = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsEc2VpcEndpointServiceServiceTypeDetails`](crate::types::AwsEc2VpcEndpointServiceServiceTypeDetails).
    pub fn build(self) -> crate::types::AwsEc2VpcEndpointServiceServiceTypeDetails {
        crate::types::AwsEc2VpcEndpointServiceServiceTypeDetails {
            service_type: self.service_type,
        }
    }
}
