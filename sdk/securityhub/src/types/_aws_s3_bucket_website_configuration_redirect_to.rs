// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The redirect behavior for requests to the website.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsS3BucketWebsiteConfigurationRedirectTo {
    /// <p>The name of the host to redirect requests to.</p>
    #[doc(hidden)]
    pub hostname: std::option::Option<std::string::String>,
    /// <p>The protocol to use when redirecting requests. By default, this field uses the same protocol as the original request. Valid values are <code>http</code> or <code>https</code>.</p>
    #[doc(hidden)]
    pub protocol: std::option::Option<std::string::String>,
}
impl AwsS3BucketWebsiteConfigurationRedirectTo {
    /// <p>The name of the host to redirect requests to.</p>
    pub fn hostname(&self) -> std::option::Option<&str> {
        self.hostname.as_deref()
    }
    /// <p>The protocol to use when redirecting requests. By default, this field uses the same protocol as the original request. Valid values are <code>http</code> or <code>https</code>.</p>
    pub fn protocol(&self) -> std::option::Option<&str> {
        self.protocol.as_deref()
    }
}
impl AwsS3BucketWebsiteConfigurationRedirectTo {
    /// Creates a new builder-style object to manufacture [`AwsS3BucketWebsiteConfigurationRedirectTo`](crate::types::AwsS3BucketWebsiteConfigurationRedirectTo).
    pub fn builder() -> crate::types::builders::AwsS3BucketWebsiteConfigurationRedirectToBuilder {
        crate::types::builders::AwsS3BucketWebsiteConfigurationRedirectToBuilder::default()
    }
}

/// A builder for [`AwsS3BucketWebsiteConfigurationRedirectTo`](crate::types::AwsS3BucketWebsiteConfigurationRedirectTo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsS3BucketWebsiteConfigurationRedirectToBuilder {
    pub(crate) hostname: std::option::Option<std::string::String>,
    pub(crate) protocol: std::option::Option<std::string::String>,
}
impl AwsS3BucketWebsiteConfigurationRedirectToBuilder {
    /// <p>The name of the host to redirect requests to.</p>
    pub fn hostname(mut self, input: impl Into<std::string::String>) -> Self {
        self.hostname = Some(input.into());
        self
    }
    /// <p>The name of the host to redirect requests to.</p>
    pub fn set_hostname(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.hostname = input;
        self
    }
    /// <p>The protocol to use when redirecting requests. By default, this field uses the same protocol as the original request. Valid values are <code>http</code> or <code>https</code>.</p>
    pub fn protocol(mut self, input: impl Into<std::string::String>) -> Self {
        self.protocol = Some(input.into());
        self
    }
    /// <p>The protocol to use when redirecting requests. By default, this field uses the same protocol as the original request. Valid values are <code>http</code> or <code>https</code>.</p>
    pub fn set_protocol(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.protocol = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsS3BucketWebsiteConfigurationRedirectTo`](crate::types::AwsS3BucketWebsiteConfigurationRedirectTo).
    pub fn build(self) -> crate::types::AwsS3BucketWebsiteConfigurationRedirectTo {
        crate::types::AwsS3BucketWebsiteConfigurationRedirectTo {
            hostname: self.hostname,
            protocol: self.protocol,
        }
    }
}
