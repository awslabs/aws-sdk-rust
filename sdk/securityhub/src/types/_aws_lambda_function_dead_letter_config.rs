// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The dead-letter queue for failed asynchronous invocations.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsLambdaFunctionDeadLetterConfig {
    /// <p>The ARN of an SQS queue or SNS topic.</p>
    #[doc(hidden)]
    pub target_arn: std::option::Option<std::string::String>,
}
impl AwsLambdaFunctionDeadLetterConfig {
    /// <p>The ARN of an SQS queue or SNS topic.</p>
    pub fn target_arn(&self) -> std::option::Option<&str> {
        self.target_arn.as_deref()
    }
}
impl AwsLambdaFunctionDeadLetterConfig {
    /// Creates a new builder-style object to manufacture [`AwsLambdaFunctionDeadLetterConfig`](crate::types::AwsLambdaFunctionDeadLetterConfig).
    pub fn builder() -> crate::types::builders::AwsLambdaFunctionDeadLetterConfigBuilder {
        crate::types::builders::AwsLambdaFunctionDeadLetterConfigBuilder::default()
    }
}

/// A builder for [`AwsLambdaFunctionDeadLetterConfig`](crate::types::AwsLambdaFunctionDeadLetterConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsLambdaFunctionDeadLetterConfigBuilder {
    pub(crate) target_arn: std::option::Option<std::string::String>,
}
impl AwsLambdaFunctionDeadLetterConfigBuilder {
    /// <p>The ARN of an SQS queue or SNS topic.</p>
    pub fn target_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.target_arn = Some(input.into());
        self
    }
    /// <p>The ARN of an SQS queue or SNS topic.</p>
    pub fn set_target_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.target_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsLambdaFunctionDeadLetterConfig`](crate::types::AwsLambdaFunctionDeadLetterConfig).
    pub fn build(self) -> crate::types::AwsLambdaFunctionDeadLetterConfig {
        crate::types::AwsLambdaFunctionDeadLetterConfig {
            target_arn: self.target_arn,
        }
    }
}
