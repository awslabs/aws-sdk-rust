// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides details for all file system operations using this Amazon EFS access point. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsEfsAccessPointPosixUserDetails {
    /// <p>The POSIX group ID used for all file system operations using this access point. </p>
    #[doc(hidden)]
    pub gid: std::option::Option<std::string::String>,
    /// <p>Secondary POSIX group IDs used for all file system operations using this access point. </p>
    #[doc(hidden)]
    pub secondary_gids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The POSIX user ID used for all file system operations using this access point. </p>
    #[doc(hidden)]
    pub uid: std::option::Option<std::string::String>,
}
impl AwsEfsAccessPointPosixUserDetails {
    /// <p>The POSIX group ID used for all file system operations using this access point. </p>
    pub fn gid(&self) -> std::option::Option<&str> {
        self.gid.as_deref()
    }
    /// <p>Secondary POSIX group IDs used for all file system operations using this access point. </p>
    pub fn secondary_gids(&self) -> std::option::Option<&[std::string::String]> {
        self.secondary_gids.as_deref()
    }
    /// <p>The POSIX user ID used for all file system operations using this access point. </p>
    pub fn uid(&self) -> std::option::Option<&str> {
        self.uid.as_deref()
    }
}
impl AwsEfsAccessPointPosixUserDetails {
    /// Creates a new builder-style object to manufacture [`AwsEfsAccessPointPosixUserDetails`](crate::types::AwsEfsAccessPointPosixUserDetails).
    pub fn builder() -> crate::types::builders::AwsEfsAccessPointPosixUserDetailsBuilder {
        crate::types::builders::AwsEfsAccessPointPosixUserDetailsBuilder::default()
    }
}

/// A builder for [`AwsEfsAccessPointPosixUserDetails`](crate::types::AwsEfsAccessPointPosixUserDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsEfsAccessPointPosixUserDetailsBuilder {
    pub(crate) gid: std::option::Option<std::string::String>,
    pub(crate) secondary_gids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) uid: std::option::Option<std::string::String>,
}
impl AwsEfsAccessPointPosixUserDetailsBuilder {
    /// <p>The POSIX group ID used for all file system operations using this access point. </p>
    pub fn gid(mut self, input: impl Into<std::string::String>) -> Self {
        self.gid = Some(input.into());
        self
    }
    /// <p>The POSIX group ID used for all file system operations using this access point. </p>
    pub fn set_gid(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.gid = input;
        self
    }
    /// Appends an item to `secondary_gids`.
    ///
    /// To override the contents of this collection use [`set_secondary_gids`](Self::set_secondary_gids).
    ///
    /// <p>Secondary POSIX group IDs used for all file system operations using this access point. </p>
    pub fn secondary_gids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.secondary_gids.unwrap_or_default();
        v.push(input.into());
        self.secondary_gids = Some(v);
        self
    }
    /// <p>Secondary POSIX group IDs used for all file system operations using this access point. </p>
    pub fn set_secondary_gids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.secondary_gids = input;
        self
    }
    /// <p>The POSIX user ID used for all file system operations using this access point. </p>
    pub fn uid(mut self, input: impl Into<std::string::String>) -> Self {
        self.uid = Some(input.into());
        self
    }
    /// <p>The POSIX user ID used for all file system operations using this access point. </p>
    pub fn set_uid(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.uid = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsEfsAccessPointPosixUserDetails`](crate::types::AwsEfsAccessPointPosixUserDetails).
    pub fn build(self) -> crate::types::AwsEfsAccessPointPosixUserDetails {
        crate::types::AwsEfsAccessPointPosixUserDetails {
            gid: self.gid,
            secondary_gids: self.secondary_gids,
            uid: self.uid,
        }
    }
}
