// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails {
    /// <p>The Amazon EFS access point identifier to use.</p>
    #[doc(hidden)]
    pub access_point_id: std::option::Option<std::string::String>,
    /// <p>Whether to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system.</p>
    #[doc(hidden)]
    pub iam: std::option::Option<std::string::String>,
}
impl AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails {
    /// <p>The Amazon EFS access point identifier to use.</p>
    pub fn access_point_id(&self) -> std::option::Option<&str> {
        self.access_point_id.as_deref()
    }
    /// <p>Whether to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system.</p>
    pub fn iam(&self) -> std::option::Option<&str> {
        self.iam.as_deref()
    }
}
impl AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails {
    /// Creates a new builder-style object to manufacture [`AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails`](crate::types::AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails).
    pub fn builder() -> crate::types::builders::AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetailsBuilder{
        crate::types::builders::AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetailsBuilder::default()
    }
}

/// A builder for [`AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails`](crate::types::AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetailsBuilder {
    pub(crate) access_point_id: std::option::Option<std::string::String>,
    pub(crate) iam: std::option::Option<std::string::String>,
}
impl AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetailsBuilder {
    /// <p>The Amazon EFS access point identifier to use.</p>
    pub fn access_point_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.access_point_id = Some(input.into());
        self
    }
    /// <p>The Amazon EFS access point identifier to use.</p>
    pub fn set_access_point_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.access_point_id = input;
        self
    }
    /// <p>Whether to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system.</p>
    pub fn iam(mut self, input: impl Into<std::string::String>) -> Self {
        self.iam = Some(input.into());
        self
    }
    /// <p>Whether to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system.</p>
    pub fn set_iam(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.iam = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails`](crate::types::AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails).
    pub fn build(
        self,
    ) -> crate::types::AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails
    {
        crate::types::AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails {
            access_point_id: self.access_point_id,
            iam: self.iam,
        }
    }
}
