// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Custom request handling behavior that inserts custom headers into a web request. WAF uses custom request handling when the rule action doesn't block the request. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsWafv2CustomRequestHandlingDetails {
    /// <p> The HTTP headers to insert into the request. </p>
    #[doc(hidden)]
    pub insert_headers: std::option::Option<std::vec::Vec<crate::types::AwsWafv2CustomHttpHeader>>,
}
impl AwsWafv2CustomRequestHandlingDetails {
    /// <p> The HTTP headers to insert into the request. </p>
    pub fn insert_headers(&self) -> std::option::Option<&[crate::types::AwsWafv2CustomHttpHeader]> {
        self.insert_headers.as_deref()
    }
}
impl AwsWafv2CustomRequestHandlingDetails {
    /// Creates a new builder-style object to manufacture [`AwsWafv2CustomRequestHandlingDetails`](crate::types::AwsWafv2CustomRequestHandlingDetails).
    pub fn builder() -> crate::types::builders::AwsWafv2CustomRequestHandlingDetailsBuilder {
        crate::types::builders::AwsWafv2CustomRequestHandlingDetailsBuilder::default()
    }
}

/// A builder for [`AwsWafv2CustomRequestHandlingDetails`](crate::types::AwsWafv2CustomRequestHandlingDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsWafv2CustomRequestHandlingDetailsBuilder {
    pub(crate) insert_headers:
        std::option::Option<std::vec::Vec<crate::types::AwsWafv2CustomHttpHeader>>,
}
impl AwsWafv2CustomRequestHandlingDetailsBuilder {
    /// Appends an item to `insert_headers`.
    ///
    /// To override the contents of this collection use [`set_insert_headers`](Self::set_insert_headers).
    ///
    /// <p> The HTTP headers to insert into the request. </p>
    pub fn insert_headers(mut self, input: crate::types::AwsWafv2CustomHttpHeader) -> Self {
        let mut v = self.insert_headers.unwrap_or_default();
        v.push(input);
        self.insert_headers = Some(v);
        self
    }
    /// <p> The HTTP headers to insert into the request. </p>
    pub fn set_insert_headers(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AwsWafv2CustomHttpHeader>>,
    ) -> Self {
        self.insert_headers = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsWafv2CustomRequestHandlingDetails`](crate::types::AwsWafv2CustomRequestHandlingDetails).
    pub fn build(self) -> crate::types::AwsWafv2CustomRequestHandlingDetails {
        crate::types::AwsWafv2CustomRequestHandlingDetails {
            insert_headers: self.insert_headers,
        }
    }
}
