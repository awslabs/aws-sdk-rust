// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about logging for the S3 bucket</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsS3BucketLoggingConfiguration {
    /// <p>The name of the S3 bucket where log files for the S3 bucket are stored.</p>
    #[doc(hidden)]
    pub destination_bucket_name: std::option::Option<std::string::String>,
    /// <p>The prefix added to log files for the S3 bucket.</p>
    #[doc(hidden)]
    pub log_file_prefix: std::option::Option<std::string::String>,
}
impl AwsS3BucketLoggingConfiguration {
    /// <p>The name of the S3 bucket where log files for the S3 bucket are stored.</p>
    pub fn destination_bucket_name(&self) -> std::option::Option<&str> {
        self.destination_bucket_name.as_deref()
    }
    /// <p>The prefix added to log files for the S3 bucket.</p>
    pub fn log_file_prefix(&self) -> std::option::Option<&str> {
        self.log_file_prefix.as_deref()
    }
}
impl AwsS3BucketLoggingConfiguration {
    /// Creates a new builder-style object to manufacture [`AwsS3BucketLoggingConfiguration`](crate::types::AwsS3BucketLoggingConfiguration).
    pub fn builder() -> crate::types::builders::AwsS3BucketLoggingConfigurationBuilder {
        crate::types::builders::AwsS3BucketLoggingConfigurationBuilder::default()
    }
}

/// A builder for [`AwsS3BucketLoggingConfiguration`](crate::types::AwsS3BucketLoggingConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsS3BucketLoggingConfigurationBuilder {
    pub(crate) destination_bucket_name: std::option::Option<std::string::String>,
    pub(crate) log_file_prefix: std::option::Option<std::string::String>,
}
impl AwsS3BucketLoggingConfigurationBuilder {
    /// <p>The name of the S3 bucket where log files for the S3 bucket are stored.</p>
    pub fn destination_bucket_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.destination_bucket_name = Some(input.into());
        self
    }
    /// <p>The name of the S3 bucket where log files for the S3 bucket are stored.</p>
    pub fn set_destination_bucket_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.destination_bucket_name = input;
        self
    }
    /// <p>The prefix added to log files for the S3 bucket.</p>
    pub fn log_file_prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_file_prefix = Some(input.into());
        self
    }
    /// <p>The prefix added to log files for the S3 bucket.</p>
    pub fn set_log_file_prefix(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_file_prefix = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsS3BucketLoggingConfiguration`](crate::types::AwsS3BucketLoggingConfiguration).
    pub fn build(self) -> crate::types::AwsS3BucketLoggingConfiguration {
        crate::types::AwsS3BucketLoggingConfiguration {
            destination_bucket_name: self.destination_bucket_name,
            log_file_prefix: self.log_file_prefix,
        }
    }
}
