// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the threat intelligence related to a finding.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ThreatIntelIndicator {
    /// <p>The type of threat intelligence indicator.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::ThreatIntelIndicatorType>,
    /// <p>The value of a threat intelligence indicator.</p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
    /// <p>The category of a threat intelligence indicator.</p>
    #[doc(hidden)]
    pub category: std::option::Option<crate::types::ThreatIntelIndicatorCategory>,
    /// <p>Indicates when the most recent instance of a threat intelligence indicator was observed.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    #[doc(hidden)]
    pub last_observed_at: std::option::Option<std::string::String>,
    /// <p>The source of the threat intelligence indicator.</p>
    #[doc(hidden)]
    pub source: std::option::Option<std::string::String>,
    /// <p>The URL to the page or site where you can get more information about the threat intelligence indicator.</p>
    #[doc(hidden)]
    pub source_url: std::option::Option<std::string::String>,
}
impl ThreatIntelIndicator {
    /// <p>The type of threat intelligence indicator.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::ThreatIntelIndicatorType> {
        self.r#type.as_ref()
    }
    /// <p>The value of a threat intelligence indicator.</p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
    /// <p>The category of a threat intelligence indicator.</p>
    pub fn category(&self) -> std::option::Option<&crate::types::ThreatIntelIndicatorCategory> {
        self.category.as_ref()
    }
    /// <p>Indicates when the most recent instance of a threat intelligence indicator was observed.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn last_observed_at(&self) -> std::option::Option<&str> {
        self.last_observed_at.as_deref()
    }
    /// <p>The source of the threat intelligence indicator.</p>
    pub fn source(&self) -> std::option::Option<&str> {
        self.source.as_deref()
    }
    /// <p>The URL to the page or site where you can get more information about the threat intelligence indicator.</p>
    pub fn source_url(&self) -> std::option::Option<&str> {
        self.source_url.as_deref()
    }
}
impl ThreatIntelIndicator {
    /// Creates a new builder-style object to manufacture [`ThreatIntelIndicator`](crate::types::ThreatIntelIndicator).
    pub fn builder() -> crate::types::builders::ThreatIntelIndicatorBuilder {
        crate::types::builders::ThreatIntelIndicatorBuilder::default()
    }
}

/// A builder for [`ThreatIntelIndicator`](crate::types::ThreatIntelIndicator).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ThreatIntelIndicatorBuilder {
    pub(crate) r#type: std::option::Option<crate::types::ThreatIntelIndicatorType>,
    pub(crate) value: std::option::Option<std::string::String>,
    pub(crate) category: std::option::Option<crate::types::ThreatIntelIndicatorCategory>,
    pub(crate) last_observed_at: std::option::Option<std::string::String>,
    pub(crate) source: std::option::Option<std::string::String>,
    pub(crate) source_url: std::option::Option<std::string::String>,
}
impl ThreatIntelIndicatorBuilder {
    /// <p>The type of threat intelligence indicator.</p>
    pub fn r#type(mut self, input: crate::types::ThreatIntelIndicatorType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The type of threat intelligence indicator.</p>
    pub fn set_type(
        mut self,
        input: std::option::Option<crate::types::ThreatIntelIndicatorType>,
    ) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The value of a threat intelligence indicator.</p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value of a threat intelligence indicator.</p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// <p>The category of a threat intelligence indicator.</p>
    pub fn category(mut self, input: crate::types::ThreatIntelIndicatorCategory) -> Self {
        self.category = Some(input);
        self
    }
    /// <p>The category of a threat intelligence indicator.</p>
    pub fn set_category(
        mut self,
        input: std::option::Option<crate::types::ThreatIntelIndicatorCategory>,
    ) -> Self {
        self.category = input;
        self
    }
    /// <p>Indicates when the most recent instance of a threat intelligence indicator was observed.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn last_observed_at(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_observed_at = Some(input.into());
        self
    }
    /// <p>Indicates when the most recent instance of a threat intelligence indicator was observed.</p>
    /// <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
    pub fn set_last_observed_at(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.last_observed_at = input;
        self
    }
    /// <p>The source of the threat intelligence indicator.</p>
    pub fn source(mut self, input: impl Into<std::string::String>) -> Self {
        self.source = Some(input.into());
        self
    }
    /// <p>The source of the threat intelligence indicator.</p>
    pub fn set_source(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source = input;
        self
    }
    /// <p>The URL to the page or site where you can get more information about the threat intelligence indicator.</p>
    pub fn source_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_url = Some(input.into());
        self
    }
    /// <p>The URL to the page or site where you can get more information about the threat intelligence indicator.</p>
    pub fn set_source_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source_url = input;
        self
    }
    /// Consumes the builder and constructs a [`ThreatIntelIndicator`](crate::types::ThreatIntelIndicator).
    pub fn build(self) -> crate::types::ThreatIntelIndicator {
        crate::types::ThreatIntelIndicator {
            r#type: self.r#type,
            value: self.value,
            category: self.category,
            last_observed_at: self.last_observed_at,
            source: self.source,
            source_url: self.source_url,
        }
    }
}
