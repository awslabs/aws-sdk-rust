// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A port range to specify the destination ports to inspect for.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts {
    /// <p>The starting port value for the port range.</p>
    #[doc(hidden)]
    pub from_port: i32,
    /// <p>The ending port value for the port range.</p>
    #[doc(hidden)]
    pub to_port: i32,
}
impl RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts {
    /// <p>The starting port value for the port range.</p>
    pub fn from_port(&self) -> i32 {
        self.from_port
    }
    /// <p>The ending port value for the port range.</p>
    pub fn to_port(&self) -> i32 {
        self.to_port
    }
}
impl RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts {
    /// Creates a new builder-style object to manufacture [`RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts`](crate::types::RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts).
    pub fn builder(
    ) -> crate::types::builders::RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsBuilder
    {
        crate::types::builders::RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsBuilder::default()
    }
}

/// A builder for [`RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts`](crate::types::RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsBuilder {
    pub(crate) from_port: std::option::Option<i32>,
    pub(crate) to_port: std::option::Option<i32>,
}
impl RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsBuilder {
    /// <p>The starting port value for the port range.</p>
    pub fn from_port(mut self, input: i32) -> Self {
        self.from_port = Some(input);
        self
    }
    /// <p>The starting port value for the port range.</p>
    pub fn set_from_port(mut self, input: std::option::Option<i32>) -> Self {
        self.from_port = input;
        self
    }
    /// <p>The ending port value for the port range.</p>
    pub fn to_port(mut self, input: i32) -> Self {
        self.to_port = Some(input);
        self
    }
    /// <p>The ending port value for the port range.</p>
    pub fn set_to_port(mut self, input: std::option::Option<i32>) -> Self {
        self.to_port = input;
        self
    }
    /// Consumes the builder and constructs a [`RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts`](crate::types::RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts).
    pub fn build(
        self,
    ) -> crate::types::RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts {
        crate::types::RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts {
            from_port: self.from_port.unwrap_or_default(),
            to_port: self.to_port.unwrap_or_default(),
        }
    }
}
