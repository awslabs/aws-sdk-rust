// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the rules attached to a rule group </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsWafRegionalRuleGroupRulesDetails {
    /// <p>The action that WAF should take on a web request when it matches the criteria defined in the rule. </p>
    #[doc(hidden)]
    pub action: std::option::Option<crate::types::AwsWafRegionalRuleGroupRulesActionDetails>,
    /// <p>If you define more than one rule in a web ACL, WAF evaluates each request against the rules in order based on the value of <code>Priority</code>. </p>
    #[doc(hidden)]
    pub priority: i32,
    /// <p>The ID for a rule. </p>
    #[doc(hidden)]
    pub rule_id: std::option::Option<std::string::String>,
    /// <p>The type of rule in the rule group. </p>
    #[doc(hidden)]
    pub r#type: std::option::Option<std::string::String>,
}
impl AwsWafRegionalRuleGroupRulesDetails {
    /// <p>The action that WAF should take on a web request when it matches the criteria defined in the rule. </p>
    pub fn action(
        &self,
    ) -> std::option::Option<&crate::types::AwsWafRegionalRuleGroupRulesActionDetails> {
        self.action.as_ref()
    }
    /// <p>If you define more than one rule in a web ACL, WAF evaluates each request against the rules in order based on the value of <code>Priority</code>. </p>
    pub fn priority(&self) -> i32 {
        self.priority
    }
    /// <p>The ID for a rule. </p>
    pub fn rule_id(&self) -> std::option::Option<&str> {
        self.rule_id.as_deref()
    }
    /// <p>The type of rule in the rule group. </p>
    pub fn r#type(&self) -> std::option::Option<&str> {
        self.r#type.as_deref()
    }
}
impl AwsWafRegionalRuleGroupRulesDetails {
    /// Creates a new builder-style object to manufacture [`AwsWafRegionalRuleGroupRulesDetails`](crate::types::AwsWafRegionalRuleGroupRulesDetails).
    pub fn builder() -> crate::types::builders::AwsWafRegionalRuleGroupRulesDetailsBuilder {
        crate::types::builders::AwsWafRegionalRuleGroupRulesDetailsBuilder::default()
    }
}

/// A builder for [`AwsWafRegionalRuleGroupRulesDetails`](crate::types::AwsWafRegionalRuleGroupRulesDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsWafRegionalRuleGroupRulesDetailsBuilder {
    pub(crate) action: std::option::Option<crate::types::AwsWafRegionalRuleGroupRulesActionDetails>,
    pub(crate) priority: std::option::Option<i32>,
    pub(crate) rule_id: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<std::string::String>,
}
impl AwsWafRegionalRuleGroupRulesDetailsBuilder {
    /// <p>The action that WAF should take on a web request when it matches the criteria defined in the rule. </p>
    pub fn action(
        mut self,
        input: crate::types::AwsWafRegionalRuleGroupRulesActionDetails,
    ) -> Self {
        self.action = Some(input);
        self
    }
    /// <p>The action that WAF should take on a web request when it matches the criteria defined in the rule. </p>
    pub fn set_action(
        mut self,
        input: std::option::Option<crate::types::AwsWafRegionalRuleGroupRulesActionDetails>,
    ) -> Self {
        self.action = input;
        self
    }
    /// <p>If you define more than one rule in a web ACL, WAF evaluates each request against the rules in order based on the value of <code>Priority</code>. </p>
    pub fn priority(mut self, input: i32) -> Self {
        self.priority = Some(input);
        self
    }
    /// <p>If you define more than one rule in a web ACL, WAF evaluates each request against the rules in order based on the value of <code>Priority</code>. </p>
    pub fn set_priority(mut self, input: std::option::Option<i32>) -> Self {
        self.priority = input;
        self
    }
    /// <p>The ID for a rule. </p>
    pub fn rule_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.rule_id = Some(input.into());
        self
    }
    /// <p>The ID for a rule. </p>
    pub fn set_rule_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.rule_id = input;
        self
    }
    /// <p>The type of rule in the rule group. </p>
    pub fn r#type(mut self, input: impl Into<std::string::String>) -> Self {
        self.r#type = Some(input.into());
        self
    }
    /// <p>The type of rule in the rule group. </p>
    pub fn set_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsWafRegionalRuleGroupRulesDetails`](crate::types::AwsWafRegionalRuleGroupRulesDetails).
    pub fn build(self) -> crate::types::AwsWafRegionalRuleGroupRulesDetails {
        crate::types::AwsWafRegionalRuleGroupRulesDetails {
            action: self.action,
            priority: self.priority.unwrap_or_default(),
            rule_id: self.rule_id,
            r#type: self.r#type,
        }
    }
}
