// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional settings to use in the specified rules.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RuleGroupVariables {
    /// <p>A list of IP addresses and address ranges, in CIDR notation.</p>
    #[doc(hidden)]
    pub ip_sets: std::option::Option<crate::types::RuleGroupVariablesIpSetsDetails>,
    /// <p>A list of port ranges.</p>
    #[doc(hidden)]
    pub port_sets: std::option::Option<crate::types::RuleGroupVariablesPortSetsDetails>,
}
impl RuleGroupVariables {
    /// <p>A list of IP addresses and address ranges, in CIDR notation.</p>
    pub fn ip_sets(&self) -> std::option::Option<&crate::types::RuleGroupVariablesIpSetsDetails> {
        self.ip_sets.as_ref()
    }
    /// <p>A list of port ranges.</p>
    pub fn port_sets(
        &self,
    ) -> std::option::Option<&crate::types::RuleGroupVariablesPortSetsDetails> {
        self.port_sets.as_ref()
    }
}
impl RuleGroupVariables {
    /// Creates a new builder-style object to manufacture [`RuleGroupVariables`](crate::types::RuleGroupVariables).
    pub fn builder() -> crate::types::builders::RuleGroupVariablesBuilder {
        crate::types::builders::RuleGroupVariablesBuilder::default()
    }
}

/// A builder for [`RuleGroupVariables`](crate::types::RuleGroupVariables).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RuleGroupVariablesBuilder {
    pub(crate) ip_sets: std::option::Option<crate::types::RuleGroupVariablesIpSetsDetails>,
    pub(crate) port_sets: std::option::Option<crate::types::RuleGroupVariablesPortSetsDetails>,
}
impl RuleGroupVariablesBuilder {
    /// <p>A list of IP addresses and address ranges, in CIDR notation.</p>
    pub fn ip_sets(mut self, input: crate::types::RuleGroupVariablesIpSetsDetails) -> Self {
        self.ip_sets = Some(input);
        self
    }
    /// <p>A list of IP addresses and address ranges, in CIDR notation.</p>
    pub fn set_ip_sets(
        mut self,
        input: std::option::Option<crate::types::RuleGroupVariablesIpSetsDetails>,
    ) -> Self {
        self.ip_sets = input;
        self
    }
    /// <p>A list of port ranges.</p>
    pub fn port_sets(mut self, input: crate::types::RuleGroupVariablesPortSetsDetails) -> Self {
        self.port_sets = Some(input);
        self
    }
    /// <p>A list of port ranges.</p>
    pub fn set_port_sets(
        mut self,
        input: std::option::Option<crate::types::RuleGroupVariablesPortSetsDetails>,
    ) -> Self {
        self.port_sets = input;
        self
    }
    /// Consumes the builder and constructs a [`RuleGroupVariables`](crate::types::RuleGroupVariables).
    pub fn build(self) -> crate::types::RuleGroupVariables {
        crate::types::RuleGroupVariables {
            ip_sets: self.ip_sets,
            port_sets: self.port_sets,
        }
    }
}
