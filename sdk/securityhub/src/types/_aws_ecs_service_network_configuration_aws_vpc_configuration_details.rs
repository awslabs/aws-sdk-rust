// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>For tasks that use the <code>awsvpc</code> networking mode, the VPC subnet and security group configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails {
    /// <p>Whether the task's elastic network interface receives a public IP address. The default value is <code>DISABLED</code>.</p>
    /// <p>Valid values: <code>ENABLED</code> | <code>DISABLED</code> </p>
    #[doc(hidden)]
    pub assign_public_ip: std::option::Option<std::string::String>,
    /// <p>The IDs of the security groups associated with the task or service.</p>
    /// <p>You can provide up to five security groups.</p>
    #[doc(hidden)]
    pub security_groups: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The IDs of the subnets associated with the task or service.</p>
    /// <p>You can provide up to 16 subnets.</p>
    #[doc(hidden)]
    pub subnets: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails {
    /// <p>Whether the task's elastic network interface receives a public IP address. The default value is <code>DISABLED</code>.</p>
    /// <p>Valid values: <code>ENABLED</code> | <code>DISABLED</code> </p>
    pub fn assign_public_ip(&self) -> std::option::Option<&str> {
        self.assign_public_ip.as_deref()
    }
    /// <p>The IDs of the security groups associated with the task or service.</p>
    /// <p>You can provide up to five security groups.</p>
    pub fn security_groups(&self) -> std::option::Option<&[std::string::String]> {
        self.security_groups.as_deref()
    }
    /// <p>The IDs of the subnets associated with the task or service.</p>
    /// <p>You can provide up to 16 subnets.</p>
    pub fn subnets(&self) -> std::option::Option<&[std::string::String]> {
        self.subnets.as_deref()
    }
}
impl AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails {
    /// Creates a new builder-style object to manufacture [`AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails`](crate::types::AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails).
    pub fn builder(
    ) -> crate::types::builders::AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetailsBuilder
    {
        crate::types::builders::AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetailsBuilder::default()
    }
}

/// A builder for [`AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails`](crate::types::AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetailsBuilder {
    pub(crate) assign_public_ip: std::option::Option<std::string::String>,
    pub(crate) security_groups: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) subnets: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetailsBuilder {
    /// <p>Whether the task's elastic network interface receives a public IP address. The default value is <code>DISABLED</code>.</p>
    /// <p>Valid values: <code>ENABLED</code> | <code>DISABLED</code> </p>
    pub fn assign_public_ip(mut self, input: impl Into<std::string::String>) -> Self {
        self.assign_public_ip = Some(input.into());
        self
    }
    /// <p>Whether the task's elastic network interface receives a public IP address. The default value is <code>DISABLED</code>.</p>
    /// <p>Valid values: <code>ENABLED</code> | <code>DISABLED</code> </p>
    pub fn set_assign_public_ip(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.assign_public_ip = input;
        self
    }
    /// Appends an item to `security_groups`.
    ///
    /// To override the contents of this collection use [`set_security_groups`](Self::set_security_groups).
    ///
    /// <p>The IDs of the security groups associated with the task or service.</p>
    /// <p>You can provide up to five security groups.</p>
    pub fn security_groups(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.security_groups.unwrap_or_default();
        v.push(input.into());
        self.security_groups = Some(v);
        self
    }
    /// <p>The IDs of the security groups associated with the task or service.</p>
    /// <p>You can provide up to five security groups.</p>
    pub fn set_security_groups(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.security_groups = input;
        self
    }
    /// Appends an item to `subnets`.
    ///
    /// To override the contents of this collection use [`set_subnets`](Self::set_subnets).
    ///
    /// <p>The IDs of the subnets associated with the task or service.</p>
    /// <p>You can provide up to 16 subnets.</p>
    pub fn subnets(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.subnets.unwrap_or_default();
        v.push(input.into());
        self.subnets = Some(v);
        self
    }
    /// <p>The IDs of the subnets associated with the task or service.</p>
    /// <p>You can provide up to 16 subnets.</p>
    pub fn set_subnets(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.subnets = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails`](crate::types::AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails).
    pub fn build(
        self,
    ) -> crate::types::AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails {
        crate::types::AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails {
            assign_public_ip: self.assign_public_ip,
            security_groups: self.security_groups,
            subnets: self.subnets,
        }
    }
}
