// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_aws_amazon_mq_broker_logs_details(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AwsAmazonMqBrokerLogsDetails,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.audit {
        object.key("Audit").boolean(*var_1);
    }
    if let Some(var_2) = &input.general {
        object.key("General").boolean(*var_2);
    }
    if let Some(var_3) = &input.audit_log_group {
        object.key("AuditLogGroup").string(var_3.as_str());
    }
    if let Some(var_4) = &input.general_log_group {
        object.key("GeneralLogGroup").string(var_4.as_str());
    }
    if let Some(var_5) = &input.pending {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Pending").start_object();
        crate::protocol_serde::shape_aws_amazon_mq_broker_logs_pending_details::ser_aws_amazon_mq_broker_logs_pending_details(&mut object_6, var_5)?;
        object_6.finish();
    }
    Ok(())
}

pub(crate) fn de_aws_amazon_mq_broker_logs_details<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::AwsAmazonMqBrokerLogsDetails>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::AwsAmazonMqBrokerLogsDetailsBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "Audit" => {
                                builder = builder.set_audit(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                            }
                            "General" => {
                                builder = builder.set_general(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                            }
                            "AuditLogGroup" => {
                                builder = builder.set_audit_log_group(
                                    ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                        .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                        .transpose()?,
                                );
                            }
                            "GeneralLogGroup" => {
                                builder = builder.set_general_log_group(
                                    ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                        .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                        .transpose()?,
                                );
                            }
                            "Pending" => {
                                builder = builder.set_pending(
                                    crate::protocol_serde::shape_aws_amazon_mq_broker_logs_pending_details::de_aws_amazon_mq_broker_logs_pending_details(tokens)?
                                );
                            }
                            _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
