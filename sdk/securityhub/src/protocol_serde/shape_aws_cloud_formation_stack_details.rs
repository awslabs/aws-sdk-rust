// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_aws_cloud_formation_stack_details(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AwsCloudFormationStackDetails,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.capabilities {
        let mut array_2 = object.key("Capabilities").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.creation_time {
        object.key("CreationTime").string(var_4.as_str());
    }
    if let Some(var_5) = &input.description {
        object.key("Description").string(var_5.as_str());
    }
    if input.disable_rollback {
        object
            .key("DisableRollback")
            .boolean(input.disable_rollback);
    }
    if let Some(var_6) = &input.drift_information {
        #[allow(unused_mut)]
        let mut object_7 = object.key("DriftInformation").start_object();
        crate::protocol_serde::shape_aws_cloud_formation_stack_drift_information_details::ser_aws_cloud_formation_stack_drift_information_details(&mut object_7, var_6)?;
        object_7.finish();
    }
    if input.enable_termination_protection {
        object
            .key("EnableTerminationProtection")
            .boolean(input.enable_termination_protection);
    }
    if let Some(var_8) = &input.last_updated_time {
        object.key("LastUpdatedTime").string(var_8.as_str());
    }
    if let Some(var_9) = &input.notification_arns {
        let mut array_10 = object.key("NotificationArns").start_array();
        for item_11 in var_9 {
            {
                array_10.value().string(item_11.as_str());
            }
        }
        array_10.finish();
    }
    if let Some(var_12) = &input.outputs {
        let mut array_13 = object.key("Outputs").start_array();
        for item_14 in var_12 {
            {
                #[allow(unused_mut)]
                let mut object_15 = array_13.value().start_object();
                crate::protocol_serde::shape_aws_cloud_formation_stack_outputs_details::ser_aws_cloud_formation_stack_outputs_details(&mut object_15, item_14)?;
                object_15.finish();
            }
        }
        array_13.finish();
    }
    if let Some(var_16) = &input.role_arn {
        object.key("RoleArn").string(var_16.as_str());
    }
    if let Some(var_17) = &input.stack_id {
        object.key("StackId").string(var_17.as_str());
    }
    if let Some(var_18) = &input.stack_name {
        object.key("StackName").string(var_18.as_str());
    }
    if let Some(var_19) = &input.stack_status {
        object.key("StackStatus").string(var_19.as_str());
    }
    if let Some(var_20) = &input.stack_status_reason {
        object.key("StackStatusReason").string(var_20.as_str());
    }
    if input.timeout_in_minutes != 0 {
        object.key("TimeoutInMinutes").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.timeout_in_minutes).into()),
        );
    }
    Ok(())
}

pub(crate) fn de_aws_cloud_formation_stack_details<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::AwsCloudFormationStackDetails>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder =
                crate::types::builders::AwsCloudFormationStackDetailsBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "Capabilities" => {
                                builder = builder.set_capabilities(
                                    crate::protocol_serde::shape_non_empty_string_list::de_non_empty_string_list(tokens)?
                                );
                            }
                            "CreationTime" => {
                                builder = builder.set_creation_time(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "Description" => {
                                builder = builder.set_description(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "DisableRollback" => {
                                builder = builder.set_disable_rollback(
                                    aws_smithy_json::deserialize::token::expect_bool_or_null(
                                        tokens.next(),
                                    )?,
                                );
                            }
                            "DriftInformation" => {
                                builder = builder.set_drift_information(
                                    crate::protocol_serde::shape_aws_cloud_formation_stack_drift_information_details::de_aws_cloud_formation_stack_drift_information_details(tokens)?
                                );
                            }
                            "EnableTerminationProtection" => {
                                builder = builder.set_enable_termination_protection(
                                    aws_smithy_json::deserialize::token::expect_bool_or_null(
                                        tokens.next(),
                                    )?,
                                );
                            }
                            "LastUpdatedTime" => {
                                builder = builder.set_last_updated_time(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "NotificationArns" => {
                                builder = builder.set_notification_arns(
                                    crate::protocol_serde::shape_non_empty_string_list::de_non_empty_string_list(tokens)?
                                );
                            }
                            "Outputs" => {
                                builder = builder.set_outputs(
                                    crate::protocol_serde::shape_aws_cloud_formation_stack_outputs_list::de_aws_cloud_formation_stack_outputs_list(tokens)?
                                );
                            }
                            "RoleArn" => {
                                builder = builder.set_role_arn(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "StackId" => {
                                builder = builder.set_stack_id(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "StackName" => {
                                builder = builder.set_stack_name(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "StackStatus" => {
                                builder = builder.set_stack_status(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "StackStatusReason" => {
                                builder = builder.set_stack_status_reason(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "TimeoutInMinutes" => {
                                builder = builder.set_timeout_in_minutes(
                                    aws_smithy_json::deserialize::token::expect_number_or_null(
                                        tokens.next(),
                                    )?
                                    .map(i32::try_from)
                                    .transpose()?,
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
