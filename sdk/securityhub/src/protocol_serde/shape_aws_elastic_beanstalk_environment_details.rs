// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_aws_elastic_beanstalk_environment_details(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AwsElasticBeanstalkEnvironmentDetails,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.application_name {
        object.key("ApplicationName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.cname {
        object.key("Cname").string(var_2.as_str());
    }
    if let Some(var_3) = &input.date_created {
        object.key("DateCreated").string(var_3.as_str());
    }
    if let Some(var_4) = &input.date_updated {
        object.key("DateUpdated").string(var_4.as_str());
    }
    if let Some(var_5) = &input.description {
        object.key("Description").string(var_5.as_str());
    }
    if let Some(var_6) = &input.endpoint_url {
        object.key("EndpointUrl").string(var_6.as_str());
    }
    if let Some(var_7) = &input.environment_arn {
        object.key("EnvironmentArn").string(var_7.as_str());
    }
    if let Some(var_8) = &input.environment_id {
        object.key("EnvironmentId").string(var_8.as_str());
    }
    if let Some(var_9) = &input.environment_links {
        let mut array_10 = object.key("EnvironmentLinks").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_aws_elastic_beanstalk_environment_environment_link::ser_aws_elastic_beanstalk_environment_environment_link(&mut object_12, item_11)?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    if let Some(var_13) = &input.environment_name {
        object.key("EnvironmentName").string(var_13.as_str());
    }
    if let Some(var_14) = &input.option_settings {
        let mut array_15 = object.key("OptionSettings").start_array();
        for item_16 in var_14 {
            {
                #[allow(unused_mut)]
                let mut object_17 = array_15.value().start_object();
                crate::protocol_serde::shape_aws_elastic_beanstalk_environment_option_setting::ser_aws_elastic_beanstalk_environment_option_setting(&mut object_17, item_16)?;
                object_17.finish();
            }
        }
        array_15.finish();
    }
    if let Some(var_18) = &input.platform_arn {
        object.key("PlatformArn").string(var_18.as_str());
    }
    if let Some(var_19) = &input.solution_stack_name {
        object.key("SolutionStackName").string(var_19.as_str());
    }
    if let Some(var_20) = &input.status {
        object.key("Status").string(var_20.as_str());
    }
    if let Some(var_21) = &input.tier {
        #[allow(unused_mut)]
        let mut object_22 = object.key("Tier").start_object();
        crate::protocol_serde::shape_aws_elastic_beanstalk_environment_tier::ser_aws_elastic_beanstalk_environment_tier(&mut object_22, var_21)?;
        object_22.finish();
    }
    if let Some(var_23) = &input.version_label {
        object.key("VersionLabel").string(var_23.as_str());
    }
    Ok(())
}

pub(crate) fn de_aws_elastic_beanstalk_environment_details<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::AwsElasticBeanstalkEnvironmentDetails>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder =
                crate::types::builders::AwsElasticBeanstalkEnvironmentDetailsBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "ApplicationName" => {
                                builder = builder.set_application_name(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "Cname" => {
                                builder = builder.set_cname(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "DateCreated" => {
                                builder = builder.set_date_created(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "DateUpdated" => {
                                builder = builder.set_date_updated(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "Description" => {
                                builder = builder.set_description(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "EndpointUrl" => {
                                builder = builder.set_endpoint_url(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "EnvironmentArn" => {
                                builder = builder.set_environment_arn(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "EnvironmentId" => {
                                builder = builder.set_environment_id(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "EnvironmentLinks" => {
                                builder = builder.set_environment_links(
                                    crate::protocol_serde::shape_aws_elastic_beanstalk_environment_environment_links::de_aws_elastic_beanstalk_environment_environment_links(tokens)?
                                );
                            }
                            "EnvironmentName" => {
                                builder = builder.set_environment_name(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "OptionSettings" => {
                                builder = builder.set_option_settings(
                                    crate::protocol_serde::shape_aws_elastic_beanstalk_environment_option_settings::de_aws_elastic_beanstalk_environment_option_settings(tokens)?
                                );
                            }
                            "PlatformArn" => {
                                builder = builder.set_platform_arn(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "SolutionStackName" => {
                                builder = builder.set_solution_stack_name(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "Status" => {
                                builder = builder.set_status(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "Tier" => {
                                builder = builder.set_tier(
                                    crate::protocol_serde::shape_aws_elastic_beanstalk_environment_tier::de_aws_elastic_beanstalk_environment_tier(tokens)?
                                );
                            }
                            "VersionLabel" => {
                                builder = builder.set_version_label(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
