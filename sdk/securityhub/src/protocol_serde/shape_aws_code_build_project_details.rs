// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_aws_code_build_project_details(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AwsCodeBuildProjectDetails,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.encryption_key {
        object.key("EncryptionKey").string(var_1.as_str());
    }
    if let Some(var_2) = &input.artifacts {
        let mut array_3 = object.key("Artifacts").start_array();
        for item_4 in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::protocol_serde::shape_aws_code_build_project_artifacts_details::ser_aws_code_build_project_artifacts_details(
                    &mut object_5,
                    item_4,
                )?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.environment {
        #[allow(unused_mut)]
        let mut object_7 = object.key("Environment").start_object();
        crate::protocol_serde::shape_aws_code_build_project_environment::ser_aws_code_build_project_environment(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.name {
        object.key("Name").string(var_8.as_str());
    }
    if let Some(var_9) = &input.source {
        #[allow(unused_mut)]
        let mut object_10 = object.key("Source").start_object();
        crate::protocol_serde::shape_aws_code_build_project_source::ser_aws_code_build_project_source(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.service_role {
        object.key("ServiceRole").string(var_11.as_str());
    }
    if let Some(var_12) = &input.logs_config {
        #[allow(unused_mut)]
        let mut object_13 = object.key("LogsConfig").start_object();
        crate::protocol_serde::shape_aws_code_build_project_logs_config_details::ser_aws_code_build_project_logs_config_details(
            &mut object_13,
            var_12,
        )?;
        object_13.finish();
    }
    if let Some(var_14) = &input.vpc_config {
        #[allow(unused_mut)]
        let mut object_15 = object.key("VpcConfig").start_object();
        crate::protocol_serde::shape_aws_code_build_project_vpc_config::ser_aws_code_build_project_vpc_config(&mut object_15, var_14)?;
        object_15.finish();
    }
    if let Some(var_16) = &input.secondary_artifacts {
        let mut array_17 = object.key("SecondaryArtifacts").start_array();
        for item_18 in var_16 {
            {
                #[allow(unused_mut)]
                let mut object_19 = array_17.value().start_object();
                crate::protocol_serde::shape_aws_code_build_project_artifacts_details::ser_aws_code_build_project_artifacts_details(
                    &mut object_19,
                    item_18,
                )?;
                object_19.finish();
            }
        }
        array_17.finish();
    }
    Ok(())
}

pub(crate) fn de_aws_code_build_project_details<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::AwsCodeBuildProjectDetails>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::AwsCodeBuildProjectDetailsBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "EncryptionKey" => {
                            builder = builder.set_encryption_key(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "Artifacts" => {
                            builder = builder.set_artifacts(
                                crate::protocol_serde::shape_aws_code_build_project_artifacts_list::de_aws_code_build_project_artifacts_list(tokens)?,
                            );
                        }
                        "Environment" => {
                            builder = builder.set_environment(
                                crate::protocol_serde::shape_aws_code_build_project_environment::de_aws_code_build_project_environment(tokens)?,
                            );
                        }
                        "Name" => {
                            builder = builder.set_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "Source" => {
                            builder = builder
                                .set_source(crate::protocol_serde::shape_aws_code_build_project_source::de_aws_code_build_project_source(tokens)?);
                        }
                        "ServiceRole" => {
                            builder = builder.set_service_role(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "LogsConfig" => {
                            builder = builder.set_logs_config(
                                    crate::protocol_serde::shape_aws_code_build_project_logs_config_details::de_aws_code_build_project_logs_config_details(tokens)?
                                );
                        }
                        "VpcConfig" => {
                            builder = builder.set_vpc_config(
                                crate::protocol_serde::shape_aws_code_build_project_vpc_config::de_aws_code_build_project_vpc_config(tokens)?,
                            );
                        }
                        "SecondaryArtifacts" => {
                            builder = builder.set_secondary_artifacts(
                                crate::protocol_serde::shape_aws_code_build_project_artifacts_list::de_aws_code_build_project_artifacts_list(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
