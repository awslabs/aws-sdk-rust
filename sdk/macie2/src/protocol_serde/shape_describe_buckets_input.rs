// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_describe_buckets_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::describe_buckets::DescribeBucketsInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.criteria {
        #[allow(unused_mut)]
        let mut object_2 = object.key("criteria").start_object();
        for (key_3, value_4) in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_5 = object_2.key(key_3.as_str()).start_object();
                crate::protocol_serde::shape_bucket_criteria_additional_properties::ser_bucket_criteria_additional_properties(
                    &mut object_5,
                    value_4,
                )?;
                object_5.finish();
            }
        }
        object_2.finish();
    }
    if let Some(var_6) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    if let Some(var_7) = &input.next_token {
        object.key("nextToken").string(var_7.as_str());
    }
    if let Some(var_8) = &input.sort_criteria {
        #[allow(unused_mut)]
        let mut object_9 = object.key("sortCriteria").start_object();
        crate::protocol_serde::shape_bucket_sort_criteria::ser_bucket_sort_criteria(&mut object_9, var_8)?;
        object_9.finish();
    }
    Ok(())
}
