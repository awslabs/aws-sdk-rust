// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_accept_invitation_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AcceptInvitationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_1) = &input.administrator_account_id {
        object.key("administratorAccountId").string(var_1);
    }
    if let Some(var_2) = &input.invitation_id {
        object.key("invitationId").string(var_2);
    }
    if let Some(var_3) = &input.master_account {
        object.key("masterAccount").string(var_3);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_batch_get_custom_data_identifiers_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchGetCustomDataIdentifiersInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_4) = &input.ids {
        let mut array_5 = object.key("ids").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6);
            }
        }
        array_5.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_classification_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateClassificationJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_7) = &input.client_token {
        object.key("clientToken").string(var_7);
    }
    if let Some(var_8) = &input.custom_data_identifier_ids {
        let mut array_9 = object.key("customDataIdentifierIds").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10);
            }
        }
        array_9.finish();
    }
    if let Some(var_11) = &input.description {
        object.key("description").string(var_11);
    }
    if input.initial_run {
        object.key("initialRun").boolean(input.initial_run);
    }
    if let Some(var_12) = &input.job_type {
        object.key("jobType").string(var_12.as_str());
    }
    if let Some(var_13) = &input.managed_data_identifier_ids {
        let mut array_14 = object.key("managedDataIdentifierIds").start_array();
        for item_15 in var_13 {
            {
                array_14.value().string(item_15);
            }
        }
        array_14.finish();
    }
    if let Some(var_16) = &input.managed_data_identifier_selector {
        object
            .key("managedDataIdentifierSelector")
            .string(var_16.as_str());
    }
    if let Some(var_17) = &input.name {
        object.key("name").string(var_17);
    }
    if let Some(var_18) = &input.s3_job_definition {
        let mut object_19 = object.key("s3JobDefinition").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_job_definition(&mut object_19, var_18)?;
        object_19.finish();
    }
    if input.sampling_percentage != 0 {
        object.key("samplingPercentage").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.sampling_percentage).into()),
        );
    }
    if let Some(var_20) = &input.schedule_frequency {
        let mut object_21 = object.key("scheduleFrequency").start_object();
        crate::json_ser::serialize_structure_crate_model_job_schedule_frequency(
            &mut object_21,
            var_20,
        )?;
        object_21.finish();
    }
    if let Some(var_22) = &input.tags {
        let mut object_23 = object.key("tags").start_object();
        for (key_24, value_25) in var_22 {
            {
                object_23.key(key_24).string(value_25);
            }
        }
        object_23.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_custom_data_identifier_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateCustomDataIdentifierInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_26) = &input.client_token {
        object.key("clientToken").string(var_26);
    }
    if let Some(var_27) = &input.description {
        object.key("description").string(var_27);
    }
    if let Some(var_28) = &input.ignore_words {
        let mut array_29 = object.key("ignoreWords").start_array();
        for item_30 in var_28 {
            {
                array_29.value().string(item_30);
            }
        }
        array_29.finish();
    }
    if let Some(var_31) = &input.keywords {
        let mut array_32 = object.key("keywords").start_array();
        for item_33 in var_31 {
            {
                array_32.value().string(item_33);
            }
        }
        array_32.finish();
    }
    if input.maximum_match_distance != 0 {
        object.key("maximumMatchDistance").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.maximum_match_distance).into()),
        );
    }
    if let Some(var_34) = &input.name {
        object.key("name").string(var_34);
    }
    if let Some(var_35) = &input.regex {
        object.key("regex").string(var_35);
    }
    if let Some(var_36) = &input.tags {
        let mut object_37 = object.key("tags").start_object();
        for (key_38, value_39) in var_36 {
            {
                object_37.key(key_38).string(value_39);
            }
        }
        object_37.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_findings_filter_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateFindingsFilterInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_40) = &input.action {
        object.key("action").string(var_40.as_str());
    }
    if let Some(var_41) = &input.client_token {
        object.key("clientToken").string(var_41);
    }
    if let Some(var_42) = &input.description {
        object.key("description").string(var_42);
    }
    if let Some(var_43) = &input.finding_criteria {
        let mut object_44 = object.key("findingCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_finding_criteria(&mut object_44, var_43)?;
        object_44.finish();
    }
    if let Some(var_45) = &input.name {
        object.key("name").string(var_45);
    }
    if input.position != 0 {
        object.key("position").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.position).into()),
        );
    }
    if let Some(var_46) = &input.tags {
        let mut object_47 = object.key("tags").start_object();
        for (key_48, value_49) in var_46 {
            {
                object_47.key(key_48).string(value_49);
            }
        }
        object_47.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_invitations_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateInvitationsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_50) = &input.account_ids {
        let mut array_51 = object.key("accountIds").start_array();
        for item_52 in var_50 {
            {
                array_51.value().string(item_52);
            }
        }
        array_51.finish();
    }
    if input.disable_email_notification {
        object
            .key("disableEmailNotification")
            .boolean(input.disable_email_notification);
    }
    if let Some(var_53) = &input.message {
        object.key("message").string(var_53);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_member_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateMemberInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_54) = &input.account {
        let mut object_55 = object.key("account").start_object();
        crate::json_ser::serialize_structure_crate_model_account_detail(&mut object_55, var_54)?;
        object_55.finish();
    }
    if let Some(var_56) = &input.tags {
        let mut object_57 = object.key("tags").start_object();
        for (key_58, value_59) in var_56 {
            {
                object_57.key(key_58).string(value_59);
            }
        }
        object_57.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_sample_findings_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateSampleFindingsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_60) = &input.finding_types {
        let mut array_61 = object.key("findingTypes").start_array();
        for item_62 in var_60 {
            {
                array_61.value().string(item_62.as_str());
            }
        }
        array_61.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_decline_invitations_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeclineInvitationsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_63) = &input.account_ids {
        let mut array_64 = object.key("accountIds").start_array();
        for item_65 in var_63 {
            {
                array_64.value().string(item_65);
            }
        }
        array_64.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_delete_invitations_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteInvitationsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_66) = &input.account_ids {
        let mut array_67 = object.key("accountIds").start_array();
        for item_68 in var_66 {
            {
                array_67.value().string(item_68);
            }
        }
        array_67.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_describe_buckets_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeBucketsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_69) = &input.criteria {
        let mut object_70 = object.key("criteria").start_object();
        for (key_71, value_72) in var_69 {
            {
                let mut object_73 = object_70.key(key_71).start_object();
                crate::json_ser::serialize_structure_crate_model_bucket_criteria_additional_properties(&mut object_73, value_72)?;
                object_73.finish();
            }
        }
        object_70.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_74) = &input.next_token {
        object.key("nextToken").string(var_74);
    }
    if let Some(var_75) = &input.sort_criteria {
        let mut object_76 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_bucket_sort_criteria(
            &mut object_76,
            var_75,
        )?;
        object_76.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_enable_macie_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::EnableMacieInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_77) = &input.client_token {
        object.key("clientToken").string(var_77);
    }
    if let Some(var_78) = &input.finding_publishing_frequency {
        object
            .key("findingPublishingFrequency")
            .string(var_78.as_str());
    }
    if let Some(var_79) = &input.status {
        object.key("status").string(var_79.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_enable_organization_admin_account_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::EnableOrganizationAdminAccountInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_80) = &input.admin_account_id {
        object.key("adminAccountId").string(var_80);
    }
    if let Some(var_81) = &input.client_token {
        object.key("clientToken").string(var_81);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_bucket_statistics_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetBucketStatisticsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_82) = &input.account_id {
        object.key("accountId").string(var_82);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_findings_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetFindingsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_83) = &input.finding_ids {
        let mut array_84 = object.key("findingIds").start_array();
        for item_85 in var_83 {
            {
                array_84.value().string(item_85);
            }
        }
        array_84.finish();
    }
    if let Some(var_86) = &input.sort_criteria {
        let mut object_87 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_sort_criteria(&mut object_87, var_86)?;
        object_87.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_finding_statistics_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetFindingStatisticsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_88) = &input.finding_criteria {
        let mut object_89 = object.key("findingCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_finding_criteria(&mut object_89, var_88)?;
        object_89.finish();
    }
    if let Some(var_90) = &input.group_by {
        object.key("groupBy").string(var_90.as_str());
    }
    if input.size != 0 {
        object.key("size").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.size).into()),
        );
    }
    if let Some(var_91) = &input.sort_criteria {
        let mut object_92 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_finding_statistics_sort_criteria(
            &mut object_92,
            var_91,
        )?;
        object_92.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_usage_statistics_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetUsageStatisticsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_93) = &input.filter_by {
        let mut array_94 = object.key("filterBy").start_array();
        for item_95 in var_93 {
            {
                let mut object_96 = array_94.value().start_object();
                crate::json_ser::serialize_structure_crate_model_usage_statistics_filter(
                    &mut object_96,
                    item_95,
                )?;
                object_96.finish();
            }
        }
        array_94.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_97) = &input.next_token {
        object.key("nextToken").string(var_97);
    }
    if let Some(var_98) = &input.sort_by {
        let mut object_99 = object.key("sortBy").start_object();
        crate::json_ser::serialize_structure_crate_model_usage_statistics_sort_by(
            &mut object_99,
            var_98,
        )?;
        object_99.finish();
    }
    if let Some(var_100) = &input.time_range {
        object.key("timeRange").string(var_100.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_classification_jobs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListClassificationJobsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_101) = &input.filter_criteria {
        let mut object_102 = object.key("filterCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_list_jobs_filter_criteria(
            &mut object_102,
            var_101,
        )?;
        object_102.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_103) = &input.next_token {
        object.key("nextToken").string(var_103);
    }
    if let Some(var_104) = &input.sort_criteria {
        let mut object_105 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_list_jobs_sort_criteria(
            &mut object_105,
            var_104,
        )?;
        object_105.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_custom_data_identifiers_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListCustomDataIdentifiersInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_106) = &input.next_token {
        object.key("nextToken").string(var_106);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_findings_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListFindingsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_107) = &input.finding_criteria {
        let mut object_108 = object.key("findingCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_finding_criteria(
            &mut object_108,
            var_107,
        )?;
        object_108.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_109) = &input.next_token {
        object.key("nextToken").string(var_109);
    }
    if let Some(var_110) = &input.sort_criteria {
        let mut object_111 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_sort_criteria(&mut object_111, var_110)?;
        object_111.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_managed_data_identifiers_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListManagedDataIdentifiersInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_112) = &input.next_token {
        object.key("nextToken").string(var_112);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_put_classification_export_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutClassificationExportConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_113) = &input.configuration {
        let mut object_114 = object.key("configuration").start_object();
        crate::json_ser::serialize_structure_crate_model_classification_export_configuration(
            &mut object_114,
            var_113,
        )?;
        object_114.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_put_findings_publication_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutFindingsPublicationConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_115) = &input.client_token {
        object.key("clientToken").string(var_115);
    }
    if let Some(var_116) = &input.security_hub_configuration {
        let mut object_117 = object.key("securityHubConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_security_hub_configuration(
            &mut object_117,
            var_116,
        )?;
        object_117.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_search_resources_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SearchResourcesInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_118) = &input.bucket_criteria {
        let mut object_119 = object.key("bucketCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_search_resources_bucket_criteria(
            &mut object_119,
            var_118,
        )?;
        object_119.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_120) = &input.next_token {
        object.key("nextToken").string(var_120);
    }
    if let Some(var_121) = &input.sort_criteria {
        let mut object_122 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_search_resources_sort_criteria(
            &mut object_122,
            var_121,
        )?;
        object_122.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_123) = &input.tags {
        let mut object_124 = object.key("tags").start_object();
        for (key_125, value_126) in var_123 {
            {
                object_124.key(key_125).string(value_126);
            }
        }
        object_124.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_test_custom_data_identifier_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TestCustomDataIdentifierInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_127) = &input.ignore_words {
        let mut array_128 = object.key("ignoreWords").start_array();
        for item_129 in var_127 {
            {
                array_128.value().string(item_129);
            }
        }
        array_128.finish();
    }
    if let Some(var_130) = &input.keywords {
        let mut array_131 = object.key("keywords").start_array();
        for item_132 in var_130 {
            {
                array_131.value().string(item_132);
            }
        }
        array_131.finish();
    }
    if input.maximum_match_distance != 0 {
        object.key("maximumMatchDistance").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.maximum_match_distance).into()),
        );
    }
    if let Some(var_133) = &input.regex {
        object.key("regex").string(var_133);
    }
    if let Some(var_134) = &input.sample_text {
        object.key("sampleText").string(var_134);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_classification_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateClassificationJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_135) = &input.job_status {
        object.key("jobStatus").string(var_135.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_findings_filter_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateFindingsFilterInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_136) = &input.action {
        object.key("action").string(var_136.as_str());
    }
    if let Some(var_137) = &input.client_token {
        object.key("clientToken").string(var_137);
    }
    if let Some(var_138) = &input.description {
        object.key("description").string(var_138);
    }
    if let Some(var_139) = &input.finding_criteria {
        let mut object_140 = object.key("findingCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_finding_criteria(
            &mut object_140,
            var_139,
        )?;
        object_140.finish();
    }
    if let Some(var_141) = &input.name {
        object.key("name").string(var_141);
    }
    if input.position != 0 {
        object.key("position").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.position).into()),
        );
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_macie_session_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateMacieSessionInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_142) = &input.finding_publishing_frequency {
        object
            .key("findingPublishingFrequency")
            .string(var_142.as_str());
    }
    if let Some(var_143) = &input.status {
        object.key("status").string(var_143.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_member_session_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateMemberSessionInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_144) = &input.status {
        object.key("status").string(var_144.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_organization_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateOrganizationConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    {
        object.key("autoEnable").boolean(input.auto_enable);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_s3_job_definition(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3JobDefinition,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_145) = &input.bucket_definitions {
        let mut array_146 = object.key("bucketDefinitions").start_array();
        for item_147 in var_145 {
            {
                let mut object_148 = array_146.value().start_object();
                crate::json_ser::serialize_structure_crate_model_s3_bucket_definition_for_job(
                    &mut object_148,
                    item_147,
                )?;
                object_148.finish();
            }
        }
        array_146.finish();
    }
    if let Some(var_149) = &input.scoping {
        let mut object_150 = object.key("scoping").start_object();
        crate::json_ser::serialize_structure_crate_model_scoping(&mut object_150, var_149)?;
        object_150.finish();
    }
    if let Some(var_151) = &input.bucket_criteria {
        let mut object_152 = object.key("bucketCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_bucket_criteria_for_job(
            &mut object_152,
            var_151,
        )?;
        object_152.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_job_schedule_frequency(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::JobScheduleFrequency,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_153) = &input.daily_schedule {
        let mut object_154 = object.key("dailySchedule").start_object();
        crate::json_ser::serialize_structure_crate_model_daily_schedule(&mut object_154, var_153)?;
        object_154.finish();
    }
    if let Some(var_155) = &input.monthly_schedule {
        let mut object_156 = object.key("monthlySchedule").start_object();
        crate::json_ser::serialize_structure_crate_model_monthly_schedule(
            &mut object_156,
            var_155,
        )?;
        object_156.finish();
    }
    if let Some(var_157) = &input.weekly_schedule {
        let mut object_158 = object.key("weeklySchedule").start_object();
        crate::json_ser::serialize_structure_crate_model_weekly_schedule(&mut object_158, var_157)?;
        object_158.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_finding_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::FindingCriteria,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_159) = &input.criterion {
        let mut object_160 = object.key("criterion").start_object();
        for (key_161, value_162) in var_159 {
            {
                let mut object_163 = object_160.key(key_161).start_object();
                crate::json_ser::serialize_structure_crate_model_criterion_additional_properties(
                    &mut object_163,
                    value_162,
                )?;
                object_163.finish();
            }
        }
        object_160.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_account_detail(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AccountDetail,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_164) = &input.account_id {
        object.key("accountId").string(var_164);
    }
    if let Some(var_165) = &input.email {
        object.key("email").string(var_165);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_bucket_criteria_additional_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::BucketCriteriaAdditionalProperties,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_166) = &input.eq {
        let mut array_167 = object.key("eq").start_array();
        for item_168 in var_166 {
            {
                array_167.value().string(item_168);
            }
        }
        array_167.finish();
    }
    if input.gt != 0 {
        object.key("gt").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.gt).into()),
        );
    }
    if input.gte != 0 {
        object.key("gte").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.gte).into()),
        );
    }
    if input.lt != 0 {
        object.key("lt").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.lt).into()),
        );
    }
    if input.lte != 0 {
        object.key("lte").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.lte).into()),
        );
    }
    if let Some(var_169) = &input.neq {
        let mut array_170 = object.key("neq").start_array();
        for item_171 in var_169 {
            {
                array_170.value().string(item_171);
            }
        }
        array_170.finish();
    }
    if let Some(var_172) = &input.prefix {
        object.key("prefix").string(var_172);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_bucket_sort_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::BucketSortCriteria,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_173) = &input.attribute_name {
        object.key("attributeName").string(var_173);
    }
    if let Some(var_174) = &input.order_by {
        object.key("orderBy").string(var_174.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_sort_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SortCriteria,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_175) = &input.attribute_name {
        object.key("attributeName").string(var_175);
    }
    if let Some(var_176) = &input.order_by {
        object.key("orderBy").string(var_176.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_finding_statistics_sort_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::FindingStatisticsSortCriteria,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_177) = &input.attribute_name {
        object.key("attributeName").string(var_177.as_str());
    }
    if let Some(var_178) = &input.order_by {
        object.key("orderBy").string(var_178.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_usage_statistics_filter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UsageStatisticsFilter,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_179) = &input.comparator {
        object.key("comparator").string(var_179.as_str());
    }
    if let Some(var_180) = &input.key {
        object.key("key").string(var_180.as_str());
    }
    if let Some(var_181) = &input.values {
        let mut array_182 = object.key("values").start_array();
        for item_183 in var_181 {
            {
                array_182.value().string(item_183);
            }
        }
        array_182.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_usage_statistics_sort_by(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UsageStatisticsSortBy,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_184) = &input.key {
        object.key("key").string(var_184.as_str());
    }
    if let Some(var_185) = &input.order_by {
        object.key("orderBy").string(var_185.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_list_jobs_filter_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ListJobsFilterCriteria,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_186) = &input.excludes {
        let mut array_187 = object.key("excludes").start_array();
        for item_188 in var_186 {
            {
                let mut object_189 = array_187.value().start_object();
                crate::json_ser::serialize_structure_crate_model_list_jobs_filter_term(
                    &mut object_189,
                    item_188,
                )?;
                object_189.finish();
            }
        }
        array_187.finish();
    }
    if let Some(var_190) = &input.includes {
        let mut array_191 = object.key("includes").start_array();
        for item_192 in var_190 {
            {
                let mut object_193 = array_191.value().start_object();
                crate::json_ser::serialize_structure_crate_model_list_jobs_filter_term(
                    &mut object_193,
                    item_192,
                )?;
                object_193.finish();
            }
        }
        array_191.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_list_jobs_sort_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ListJobsSortCriteria,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_194) = &input.attribute_name {
        object.key("attributeName").string(var_194.as_str());
    }
    if let Some(var_195) = &input.order_by {
        object.key("orderBy").string(var_195.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_classification_export_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ClassificationExportConfiguration,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_196) = &input.s3_destination {
        let mut object_197 = object.key("s3Destination").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_destination(&mut object_197, var_196)?;
        object_197.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_security_hub_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SecurityHubConfiguration,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    {
        object
            .key("publishClassificationFindings")
            .boolean(input.publish_classification_findings);
    }
    {
        object
            .key("publishPolicyFindings")
            .boolean(input.publish_policy_findings);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_search_resources_bucket_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesBucketCriteria,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_198) = &input.excludes {
        let mut object_199 = object.key("excludes").start_object();
        crate::json_ser::serialize_structure_crate_model_search_resources_criteria_block(
            &mut object_199,
            var_198,
        )?;
        object_199.finish();
    }
    if let Some(var_200) = &input.includes {
        let mut object_201 = object.key("includes").start_object();
        crate::json_ser::serialize_structure_crate_model_search_resources_criteria_block(
            &mut object_201,
            var_200,
        )?;
        object_201.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_search_resources_sort_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesSortCriteria,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_202) = &input.attribute_name {
        object.key("attributeName").string(var_202.as_str());
    }
    if let Some(var_203) = &input.order_by {
        object.key("orderBy").string(var_203.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_s3_bucket_definition_for_job(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3BucketDefinitionForJob,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_204) = &input.account_id {
        object.key("accountId").string(var_204);
    }
    if let Some(var_205) = &input.buckets {
        let mut array_206 = object.key("buckets").start_array();
        for item_207 in var_205 {
            {
                array_206.value().string(item_207);
            }
        }
        array_206.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_scoping(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Scoping,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_208) = &input.excludes {
        let mut object_209 = object.key("excludes").start_object();
        crate::json_ser::serialize_structure_crate_model_job_scoping_block(
            &mut object_209,
            var_208,
        )?;
        object_209.finish();
    }
    if let Some(var_210) = &input.includes {
        let mut object_211 = object.key("includes").start_object();
        crate::json_ser::serialize_structure_crate_model_job_scoping_block(
            &mut object_211,
            var_210,
        )?;
        object_211.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_s3_bucket_criteria_for_job(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3BucketCriteriaForJob,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_212) = &input.excludes {
        let mut object_213 = object.key("excludes").start_object();
        crate::json_ser::serialize_structure_crate_model_criteria_block_for_job(
            &mut object_213,
            var_212,
        )?;
        object_213.finish();
    }
    if let Some(var_214) = &input.includes {
        let mut object_215 = object.key("includes").start_object();
        crate::json_ser::serialize_structure_crate_model_criteria_block_for_job(
            &mut object_215,
            var_214,
        )?;
        object_215.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_daily_schedule(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DailySchedule,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    let (_, _) = (object, input);
    Ok(())
}

pub fn serialize_structure_crate_model_monthly_schedule(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MonthlySchedule,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if input.day_of_month != 0 {
        object.key("dayOfMonth").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.day_of_month).into()),
        );
    }
    Ok(())
}

pub fn serialize_structure_crate_model_weekly_schedule(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::WeeklySchedule,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_216) = &input.day_of_week {
        object.key("dayOfWeek").string(var_216.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_criterion_additional_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CriterionAdditionalProperties,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_217) = &input.eq {
        let mut array_218 = object.key("eq").start_array();
        for item_219 in var_217 {
            {
                array_218.value().string(item_219);
            }
        }
        array_218.finish();
    }
    if let Some(var_220) = &input.eq_exact_match {
        let mut array_221 = object.key("eqExactMatch").start_array();
        for item_222 in var_220 {
            {
                array_221.value().string(item_222);
            }
        }
        array_221.finish();
    }
    if input.gt != 0 {
        object.key("gt").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.gt).into()),
        );
    }
    if input.gte != 0 {
        object.key("gte").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.gte).into()),
        );
    }
    if input.lt != 0 {
        object.key("lt").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.lt).into()),
        );
    }
    if input.lte != 0 {
        object.key("lte").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.lte).into()),
        );
    }
    if let Some(var_223) = &input.neq {
        let mut array_224 = object.key("neq").start_array();
        for item_225 in var_223 {
            {
                array_224.value().string(item_225);
            }
        }
        array_224.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_list_jobs_filter_term(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ListJobsFilterTerm,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_226) = &input.comparator {
        object.key("comparator").string(var_226.as_str());
    }
    if let Some(var_227) = &input.key {
        object.key("key").string(var_227.as_str());
    }
    if let Some(var_228) = &input.values {
        let mut array_229 = object.key("values").start_array();
        for item_230 in var_228 {
            {
                array_229.value().string(item_230);
            }
        }
        array_229.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_s3_destination(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3Destination,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_231) = &input.bucket_name {
        object.key("bucketName").string(var_231);
    }
    if let Some(var_232) = &input.key_prefix {
        object.key("keyPrefix").string(var_232);
    }
    if let Some(var_233) = &input.kms_key_arn {
        object.key("kmsKeyArn").string(var_233);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_search_resources_criteria_block(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesCriteriaBlock,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_234) = &input.and {
        let mut array_235 = object.key("and").start_array();
        for item_236 in var_234 {
            {
                let mut object_237 = array_235.value().start_object();
                crate::json_ser::serialize_structure_crate_model_search_resources_criteria(
                    &mut object_237,
                    item_236,
                )?;
                object_237.finish();
            }
        }
        array_235.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_job_scoping_block(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::JobScopingBlock,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_238) = &input.and {
        let mut array_239 = object.key("and").start_array();
        for item_240 in var_238 {
            {
                let mut object_241 = array_239.value().start_object();
                crate::json_ser::serialize_structure_crate_model_job_scope_term(
                    &mut object_241,
                    item_240,
                )?;
                object_241.finish();
            }
        }
        array_239.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_criteria_block_for_job(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CriteriaBlockForJob,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_242) = &input.and {
        let mut array_243 = object.key("and").start_array();
        for item_244 in var_242 {
            {
                let mut object_245 = array_243.value().start_object();
                crate::json_ser::serialize_structure_crate_model_criteria_for_job(
                    &mut object_245,
                    item_244,
                )?;
                object_245.finish();
            }
        }
        array_243.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_search_resources_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesCriteria,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_246) = &input.simple_criterion {
        let mut object_247 = object.key("simpleCriterion").start_object();
        crate::json_ser::serialize_structure_crate_model_search_resources_simple_criterion(
            &mut object_247,
            var_246,
        )?;
        object_247.finish();
    }
    if let Some(var_248) = &input.tag_criterion {
        let mut object_249 = object.key("tagCriterion").start_object();
        crate::json_ser::serialize_structure_crate_model_search_resources_tag_criterion(
            &mut object_249,
            var_248,
        )?;
        object_249.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_job_scope_term(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::JobScopeTerm,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_250) = &input.simple_scope_term {
        let mut object_251 = object.key("simpleScopeTerm").start_object();
        crate::json_ser::serialize_structure_crate_model_simple_scope_term(
            &mut object_251,
            var_250,
        )?;
        object_251.finish();
    }
    if let Some(var_252) = &input.tag_scope_term {
        let mut object_253 = object.key("tagScopeTerm").start_object();
        crate::json_ser::serialize_structure_crate_model_tag_scope_term(&mut object_253, var_252)?;
        object_253.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_criteria_for_job(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CriteriaForJob,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_254) = &input.simple_criterion {
        let mut object_255 = object.key("simpleCriterion").start_object();
        crate::json_ser::serialize_structure_crate_model_simple_criterion_for_job(
            &mut object_255,
            var_254,
        )?;
        object_255.finish();
    }
    if let Some(var_256) = &input.tag_criterion {
        let mut object_257 = object.key("tagCriterion").start_object();
        crate::json_ser::serialize_structure_crate_model_tag_criterion_for_job(
            &mut object_257,
            var_256,
        )?;
        object_257.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_search_resources_simple_criterion(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesSimpleCriterion,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_258) = &input.comparator {
        object.key("comparator").string(var_258.as_str());
    }
    if let Some(var_259) = &input.key {
        object.key("key").string(var_259.as_str());
    }
    if let Some(var_260) = &input.values {
        let mut array_261 = object.key("values").start_array();
        for item_262 in var_260 {
            {
                array_261.value().string(item_262);
            }
        }
        array_261.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_search_resources_tag_criterion(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesTagCriterion,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_263) = &input.comparator {
        object.key("comparator").string(var_263.as_str());
    }
    if let Some(var_264) = &input.tag_values {
        let mut array_265 = object.key("tagValues").start_array();
        for item_266 in var_264 {
            {
                let mut object_267 = array_265.value().start_object();
                crate::json_ser::serialize_structure_crate_model_search_resources_tag_criterion_pair(&mut object_267, item_266)?;
                object_267.finish();
            }
        }
        array_265.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_simple_scope_term(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SimpleScopeTerm,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_268) = &input.comparator {
        object.key("comparator").string(var_268.as_str());
    }
    if let Some(var_269) = &input.key {
        object.key("key").string(var_269.as_str());
    }
    if let Some(var_270) = &input.values {
        let mut array_271 = object.key("values").start_array();
        for item_272 in var_270 {
            {
                array_271.value().string(item_272);
            }
        }
        array_271.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_tag_scope_term(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TagScopeTerm,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_273) = &input.comparator {
        object.key("comparator").string(var_273.as_str());
    }
    if let Some(var_274) = &input.key {
        object.key("key").string(var_274);
    }
    if let Some(var_275) = &input.tag_values {
        let mut array_276 = object.key("tagValues").start_array();
        for item_277 in var_275 {
            {
                let mut object_278 = array_276.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag_value_pair(
                    &mut object_278,
                    item_277,
                )?;
                object_278.finish();
            }
        }
        array_276.finish();
    }
    if let Some(var_279) = &input.target {
        object.key("target").string(var_279.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_simple_criterion_for_job(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SimpleCriterionForJob,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_280) = &input.comparator {
        object.key("comparator").string(var_280.as_str());
    }
    if let Some(var_281) = &input.key {
        object.key("key").string(var_281.as_str());
    }
    if let Some(var_282) = &input.values {
        let mut array_283 = object.key("values").start_array();
        for item_284 in var_282 {
            {
                array_283.value().string(item_284);
            }
        }
        array_283.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_tag_criterion_for_job(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TagCriterionForJob,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_285) = &input.comparator {
        object.key("comparator").string(var_285.as_str());
    }
    if let Some(var_286) = &input.tag_values {
        let mut array_287 = object.key("tagValues").start_array();
        for item_288 in var_286 {
            {
                let mut object_289 = array_287.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag_criterion_pair_for_job(
                    &mut object_289,
                    item_288,
                )?;
                object_289.finish();
            }
        }
        array_287.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_model_search_resources_tag_criterion_pair(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesTagCriterionPair,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_290) = &input.key {
        object.key("key").string(var_290);
    }
    if let Some(var_291) = &input.value {
        object.key("value").string(var_291);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_tag_value_pair(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TagValuePair,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_292) = &input.key {
        object.key("key").string(var_292);
    }
    if let Some(var_293) = &input.value {
        object.key("value").string(var_293);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_tag_criterion_pair_for_job(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TagCriterionPairForJob,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_294) = &input.key {
        object.key("key").string(var_294);
    }
    if let Some(var_295) = &input.value {
        object.key("value").string(var_295);
    }
    Ok(())
}
