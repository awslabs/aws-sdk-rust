// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_accept_invitation_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AcceptInvitationInput,
) {
    if let Some(var_1) = &input.administrator_account_id {
        object.key("administratorAccountId").string(var_1);
    }
    if let Some(var_2) = &input.invitation_id {
        object.key("invitationId").string(var_2);
    }
    if let Some(var_3) = &input.master_account {
        object.key("masterAccount").string(var_3);
    }
}

pub fn serialize_structure_batch_get_custom_data_identifiers_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchGetCustomDataIdentifiersInput,
) {
    if let Some(var_4) = &input.ids {
        let mut array_5 = object.key("ids").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6);
            }
        }
        array_5.finish();
    }
}

pub fn serialize_structure_create_classification_job_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateClassificationJobInput,
) {
    if let Some(var_7) = &input.client_token {
        object.key("clientToken").string(var_7);
    }
    if let Some(var_8) = &input.custom_data_identifier_ids {
        let mut array_9 = object.key("customDataIdentifierIds").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10);
            }
        }
        array_9.finish();
    }
    if let Some(var_11) = &input.description {
        object.key("description").string(var_11);
    }
    if input.initial_run {
        object.key("initialRun").boolean(input.initial_run);
    }
    if let Some(var_12) = &input.job_type {
        object.key("jobType").string(var_12.as_str());
    }
    if let Some(var_13) = &input.name {
        object.key("name").string(var_13);
    }
    if let Some(var_14) = &input.s3_job_definition {
        let mut object_15 = object.key("s3JobDefinition").start_object();
        crate::json_ser::serialize_structure_s3_job_definition(&mut object_15, var_14);
        object_15.finish();
    }
    if input.sampling_percentage != 0 {
        object.key("samplingPercentage").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.sampling_percentage).into()),
        );
    }
    if let Some(var_16) = &input.schedule_frequency {
        let mut object_17 = object.key("scheduleFrequency").start_object();
        crate::json_ser::serialize_structure_job_schedule_frequency(&mut object_17, var_16);
        object_17.finish();
    }
    if let Some(var_18) = &input.tags {
        let mut object_19 = object.key("tags").start_object();
        for (key_20, value_21) in var_18 {
            {
                object_19.key(key_20).string(value_21);
            }
        }
        object_19.finish();
    }
}

pub fn serialize_structure_create_custom_data_identifier_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateCustomDataIdentifierInput,
) {
    if let Some(var_22) = &input.client_token {
        object.key("clientToken").string(var_22);
    }
    if let Some(var_23) = &input.description {
        object.key("description").string(var_23);
    }
    if let Some(var_24) = &input.ignore_words {
        let mut array_25 = object.key("ignoreWords").start_array();
        for item_26 in var_24 {
            {
                array_25.value().string(item_26);
            }
        }
        array_25.finish();
    }
    if let Some(var_27) = &input.keywords {
        let mut array_28 = object.key("keywords").start_array();
        for item_29 in var_27 {
            {
                array_28.value().string(item_29);
            }
        }
        array_28.finish();
    }
    if input.maximum_match_distance != 0 {
        object.key("maximumMatchDistance").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.maximum_match_distance).into()),
        );
    }
    if let Some(var_30) = &input.name {
        object.key("name").string(var_30);
    }
    if let Some(var_31) = &input.regex {
        object.key("regex").string(var_31);
    }
    if let Some(var_32) = &input.tags {
        let mut object_33 = object.key("tags").start_object();
        for (key_34, value_35) in var_32 {
            {
                object_33.key(key_34).string(value_35);
            }
        }
        object_33.finish();
    }
}

pub fn serialize_structure_create_findings_filter_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateFindingsFilterInput,
) {
    if let Some(var_36) = &input.action {
        object.key("action").string(var_36.as_str());
    }
    if let Some(var_37) = &input.client_token {
        object.key("clientToken").string(var_37);
    }
    if let Some(var_38) = &input.description {
        object.key("description").string(var_38);
    }
    if let Some(var_39) = &input.finding_criteria {
        let mut object_40 = object.key("findingCriteria").start_object();
        crate::json_ser::serialize_structure_finding_criteria(&mut object_40, var_39);
        object_40.finish();
    }
    if let Some(var_41) = &input.name {
        object.key("name").string(var_41);
    }
    if input.position != 0 {
        object.key("position").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.position).into()),
        );
    }
    if let Some(var_42) = &input.tags {
        let mut object_43 = object.key("tags").start_object();
        for (key_44, value_45) in var_42 {
            {
                object_43.key(key_44).string(value_45);
            }
        }
        object_43.finish();
    }
}

pub fn serialize_structure_create_invitations_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateInvitationsInput,
) {
    if let Some(var_46) = &input.account_ids {
        let mut array_47 = object.key("accountIds").start_array();
        for item_48 in var_46 {
            {
                array_47.value().string(item_48);
            }
        }
        array_47.finish();
    }
    if input.disable_email_notification {
        object
            .key("disableEmailNotification")
            .boolean(input.disable_email_notification);
    }
    if let Some(var_49) = &input.message {
        object.key("message").string(var_49);
    }
}

pub fn serialize_structure_create_member_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateMemberInput,
) {
    if let Some(var_50) = &input.account {
        let mut object_51 = object.key("account").start_object();
        crate::json_ser::serialize_structure_account_detail(&mut object_51, var_50);
        object_51.finish();
    }
    if let Some(var_52) = &input.tags {
        let mut object_53 = object.key("tags").start_object();
        for (key_54, value_55) in var_52 {
            {
                object_53.key(key_54).string(value_55);
            }
        }
        object_53.finish();
    }
}

pub fn serialize_structure_create_sample_findings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateSampleFindingsInput,
) {
    if let Some(var_56) = &input.finding_types {
        let mut array_57 = object.key("findingTypes").start_array();
        for item_58 in var_56 {
            {
                array_57.value().string(item_58.as_str());
            }
        }
        array_57.finish();
    }
}

pub fn serialize_structure_decline_invitations_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeclineInvitationsInput,
) {
    if let Some(var_59) = &input.account_ids {
        let mut array_60 = object.key("accountIds").start_array();
        for item_61 in var_59 {
            {
                array_60.value().string(item_61);
            }
        }
        array_60.finish();
    }
}

pub fn serialize_structure_delete_invitations_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteInvitationsInput,
) {
    if let Some(var_62) = &input.account_ids {
        let mut array_63 = object.key("accountIds").start_array();
        for item_64 in var_62 {
            {
                array_63.value().string(item_64);
            }
        }
        array_63.finish();
    }
}

pub fn serialize_structure_describe_buckets_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeBucketsInput,
) {
    if let Some(var_65) = &input.criteria {
        let mut object_66 = object.key("criteria").start_object();
        for (key_67, value_68) in var_65 {
            {
                let mut object_69 = object_66.key(key_67).start_object();
                crate::json_ser::serialize_structure_bucket_criteria_additional_properties(
                    &mut object_69,
                    value_68,
                );
                object_69.finish();
            }
        }
        object_66.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_70) = &input.next_token {
        object.key("nextToken").string(var_70);
    }
    if let Some(var_71) = &input.sort_criteria {
        let mut object_72 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_bucket_sort_criteria(&mut object_72, var_71);
        object_72.finish();
    }
}

pub fn serialize_structure_enable_macie_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::EnableMacieInput,
) {
    if let Some(var_73) = &input.client_token {
        object.key("clientToken").string(var_73);
    }
    if let Some(var_74) = &input.finding_publishing_frequency {
        object
            .key("findingPublishingFrequency")
            .string(var_74.as_str());
    }
    if let Some(var_75) = &input.status {
        object.key("status").string(var_75.as_str());
    }
}

pub fn serialize_structure_enable_organization_admin_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::EnableOrganizationAdminAccountInput,
) {
    if let Some(var_76) = &input.admin_account_id {
        object.key("adminAccountId").string(var_76);
    }
    if let Some(var_77) = &input.client_token {
        object.key("clientToken").string(var_77);
    }
}

pub fn serialize_structure_get_bucket_statistics_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetBucketStatisticsInput,
) {
    if let Some(var_78) = &input.account_id {
        object.key("accountId").string(var_78);
    }
}

pub fn serialize_structure_get_findings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetFindingsInput,
) {
    if let Some(var_79) = &input.finding_ids {
        let mut array_80 = object.key("findingIds").start_array();
        for item_81 in var_79 {
            {
                array_80.value().string(item_81);
            }
        }
        array_80.finish();
    }
    if let Some(var_82) = &input.sort_criteria {
        let mut object_83 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_sort_criteria(&mut object_83, var_82);
        object_83.finish();
    }
}

pub fn serialize_structure_get_finding_statistics_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetFindingStatisticsInput,
) {
    if let Some(var_84) = &input.finding_criteria {
        let mut object_85 = object.key("findingCriteria").start_object();
        crate::json_ser::serialize_structure_finding_criteria(&mut object_85, var_84);
        object_85.finish();
    }
    if let Some(var_86) = &input.group_by {
        object.key("groupBy").string(var_86.as_str());
    }
    if input.size != 0 {
        object.key("size").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.size).into()),
        );
    }
    if let Some(var_87) = &input.sort_criteria {
        let mut object_88 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_finding_statistics_sort_criteria(
            &mut object_88,
            var_87,
        );
        object_88.finish();
    }
}

pub fn serialize_structure_get_usage_statistics_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetUsageStatisticsInput,
) {
    if let Some(var_89) = &input.filter_by {
        let mut array_90 = object.key("filterBy").start_array();
        for item_91 in var_89 {
            {
                let mut object_92 = array_90.value().start_object();
                crate::json_ser::serialize_structure_usage_statistics_filter(
                    &mut object_92,
                    item_91,
                );
                object_92.finish();
            }
        }
        array_90.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_93) = &input.next_token {
        object.key("nextToken").string(var_93);
    }
    if let Some(var_94) = &input.sort_by {
        let mut object_95 = object.key("sortBy").start_object();
        crate::json_ser::serialize_structure_usage_statistics_sort_by(&mut object_95, var_94);
        object_95.finish();
    }
    if let Some(var_96) = &input.time_range {
        object.key("timeRange").string(var_96.as_str());
    }
}

pub fn serialize_structure_list_classification_jobs_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListClassificationJobsInput,
) {
    if let Some(var_97) = &input.filter_criteria {
        let mut object_98 = object.key("filterCriteria").start_object();
        crate::json_ser::serialize_structure_list_jobs_filter_criteria(&mut object_98, var_97);
        object_98.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_99) = &input.next_token {
        object.key("nextToken").string(var_99);
    }
    if let Some(var_100) = &input.sort_criteria {
        let mut object_101 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_list_jobs_sort_criteria(&mut object_101, var_100);
        object_101.finish();
    }
}

pub fn serialize_structure_list_custom_data_identifiers_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListCustomDataIdentifiersInput,
) {
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_102) = &input.next_token {
        object.key("nextToken").string(var_102);
    }
}

pub fn serialize_structure_list_findings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListFindingsInput,
) {
    if let Some(var_103) = &input.finding_criteria {
        let mut object_104 = object.key("findingCriteria").start_object();
        crate::json_ser::serialize_structure_finding_criteria(&mut object_104, var_103);
        object_104.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_105) = &input.next_token {
        object.key("nextToken").string(var_105);
    }
    if let Some(var_106) = &input.sort_criteria {
        let mut object_107 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_sort_criteria(&mut object_107, var_106);
        object_107.finish();
    }
}

pub fn serialize_structure_put_classification_export_configuration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutClassificationExportConfigurationInput,
) {
    if let Some(var_108) = &input.configuration {
        let mut object_109 = object.key("configuration").start_object();
        crate::json_ser::serialize_structure_classification_export_configuration(
            &mut object_109,
            var_108,
        );
        object_109.finish();
    }
}

pub fn serialize_structure_put_findings_publication_configuration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutFindingsPublicationConfigurationInput,
) {
    if let Some(var_110) = &input.client_token {
        object.key("clientToken").string(var_110);
    }
    if let Some(var_111) = &input.security_hub_configuration {
        let mut object_112 = object.key("securityHubConfiguration").start_object();
        crate::json_ser::serialize_structure_security_hub_configuration(&mut object_112, var_111);
        object_112.finish();
    }
}

pub fn serialize_structure_search_resources_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SearchResourcesInput,
) {
    if let Some(var_113) = &input.bucket_criteria {
        let mut object_114 = object.key("bucketCriteria").start_object();
        crate::json_ser::serialize_structure_search_resources_bucket_criteria(
            &mut object_114,
            var_113,
        );
        object_114.finish();
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_115) = &input.next_token {
        object.key("nextToken").string(var_115);
    }
    if let Some(var_116) = &input.sort_criteria {
        let mut object_117 = object.key("sortCriteria").start_object();
        crate::json_ser::serialize_structure_search_resources_sort_criteria(
            &mut object_117,
            var_116,
        );
        object_117.finish();
    }
}

pub fn serialize_structure_tag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_118) = &input.tags {
        let mut object_119 = object.key("tags").start_object();
        for (key_120, value_121) in var_118 {
            {
                object_119.key(key_120).string(value_121);
            }
        }
        object_119.finish();
    }
}

pub fn serialize_structure_test_custom_data_identifier_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TestCustomDataIdentifierInput,
) {
    if let Some(var_122) = &input.ignore_words {
        let mut array_123 = object.key("ignoreWords").start_array();
        for item_124 in var_122 {
            {
                array_123.value().string(item_124);
            }
        }
        array_123.finish();
    }
    if let Some(var_125) = &input.keywords {
        let mut array_126 = object.key("keywords").start_array();
        for item_127 in var_125 {
            {
                array_126.value().string(item_127);
            }
        }
        array_126.finish();
    }
    if input.maximum_match_distance != 0 {
        object.key("maximumMatchDistance").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.maximum_match_distance).into()),
        );
    }
    if let Some(var_128) = &input.regex {
        object.key("regex").string(var_128);
    }
    if let Some(var_129) = &input.sample_text {
        object.key("sampleText").string(var_129);
    }
}

pub fn serialize_structure_update_classification_job_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateClassificationJobInput,
) {
    if let Some(var_130) = &input.job_status {
        object.key("jobStatus").string(var_130.as_str());
    }
}

pub fn serialize_structure_update_findings_filter_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateFindingsFilterInput,
) {
    if let Some(var_131) = &input.action {
        object.key("action").string(var_131.as_str());
    }
    if let Some(var_132) = &input.client_token {
        object.key("clientToken").string(var_132);
    }
    if let Some(var_133) = &input.description {
        object.key("description").string(var_133);
    }
    if let Some(var_134) = &input.finding_criteria {
        let mut object_135 = object.key("findingCriteria").start_object();
        crate::json_ser::serialize_structure_finding_criteria(&mut object_135, var_134);
        object_135.finish();
    }
    if let Some(var_136) = &input.name {
        object.key("name").string(var_136);
    }
    if input.position != 0 {
        object.key("position").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.position).into()),
        );
    }
}

pub fn serialize_structure_update_macie_session_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateMacieSessionInput,
) {
    if let Some(var_137) = &input.finding_publishing_frequency {
        object
            .key("findingPublishingFrequency")
            .string(var_137.as_str());
    }
    if let Some(var_138) = &input.status {
        object.key("status").string(var_138.as_str());
    }
}

pub fn serialize_structure_update_member_session_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateMemberSessionInput,
) {
    if let Some(var_139) = &input.status {
        object.key("status").string(var_139.as_str());
    }
}

pub fn serialize_structure_update_organization_configuration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateOrganizationConfigurationInput,
) {
    {
        object.key("autoEnable").boolean(input.auto_enable);
    }
}

pub fn serialize_structure_s3_job_definition(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3JobDefinition,
) {
    if let Some(var_140) = &input.bucket_definitions {
        let mut array_141 = object.key("bucketDefinitions").start_array();
        for item_142 in var_140 {
            {
                let mut object_143 = array_141.value().start_object();
                crate::json_ser::serialize_structure_s3_bucket_definition_for_job(
                    &mut object_143,
                    item_142,
                );
                object_143.finish();
            }
        }
        array_141.finish();
    }
    if let Some(var_144) = &input.scoping {
        let mut object_145 = object.key("scoping").start_object();
        crate::json_ser::serialize_structure_scoping(&mut object_145, var_144);
        object_145.finish();
    }
    if let Some(var_146) = &input.bucket_criteria {
        let mut object_147 = object.key("bucketCriteria").start_object();
        crate::json_ser::serialize_structure_s3_bucket_criteria_for_job(&mut object_147, var_146);
        object_147.finish();
    }
}

pub fn serialize_structure_job_schedule_frequency(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::JobScheduleFrequency,
) {
    if let Some(var_148) = &input.daily_schedule {
        let mut object_149 = object.key("dailySchedule").start_object();
        crate::json_ser::serialize_structure_daily_schedule(&mut object_149, var_148);
        object_149.finish();
    }
    if let Some(var_150) = &input.monthly_schedule {
        let mut object_151 = object.key("monthlySchedule").start_object();
        crate::json_ser::serialize_structure_monthly_schedule(&mut object_151, var_150);
        object_151.finish();
    }
    if let Some(var_152) = &input.weekly_schedule {
        let mut object_153 = object.key("weeklySchedule").start_object();
        crate::json_ser::serialize_structure_weekly_schedule(&mut object_153, var_152);
        object_153.finish();
    }
}

pub fn serialize_structure_finding_criteria(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::FindingCriteria,
) {
    if let Some(var_154) = &input.criterion {
        let mut object_155 = object.key("criterion").start_object();
        for (key_156, value_157) in var_154 {
            {
                let mut object_158 = object_155.key(key_156).start_object();
                crate::json_ser::serialize_structure_criterion_additional_properties(
                    &mut object_158,
                    value_157,
                );
                object_158.finish();
            }
        }
        object_155.finish();
    }
}

pub fn serialize_structure_account_detail(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AccountDetail,
) {
    if let Some(var_159) = &input.account_id {
        object.key("accountId").string(var_159);
    }
    if let Some(var_160) = &input.email {
        object.key("email").string(var_160);
    }
}

pub fn serialize_structure_bucket_criteria_additional_properties(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::BucketCriteriaAdditionalProperties,
) {
    if let Some(var_161) = &input.eq {
        let mut array_162 = object.key("eq").start_array();
        for item_163 in var_161 {
            {
                array_162.value().string(item_163);
            }
        }
        array_162.finish();
    }
    if input.gt != 0 {
        object.key("gt").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.gt).into()),
        );
    }
    if input.gte != 0 {
        object.key("gte").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.gte).into()),
        );
    }
    if input.lt != 0 {
        object.key("lt").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.lt).into()),
        );
    }
    if input.lte != 0 {
        object.key("lte").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.lte).into()),
        );
    }
    if let Some(var_164) = &input.neq {
        let mut array_165 = object.key("neq").start_array();
        for item_166 in var_164 {
            {
                array_165.value().string(item_166);
            }
        }
        array_165.finish();
    }
    if let Some(var_167) = &input.prefix {
        object.key("prefix").string(var_167);
    }
}

pub fn serialize_structure_bucket_sort_criteria(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::BucketSortCriteria,
) {
    if let Some(var_168) = &input.attribute_name {
        object.key("attributeName").string(var_168);
    }
    if let Some(var_169) = &input.order_by {
        object.key("orderBy").string(var_169.as_str());
    }
}

pub fn serialize_structure_sort_criteria(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SortCriteria,
) {
    if let Some(var_170) = &input.attribute_name {
        object.key("attributeName").string(var_170);
    }
    if let Some(var_171) = &input.order_by {
        object.key("orderBy").string(var_171.as_str());
    }
}

pub fn serialize_structure_finding_statistics_sort_criteria(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::FindingStatisticsSortCriteria,
) {
    if let Some(var_172) = &input.attribute_name {
        object.key("attributeName").string(var_172.as_str());
    }
    if let Some(var_173) = &input.order_by {
        object.key("orderBy").string(var_173.as_str());
    }
}

pub fn serialize_structure_usage_statistics_filter(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UsageStatisticsFilter,
) {
    if let Some(var_174) = &input.comparator {
        object.key("comparator").string(var_174.as_str());
    }
    if let Some(var_175) = &input.key {
        object.key("key").string(var_175.as_str());
    }
    if let Some(var_176) = &input.values {
        let mut array_177 = object.key("values").start_array();
        for item_178 in var_176 {
            {
                array_177.value().string(item_178);
            }
        }
        array_177.finish();
    }
}

pub fn serialize_structure_usage_statistics_sort_by(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UsageStatisticsSortBy,
) {
    if let Some(var_179) = &input.key {
        object.key("key").string(var_179.as_str());
    }
    if let Some(var_180) = &input.order_by {
        object.key("orderBy").string(var_180.as_str());
    }
}

pub fn serialize_structure_list_jobs_filter_criteria(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ListJobsFilterCriteria,
) {
    if let Some(var_181) = &input.excludes {
        let mut array_182 = object.key("excludes").start_array();
        for item_183 in var_181 {
            {
                let mut object_184 = array_182.value().start_object();
                crate::json_ser::serialize_structure_list_jobs_filter_term(
                    &mut object_184,
                    item_183,
                );
                object_184.finish();
            }
        }
        array_182.finish();
    }
    if let Some(var_185) = &input.includes {
        let mut array_186 = object.key("includes").start_array();
        for item_187 in var_185 {
            {
                let mut object_188 = array_186.value().start_object();
                crate::json_ser::serialize_structure_list_jobs_filter_term(
                    &mut object_188,
                    item_187,
                );
                object_188.finish();
            }
        }
        array_186.finish();
    }
}

pub fn serialize_structure_list_jobs_sort_criteria(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ListJobsSortCriteria,
) {
    if let Some(var_189) = &input.attribute_name {
        object.key("attributeName").string(var_189.as_str());
    }
    if let Some(var_190) = &input.order_by {
        object.key("orderBy").string(var_190.as_str());
    }
}

pub fn serialize_structure_classification_export_configuration(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ClassificationExportConfiguration,
) {
    if let Some(var_191) = &input.s3_destination {
        let mut object_192 = object.key("s3Destination").start_object();
        crate::json_ser::serialize_structure_s3_destination(&mut object_192, var_191);
        object_192.finish();
    }
}

pub fn serialize_structure_security_hub_configuration(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SecurityHubConfiguration,
) {
    {
        object
            .key("publishClassificationFindings")
            .boolean(input.publish_classification_findings);
    }
    {
        object
            .key("publishPolicyFindings")
            .boolean(input.publish_policy_findings);
    }
}

pub fn serialize_structure_search_resources_bucket_criteria(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesBucketCriteria,
) {
    if let Some(var_193) = &input.excludes {
        let mut object_194 = object.key("excludes").start_object();
        crate::json_ser::serialize_structure_search_resources_criteria_block(
            &mut object_194,
            var_193,
        );
        object_194.finish();
    }
    if let Some(var_195) = &input.includes {
        let mut object_196 = object.key("includes").start_object();
        crate::json_ser::serialize_structure_search_resources_criteria_block(
            &mut object_196,
            var_195,
        );
        object_196.finish();
    }
}

pub fn serialize_structure_search_resources_sort_criteria(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesSortCriteria,
) {
    if let Some(var_197) = &input.attribute_name {
        object.key("attributeName").string(var_197.as_str());
    }
    if let Some(var_198) = &input.order_by {
        object.key("orderBy").string(var_198.as_str());
    }
}

pub fn serialize_structure_s3_bucket_definition_for_job(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3BucketDefinitionForJob,
) {
    if let Some(var_199) = &input.account_id {
        object.key("accountId").string(var_199);
    }
    if let Some(var_200) = &input.buckets {
        let mut array_201 = object.key("buckets").start_array();
        for item_202 in var_200 {
            {
                array_201.value().string(item_202);
            }
        }
        array_201.finish();
    }
}

pub fn serialize_structure_scoping(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Scoping,
) {
    if let Some(var_203) = &input.excludes {
        let mut object_204 = object.key("excludes").start_object();
        crate::json_ser::serialize_structure_job_scoping_block(&mut object_204, var_203);
        object_204.finish();
    }
    if let Some(var_205) = &input.includes {
        let mut object_206 = object.key("includes").start_object();
        crate::json_ser::serialize_structure_job_scoping_block(&mut object_206, var_205);
        object_206.finish();
    }
}

pub fn serialize_structure_s3_bucket_criteria_for_job(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3BucketCriteriaForJob,
) {
    if let Some(var_207) = &input.excludes {
        let mut object_208 = object.key("excludes").start_object();
        crate::json_ser::serialize_structure_criteria_block_for_job(&mut object_208, var_207);
        object_208.finish();
    }
    if let Some(var_209) = &input.includes {
        let mut object_210 = object.key("includes").start_object();
        crate::json_ser::serialize_structure_criteria_block_for_job(&mut object_210, var_209);
        object_210.finish();
    }
}

pub fn serialize_structure_daily_schedule(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DailySchedule,
) {
    let (_, _) = (object, input);
}

pub fn serialize_structure_monthly_schedule(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MonthlySchedule,
) {
    if input.day_of_month != 0 {
        object.key("dayOfMonth").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.day_of_month).into()),
        );
    }
}

pub fn serialize_structure_weekly_schedule(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::WeeklySchedule,
) {
    if let Some(var_211) = &input.day_of_week {
        object.key("dayOfWeek").string(var_211.as_str());
    }
}

pub fn serialize_structure_criterion_additional_properties(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CriterionAdditionalProperties,
) {
    if let Some(var_212) = &input.eq {
        let mut array_213 = object.key("eq").start_array();
        for item_214 in var_212 {
            {
                array_213.value().string(item_214);
            }
        }
        array_213.finish();
    }
    if let Some(var_215) = &input.eq_exact_match {
        let mut array_216 = object.key("eqExactMatch").start_array();
        for item_217 in var_215 {
            {
                array_216.value().string(item_217);
            }
        }
        array_216.finish();
    }
    if input.gt != 0 {
        object.key("gt").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.gt).into()),
        );
    }
    if input.gte != 0 {
        object.key("gte").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.gte).into()),
        );
    }
    if input.lt != 0 {
        object.key("lt").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.lt).into()),
        );
    }
    if input.lte != 0 {
        object.key("lte").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((input.lte).into()),
        );
    }
    if let Some(var_218) = &input.neq {
        let mut array_219 = object.key("neq").start_array();
        for item_220 in var_218 {
            {
                array_219.value().string(item_220);
            }
        }
        array_219.finish();
    }
}

pub fn serialize_structure_list_jobs_filter_term(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ListJobsFilterTerm,
) {
    if let Some(var_221) = &input.comparator {
        object.key("comparator").string(var_221.as_str());
    }
    if let Some(var_222) = &input.key {
        object.key("key").string(var_222.as_str());
    }
    if let Some(var_223) = &input.values {
        let mut array_224 = object.key("values").start_array();
        for item_225 in var_223 {
            {
                array_224.value().string(item_225);
            }
        }
        array_224.finish();
    }
}

pub fn serialize_structure_s3_destination(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3Destination,
) {
    if let Some(var_226) = &input.bucket_name {
        object.key("bucketName").string(var_226);
    }
    if let Some(var_227) = &input.key_prefix {
        object.key("keyPrefix").string(var_227);
    }
    if let Some(var_228) = &input.kms_key_arn {
        object.key("kmsKeyArn").string(var_228);
    }
}

pub fn serialize_structure_search_resources_criteria_block(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesCriteriaBlock,
) {
    if let Some(var_229) = &input.and {
        let mut array_230 = object.key("and").start_array();
        for item_231 in var_229 {
            {
                let mut object_232 = array_230.value().start_object();
                crate::json_ser::serialize_structure_search_resources_criteria(
                    &mut object_232,
                    item_231,
                );
                object_232.finish();
            }
        }
        array_230.finish();
    }
}

pub fn serialize_structure_job_scoping_block(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::JobScopingBlock,
) {
    if let Some(var_233) = &input.and {
        let mut array_234 = object.key("and").start_array();
        for item_235 in var_233 {
            {
                let mut object_236 = array_234.value().start_object();
                crate::json_ser::serialize_structure_job_scope_term(&mut object_236, item_235);
                object_236.finish();
            }
        }
        array_234.finish();
    }
}

pub fn serialize_structure_criteria_block_for_job(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CriteriaBlockForJob,
) {
    if let Some(var_237) = &input.and {
        let mut array_238 = object.key("and").start_array();
        for item_239 in var_237 {
            {
                let mut object_240 = array_238.value().start_object();
                crate::json_ser::serialize_structure_criteria_for_job(&mut object_240, item_239);
                object_240.finish();
            }
        }
        array_238.finish();
    }
}

pub fn serialize_structure_search_resources_criteria(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesCriteria,
) {
    if let Some(var_241) = &input.simple_criterion {
        let mut object_242 = object.key("simpleCriterion").start_object();
        crate::json_ser::serialize_structure_search_resources_simple_criterion(
            &mut object_242,
            var_241,
        );
        object_242.finish();
    }
    if let Some(var_243) = &input.tag_criterion {
        let mut object_244 = object.key("tagCriterion").start_object();
        crate::json_ser::serialize_structure_search_resources_tag_criterion(
            &mut object_244,
            var_243,
        );
        object_244.finish();
    }
}

pub fn serialize_structure_job_scope_term(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::JobScopeTerm,
) {
    if let Some(var_245) = &input.simple_scope_term {
        let mut object_246 = object.key("simpleScopeTerm").start_object();
        crate::json_ser::serialize_structure_simple_scope_term(&mut object_246, var_245);
        object_246.finish();
    }
    if let Some(var_247) = &input.tag_scope_term {
        let mut object_248 = object.key("tagScopeTerm").start_object();
        crate::json_ser::serialize_structure_tag_scope_term(&mut object_248, var_247);
        object_248.finish();
    }
}

pub fn serialize_structure_criteria_for_job(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CriteriaForJob,
) {
    if let Some(var_249) = &input.simple_criterion {
        let mut object_250 = object.key("simpleCriterion").start_object();
        crate::json_ser::serialize_structure_simple_criterion_for_job(&mut object_250, var_249);
        object_250.finish();
    }
    if let Some(var_251) = &input.tag_criterion {
        let mut object_252 = object.key("tagCriterion").start_object();
        crate::json_ser::serialize_structure_tag_criterion_for_job(&mut object_252, var_251);
        object_252.finish();
    }
}

pub fn serialize_structure_search_resources_simple_criterion(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesSimpleCriterion,
) {
    if let Some(var_253) = &input.comparator {
        object.key("comparator").string(var_253.as_str());
    }
    if let Some(var_254) = &input.key {
        object.key("key").string(var_254.as_str());
    }
    if let Some(var_255) = &input.values {
        let mut array_256 = object.key("values").start_array();
        for item_257 in var_255 {
            {
                array_256.value().string(item_257);
            }
        }
        array_256.finish();
    }
}

pub fn serialize_structure_search_resources_tag_criterion(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesTagCriterion,
) {
    if let Some(var_258) = &input.comparator {
        object.key("comparator").string(var_258.as_str());
    }
    if let Some(var_259) = &input.tag_values {
        let mut array_260 = object.key("tagValues").start_array();
        for item_261 in var_259 {
            {
                let mut object_262 = array_260.value().start_object();
                crate::json_ser::serialize_structure_search_resources_tag_criterion_pair(
                    &mut object_262,
                    item_261,
                );
                object_262.finish();
            }
        }
        array_260.finish();
    }
}

pub fn serialize_structure_simple_scope_term(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SimpleScopeTerm,
) {
    if let Some(var_263) = &input.comparator {
        object.key("comparator").string(var_263.as_str());
    }
    if let Some(var_264) = &input.key {
        object.key("key").string(var_264.as_str());
    }
    if let Some(var_265) = &input.values {
        let mut array_266 = object.key("values").start_array();
        for item_267 in var_265 {
            {
                array_266.value().string(item_267);
            }
        }
        array_266.finish();
    }
}

pub fn serialize_structure_tag_scope_term(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TagScopeTerm,
) {
    if let Some(var_268) = &input.comparator {
        object.key("comparator").string(var_268.as_str());
    }
    if let Some(var_269) = &input.key {
        object.key("key").string(var_269);
    }
    if let Some(var_270) = &input.tag_values {
        let mut array_271 = object.key("tagValues").start_array();
        for item_272 in var_270 {
            {
                let mut object_273 = array_271.value().start_object();
                crate::json_ser::serialize_structure_tag_value_pair(&mut object_273, item_272);
                object_273.finish();
            }
        }
        array_271.finish();
    }
    if let Some(var_274) = &input.target {
        object.key("target").string(var_274.as_str());
    }
}

pub fn serialize_structure_simple_criterion_for_job(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SimpleCriterionForJob,
) {
    if let Some(var_275) = &input.comparator {
        object.key("comparator").string(var_275.as_str());
    }
    if let Some(var_276) = &input.key {
        object.key("key").string(var_276.as_str());
    }
    if let Some(var_277) = &input.values {
        let mut array_278 = object.key("values").start_array();
        for item_279 in var_277 {
            {
                array_278.value().string(item_279);
            }
        }
        array_278.finish();
    }
}

pub fn serialize_structure_tag_criterion_for_job(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TagCriterionForJob,
) {
    if let Some(var_280) = &input.comparator {
        object.key("comparator").string(var_280.as_str());
    }
    if let Some(var_281) = &input.tag_values {
        let mut array_282 = object.key("tagValues").start_array();
        for item_283 in var_281 {
            {
                let mut object_284 = array_282.value().start_object();
                crate::json_ser::serialize_structure_tag_criterion_pair_for_job(
                    &mut object_284,
                    item_283,
                );
                object_284.finish();
            }
        }
        array_282.finish();
    }
}

pub fn serialize_structure_search_resources_tag_criterion_pair(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SearchResourcesTagCriterionPair,
) {
    if let Some(var_285) = &input.key {
        object.key("key").string(var_285);
    }
    if let Some(var_286) = &input.value {
        object.key("value").string(var_286);
    }
}

pub fn serialize_structure_tag_value_pair(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TagValuePair,
) {
    if let Some(var_287) = &input.key {
        object.key("key").string(var_287);
    }
    if let Some(var_288) = &input.value {
        object.key("value").string(var_288);
    }
}

pub fn serialize_structure_tag_criterion_pair_for_job(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TagCriterionPairForJob,
) {
    if let Some(var_289) = &input.key {
        object.key("key").string(var_289);
    }
    if let Some(var_290) = &input.value {
        object.key("value").string(var_290);
    }
}
