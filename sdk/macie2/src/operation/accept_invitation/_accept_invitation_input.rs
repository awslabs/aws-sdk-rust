// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AcceptInvitationInput {
    /// <p>The Amazon Web Services account ID for the account that sent the invitation.</p>
    #[doc(hidden)]
    pub administrator_account_id: std::option::Option<std::string::String>,
    /// <p>The unique identifier for the invitation to accept.</p>
    #[doc(hidden)]
    pub invitation_id: std::option::Option<std::string::String>,
    /// <p>(Deprecated) The Amazon Web Services account ID for the account that sent the invitation. This property has been replaced by the administratorAccountId property and is retained only for backward compatibility.</p>
    #[doc(hidden)]
    pub master_account: std::option::Option<std::string::String>,
}
impl AcceptInvitationInput {
    /// <p>The Amazon Web Services account ID for the account that sent the invitation.</p>
    pub fn administrator_account_id(&self) -> std::option::Option<&str> {
        self.administrator_account_id.as_deref()
    }
    /// <p>The unique identifier for the invitation to accept.</p>
    pub fn invitation_id(&self) -> std::option::Option<&str> {
        self.invitation_id.as_deref()
    }
    /// <p>(Deprecated) The Amazon Web Services account ID for the account that sent the invitation. This property has been replaced by the administratorAccountId property and is retained only for backward compatibility.</p>
    pub fn master_account(&self) -> std::option::Option<&str> {
        self.master_account.as_deref()
    }
}
impl AcceptInvitationInput {
    /// Creates a new builder-style object to manufacture [`AcceptInvitationInput`](crate::operation::accept_invitation::AcceptInvitationInput).
    pub fn builder() -> crate::operation::accept_invitation::builders::AcceptInvitationInputBuilder
    {
        crate::operation::accept_invitation::builders::AcceptInvitationInputBuilder::default()
    }
}

/// A builder for [`AcceptInvitationInput`](crate::operation::accept_invitation::AcceptInvitationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AcceptInvitationInputBuilder {
    pub(crate) administrator_account_id: std::option::Option<std::string::String>,
    pub(crate) invitation_id: std::option::Option<std::string::String>,
    pub(crate) master_account: std::option::Option<std::string::String>,
}
impl AcceptInvitationInputBuilder {
    /// <p>The Amazon Web Services account ID for the account that sent the invitation.</p>
    pub fn administrator_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.administrator_account_id = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID for the account that sent the invitation.</p>
    pub fn set_administrator_account_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.administrator_account_id = input;
        self
    }
    /// <p>The unique identifier for the invitation to accept.</p>
    pub fn invitation_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.invitation_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the invitation to accept.</p>
    pub fn set_invitation_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.invitation_id = input;
        self
    }
    /// <p>(Deprecated) The Amazon Web Services account ID for the account that sent the invitation. This property has been replaced by the administratorAccountId property and is retained only for backward compatibility.</p>
    pub fn master_account(mut self, input: impl Into<std::string::String>) -> Self {
        self.master_account = Some(input.into());
        self
    }
    /// <p>(Deprecated) The Amazon Web Services account ID for the account that sent the invitation. This property has been replaced by the administratorAccountId property and is retained only for backward compatibility.</p>
    pub fn set_master_account(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.master_account = input;
        self
    }
    /// Consumes the builder and constructs a [`AcceptInvitationInput`](crate::operation::accept_invitation::AcceptInvitationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::accept_invitation::AcceptInvitationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::accept_invitation::AcceptInvitationInput {
            administrator_account_id: self.administrator_account_id,
            invitation_id: self.invitation_id,
            master_account: self.master_account,
        })
    }
}
