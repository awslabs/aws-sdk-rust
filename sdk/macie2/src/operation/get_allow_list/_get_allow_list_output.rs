// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetAllowListOutput {
    /// <p>The Amazon Resource Name (ARN) of the allow list.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the allow list was created in Amazon Macie.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The criteria that specify the text or text pattern to ignore. The criteria can be the location and name of an S3 object that lists specific text to ignore (s3WordsList), or a regular expression (regex) that defines a text pattern to ignore.</p>
    #[doc(hidden)]
    pub criteria: std::option::Option<crate::types::AllowListCriteria>,
    /// <p>The custom description of the allow list.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The unique identifier for the allow list.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The custom name of the allow list.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The current status of the allow list, which indicates whether Amazon Macie can access and use the list's criteria.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::AllowListStatus>,
    /// <p>A map of key-value pairs that specifies which tags (keys and values) are associated with the allow list.</p>
    #[doc(hidden)]
    pub tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the allow list's settings were most recently changed in Amazon Macie.</p>
    #[doc(hidden)]
    pub updated_at: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetAllowListOutput {
    /// <p>The Amazon Resource Name (ARN) of the allow list.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the allow list was created in Amazon Macie.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The criteria that specify the text or text pattern to ignore. The criteria can be the location and name of an S3 object that lists specific text to ignore (s3WordsList), or a regular expression (regex) that defines a text pattern to ignore.</p>
    pub fn criteria(&self) -> std::option::Option<&crate::types::AllowListCriteria> {
        self.criteria.as_ref()
    }
    /// <p>The custom description of the allow list.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The unique identifier for the allow list.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The custom name of the allow list.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The current status of the allow list, which indicates whether Amazon Macie can access and use the list's criteria.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::AllowListStatus> {
        self.status.as_ref()
    }
    /// <p>A map of key-value pairs that specifies which tags (keys and values) are associated with the allow list.</p>
    pub fn tags(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.tags.as_ref()
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the allow list's settings were most recently changed in Amazon Macie.</p>
    pub fn updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetAllowListOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetAllowListOutput {
    /// Creates a new builder-style object to manufacture [`GetAllowListOutput`](crate::operation::get_allow_list::GetAllowListOutput).
    pub fn builder() -> crate::operation::get_allow_list::builders::GetAllowListOutputBuilder {
        crate::operation::get_allow_list::builders::GetAllowListOutputBuilder::default()
    }
}

/// A builder for [`GetAllowListOutput`](crate::operation::get_allow_list::GetAllowListOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetAllowListOutputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) criteria: std::option::Option<crate::types::AllowListCriteria>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::AllowListStatus>,
    pub(crate) tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    pub(crate) updated_at: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetAllowListOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the allow list.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the allow list.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the allow list was created in Amazon Macie.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the allow list was created in Amazon Macie.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The criteria that specify the text or text pattern to ignore. The criteria can be the location and name of an S3 object that lists specific text to ignore (s3WordsList), or a regular expression (regex) that defines a text pattern to ignore.</p>
    pub fn criteria(mut self, input: crate::types::AllowListCriteria) -> Self {
        self.criteria = Some(input);
        self
    }
    /// <p>The criteria that specify the text or text pattern to ignore. The criteria can be the location and name of an S3 object that lists specific text to ignore (s3WordsList), or a regular expression (regex) that defines a text pattern to ignore.</p>
    pub fn set_criteria(
        mut self,
        input: std::option::Option<crate::types::AllowListCriteria>,
    ) -> Self {
        self.criteria = input;
        self
    }
    /// <p>The custom description of the allow list.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The custom description of the allow list.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The unique identifier for the allow list.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the allow list.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The custom name of the allow list.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The custom name of the allow list.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The current status of the allow list, which indicates whether Amazon Macie can access and use the list's criteria.</p>
    pub fn status(mut self, input: crate::types::AllowListStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The current status of the allow list, which indicates whether Amazon Macie can access and use the list's criteria.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::AllowListStatus>) -> Self {
        self.status = input;
        self
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A map of key-value pairs that specifies which tags (keys and values) are associated with the allow list.</p>
    pub fn tags(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = Some(hash_map);
        self
    }
    /// <p>A map of key-value pairs that specifies which tags (keys and values) are associated with the allow list.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.tags = input;
        self
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the allow list's settings were most recently changed in Amazon Macie.</p>
    pub fn updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_at = Some(input);
        self
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the allow list's settings were most recently changed in Amazon Macie.</p>
    pub fn set_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_at = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetAllowListOutput`](crate::operation::get_allow_list::GetAllowListOutput).
    pub fn build(self) -> crate::operation::get_allow_list::GetAllowListOutput {
        crate::operation::get_allow_list::GetAllowListOutput {
            arn: self.arn,
            created_at: self.created_at,
            criteria: self.criteria,
            description: self.description,
            id: self.id,
            name: self.name,
            status: self.status,
            tags: self.tags,
            updated_at: self.updated_at,
            _request_id: self._request_id,
        }
    }
}
