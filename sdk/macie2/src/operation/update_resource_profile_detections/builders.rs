// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::update_resource_profile_detections::_update_resource_profile_detections_output::UpdateResourceProfileDetectionsOutputBuilder;

pub use crate::operation::update_resource_profile_detections::_update_resource_profile_detections_input::UpdateResourceProfileDetectionsInputBuilder;

/// Fluent builder constructing a request to `UpdateResourceProfileDetections`.
///
/// <p>Updates the sensitivity scoring settings for an S3 bucket.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct UpdateResourceProfileDetectionsFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::update_resource_profile_detections::builders::UpdateResourceProfileDetectionsInputBuilder
            }
impl UpdateResourceProfileDetectionsFluentBuilder {
    /// Creates a new `UpdateResourceProfileDetections`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::update_resource_profile_detections::UpdateResourceProfileDetections, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::update_resource_profile_detections::UpdateResourceProfileDetectionsError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::update_resource_profile_detections::UpdateResourceProfileDetectionsOutput, aws_smithy_http::result::SdkError<crate::operation::update_resource_profile_detections::UpdateResourceProfileDetectionsError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The Amazon Resource Name (ARN) of the S3 bucket that the request applies to.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.resource_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the S3 bucket that the request applies to.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_resource_arn(input);
        self
    }
    /// Appends an item to `suppressDataIdentifiers`.
    ///
    /// To override the contents of this collection use [`set_suppress_data_identifiers`](Self::set_suppress_data_identifiers).
    ///
    /// <p>An array of objects, one for each custom data identifier or managed data identifier that detected the type of sensitive data to start excluding or including in the bucket's score. To start including all sensitive data types in the score, don't specify any values for this array.</p>
    pub fn suppress_data_identifiers(
        mut self,
        input: crate::types::SuppressDataIdentifier,
    ) -> Self {
        self.inner = self.inner.suppress_data_identifiers(input);
        self
    }
    /// <p>An array of objects, one for each custom data identifier or managed data identifier that detected the type of sensitive data to start excluding or including in the bucket's score. To start including all sensitive data types in the score, don't specify any values for this array.</p>
    pub fn set_suppress_data_identifiers(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::SuppressDataIdentifier>>,
    ) -> Self {
        self.inner = self.inner.set_suppress_data_identifiers(input);
        self
    }
}
