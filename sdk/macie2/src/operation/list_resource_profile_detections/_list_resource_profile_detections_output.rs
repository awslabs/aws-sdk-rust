// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListResourceProfileDetectionsOutput {
    /// <p>An array of objects, one for each type of sensitive data that Amazon Macie found in the bucket. Each object reports the number of occurrences of the specified type and provides information about the custom data identifier or managed data identifier that detected the data.</p>
    #[doc(hidden)]
    pub detections: std::option::Option<std::vec::Vec<crate::types::Detection>>,
    /// <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListResourceProfileDetectionsOutput {
    /// <p>An array of objects, one for each type of sensitive data that Amazon Macie found in the bucket. Each object reports the number of occurrences of the specified type and provides information about the custom data identifier or managed data identifier that detected the data.</p>
    pub fn detections(&self) -> std::option::Option<&[crate::types::Detection]> {
        self.detections.as_deref()
    }
    /// <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListResourceProfileDetectionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListResourceProfileDetectionsOutput {
    /// Creates a new builder-style object to manufacture [`ListResourceProfileDetectionsOutput`](crate::operation::list_resource_profile_detections::ListResourceProfileDetectionsOutput).
    pub fn builder() -> crate::operation::list_resource_profile_detections::builders::ListResourceProfileDetectionsOutputBuilder{
        crate::operation::list_resource_profile_detections::builders::ListResourceProfileDetectionsOutputBuilder::default()
    }
}

/// A builder for [`ListResourceProfileDetectionsOutput`](crate::operation::list_resource_profile_detections::ListResourceProfileDetectionsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListResourceProfileDetectionsOutputBuilder {
    pub(crate) detections: std::option::Option<std::vec::Vec<crate::types::Detection>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListResourceProfileDetectionsOutputBuilder {
    /// Appends an item to `detections`.
    ///
    /// To override the contents of this collection use [`set_detections`](Self::set_detections).
    ///
    /// <p>An array of objects, one for each type of sensitive data that Amazon Macie found in the bucket. Each object reports the number of occurrences of the specified type and provides information about the custom data identifier or managed data identifier that detected the data.</p>
    pub fn detections(mut self, input: crate::types::Detection) -> Self {
        let mut v = self.detections.unwrap_or_default();
        v.push(input);
        self.detections = Some(v);
        self
    }
    /// <p>An array of objects, one for each type of sensitive data that Amazon Macie found in the bucket. Each object reports the number of occurrences of the specified type and provides information about the custom data identifier or managed data identifier that detected the data.</p>
    pub fn set_detections(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Detection>>,
    ) -> Self {
        self.detections = input;
        self
    }
    /// <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListResourceProfileDetectionsOutput`](crate::operation::list_resource_profile_detections::ListResourceProfileDetectionsOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_resource_profile_detections::ListResourceProfileDetectionsOutput
    {
        crate::operation::list_resource_profile_detections::ListResourceProfileDetectionsOutput {
            detections: self.detections,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
