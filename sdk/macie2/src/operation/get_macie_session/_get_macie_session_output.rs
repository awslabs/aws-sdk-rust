// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetMacieSessionOutput {
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the Amazon Macie account was created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The frequency with which Amazon Macie publishes updates to policy findings for the account. This includes publishing updates to Security Hub and Amazon EventBridge (formerly Amazon CloudWatch Events).</p>
    #[doc(hidden)]
    pub finding_publishing_frequency: std::option::Option<crate::types::FindingPublishingFrequency>,
    /// <p>The Amazon Resource Name (ARN) of the service-linked role that allows Amazon Macie to monitor and analyze data in Amazon Web Services resources for the account.</p>
    #[doc(hidden)]
    pub service_role: std::option::Option<std::string::String>,
    /// <p>The current status of the Amazon Macie account. Possible values are: PAUSED, the account is enabled but all Macie activities are suspended (paused) for the account; and, ENABLED, the account is enabled and all Macie activities are enabled for the account.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::MacieStatus>,
    /// <p>The date and time, in UTC and extended ISO 8601 format, of the most recent change to the status of the Amazon Macie account.</p>
    #[doc(hidden)]
    pub updated_at: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetMacieSessionOutput {
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the Amazon Macie account was created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The frequency with which Amazon Macie publishes updates to policy findings for the account. This includes publishing updates to Security Hub and Amazon EventBridge (formerly Amazon CloudWatch Events).</p>
    pub fn finding_publishing_frequency(
        &self,
    ) -> std::option::Option<&crate::types::FindingPublishingFrequency> {
        self.finding_publishing_frequency.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the service-linked role that allows Amazon Macie to monitor and analyze data in Amazon Web Services resources for the account.</p>
    pub fn service_role(&self) -> std::option::Option<&str> {
        self.service_role.as_deref()
    }
    /// <p>The current status of the Amazon Macie account. Possible values are: PAUSED, the account is enabled but all Macie activities are suspended (paused) for the account; and, ENABLED, the account is enabled and all Macie activities are enabled for the account.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::MacieStatus> {
        self.status.as_ref()
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, of the most recent change to the status of the Amazon Macie account.</p>
    pub fn updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetMacieSessionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetMacieSessionOutput {
    /// Creates a new builder-style object to manufacture [`GetMacieSessionOutput`](crate::operation::get_macie_session::GetMacieSessionOutput).
    pub fn builder() -> crate::operation::get_macie_session::builders::GetMacieSessionOutputBuilder
    {
        crate::operation::get_macie_session::builders::GetMacieSessionOutputBuilder::default()
    }
}

/// A builder for [`GetMacieSessionOutput`](crate::operation::get_macie_session::GetMacieSessionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetMacieSessionOutputBuilder {
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) finding_publishing_frequency:
        std::option::Option<crate::types::FindingPublishingFrequency>,
    pub(crate) service_role: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::MacieStatus>,
    pub(crate) updated_at: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetMacieSessionOutputBuilder {
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the Amazon Macie account was created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the Amazon Macie account was created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The frequency with which Amazon Macie publishes updates to policy findings for the account. This includes publishing updates to Security Hub and Amazon EventBridge (formerly Amazon CloudWatch Events).</p>
    pub fn finding_publishing_frequency(
        mut self,
        input: crate::types::FindingPublishingFrequency,
    ) -> Self {
        self.finding_publishing_frequency = Some(input);
        self
    }
    /// <p>The frequency with which Amazon Macie publishes updates to policy findings for the account. This includes publishing updates to Security Hub and Amazon EventBridge (formerly Amazon CloudWatch Events).</p>
    pub fn set_finding_publishing_frequency(
        mut self,
        input: std::option::Option<crate::types::FindingPublishingFrequency>,
    ) -> Self {
        self.finding_publishing_frequency = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the service-linked role that allows Amazon Macie to monitor and analyze data in Amazon Web Services resources for the account.</p>
    pub fn service_role(mut self, input: impl Into<std::string::String>) -> Self {
        self.service_role = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the service-linked role that allows Amazon Macie to monitor and analyze data in Amazon Web Services resources for the account.</p>
    pub fn set_service_role(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.service_role = input;
        self
    }
    /// <p>The current status of the Amazon Macie account. Possible values are: PAUSED, the account is enabled but all Macie activities are suspended (paused) for the account; and, ENABLED, the account is enabled and all Macie activities are enabled for the account.</p>
    pub fn status(mut self, input: crate::types::MacieStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The current status of the Amazon Macie account. Possible values are: PAUSED, the account is enabled but all Macie activities are suspended (paused) for the account; and, ENABLED, the account is enabled and all Macie activities are enabled for the account.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::MacieStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, of the most recent change to the status of the Amazon Macie account.</p>
    pub fn updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_at = Some(input);
        self
    }
    /// <p>The date and time, in UTC and extended ISO 8601 format, of the most recent change to the status of the Amazon Macie account.</p>
    pub fn set_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_at = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetMacieSessionOutput`](crate::operation::get_macie_session::GetMacieSessionOutput).
    pub fn build(self) -> crate::operation::get_macie_session::GetMacieSessionOutput {
        crate::operation::get_macie_session::GetMacieSessionOutput {
            created_at: self.created_at,
            finding_publishing_frequency: self.finding_publishing_frequency,
            service_role: self.service_role,
            status: self.status,
            updated_at: self.updated_at,
            _request_id: self._request_id,
        }
    }
}
