// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateClassificationScopeInput {
    /// <p>The unique identifier for the Amazon Macie resource that the request applies to.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The S3 buckets to add or remove from the exclusion list defined by the classification scope.</p>
    pub s3: ::std::option::Option<crate::types::S3ClassificationScopeUpdate>,
}
impl UpdateClassificationScopeInput {
    /// <p>The unique identifier for the Amazon Macie resource that the request applies to.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The S3 buckets to add or remove from the exclusion list defined by the classification scope.</p>
    pub fn s3(&self) -> ::std::option::Option<&crate::types::S3ClassificationScopeUpdate> {
        self.s3.as_ref()
    }
}
impl UpdateClassificationScopeInput {
    /// Creates a new builder-style object to manufacture [`UpdateClassificationScopeInput`](crate::operation::update_classification_scope::UpdateClassificationScopeInput).
    pub fn builder() -> crate::operation::update_classification_scope::builders::UpdateClassificationScopeInputBuilder {
        crate::operation::update_classification_scope::builders::UpdateClassificationScopeInputBuilder::default()
    }
}

/// A builder for [`UpdateClassificationScopeInput`](crate::operation::update_classification_scope::UpdateClassificationScopeInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateClassificationScopeInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) s3: ::std::option::Option<crate::types::S3ClassificationScopeUpdate>,
}
impl UpdateClassificationScopeInputBuilder {
    /// <p>The unique identifier for the Amazon Macie resource that the request applies to.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the Amazon Macie resource that the request applies to.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier for the Amazon Macie resource that the request applies to.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The S3 buckets to add or remove from the exclusion list defined by the classification scope.</p>
    pub fn s3(mut self, input: crate::types::S3ClassificationScopeUpdate) -> Self {
        self.s3 = ::std::option::Option::Some(input);
        self
    }
    /// <p>The S3 buckets to add or remove from the exclusion list defined by the classification scope.</p>
    pub fn set_s3(mut self, input: ::std::option::Option<crate::types::S3ClassificationScopeUpdate>) -> Self {
        self.s3 = input;
        self
    }
    /// <p>The S3 buckets to add or remove from the exclusion list defined by the classification scope.</p>
    pub fn get_s3(&self) -> &::std::option::Option<crate::types::S3ClassificationScopeUpdate> {
        &self.s3
    }
    /// Consumes the builder and constructs a [`UpdateClassificationScopeInput`](crate::operation::update_classification_scope::UpdateClassificationScopeInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_classification_scope::UpdateClassificationScopeInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_classification_scope::UpdateClassificationScopeInput { id: self.id, s3: self.s3 })
    }
}
