// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMacieSession`](crate::client::fluent_builders::GetMacieSession) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::GetMacieSession::send) it.
    /// - On success, responds with [`GetMacieSessionOutput`](crate::output::GetMacieSessionOutput) with field(s):
    ///   - [`created_at(Option<DateTime>)`](crate::output::GetMacieSessionOutput::created_at): <p>The date and time, in UTC and extended ISO 8601 format, when the Amazon Macie account was created.</p>
    ///   - [`finding_publishing_frequency(Option<FindingPublishingFrequency>)`](crate::output::GetMacieSessionOutput::finding_publishing_frequency): <p>The frequency with which Amazon Macie publishes updates to policy findings for the account. This includes publishing updates to Security Hub and Amazon EventBridge (formerly Amazon CloudWatch Events).</p>
    ///   - [`service_role(Option<String>)`](crate::output::GetMacieSessionOutput::service_role): <p>The Amazon Resource Name (ARN) of the service-linked role that allows Amazon Macie to monitor and analyze data in Amazon Web Services resources for the account.</p>
    ///   - [`status(Option<MacieStatus>)`](crate::output::GetMacieSessionOutput::status): <p>The current status of the Amazon Macie account. Possible values are: PAUSED, the account is enabled but all Macie activities are suspended (paused) for the account; and, ENABLED, the account is enabled and all Macie activities are enabled for the account.</p>
    ///   - [`updated_at(Option<DateTime>)`](crate::output::GetMacieSessionOutput::updated_at): <p>The date and time, in UTC and extended ISO 8601 format, of the most recent change to the status of the Amazon Macie account.</p>
    /// - On failure, responds with [`SdkError<GetMacieSessionError>`](crate::error::GetMacieSessionError)
    pub fn get_macie_session(&self) -> crate::client::fluent_builders::GetMacieSession {
        crate::client::fluent_builders::GetMacieSession::new(self.handle.clone())
    }
}
