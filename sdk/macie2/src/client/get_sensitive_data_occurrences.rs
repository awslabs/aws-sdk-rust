// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSensitiveDataOccurrences`](crate::client::fluent_builders::GetSensitiveDataOccurrences) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`finding_id(impl Into<String>)`](crate::client::fluent_builders::GetSensitiveDataOccurrences::finding_id) / [`set_finding_id(Option<String>)`](crate::client::fluent_builders::GetSensitiveDataOccurrences::set_finding_id): <p>The unique identifier for the finding.</p>
    /// - On success, responds with [`GetSensitiveDataOccurrencesOutput`](crate::output::GetSensitiveDataOccurrencesOutput) with field(s):
    ///   - [`error(Option<String>)`](crate::output::GetSensitiveDataOccurrencesOutput::error): <p>If an error occurred when Amazon Macie attempted to retrieve occurrences of sensitive data reported by the finding, a description of the error that occurred. This value is null if the status (status) of the request is PROCESSING or SUCCESS.</p>
    ///   - [`sensitive_data_occurrences(Option<HashMap<String, Vec<DetectedDataDetails>>>)`](crate::output::GetSensitiveDataOccurrencesOutput::sensitive_data_occurrences): <p>A map that specifies 1-100 types of sensitive data reported by the finding and, for each type, 1-10 occurrences of sensitive data.</p>
    ///   - [`status(Option<RevealRequestStatus>)`](crate::output::GetSensitiveDataOccurrencesOutput::status): <p>The status of the request to retrieve occurrences of sensitive data reported by the finding. Possible values are:</p>  <ul>  <li><p>ERROR - An error occurred when Amazon Macie attempted to locate, retrieve, or encrypt the sensitive data. The error value indicates the nature of the error that occurred.</p></li>   <li><p>PROCESSING - Macie is processing the request.</p></li>   <li><p>SUCCESS - Macie successfully located, retrieved, and encrypted the sensitive data.</p></li> </ul>
    /// - On failure, responds with [`SdkError<GetSensitiveDataOccurrencesError>`](crate::error::GetSensitiveDataOccurrencesError)
    pub fn get_sensitive_data_occurrences(
        &self,
    ) -> crate::client::fluent_builders::GetSensitiveDataOccurrences {
        crate::client::fluent_builders::GetSensitiveDataOccurrences::new(self.handle.clone())
    }
}
