// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AcceptInvitation`](crate::operation::accept_invitation::builders::AcceptInvitationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`administrator_account_id(impl Into<String>)`](crate::operation::accept_invitation::builders::AcceptInvitationFluentBuilder::administrator_account_id) / [`set_administrator_account_id(Option<String>)`](crate::operation::accept_invitation::builders::AcceptInvitationFluentBuilder::set_administrator_account_id): <p>The Amazon Web Services account ID for the account that sent the invitation.</p>
    ///   - [`invitation_id(impl Into<String>)`](crate::operation::accept_invitation::builders::AcceptInvitationFluentBuilder::invitation_id) / [`set_invitation_id(Option<String>)`](crate::operation::accept_invitation::builders::AcceptInvitationFluentBuilder::set_invitation_id): <p>The unique identifier for the invitation to accept.</p>
    ///   - [`master_account(impl Into<String>)`](crate::operation::accept_invitation::builders::AcceptInvitationFluentBuilder::master_account) / [`set_master_account(Option<String>)`](crate::operation::accept_invitation::builders::AcceptInvitationFluentBuilder::set_master_account): <p>(Deprecated) The Amazon Web Services account ID for the account that sent the invitation. This property has been replaced by the administratorAccountId property and is retained only for backward compatibility.</p>
    /// - On success, responds with [`AcceptInvitationOutput`](crate::operation::accept_invitation::AcceptInvitationOutput)
    /// - On failure, responds with [`SdkError<AcceptInvitationError>`](crate::operation::accept_invitation::AcceptInvitationError)
    pub fn accept_invitation(
        &self,
    ) -> crate::operation::accept_invitation::builders::AcceptInvitationFluentBuilder {
        crate::operation::accept_invitation::builders::AcceptInvitationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
