// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies an Amazon Web Services account that owns S3 buckets for a classification job to analyze, and one or more specific buckets to analyze for that account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3BucketDefinitionForJob {
    /// <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>An array that lists the names of the buckets.</p>
    #[doc(hidden)]
    pub buckets: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl S3BucketDefinitionForJob {
    /// <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>An array that lists the names of the buckets.</p>
    pub fn buckets(&self) -> std::option::Option<&[std::string::String]> {
        self.buckets.as_deref()
    }
}
impl S3BucketDefinitionForJob {
    /// Creates a new builder-style object to manufacture [`S3BucketDefinitionForJob`](crate::types::S3BucketDefinitionForJob).
    pub fn builder() -> crate::types::builders::S3BucketDefinitionForJobBuilder {
        crate::types::builders::S3BucketDefinitionForJobBuilder::default()
    }
}

/// A builder for [`S3BucketDefinitionForJob`](crate::types::S3BucketDefinitionForJob).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3BucketDefinitionForJobBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) buckets: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl S3BucketDefinitionForJobBuilder {
    /// <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the Amazon Web Services account that owns the buckets.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// Appends an item to `buckets`.
    ///
    /// To override the contents of this collection use [`set_buckets`](Self::set_buckets).
    ///
    /// <p>An array that lists the names of the buckets.</p>
    pub fn buckets(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.buckets.unwrap_or_default();
        v.push(input.into());
        self.buckets = Some(v);
        self
    }
    /// <p>An array that lists the names of the buckets.</p>
    pub fn set_buckets(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.buckets = input;
        self
    }
    /// Consumes the builder and constructs a [`S3BucketDefinitionForJob`](crate::types::S3BucketDefinitionForJob).
    pub fn build(self) -> crate::types::S3BucketDefinitionForJob {
        crate::types::S3BucketDefinitionForJob {
            account_id: self.account_id,
            buckets: self.buckets,
        }
    }
}
