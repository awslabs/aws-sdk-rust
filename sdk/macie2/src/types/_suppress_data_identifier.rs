// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies a custom data identifier or managed data identifier that detected a type of sensitive data to start excluding or including in an S3 bucket's sensitivity score.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SuppressDataIdentifier {
    /// <p>The unique identifier for the custom data identifier or managed data identifier that detected the type of sensitive data to exclude or include in the score.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The type of data identifier that detected the sensitive data. Possible values are: CUSTOM, for a custom data identifier; and, MANAGED, for a managed data identifier.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::DataIdentifierType>,
}
impl SuppressDataIdentifier {
    /// <p>The unique identifier for the custom data identifier or managed data identifier that detected the type of sensitive data to exclude or include in the score.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The type of data identifier that detected the sensitive data. Possible values are: CUSTOM, for a custom data identifier; and, MANAGED, for a managed data identifier.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::DataIdentifierType> {
        self.r#type.as_ref()
    }
}
impl SuppressDataIdentifier {
    /// Creates a new builder-style object to manufacture [`SuppressDataIdentifier`](crate::types::SuppressDataIdentifier).
    pub fn builder() -> crate::types::builders::SuppressDataIdentifierBuilder {
        crate::types::builders::SuppressDataIdentifierBuilder::default()
    }
}

/// A builder for [`SuppressDataIdentifier`](crate::types::SuppressDataIdentifier).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SuppressDataIdentifierBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<crate::types::DataIdentifierType>,
}
impl SuppressDataIdentifierBuilder {
    /// <p>The unique identifier for the custom data identifier or managed data identifier that detected the type of sensitive data to exclude or include in the score.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the custom data identifier or managed data identifier that detected the type of sensitive data to exclude or include in the score.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The type of data identifier that detected the sensitive data. Possible values are: CUSTOM, for a custom data identifier; and, MANAGED, for a managed data identifier.</p>
    pub fn r#type(mut self, input: crate::types::DataIdentifierType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The type of data identifier that detected the sensitive data. Possible values are: CUSTOM, for a custom data identifier; and, MANAGED, for a managed data identifier.</p>
    pub fn set_type(
        mut self,
        input: std::option::Option<crate::types::DataIdentifierType>,
    ) -> Self {
        self.r#type = input;
        self
    }
    /// Consumes the builder and constructs a [`SuppressDataIdentifier`](crate::types::SuppressDataIdentifier).
    pub fn build(self) -> crate::types::SuppressDataIdentifier {
        crate::types::SuppressDataIdentifier {
            id: self.id,
            r#type: self.r#type,
        }
    }
}
