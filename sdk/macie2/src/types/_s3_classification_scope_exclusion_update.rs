// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies S3 buckets to add or remove from the exclusion list defined by the classification scope for an Amazon Macie account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3ClassificationScopeExclusionUpdate {
    /// <p>Depending on the value specified for the update operation (ClassificationScopeUpdateOperation), an array of strings that: lists the names of buckets to add or remove from the list, or specifies a new set of bucket names that overwrites all existing names in the list. Each string must be the full name of an S3 bucket. Values are case sensitive.</p>
    #[doc(hidden)]
    pub bucket_names: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Specifies how to apply the changes to the exclusion list. Valid values are:</p>
    /// <ul>
    /// <li><p>ADD - Append the specified bucket names to the current list.</p></li>
    /// <li><p>REMOVE - Remove the specified bucket names from the current list.</p></li>
    /// <li><p>REPLACE - Overwrite the current list with the specified list of bucket names. If you specify this value, Amazon Macie removes all existing names from the list and adds all the specified names to the list.</p></li>
    /// </ul>
    #[doc(hidden)]
    pub operation: std::option::Option<crate::types::ClassificationScopeUpdateOperation>,
}
impl S3ClassificationScopeExclusionUpdate {
    /// <p>Depending on the value specified for the update operation (ClassificationScopeUpdateOperation), an array of strings that: lists the names of buckets to add or remove from the list, or specifies a new set of bucket names that overwrites all existing names in the list. Each string must be the full name of an S3 bucket. Values are case sensitive.</p>
    pub fn bucket_names(&self) -> std::option::Option<&[std::string::String]> {
        self.bucket_names.as_deref()
    }
    /// <p>Specifies how to apply the changes to the exclusion list. Valid values are:</p>
    /// <ul>
    /// <li><p>ADD - Append the specified bucket names to the current list.</p></li>
    /// <li><p>REMOVE - Remove the specified bucket names from the current list.</p></li>
    /// <li><p>REPLACE - Overwrite the current list with the specified list of bucket names. If you specify this value, Amazon Macie removes all existing names from the list and adds all the specified names to the list.</p></li>
    /// </ul>
    pub fn operation(
        &self,
    ) -> std::option::Option<&crate::types::ClassificationScopeUpdateOperation> {
        self.operation.as_ref()
    }
}
impl S3ClassificationScopeExclusionUpdate {
    /// Creates a new builder-style object to manufacture [`S3ClassificationScopeExclusionUpdate`](crate::types::S3ClassificationScopeExclusionUpdate).
    pub fn builder() -> crate::types::builders::S3ClassificationScopeExclusionUpdateBuilder {
        crate::types::builders::S3ClassificationScopeExclusionUpdateBuilder::default()
    }
}

/// A builder for [`S3ClassificationScopeExclusionUpdate`](crate::types::S3ClassificationScopeExclusionUpdate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3ClassificationScopeExclusionUpdateBuilder {
    pub(crate) bucket_names: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) operation: std::option::Option<crate::types::ClassificationScopeUpdateOperation>,
}
impl S3ClassificationScopeExclusionUpdateBuilder {
    /// Appends an item to `bucket_names`.
    ///
    /// To override the contents of this collection use [`set_bucket_names`](Self::set_bucket_names).
    ///
    /// <p>Depending on the value specified for the update operation (ClassificationScopeUpdateOperation), an array of strings that: lists the names of buckets to add or remove from the list, or specifies a new set of bucket names that overwrites all existing names in the list. Each string must be the full name of an S3 bucket. Values are case sensitive.</p>
    pub fn bucket_names(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.bucket_names.unwrap_or_default();
        v.push(input.into());
        self.bucket_names = Some(v);
        self
    }
    /// <p>Depending on the value specified for the update operation (ClassificationScopeUpdateOperation), an array of strings that: lists the names of buckets to add or remove from the list, or specifies a new set of bucket names that overwrites all existing names in the list. Each string must be the full name of an S3 bucket. Values are case sensitive.</p>
    pub fn set_bucket_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.bucket_names = input;
        self
    }
    /// <p>Specifies how to apply the changes to the exclusion list. Valid values are:</p>
    /// <ul>
    /// <li><p>ADD - Append the specified bucket names to the current list.</p></li>
    /// <li><p>REMOVE - Remove the specified bucket names from the current list.</p></li>
    /// <li><p>REPLACE - Overwrite the current list with the specified list of bucket names. If you specify this value, Amazon Macie removes all existing names from the list and adds all the specified names to the list.</p></li>
    /// </ul>
    pub fn operation(mut self, input: crate::types::ClassificationScopeUpdateOperation) -> Self {
        self.operation = Some(input);
        self
    }
    /// <p>Specifies how to apply the changes to the exclusion list. Valid values are:</p>
    /// <ul>
    /// <li><p>ADD - Append the specified bucket names to the current list.</p></li>
    /// <li><p>REMOVE - Remove the specified bucket names from the current list.</p></li>
    /// <li><p>REPLACE - Overwrite the current list with the specified list of bucket names. If you specify this value, Amazon Macie removes all existing names from the list and adds all the specified names to the list.</p></li>
    /// </ul>
    pub fn set_operation(
        mut self,
        input: std::option::Option<crate::types::ClassificationScopeUpdateOperation>,
    ) -> Self {
        self.operation = input;
        self
    }
    /// Consumes the builder and constructs a [`S3ClassificationScopeExclusionUpdate`](crate::types::S3ClassificationScopeExclusionUpdate).
    pub fn build(self) -> crate::types::S3ClassificationScopeExclusionUpdate {
        crate::types::S3ClassificationScopeExclusionUpdate {
            bucket_names: self.bucket_names,
            operation: self.operation,
        }
    }
}
