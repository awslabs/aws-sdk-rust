// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about a managed data identifier. For additional information, see <a href="https://docs.aws.amazon.com/macie/latest/user/managed-data-identifiers.html">Using managed data identifiers</a> in the <i>Amazon Macie User Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ManagedDataIdentifierSummary {
    /// <p>The category of sensitive data that the managed data identifier detects: CREDENTIALS, for credentials data such as private keys or Amazon Web Services secret access keys; FINANCIAL_INFORMATION, for financial data such as credit card numbers; or, PERSONAL_INFORMATION, for personal health information, such as health insurance identification numbers, or personally identifiable information, such as passport numbers.</p>
    #[doc(hidden)]
    pub category: std::option::Option<crate::types::SensitiveDataItemCategory>,
    /// <p>The unique identifier for the managed data identifier. This is a string that describes the type of sensitive data that the managed data identifier detects. For example: OPENSSH_PRIVATE_KEY for OpenSSH private keys, CREDIT_CARD_NUMBER for credit card numbers, or USA_PASSPORT_NUMBER for US passport numbers.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
}
impl ManagedDataIdentifierSummary {
    /// <p>The category of sensitive data that the managed data identifier detects: CREDENTIALS, for credentials data such as private keys or Amazon Web Services secret access keys; FINANCIAL_INFORMATION, for financial data such as credit card numbers; or, PERSONAL_INFORMATION, for personal health information, such as health insurance identification numbers, or personally identifiable information, such as passport numbers.</p>
    pub fn category(&self) -> std::option::Option<&crate::types::SensitiveDataItemCategory> {
        self.category.as_ref()
    }
    /// <p>The unique identifier for the managed data identifier. This is a string that describes the type of sensitive data that the managed data identifier detects. For example: OPENSSH_PRIVATE_KEY for OpenSSH private keys, CREDIT_CARD_NUMBER for credit card numbers, or USA_PASSPORT_NUMBER for US passport numbers.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
}
impl ManagedDataIdentifierSummary {
    /// Creates a new builder-style object to manufacture [`ManagedDataIdentifierSummary`](crate::types::ManagedDataIdentifierSummary).
    pub fn builder() -> crate::types::builders::ManagedDataIdentifierSummaryBuilder {
        crate::types::builders::ManagedDataIdentifierSummaryBuilder::default()
    }
}

/// A builder for [`ManagedDataIdentifierSummary`](crate::types::ManagedDataIdentifierSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ManagedDataIdentifierSummaryBuilder {
    pub(crate) category: std::option::Option<crate::types::SensitiveDataItemCategory>,
    pub(crate) id: std::option::Option<std::string::String>,
}
impl ManagedDataIdentifierSummaryBuilder {
    /// <p>The category of sensitive data that the managed data identifier detects: CREDENTIALS, for credentials data such as private keys or Amazon Web Services secret access keys; FINANCIAL_INFORMATION, for financial data such as credit card numbers; or, PERSONAL_INFORMATION, for personal health information, such as health insurance identification numbers, or personally identifiable information, such as passport numbers.</p>
    pub fn category(mut self, input: crate::types::SensitiveDataItemCategory) -> Self {
        self.category = Some(input);
        self
    }
    /// <p>The category of sensitive data that the managed data identifier detects: CREDENTIALS, for credentials data such as private keys or Amazon Web Services secret access keys; FINANCIAL_INFORMATION, for financial data such as credit card numbers; or, PERSONAL_INFORMATION, for personal health information, such as health insurance identification numbers, or personally identifiable information, such as passport numbers.</p>
    pub fn set_category(
        mut self,
        input: std::option::Option<crate::types::SensitiveDataItemCategory>,
    ) -> Self {
        self.category = input;
        self
    }
    /// <p>The unique identifier for the managed data identifier. This is a string that describes the type of sensitive data that the managed data identifier detects. For example: OPENSSH_PRIVATE_KEY for OpenSSH private keys, CREDIT_CARD_NUMBER for credit card numbers, or USA_PASSPORT_NUMBER for US passport numbers.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the managed data identifier. This is a string that describes the type of sensitive data that the managed data identifier detects. For example: OPENSSH_PRIVATE_KEY for OpenSSH private keys, CREDIT_CARD_NUMBER for credit card numbers, or USA_PASSPORT_NUMBER for US passport numbers.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Consumes the builder and constructs a [`ManagedDataIdentifierSummary`](crate::types::ManagedDataIdentifierSummary).
    pub fn build(self) -> crate::types::ManagedDataIdentifierSummary {
        crate::types::ManagedDataIdentifierSummary {
            category: self.category,
            id: self.id,
        }
    }
}
