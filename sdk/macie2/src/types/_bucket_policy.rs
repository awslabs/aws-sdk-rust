// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the permissions settings of the bucket policy for an S3 bucket.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BucketPolicy {
    /// <p>Specifies whether the bucket policy allows the general public to have read access to the bucket.</p>
    #[doc(hidden)]
    pub allows_public_read_access: bool,
    /// <p>Specifies whether the bucket policy allows the general public to have write access to the bucket.</p>
    #[doc(hidden)]
    pub allows_public_write_access: bool,
}
impl BucketPolicy {
    /// <p>Specifies whether the bucket policy allows the general public to have read access to the bucket.</p>
    pub fn allows_public_read_access(&self) -> bool {
        self.allows_public_read_access
    }
    /// <p>Specifies whether the bucket policy allows the general public to have write access to the bucket.</p>
    pub fn allows_public_write_access(&self) -> bool {
        self.allows_public_write_access
    }
}
impl BucketPolicy {
    /// Creates a new builder-style object to manufacture [`BucketPolicy`](crate::types::BucketPolicy).
    pub fn builder() -> crate::types::builders::BucketPolicyBuilder {
        crate::types::builders::BucketPolicyBuilder::default()
    }
}

/// A builder for [`BucketPolicy`](crate::types::BucketPolicy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BucketPolicyBuilder {
    pub(crate) allows_public_read_access: std::option::Option<bool>,
    pub(crate) allows_public_write_access: std::option::Option<bool>,
}
impl BucketPolicyBuilder {
    /// <p>Specifies whether the bucket policy allows the general public to have read access to the bucket.</p>
    pub fn allows_public_read_access(mut self, input: bool) -> Self {
        self.allows_public_read_access = Some(input);
        self
    }
    /// <p>Specifies whether the bucket policy allows the general public to have read access to the bucket.</p>
    pub fn set_allows_public_read_access(mut self, input: std::option::Option<bool>) -> Self {
        self.allows_public_read_access = input;
        self
    }
    /// <p>Specifies whether the bucket policy allows the general public to have write access to the bucket.</p>
    pub fn allows_public_write_access(mut self, input: bool) -> Self {
        self.allows_public_write_access = Some(input);
        self
    }
    /// <p>Specifies whether the bucket policy allows the general public to have write access to the bucket.</p>
    pub fn set_allows_public_write_access(mut self, input: std::option::Option<bool>) -> Self {
        self.allows_public_write_access = input;
        self
    }
    /// Consumes the builder and constructs a [`BucketPolicy`](crate::types::BucketPolicy).
    pub fn build(self) -> crate::types::BucketPolicy {
        crate::types::BucketPolicy {
            allows_public_read_access: self.allows_public_read_access.unwrap_or_default(),
            allows_public_write_access: self.allows_public_write_access.unwrap_or_default(),
        }
    }
}
