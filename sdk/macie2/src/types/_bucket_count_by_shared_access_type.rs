// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the number of S3 buckets that are or aren't shared with other Amazon Web Services accounts.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BucketCountBySharedAccessType {
    /// <p>The total number of buckets that are shared with an Amazon Web Services account that isn't part of the same Amazon Macie organization.</p>
    #[doc(hidden)]
    pub external: i64,
    /// <p>The total number of buckets that are shared with an Amazon Web Services account that's part of the same Amazon Macie organization.</p>
    #[doc(hidden)]
    pub internal: i64,
    /// <p>The total number of buckets that aren't shared with other Amazon Web Services accounts.</p>
    #[doc(hidden)]
    pub not_shared: i64,
    /// <p>The total number of buckets that Amazon Macie wasn't able to evaluate shared access settings for. Macie can't determine whether these buckets are shared with other Amazon Web Services accounts.</p>
    #[doc(hidden)]
    pub unknown: i64,
}
impl BucketCountBySharedAccessType {
    /// <p>The total number of buckets that are shared with an Amazon Web Services account that isn't part of the same Amazon Macie organization.</p>
    pub fn external(&self) -> i64 {
        self.external
    }
    /// <p>The total number of buckets that are shared with an Amazon Web Services account that's part of the same Amazon Macie organization.</p>
    pub fn internal(&self) -> i64 {
        self.internal
    }
    /// <p>The total number of buckets that aren't shared with other Amazon Web Services accounts.</p>
    pub fn not_shared(&self) -> i64 {
        self.not_shared
    }
    /// <p>The total number of buckets that Amazon Macie wasn't able to evaluate shared access settings for. Macie can't determine whether these buckets are shared with other Amazon Web Services accounts.</p>
    pub fn unknown(&self) -> i64 {
        self.unknown
    }
}
impl BucketCountBySharedAccessType {
    /// Creates a new builder-style object to manufacture [`BucketCountBySharedAccessType`](crate::types::BucketCountBySharedAccessType).
    pub fn builder() -> crate::types::builders::BucketCountBySharedAccessTypeBuilder {
        crate::types::builders::BucketCountBySharedAccessTypeBuilder::default()
    }
}

/// A builder for [`BucketCountBySharedAccessType`](crate::types::BucketCountBySharedAccessType).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BucketCountBySharedAccessTypeBuilder {
    pub(crate) external: std::option::Option<i64>,
    pub(crate) internal: std::option::Option<i64>,
    pub(crate) not_shared: std::option::Option<i64>,
    pub(crate) unknown: std::option::Option<i64>,
}
impl BucketCountBySharedAccessTypeBuilder {
    /// <p>The total number of buckets that are shared with an Amazon Web Services account that isn't part of the same Amazon Macie organization.</p>
    pub fn external(mut self, input: i64) -> Self {
        self.external = Some(input);
        self
    }
    /// <p>The total number of buckets that are shared with an Amazon Web Services account that isn't part of the same Amazon Macie organization.</p>
    pub fn set_external(mut self, input: std::option::Option<i64>) -> Self {
        self.external = input;
        self
    }
    /// <p>The total number of buckets that are shared with an Amazon Web Services account that's part of the same Amazon Macie organization.</p>
    pub fn internal(mut self, input: i64) -> Self {
        self.internal = Some(input);
        self
    }
    /// <p>The total number of buckets that are shared with an Amazon Web Services account that's part of the same Amazon Macie organization.</p>
    pub fn set_internal(mut self, input: std::option::Option<i64>) -> Self {
        self.internal = input;
        self
    }
    /// <p>The total number of buckets that aren't shared with other Amazon Web Services accounts.</p>
    pub fn not_shared(mut self, input: i64) -> Self {
        self.not_shared = Some(input);
        self
    }
    /// <p>The total number of buckets that aren't shared with other Amazon Web Services accounts.</p>
    pub fn set_not_shared(mut self, input: std::option::Option<i64>) -> Self {
        self.not_shared = input;
        self
    }
    /// <p>The total number of buckets that Amazon Macie wasn't able to evaluate shared access settings for. Macie can't determine whether these buckets are shared with other Amazon Web Services accounts.</p>
    pub fn unknown(mut self, input: i64) -> Self {
        self.unknown = Some(input);
        self
    }
    /// <p>The total number of buckets that Amazon Macie wasn't able to evaluate shared access settings for. Macie can't determine whether these buckets are shared with other Amazon Web Services accounts.</p>
    pub fn set_unknown(mut self, input: std::option::Option<i64>) -> Self {
        self.unknown = input;
        self
    }
    /// Consumes the builder and constructs a [`BucketCountBySharedAccessType`](crate::types::BucketCountBySharedAccessType).
    pub fn build(self) -> crate::types::BucketCountBySharedAccessType {
        crate::types::BucketCountBySharedAccessType {
            external: self.external.unwrap_or_default(),
            internal: self.internal.unwrap_or_default(),
            not_shared: self.not_shared.unwrap_or_default(),
            unknown: self.unknown.unwrap_or_default(),
        }
    }
}
