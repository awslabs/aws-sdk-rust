// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about settings that define whether one or more objects in an S3 bucket are replicated to S3 buckets for other Amazon Web Services accounts and, if so, which accounts.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReplicationDetails {
    /// <p>Specifies whether the bucket is configured to replicate one or more objects to any destination.</p>
    #[doc(hidden)]
    pub replicated: bool,
    /// <p>Specifies whether the bucket is configured to replicate one or more objects to an Amazon Web Services account that isn't part of the same Amazon Macie organization.</p>
    #[doc(hidden)]
    pub replicated_externally: bool,
    /// <p>An array of Amazon Web Services account IDs, one for each Amazon Web Services account that the bucket is configured to replicate one or more objects to.</p>
    #[doc(hidden)]
    pub replication_accounts: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ReplicationDetails {
    /// <p>Specifies whether the bucket is configured to replicate one or more objects to any destination.</p>
    pub fn replicated(&self) -> bool {
        self.replicated
    }
    /// <p>Specifies whether the bucket is configured to replicate one or more objects to an Amazon Web Services account that isn't part of the same Amazon Macie organization.</p>
    pub fn replicated_externally(&self) -> bool {
        self.replicated_externally
    }
    /// <p>An array of Amazon Web Services account IDs, one for each Amazon Web Services account that the bucket is configured to replicate one or more objects to.</p>
    pub fn replication_accounts(&self) -> std::option::Option<&[std::string::String]> {
        self.replication_accounts.as_deref()
    }
}
impl ReplicationDetails {
    /// Creates a new builder-style object to manufacture [`ReplicationDetails`](crate::types::ReplicationDetails).
    pub fn builder() -> crate::types::builders::ReplicationDetailsBuilder {
        crate::types::builders::ReplicationDetailsBuilder::default()
    }
}

/// A builder for [`ReplicationDetails`](crate::types::ReplicationDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReplicationDetailsBuilder {
    pub(crate) replicated: std::option::Option<bool>,
    pub(crate) replicated_externally: std::option::Option<bool>,
    pub(crate) replication_accounts: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ReplicationDetailsBuilder {
    /// <p>Specifies whether the bucket is configured to replicate one or more objects to any destination.</p>
    pub fn replicated(mut self, input: bool) -> Self {
        self.replicated = Some(input);
        self
    }
    /// <p>Specifies whether the bucket is configured to replicate one or more objects to any destination.</p>
    pub fn set_replicated(mut self, input: std::option::Option<bool>) -> Self {
        self.replicated = input;
        self
    }
    /// <p>Specifies whether the bucket is configured to replicate one or more objects to an Amazon Web Services account that isn't part of the same Amazon Macie organization.</p>
    pub fn replicated_externally(mut self, input: bool) -> Self {
        self.replicated_externally = Some(input);
        self
    }
    /// <p>Specifies whether the bucket is configured to replicate one or more objects to an Amazon Web Services account that isn't part of the same Amazon Macie organization.</p>
    pub fn set_replicated_externally(mut self, input: std::option::Option<bool>) -> Self {
        self.replicated_externally = input;
        self
    }
    /// Appends an item to `replication_accounts`.
    ///
    /// To override the contents of this collection use [`set_replication_accounts`](Self::set_replication_accounts).
    ///
    /// <p>An array of Amazon Web Services account IDs, one for each Amazon Web Services account that the bucket is configured to replicate one or more objects to.</p>
    pub fn replication_accounts(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.replication_accounts.unwrap_or_default();
        v.push(input.into());
        self.replication_accounts = Some(v);
        self
    }
    /// <p>An array of Amazon Web Services account IDs, one for each Amazon Web Services account that the bucket is configured to replicate one or more objects to.</p>
    pub fn set_replication_accounts(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.replication_accounts = input;
        self
    }
    /// Consumes the builder and constructs a [`ReplicationDetails`](crate::types::ReplicationDetails).
    pub fn build(self) -> crate::types::ReplicationDetails {
        crate::types::ReplicationDetails {
            replicated: self.replicated.unwrap_or_default(),
            replicated_externally: self.replicated_externally.unwrap_or_default(),
            replication_accounts: self.replication_accounts,
        }
    }
}
