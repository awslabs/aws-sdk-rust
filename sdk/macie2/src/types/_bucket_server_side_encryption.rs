// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the default server-side encryption settings for an S3 bucket. For detailed information about these settings, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html">Setting default server-side encryption behavior for Amazon S3 buckets</a> in the <i>Amazon Simple Storage Service User Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BucketServerSideEncryption {
    /// <p>The Amazon Resource Name (ARN) or unique identifier (key ID) for the KMS key that's used by default to encrypt objects that are added to the bucket. This value is null if the bucket uses an Amazon S3 managed key to encrypt new objects or the bucket doesn't encrypt new objects by default.</p>
    #[doc(hidden)]
    pub kms_master_key_id: std::option::Option<std::string::String>,
    /// <p>The type of server-side encryption that's used by default when storing new objects in the bucket. Possible values are:</p>
    /// <ul>
    /// <li><p>AES256 - New objects are encrypted with an Amazon S3 managed key. They use SSE-S3 encryption.</p></li>
    /// <li><p>aws:kms - New objects are encrypted with an KMS key (kmsMasterKeyId), either an Amazon Web Services managed key or a customer managed key. They use SSE-KMS encryption.</p></li>
    /// <li><p>NONE - New objects aren't encrypted by default. Default encryption is disabled for the bucket.</p></li>
    /// </ul>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::Type>,
}
impl BucketServerSideEncryption {
    /// <p>The Amazon Resource Name (ARN) or unique identifier (key ID) for the KMS key that's used by default to encrypt objects that are added to the bucket. This value is null if the bucket uses an Amazon S3 managed key to encrypt new objects or the bucket doesn't encrypt new objects by default.</p>
    pub fn kms_master_key_id(&self) -> std::option::Option<&str> {
        self.kms_master_key_id.as_deref()
    }
    /// <p>The type of server-side encryption that's used by default when storing new objects in the bucket. Possible values are:</p>
    /// <ul>
    /// <li><p>AES256 - New objects are encrypted with an Amazon S3 managed key. They use SSE-S3 encryption.</p></li>
    /// <li><p>aws:kms - New objects are encrypted with an KMS key (kmsMasterKeyId), either an Amazon Web Services managed key or a customer managed key. They use SSE-KMS encryption.</p></li>
    /// <li><p>NONE - New objects aren't encrypted by default. Default encryption is disabled for the bucket.</p></li>
    /// </ul>
    pub fn r#type(&self) -> std::option::Option<&crate::types::Type> {
        self.r#type.as_ref()
    }
}
impl BucketServerSideEncryption {
    /// Creates a new builder-style object to manufacture [`BucketServerSideEncryption`](crate::types::BucketServerSideEncryption).
    pub fn builder() -> crate::types::builders::BucketServerSideEncryptionBuilder {
        crate::types::builders::BucketServerSideEncryptionBuilder::default()
    }
}

/// A builder for [`BucketServerSideEncryption`](crate::types::BucketServerSideEncryption).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BucketServerSideEncryptionBuilder {
    pub(crate) kms_master_key_id: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<crate::types::Type>,
}
impl BucketServerSideEncryptionBuilder {
    /// <p>The Amazon Resource Name (ARN) or unique identifier (key ID) for the KMS key that's used by default to encrypt objects that are added to the bucket. This value is null if the bucket uses an Amazon S3 managed key to encrypt new objects or the bucket doesn't encrypt new objects by default.</p>
    pub fn kms_master_key_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.kms_master_key_id = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) or unique identifier (key ID) for the KMS key that's used by default to encrypt objects that are added to the bucket. This value is null if the bucket uses an Amazon S3 managed key to encrypt new objects or the bucket doesn't encrypt new objects by default.</p>
    pub fn set_kms_master_key_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.kms_master_key_id = input;
        self
    }
    /// <p>The type of server-side encryption that's used by default when storing new objects in the bucket. Possible values are:</p>
    /// <ul>
    /// <li><p>AES256 - New objects are encrypted with an Amazon S3 managed key. They use SSE-S3 encryption.</p></li>
    /// <li><p>aws:kms - New objects are encrypted with an KMS key (kmsMasterKeyId), either an Amazon Web Services managed key or a customer managed key. They use SSE-KMS encryption.</p></li>
    /// <li><p>NONE - New objects aren't encrypted by default. Default encryption is disabled for the bucket.</p></li>
    /// </ul>
    pub fn r#type(mut self, input: crate::types::Type) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The type of server-side encryption that's used by default when storing new objects in the bucket. Possible values are:</p>
    /// <ul>
    /// <li><p>AES256 - New objects are encrypted with an Amazon S3 managed key. They use SSE-S3 encryption.</p></li>
    /// <li><p>aws:kms - New objects are encrypted with an KMS key (kmsMasterKeyId), either an Amazon Web Services managed key or a customer managed key. They use SSE-KMS encryption.</p></li>
    /// <li><p>NONE - New objects aren't encrypted by default. Default encryption is disabled for the bucket.</p></li>
    /// </ul>
    pub fn set_type(mut self, input: std::option::Option<crate::types::Type>) -> Self {
        self.r#type = input;
        self
    }
    /// Consumes the builder and constructs a [`BucketServerSideEncryption`](crate::types::BucketServerSideEncryption).
    pub fn build(self) -> crate::types::BucketServerSideEncryption {
        crate::types::BucketServerSideEncryption {
            kms_master_key_id: self.kms_master_key_id,
            r#type: self.r#type,
        }
    }
}
