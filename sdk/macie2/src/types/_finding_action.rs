// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about an action that occurred for a resource and produced a policy finding.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FindingAction {
    /// <p>The type of action that occurred for the affected resource. This value is typically AWS_API_CALL, which indicates that an entity invoked an API operation for the resource.</p>
    #[doc(hidden)]
    pub action_type: std::option::Option<crate::types::FindingActionType>,
    /// <p>The invocation details of the API operation that an entity invoked for the affected resource, if the value for the actionType property is AWS_API_CALL.</p>
    #[doc(hidden)]
    pub api_call_details: std::option::Option<crate::types::ApiCallDetails>,
}
impl FindingAction {
    /// <p>The type of action that occurred for the affected resource. This value is typically AWS_API_CALL, which indicates that an entity invoked an API operation for the resource.</p>
    pub fn action_type(&self) -> std::option::Option<&crate::types::FindingActionType> {
        self.action_type.as_ref()
    }
    /// <p>The invocation details of the API operation that an entity invoked for the affected resource, if the value for the actionType property is AWS_API_CALL.</p>
    pub fn api_call_details(&self) -> std::option::Option<&crate::types::ApiCallDetails> {
        self.api_call_details.as_ref()
    }
}
impl FindingAction {
    /// Creates a new builder-style object to manufacture [`FindingAction`](crate::types::FindingAction).
    pub fn builder() -> crate::types::builders::FindingActionBuilder {
        crate::types::builders::FindingActionBuilder::default()
    }
}

/// A builder for [`FindingAction`](crate::types::FindingAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FindingActionBuilder {
    pub(crate) action_type: std::option::Option<crate::types::FindingActionType>,
    pub(crate) api_call_details: std::option::Option<crate::types::ApiCallDetails>,
}
impl FindingActionBuilder {
    /// <p>The type of action that occurred for the affected resource. This value is typically AWS_API_CALL, which indicates that an entity invoked an API operation for the resource.</p>
    pub fn action_type(mut self, input: crate::types::FindingActionType) -> Self {
        self.action_type = Some(input);
        self
    }
    /// <p>The type of action that occurred for the affected resource. This value is typically AWS_API_CALL, which indicates that an entity invoked an API operation for the resource.</p>
    pub fn set_action_type(
        mut self,
        input: std::option::Option<crate::types::FindingActionType>,
    ) -> Self {
        self.action_type = input;
        self
    }
    /// <p>The invocation details of the API operation that an entity invoked for the affected resource, if the value for the actionType property is AWS_API_CALL.</p>
    pub fn api_call_details(mut self, input: crate::types::ApiCallDetails) -> Self {
        self.api_call_details = Some(input);
        self
    }
    /// <p>The invocation details of the API operation that an entity invoked for the affected resource, if the value for the actionType property is AWS_API_CALL.</p>
    pub fn set_api_call_details(
        mut self,
        input: std::option::Option<crate::types::ApiCallDetails>,
    ) -> Self {
        self.api_call_details = input;
        self
    }
    /// Consumes the builder and constructs a [`FindingAction`](crate::types::FindingAction).
    pub fn build(self) -> crate::types::FindingAction {
        crate::types::FindingAction {
            action_type: self.action_type,
            api_call_details: self.api_call_details,
        }
    }
}
