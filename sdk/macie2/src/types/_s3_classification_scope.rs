// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the S3 buckets that are excluded from automated sensitive data discovery for an Amazon Macie account.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct S3ClassificationScope {
    /// <p>The S3 buckets that are excluded.</p>
    pub excludes: ::std::option::Option<crate::types::S3ClassificationScopeExclusion>,
}
impl S3ClassificationScope {
    /// <p>The S3 buckets that are excluded.</p>
    pub fn excludes(&self) -> ::std::option::Option<&crate::types::S3ClassificationScopeExclusion> {
        self.excludes.as_ref()
    }
}
impl S3ClassificationScope {
    /// Creates a new builder-style object to manufacture [`S3ClassificationScope`](crate::types::S3ClassificationScope).
    pub fn builder() -> crate::types::builders::S3ClassificationScopeBuilder {
        crate::types::builders::S3ClassificationScopeBuilder::default()
    }
}

/// A builder for [`S3ClassificationScope`](crate::types::S3ClassificationScope).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct S3ClassificationScopeBuilder {
    pub(crate) excludes: ::std::option::Option<crate::types::S3ClassificationScopeExclusion>,
}
impl S3ClassificationScopeBuilder {
    /// <p>The S3 buckets that are excluded.</p>
    /// This field is required.
    pub fn excludes(mut self, input: crate::types::S3ClassificationScopeExclusion) -> Self {
        self.excludes = ::std::option::Option::Some(input);
        self
    }
    /// <p>The S3 buckets that are excluded.</p>
    pub fn set_excludes(mut self, input: ::std::option::Option<crate::types::S3ClassificationScopeExclusion>) -> Self {
        self.excludes = input;
        self
    }
    /// <p>The S3 buckets that are excluded.</p>
    pub fn get_excludes(&self) -> &::std::option::Option<crate::types::S3ClassificationScopeExclusion> {
        &self.excludes
    }
    /// Consumes the builder and constructs a [`S3ClassificationScope`](crate::types::S3ClassificationScope).
    pub fn build(self) -> crate::types::S3ClassificationScope {
        crate::types::S3ClassificationScope { excludes: self.excludes }
    }
}
