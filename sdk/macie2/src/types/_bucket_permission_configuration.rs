// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the account-level and bucket-level permissions settings for an S3 bucket.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BucketPermissionConfiguration {
    /// <p>The account-level permissions settings that apply to the bucket.</p>
    #[doc(hidden)]
    pub account_level_permissions: std::option::Option<crate::types::AccountLevelPermissions>,
    /// <p>The bucket-level permissions settings for the bucket.</p>
    #[doc(hidden)]
    pub bucket_level_permissions: std::option::Option<crate::types::BucketLevelPermissions>,
}
impl BucketPermissionConfiguration {
    /// <p>The account-level permissions settings that apply to the bucket.</p>
    pub fn account_level_permissions(
        &self,
    ) -> std::option::Option<&crate::types::AccountLevelPermissions> {
        self.account_level_permissions.as_ref()
    }
    /// <p>The bucket-level permissions settings for the bucket.</p>
    pub fn bucket_level_permissions(
        &self,
    ) -> std::option::Option<&crate::types::BucketLevelPermissions> {
        self.bucket_level_permissions.as_ref()
    }
}
impl BucketPermissionConfiguration {
    /// Creates a new builder-style object to manufacture [`BucketPermissionConfiguration`](crate::types::BucketPermissionConfiguration).
    pub fn builder() -> crate::types::builders::BucketPermissionConfigurationBuilder {
        crate::types::builders::BucketPermissionConfigurationBuilder::default()
    }
}

/// A builder for [`BucketPermissionConfiguration`](crate::types::BucketPermissionConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BucketPermissionConfigurationBuilder {
    pub(crate) account_level_permissions:
        std::option::Option<crate::types::AccountLevelPermissions>,
    pub(crate) bucket_level_permissions: std::option::Option<crate::types::BucketLevelPermissions>,
}
impl BucketPermissionConfigurationBuilder {
    /// <p>The account-level permissions settings that apply to the bucket.</p>
    pub fn account_level_permissions(
        mut self,
        input: crate::types::AccountLevelPermissions,
    ) -> Self {
        self.account_level_permissions = Some(input);
        self
    }
    /// <p>The account-level permissions settings that apply to the bucket.</p>
    pub fn set_account_level_permissions(
        mut self,
        input: std::option::Option<crate::types::AccountLevelPermissions>,
    ) -> Self {
        self.account_level_permissions = input;
        self
    }
    /// <p>The bucket-level permissions settings for the bucket.</p>
    pub fn bucket_level_permissions(mut self, input: crate::types::BucketLevelPermissions) -> Self {
        self.bucket_level_permissions = Some(input);
        self
    }
    /// <p>The bucket-level permissions settings for the bucket.</p>
    pub fn set_bucket_level_permissions(
        mut self,
        input: std::option::Option<crate::types::BucketLevelPermissions>,
    ) -> Self {
        self.bucket_level_permissions = input;
        self
    }
    /// Consumes the builder and constructs a [`BucketPermissionConfiguration`](crate::types::BucketPermissionConfiguration).
    pub fn build(self) -> crate::types::BucketPermissionConfiguration {
        crate::types::BucketPermissionConfiguration {
            account_level_permissions: self.account_level_permissions,
            bucket_level_permissions: self.bucket_level_permissions,
        }
    }
}
