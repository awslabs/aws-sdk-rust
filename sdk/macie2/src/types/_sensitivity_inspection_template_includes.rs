// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the allow lists, custom data identifiers, and managed data identifiers to include (use) when performing automated sensitive data discovery for an Amazon Macie account. The configuration must specify at least one custom data identifier or managed data identifier. For information about the managed data identifiers that Amazon Macie currently provides, see <a href="https://docs.aws.amazon.com/macie/latest/user/managed-data-identifiers.html">Using managed data identifiers</a> in the <i>Amazon Macie User Guide</i>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SensitivityInspectionTemplateIncludes {
    /// <p>An array of unique identifiers, one for each allow list to include.</p>
    pub allow_list_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>An array of unique identifiers, one for each custom data identifier to include.</p>
    pub custom_data_identifier_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>An array of unique identifiers, one for each managed data identifier to include.</p>
    /// <p>Amazon Macie uses these managed data identifiers in addition to managed data identifiers that are subsequently released and recommended for automated sensitive data discovery. To retrieve a list of valid values for the managed data identifiers that are currently available, use the ListManagedDataIdentifiers operation.</p> <para />
    pub managed_data_identifier_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl SensitivityInspectionTemplateIncludes {
    /// <p>An array of unique identifiers, one for each allow list to include.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.allow_list_ids.is_none()`.
    pub fn allow_list_ids(&self) -> &[::std::string::String] {
        self.allow_list_ids.as_deref().unwrap_or_default()
    }
    /// <p>An array of unique identifiers, one for each custom data identifier to include.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.custom_data_identifier_ids.is_none()`.
    pub fn custom_data_identifier_ids(&self) -> &[::std::string::String] {
        self.custom_data_identifier_ids.as_deref().unwrap_or_default()
    }
    /// <p>An array of unique identifiers, one for each managed data identifier to include.</p>
    /// <p>Amazon Macie uses these managed data identifiers in addition to managed data identifiers that are subsequently released and recommended for automated sensitive data discovery. To retrieve a list of valid values for the managed data identifiers that are currently available, use the ListManagedDataIdentifiers operation.</p> <para />
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.managed_data_identifier_ids.is_none()`.
    pub fn managed_data_identifier_ids(&self) -> &[::std::string::String] {
        self.managed_data_identifier_ids.as_deref().unwrap_or_default()
    }
}
impl SensitivityInspectionTemplateIncludes {
    /// Creates a new builder-style object to manufacture [`SensitivityInspectionTemplateIncludes`](crate::types::SensitivityInspectionTemplateIncludes).
    pub fn builder() -> crate::types::builders::SensitivityInspectionTemplateIncludesBuilder {
        crate::types::builders::SensitivityInspectionTemplateIncludesBuilder::default()
    }
}

/// A builder for [`SensitivityInspectionTemplateIncludes`](crate::types::SensitivityInspectionTemplateIncludes).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SensitivityInspectionTemplateIncludesBuilder {
    pub(crate) allow_list_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) custom_data_identifier_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) managed_data_identifier_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl SensitivityInspectionTemplateIncludesBuilder {
    /// Appends an item to `allow_list_ids`.
    ///
    /// To override the contents of this collection use [`set_allow_list_ids`](Self::set_allow_list_ids).
    ///
    /// <p>An array of unique identifiers, one for each allow list to include.</p>
    pub fn allow_list_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.allow_list_ids.unwrap_or_default();
        v.push(input.into());
        self.allow_list_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of unique identifiers, one for each allow list to include.</p>
    pub fn set_allow_list_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.allow_list_ids = input;
        self
    }
    /// <p>An array of unique identifiers, one for each allow list to include.</p>
    pub fn get_allow_list_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.allow_list_ids
    }
    /// Appends an item to `custom_data_identifier_ids`.
    ///
    /// To override the contents of this collection use [`set_custom_data_identifier_ids`](Self::set_custom_data_identifier_ids).
    ///
    /// <p>An array of unique identifiers, one for each custom data identifier to include.</p>
    pub fn custom_data_identifier_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.custom_data_identifier_ids.unwrap_or_default();
        v.push(input.into());
        self.custom_data_identifier_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of unique identifiers, one for each custom data identifier to include.</p>
    pub fn set_custom_data_identifier_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.custom_data_identifier_ids = input;
        self
    }
    /// <p>An array of unique identifiers, one for each custom data identifier to include.</p>
    pub fn get_custom_data_identifier_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.custom_data_identifier_ids
    }
    /// Appends an item to `managed_data_identifier_ids`.
    ///
    /// To override the contents of this collection use [`set_managed_data_identifier_ids`](Self::set_managed_data_identifier_ids).
    ///
    /// <p>An array of unique identifiers, one for each managed data identifier to include.</p>
    /// <p>Amazon Macie uses these managed data identifiers in addition to managed data identifiers that are subsequently released and recommended for automated sensitive data discovery. To retrieve a list of valid values for the managed data identifiers that are currently available, use the ListManagedDataIdentifiers operation.</p> <para />
    pub fn managed_data_identifier_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.managed_data_identifier_ids.unwrap_or_default();
        v.push(input.into());
        self.managed_data_identifier_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of unique identifiers, one for each managed data identifier to include.</p>
    /// <p>Amazon Macie uses these managed data identifiers in addition to managed data identifiers that are subsequently released and recommended for automated sensitive data discovery. To retrieve a list of valid values for the managed data identifiers that are currently available, use the ListManagedDataIdentifiers operation.</p> <para />
    pub fn set_managed_data_identifier_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.managed_data_identifier_ids = input;
        self
    }
    /// <p>An array of unique identifiers, one for each managed data identifier to include.</p>
    /// <p>Amazon Macie uses these managed data identifiers in addition to managed data identifiers that are subsequently released and recommended for automated sensitive data discovery. To retrieve a list of valid values for the managed data identifiers that are currently available, use the ListManagedDataIdentifiers operation.</p> <para />
    pub fn get_managed_data_identifier_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.managed_data_identifier_ids
    }
    /// Consumes the builder and constructs a [`SensitivityInspectionTemplateIncludes`](crate::types::SensitivityInspectionTemplateIncludes).
    pub fn build(self) -> crate::types::SensitivityInspectionTemplateIncludes {
        crate::types::SensitivityInspectionTemplateIncludes {
            allow_list_ids: self.allow_list_ids,
            custom_data_identifier_ids: self.custom_data_identifier_ids,
            managed_data_identifier_ids: self.managed_data_identifier_ids,
        }
    }
}
