// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A cluster endpoint. Specify an endpoint when you want to set or retrieve a routing control state in the cluster.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClusterEndpoint {
    /// <p>A cluster endpoint. Specify an endpoint and Amazon Web Services Region when you want to set or retrieve a routing control state in the cluster.</p>
    /// <p>To get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Routing Control Actions.</p>
    #[doc(hidden)]
    pub endpoint: std::option::Option<std::string::String>,
    /// <p>The Amazon Web Services Region for a cluster endpoint.</p>
    #[doc(hidden)]
    pub region: std::option::Option<std::string::String>,
}
impl ClusterEndpoint {
    /// <p>A cluster endpoint. Specify an endpoint and Amazon Web Services Region when you want to set or retrieve a routing control state in the cluster.</p>
    /// <p>To get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Routing Control Actions.</p>
    pub fn endpoint(&self) -> std::option::Option<&str> {
        self.endpoint.as_deref()
    }
    /// <p>The Amazon Web Services Region for a cluster endpoint.</p>
    pub fn region(&self) -> std::option::Option<&str> {
        self.region.as_deref()
    }
}
impl ClusterEndpoint {
    /// Creates a new builder-style object to manufacture [`ClusterEndpoint`](crate::types::ClusterEndpoint).
    pub fn builder() -> crate::types::builders::ClusterEndpointBuilder {
        crate::types::builders::ClusterEndpointBuilder::default()
    }
}

/// A builder for [`ClusterEndpoint`](crate::types::ClusterEndpoint).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClusterEndpointBuilder {
    pub(crate) endpoint: std::option::Option<std::string::String>,
    pub(crate) region: std::option::Option<std::string::String>,
}
impl ClusterEndpointBuilder {
    /// <p>A cluster endpoint. Specify an endpoint and Amazon Web Services Region when you want to set or retrieve a routing control state in the cluster.</p>
    /// <p>To get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Routing Control Actions.</p>
    pub fn endpoint(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint = Some(input.into());
        self
    }
    /// <p>A cluster endpoint. Specify an endpoint and Amazon Web Services Region when you want to set or retrieve a routing control state in the cluster.</p>
    /// <p>To get or update the routing control state, see the Amazon Route 53 Application Recovery Controller Routing Control Actions.</p>
    pub fn set_endpoint(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint = input;
        self
    }
    /// <p>The Amazon Web Services Region for a cluster endpoint.</p>
    pub fn region(mut self, input: impl Into<std::string::String>) -> Self {
        self.region = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Region for a cluster endpoint.</p>
    pub fn set_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// Consumes the builder and constructs a [`ClusterEndpoint`](crate::types::ClusterEndpoint).
    pub fn build(self) -> crate::types::ClusterEndpoint {
        crate::types::ClusterEndpoint {
            endpoint: self.endpoint,
            region: self.region,
        }
    }
}
