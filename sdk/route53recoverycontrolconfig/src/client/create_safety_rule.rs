// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSafetyRule`](crate::client::fluent_builders::CreateSafetyRule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`assertion_rule(NewAssertionRule)`](crate::client::fluent_builders::CreateSafetyRule::assertion_rule) / [`set_assertion_rule(Option<NewAssertionRule>)`](crate::client::fluent_builders::CreateSafetyRule::set_assertion_rule): <p>The assertion rule requested.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateSafetyRule::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateSafetyRule::set_client_token): <p>A unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request with an action, specify a client token in the request.</p>
    ///   - [`gating_rule(NewGatingRule)`](crate::client::fluent_builders::CreateSafetyRule::gating_rule) / [`set_gating_rule(Option<NewGatingRule>)`](crate::client::fluent_builders::CreateSafetyRule::set_gating_rule): <p>The gating rule requested.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateSafetyRule::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateSafetyRule::set_tags): <p>The tags associated with the safety rule.</p>
    /// - On success, responds with [`CreateSafetyRuleOutput`](crate::output::CreateSafetyRuleOutput) with field(s):
    ///   - [`assertion_rule(Option<AssertionRule>)`](crate::output::CreateSafetyRuleOutput::assertion_rule): <p>The assertion rule created.</p>
    ///   - [`gating_rule(Option<GatingRule>)`](crate::output::CreateSafetyRuleOutput::gating_rule): <p>The gating rule created.</p>
    /// - On failure, responds with [`SdkError<CreateSafetyRuleError>`](crate::error::CreateSafetyRuleError)
    pub fn create_safety_rule(&self) -> crate::client::fluent_builders::CreateSafetyRule {
        crate::client::fluent_builders::CreateSafetyRule::new(self.handle.clone())
    }
}
