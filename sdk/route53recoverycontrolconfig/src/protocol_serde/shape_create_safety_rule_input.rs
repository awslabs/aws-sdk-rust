// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_safety_rule_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_safety_rule::CreateSafetyRuleInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.assertion_rule {
        #[allow(unused_mut)]
        let mut object_2 = object.key("AssertionRule").start_object();
        crate::protocol_serde::shape_new_assertion_rule::ser_new_assertion_rule(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.client_token {
        object.key("ClientToken").string(var_3.as_str());
    }
    if let Some(var_4) = &input.gating_rule {
        #[allow(unused_mut)]
        let mut object_5 = object.key("GatingRule").start_object();
        crate::protocol_serde::shape_new_gating_rule::ser_new_gating_rule(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.tags {
        #[allow(unused_mut)]
        let mut object_7 = object.key("Tags").start_object();
        for (key_8, value_9) in var_6 {
            {
                object_7.key(key_8.as_str()).string(value_9.as_str());
            }
        }
        object_7.finish();
    }
    Ok(())
}
