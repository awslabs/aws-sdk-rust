// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_new_assertion_rule(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::NewAssertionRule,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.asserted_controls {
        let mut array_2 = object.key("AssertedControls").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.control_panel_arn {
        object.key("ControlPanelArn").string(var_4.as_str());
    }
    if let Some(var_5) = &input.name {
        object.key("Name").string(var_5.as_str());
    }
    if let Some(var_6) = &input.rule_config {
        #[allow(unused_mut)]
        let mut object_7 = object.key("RuleConfig").start_object();
        crate::protocol_serde::shape_rule_config::ser_rule_config(&mut object_7, var_6)?;
        object_7.finish();
    }
    {
        object.key("WaitPeriodMs").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.wait_period_ms).into()),
        );
    }
    Ok(())
}
