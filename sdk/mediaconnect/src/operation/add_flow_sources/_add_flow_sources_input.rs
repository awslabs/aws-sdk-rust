// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// A request to add sources to the flow.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AddFlowSourcesInput {
    /// The flow that you want to mutate.
    #[doc(hidden)]
    pub flow_arn: std::option::Option<std::string::String>,
    /// A list of sources that you want to add.
    #[doc(hidden)]
    pub sources: std::option::Option<std::vec::Vec<crate::types::SetSourceRequest>>,
}
impl AddFlowSourcesInput {
    /// The flow that you want to mutate.
    pub fn flow_arn(&self) -> std::option::Option<&str> {
        self.flow_arn.as_deref()
    }
    /// A list of sources that you want to add.
    pub fn sources(&self) -> std::option::Option<&[crate::types::SetSourceRequest]> {
        self.sources.as_deref()
    }
}
impl AddFlowSourcesInput {
    /// Creates a new builder-style object to manufacture [`AddFlowSourcesInput`](crate::operation::add_flow_sources::AddFlowSourcesInput).
    pub fn builder() -> crate::operation::add_flow_sources::builders::AddFlowSourcesInputBuilder {
        crate::operation::add_flow_sources::builders::AddFlowSourcesInputBuilder::default()
    }
}

/// A builder for [`AddFlowSourcesInput`](crate::operation::add_flow_sources::AddFlowSourcesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AddFlowSourcesInputBuilder {
    pub(crate) flow_arn: std::option::Option<std::string::String>,
    pub(crate) sources: std::option::Option<std::vec::Vec<crate::types::SetSourceRequest>>,
}
impl AddFlowSourcesInputBuilder {
    /// The flow that you want to mutate.
    pub fn flow_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.flow_arn = Some(input.into());
        self
    }
    /// The flow that you want to mutate.
    pub fn set_flow_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.flow_arn = input;
        self
    }
    /// Appends an item to `sources`.
    ///
    /// To override the contents of this collection use [`set_sources`](Self::set_sources).
    ///
    /// A list of sources that you want to add.
    pub fn sources(mut self, input: crate::types::SetSourceRequest) -> Self {
        let mut v = self.sources.unwrap_or_default();
        v.push(input);
        self.sources = Some(v);
        self
    }
    /// A list of sources that you want to add.
    pub fn set_sources(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::SetSourceRequest>>,
    ) -> Self {
        self.sources = input;
        self
    }
    /// Consumes the builder and constructs a [`AddFlowSourcesInput`](crate::operation::add_flow_sources::AddFlowSourcesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::add_flow_sources::AddFlowSourcesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::add_flow_sources::AddFlowSourcesInput {
            flow_arn: self.flow_arn,
            sources: self.sources,
        })
    }
}
