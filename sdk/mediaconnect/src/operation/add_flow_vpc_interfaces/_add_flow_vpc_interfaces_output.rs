// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AddFlowVpcInterfacesOutput {
    /// The ARN of the flow that these VPC interfaces were added to.
    #[doc(hidden)]
    pub flow_arn: std::option::Option<std::string::String>,
    /// The details of the newly added VPC interfaces.
    #[doc(hidden)]
    pub vpc_interfaces: std::option::Option<std::vec::Vec<crate::types::VpcInterface>>,
    _request_id: Option<String>,
}
impl AddFlowVpcInterfacesOutput {
    /// The ARN of the flow that these VPC interfaces were added to.
    pub fn flow_arn(&self) -> std::option::Option<&str> {
        self.flow_arn.as_deref()
    }
    /// The details of the newly added VPC interfaces.
    pub fn vpc_interfaces(&self) -> std::option::Option<&[crate::types::VpcInterface]> {
        self.vpc_interfaces.as_deref()
    }
}
impl aws_http::request_id::RequestId for AddFlowVpcInterfacesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AddFlowVpcInterfacesOutput {
    /// Creates a new builder-style object to manufacture [`AddFlowVpcInterfacesOutput`](crate::operation::add_flow_vpc_interfaces::AddFlowVpcInterfacesOutput).
    pub fn builder(
    ) -> crate::operation::add_flow_vpc_interfaces::builders::AddFlowVpcInterfacesOutputBuilder
    {
        crate::operation::add_flow_vpc_interfaces::builders::AddFlowVpcInterfacesOutputBuilder::default()
    }
}

/// A builder for [`AddFlowVpcInterfacesOutput`](crate::operation::add_flow_vpc_interfaces::AddFlowVpcInterfacesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AddFlowVpcInterfacesOutputBuilder {
    pub(crate) flow_arn: std::option::Option<std::string::String>,
    pub(crate) vpc_interfaces: std::option::Option<std::vec::Vec<crate::types::VpcInterface>>,
    _request_id: Option<String>,
}
impl AddFlowVpcInterfacesOutputBuilder {
    /// The ARN of the flow that these VPC interfaces were added to.
    pub fn flow_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.flow_arn = Some(input.into());
        self
    }
    /// The ARN of the flow that these VPC interfaces were added to.
    pub fn set_flow_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.flow_arn = input;
        self
    }
    /// Appends an item to `vpc_interfaces`.
    ///
    /// To override the contents of this collection use [`set_vpc_interfaces`](Self::set_vpc_interfaces).
    ///
    /// The details of the newly added VPC interfaces.
    pub fn vpc_interfaces(mut self, input: crate::types::VpcInterface) -> Self {
        let mut v = self.vpc_interfaces.unwrap_or_default();
        v.push(input);
        self.vpc_interfaces = Some(v);
        self
    }
    /// The details of the newly added VPC interfaces.
    pub fn set_vpc_interfaces(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::VpcInterface>>,
    ) -> Self {
        self.vpc_interfaces = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AddFlowVpcInterfacesOutput`](crate::operation::add_flow_vpc_interfaces::AddFlowVpcInterfacesOutput).
    pub fn build(self) -> crate::operation::add_flow_vpc_interfaces::AddFlowVpcInterfacesOutput {
        crate::operation::add_flow_vpc_interfaces::AddFlowVpcInterfacesOutput {
            flow_arn: self.flow_arn,
            vpc_interfaces: self.vpc_interfaces,
            _request_id: self._request_id,
        }
    }
}
