// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// A request to add media streams to the flow.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AddFlowMediaStreamsInput {
    /// The Amazon Resource Name (ARN) of the flow.
    #[doc(hidden)]
    pub flow_arn: std::option::Option<std::string::String>,
    /// The media streams that you want to add to the flow.
    #[doc(hidden)]
    pub media_streams: std::option::Option<std::vec::Vec<crate::types::AddMediaStreamRequest>>,
}
impl AddFlowMediaStreamsInput {
    /// The Amazon Resource Name (ARN) of the flow.
    pub fn flow_arn(&self) -> std::option::Option<&str> {
        self.flow_arn.as_deref()
    }
    /// The media streams that you want to add to the flow.
    pub fn media_streams(&self) -> std::option::Option<&[crate::types::AddMediaStreamRequest]> {
        self.media_streams.as_deref()
    }
}
impl AddFlowMediaStreamsInput {
    /// Creates a new builder-style object to manufacture [`AddFlowMediaStreamsInput`](crate::operation::add_flow_media_streams::AddFlowMediaStreamsInput).
    pub fn builder(
    ) -> crate::operation::add_flow_media_streams::builders::AddFlowMediaStreamsInputBuilder {
        crate::operation::add_flow_media_streams::builders::AddFlowMediaStreamsInputBuilder::default(
        )
    }
}

/// A builder for [`AddFlowMediaStreamsInput`](crate::operation::add_flow_media_streams::AddFlowMediaStreamsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AddFlowMediaStreamsInputBuilder {
    pub(crate) flow_arn: std::option::Option<std::string::String>,
    pub(crate) media_streams:
        std::option::Option<std::vec::Vec<crate::types::AddMediaStreamRequest>>,
}
impl AddFlowMediaStreamsInputBuilder {
    /// The Amazon Resource Name (ARN) of the flow.
    pub fn flow_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.flow_arn = Some(input.into());
        self
    }
    /// The Amazon Resource Name (ARN) of the flow.
    pub fn set_flow_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.flow_arn = input;
        self
    }
    /// Appends an item to `media_streams`.
    ///
    /// To override the contents of this collection use [`set_media_streams`](Self::set_media_streams).
    ///
    /// The media streams that you want to add to the flow.
    pub fn media_streams(mut self, input: crate::types::AddMediaStreamRequest) -> Self {
        let mut v = self.media_streams.unwrap_or_default();
        v.push(input);
        self.media_streams = Some(v);
        self
    }
    /// The media streams that you want to add to the flow.
    pub fn set_media_streams(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AddMediaStreamRequest>>,
    ) -> Self {
        self.media_streams = input;
        self
    }
    /// Consumes the builder and constructs a [`AddFlowMediaStreamsInput`](crate::operation::add_flow_media_streams::AddFlowMediaStreamsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::add_flow_media_streams::AddFlowMediaStreamsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::add_flow_media_streams::AddFlowMediaStreamsInput {
                flow_arn: self.flow_arn,
                media_streams: self.media_streams,
            },
        )
    }
}
