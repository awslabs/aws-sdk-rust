// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RemoveFlowVpcInterfaceOutput {
    /// The ARN of the flow that is associated with the VPC interface you removed.
    #[doc(hidden)]
    pub flow_arn: std::option::Option<std::string::String>,
    /// IDs of network interfaces associated with the removed VPC interface that Media Connect was unable to remove.
    #[doc(hidden)]
    pub non_deleted_network_interface_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// The name of the VPC interface that was removed.
    #[doc(hidden)]
    pub vpc_interface_name: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl RemoveFlowVpcInterfaceOutput {
    /// The ARN of the flow that is associated with the VPC interface you removed.
    pub fn flow_arn(&self) -> std::option::Option<&str> {
        self.flow_arn.as_deref()
    }
    /// IDs of network interfaces associated with the removed VPC interface that Media Connect was unable to remove.
    pub fn non_deleted_network_interface_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.non_deleted_network_interface_ids.as_deref()
    }
    /// The name of the VPC interface that was removed.
    pub fn vpc_interface_name(&self) -> std::option::Option<&str> {
        self.vpc_interface_name.as_deref()
    }
}
impl aws_http::request_id::RequestId for RemoveFlowVpcInterfaceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RemoveFlowVpcInterfaceOutput {
    /// Creates a new builder-style object to manufacture [`RemoveFlowVpcInterfaceOutput`](crate::operation::remove_flow_vpc_interface::RemoveFlowVpcInterfaceOutput).
    pub fn builder(
    ) -> crate::operation::remove_flow_vpc_interface::builders::RemoveFlowVpcInterfaceOutputBuilder
    {
        crate::operation::remove_flow_vpc_interface::builders::RemoveFlowVpcInterfaceOutputBuilder::default()
    }
}

/// A builder for [`RemoveFlowVpcInterfaceOutput`](crate::operation::remove_flow_vpc_interface::RemoveFlowVpcInterfaceOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RemoveFlowVpcInterfaceOutputBuilder {
    pub(crate) flow_arn: std::option::Option<std::string::String>,
    pub(crate) non_deleted_network_interface_ids:
        std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) vpc_interface_name: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl RemoveFlowVpcInterfaceOutputBuilder {
    /// The ARN of the flow that is associated with the VPC interface you removed.
    pub fn flow_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.flow_arn = Some(input.into());
        self
    }
    /// The ARN of the flow that is associated with the VPC interface you removed.
    pub fn set_flow_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.flow_arn = input;
        self
    }
    /// Appends an item to `non_deleted_network_interface_ids`.
    ///
    /// To override the contents of this collection use [`set_non_deleted_network_interface_ids`](Self::set_non_deleted_network_interface_ids).
    ///
    /// IDs of network interfaces associated with the removed VPC interface that Media Connect was unable to remove.
    pub fn non_deleted_network_interface_ids(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        let mut v = self.non_deleted_network_interface_ids.unwrap_or_default();
        v.push(input.into());
        self.non_deleted_network_interface_ids = Some(v);
        self
    }
    /// IDs of network interfaces associated with the removed VPC interface that Media Connect was unable to remove.
    pub fn set_non_deleted_network_interface_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.non_deleted_network_interface_ids = input;
        self
    }
    /// The name of the VPC interface that was removed.
    pub fn vpc_interface_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.vpc_interface_name = Some(input.into());
        self
    }
    /// The name of the VPC interface that was removed.
    pub fn set_vpc_interface_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.vpc_interface_name = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RemoveFlowVpcInterfaceOutput`](crate::operation::remove_flow_vpc_interface::RemoveFlowVpcInterfaceOutput).
    pub fn build(
        self,
    ) -> crate::operation::remove_flow_vpc_interface::RemoveFlowVpcInterfaceOutput {
        crate::operation::remove_flow_vpc_interface::RemoveFlowVpcInterfaceOutput {
            flow_arn: self.flow_arn,
            non_deleted_network_interface_ids: self.non_deleted_network_interface_ids,
            vpc_interface_name: self.vpc_interface_name,
            _request_id: self._request_id,
        }
    }
}
