// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The VPC interface that is used for the media stream associated with the source or output.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Interface {
    /// The name of the VPC interface.
    pub name: ::std::option::Option<::std::string::String>,
}
impl Interface {
    /// The name of the VPC interface.
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl Interface {
    /// Creates a new builder-style object to manufacture [`Interface`](crate::types::Interface).
    pub fn builder() -> crate::types::builders::InterfaceBuilder {
        crate::types::builders::InterfaceBuilder::default()
    }
}

/// A builder for [`Interface`](crate::types::Interface).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InterfaceBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
}
impl InterfaceBuilder {
    /// The name of the VPC interface.
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// The name of the VPC interface.
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// The name of the VPC interface.
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Consumes the builder and constructs a [`Interface`](crate::types::Interface).
    pub fn build(self) -> crate::types::Interface {
        crate::types::Interface { name: self.name }
    }
}
