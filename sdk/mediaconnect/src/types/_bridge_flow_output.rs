// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The output of the bridge. A flow output is delivered to the AWS cloud.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BridgeFlowOutput {
    /// The Amazon Resource Number (ARN) of the cloud flow.
    pub flow_arn: ::std::option::Option<::std::string::String>,
    /// The Amazon Resource Number (ARN) of the flow source.
    pub flow_source_arn: ::std::option::Option<::std::string::String>,
    /// The name of the bridge's output.
    pub name: ::std::option::Option<::std::string::String>,
}
impl BridgeFlowOutput {
    /// The Amazon Resource Number (ARN) of the cloud flow.
    pub fn flow_arn(&self) -> ::std::option::Option<&str> {
        self.flow_arn.as_deref()
    }
    /// The Amazon Resource Number (ARN) of the flow source.
    pub fn flow_source_arn(&self) -> ::std::option::Option<&str> {
        self.flow_source_arn.as_deref()
    }
    /// The name of the bridge's output.
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl BridgeFlowOutput {
    /// Creates a new builder-style object to manufacture [`BridgeFlowOutput`](crate::types::BridgeFlowOutput).
    pub fn builder() -> crate::types::builders::BridgeFlowOutputBuilder {
        crate::types::builders::BridgeFlowOutputBuilder::default()
    }
}

/// A builder for [`BridgeFlowOutput`](crate::types::BridgeFlowOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BridgeFlowOutputBuilder {
    pub(crate) flow_arn: ::std::option::Option<::std::string::String>,
    pub(crate) flow_source_arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
}
impl BridgeFlowOutputBuilder {
    /// The Amazon Resource Number (ARN) of the cloud flow.
    /// This field is required.
    pub fn flow_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// The Amazon Resource Number (ARN) of the cloud flow.
    pub fn set_flow_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_arn = input;
        self
    }
    /// The Amazon Resource Number (ARN) of the cloud flow.
    pub fn get_flow_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_arn
    }
    /// The Amazon Resource Number (ARN) of the flow source.
    /// This field is required.
    pub fn flow_source_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_source_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// The Amazon Resource Number (ARN) of the flow source.
    pub fn set_flow_source_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_source_arn = input;
        self
    }
    /// The Amazon Resource Number (ARN) of the flow source.
    pub fn get_flow_source_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_source_arn
    }
    /// The name of the bridge's output.
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// The name of the bridge's output.
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// The name of the bridge's output.
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Consumes the builder and constructs a [`BridgeFlowOutput`](crate::types::BridgeFlowOutput).
    pub fn build(self) -> crate::types::BridgeFlowOutput {
        crate::types::BridgeFlowOutput {
            flow_arn: self.flow_arn,
            flow_source_arn: self.flow_source_arn,
            name: self.name,
        }
    }
}
