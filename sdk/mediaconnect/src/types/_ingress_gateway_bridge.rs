// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IngressGatewayBridge {
    /// The ID of the instance running this bridge.
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// The maximum expected bitrate (in bps) of the ingress bridge.
    pub max_bitrate: ::std::option::Option<i32>,
    /// The maximum number of outputs on the ingress bridge.
    pub max_outputs: ::std::option::Option<i32>,
}
impl IngressGatewayBridge {
    /// The ID of the instance running this bridge.
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// The maximum expected bitrate (in bps) of the ingress bridge.
    pub fn max_bitrate(&self) -> ::std::option::Option<i32> {
        self.max_bitrate
    }
    /// The maximum number of outputs on the ingress bridge.
    pub fn max_outputs(&self) -> ::std::option::Option<i32> {
        self.max_outputs
    }
}
impl IngressGatewayBridge {
    /// Creates a new builder-style object to manufacture [`IngressGatewayBridge`](crate::types::IngressGatewayBridge).
    pub fn builder() -> crate::types::builders::IngressGatewayBridgeBuilder {
        crate::types::builders::IngressGatewayBridgeBuilder::default()
    }
}

/// A builder for [`IngressGatewayBridge`](crate::types::IngressGatewayBridge).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IngressGatewayBridgeBuilder {
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) max_bitrate: ::std::option::Option<i32>,
    pub(crate) max_outputs: ::std::option::Option<i32>,
}
impl IngressGatewayBridgeBuilder {
    /// The ID of the instance running this bridge.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The ID of the instance running this bridge.
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// The ID of the instance running this bridge.
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// The maximum expected bitrate (in bps) of the ingress bridge.
    /// This field is required.
    pub fn max_bitrate(mut self, input: i32) -> Self {
        self.max_bitrate = ::std::option::Option::Some(input);
        self
    }
    /// The maximum expected bitrate (in bps) of the ingress bridge.
    pub fn set_max_bitrate(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_bitrate = input;
        self
    }
    /// The maximum expected bitrate (in bps) of the ingress bridge.
    pub fn get_max_bitrate(&self) -> &::std::option::Option<i32> {
        &self.max_bitrate
    }
    /// The maximum number of outputs on the ingress bridge.
    /// This field is required.
    pub fn max_outputs(mut self, input: i32) -> Self {
        self.max_outputs = ::std::option::Option::Some(input);
        self
    }
    /// The maximum number of outputs on the ingress bridge.
    pub fn set_max_outputs(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_outputs = input;
        self
    }
    /// The maximum number of outputs on the ingress bridge.
    pub fn get_max_outputs(&self) -> &::std::option::Option<i32> {
        &self.max_outputs
    }
    /// Consumes the builder and constructs a [`IngressGatewayBridge`](crate::types::IngressGatewayBridge).
    pub fn build(self) -> crate::types::IngressGatewayBridge {
        crate::types::IngressGatewayBridge {
            instance_id: self.instance_id,
            max_bitrate: self.max_bitrate,
            max_outputs: self.max_outputs,
        }
    }
}
