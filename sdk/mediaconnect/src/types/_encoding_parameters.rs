// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EncodingParameters {
    /// A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.
    #[doc(hidden)]
    pub compression_factor: f64,
    /// A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
    #[doc(hidden)]
    pub encoder_profile: std::option::Option<crate::types::EncoderProfile>,
}
impl EncodingParameters {
    /// A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.
    pub fn compression_factor(&self) -> f64 {
        self.compression_factor
    }
    /// A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
    pub fn encoder_profile(&self) -> std::option::Option<&crate::types::EncoderProfile> {
        self.encoder_profile.as_ref()
    }
}
impl EncodingParameters {
    /// Creates a new builder-style object to manufacture [`EncodingParameters`](crate::types::EncodingParameters).
    pub fn builder() -> crate::types::builders::EncodingParametersBuilder {
        crate::types::builders::EncodingParametersBuilder::default()
    }
}

/// A builder for [`EncodingParameters`](crate::types::EncodingParameters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EncodingParametersBuilder {
    pub(crate) compression_factor: std::option::Option<f64>,
    pub(crate) encoder_profile: std::option::Option<crate::types::EncoderProfile>,
}
impl EncodingParametersBuilder {
    /// A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.
    pub fn compression_factor(mut self, input: f64) -> Self {
        self.compression_factor = Some(input);
        self
    }
    /// A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.
    pub fn set_compression_factor(mut self, input: std::option::Option<f64>) -> Self {
        self.compression_factor = input;
        self
    }
    /// A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
    pub fn encoder_profile(mut self, input: crate::types::EncoderProfile) -> Self {
        self.encoder_profile = Some(input);
        self
    }
    /// A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
    pub fn set_encoder_profile(
        mut self,
        input: std::option::Option<crate::types::EncoderProfile>,
    ) -> Self {
        self.encoder_profile = input;
        self
    }
    /// Consumes the builder and constructs a [`EncodingParameters`](crate::types::EncodingParameters).
    pub fn build(self) -> crate::types::EncodingParameters {
        crate::types::EncodingParameters {
            compression_factor: self.compression_factor.unwrap_or_default(),
            encoder_profile: self.encoder_profile,
        }
    }
}
