// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Provides a summary of a gateway, including its name, ARN, and status.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListedGateway {
    /// The Amazon Resource Name (ARN) of the gateway.
    pub gateway_arn: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub gateway_state: ::std::option::Option<crate::types::GatewayState>,
    /// The name of the gateway.
    pub name: ::std::option::Option<::std::string::String>,
}
impl ListedGateway {
    /// The Amazon Resource Name (ARN) of the gateway.
    pub fn gateway_arn(&self) -> ::std::option::Option<&str> {
        self.gateway_arn.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn gateway_state(&self) -> ::std::option::Option<&crate::types::GatewayState> {
        self.gateway_state.as_ref()
    }
    /// The name of the gateway.
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl ListedGateway {
    /// Creates a new builder-style object to manufacture [`ListedGateway`](crate::types::ListedGateway).
    pub fn builder() -> crate::types::builders::ListedGatewayBuilder {
        crate::types::builders::ListedGatewayBuilder::default()
    }
}

/// A builder for [`ListedGateway`](crate::types::ListedGateway).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListedGatewayBuilder {
    pub(crate) gateway_arn: ::std::option::Option<::std::string::String>,
    pub(crate) gateway_state: ::std::option::Option<crate::types::GatewayState>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
}
impl ListedGatewayBuilder {
    /// The Amazon Resource Name (ARN) of the gateway.
    /// This field is required.
    pub fn gateway_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.gateway_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// The Amazon Resource Name (ARN) of the gateway.
    pub fn set_gateway_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.gateway_arn = input;
        self
    }
    /// The Amazon Resource Name (ARN) of the gateway.
    pub fn get_gateway_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.gateway_arn
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn gateway_state(mut self, input: crate::types::GatewayState) -> Self {
        self.gateway_state = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_gateway_state(mut self, input: ::std::option::Option<crate::types::GatewayState>) -> Self {
        self.gateway_state = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_gateway_state(&self) -> &::std::option::Option<crate::types::GatewayState> {
        &self.gateway_state
    }
    /// The name of the gateway.
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// The name of the gateway.
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// The name of the gateway.
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Consumes the builder and constructs a [`ListedGateway`](crate::types::ListedGateway).
    pub fn build(self) -> crate::types::ListedGateway {
        crate::types::ListedGateway {
            gateway_arn: self.gateway_arn,
            gateway_state: self.gateway_state,
            name: self.name,
        }
    }
}
