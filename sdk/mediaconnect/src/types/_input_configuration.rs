// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The transport parameters that are associated with an incoming media stream.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InputConfiguration {
    /// The IP address that the flow listens on for incoming content for a media stream.
    #[doc(hidden)]
    pub input_ip: std::option::Option<std::string::String>,
    /// The port that the flow listens on for an incoming media stream.
    #[doc(hidden)]
    pub input_port: i32,
    /// The VPC interface where the media stream comes in from.
    #[doc(hidden)]
    pub interface: std::option::Option<crate::types::Interface>,
}
impl InputConfiguration {
    /// The IP address that the flow listens on for incoming content for a media stream.
    pub fn input_ip(&self) -> std::option::Option<&str> {
        self.input_ip.as_deref()
    }
    /// The port that the flow listens on for an incoming media stream.
    pub fn input_port(&self) -> i32 {
        self.input_port
    }
    /// The VPC interface where the media stream comes in from.
    pub fn interface(&self) -> std::option::Option<&crate::types::Interface> {
        self.interface.as_ref()
    }
}
impl InputConfiguration {
    /// Creates a new builder-style object to manufacture [`InputConfiguration`](crate::types::InputConfiguration).
    pub fn builder() -> crate::types::builders::InputConfigurationBuilder {
        crate::types::builders::InputConfigurationBuilder::default()
    }
}

/// A builder for [`InputConfiguration`](crate::types::InputConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InputConfigurationBuilder {
    pub(crate) input_ip: std::option::Option<std::string::String>,
    pub(crate) input_port: std::option::Option<i32>,
    pub(crate) interface: std::option::Option<crate::types::Interface>,
}
impl InputConfigurationBuilder {
    /// The IP address that the flow listens on for incoming content for a media stream.
    pub fn input_ip(mut self, input: impl Into<std::string::String>) -> Self {
        self.input_ip = Some(input.into());
        self
    }
    /// The IP address that the flow listens on for incoming content for a media stream.
    pub fn set_input_ip(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.input_ip = input;
        self
    }
    /// The port that the flow listens on for an incoming media stream.
    pub fn input_port(mut self, input: i32) -> Self {
        self.input_port = Some(input);
        self
    }
    /// The port that the flow listens on for an incoming media stream.
    pub fn set_input_port(mut self, input: std::option::Option<i32>) -> Self {
        self.input_port = input;
        self
    }
    /// The VPC interface where the media stream comes in from.
    pub fn interface(mut self, input: crate::types::Interface) -> Self {
        self.interface = Some(input);
        self
    }
    /// The VPC interface where the media stream comes in from.
    pub fn set_interface(mut self, input: std::option::Option<crate::types::Interface>) -> Self {
        self.interface = input;
        self
    }
    /// Consumes the builder and constructs a [`InputConfiguration`](crate::types::InputConfiguration).
    pub fn build(self) -> crate::types::InputConfiguration {
        crate::types::InputConfiguration {
            input_ip: self.input_ip,
            input_port: self.input_port.unwrap_or_default(),
            interface: self.interface,
        }
    }
}
