// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_add_bridge_outputs;

pub(crate) mod shape_add_bridge_sources;

pub(crate) mod shape_add_flow_media_streams;

pub(crate) mod shape_add_flow_outputs;

pub(crate) mod shape_add_flow_sources;

pub(crate) mod shape_add_flow_vpc_interfaces;

pub(crate) mod shape_create_bridge;

pub(crate) mod shape_create_flow;

pub(crate) mod shape_create_gateway;

pub(crate) mod shape_delete_bridge;

pub(crate) mod shape_delete_flow;

pub(crate) mod shape_delete_gateway;

pub(crate) mod shape_deregister_gateway_instance;

pub(crate) mod shape_describe_bridge;

pub(crate) mod shape_describe_flow;

pub(crate) mod shape_describe_gateway;

pub(crate) mod shape_describe_gateway_instance;

pub(crate) mod shape_describe_offering;

pub(crate) mod shape_describe_reservation;

pub(crate) mod shape_grant_flow_entitlements;

pub(crate) mod shape_list_bridges;

pub(crate) mod shape_list_entitlements;

pub(crate) mod shape_list_flows;

pub(crate) mod shape_list_gateway_instances;

pub(crate) mod shape_list_gateways;

pub(crate) mod shape_list_offerings;

pub(crate) mod shape_list_reservations;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_purchase_offering;

pub(crate) mod shape_remove_bridge_output;

pub(crate) mod shape_remove_bridge_source;

pub(crate) mod shape_remove_flow_media_stream;

pub(crate) mod shape_remove_flow_output;

pub(crate) mod shape_remove_flow_source;

pub(crate) mod shape_remove_flow_vpc_interface;

pub(crate) mod shape_revoke_flow_entitlement;

pub(crate) mod shape_start_flow;

pub(crate) mod shape_stop_flow;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_bridge;

pub(crate) mod shape_update_bridge_output;

pub(crate) mod shape_update_bridge_source;

pub(crate) mod shape_update_bridge_state;

pub(crate) mod shape_update_flow;

pub(crate) mod shape_update_flow_entitlement;

pub(crate) mod shape_update_flow_media_stream;

pub(crate) mod shape_update_flow_output;

pub(crate) mod shape_update_flow_source;

pub(crate) mod shape_update_gateway_instance;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_add_bridge_outputs_input;

pub(crate) mod shape_add_bridge_sources_input;

pub(crate) mod shape_add_flow_media_streams_input;

pub(crate) mod shape_add_flow_outputs420_exception;

pub(crate) mod shape_add_flow_outputs_input;

pub(crate) mod shape_add_flow_sources_input;

pub(crate) mod shape_add_flow_vpc_interfaces_input;

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_bridge420_exception;

pub(crate) mod shape_create_bridge_input;

pub(crate) mod shape_create_flow420_exception;

pub(crate) mod shape_create_flow_input;

pub(crate) mod shape_create_gateway420_exception;

pub(crate) mod shape_create_gateway_input;

pub(crate) mod shape_forbidden_exception;

pub(crate) mod shape_grant_flow_entitlements420_exception;

pub(crate) mod shape_grant_flow_entitlements_input;

pub(crate) mod shape_internal_server_error_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_purchase_offering_input;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_update_bridge_input;

pub(crate) mod shape_update_bridge_output_input;

pub(crate) mod shape_update_bridge_source_input;

pub(crate) mod shape_update_bridge_state_input;

pub(crate) mod shape_update_flow_entitlement_input;

pub(crate) mod shape_update_flow_input;

pub(crate) mod shape_update_flow_media_stream_input;

pub(crate) mod shape_update_flow_output_input;

pub(crate) mod shape_update_flow_source_input;

pub(crate) mod shape_update_gateway_instance_input;

pub(crate) mod shape_add_bridge_output_request;

pub(crate) mod shape_add_bridge_source_request;

pub(crate) mod shape_add_egress_gateway_bridge_request;

pub(crate) mod shape_add_ingress_gateway_bridge_request;

pub(crate) mod shape_add_maintenance;

pub(crate) mod shape_add_media_stream_request;

pub(crate) mod shape_add_output_request;

pub(crate) mod shape_bridge;

pub(crate) mod shape_bridge_output;

pub(crate) mod shape_bridge_source;

pub(crate) mod shape_entitlement;

pub(crate) mod shape_failover_config;

pub(crate) mod shape_flow;

pub(crate) mod shape_gateway;

pub(crate) mod shape_gateway_instance;

pub(crate) mod shape_gateway_network;

pub(crate) mod shape_grant_entitlement_request;

pub(crate) mod shape_list_of_bridge_output;

pub(crate) mod shape_list_of_bridge_source;

pub(crate) mod shape_list_of_entitlement;

pub(crate) mod shape_list_of_listed_bridge;

pub(crate) mod shape_list_of_listed_entitlement;

pub(crate) mod shape_list_of_listed_flow;

pub(crate) mod shape_list_of_listed_gateway;

pub(crate) mod shape_list_of_listed_gateway_instance;

pub(crate) mod shape_list_of_media_stream;

pub(crate) mod shape_list_of_offering;

pub(crate) mod shape_list_of_output;

pub(crate) mod shape_list_of_reservation;

pub(crate) mod shape_list_of_source;

pub(crate) mod shape_list_of_string;

pub(crate) mod shape_list_of_vpc_interface;

pub(crate) mod shape_map_of_string;

pub(crate) mod shape_media_stream;

pub(crate) mod shape_media_stream_attributes_request;

pub(crate) mod shape_media_stream_output_configuration_request;

pub(crate) mod shape_media_stream_source_configuration_request;

pub(crate) mod shape_messages;

pub(crate) mod shape_offering;

pub(crate) mod shape_output;

pub(crate) mod shape_reservation;

pub(crate) mod shape_set_source_request;

pub(crate) mod shape_source;

pub(crate) mod shape_update_bridge_flow_source_request;

pub(crate) mod shape_update_bridge_network_output_request;

pub(crate) mod shape_update_bridge_network_source_request;

pub(crate) mod shape_update_egress_gateway_bridge_request;

pub(crate) mod shape_update_encryption;

pub(crate) mod shape_update_failover_config;

pub(crate) mod shape_update_gateway_bridge_source_request;

pub(crate) mod shape_update_ingress_gateway_bridge_request;

pub(crate) mod shape_update_maintenance;

pub(crate) mod shape_vpc_interface_attachment;

pub(crate) mod shape_vpc_interface_request;

pub(crate) mod shape_add_bridge_flow_source_request;

pub(crate) mod shape_add_bridge_network_output_request;

pub(crate) mod shape_add_bridge_network_source_request;

pub(crate) mod shape_bridge_flow_output;

pub(crate) mod shape_bridge_flow_source;

pub(crate) mod shape_bridge_network_output;

pub(crate) mod shape_bridge_network_source;

pub(crate) mod shape_destination_configuration_request;

pub(crate) mod shape_egress_gateway_bridge;

pub(crate) mod shape_encoding_parameters_request;

pub(crate) mod shape_encryption;

pub(crate) mod shape_fmtp_request;

pub(crate) mod shape_gateway_bridge_source;

pub(crate) mod shape_ingress_gateway_bridge;

pub(crate) mod shape_input_configuration_request;

pub(crate) mod shape_list_of_gateway_network;

pub(crate) mod shape_list_of_integer;

pub(crate) mod shape_list_of_media_stream_output_configuration;

pub(crate) mod shape_list_of_media_stream_source_configuration;

pub(crate) mod shape_list_of_message_detail;

pub(crate) mod shape_listed_bridge;

pub(crate) mod shape_listed_entitlement;

pub(crate) mod shape_listed_flow;

pub(crate) mod shape_listed_gateway;

pub(crate) mod shape_listed_gateway_instance;

pub(crate) mod shape_maintenance;

pub(crate) mod shape_media_stream_attributes;

pub(crate) mod shape_resource_specification;

pub(crate) mod shape_set_gateway_bridge_source_request;

pub(crate) mod shape_source_priority;

pub(crate) mod shape_transport;

pub(crate) mod shape_vpc_interface;

pub(crate) mod shape_fmtp;

pub(crate) mod shape_interface_request;

pub(crate) mod shape_media_stream_output_configuration;

pub(crate) mod shape_media_stream_source_configuration;

pub(crate) mod shape_message_detail;

pub(crate) mod shape_encoding_parameters;

pub(crate) mod shape_list_of_destination_configuration;

pub(crate) mod shape_list_of_input_configuration;

pub(crate) mod shape_destination_configuration;

pub(crate) mod shape_input_configuration;

pub(crate) mod shape_interface;
