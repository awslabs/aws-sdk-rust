// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_media_stream_output_configuration_request(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::MediaStreamOutputConfigurationRequest,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.destination_configurations {
        let mut array_2 = object.key("destinationConfigurations").start_array();
        for item_3 in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_4 = array_2.value().start_object();
                crate::protocol_serde::shape_destination_configuration_request::ser_destination_configuration_request(&mut object_4, item_3)?;
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.encoding_name {
        object.key("encodingName").string(var_5.as_str());
    }
    if let Some(var_6) = &input.encoding_parameters {
        #[allow(unused_mut)]
        let mut object_7 = object.key("encodingParameters").start_object();
        crate::protocol_serde::shape_encoding_parameters_request::ser_encoding_parameters_request(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.media_stream_name {
        object.key("mediaStreamName").string(var_8.as_str());
    }
    Ok(())
}
