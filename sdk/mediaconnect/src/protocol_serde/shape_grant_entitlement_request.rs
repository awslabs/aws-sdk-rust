// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_grant_entitlement_request(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::GrantEntitlementRequest,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.data_transfer_subscriber_fee_percent {
        object.key("dataTransferSubscriberFeePercent").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_1).into()),
        );
    }
    if let Some(var_2) = &input.description {
        object.key("description").string(var_2.as_str());
    }
    if let Some(var_3) = &input.encryption {
        #[allow(unused_mut)]
        let mut object_4 = object.key("encryption").start_object();
        crate::protocol_serde::shape_encryption::ser_encryption(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.entitlement_status {
        object.key("entitlementStatus").string(var_5.as_str());
    }
    if let Some(var_6) = &input.name {
        object.key("name").string(var_6.as_str());
    }
    if let Some(var_7) = &input.subscribers {
        let mut array_8 = object.key("subscribers").start_array();
        for item_9 in var_7 {
            {
                array_8.value().string(item_9.as_str());
            }
        }
        array_8.finish();
    }
    Ok(())
}
