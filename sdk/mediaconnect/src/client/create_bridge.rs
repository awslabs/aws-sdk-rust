// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBridge`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`egress_gateway_bridge(AddEgressGatewayBridgeRequest)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::egress_gateway_bridge) / [`set_egress_gateway_bridge(Option<AddEgressGatewayBridgeRequest>)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::set_egress_gateway_bridge):<br>required: **false**<br>Create a bridge with the egress bridge type. An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises.<br>
    ///   - [`ingress_gateway_bridge(AddIngressGatewayBridgeRequest)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::ingress_gateway_bridge) / [`set_ingress_gateway_bridge(Option<AddIngressGatewayBridgeRequest>)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::set_ingress_gateway_bridge):<br>required: **false**<br>Create a bridge with the ingress bridge type. An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud.<br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::set_name):<br>required: **true**<br>The name of the bridge. This name can not be modified after the bridge is created.<br>
    ///   - [`outputs(AddBridgeOutputRequest)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::outputs) / [`set_outputs(Option<Vec::<AddBridgeOutputRequest>>)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::set_outputs):<br>required: **false**<br>The outputs that you want to add to this bridge.<br>
    ///   - [`placement_arn(impl Into<String>)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::placement_arn) / [`set_placement_arn(Option<String>)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::set_placement_arn):<br>required: **true**<br>The bridge placement Amazon Resource Number (ARN).<br>
    ///   - [`source_failover_config(FailoverConfig)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::source_failover_config) / [`set_source_failover_config(Option<FailoverConfig>)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::set_source_failover_config):<br>required: **false**<br>The settings for source failover.<br>
    ///   - [`sources(AddBridgeSourceRequest)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::sources) / [`set_sources(Option<Vec::<AddBridgeSourceRequest>>)`](crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::set_sources):<br>required: **true**<br>The sources that you want to add to this bridge.<br>
    /// - On success, responds with [`CreateBridgeOutput`](crate::operation::create_bridge::CreateBridgeOutput) with field(s):
    ///   - [`bridge(Option<Bridge>)`](crate::operation::create_bridge::CreateBridgeOutput::bridge): A Bridge is the connection between your datacenter's Instances and the AWS cloud. A bridge can be used to send video from the AWS cloud to your datacenter or from your datacenter to the AWS cloud.
    /// - On failure, responds with [`SdkError<CreateBridgeError>`](crate::operation::create_bridge::CreateBridgeError)
    pub fn create_bridge(&self) -> crate::operation::create_bridge::builders::CreateBridgeFluentBuilder {
        crate::operation::create_bridge::builders::CreateBridgeFluentBuilder::new(self.handle.clone())
    }
}
