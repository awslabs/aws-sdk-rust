// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_agent_action_group_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_agent_action_group::CreateAgentActionGroupInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.action_group_executor {
        #[allow(unused_mut)]
        let mut object_2 = object.key("actionGroupExecutor").start_object();
        crate::protocol_serde::shape_action_group_executor::ser_action_group_executor(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.action_group_name {
        object.key("actionGroupName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.action_group_state {
        object.key("actionGroupState").string(var_4.as_str());
    }
    if let Some(var_5) = &input.api_schema {
        #[allow(unused_mut)]
        let mut object_6 = object.key("apiSchema").start_object();
        crate::protocol_serde::shape_api_schema::ser_api_schema(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.client_token {
        object.key("clientToken").string(var_7.as_str());
    }
    if let Some(var_8) = &input.description {
        object.key("description").string(var_8.as_str());
    }
    if let Some(var_9) = &input.function_schema {
        #[allow(unused_mut)]
        let mut object_10 = object.key("functionSchema").start_object();
        crate::protocol_serde::shape_function_schema::ser_function_schema(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.parent_action_group_signature {
        object.key("parentActionGroupSignature").string(var_11.as_str());
    }
    Ok(())
}
