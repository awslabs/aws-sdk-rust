// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_associate_agent_knowledge_base;

pub(crate) mod shape_create_agent;

pub(crate) mod shape_create_agent_action_group;

pub(crate) mod shape_create_agent_alias;

pub(crate) mod shape_create_data_source;

pub(crate) mod shape_create_knowledge_base;

pub(crate) mod shape_delete_agent;

pub(crate) mod shape_delete_agent_action_group;

pub(crate) mod shape_delete_agent_alias;

pub(crate) mod shape_delete_agent_version;

pub(crate) mod shape_delete_data_source;

pub(crate) mod shape_delete_knowledge_base;

pub(crate) mod shape_disassociate_agent_knowledge_base;

pub(crate) mod shape_get_agent;

pub(crate) mod shape_get_agent_action_group;

pub(crate) mod shape_get_agent_alias;

pub(crate) mod shape_get_agent_knowledge_base;

pub(crate) mod shape_get_agent_version;

pub(crate) mod shape_get_data_source;

pub(crate) mod shape_get_ingestion_job;

pub(crate) mod shape_get_knowledge_base;

pub(crate) mod shape_list_agent_action_groups;

pub(crate) mod shape_list_agent_aliases;

pub(crate) mod shape_list_agent_knowledge_bases;

pub(crate) mod shape_list_agent_versions;

pub(crate) mod shape_list_agents;

pub(crate) mod shape_list_data_sources;

pub(crate) mod shape_list_ingestion_jobs;

pub(crate) mod shape_list_knowledge_bases;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_prepare_agent;

pub(crate) mod shape_start_ingestion_job;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_agent;

pub(crate) mod shape_update_agent_action_group;

pub(crate) mod shape_update_agent_alias;

pub(crate) mod shape_update_agent_knowledge_base;

pub(crate) mod shape_update_data_source;

pub(crate) mod shape_update_knowledge_base;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_associate_agent_knowledge_base_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_agent_action_group_input;

pub(crate) mod shape_create_agent_alias_input;

pub(crate) mod shape_create_agent_input;

pub(crate) mod shape_create_data_source_input;

pub(crate) mod shape_create_knowledge_base_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_agent_action_groups_input;

pub(crate) mod shape_list_agent_aliases_input;

pub(crate) mod shape_list_agent_knowledge_bases_input;

pub(crate) mod shape_list_agent_versions_input;

pub(crate) mod shape_list_agents_input;

pub(crate) mod shape_list_data_sources_input;

pub(crate) mod shape_list_ingestion_jobs_input;

pub(crate) mod shape_list_knowledge_bases_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_ingestion_job_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_agent_action_group_input;

pub(crate) mod shape_update_agent_alias_input;

pub(crate) mod shape_update_agent_input;

pub(crate) mod shape_update_agent_knowledge_base_input;

pub(crate) mod shape_update_data_source_input;

pub(crate) mod shape_update_knowledge_base_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_action_group_executor;

pub(crate) mod shape_action_group_summaries;

pub(crate) mod shape_agent;

pub(crate) mod shape_agent_action_group;

pub(crate) mod shape_agent_alias;

pub(crate) mod shape_agent_alias_routing_configuration_list_item;

pub(crate) mod shape_agent_alias_summaries;

pub(crate) mod shape_agent_knowledge_base;

pub(crate) mod shape_agent_knowledge_base_summaries;

pub(crate) mod shape_agent_summaries;

pub(crate) mod shape_agent_version;

pub(crate) mod shape_agent_version_summaries;

pub(crate) mod shape_api_schema;

pub(crate) mod shape_data_source;

pub(crate) mod shape_data_source_configuration;

pub(crate) mod shape_data_source_summaries;

pub(crate) mod shape_function_schema;

pub(crate) mod shape_ingestion_job;

pub(crate) mod shape_ingestion_job_filter;

pub(crate) mod shape_ingestion_job_sort_by;

pub(crate) mod shape_ingestion_job_summaries;

pub(crate) mod shape_knowledge_base;

pub(crate) mod shape_knowledge_base_configuration;

pub(crate) mod shape_knowledge_base_summaries;

pub(crate) mod shape_prompt_override_configuration;

pub(crate) mod shape_server_side_encryption_configuration;

pub(crate) mod shape_storage_configuration;

pub(crate) mod shape_tags_map;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_vector_ingestion_configuration;

pub(crate) mod shape_action_group_summary;

pub(crate) mod shape_agent_alias_history_events;

pub(crate) mod shape_agent_alias_routing_configuration;

pub(crate) mod shape_agent_alias_summary;

pub(crate) mod shape_agent_knowledge_base_summary;

pub(crate) mod shape_agent_summary;

pub(crate) mod shape_agent_version_summary;

pub(crate) mod shape_chunking_configuration;

pub(crate) mod shape_data_source_summary;

pub(crate) mod shape_failure_reasons;

pub(crate) mod shape_function;

pub(crate) mod shape_ingestion_job_statistics;

pub(crate) mod shape_ingestion_job_summary;

pub(crate) mod shape_knowledge_base_summary;

pub(crate) mod shape_open_search_serverless_configuration;

pub(crate) mod shape_pinecone_configuration;

pub(crate) mod shape_prompt_configuration;

pub(crate) mod shape_rds_configuration;

pub(crate) mod shape_recommended_actions;

pub(crate) mod shape_redis_enterprise_cloud_configuration;

pub(crate) mod shape_s3_data_source_configuration;

pub(crate) mod shape_s3_identifier;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_vector_knowledge_base_configuration;

pub(crate) mod shape_agent_alias_history_event;

pub(crate) mod shape_fixed_size_chunking_configuration;

pub(crate) mod shape_functions;

pub(crate) mod shape_inference_configuration;

pub(crate) mod shape_open_search_serverless_field_mapping;

pub(crate) mod shape_parameter_detail;

pub(crate) mod shape_pinecone_field_mapping;

pub(crate) mod shape_prompt_configurations;

pub(crate) mod shape_rds_field_mapping;

pub(crate) mod shape_redis_enterprise_cloud_field_mapping;

pub(crate) mod shape_s3_prefixes;

pub(crate) mod shape_parameter_map;

pub(crate) mod shape_stop_sequences;
