// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateKnowledgeBase`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a>.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_name):<br>required: **true**<br><p>A name for the knowledge base.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_description):<br>required: **false**<br><p>A description of the knowledge base.</p><br>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_role_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the IAM role with permissions to invoke API operations on the knowledge base.</p><br>
    ///   - [`knowledge_base_configuration(KnowledgeBaseConfiguration)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::knowledge_base_configuration) / [`set_knowledge_base_configuration(Option<KnowledgeBaseConfiguration>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_knowledge_base_configuration):<br>required: **true**<br><p>Contains details about the embeddings model used for the knowledge base.</p><br>
    ///   - [`storage_configuration(StorageConfiguration)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::storage_configuration) / [`set_storage_configuration(Option<StorageConfiguration>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_storage_configuration):<br>required: **true**<br><p>Contains details about the configuration of the vector database used for the knowledge base.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::set_tags):<br>required: **false**<br><p>Specify the key-value pairs for the tags that you want to attach to your knowledge base in this object.</p><br>
    /// - On success, responds with [`CreateKnowledgeBaseOutput`](crate::operation::create_knowledge_base::CreateKnowledgeBaseOutput) with field(s):
    ///   - [`knowledge_base(Option<KnowledgeBase>)`](crate::operation::create_knowledge_base::CreateKnowledgeBaseOutput::knowledge_base): <p>Contains details about the knowledge base.</p>
    /// - On failure, responds with [`SdkError<CreateKnowledgeBaseError>`](crate::operation::create_knowledge_base::CreateKnowledgeBaseError)
    pub fn create_knowledge_base(&self) -> crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder {
        crate::operation::create_knowledge_base::builders::CreateKnowledgeBaseFluentBuilder::new(self.handle.clone())
    }
}
