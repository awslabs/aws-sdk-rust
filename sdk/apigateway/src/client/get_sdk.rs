// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSdk`](crate::operation::get_sdk::builders::GetSdkFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`rest_api_id(impl Into<String>)`](crate::operation::get_sdk::builders::GetSdkFluentBuilder::rest_api_id) / [`set_rest_api_id(Option<String>)`](crate::operation::get_sdk::builders::GetSdkFluentBuilder::set_rest_api_id): <p>The string identifier of the associated RestApi.</p>
    ///   - [`stage_name(impl Into<String>)`](crate::operation::get_sdk::builders::GetSdkFluentBuilder::stage_name) / [`set_stage_name(Option<String>)`](crate::operation::get_sdk::builders::GetSdkFluentBuilder::set_stage_name): <p>The name of the Stage that the SDK will use.</p>
    ///   - [`sdk_type(impl Into<String>)`](crate::operation::get_sdk::builders::GetSdkFluentBuilder::sdk_type) / [`set_sdk_type(Option<String>)`](crate::operation::get_sdk::builders::GetSdkFluentBuilder::set_sdk_type): <p>The language for the generated SDK. Currently <code>java</code>, <code>javascript</code>, <code>android</code>, <code>objectivec</code> (for iOS), <code>swift</code> (for iOS), and <code>ruby</code> are supported.</p>
    ///   - [`parameters(HashMap<String, String>)`](crate::operation::get_sdk::builders::GetSdkFluentBuilder::parameters) / [`set_parameters(Option<HashMap<String, String>>)`](crate::operation::get_sdk::builders::GetSdkFluentBuilder::set_parameters): <p>A string-to-string key-value map of query parameters <code>sdkType</code>-dependent properties of the SDK. For <code>sdkType</code> of <code>objectivec</code> or <code>swift</code>, a parameter named <code>classPrefix</code> is required. For <code>sdkType</code> of <code>android</code>, parameters named <code>groupId</code>, <code>artifactId</code>, <code>artifactVersion</code>, and <code>invokerPackage</code> are required. For <code>sdkType</code> of <code>java</code>, parameters named <code>serviceName</code> and <code>javaPackageName</code> are required. </p>
    /// - On success, responds with [`GetSdkOutput`](crate::operation::get_sdk::GetSdkOutput) with field(s):
    ///   - [`content_type(Option<String>)`](crate::operation::get_sdk::GetSdkOutput::content_type): <p>The content-type header value in the HTTP response.</p>
    ///   - [`content_disposition(Option<String>)`](crate::operation::get_sdk::GetSdkOutput::content_disposition): <p>The content-disposition header value in the HTTP response.</p>
    ///   - [`body(Option<Blob>)`](crate::operation::get_sdk::GetSdkOutput::body): <p>The binary blob response to GetSdk, which contains the generated SDK.</p>
    /// - On failure, responds with [`SdkError<GetSdkError>`](crate::operation::get_sdk::GetSdkError)
    pub fn get_sdk(&self) -> crate::operation::get_sdk::builders::GetSdkFluentBuilder {
        crate::operation::get_sdk::builders::GetSdkFluentBuilder::new(self.handle.clone())
    }
}
