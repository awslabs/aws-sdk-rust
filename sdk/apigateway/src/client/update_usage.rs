// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateUsage`](crate::client::fluent_builders::UpdateUsage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`usage_plan_id(impl Into<String>)`](crate::client::fluent_builders::UpdateUsage::usage_plan_id) / [`set_usage_plan_id(Option<String>)`](crate::client::fluent_builders::UpdateUsage::set_usage_plan_id): <p>The Id of the usage plan associated with the usage data.</p>
    ///   - [`key_id(impl Into<String>)`](crate::client::fluent_builders::UpdateUsage::key_id) / [`set_key_id(Option<String>)`](crate::client::fluent_builders::UpdateUsage::set_key_id): <p>The identifier of the API key associated with the usage plan in which a temporary extension is granted to the remaining quota.</p>
    ///   - [`patch_operations(Vec<PatchOperation>)`](crate::client::fluent_builders::UpdateUsage::patch_operations) / [`set_patch_operations(Option<Vec<PatchOperation>>)`](crate::client::fluent_builders::UpdateUsage::set_patch_operations): <p>For more information about supported patch operations, see <a href="https://docs.aws.amazon.com/apigateway/latest/api/patch-operations.html">Patch Operations</a>.</p>
    /// - On success, responds with [`UpdateUsageOutput`](crate::output::UpdateUsageOutput) with field(s):
    ///   - [`usage_plan_id(Option<String>)`](crate::output::UpdateUsageOutput::usage_plan_id): <p>The plan Id associated with this usage data.</p>
    ///   - [`start_date(Option<String>)`](crate::output::UpdateUsageOutput::start_date): <p>The starting date of the usage data.</p>
    ///   - [`end_date(Option<String>)`](crate::output::UpdateUsageOutput::end_date): <p>The ending date of the usage data.</p>
    ///   - [`items(Option<HashMap<String, Vec<Vec<i64>>>>)`](crate::output::UpdateUsageOutput::items): <p>The usage data, as daily logs of used and remaining quotas, over the specified time interval indexed over the API keys in a usage plan. For example, <code>{..., "values" : { "{api_key}" : [ [0, 100], [10, 90], [100, 10]]}</code>, where <code>{api_key}</code> stands for an API key value and the daily log entry is of the format <code>[used quota, remaining quota]</code>.</p>
    ///   - [`position(Option<String>)`](crate::output::UpdateUsageOutput::position): <p>The current pagination position in the paged result set.</p>
    /// - On failure, responds with [`SdkError<UpdateUsageError>`](crate::error::UpdateUsageError)
    pub fn update_usage(&self) -> crate::client::fluent_builders::UpdateUsage {
        crate::client::fluent_builders::UpdateUsage::new(self.handle.clone())
    }
}
