// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`TestInvokeAuthorizer`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`rest_api_id(impl Into<String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::rest_api_id) / [`set_rest_api_id(Option<String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::set_rest_api_id): <p>The string identifier of the associated RestApi.</p>
    ///   - [`authorizer_id(impl Into<String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::authorizer_id) / [`set_authorizer_id(Option<String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::set_authorizer_id): <p>Specifies a test invoke authorizer request's Authorizer ID.</p>
    ///   - [`headers(HashMap<String, String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::headers) / [`set_headers(Option<HashMap<String, String>>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::set_headers): <p>A key-value map of headers to simulate an incoming invocation request. This is where the incoming authorization token, or identity source, should be specified.</p>
    ///   - [`multi_value_headers(HashMap<String, Vec<String>>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::multi_value_headers) / [`set_multi_value_headers(Option<HashMap<String, Vec<String>>>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::set_multi_value_headers): <p>The headers as a map from string to list of values to simulate an incoming invocation request. This is where the incoming authorization token, or identity source, may be specified.</p>
    ///   - [`path_with_query_string(impl Into<String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::path_with_query_string) / [`set_path_with_query_string(Option<String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::set_path_with_query_string): <p>The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.</p>
    ///   - [`body(impl Into<String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::body) / [`set_body(Option<String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::set_body): <p>The simulated request body of an incoming invocation request.</p>
    ///   - [`stage_variables(HashMap<String, String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::stage_variables) / [`set_stage_variables(Option<HashMap<String, String>>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::set_stage_variables): <p>A key-value map of stage variables to simulate an invocation on a deployed Stage.</p>
    ///   - [`additional_context(HashMap<String, String>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::additional_context) / [`set_additional_context(Option<HashMap<String, String>>)`](crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::set_additional_context): <p>A key-value map of additional context variables.</p>
    /// - On success, responds with [`TestInvokeAuthorizerOutput`](crate::operation::test_invoke_authorizer::TestInvokeAuthorizerOutput) with field(s):
    ///   - [`client_status(i32)`](crate::operation::test_invoke_authorizer::TestInvokeAuthorizerOutput::client_status): <p>The HTTP status code that the client would have received. Value is 0 if the authorizer succeeded.</p>
    ///   - [`log(Option<String>)`](crate::operation::test_invoke_authorizer::TestInvokeAuthorizerOutput::log): <p>The API Gateway execution log for the test authorizer request.</p>
    ///   - [`latency(i64)`](crate::operation::test_invoke_authorizer::TestInvokeAuthorizerOutput::latency): <p>The execution latency of the test authorizer request.</p>
    ///   - [`principal_id(Option<String>)`](crate::operation::test_invoke_authorizer::TestInvokeAuthorizerOutput::principal_id): <p>The principal identity returned by the Authorizer</p>
    ///   - [`policy(Option<String>)`](crate::operation::test_invoke_authorizer::TestInvokeAuthorizerOutput::policy): <p>The JSON policy document returned by the Authorizer</p>
    ///   - [`authorization(Option<HashMap<String, Vec<String>>>)`](crate::operation::test_invoke_authorizer::TestInvokeAuthorizerOutput::authorization): <p>The authorization response.</p>
    ///   - [`claims(Option<HashMap<String, String>>)`](crate::operation::test_invoke_authorizer::TestInvokeAuthorizerOutput::claims): <p>The open identity claims, with any supported custom attributes, returned from the Cognito Your User Pool configured for the API.</p>
    /// - On failure, responds with [`SdkError<TestInvokeAuthorizerError>`](crate::operation::test_invoke_authorizer::TestInvokeAuthorizerError)
    pub fn test_invoke_authorizer(
        &self,
    ) -> crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder {
        crate::operation::test_invoke_authorizer::builders::TestInvokeAuthorizerFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
