// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDocumentationPart`](crate::client::fluent_builders::GetDocumentationPart) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`rest_api_id(impl Into<String>)`](crate::client::fluent_builders::GetDocumentationPart::rest_api_id) / [`set_rest_api_id(Option<String>)`](crate::client::fluent_builders::GetDocumentationPart::set_rest_api_id): <p>The string identifier of the associated RestApi.</p>
    ///   - [`documentation_part_id(impl Into<String>)`](crate::client::fluent_builders::GetDocumentationPart::documentation_part_id) / [`set_documentation_part_id(Option<String>)`](crate::client::fluent_builders::GetDocumentationPart::set_documentation_part_id): <p>The string identifier of the associated RestApi.</p>
    /// - On success, responds with [`GetDocumentationPartOutput`](crate::output::GetDocumentationPartOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::GetDocumentationPartOutput::id): <p>The DocumentationPart identifier, generated by API Gateway when the <code>DocumentationPart</code> is created.</p>
    ///   - [`location(Option<DocumentationPartLocation>)`](crate::output::GetDocumentationPartOutput::location): <p>The location of the API entity to which the documentation applies. Valid fields depend on the targeted API entity type. All the valid location fields are not required. If not explicitly specified, a valid location field is treated as a wildcard and associated documentation content may be inherited by matching entities, unless overridden.</p>
    ///   - [`properties(Option<String>)`](crate::output::GetDocumentationPartOutput::properties): <p>A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., <code>"{ \"description\": \"The API does ...\" }"</code>. Only OpenAPI-compliant documentation-related fields from the properties map are exported and, hence, published as part of the API entity definitions, while the original documentation parts are exported in a OpenAPI extension of <code>x-amazon-apigateway-documentation</code>.</p>
    /// - On failure, responds with [`SdkError<GetDocumentationPartError>`](crate::error::GetDocumentationPartError)
    pub fn get_documentation_part(&self) -> crate::client::fluent_builders::GetDocumentationPart {
        crate::client::fluent_builders::GetDocumentationPart::new(self.handle.clone())
    }
}
