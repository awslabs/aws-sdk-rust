// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateMethod`](crate::operation::update_method::builders::UpdateMethodFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`rest_api_id(impl Into<String>)`](crate::operation::update_method::builders::UpdateMethodFluentBuilder::rest_api_id) / [`set_rest_api_id(Option<String>)`](crate::operation::update_method::builders::UpdateMethodFluentBuilder::set_rest_api_id):<br>required: **true**<br><p>The string identifier of the associated RestApi.</p><br>
    ///   - [`resource_id(impl Into<String>)`](crate::operation::update_method::builders::UpdateMethodFluentBuilder::resource_id) / [`set_resource_id(Option<String>)`](crate::operation::update_method::builders::UpdateMethodFluentBuilder::set_resource_id):<br>required: **true**<br><p>The Resource identifier for the Method resource.</p><br>
    ///   - [`http_method(impl Into<String>)`](crate::operation::update_method::builders::UpdateMethodFluentBuilder::http_method) / [`set_http_method(Option<String>)`](crate::operation::update_method::builders::UpdateMethodFluentBuilder::set_http_method):<br>required: **true**<br><p>The HTTP verb of the Method resource.</p><br>
    ///   - [`patch_operations(PatchOperation)`](crate::operation::update_method::builders::UpdateMethodFluentBuilder::patch_operations) / [`set_patch_operations(Option<Vec::<PatchOperation>>)`](crate::operation::update_method::builders::UpdateMethodFluentBuilder::set_patch_operations):<br>required: **false**<br><p>For more information about supported patch operations, see <a href="https://docs.aws.amazon.com/apigateway/latest/api/patch-operations.html">Patch Operations</a>.</p><br>
    /// - On success, responds with [`UpdateMethodOutput`](crate::operation::update_method::UpdateMethodOutput) with field(s):
    ///   - [`http_method(Option<String>)`](crate::operation::update_method::UpdateMethodOutput::http_method): <p>The method's HTTP verb.</p>
    ///   - [`authorization_type(Option<String>)`](crate::operation::update_method::UpdateMethodOutput::authorization_type): <p>The method's authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.</p>
    ///   - [`authorizer_id(Option<String>)`](crate::operation::update_method::UpdateMethodOutput::authorizer_id): <p>The identifier of an Authorizer to use on this method. The <code>authorizationType</code> must be <code>CUSTOM</code>.</p>
    ///   - [`api_key_required(Option<bool>)`](crate::operation::update_method::UpdateMethodOutput::api_key_required): <p>A boolean flag specifying whether a valid ApiKey is required to invoke this method.</p>
    ///   - [`request_validator_id(Option<String>)`](crate::operation::update_method::UpdateMethodOutput::request_validator_id): <p>The identifier of a RequestValidator for request validation.</p>
    ///   - [`operation_name(Option<String>)`](crate::operation::update_method::UpdateMethodOutput::operation_name): <p>A human-friendly operation identifier for the method. For example, you can assign the <code>operationName</code> of <code>ListPets</code> for the <code>GET /pets</code> method in the <code>PetStore</code> example.</p>
    ///   - [`request_parameters(Option<HashMap::<String, bool>>)`](crate::operation::update_method::UpdateMethodOutput::request_parameters): <p>A key-value map defining required or optional method request parameters that can be accepted by API Gateway. A key is a method request parameter name matching the pattern of <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (<code>true</code>) or optional (<code>false</code>). The method request parameter names defined here are available in Integration to be mapped to integration request parameters or templates.</p>
    ///   - [`request_models(Option<HashMap::<String, String>>)`](crate::operation::update_method::UpdateMethodOutput::request_models): <p>A key-value map specifying data schemas, represented by Model resources, (as the mapped value) of the request payloads of given content types (as the mapping key).</p>
    ///   - [`method_responses(Option<HashMap::<String, MethodResponse>>)`](crate::operation::update_method::UpdateMethodOutput::method_responses): <p>Gets a method response associated with a given HTTP status code. </p>
    ///   - [`method_integration(Option<Integration>)`](crate::operation::update_method::UpdateMethodOutput::method_integration): <p>Gets the method's integration responsible for passing the client-submitted request to the back end and performing necessary transformations to make the request compliant with the back end.</p>
    ///   - [`authorization_scopes(Option<Vec::<String>>)`](crate::operation::update_method::UpdateMethodOutput::authorization_scopes): <p>A list of authorization scopes configured on the method. The scopes are used with a <code>COGNITO_USER_POOLS</code> authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes.</p>
    /// - On failure, responds with [`SdkError<UpdateMethodError>`](crate::operation::update_method::UpdateMethodError)
    pub fn update_method(&self) -> crate::operation::update_method::builders::UpdateMethodFluentBuilder {
        crate::operation::update_method::builders::UpdateMethodFluentBuilder::new(self.handle.clone())
    }
}
