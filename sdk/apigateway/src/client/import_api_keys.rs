// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportApiKeys`](crate::operation::import_api_keys::builders::ImportApiKeysFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`body(Blob)`](crate::operation::import_api_keys::builders::ImportApiKeysFluentBuilder::body) / [`set_body(Option<Blob>)`](crate::operation::import_api_keys::builders::ImportApiKeysFluentBuilder::set_body): <p>The payload of the POST request to import API keys. For the payload format, see API Key File Format.</p>
    ///   - [`format(ApiKeysFormat)`](crate::operation::import_api_keys::builders::ImportApiKeysFluentBuilder::format) / [`set_format(Option<ApiKeysFormat>)`](crate::operation::import_api_keys::builders::ImportApiKeysFluentBuilder::set_format): <p>A query parameter to specify the input format to imported API keys. Currently, only the <code>csv</code> format is supported.</p>
    ///   - [`fail_on_warnings(bool)`](crate::operation::import_api_keys::builders::ImportApiKeysFluentBuilder::fail_on_warnings) / [`set_fail_on_warnings(bool)`](crate::operation::import_api_keys::builders::ImportApiKeysFluentBuilder::set_fail_on_warnings): <p>A query parameter to indicate whether to rollback ApiKey importation (<code>true</code>) or not (<code>false</code>) when error is encountered.</p>
    /// - On success, responds with [`ImportApiKeysOutput`](crate::operation::import_api_keys::ImportApiKeysOutput) with field(s):
    ///   - [`ids(Option<Vec<String>>)`](crate::operation::import_api_keys::ImportApiKeysOutput::ids): <p>A list of all the ApiKey identifiers.</p>
    ///   - [`warnings(Option<Vec<String>>)`](crate::operation::import_api_keys::ImportApiKeysOutput::warnings): <p>A list of warning messages.</p>
    /// - On failure, responds with [`SdkError<ImportApiKeysError>`](crate::operation::import_api_keys::ImportApiKeysError)
    pub fn import_api_keys(
        &self,
    ) -> crate::operation::import_api_keys::builders::ImportApiKeysFluentBuilder {
        crate::operation::import_api_keys::builders::ImportApiKeysFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
