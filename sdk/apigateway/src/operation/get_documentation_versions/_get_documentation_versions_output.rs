// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The collection of documentation snapshots of an API. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDocumentationVersionsOutput {
    /// <p>The current page of elements from this collection.</p>
    #[doc(hidden)]
    pub items: std::option::Option<std::vec::Vec<crate::types::DocumentationVersion>>,
    /// <p>The current pagination position in the paged result set.</p>
    #[doc(hidden)]
    pub position: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetDocumentationVersionsOutput {
    /// <p>The current page of elements from this collection.</p>
    pub fn items(&self) -> std::option::Option<&[crate::types::DocumentationVersion]> {
        self.items.as_deref()
    }
    /// <p>The current pagination position in the paged result set.</p>
    pub fn position(&self) -> std::option::Option<&str> {
        self.position.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetDocumentationVersionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetDocumentationVersionsOutput {
    /// Creates a new builder-style object to manufacture [`GetDocumentationVersionsOutput`](crate::operation::get_documentation_versions::GetDocumentationVersionsOutput).
    pub fn builder(
    ) -> crate::operation::get_documentation_versions::builders::GetDocumentationVersionsOutputBuilder
    {
        crate::operation::get_documentation_versions::builders::GetDocumentationVersionsOutputBuilder::default()
    }
}

/// A builder for [`GetDocumentationVersionsOutput`](crate::operation::get_documentation_versions::GetDocumentationVersionsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDocumentationVersionsOutputBuilder {
    pub(crate) items: std::option::Option<std::vec::Vec<crate::types::DocumentationVersion>>,
    pub(crate) position: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetDocumentationVersionsOutputBuilder {
    /// Appends an item to `items`.
    ///
    /// To override the contents of this collection use [`set_items`](Self::set_items).
    ///
    /// <p>The current page of elements from this collection.</p>
    pub fn items(mut self, input: crate::types::DocumentationVersion) -> Self {
        let mut v = self.items.unwrap_or_default();
        v.push(input);
        self.items = Some(v);
        self
    }
    /// <p>The current page of elements from this collection.</p>
    pub fn set_items(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DocumentationVersion>>,
    ) -> Self {
        self.items = input;
        self
    }
    /// <p>The current pagination position in the paged result set.</p>
    pub fn position(mut self, input: impl Into<std::string::String>) -> Self {
        self.position = Some(input.into());
        self
    }
    /// <p>The current pagination position in the paged result set.</p>
    pub fn set_position(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.position = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetDocumentationVersionsOutput`](crate::operation::get_documentation_versions::GetDocumentationVersionsOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_documentation_versions::GetDocumentationVersionsOutput {
        crate::operation::get_documentation_versions::GetDocumentationVersionsOutput {
            items: self.items,
            position: self.position,
            _request_id: self._request_id,
        }
    }
}
