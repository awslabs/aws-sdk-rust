// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A request to delete the ApiKey resource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteApiKeyInput {
    /// <p>The identifier of the ApiKey resource to be deleted.</p>
    #[doc(hidden)]
    pub api_key: std::option::Option<std::string::String>,
}
impl DeleteApiKeyInput {
    /// <p>The identifier of the ApiKey resource to be deleted.</p>
    pub fn api_key(&self) -> std::option::Option<&str> {
        self.api_key.as_deref()
    }
}
impl DeleteApiKeyInput {
    /// Creates a new builder-style object to manufacture [`DeleteApiKeyInput`](crate::operation::delete_api_key::DeleteApiKeyInput).
    pub fn builder() -> crate::operation::delete_api_key::builders::DeleteApiKeyInputBuilder {
        crate::operation::delete_api_key::builders::DeleteApiKeyInputBuilder::default()
    }
}

/// A builder for [`DeleteApiKeyInput`](crate::operation::delete_api_key::DeleteApiKeyInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteApiKeyInputBuilder {
    pub(crate) api_key: std::option::Option<std::string::String>,
}
impl DeleteApiKeyInputBuilder {
    /// <p>The identifier of the ApiKey resource to be deleted.</p>
    pub fn api_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.api_key = Some(input.into());
        self
    }
    /// <p>The identifier of the ApiKey resource to be deleted.</p>
    pub fn set_api_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.api_key = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteApiKeyInput`](crate::operation::delete_api_key::DeleteApiKeyInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_api_key::DeleteApiKeyInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_api_key::DeleteApiKeyInput {
            api_key: self.api_key,
        })
    }
}
