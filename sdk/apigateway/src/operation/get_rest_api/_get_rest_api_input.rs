// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The GET request to list an existing RestApi defined for your collection. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetRestApiInput {
    /// <p>The string identifier of the associated RestApi.</p>
    #[doc(hidden)]
    pub rest_api_id: std::option::Option<std::string::String>,
}
impl GetRestApiInput {
    /// <p>The string identifier of the associated RestApi.</p>
    pub fn rest_api_id(&self) -> std::option::Option<&str> {
        self.rest_api_id.as_deref()
    }
}
impl GetRestApiInput {
    /// Creates a new builder-style object to manufacture [`GetRestApiInput`](crate::operation::get_rest_api::GetRestApiInput).
    pub fn builder() -> crate::operation::get_rest_api::builders::GetRestApiInputBuilder {
        crate::operation::get_rest_api::builders::GetRestApiInputBuilder::default()
    }
}

/// A builder for [`GetRestApiInput`](crate::operation::get_rest_api::GetRestApiInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetRestApiInputBuilder {
    pub(crate) rest_api_id: std::option::Option<std::string::String>,
}
impl GetRestApiInputBuilder {
    /// <p>The string identifier of the associated RestApi.</p>
    pub fn rest_api_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.rest_api_id = Some(input.into());
        self
    }
    /// <p>The string identifier of the associated RestApi.</p>
    pub fn set_rest_api_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.rest_api_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetRestApiInput`](crate::operation::get_rest_api::GetRestApiInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_rest_api::GetRestApiInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_rest_api::GetRestApiInput {
            rest_api_id: self.rest_api_id,
        })
    }
}
