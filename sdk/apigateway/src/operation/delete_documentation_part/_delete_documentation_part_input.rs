// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Deletes an existing documentation part of an API.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteDocumentationPartInput {
    /// <p>The string identifier of the associated RestApi.</p>
    #[doc(hidden)]
    pub rest_api_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the to-be-deleted documentation part.</p>
    #[doc(hidden)]
    pub documentation_part_id: std::option::Option<std::string::String>,
}
impl DeleteDocumentationPartInput {
    /// <p>The string identifier of the associated RestApi.</p>
    pub fn rest_api_id(&self) -> std::option::Option<&str> {
        self.rest_api_id.as_deref()
    }
    /// <p>The identifier of the to-be-deleted documentation part.</p>
    pub fn documentation_part_id(&self) -> std::option::Option<&str> {
        self.documentation_part_id.as_deref()
    }
}
impl DeleteDocumentationPartInput {
    /// Creates a new builder-style object to manufacture [`DeleteDocumentationPartInput`](crate::operation::delete_documentation_part::DeleteDocumentationPartInput).
    pub fn builder(
    ) -> crate::operation::delete_documentation_part::builders::DeleteDocumentationPartInputBuilder
    {
        crate::operation::delete_documentation_part::builders::DeleteDocumentationPartInputBuilder::default()
    }
}

/// A builder for [`DeleteDocumentationPartInput`](crate::operation::delete_documentation_part::DeleteDocumentationPartInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteDocumentationPartInputBuilder {
    pub(crate) rest_api_id: std::option::Option<std::string::String>,
    pub(crate) documentation_part_id: std::option::Option<std::string::String>,
}
impl DeleteDocumentationPartInputBuilder {
    /// <p>The string identifier of the associated RestApi.</p>
    pub fn rest_api_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.rest_api_id = Some(input.into());
        self
    }
    /// <p>The string identifier of the associated RestApi.</p>
    pub fn set_rest_api_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.rest_api_id = input;
        self
    }
    /// <p>The identifier of the to-be-deleted documentation part.</p>
    pub fn documentation_part_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.documentation_part_id = Some(input.into());
        self
    }
    /// <p>The identifier of the to-be-deleted documentation part.</p>
    pub fn set_documentation_part_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.documentation_part_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteDocumentationPartInput`](crate::operation::delete_documentation_part::DeleteDocumentationPartInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_documentation_part::DeleteDocumentationPartInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_documentation_part::DeleteDocumentationPartInput {
                rest_api_id: self.rest_api_id,
                documentation_part_id: self.documentation_part_id,
            },
        )
    }
}
