// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of Stage resources that are associated with the ApiKey resource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetStagesOutput {
    /// <p>The current page of elements from this collection.</p>
    #[doc(hidden)]
    pub item: std::option::Option<std::vec::Vec<crate::types::Stage>>,
    _request_id: Option<String>,
}
impl GetStagesOutput {
    /// <p>The current page of elements from this collection.</p>
    pub fn item(&self) -> std::option::Option<&[crate::types::Stage]> {
        self.item.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetStagesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetStagesOutput {
    /// Creates a new builder-style object to manufacture [`GetStagesOutput`](crate::operation::get_stages::GetStagesOutput).
    pub fn builder() -> crate::operation::get_stages::builders::GetStagesOutputBuilder {
        crate::operation::get_stages::builders::GetStagesOutputBuilder::default()
    }
}

/// A builder for [`GetStagesOutput`](crate::operation::get_stages::GetStagesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetStagesOutputBuilder {
    pub(crate) item: std::option::Option<std::vec::Vec<crate::types::Stage>>,
    _request_id: Option<String>,
}
impl GetStagesOutputBuilder {
    /// Appends an item to `item`.
    ///
    /// To override the contents of this collection use [`set_item`](Self::set_item).
    ///
    /// <p>The current page of elements from this collection.</p>
    pub fn item(mut self, input: crate::types::Stage) -> Self {
        let mut v = self.item.unwrap_or_default();
        v.push(input);
        self.item = Some(v);
        self
    }
    /// <p>The current page of elements from this collection.</p>
    pub fn set_item(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Stage>>,
    ) -> Self {
        self.item = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetStagesOutput`](crate::operation::get_stages::GetStagesOutput).
    pub fn build(self) -> crate::operation::get_stages::GetStagesOutput {
        crate::operation::get_stages::GetStagesOutput {
            item: self.item,
            _request_id: self._request_id,
        }
    }
}
