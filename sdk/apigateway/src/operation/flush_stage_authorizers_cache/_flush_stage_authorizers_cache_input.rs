// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Request to flush authorizer cache entries on a specified stage.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FlushStageAuthorizersCacheInput {
    /// <p>The string identifier of the associated RestApi.</p>
    #[doc(hidden)]
    pub rest_api_id: std::option::Option<std::string::String>,
    /// <p>The name of the stage to flush.</p>
    #[doc(hidden)]
    pub stage_name: std::option::Option<std::string::String>,
}
impl FlushStageAuthorizersCacheInput {
    /// <p>The string identifier of the associated RestApi.</p>
    pub fn rest_api_id(&self) -> std::option::Option<&str> {
        self.rest_api_id.as_deref()
    }
    /// <p>The name of the stage to flush.</p>
    pub fn stage_name(&self) -> std::option::Option<&str> {
        self.stage_name.as_deref()
    }
}
impl FlushStageAuthorizersCacheInput {
    /// Creates a new builder-style object to manufacture [`FlushStageAuthorizersCacheInput`](crate::operation::flush_stage_authorizers_cache::FlushStageAuthorizersCacheInput).
    pub fn builder() -> crate::operation::flush_stage_authorizers_cache::builders::FlushStageAuthorizersCacheInputBuilder{
        crate::operation::flush_stage_authorizers_cache::builders::FlushStageAuthorizersCacheInputBuilder::default()
    }
}

/// A builder for [`FlushStageAuthorizersCacheInput`](crate::operation::flush_stage_authorizers_cache::FlushStageAuthorizersCacheInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FlushStageAuthorizersCacheInputBuilder {
    pub(crate) rest_api_id: std::option::Option<std::string::String>,
    pub(crate) stage_name: std::option::Option<std::string::String>,
}
impl FlushStageAuthorizersCacheInputBuilder {
    /// <p>The string identifier of the associated RestApi.</p>
    pub fn rest_api_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.rest_api_id = Some(input.into());
        self
    }
    /// <p>The string identifier of the associated RestApi.</p>
    pub fn set_rest_api_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.rest_api_id = input;
        self
    }
    /// <p>The name of the stage to flush.</p>
    pub fn stage_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.stage_name = Some(input.into());
        self
    }
    /// <p>The name of the stage to flush.</p>
    pub fn set_stage_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stage_name = input;
        self
    }
    /// Consumes the builder and constructs a [`FlushStageAuthorizersCacheInput`](crate::operation::flush_stage_authorizers_cache::FlushStageAuthorizersCacheInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::flush_stage_authorizers_cache::FlushStageAuthorizersCacheInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::flush_stage_authorizers_cache::FlushStageAuthorizersCacheInput {
                rest_api_id: self.rest_api_id,
                stage_name: self.stage_name,
            },
        )
    }
}
