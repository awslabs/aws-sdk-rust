// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_domain_name_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_domain_name::CreateDomainNameInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.certificate_arn {
        object.key("certificateArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.certificate_body {
        object.key("certificateBody").string(var_2.as_str());
    }
    if let Some(var_3) = &input.certificate_chain {
        object.key("certificateChain").string(var_3.as_str());
    }
    if let Some(var_4) = &input.certificate_name {
        object.key("certificateName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.certificate_private_key {
        object.key("certificatePrivateKey").string(var_5.as_str());
    }
    if let Some(var_6) = &input.domain_name {
        object.key("domainName").string(var_6.as_str());
    }
    if let Some(var_7) = &input.endpoint_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("endpointConfiguration").start_object();
        crate::protocol_serde::shape_endpoint_configuration::ser_endpoint_configuration(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.mutual_tls_authentication {
        #[allow(unused_mut)]
        let mut object_10 = object.key("mutualTlsAuthentication").start_object();
        crate::protocol_serde::shape_mutual_tls_authentication_input::ser_mutual_tls_authentication_input(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.ownership_verification_certificate_arn {
        object.key("ownershipVerificationCertificateArn").string(var_11.as_str());
    }
    if let Some(var_12) = &input.regional_certificate_arn {
        object.key("regionalCertificateArn").string(var_12.as_str());
    }
    if let Some(var_13) = &input.regional_certificate_name {
        object.key("regionalCertificateName").string(var_13.as_str());
    }
    if let Some(var_14) = &input.security_policy {
        object.key("securityPolicy").string(var_14.as_str());
    }
    if let Some(var_15) = &input.tags {
        #[allow(unused_mut)]
        let mut object_16 = object.key("tags").start_object();
        for (key_17, value_18) in var_15 {
            {
                object_16.key(key_17.as_str()).string(value_18.as_str());
            }
        }
        object_16.finish();
    }
    Ok(())
}
