// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the root volume for a WorkSpace bundle.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RootStorage {
    /// <p>The size of the root volume.</p>
    #[doc(hidden)]
    pub capacity: std::option::Option<std::string::String>,
}
impl RootStorage {
    /// <p>The size of the root volume.</p>
    pub fn capacity(&self) -> std::option::Option<&str> {
        self.capacity.as_deref()
    }
}
impl RootStorage {
    /// Creates a new builder-style object to manufacture [`RootStorage`](crate::types::RootStorage).
    pub fn builder() -> crate::types::builders::RootStorageBuilder {
        crate::types::builders::RootStorageBuilder::default()
    }
}

/// A builder for [`RootStorage`](crate::types::RootStorage).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RootStorageBuilder {
    pub(crate) capacity: std::option::Option<std::string::String>,
}
impl RootStorageBuilder {
    /// <p>The size of the root volume.</p>
    pub fn capacity(mut self, input: impl Into<std::string::String>) -> Self {
        self.capacity = Some(input.into());
        self
    }
    /// <p>The size of the root volume.</p>
    pub fn set_capacity(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.capacity = input;
        self
    }
    /// Consumes the builder and constructs a [`RootStorage`](crate::types::RootStorage).
    pub fn build(self) -> crate::types::RootStorage {
        crate::types::RootStorage {
            capacity: self.capacity,
        }
    }
}
