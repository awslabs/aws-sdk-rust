// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the permissions for a connection alias. Connection aliases are used for cross-Region redirection. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html"> Cross-Region Redirection for Amazon WorkSpaces</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConnectionAliasPermission {
    /// <p>The identifier of the Amazon Web Services account that the connection alias is shared with.</p>
    #[doc(hidden)]
    pub shared_account_id: std::option::Option<std::string::String>,
    /// <p>Indicates whether the specified Amazon Web Services account is allowed to associate the connection alias with a directory.</p>
    #[doc(hidden)]
    pub allow_association: std::option::Option<bool>,
}
impl ConnectionAliasPermission {
    /// <p>The identifier of the Amazon Web Services account that the connection alias is shared with.</p>
    pub fn shared_account_id(&self) -> std::option::Option<&str> {
        self.shared_account_id.as_deref()
    }
    /// <p>Indicates whether the specified Amazon Web Services account is allowed to associate the connection alias with a directory.</p>
    pub fn allow_association(&self) -> std::option::Option<bool> {
        self.allow_association
    }
}
impl ConnectionAliasPermission {
    /// Creates a new builder-style object to manufacture [`ConnectionAliasPermission`](crate::types::ConnectionAliasPermission).
    pub fn builder() -> crate::types::builders::ConnectionAliasPermissionBuilder {
        crate::types::builders::ConnectionAliasPermissionBuilder::default()
    }
}

/// A builder for [`ConnectionAliasPermission`](crate::types::ConnectionAliasPermission).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConnectionAliasPermissionBuilder {
    pub(crate) shared_account_id: std::option::Option<std::string::String>,
    pub(crate) allow_association: std::option::Option<bool>,
}
impl ConnectionAliasPermissionBuilder {
    /// <p>The identifier of the Amazon Web Services account that the connection alias is shared with.</p>
    pub fn shared_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.shared_account_id = Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Web Services account that the connection alias is shared with.</p>
    pub fn set_shared_account_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.shared_account_id = input;
        self
    }
    /// <p>Indicates whether the specified Amazon Web Services account is allowed to associate the connection alias with a directory.</p>
    pub fn allow_association(mut self, input: bool) -> Self {
        self.allow_association = Some(input);
        self
    }
    /// <p>Indicates whether the specified Amazon Web Services account is allowed to associate the connection alias with a directory.</p>
    pub fn set_allow_association(mut self, input: std::option::Option<bool>) -> Self {
        self.allow_association = input;
        self
    }
    /// Consumes the builder and constructs a [`ConnectionAliasPermission`](crate::types::ConnectionAliasPermission).
    pub fn build(self) -> crate::types::ConnectionAliasPermission {
        crate::types::ConnectionAliasPermission {
            shared_account_id: self.shared_account_id,
            allow_association: self.allow_association,
        }
    }
}
