// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes whether a WorkSpace image needs to be updated with the latest drivers and other components required by Amazon WorkSpaces.</p> <note>
/// <p>Only Windows 10 WorkSpace images can be programmatically updated at this time.</p>
/// </note>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateResult {
    /// <p>Indicates whether updated drivers or other components are available for the specified WorkSpace image.</p>
    #[doc(hidden)]
    pub update_available: std::option::Option<bool>,
    /// <p>A description of whether updates for the WorkSpace image are pending or available.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
}
impl UpdateResult {
    /// <p>Indicates whether updated drivers or other components are available for the specified WorkSpace image.</p>
    pub fn update_available(&self) -> std::option::Option<bool> {
        self.update_available
    }
    /// <p>A description of whether updates for the WorkSpace image are pending or available.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl UpdateResult {
    /// Creates a new builder-style object to manufacture [`UpdateResult`](crate::types::UpdateResult).
    pub fn builder() -> crate::types::builders::UpdateResultBuilder {
        crate::types::builders::UpdateResultBuilder::default()
    }
}

/// A builder for [`UpdateResult`](crate::types::UpdateResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateResultBuilder {
    pub(crate) update_available: std::option::Option<bool>,
    pub(crate) description: std::option::Option<std::string::String>,
}
impl UpdateResultBuilder {
    /// <p>Indicates whether updated drivers or other components are available for the specified WorkSpace image.</p>
    pub fn update_available(mut self, input: bool) -> Self {
        self.update_available = Some(input);
        self
    }
    /// <p>Indicates whether updated drivers or other components are available for the specified WorkSpace image.</p>
    pub fn set_update_available(mut self, input: std::option::Option<bool>) -> Self {
        self.update_available = input;
        self
    }
    /// <p>A description of whether updates for the WorkSpace image are pending or available.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>A description of whether updates for the WorkSpace image are pending or available.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateResult`](crate::types::UpdateResult).
    pub fn build(self) -> crate::types::UpdateResult {
        crate::types::UpdateResult {
            update_available: self.update_available,
            description: self.description,
        }
    }
}
