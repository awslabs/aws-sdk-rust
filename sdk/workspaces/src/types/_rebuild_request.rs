// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the information used to rebuild a WorkSpace.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RebuildRequest {
    /// <p>The identifier of the WorkSpace.</p>
    #[doc(hidden)]
    pub workspace_id: std::option::Option<std::string::String>,
}
impl RebuildRequest {
    /// <p>The identifier of the WorkSpace.</p>
    pub fn workspace_id(&self) -> std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
}
impl RebuildRequest {
    /// Creates a new builder-style object to manufacture [`RebuildRequest`](crate::types::RebuildRequest).
    pub fn builder() -> crate::types::builders::RebuildRequestBuilder {
        crate::types::builders::RebuildRequestBuilder::default()
    }
}

/// A builder for [`RebuildRequest`](crate::types::RebuildRequest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RebuildRequestBuilder {
    pub(crate) workspace_id: std::option::Option<std::string::String>,
}
impl RebuildRequestBuilder {
    /// <p>The identifier of the WorkSpace.</p>
    pub fn workspace_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace_id = Some(input.into());
        self
    }
    /// <p>The identifier of the WorkSpace.</p>
    pub fn set_workspace_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// Consumes the builder and constructs a [`RebuildRequest`](crate::types::RebuildRequest).
    pub fn build(self) -> crate::types::RebuildRequest {
        crate::types::RebuildRequest {
            workspace_id: self.workspace_id,
        }
    }
}
