// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the Amazon WorkSpaces client.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClientPropertiesResult {
    /// <p>The resource identifier, in the form of a directory ID.</p>
    #[doc(hidden)]
    pub resource_id: std::option::Option<std::string::String>,
    /// <p>Information about the Amazon WorkSpaces client.</p>
    #[doc(hidden)]
    pub client_properties: std::option::Option<crate::types::ClientProperties>,
}
impl ClientPropertiesResult {
    /// <p>The resource identifier, in the form of a directory ID.</p>
    pub fn resource_id(&self) -> std::option::Option<&str> {
        self.resource_id.as_deref()
    }
    /// <p>Information about the Amazon WorkSpaces client.</p>
    pub fn client_properties(&self) -> std::option::Option<&crate::types::ClientProperties> {
        self.client_properties.as_ref()
    }
}
impl ClientPropertiesResult {
    /// Creates a new builder-style object to manufacture [`ClientPropertiesResult`](crate::types::ClientPropertiesResult).
    pub fn builder() -> crate::types::builders::ClientPropertiesResultBuilder {
        crate::types::builders::ClientPropertiesResultBuilder::default()
    }
}

/// A builder for [`ClientPropertiesResult`](crate::types::ClientPropertiesResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClientPropertiesResultBuilder {
    pub(crate) resource_id: std::option::Option<std::string::String>,
    pub(crate) client_properties: std::option::Option<crate::types::ClientProperties>,
}
impl ClientPropertiesResultBuilder {
    /// <p>The resource identifier, in the form of a directory ID.</p>
    pub fn resource_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_id = Some(input.into());
        self
    }
    /// <p>The resource identifier, in the form of a directory ID.</p>
    pub fn set_resource_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// <p>Information about the Amazon WorkSpaces client.</p>
    pub fn client_properties(mut self, input: crate::types::ClientProperties) -> Self {
        self.client_properties = Some(input);
        self
    }
    /// <p>Information about the Amazon WorkSpaces client.</p>
    pub fn set_client_properties(
        mut self,
        input: std::option::Option<crate::types::ClientProperties>,
    ) -> Self {
        self.client_properties = input;
        self
    }
    /// Consumes the builder and constructs a [`ClientPropertiesResult`](crate::types::ClientPropertiesResult).
    pub fn build(self) -> crate::types::ClientPropertiesResult {
        crate::types::ClientPropertiesResult {
            resource_id: self.resource_id,
            client_properties: self.client_properties,
        }
    }
}
