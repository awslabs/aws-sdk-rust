// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the connection status of a WorkSpace.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct WorkspaceConnectionStatus {
    /// <p>The identifier of the WorkSpace.</p>
    #[doc(hidden)]
    pub workspace_id: std::option::Option<std::string::String>,
    /// <p>The connection state of the WorkSpace. The connection state is unknown if the WorkSpace is stopped.</p>
    #[doc(hidden)]
    pub connection_state: std::option::Option<crate::types::ConnectionState>,
    /// <p>The timestamp of the connection status check.</p>
    #[doc(hidden)]
    pub connection_state_check_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The timestamp of the last known user connection.</p>
    #[doc(hidden)]
    pub last_known_user_connection_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl WorkspaceConnectionStatus {
    /// <p>The identifier of the WorkSpace.</p>
    pub fn workspace_id(&self) -> std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
    /// <p>The connection state of the WorkSpace. The connection state is unknown if the WorkSpace is stopped.</p>
    pub fn connection_state(&self) -> std::option::Option<&crate::types::ConnectionState> {
        self.connection_state.as_ref()
    }
    /// <p>The timestamp of the connection status check.</p>
    pub fn connection_state_check_timestamp(
        &self,
    ) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.connection_state_check_timestamp.as_ref()
    }
    /// <p>The timestamp of the last known user connection.</p>
    pub fn last_known_user_connection_timestamp(
        &self,
    ) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_known_user_connection_timestamp.as_ref()
    }
}
impl WorkspaceConnectionStatus {
    /// Creates a new builder-style object to manufacture [`WorkspaceConnectionStatus`](crate::types::WorkspaceConnectionStatus).
    pub fn builder() -> crate::types::builders::WorkspaceConnectionStatusBuilder {
        crate::types::builders::WorkspaceConnectionStatusBuilder::default()
    }
}

/// A builder for [`WorkspaceConnectionStatus`](crate::types::WorkspaceConnectionStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct WorkspaceConnectionStatusBuilder {
    pub(crate) workspace_id: std::option::Option<std::string::String>,
    pub(crate) connection_state: std::option::Option<crate::types::ConnectionState>,
    pub(crate) connection_state_check_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_known_user_connection_timestamp:
        std::option::Option<aws_smithy_types::DateTime>,
}
impl WorkspaceConnectionStatusBuilder {
    /// <p>The identifier of the WorkSpace.</p>
    pub fn workspace_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace_id = Some(input.into());
        self
    }
    /// <p>The identifier of the WorkSpace.</p>
    pub fn set_workspace_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// <p>The connection state of the WorkSpace. The connection state is unknown if the WorkSpace is stopped.</p>
    pub fn connection_state(mut self, input: crate::types::ConnectionState) -> Self {
        self.connection_state = Some(input);
        self
    }
    /// <p>The connection state of the WorkSpace. The connection state is unknown if the WorkSpace is stopped.</p>
    pub fn set_connection_state(
        mut self,
        input: std::option::Option<crate::types::ConnectionState>,
    ) -> Self {
        self.connection_state = input;
        self
    }
    /// <p>The timestamp of the connection status check.</p>
    pub fn connection_state_check_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.connection_state_check_timestamp = Some(input);
        self
    }
    /// <p>The timestamp of the connection status check.</p>
    pub fn set_connection_state_check_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.connection_state_check_timestamp = input;
        self
    }
    /// <p>The timestamp of the last known user connection.</p>
    pub fn last_known_user_connection_timestamp(
        mut self,
        input: aws_smithy_types::DateTime,
    ) -> Self {
        self.last_known_user_connection_timestamp = Some(input);
        self
    }
    /// <p>The timestamp of the last known user connection.</p>
    pub fn set_last_known_user_connection_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_known_user_connection_timestamp = input;
        self
    }
    /// Consumes the builder and constructs a [`WorkspaceConnectionStatus`](crate::types::WorkspaceConnectionStatus).
    pub fn build(self) -> crate::types::WorkspaceConnectionStatus {
        crate::types::WorkspaceConnectionStatus {
            workspace_id: self.workspace_id,
            connection_state: self.connection_state,
            connection_state_check_timestamp: self.connection_state_check_timestamp,
            last_known_user_connection_timestamp: self.last_known_user_connection_timestamp,
        }
    }
}
