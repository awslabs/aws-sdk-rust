// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyAccountInput {
    /// <p>The status of BYOL.</p>
    #[doc(hidden)]
    pub dedicated_tenancy_support: std::option::Option<crate::types::DedicatedTenancySupportEnum>,
    /// <p>The IP address range, specified as an IPv4 CIDR block, for the management network interface. Specify an IP address range that is compatible with your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block). The CIDR block size must be /16 (for example, 203.0.113.25/16). It must also be specified as available by the <code>ListAvailableManagementCidrRanges</code> operation.</p>
    #[doc(hidden)]
    pub dedicated_tenancy_management_cidr_range: std::option::Option<std::string::String>,
}
impl ModifyAccountInput {
    /// <p>The status of BYOL.</p>
    pub fn dedicated_tenancy_support(
        &self,
    ) -> std::option::Option<&crate::types::DedicatedTenancySupportEnum> {
        self.dedicated_tenancy_support.as_ref()
    }
    /// <p>The IP address range, specified as an IPv4 CIDR block, for the management network interface. Specify an IP address range that is compatible with your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block). The CIDR block size must be /16 (for example, 203.0.113.25/16). It must also be specified as available by the <code>ListAvailableManagementCidrRanges</code> operation.</p>
    pub fn dedicated_tenancy_management_cidr_range(&self) -> std::option::Option<&str> {
        self.dedicated_tenancy_management_cidr_range.as_deref()
    }
}
impl ModifyAccountInput {
    /// Creates a new builder-style object to manufacture [`ModifyAccountInput`](crate::operation::modify_account::ModifyAccountInput).
    pub fn builder() -> crate::operation::modify_account::builders::ModifyAccountInputBuilder {
        crate::operation::modify_account::builders::ModifyAccountInputBuilder::default()
    }
}

/// A builder for [`ModifyAccountInput`](crate::operation::modify_account::ModifyAccountInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModifyAccountInputBuilder {
    pub(crate) dedicated_tenancy_support:
        std::option::Option<crate::types::DedicatedTenancySupportEnum>,
    pub(crate) dedicated_tenancy_management_cidr_range: std::option::Option<std::string::String>,
}
impl ModifyAccountInputBuilder {
    /// <p>The status of BYOL.</p>
    pub fn dedicated_tenancy_support(
        mut self,
        input: crate::types::DedicatedTenancySupportEnum,
    ) -> Self {
        self.dedicated_tenancy_support = Some(input);
        self
    }
    /// <p>The status of BYOL.</p>
    pub fn set_dedicated_tenancy_support(
        mut self,
        input: std::option::Option<crate::types::DedicatedTenancySupportEnum>,
    ) -> Self {
        self.dedicated_tenancy_support = input;
        self
    }
    /// <p>The IP address range, specified as an IPv4 CIDR block, for the management network interface. Specify an IP address range that is compatible with your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block). The CIDR block size must be /16 (for example, 203.0.113.25/16). It must also be specified as available by the <code>ListAvailableManagementCidrRanges</code> operation.</p>
    pub fn dedicated_tenancy_management_cidr_range(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.dedicated_tenancy_management_cidr_range = Some(input.into());
        self
    }
    /// <p>The IP address range, specified as an IPv4 CIDR block, for the management network interface. Specify an IP address range that is compatible with your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block). The CIDR block size must be /16 (for example, 203.0.113.25/16). It must also be specified as available by the <code>ListAvailableManagementCidrRanges</code> operation.</p>
    pub fn set_dedicated_tenancy_management_cidr_range(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.dedicated_tenancy_management_cidr_range = input;
        self
    }
    /// Consumes the builder and constructs a [`ModifyAccountInput`](crate::operation::modify_account::ModifyAccountInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::modify_account::ModifyAccountInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::modify_account::ModifyAccountInput {
            dedicated_tenancy_support: self.dedicated_tenancy_support,
            dedicated_tenancy_management_cidr_range: self.dedicated_tenancy_management_cidr_range,
        })
    }
}
