// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RevokeIpRulesInput {
    /// <p>The identifier of the group.</p>
    #[doc(hidden)]
    pub group_id: std::option::Option<std::string::String>,
    /// <p>The rules to remove from the group.</p>
    #[doc(hidden)]
    pub user_rules: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl RevokeIpRulesInput {
    /// <p>The identifier of the group.</p>
    pub fn group_id(&self) -> std::option::Option<&str> {
        self.group_id.as_deref()
    }
    /// <p>The rules to remove from the group.</p>
    pub fn user_rules(&self) -> std::option::Option<&[std::string::String]> {
        self.user_rules.as_deref()
    }
}
impl RevokeIpRulesInput {
    /// Creates a new builder-style object to manufacture [`RevokeIpRulesInput`](crate::operation::revoke_ip_rules::RevokeIpRulesInput).
    pub fn builder() -> crate::operation::revoke_ip_rules::builders::RevokeIpRulesInputBuilder {
        crate::operation::revoke_ip_rules::builders::RevokeIpRulesInputBuilder::default()
    }
}

/// A builder for [`RevokeIpRulesInput`](crate::operation::revoke_ip_rules::RevokeIpRulesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RevokeIpRulesInputBuilder {
    pub(crate) group_id: std::option::Option<std::string::String>,
    pub(crate) user_rules: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl RevokeIpRulesInputBuilder {
    /// <p>The identifier of the group.</p>
    pub fn group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.group_id = Some(input.into());
        self
    }
    /// <p>The identifier of the group.</p>
    pub fn set_group_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.group_id = input;
        self
    }
    /// Appends an item to `user_rules`.
    ///
    /// To override the contents of this collection use [`set_user_rules`](Self::set_user_rules).
    ///
    /// <p>The rules to remove from the group.</p>
    pub fn user_rules(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.user_rules.unwrap_or_default();
        v.push(input.into());
        self.user_rules = Some(v);
        self
    }
    /// <p>The rules to remove from the group.</p>
    pub fn set_user_rules(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.user_rules = input;
        self
    }
    /// Consumes the builder and constructs a [`RevokeIpRulesInput`](crate::operation::revoke_ip_rules::RevokeIpRulesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::revoke_ip_rules::RevokeIpRulesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::revoke_ip_rules::RevokeIpRulesInput {
            group_id: self.group_id,
            user_rules: self.user_rules,
        })
    }
}
