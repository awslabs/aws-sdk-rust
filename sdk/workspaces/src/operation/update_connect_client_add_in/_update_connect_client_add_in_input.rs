// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateConnectClientAddInInput {
    /// <p>The identifier of the client add-in to update.</p>
    #[doc(hidden)]
    pub add_in_id: std::option::Option<std::string::String>,
    /// <p>The directory identifier for which the client add-in is configured.</p>
    #[doc(hidden)]
    pub resource_id: std::option::Option<std::string::String>,
    /// <p>The name of the client add-in.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The endpoint URL of the Amazon Connect client add-in.</p>
    #[doc(hidden)]
    pub url: std::option::Option<std::string::String>,
}
impl UpdateConnectClientAddInInput {
    /// <p>The identifier of the client add-in to update.</p>
    pub fn add_in_id(&self) -> std::option::Option<&str> {
        self.add_in_id.as_deref()
    }
    /// <p>The directory identifier for which the client add-in is configured.</p>
    pub fn resource_id(&self) -> std::option::Option<&str> {
        self.resource_id.as_deref()
    }
    /// <p>The name of the client add-in.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The endpoint URL of the Amazon Connect client add-in.</p>
    pub fn url(&self) -> std::option::Option<&str> {
        self.url.as_deref()
    }
}
impl UpdateConnectClientAddInInput {
    /// Creates a new builder-style object to manufacture [`UpdateConnectClientAddInInput`](crate::operation::update_connect_client_add_in::UpdateConnectClientAddInInput).
    pub fn builder() -> crate::operation::update_connect_client_add_in::builders::UpdateConnectClientAddInInputBuilder{
        crate::operation::update_connect_client_add_in::builders::UpdateConnectClientAddInInputBuilder::default()
    }
}

/// A builder for [`UpdateConnectClientAddInInput`](crate::operation::update_connect_client_add_in::UpdateConnectClientAddInInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateConnectClientAddInInputBuilder {
    pub(crate) add_in_id: std::option::Option<std::string::String>,
    pub(crate) resource_id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) url: std::option::Option<std::string::String>,
}
impl UpdateConnectClientAddInInputBuilder {
    /// <p>The identifier of the client add-in to update.</p>
    pub fn add_in_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.add_in_id = Some(input.into());
        self
    }
    /// <p>The identifier of the client add-in to update.</p>
    pub fn set_add_in_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.add_in_id = input;
        self
    }
    /// <p>The directory identifier for which the client add-in is configured.</p>
    pub fn resource_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_id = Some(input.into());
        self
    }
    /// <p>The directory identifier for which the client add-in is configured.</p>
    pub fn set_resource_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// <p>The name of the client add-in.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the client add-in.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The endpoint URL of the Amazon Connect client add-in.</p>
    pub fn url(mut self, input: impl Into<std::string::String>) -> Self {
        self.url = Some(input.into());
        self
    }
    /// <p>The endpoint URL of the Amazon Connect client add-in.</p>
    pub fn set_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.url = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateConnectClientAddInInput`](crate::operation::update_connect_client_add_in::UpdateConnectClientAddInInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_connect_client_add_in::UpdateConnectClientAddInInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_connect_client_add_in::UpdateConnectClientAddInInput {
                add_in_id: self.add_in_id,
                resource_id: self.resource_id,
                name: self.name,
                url: self.url,
            },
        )
    }
}
