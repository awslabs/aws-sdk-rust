// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateConnectionAliasPermissionInput {
    /// <p>The identifier of the connection alias that you want to update permissions for.</p>
    pub alias_id: ::std::option::Option<::std::string::String>,
    /// <p>Indicates whether to share or unshare the connection alias with the specified Amazon Web Services account.</p>
    pub connection_alias_permission: ::std::option::Option<crate::types::ConnectionAliasPermission>,
}
impl UpdateConnectionAliasPermissionInput {
    /// <p>The identifier of the connection alias that you want to update permissions for.</p>
    pub fn alias_id(&self) -> ::std::option::Option<&str> {
        self.alias_id.as_deref()
    }
    /// <p>Indicates whether to share or unshare the connection alias with the specified Amazon Web Services account.</p>
    pub fn connection_alias_permission(&self) -> ::std::option::Option<&crate::types::ConnectionAliasPermission> {
        self.connection_alias_permission.as_ref()
    }
}
impl UpdateConnectionAliasPermissionInput {
    /// Creates a new builder-style object to manufacture [`UpdateConnectionAliasPermissionInput`](crate::operation::update_connection_alias_permission::UpdateConnectionAliasPermissionInput).
    pub fn builder() -> crate::operation::update_connection_alias_permission::builders::UpdateConnectionAliasPermissionInputBuilder {
        crate::operation::update_connection_alias_permission::builders::UpdateConnectionAliasPermissionInputBuilder::default()
    }
}

/// A builder for [`UpdateConnectionAliasPermissionInput`](crate::operation::update_connection_alias_permission::UpdateConnectionAliasPermissionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateConnectionAliasPermissionInputBuilder {
    pub(crate) alias_id: ::std::option::Option<::std::string::String>,
    pub(crate) connection_alias_permission: ::std::option::Option<crate::types::ConnectionAliasPermission>,
}
impl UpdateConnectionAliasPermissionInputBuilder {
    /// <p>The identifier of the connection alias that you want to update permissions for.</p>
    /// This field is required.
    pub fn alias_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.alias_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the connection alias that you want to update permissions for.</p>
    pub fn set_alias_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.alias_id = input;
        self
    }
    /// <p>The identifier of the connection alias that you want to update permissions for.</p>
    pub fn get_alias_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.alias_id
    }
    /// <p>Indicates whether to share or unshare the connection alias with the specified Amazon Web Services account.</p>
    /// This field is required.
    pub fn connection_alias_permission(mut self, input: crate::types::ConnectionAliasPermission) -> Self {
        self.connection_alias_permission = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether to share or unshare the connection alias with the specified Amazon Web Services account.</p>
    pub fn set_connection_alias_permission(mut self, input: ::std::option::Option<crate::types::ConnectionAliasPermission>) -> Self {
        self.connection_alias_permission = input;
        self
    }
    /// <p>Indicates whether to share or unshare the connection alias with the specified Amazon Web Services account.</p>
    pub fn get_connection_alias_permission(&self) -> &::std::option::Option<crate::types::ConnectionAliasPermission> {
        &self.connection_alias_permission
    }
    /// Consumes the builder and constructs a [`UpdateConnectionAliasPermissionInput`](crate::operation::update_connection_alias_permission::UpdateConnectionAliasPermissionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_connection_alias_permission::UpdateConnectionAliasPermissionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_connection_alias_permission::UpdateConnectionAliasPermissionInput {
                alias_id: self.alias_id,
                connection_alias_permission: self.connection_alias_permission,
            },
        )
    }
}
