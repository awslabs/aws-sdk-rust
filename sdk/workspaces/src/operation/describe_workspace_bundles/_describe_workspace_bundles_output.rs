// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeWorkspaceBundlesOutput {
    /// <p>Information about the bundles.</p>
    pub bundles: ::std::option::Option<::std::vec::Vec<crate::types::WorkspaceBundle>>,
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return. This token is valid for one day and must be used within that time frame.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeWorkspaceBundlesOutput {
    /// <p>Information about the bundles.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.bundles.is_none()`.
    pub fn bundles(&self) -> &[crate::types::WorkspaceBundle] {
        self.bundles.as_deref().unwrap_or_default()
    }
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return. This token is valid for one day and must be used within that time frame.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for DescribeWorkspaceBundlesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeWorkspaceBundlesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeWorkspaceBundlesOutput`](crate::operation::describe_workspace_bundles::DescribeWorkspaceBundlesOutput).
    pub fn builder() -> crate::operation::describe_workspace_bundles::builders::DescribeWorkspaceBundlesOutputBuilder {
        crate::operation::describe_workspace_bundles::builders::DescribeWorkspaceBundlesOutputBuilder::default()
    }
}

/// A builder for [`DescribeWorkspaceBundlesOutput`](crate::operation::describe_workspace_bundles::DescribeWorkspaceBundlesOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeWorkspaceBundlesOutputBuilder {
    pub(crate) bundles: ::std::option::Option<::std::vec::Vec<crate::types::WorkspaceBundle>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeWorkspaceBundlesOutputBuilder {
    /// Appends an item to `bundles`.
    ///
    /// To override the contents of this collection use [`set_bundles`](Self::set_bundles).
    ///
    /// <p>Information about the bundles.</p>
    pub fn bundles(mut self, input: crate::types::WorkspaceBundle) -> Self {
        let mut v = self.bundles.unwrap_or_default();
        v.push(input);
        self.bundles = ::std::option::Option::Some(v);
        self
    }
    /// <p>Information about the bundles.</p>
    pub fn set_bundles(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::WorkspaceBundle>>) -> Self {
        self.bundles = input;
        self
    }
    /// <p>Information about the bundles.</p>
    pub fn get_bundles(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::WorkspaceBundle>> {
        &self.bundles
    }
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return. This token is valid for one day and must be used within that time frame.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return. This token is valid for one day and must be used within that time frame.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return. This token is valid for one day and must be used within that time frame.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeWorkspaceBundlesOutput`](crate::operation::describe_workspace_bundles::DescribeWorkspaceBundlesOutput).
    pub fn build(self) -> crate::operation::describe_workspace_bundles::DescribeWorkspaceBundlesOutput {
        crate::operation::describe_workspace_bundles::DescribeWorkspaceBundlesOutput {
            bundles: self.bundles,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
