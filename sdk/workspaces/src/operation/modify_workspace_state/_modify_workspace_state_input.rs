// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyWorkspaceStateInput {
    /// <p>The identifier of the WorkSpace.</p>
    #[doc(hidden)]
    pub workspace_id: std::option::Option<std::string::String>,
    /// <p>The WorkSpace state.</p>
    #[doc(hidden)]
    pub workspace_state: std::option::Option<crate::types::TargetWorkspaceState>,
}
impl ModifyWorkspaceStateInput {
    /// <p>The identifier of the WorkSpace.</p>
    pub fn workspace_id(&self) -> std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
    /// <p>The WorkSpace state.</p>
    pub fn workspace_state(&self) -> std::option::Option<&crate::types::TargetWorkspaceState> {
        self.workspace_state.as_ref()
    }
}
impl ModifyWorkspaceStateInput {
    /// Creates a new builder-style object to manufacture [`ModifyWorkspaceStateInput`](crate::operation::modify_workspace_state::ModifyWorkspaceStateInput).
    pub fn builder(
    ) -> crate::operation::modify_workspace_state::builders::ModifyWorkspaceStateInputBuilder {
        crate::operation::modify_workspace_state::builders::ModifyWorkspaceStateInputBuilder::default()
    }
}

/// A builder for [`ModifyWorkspaceStateInput`](crate::operation::modify_workspace_state::ModifyWorkspaceStateInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModifyWorkspaceStateInputBuilder {
    pub(crate) workspace_id: std::option::Option<std::string::String>,
    pub(crate) workspace_state: std::option::Option<crate::types::TargetWorkspaceState>,
}
impl ModifyWorkspaceStateInputBuilder {
    /// <p>The identifier of the WorkSpace.</p>
    pub fn workspace_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace_id = Some(input.into());
        self
    }
    /// <p>The identifier of the WorkSpace.</p>
    pub fn set_workspace_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// <p>The WorkSpace state.</p>
    pub fn workspace_state(mut self, input: crate::types::TargetWorkspaceState) -> Self {
        self.workspace_state = Some(input);
        self
    }
    /// <p>The WorkSpace state.</p>
    pub fn set_workspace_state(
        mut self,
        input: std::option::Option<crate::types::TargetWorkspaceState>,
    ) -> Self {
        self.workspace_state = input;
        self
    }
    /// Consumes the builder and constructs a [`ModifyWorkspaceStateInput`](crate::operation::modify_workspace_state::ModifyWorkspaceStateInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::modify_workspace_state::ModifyWorkspaceStateInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::modify_workspace_state::ModifyWorkspaceStateInput {
                workspace_id: self.workspace_id,
                workspace_state: self.workspace_state,
            },
        )
    }
}
