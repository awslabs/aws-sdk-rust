// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TerminateWorkspacesInput {
    /// <p>The WorkSpaces to terminate. You can specify up to 25 WorkSpaces.</p>
    pub terminate_workspace_requests: ::std::option::Option<::std::vec::Vec<crate::types::TerminateRequest>>,
}
impl TerminateWorkspacesInput {
    /// <p>The WorkSpaces to terminate. You can specify up to 25 WorkSpaces.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.terminate_workspace_requests.is_none()`.
    pub fn terminate_workspace_requests(&self) -> &[crate::types::TerminateRequest] {
        self.terminate_workspace_requests.as_deref().unwrap_or_default()
    }
}
impl TerminateWorkspacesInput {
    /// Creates a new builder-style object to manufacture [`TerminateWorkspacesInput`](crate::operation::terminate_workspaces::TerminateWorkspacesInput).
    pub fn builder() -> crate::operation::terminate_workspaces::builders::TerminateWorkspacesInputBuilder {
        crate::operation::terminate_workspaces::builders::TerminateWorkspacesInputBuilder::default()
    }
}

/// A builder for [`TerminateWorkspacesInput`](crate::operation::terminate_workspaces::TerminateWorkspacesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TerminateWorkspacesInputBuilder {
    pub(crate) terminate_workspace_requests: ::std::option::Option<::std::vec::Vec<crate::types::TerminateRequest>>,
}
impl TerminateWorkspacesInputBuilder {
    /// Appends an item to `terminate_workspace_requests`.
    ///
    /// To override the contents of this collection use [`set_terminate_workspace_requests`](Self::set_terminate_workspace_requests).
    ///
    /// <p>The WorkSpaces to terminate. You can specify up to 25 WorkSpaces.</p>
    pub fn terminate_workspace_requests(mut self, input: crate::types::TerminateRequest) -> Self {
        let mut v = self.terminate_workspace_requests.unwrap_or_default();
        v.push(input);
        self.terminate_workspace_requests = ::std::option::Option::Some(v);
        self
    }
    /// <p>The WorkSpaces to terminate. You can specify up to 25 WorkSpaces.</p>
    pub fn set_terminate_workspace_requests(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::TerminateRequest>>) -> Self {
        self.terminate_workspace_requests = input;
        self
    }
    /// <p>The WorkSpaces to terminate. You can specify up to 25 WorkSpaces.</p>
    pub fn get_terminate_workspace_requests(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::TerminateRequest>> {
        &self.terminate_workspace_requests
    }
    /// Consumes the builder and constructs a [`TerminateWorkspacesInput`](crate::operation::terminate_workspaces::TerminateWorkspacesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::terminate_workspaces::TerminateWorkspacesInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::terminate_workspaces::TerminateWorkspacesInput {
            terminate_workspace_requests: self.terminate_workspace_requests,
        })
    }
}
