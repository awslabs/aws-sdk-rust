// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateWorkspacesInput {
    /// <p>The WorkSpaces to create. You can specify up to 25 WorkSpaces.</p>
    #[doc(hidden)]
    pub workspaces: std::option::Option<std::vec::Vec<crate::types::WorkspaceRequest>>,
}
impl CreateWorkspacesInput {
    /// <p>The WorkSpaces to create. You can specify up to 25 WorkSpaces.</p>
    pub fn workspaces(&self) -> std::option::Option<&[crate::types::WorkspaceRequest]> {
        self.workspaces.as_deref()
    }
}
impl CreateWorkspacesInput {
    /// Creates a new builder-style object to manufacture [`CreateWorkspacesInput`](crate::operation::create_workspaces::CreateWorkspacesInput).
    pub fn builder() -> crate::operation::create_workspaces::builders::CreateWorkspacesInputBuilder
    {
        crate::operation::create_workspaces::builders::CreateWorkspacesInputBuilder::default()
    }
}

/// A builder for [`CreateWorkspacesInput`](crate::operation::create_workspaces::CreateWorkspacesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateWorkspacesInputBuilder {
    pub(crate) workspaces: std::option::Option<std::vec::Vec<crate::types::WorkspaceRequest>>,
}
impl CreateWorkspacesInputBuilder {
    /// Appends an item to `workspaces`.
    ///
    /// To override the contents of this collection use [`set_workspaces`](Self::set_workspaces).
    ///
    /// <p>The WorkSpaces to create. You can specify up to 25 WorkSpaces.</p>
    pub fn workspaces(mut self, input: crate::types::WorkspaceRequest) -> Self {
        let mut v = self.workspaces.unwrap_or_default();
        v.push(input);
        self.workspaces = Some(v);
        self
    }
    /// <p>The WorkSpaces to create. You can specify up to 25 WorkSpaces.</p>
    pub fn set_workspaces(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::WorkspaceRequest>>,
    ) -> Self {
        self.workspaces = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateWorkspacesInput`](crate::operation::create_workspaces::CreateWorkspacesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_workspaces::CreateWorkspacesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::create_workspaces::CreateWorkspacesInput {
            workspaces: self.workspaces,
        })
    }
}
