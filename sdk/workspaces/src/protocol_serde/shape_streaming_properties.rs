// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_streaming_properties(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::StreamingProperties,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.streaming_experience_preferred_protocol {
        object.key("StreamingExperiencePreferredProtocol").string(var_1.as_str());
    }
    if let Some(var_2) = &input.user_settings {
        let mut array_3 = object.key("UserSettings").start_array();
        for item_4 in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::protocol_serde::shape_user_setting::ser_user_setting(&mut object_5, item_4)?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.storage_connectors {
        let mut array_7 = object.key("StorageConnectors").start_array();
        for item_8 in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_9 = array_7.value().start_object();
                crate::protocol_serde::shape_storage_connector::ser_storage_connector(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    if let Some(var_10) = &input.global_accelerator {
        #[allow(unused_mut)]
        let mut object_11 = object.key("GlobalAccelerator").start_object();
        crate::protocol_serde::shape_global_accelerator_for_directory::ser_global_accelerator_for_directory(&mut object_11, var_10)?;
        object_11.finish();
    }
    Ok(())
}

pub(crate) fn de_streaming_properties<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::StreamingProperties>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::StreamingPropertiesBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "StreamingExperiencePreferredProtocol" => {
                            builder = builder.set_streaming_experience_preferred_protocol(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| {
                                        s.to_unescaped()
                                            .map(|u| crate::types::StreamingExperiencePreferredProtocolEnum::from(u.as_ref()))
                                    })
                                    .transpose()?,
                            );
                        }
                        "UserSettings" => {
                            builder = builder.set_user_settings(crate::protocol_serde::shape_user_settings::de_user_settings(tokens)?);
                        }
                        "StorageConnectors" => {
                            builder = builder.set_storage_connectors(crate::protocol_serde::shape_storage_connectors::de_storage_connectors(tokens)?);
                        }
                        "GlobalAccelerator" => {
                            builder = builder.set_global_accelerator(
                                crate::protocol_serde::shape_global_accelerator_for_directory::de_global_accelerator_for_directory(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
