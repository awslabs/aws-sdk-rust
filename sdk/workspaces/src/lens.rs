// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_structure_crate_output_describe_workspace_bundles_output_next_token(
    input: &crate::output::DescribeWorkspaceBundlesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_describe_workspace_directories_output_next_token(
    input: &crate::output::DescribeWorkspaceDirectoriesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_describe_workspaces_output_next_token(
    input: &crate::output::DescribeWorkspacesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_describe_workspace_bundles_output_bundles(
    input: crate::output::DescribeWorkspaceBundlesOutput,
) -> std::option::Option<std::vec::Vec<crate::model::WorkspaceBundle>> {
    let input = match input.bundles {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_describe_workspace_directories_output_directories(
    input: crate::output::DescribeWorkspaceDirectoriesOutput,
) -> std::option::Option<std::vec::Vec<crate::model::WorkspaceDirectory>> {
    let input = match input.directories {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_describe_workspaces_output_workspaces(
    input: crate::output::DescribeWorkspacesOutput,
) -> std::option::Option<std::vec::Vec<crate::model::Workspace>> {
    let input = match input.workspaces {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
