// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateIpGroup`](crate::client::fluent_builders::CreateIpGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`group_name(impl Into<String>)`](crate::client::fluent_builders::CreateIpGroup::group_name) / [`set_group_name(Option<String>)`](crate::client::fluent_builders::CreateIpGroup::set_group_name): <p>The name of the group.</p>
    ///   - [`group_desc(impl Into<String>)`](crate::client::fluent_builders::CreateIpGroup::group_desc) / [`set_group_desc(Option<String>)`](crate::client::fluent_builders::CreateIpGroup::set_group_desc): <p>The description of the group.</p>
    ///   - [`user_rules(Vec<IpRuleItem>)`](crate::client::fluent_builders::CreateIpGroup::user_rules) / [`set_user_rules(Option<Vec<IpRuleItem>>)`](crate::client::fluent_builders::CreateIpGroup::set_user_rules): <p>The rules to add to the group.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateIpGroup::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateIpGroup::set_tags): <p>The tags. Each WorkSpaces resource can have a maximum of 50 tags.</p>
    /// - On success, responds with [`CreateIpGroupOutput`](crate::output::CreateIpGroupOutput) with field(s):
    ///   - [`group_id(Option<String>)`](crate::output::CreateIpGroupOutput::group_id): <p>The identifier of the group.</p>
    /// - On failure, responds with [`SdkError<CreateIpGroupError>`](crate::error::CreateIpGroupError)
    pub fn create_ip_group(&self) -> crate::client::fluent_builders::CreateIpGroup {
        crate::client::fluent_builders::CreateIpGroup::new(self.handle.clone())
    }
}
