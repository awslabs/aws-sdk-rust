// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AuthorizeIpRules`](crate::operation::authorize_ip_rules::builders::AuthorizeIpRulesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`group_id(impl Into<String>)`](crate::operation::authorize_ip_rules::builders::AuthorizeIpRulesFluentBuilder::group_id) / [`set_group_id(Option<String>)`](crate::operation::authorize_ip_rules::builders::AuthorizeIpRulesFluentBuilder::set_group_id): <p>The identifier of the group.</p>
    ///   - [`user_rules(Vec<IpRuleItem>)`](crate::operation::authorize_ip_rules::builders::AuthorizeIpRulesFluentBuilder::user_rules) / [`set_user_rules(Option<Vec<IpRuleItem>>)`](crate::operation::authorize_ip_rules::builders::AuthorizeIpRulesFluentBuilder::set_user_rules): <p>The rules to add to the group.</p>
    /// - On success, responds with [`AuthorizeIpRulesOutput`](crate::operation::authorize_ip_rules::AuthorizeIpRulesOutput)
    /// - On failure, responds with [`SdkError<AuthorizeIpRulesError>`](crate::operation::authorize_ip_rules::AuthorizeIpRulesError)
    pub fn authorize_ip_rules(
        &self,
    ) -> crate::operation::authorize_ip_rules::builders::AuthorizeIpRulesFluentBuilder {
        crate::operation::authorize_ip_rules::builders::AuthorizeIpRulesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
