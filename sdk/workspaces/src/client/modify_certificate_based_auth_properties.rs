// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyCertificateBasedAuthProperties`](crate::client::fluent_builders::ModifyCertificateBasedAuthProperties) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::ModifyCertificateBasedAuthProperties::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::ModifyCertificateBasedAuthProperties::set_resource_id): <p>The resource identifiers, in the form of directory IDs.</p>
    ///   - [`certificate_based_auth_properties(CertificateBasedAuthProperties)`](crate::client::fluent_builders::ModifyCertificateBasedAuthProperties::certificate_based_auth_properties) / [`set_certificate_based_auth_properties(Option<CertificateBasedAuthProperties>)`](crate::client::fluent_builders::ModifyCertificateBasedAuthProperties::set_certificate_based_auth_properties): <p>The properties of the certificate-based authentication.</p>
    ///   - [`properties_to_delete(Vec<DeletableCertificateBasedAuthProperty>)`](crate::client::fluent_builders::ModifyCertificateBasedAuthProperties::properties_to_delete) / [`set_properties_to_delete(Option<Vec<DeletableCertificateBasedAuthProperty>>)`](crate::client::fluent_builders::ModifyCertificateBasedAuthProperties::set_properties_to_delete): <p>The properties of the certificate-based authentication you want to delete.</p>
    /// - On success, responds with [`ModifyCertificateBasedAuthPropertiesOutput`](crate::output::ModifyCertificateBasedAuthPropertiesOutput)
    /// - On failure, responds with [`SdkError<ModifyCertificateBasedAuthPropertiesError>`](crate::error::ModifyCertificateBasedAuthPropertiesError)
    pub fn modify_certificate_based_auth_properties(
        &self,
    ) -> crate::client::fluent_builders::ModifyCertificateBasedAuthProperties {
        crate::client::fluent_builders::ModifyCertificateBasedAuthProperties::new(
            self.handle.clone(),
        )
    }
}
