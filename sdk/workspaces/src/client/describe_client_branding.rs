// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeClientBranding`](crate::client::fluent_builders::DescribeClientBranding) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::DescribeClientBranding::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::DescribeClientBranding::set_resource_id): <p>The directory identifier of the WorkSpace for which you want to view client branding information.</p>
    /// - On success, responds with [`DescribeClientBrandingOutput`](crate::output::DescribeClientBrandingOutput) with field(s):
    ///   - [`device_type_windows(Option<DefaultClientBrandingAttributes>)`](crate::output::DescribeClientBrandingOutput::device_type_windows): <p>The branding information for Windows devices.</p>
    ///   - [`device_type_osx(Option<DefaultClientBrandingAttributes>)`](crate::output::DescribeClientBrandingOutput::device_type_osx): <p>The branding information for macOS devices.</p>
    ///   - [`device_type_android(Option<DefaultClientBrandingAttributes>)`](crate::output::DescribeClientBrandingOutput::device_type_android): <p>The branding information for Android devices.</p>
    ///   - [`device_type_ios(Option<IosClientBrandingAttributes>)`](crate::output::DescribeClientBrandingOutput::device_type_ios): <p>The branding information for iOS devices.</p>
    ///   - [`device_type_linux(Option<DefaultClientBrandingAttributes>)`](crate::output::DescribeClientBrandingOutput::device_type_linux): <p>The branding information for Linux devices.</p>
    ///   - [`device_type_web(Option<DefaultClientBrandingAttributes>)`](crate::output::DescribeClientBrandingOutput::device_type_web): <p>The branding information for Web access.</p>
    /// - On failure, responds with [`SdkError<DescribeClientBrandingError>`](crate::error::DescribeClientBrandingError)
    pub fn describe_client_branding(
        &self,
    ) -> crate::client::fluent_builders::DescribeClientBranding {
        crate::client::fluent_builders::DescribeClientBranding::new(self.handle.clone())
    }
}
