// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateWorkspaceBundle`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bundle_name(impl Into<String>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::bundle_name) / [`set_bundle_name(Option<String>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::set_bundle_name):<br>required: **true**<br><p>The name of the bundle.</p><br>
    ///   - [`bundle_description(impl Into<String>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::bundle_description) / [`set_bundle_description(Option<String>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::set_bundle_description):<br>required: **true**<br><p>The description of the bundle.</p><br>
    ///   - [`image_id(impl Into<String>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::image_id) / [`set_image_id(Option<String>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::set_image_id):<br>required: **true**<br><p>The identifier of the image that is used to create the bundle.</p><br>
    ///   - [`compute_type(ComputeType)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::compute_type) / [`set_compute_type(Option<ComputeType>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::set_compute_type):<br>required: **true**<br><p>Describes the compute type of the bundle.</p><br>
    ///   - [`user_storage(UserStorage)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::user_storage) / [`set_user_storage(Option<UserStorage>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::set_user_storage):<br>required: **true**<br><p>Describes the user volume for a WorkSpace bundle.</p><br>
    ///   - [`root_storage(RootStorage)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::root_storage) / [`set_root_storage(Option<RootStorage>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::set_root_storage):<br>required: **false**<br><p>Describes the root volume for a WorkSpace bundle.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::set_tags):<br>required: **false**<br><p>The tags associated with the bundle.</p> <note>   <p>To add tags at the same time when you're creating the bundle, you must create an IAM policy that grants your IAM user permissions to use <code>workspaces:CreateTags</code>. </p>  </note><br>
    /// - On success, responds with [`CreateWorkspaceBundleOutput`](crate::operation::create_workspace_bundle::CreateWorkspaceBundleOutput) with field(s):
    ///   - [`workspace_bundle(Option<WorkspaceBundle>)`](crate::operation::create_workspace_bundle::CreateWorkspaceBundleOutput::workspace_bundle): <p>Describes a WorkSpace bundle.</p>
    /// - On failure, responds with [`SdkError<CreateWorkspaceBundleError>`](crate::operation::create_workspace_bundle::CreateWorkspaceBundleError)
    pub fn create_workspace_bundle(&self) -> crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder {
        crate::operation::create_workspace_bundle::builders::CreateWorkspaceBundleFluentBuilder::new(self.handle.clone())
    }
}
