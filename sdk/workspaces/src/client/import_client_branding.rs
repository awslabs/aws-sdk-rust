// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportClientBranding`](crate::client::fluent_builders::ImportClientBranding) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::ImportClientBranding::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::ImportClientBranding::set_resource_id): <p>The directory identifier of the WorkSpace for which you want to import client branding.</p>
    ///   - [`device_type_windows(DefaultImportClientBrandingAttributes)`](crate::client::fluent_builders::ImportClientBranding::device_type_windows) / [`set_device_type_windows(Option<DefaultImportClientBrandingAttributes>)`](crate::client::fluent_builders::ImportClientBranding::set_device_type_windows): <p>The branding information to import for Windows devices.</p>
    ///   - [`device_type_osx(DefaultImportClientBrandingAttributes)`](crate::client::fluent_builders::ImportClientBranding::device_type_osx) / [`set_device_type_osx(Option<DefaultImportClientBrandingAttributes>)`](crate::client::fluent_builders::ImportClientBranding::set_device_type_osx): <p>The branding information to import for macOS devices.</p>
    ///   - [`device_type_android(DefaultImportClientBrandingAttributes)`](crate::client::fluent_builders::ImportClientBranding::device_type_android) / [`set_device_type_android(Option<DefaultImportClientBrandingAttributes>)`](crate::client::fluent_builders::ImportClientBranding::set_device_type_android): <p>The branding information to import for Android devices.</p>
    ///   - [`device_type_ios(IosImportClientBrandingAttributes)`](crate::client::fluent_builders::ImportClientBranding::device_type_ios) / [`set_device_type_ios(Option<IosImportClientBrandingAttributes>)`](crate::client::fluent_builders::ImportClientBranding::set_device_type_ios): <p>The branding information to import for iOS devices.</p>
    ///   - [`device_type_linux(DefaultImportClientBrandingAttributes)`](crate::client::fluent_builders::ImportClientBranding::device_type_linux) / [`set_device_type_linux(Option<DefaultImportClientBrandingAttributes>)`](crate::client::fluent_builders::ImportClientBranding::set_device_type_linux): <p>The branding information to import for Linux devices.</p>
    ///   - [`device_type_web(DefaultImportClientBrandingAttributes)`](crate::client::fluent_builders::ImportClientBranding::device_type_web) / [`set_device_type_web(Option<DefaultImportClientBrandingAttributes>)`](crate::client::fluent_builders::ImportClientBranding::set_device_type_web): <p>The branding information to import for web access.</p>
    /// - On success, responds with [`ImportClientBrandingOutput`](crate::output::ImportClientBrandingOutput) with field(s):
    ///   - [`device_type_windows(Option<DefaultClientBrandingAttributes>)`](crate::output::ImportClientBrandingOutput::device_type_windows): <p>The branding information configured for Windows devices.</p>
    ///   - [`device_type_osx(Option<DefaultClientBrandingAttributes>)`](crate::output::ImportClientBrandingOutput::device_type_osx): <p>The branding information configured for macOS devices.</p>
    ///   - [`device_type_android(Option<DefaultClientBrandingAttributes>)`](crate::output::ImportClientBrandingOutput::device_type_android): <p>The branding information configured for Android devices.</p>
    ///   - [`device_type_ios(Option<IosClientBrandingAttributes>)`](crate::output::ImportClientBrandingOutput::device_type_ios): <p>The branding information configured for iOS devices.</p>
    ///   - [`device_type_linux(Option<DefaultClientBrandingAttributes>)`](crate::output::ImportClientBrandingOutput::device_type_linux): <p>The branding information configured for Linux devices.</p>
    ///   - [`device_type_web(Option<DefaultClientBrandingAttributes>)`](crate::output::ImportClientBrandingOutput::device_type_web): <p>The branding information configured for web access.</p>
    /// - On failure, responds with [`SdkError<ImportClientBrandingError>`](crate::error::ImportClientBrandingError)
    pub fn import_client_branding(&self) -> crate::client::fluent_builders::ImportClientBranding {
        crate::client::fluent_builders::ImportClientBranding::new(self.handle.clone())
    }
}
