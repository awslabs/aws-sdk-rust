// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisassociateWorkspaceApplication`](crate::operation::disassociate_workspace_application::builders::DisassociateWorkspaceApplicationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workspace_id(impl Into<String>)`](crate::operation::disassociate_workspace_application::builders::DisassociateWorkspaceApplicationFluentBuilder::workspace_id) / [`set_workspace_id(Option<String>)`](crate::operation::disassociate_workspace_application::builders::DisassociateWorkspaceApplicationFluentBuilder::set_workspace_id):<br>required: **true**<br><p>The identifier of the WorkSpace.</p><br>
    ///   - [`application_id(impl Into<String>)`](crate::operation::disassociate_workspace_application::builders::DisassociateWorkspaceApplicationFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::disassociate_workspace_application::builders::DisassociateWorkspaceApplicationFluentBuilder::set_application_id):<br>required: **true**<br><p>The identifier of the application.</p><br>
    /// - On success, responds with [`DisassociateWorkspaceApplicationOutput`](crate::operation::disassociate_workspace_application::DisassociateWorkspaceApplicationOutput) with field(s):
    ///   - [`association(Option<WorkspaceResourceAssociation>)`](crate::operation::disassociate_workspace_application::DisassociateWorkspaceApplicationOutput::association): <p>Information about the targeted association.</p>
    /// - On failure, responds with [`SdkError<DisassociateWorkspaceApplicationError>`](crate::operation::disassociate_workspace_application::DisassociateWorkspaceApplicationError)
    pub fn disassociate_workspace_application(
        &self,
    ) -> crate::operation::disassociate_workspace_application::builders::DisassociateWorkspaceApplicationFluentBuilder {
        crate::operation::disassociate_workspace_application::builders::DisassociateWorkspaceApplicationFluentBuilder::new(self.handle.clone())
    }
}
