// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn connection_alias_permission_correct_errors(
    mut builder: crate::types::builders::ConnectionAliasPermissionBuilder,
) -> crate::types::builders::ConnectionAliasPermissionBuilder {
    if builder.shared_account_id.is_none() {
        builder.shared_account_id = Some(Default::default())
    }
    if builder.allow_association.is_none() {
        builder.allow_association = Some(Default::default())
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    builder
}

pub(crate) fn standby_workspace_correct_errors(
    mut builder: crate::types::builders::StandbyWorkspaceBuilder,
) -> crate::types::builders::StandbyWorkspaceBuilder {
    if builder.primary_workspace_id.is_none() {
        builder.primary_workspace_id = Some(Default::default())
    }
    if builder.directory_id.is_none() {
        builder.directory_id = Some(Default::default())
    }
    builder
}

pub(crate) fn workspace_request_correct_errors(
    mut builder: crate::types::builders::WorkspaceRequestBuilder,
) -> crate::types::builders::WorkspaceRequestBuilder {
    if builder.directory_id.is_none() {
        builder.directory_id = Some(Default::default())
    }
    if builder.user_name.is_none() {
        builder.user_name = Some(Default::default())
    }
    if builder.bundle_id.is_none() {
        builder.bundle_id = Some(Default::default())
    }
    builder
}
