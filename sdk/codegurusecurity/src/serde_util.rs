// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn access_denied_exception_correct_errors(
    mut builder: crate::types::error::builders::AccessDeniedExceptionBuilder,
) -> crate::types::error::builders::AccessDeniedExceptionBuilder {
    if builder.error_code.is_none() {
        builder.error_code = Some(Default::default())
    }
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn throttling_exception_correct_errors(
    mut builder: crate::types::error::builders::ThrottlingExceptionBuilder,
) -> crate::types::error::builders::ThrottlingExceptionBuilder {
    if builder.error_code.is_none() {
        builder.error_code = Some(Default::default())
    }
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn validation_exception_correct_errors(
    mut builder: crate::types::error::builders::ValidationExceptionBuilder,
) -> crate::types::error::builders::ValidationExceptionBuilder {
    if builder.error_code.is_none() {
        builder.error_code = Some(Default::default())
    }
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    if builder.reason.is_none() {
        builder.reason = "no value was set".parse::<crate::types::ValidationExceptionReason>().ok()
    }
    builder
}

pub(crate) fn batch_get_findings_output_correct_errors(
    mut builder: crate::operation::batch_get_findings::builders::BatchGetFindingsOutputBuilder,
) -> crate::operation::batch_get_findings::builders::BatchGetFindingsOutputBuilder {
    if builder.findings.is_none() {
        builder.findings = Some(Default::default())
    }
    if builder.failed_findings.is_none() {
        builder.failed_findings = Some(Default::default())
    }
    builder
}

pub(crate) fn conflict_exception_correct_errors(
    mut builder: crate::types::error::builders::ConflictExceptionBuilder,
) -> crate::types::error::builders::ConflictExceptionBuilder {
    if builder.error_code.is_none() {
        builder.error_code = Some(Default::default())
    }
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    if builder.resource_id.is_none() {
        builder.resource_id = Some(Default::default())
    }
    if builder.resource_type.is_none() {
        builder.resource_type = Some(Default::default())
    }
    builder
}

pub(crate) fn resource_not_found_exception_correct_errors(
    mut builder: crate::types::error::builders::ResourceNotFoundExceptionBuilder,
) -> crate::types::error::builders::ResourceNotFoundExceptionBuilder {
    if builder.error_code.is_none() {
        builder.error_code = Some(Default::default())
    }
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    if builder.resource_id.is_none() {
        builder.resource_id = Some(Default::default())
    }
    if builder.resource_type.is_none() {
        builder.resource_type = Some(Default::default())
    }
    builder
}

pub(crate) fn create_scan_output_correct_errors(
    mut builder: crate::operation::create_scan::builders::CreateScanOutputBuilder,
) -> crate::operation::create_scan::builders::CreateScanOutputBuilder {
    if builder.scan_name.is_none() {
        builder.scan_name = Some(Default::default())
    }
    if builder.run_id.is_none() {
        builder.run_id = Some(Default::default())
    }
    if builder.resource_id.is_none() {
        builder.resource_id = Some(crate::types::ResourceId::Unknown)
    }
    if builder.scan_state.is_none() {
        builder.scan_state = "no value was set".parse::<crate::types::ScanState>().ok()
    }
    builder
}

pub(crate) fn create_upload_url_output_correct_errors(
    mut builder: crate::operation::create_upload_url::builders::CreateUploadUrlOutputBuilder,
) -> crate::operation::create_upload_url::builders::CreateUploadUrlOutputBuilder {
    if builder.s3_url.is_none() {
        builder.s3_url = Some(Default::default())
    }
    if builder.request_headers.is_none() {
        builder.request_headers = Some(Default::default())
    }
    if builder.code_artifact_id.is_none() {
        builder.code_artifact_id = Some(Default::default())
    }
    builder
}

pub(crate) fn get_account_configuration_output_correct_errors(
    mut builder: crate::operation::get_account_configuration::builders::GetAccountConfigurationOutputBuilder,
) -> crate::operation::get_account_configuration::builders::GetAccountConfigurationOutputBuilder {
    if builder.encryption_config.is_none() {
        builder.encryption_config = {
            let builder = crate::types::builders::EncryptionConfigBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn get_scan_output_correct_errors(
    mut builder: crate::operation::get_scan::builders::GetScanOutputBuilder,
) -> crate::operation::get_scan::builders::GetScanOutputBuilder {
    if builder.scan_name.is_none() {
        builder.scan_name = Some(Default::default())
    }
    if builder.run_id.is_none() {
        builder.run_id = Some(Default::default())
    }
    if builder.scan_state.is_none() {
        builder.scan_state = "no value was set".parse::<crate::types::ScanState>().ok()
    }
    if builder.created_at.is_none() {
        builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.analysis_type.is_none() {
        builder.analysis_type = "no value was set".parse::<crate::types::AnalysisType>().ok()
    }
    builder
}

pub(crate) fn update_account_configuration_output_correct_errors(
    mut builder: crate::operation::update_account_configuration::builders::UpdateAccountConfigurationOutputBuilder,
) -> crate::operation::update_account_configuration::builders::UpdateAccountConfigurationOutputBuilder {
    if builder.encryption_config.is_none() {
        builder.encryption_config = {
            let builder = crate::types::builders::EncryptionConfigBuilder::default();
            Some(builder.build())
        }
    }
    builder
}

pub(crate) fn batch_get_findings_error_correct_errors(
    mut builder: crate::types::builders::BatchGetFindingsErrorBuilder,
) -> crate::types::builders::BatchGetFindingsErrorBuilder {
    if builder.scan_name.is_none() {
        builder.scan_name = Some(Default::default())
    }
    if builder.finding_id.is_none() {
        builder.finding_id = Some(Default::default())
    }
    if builder.error_code.is_none() {
        builder.error_code = "no value was set".parse::<crate::types::ErrorCode>().ok()
    }
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn scan_summary_correct_errors(mut builder: crate::types::builders::ScanSummaryBuilder) -> crate::types::builders::ScanSummaryBuilder {
    if builder.scan_state.is_none() {
        builder.scan_state = "no value was set".parse::<crate::types::ScanState>().ok()
    }
    if builder.created_at.is_none() {
        builder.created_at = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.scan_name.is_none() {
        builder.scan_name = Some(Default::default())
    }
    if builder.run_id.is_none() {
        builder.run_id = Some(Default::default())
    }
    builder
}

pub(crate) fn validation_exception_field_correct_errors(
    mut builder: crate::types::builders::ValidationExceptionFieldBuilder,
) -> crate::types::builders::ValidationExceptionFieldBuilder {
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}
