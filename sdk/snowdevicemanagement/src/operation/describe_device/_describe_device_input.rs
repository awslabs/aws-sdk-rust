// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeDeviceInput {
    /// <p>The ID of the device that you are checking the information of.</p>
    #[doc(hidden)]
    pub managed_device_id: std::option::Option<std::string::String>,
}
impl DescribeDeviceInput {
    /// <p>The ID of the device that you are checking the information of.</p>
    pub fn managed_device_id(&self) -> std::option::Option<&str> {
        self.managed_device_id.as_deref()
    }
}
impl DescribeDeviceInput {
    /// Creates a new builder-style object to manufacture [`DescribeDeviceInput`](crate::operation::describe_device::DescribeDeviceInput).
    pub fn builder() -> crate::operation::describe_device::builders::DescribeDeviceInputBuilder {
        crate::operation::describe_device::builders::DescribeDeviceInputBuilder::default()
    }
}

/// A builder for [`DescribeDeviceInput`](crate::operation::describe_device::DescribeDeviceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeDeviceInputBuilder {
    pub(crate) managed_device_id: std::option::Option<std::string::String>,
}
impl DescribeDeviceInputBuilder {
    /// <p>The ID of the device that you are checking the information of.</p>
    pub fn managed_device_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.managed_device_id = Some(input.into());
        self
    }
    /// <p>The ID of the device that you are checking the information of.</p>
    pub fn set_managed_device_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.managed_device_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDeviceInput`](crate::operation::describe_device::DescribeDeviceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_device::DescribeDeviceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_device::DescribeDeviceInput {
            managed_device_id: self.managed_device_id,
        })
    }
}
