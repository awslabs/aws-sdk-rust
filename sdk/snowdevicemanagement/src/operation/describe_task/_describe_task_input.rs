// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeTaskInput {
    /// <p>The ID of the task to be described.</p>
    #[doc(hidden)]
    pub task_id: std::option::Option<std::string::String>,
}
impl DescribeTaskInput {
    /// <p>The ID of the task to be described.</p>
    pub fn task_id(&self) -> std::option::Option<&str> {
        self.task_id.as_deref()
    }
}
impl DescribeTaskInput {
    /// Creates a new builder-style object to manufacture [`DescribeTaskInput`](crate::operation::describe_task::DescribeTaskInput).
    pub fn builder() -> crate::operation::describe_task::builders::DescribeTaskInputBuilder {
        crate::operation::describe_task::builders::DescribeTaskInputBuilder::default()
    }
}

/// A builder for [`DescribeTaskInput`](crate::operation::describe_task::DescribeTaskInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeTaskInputBuilder {
    pub(crate) task_id: std::option::Option<std::string::String>,
}
impl DescribeTaskInputBuilder {
    /// <p>The ID of the task to be described.</p>
    pub fn task_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.task_id = Some(input.into());
        self
    }
    /// <p>The ID of the task to be described.</p>
    pub fn set_task_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.task_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeTaskInput`](crate::operation::describe_task::DescribeTaskInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_task::DescribeTaskInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_task::DescribeTaskInput {
            task_id: self.task_id,
        })
    }
}
