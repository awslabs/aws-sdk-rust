// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeTask`](crate::client::fluent_builders::DescribeTask) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`task_id(impl Into<String>)`](crate::client::fluent_builders::DescribeTask::task_id) / [`set_task_id(Option<String>)`](crate::client::fluent_builders::DescribeTask::set_task_id): <p>The ID of the task to be described.</p>
    /// - On success, responds with [`DescribeTaskOutput`](crate::output::DescribeTaskOutput) with field(s):
    ///   - [`task_id(Option<String>)`](crate::output::DescribeTaskOutput::task_id): <p>The ID of the task.</p>
    ///   - [`task_arn(Option<String>)`](crate::output::DescribeTaskOutput::task_arn): <p>The Amazon Resource Name (ARN) of the task.</p>
    ///   - [`targets(Option<Vec<String>>)`](crate::output::DescribeTaskOutput::targets): <p>The managed devices that the task was sent to.</p>
    ///   - [`state(Option<TaskState>)`](crate::output::DescribeTaskOutput::state): <p>The current state of the task.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::output::DescribeTaskOutput::created_at): <p>When the <code>CreateTask</code> operation was called.</p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::output::DescribeTaskOutput::last_updated_at): <p>When the state of the task was last updated.</p>
    ///   - [`completed_at(Option<DateTime>)`](crate::output::DescribeTaskOutput::completed_at): <p>When the task was completed.</p>
    ///   - [`description(Option<String>)`](crate::output::DescribeTaskOutput::description): <p>The description provided of the task and managed devices.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::DescribeTaskOutput::tags): <p>Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment.</p>
    /// - On failure, responds with [`SdkError<DescribeTaskError>`](crate::error::DescribeTaskError)
    pub fn describe_task(&self) -> crate::client::fluent_builders::DescribeTask {
        crate::client::fluent_builders::DescribeTask::new(self.handle.clone())
    }
}
