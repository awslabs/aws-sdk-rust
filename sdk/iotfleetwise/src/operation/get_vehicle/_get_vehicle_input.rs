// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetVehicleInput {
    /// <p> The ID of the vehicle to retrieve information about. </p>
    pub vehicle_name: ::std::option::Option<::std::string::String>,
}
impl GetVehicleInput {
    /// <p> The ID of the vehicle to retrieve information about. </p>
    pub fn vehicle_name(&self) -> ::std::option::Option<&str> {
        self.vehicle_name.as_deref()
    }
}
impl GetVehicleInput {
    /// Creates a new builder-style object to manufacture [`GetVehicleInput`](crate::operation::get_vehicle::GetVehicleInput).
    pub fn builder() -> crate::operation::get_vehicle::builders::GetVehicleInputBuilder {
        crate::operation::get_vehicle::builders::GetVehicleInputBuilder::default()
    }
}

/// A builder for [`GetVehicleInput`](crate::operation::get_vehicle::GetVehicleInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetVehicleInputBuilder {
    pub(crate) vehicle_name: ::std::option::Option<::std::string::String>,
}
impl GetVehicleInputBuilder {
    /// <p> The ID of the vehicle to retrieve information about. </p>
    /// This field is required.
    pub fn vehicle_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vehicle_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The ID of the vehicle to retrieve information about. </p>
    pub fn set_vehicle_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vehicle_name = input;
        self
    }
    /// <p> The ID of the vehicle to retrieve information about. </p>
    pub fn get_vehicle_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.vehicle_name
    }
    /// Consumes the builder and constructs a [`GetVehicleInput`](crate::operation::get_vehicle::GetVehicleInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_vehicle::GetVehicleInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_vehicle::GetVehicleInput {
            vehicle_name: self.vehicle_name,
        })
    }
}
