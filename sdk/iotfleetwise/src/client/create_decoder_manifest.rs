// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDecoderManifest`](crate::client::fluent_builders::CreateDecoderManifest) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateDecoderManifest::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateDecoderManifest::set_name): <p> The unique name of the decoder manifest to create.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateDecoderManifest::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateDecoderManifest::set_description): <p> A brief description of the decoder manifest. </p>
    ///   - [`model_manifest_arn(impl Into<String>)`](crate::client::fluent_builders::CreateDecoderManifest::model_manifest_arn) / [`set_model_manifest_arn(Option<String>)`](crate::client::fluent_builders::CreateDecoderManifest::set_model_manifest_arn): <p> The Amazon Resource Name (ARN) of the vehicle model (model manifest). </p>
    ///   - [`signal_decoders(Vec<SignalDecoder>)`](crate::client::fluent_builders::CreateDecoderManifest::signal_decoders) / [`set_signal_decoders(Option<Vec<SignalDecoder>>)`](crate::client::fluent_builders::CreateDecoderManifest::set_signal_decoders): <p> A list of information about signal decoders. </p>
    ///   - [`network_interfaces(Vec<NetworkInterface>)`](crate::client::fluent_builders::CreateDecoderManifest::network_interfaces) / [`set_network_interfaces(Option<Vec<NetworkInterface>>)`](crate::client::fluent_builders::CreateDecoderManifest::set_network_interfaces): <p> A list of information about available network interfaces. </p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateDecoderManifest::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateDecoderManifest::set_tags): <p>Metadata that can be used to manage the decoder manifest.</p>
    /// - On success, responds with [`CreateDecoderManifestOutput`](crate::output::CreateDecoderManifestOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::output::CreateDecoderManifestOutput::name): <p> The name of the created decoder manifest. </p>
    ///   - [`arn(Option<String>)`](crate::output::CreateDecoderManifestOutput::arn): <p> The ARN of the created decoder manifest. </p>
    /// - On failure, responds with [`SdkError<CreateDecoderManifestError>`](crate::error::CreateDecoderManifestError)
    pub fn create_decoder_manifest(&self) -> crate::client::fluent_builders::CreateDecoderManifest {
        crate::client::fluent_builders::CreateDecoderManifest::new(self.handle.clone())
    }
}
