// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSignalCatalog`](crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder::set_name):<br>required: **true**<br><p> The name of the signal catalog to create. </p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder::set_description):<br>required: **false**<br><p>A brief description of the signal catalog.</p><br>
    ///   - [`nodes(Node)`](crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder::nodes) / [`set_nodes(Option<Vec::<Node>>)`](crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder::set_nodes):<br>required: **false**<br><p> A list of information about nodes, which are a general abstraction of signals. For more information, see the API data type.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder::set_tags):<br>required: **false**<br><p>Metadata that can be used to manage the signal catalog.</p><br>
    /// - On success, responds with [`CreateSignalCatalogOutput`](crate::operation::create_signal_catalog::CreateSignalCatalogOutput) with field(s):
    ///   - [`name(String)`](crate::operation::create_signal_catalog::CreateSignalCatalogOutput::name): <p> The name of the created signal catalog. </p>
    ///   - [`arn(String)`](crate::operation::create_signal_catalog::CreateSignalCatalogOutput::arn): <p> The ARN of the created signal catalog. </p>
    /// - On failure, responds with [`SdkError<CreateSignalCatalogError>`](crate::operation::create_signal_catalog::CreateSignalCatalogError)
    pub fn create_signal_catalog(&self) -> crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder {
        crate::operation::create_signal_catalog::builders::CreateSignalCatalogFluentBuilder::new(self.handle.clone())
    }
}
