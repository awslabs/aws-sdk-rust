// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetVehicle`](crate::client::fluent_builders::GetVehicle) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`vehicle_name(impl Into<String>)`](crate::client::fluent_builders::GetVehicle::vehicle_name) / [`set_vehicle_name(Option<String>)`](crate::client::fluent_builders::GetVehicle::set_vehicle_name): <p> The ID of the vehicle to retrieve information about. </p>
    /// - On success, responds with [`GetVehicleOutput`](crate::output::GetVehicleOutput) with field(s):
    ///   - [`vehicle_name(Option<String>)`](crate::output::GetVehicleOutput::vehicle_name): <p>The ID of the vehicle.</p>
    ///   - [`arn(Option<String>)`](crate::output::GetVehicleOutput::arn): <p> The Amazon Resource Name (ARN) of the vehicle to retrieve information about. </p>
    ///   - [`model_manifest_arn(Option<String>)`](crate::output::GetVehicleOutput::model_manifest_arn): <p> The ARN of a vehicle model (model manifest) associated with the vehicle. </p>
    ///   - [`decoder_manifest_arn(Option<String>)`](crate::output::GetVehicleOutput::decoder_manifest_arn): <p> The ARN of a decoder manifest associated with the vehicle. </p>
    ///   - [`attributes(Option<HashMap<String, String>>)`](crate::output::GetVehicleOutput::attributes): <p>Static information about a vehicle in a key-value pair. For example:</p>  <p> <code>"engineType"</code> : <code>"1.3 L R2"</code> </p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::GetVehicleOutput::creation_time): <p> The time the vehicle was created in seconds since epoch (January 1, 1970 at midnight UTC time). </p>
    ///   - [`last_modification_time(Option<DateTime>)`](crate::output::GetVehicleOutput::last_modification_time): <p> The time the vehicle was last updated in seconds since epoch (January 1, 1970 at midnight UTC time). </p>
    /// - On failure, responds with [`SdkError<GetVehicleError>`](crate::error::GetVehicleError)
    pub fn get_vehicle(&self) -> crate::client::fluent_builders::GetVehicle {
        crate::client::fluent_builders::GetVehicle::new(self.handle.clone())
    }
}
