// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFleet`](crate::client::fluent_builders::CreateFleet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`fleet_id(impl Into<String>)`](crate::client::fluent_builders::CreateFleet::fleet_id) / [`set_fleet_id(Option<String>)`](crate::client::fluent_builders::CreateFleet::set_fleet_id): <p> The unique ID of the fleet to create. </p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateFleet::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateFleet::set_description): <p> A brief description of the fleet to create. </p>
    ///   - [`signal_catalog_arn(impl Into<String>)`](crate::client::fluent_builders::CreateFleet::signal_catalog_arn) / [`set_signal_catalog_arn(Option<String>)`](crate::client::fluent_builders::CreateFleet::set_signal_catalog_arn): <p> The Amazon Resource Name (ARN) of a signal catalog. </p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateFleet::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateFleet::set_tags): <p>Metadata that can be used to manage the fleet.</p>
    /// - On success, responds with [`CreateFleetOutput`](crate::output::CreateFleetOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::CreateFleetOutput::id): <p> The ID of the created fleet. </p>
    ///   - [`arn(Option<String>)`](crate::output::CreateFleetOutput::arn): <p> The ARN of the created fleet. </p>
    /// - On failure, responds with [`SdkError<CreateFleetError>`](crate::error::CreateFleetError)
    pub fn create_fleet(&self) -> crate::client::fluent_builders::CreateFleet {
        crate::client::fluent_builders::CreateFleet::new(self.handle.clone())
    }
}
