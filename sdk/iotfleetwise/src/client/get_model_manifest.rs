// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetModelManifest`](crate::client::fluent_builders::GetModelManifest) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetModelManifest::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetModelManifest::set_name): <p> The name of the vehicle model to retrieve information about. </p>
    /// - On success, responds with [`GetModelManifestOutput`](crate::output::GetModelManifestOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::output::GetModelManifestOutput::name): <p> The name of the vehicle model. </p>
    ///   - [`arn(Option<String>)`](crate::output::GetModelManifestOutput::arn): <p> The Amazon Resource Name (ARN) of the vehicle model. </p>
    ///   - [`description(Option<String>)`](crate::output::GetModelManifestOutput::description): <p> A brief description of the vehicle model. </p>
    ///   - [`signal_catalog_arn(Option<String>)`](crate::output::GetModelManifestOutput::signal_catalog_arn): <p> The ARN of the signal catalog associated with the vehicle model. </p>
    ///   - [`status(Option<ManifestStatus>)`](crate::output::GetModelManifestOutput::status): <p> The state of the vehicle model. If the status is <code>ACTIVE</code>, the vehicle model can't be edited. You can edit the vehicle model if the status is marked <code>DRAFT</code>.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::GetModelManifestOutput::creation_time): <p>The time the vehicle model was created, in seconds since epoch (January 1, 1970 at midnight UTC time).</p>
    ///   - [`last_modification_time(Option<DateTime>)`](crate::output::GetModelManifestOutput::last_modification_time): <p>The last time the vehicle model was modified.</p>
    /// - On failure, responds with [`SdkError<GetModelManifestError>`](crate::error::GetModelManifestError)
    pub fn get_model_manifest(&self) -> crate::client::fluent_builders::GetModelManifest {
        crate::client::fluent_builders::GetModelManifest::new(self.handle.clone())
    }
}
