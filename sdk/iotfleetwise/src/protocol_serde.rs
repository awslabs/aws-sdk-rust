// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_associate_vehicle_fleet;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_batch_create_vehicle;

pub(crate) mod shape_batch_update_vehicle;

pub(crate) mod shape_create_campaign;

pub(crate) mod shape_create_decoder_manifest;

pub(crate) mod shape_create_fleet;

pub(crate) mod shape_create_model_manifest;

pub(crate) mod shape_create_signal_catalog;

pub(crate) mod shape_create_vehicle;

pub(crate) mod shape_delete_campaign;

pub(crate) mod shape_delete_decoder_manifest;

pub(crate) mod shape_delete_fleet;

pub(crate) mod shape_delete_model_manifest;

pub(crate) mod shape_delete_signal_catalog;

pub(crate) mod shape_delete_vehicle;

pub(crate) mod shape_disassociate_vehicle_fleet;

pub(crate) mod shape_get_campaign;

pub(crate) mod shape_get_decoder_manifest;

pub(crate) mod shape_get_fleet;

pub(crate) mod shape_get_logging_options;

pub(crate) mod shape_get_model_manifest;

pub(crate) mod shape_get_register_account_status;

pub(crate) mod shape_get_signal_catalog;

pub(crate) mod shape_get_vehicle;

pub(crate) mod shape_get_vehicle_status;

pub(crate) mod shape_import_decoder_manifest;

pub(crate) mod shape_import_signal_catalog;

pub(crate) mod shape_list_campaigns;

pub(crate) mod shape_list_decoder_manifest_network_interfaces;

pub(crate) mod shape_list_decoder_manifest_signals;

pub(crate) mod shape_list_decoder_manifests;

pub(crate) mod shape_list_fleets;

pub(crate) mod shape_list_fleets_for_vehicle;

pub(crate) mod shape_list_model_manifest_nodes;

pub(crate) mod shape_list_model_manifests;

pub(crate) mod shape_list_signal_catalog_nodes;

pub(crate) mod shape_list_signal_catalogs;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_vehicles;

pub(crate) mod shape_list_vehicles_in_fleet;

pub(crate) mod shape_put_logging_options;

pub(crate) mod shape_register_account;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_campaign;

pub(crate) mod shape_update_decoder_manifest;

pub(crate) mod shape_update_fleet;

pub(crate) mod shape_update_model_manifest;

pub(crate) mod shape_update_signal_catalog;

pub(crate) mod shape_update_vehicle;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_associate_vehicle_fleet_input;

pub(crate) mod shape_batch_create_vehicle_input;

pub(crate) mod shape_batch_update_vehicle_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_campaign_input;

pub(crate) mod shape_create_decoder_manifest_input;

pub(crate) mod shape_create_fleet_input;

pub(crate) mod shape_create_model_manifest_input;

pub(crate) mod shape_create_signal_catalog_input;

pub(crate) mod shape_create_vehicle_input;

pub(crate) mod shape_decoder_manifest_validation_exception;

pub(crate) mod shape_delete_campaign_input;

pub(crate) mod shape_delete_decoder_manifest_input;

pub(crate) mod shape_delete_fleet_input;

pub(crate) mod shape_delete_model_manifest_input;

pub(crate) mod shape_delete_signal_catalog_input;

pub(crate) mod shape_delete_vehicle_input;

pub(crate) mod shape_disassociate_vehicle_fleet_input;

pub(crate) mod shape_get_campaign_input;

pub(crate) mod shape_get_decoder_manifest_input;

pub(crate) mod shape_get_fleet_input;

pub(crate) mod shape_get_model_manifest_input;

pub(crate) mod shape_get_signal_catalog_input;

pub(crate) mod shape_get_vehicle_input;

pub(crate) mod shape_get_vehicle_status_input;

pub(crate) mod shape_import_decoder_manifest_input;

pub(crate) mod shape_import_signal_catalog_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_invalid_node_exception;

pub(crate) mod shape_invalid_signals_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_campaigns_input;

pub(crate) mod shape_list_decoder_manifest_network_interfaces_input;

pub(crate) mod shape_list_decoder_manifest_signals_input;

pub(crate) mod shape_list_decoder_manifests_input;

pub(crate) mod shape_list_fleets_for_vehicle_input;

pub(crate) mod shape_list_fleets_input;

pub(crate) mod shape_list_model_manifest_nodes_input;

pub(crate) mod shape_list_model_manifests_input;

pub(crate) mod shape_list_signal_catalog_nodes_input;

pub(crate) mod shape_list_signal_catalogs_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_list_vehicles_in_fleet_input;

pub(crate) mod shape_list_vehicles_input;

pub(crate) mod shape_put_logging_options_input;

pub(crate) mod shape_register_account_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_campaign_input;

pub(crate) mod shape_update_decoder_manifest_input;

pub(crate) mod shape_update_fleet_input;

pub(crate) mod shape_update_model_manifest_input;

pub(crate) mod shape_update_signal_catalog_input;

pub(crate) mod shape_update_vehicle_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_attributes_map;

pub(crate) mod shape_campaign_summaries;

pub(crate) mod shape_cloud_watch_log_delivery_options;

pub(crate) mod shape_collection_scheme;

pub(crate) mod shape_create_vehicle_errors;

pub(crate) mod shape_create_vehicle_request_item;

pub(crate) mod shape_create_vehicle_responses;

pub(crate) mod shape_data_extra_dimension_node_path_list;

pub(crate) mod shape_decoder_manifest_summaries;

pub(crate) mod shape_fleet_summaries;

pub(crate) mod shape_fleets;

pub(crate) mod shape_formatted_vss;

pub(crate) mod shape_iam_registration_response;

pub(crate) mod shape_iam_resources;

pub(crate) mod shape_invalid_network_interfaces;

pub(crate) mod shape_invalid_signal_decoders;

pub(crate) mod shape_invalid_signals;

pub(crate) mod shape_model_manifest_summaries;

pub(crate) mod shape_network_file_definition;

pub(crate) mod shape_network_interface;

pub(crate) mod shape_network_interfaces;

pub(crate) mod shape_node;

pub(crate) mod shape_node_counts;

pub(crate) mod shape_nodes;

pub(crate) mod shape_signal_catalog_summaries;

pub(crate) mod shape_signal_decoder;

pub(crate) mod shape_signal_decoders;

pub(crate) mod shape_signal_information;

pub(crate) mod shape_signal_information_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_timestream_registration_response;

pub(crate) mod shape_timestream_resources;

pub(crate) mod shape_update_vehicle_errors;

pub(crate) mod shape_update_vehicle_request_item;

pub(crate) mod shape_update_vehicle_response_items;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_vehicle_status_list;

pub(crate) mod shape_vehicle_summaries;

pub(crate) mod shape_vehicles;

pub(crate) mod shape_actuator;

pub(crate) mod shape_attribute;

pub(crate) mod shape_branch;

pub(crate) mod shape_campaign_summary;

pub(crate) mod shape_can_dbc_definition;

pub(crate) mod shape_can_interface;

pub(crate) mod shape_can_signal;

pub(crate) mod shape_condition_based_collection_scheme;

pub(crate) mod shape_create_vehicle_error;

pub(crate) mod shape_create_vehicle_response_item;

pub(crate) mod shape_decoder_manifest_summary;

pub(crate) mod shape_fleet_summary;

pub(crate) mod shape_invalid_network_interface;

pub(crate) mod shape_invalid_signal;

pub(crate) mod shape_invalid_signal_decoder;

pub(crate) mod shape_model_manifest_summary;

pub(crate) mod shape_obd_interface;

pub(crate) mod shape_obd_signal;

pub(crate) mod shape_sensor;

pub(crate) mod shape_signal_catalog_summary;

pub(crate) mod shape_time_based_collection_scheme;

pub(crate) mod shape_update_vehicle_error;

pub(crate) mod shape_update_vehicle_response_item;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_vehicle_status;

pub(crate) mod shape_vehicle_summary;

pub(crate) mod shape_list_of_strings;
