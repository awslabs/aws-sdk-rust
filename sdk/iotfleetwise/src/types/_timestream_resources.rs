// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The registered Amazon Timestream resources that Amazon Web Services IoT FleetWise edge agent software can transfer your vehicle data to.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TimestreamResources {
    /// <p>The name of the registered Amazon Timestream database.</p>
    #[doc(hidden)]
    pub timestream_database_name: std::option::Option<std::string::String>,
    /// <p>The name of the registered Amazon Timestream database table.</p>
    #[doc(hidden)]
    pub timestream_table_name: std::option::Option<std::string::String>,
}
impl TimestreamResources {
    /// <p>The name of the registered Amazon Timestream database.</p>
    pub fn timestream_database_name(&self) -> std::option::Option<&str> {
        self.timestream_database_name.as_deref()
    }
    /// <p>The name of the registered Amazon Timestream database table.</p>
    pub fn timestream_table_name(&self) -> std::option::Option<&str> {
        self.timestream_table_name.as_deref()
    }
}
impl TimestreamResources {
    /// Creates a new builder-style object to manufacture [`TimestreamResources`](crate::types::TimestreamResources).
    pub fn builder() -> crate::types::builders::TimestreamResourcesBuilder {
        crate::types::builders::TimestreamResourcesBuilder::default()
    }
}

/// A builder for [`TimestreamResources`](crate::types::TimestreamResources).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TimestreamResourcesBuilder {
    pub(crate) timestream_database_name: std::option::Option<std::string::String>,
    pub(crate) timestream_table_name: std::option::Option<std::string::String>,
}
impl TimestreamResourcesBuilder {
    /// <p>The name of the registered Amazon Timestream database.</p>
    pub fn timestream_database_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.timestream_database_name = Some(input.into());
        self
    }
    /// <p>The name of the registered Amazon Timestream database.</p>
    pub fn set_timestream_database_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.timestream_database_name = input;
        self
    }
    /// <p>The name of the registered Amazon Timestream database table.</p>
    pub fn timestream_table_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.timestream_table_name = Some(input.into());
        self
    }
    /// <p>The name of the registered Amazon Timestream database table.</p>
    pub fn set_timestream_table_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.timestream_table_name = input;
        self
    }
    /// Consumes the builder and constructs a [`TimestreamResources`](crate::types::TimestreamResources).
    pub fn build(self) -> crate::types::TimestreamResources {
        crate::types::TimestreamResources {
            timestream_database_name: self.timestream_database_name,
            timestream_table_name: self.timestream_table_name,
        }
    }
}
