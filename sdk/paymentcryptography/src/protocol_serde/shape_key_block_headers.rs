// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_key_block_headers(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::KeyBlockHeaders,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.key_modes_of_use {
        #[allow(unused_mut)]
        let mut object_2 = object.key("KeyModesOfUse").start_object();
        crate::protocol_serde::shape_key_modes_of_use::ser_key_modes_of_use(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.key_exportability {
        object.key("KeyExportability").string(var_3.as_str());
    }
    if let Some(var_4) = &input.key_version {
        object.key("KeyVersion").string(var_4.as_str());
    }
    if let Some(var_5) = &input.optional_blocks {
        #[allow(unused_mut)]
        let mut object_6 = object.key("OptionalBlocks").start_object();
        for (key_7, value_8) in var_5 {
            {
                object_6.key(key_7.as_str()).string(value_8.as_str());
            }
        }
        object_6.finish();
    }
    Ok(())
}
