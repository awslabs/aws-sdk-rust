// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the replication status information for a key in a replication region for <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-multi-region-replication.html">Multi-Region key replication</a>.</p>
/// <p>This structure contains details about the current state of key replication, including any status messages and operational information about the replication process.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReplicationStatusType {
    /// <p>The current status of key replication in this Amazon Web Services Region.</p>
    /// <p>This field indicates whether the key replication is in progress, completed successfully, or has encountered an error. Possible values include states such as <code>SYNCRHONIZED</code>, <code>IN_PROGRESS</code>, <code>DELETE_IN_PROGRESS</code>, or <code>FAILED</code>. This provides visibility into the replication process for monitoring and troubleshooting purposes.</p>
    pub status: crate::types::KeyReplicationState,
    /// <p>A message that provides additional information about the current replication status of the key.</p>
    /// <p>This field contains details about any issues or progress updates related to key replication operations. It may include information about replication failures, synchronization status, or other operational details.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
}
impl ReplicationStatusType {
    /// <p>The current status of key replication in this Amazon Web Services Region.</p>
    /// <p>This field indicates whether the key replication is in progress, completed successfully, or has encountered an error. Possible values include states such as <code>SYNCRHONIZED</code>, <code>IN_PROGRESS</code>, <code>DELETE_IN_PROGRESS</code>, or <code>FAILED</code>. This provides visibility into the replication process for monitoring and troubleshooting purposes.</p>
    pub fn status(&self) -> &crate::types::KeyReplicationState {
        &self.status
    }
    /// <p>A message that provides additional information about the current replication status of the key.</p>
    /// <p>This field contains details about any issues or progress updates related to key replication operations. It may include information about replication failures, synchronization status, or other operational details.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
}
impl ReplicationStatusType {
    /// Creates a new builder-style object to manufacture [`ReplicationStatusType`](crate::types::ReplicationStatusType).
    pub fn builder() -> crate::types::builders::ReplicationStatusTypeBuilder {
        crate::types::builders::ReplicationStatusTypeBuilder::default()
    }
}

/// A builder for [`ReplicationStatusType`](crate::types::ReplicationStatusType).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ReplicationStatusTypeBuilder {
    pub(crate) status: ::std::option::Option<crate::types::KeyReplicationState>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
}
impl ReplicationStatusTypeBuilder {
    /// <p>The current status of key replication in this Amazon Web Services Region.</p>
    /// <p>This field indicates whether the key replication is in progress, completed successfully, or has encountered an error. Possible values include states such as <code>SYNCRHONIZED</code>, <code>IN_PROGRESS</code>, <code>DELETE_IN_PROGRESS</code>, or <code>FAILED</code>. This provides visibility into the replication process for monitoring and troubleshooting purposes.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::KeyReplicationState) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of key replication in this Amazon Web Services Region.</p>
    /// <p>This field indicates whether the key replication is in progress, completed successfully, or has encountered an error. Possible values include states such as <code>SYNCRHONIZED</code>, <code>IN_PROGRESS</code>, <code>DELETE_IN_PROGRESS</code>, or <code>FAILED</code>. This provides visibility into the replication process for monitoring and troubleshooting purposes.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::KeyReplicationState>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of key replication in this Amazon Web Services Region.</p>
    /// <p>This field indicates whether the key replication is in progress, completed successfully, or has encountered an error. Possible values include states such as <code>SYNCRHONIZED</code>, <code>IN_PROGRESS</code>, <code>DELETE_IN_PROGRESS</code>, or <code>FAILED</code>. This provides visibility into the replication process for monitoring and troubleshooting purposes.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::KeyReplicationState> {
        &self.status
    }
    /// <p>A message that provides additional information about the current replication status of the key.</p>
    /// <p>This field contains details about any issues or progress updates related to key replication operations. It may include information about replication failures, synchronization status, or other operational details.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A message that provides additional information about the current replication status of the key.</p>
    /// <p>This field contains details about any issues or progress updates related to key replication operations. It may include information about replication failures, synchronization status, or other operational details.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>A message that provides additional information about the current replication status of the key.</p>
    /// <p>This field contains details about any issues or progress updates related to key replication operations. It may include information about replication failures, synchronization status, or other operational details.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// Consumes the builder and constructs a [`ReplicationStatusType`](crate::types::ReplicationStatusType).
    /// This method will fail if any of the following fields are not set:
    /// - [`status`](crate::types::builders::ReplicationStatusTypeBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::ReplicationStatusType, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ReplicationStatusType {
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building ReplicationStatusType",
                )
            })?,
            status_message: self.status_message,
        })
    }
}
