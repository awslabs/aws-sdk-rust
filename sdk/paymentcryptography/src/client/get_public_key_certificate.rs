// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetPublicKeyCertificate`](crate::operation::get_public_key_certificate::builders::GetPublicKeyCertificateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`key_identifier(impl Into<String>)`](crate::operation::get_public_key_certificate::builders::GetPublicKeyCertificateFluentBuilder::key_identifier) / [`set_key_identifier(Option<String>)`](crate::operation::get_public_key_certificate::builders::GetPublicKeyCertificateFluentBuilder::set_key_identifier):<br>required: **true**<br><p>The <code>KeyARN</code> of the asymmetric key pair.</p><br>
    /// - On success, responds with [`GetPublicKeyCertificateOutput`](crate::operation::get_public_key_certificate::GetPublicKeyCertificateOutput) with field(s):
    ///   - [`key_certificate(String)`](crate::operation::get_public_key_certificate::GetPublicKeyCertificateOutput::key_certificate): <p>The public key component of the asymmetric key pair in a certificate (PEM) format. It is signed by the root certificate authority (CA) within your service account. The certificate expires in 90 days.</p>
    ///   - [`key_certificate_chain(String)`](crate::operation::get_public_key_certificate::GetPublicKeyCertificateOutput::key_certificate_chain): <p>The certificate chain that signed the public key certificate of the asymmetric key pair. This is the root certificate authority (CA) within your service account.</p>
    /// - On failure, responds with [`SdkError<GetPublicKeyCertificateError>`](crate::operation::get_public_key_certificate::GetPublicKeyCertificateError)
    pub fn get_public_key_certificate(&self) -> crate::operation::get_public_key_certificate::builders::GetPublicKeyCertificateFluentBuilder {
        crate::operation::get_public_key_certificate::builders::GetPublicKeyCertificateFluentBuilder::new(self.handle.clone())
    }
}
