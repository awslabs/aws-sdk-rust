// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetParametersForExport`](crate::operation::get_parameters_for_export::builders::GetParametersForExportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`key_material_type(KeyMaterialType)`](crate::operation::get_parameters_for_export::builders::GetParametersForExportFluentBuilder::key_material_type) / [`set_key_material_type(Option<KeyMaterialType>)`](crate::operation::get_parameters_for_export::builders::GetParametersForExportFluentBuilder::set_key_material_type):<br>required: **true**<br><p>The key block format type (for example, TR-34 or TR-31) to use during key material export. Export token is only required for a TR-34 key export, <code>TR34_KEY_BLOCK</code>. Export token is not required for TR-31 key export.</p><br>
    ///   - [`signing_key_algorithm(KeyAlgorithm)`](crate::operation::get_parameters_for_export::builders::GetParametersForExportFluentBuilder::signing_key_algorithm) / [`set_signing_key_algorithm(Option<KeyAlgorithm>)`](crate::operation::get_parameters_for_export::builders::GetParametersForExportFluentBuilder::set_signing_key_algorithm):<br>required: **true**<br><p>The signing key algorithm to generate a signing key certificate. This certificate signs the wrapped key under export within the TR-34 key block cryptogram. <code>RSA_2048</code> is the only signing key algorithm allowed.</p><br>
    /// - On success, responds with [`GetParametersForExportOutput`](crate::operation::get_parameters_for_export::GetParametersForExportOutput) with field(s):
    ///   - [`signing_key_certificate(String)`](crate::operation::get_parameters_for_export::GetParametersForExportOutput::signing_key_certificate): <p>The signing key certificate of the public key for signature within the TR-34 key block cryptogram. The certificate expires after 7 days.</p>
    ///   - [`signing_key_certificate_chain(String)`](crate::operation::get_parameters_for_export::GetParametersForExportOutput::signing_key_certificate_chain): <p>The certificate chain that signed the signing key certificate. This is the root certificate authority (CA) within your service account.</p>
    ///   - [`signing_key_algorithm(KeyAlgorithm)`](crate::operation::get_parameters_for_export::GetParametersForExportOutput::signing_key_algorithm): <p>The algorithm of the signing key certificate for use in TR-34 key block generation. <code>RSA_2048</code> is the only signing key algorithm allowed.</p>
    ///   - [`export_token(String)`](crate::operation::get_parameters_for_export::GetParametersForExportOutput::export_token): <p>The export token to initiate key export from Amazon Web Services Payment Cryptography. The export token expires after 7 days. You can use the same export token to export multiple keys from the same service account.</p>
    ///   - [`parameters_valid_until_timestamp(DateTime)`](crate::operation::get_parameters_for_export::GetParametersForExportOutput::parameters_valid_until_timestamp): <p>The validity period of the export token.</p>
    /// - On failure, responds with [`SdkError<GetParametersForExportError>`](crate::operation::get_parameters_for_export::GetParametersForExportError)
    pub fn get_parameters_for_export(&self) -> crate::operation::get_parameters_for_export::builders::GetParametersForExportFluentBuilder {
        crate::operation::get_parameters_for_export::builders::GetParametersForExportFluentBuilder::new(self.handle.clone())
    }
}
