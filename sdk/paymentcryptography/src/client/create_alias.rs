// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAlias`](crate::operation::create_alias::builders::CreateAliasFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alias_name(impl Into<String>)`](crate::operation::create_alias::builders::CreateAliasFluentBuilder::alias_name) / [`set_alias_name(Option<String>)`](crate::operation::create_alias::builders::CreateAliasFluentBuilder::set_alias_name):<br>required: **true**<br><p>A friendly name that you can use to refer a key. An alias must begin with <code>alias/</code> followed by a name, for example <code>alias/ExampleAlias</code>. It can contain only alphanumeric characters, forward slashes (/), underscores (_), and dashes (-).</p> <important>   <p>Don't include confidential or sensitive information in this field. This field may be displayed in plaintext in CloudTrail logs and other output.</p>  </important><br>
    ///   - [`key_arn(impl Into<String>)`](crate::operation::create_alias::builders::CreateAliasFluentBuilder::key_arn) / [`set_key_arn(Option<String>)`](crate::operation::create_alias::builders::CreateAliasFluentBuilder::set_key_arn):<br>required: **false**<br><p>The <code>KeyARN</code> of the key to associate with the alias.</p><br>
    /// - On success, responds with [`CreateAliasOutput`](crate::operation::create_alias::CreateAliasOutput) with field(s):
    ///   - [`alias(Option<Alias>)`](crate::operation::create_alias::CreateAliasOutput::alias): <p>The alias for the key.</p>
    /// - On failure, responds with [`SdkError<CreateAliasError>`](crate::operation::create_alias::CreateAliasError)
    pub fn create_alias(&self) -> crate::operation::create_alias::builders::CreateAliasFluentBuilder {
        crate::operation::create_alias::builders::CreateAliasFluentBuilder::new(self.handle.clone())
    }
}
