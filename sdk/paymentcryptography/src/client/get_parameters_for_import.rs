// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetParametersForImport`](crate::operation::get_parameters_for_import::builders::GetParametersForImportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`key_material_type(KeyMaterialType)`](crate::operation::get_parameters_for_import::builders::GetParametersForImportFluentBuilder::key_material_type) / [`set_key_material_type(Option<KeyMaterialType>)`](crate::operation::get_parameters_for_import::builders::GetParametersForImportFluentBuilder::set_key_material_type):<br>required: **true**<br><p>The key block format type such as TR-34 or TR-31 to use during key material import. Import token is only required for TR-34 key import <code>TR34_KEY_BLOCK</code>. Import token is not required for TR-31 key import.</p><br>
    ///   - [`wrapping_key_algorithm(KeyAlgorithm)`](crate::operation::get_parameters_for_import::builders::GetParametersForImportFluentBuilder::wrapping_key_algorithm) / [`set_wrapping_key_algorithm(Option<KeyAlgorithm>)`](crate::operation::get_parameters_for_import::builders::GetParametersForImportFluentBuilder::set_wrapping_key_algorithm):<br>required: **true**<br><p>The wrapping key algorithm to generate a wrapping key certificate. This certificate wraps the key under import within the TR-34 key block cryptogram. <code>RSA_2048</code> is the only wrapping key algorithm allowed.</p><br>
    /// - On success, responds with [`GetParametersForImportOutput`](crate::operation::get_parameters_for_import::GetParametersForImportOutput) with field(s):
    ///   - [`wrapping_key_certificate(String)`](crate::operation::get_parameters_for_import::GetParametersForImportOutput::wrapping_key_certificate): <p>The wrapping key certificate of the wrapping key for use within the TR-34 key block. The certificate expires in 7 days.</p>
    ///   - [`wrapping_key_certificate_chain(String)`](crate::operation::get_parameters_for_import::GetParametersForImportOutput::wrapping_key_certificate_chain): <p>The Amazon Web Services Payment Cryptography certificate chain that signed the wrapping key certificate. This is the root certificate authority (CA) within your service account.</p>
    ///   - [`wrapping_key_algorithm(KeyAlgorithm)`](crate::operation::get_parameters_for_import::GetParametersForImportOutput::wrapping_key_algorithm): <p>The algorithm of the wrapping key for use within TR-34 key block. <code>RSA_2048</code> is the only wrapping key algorithm allowed.</p>
    ///   - [`import_token(String)`](crate::operation::get_parameters_for_import::GetParametersForImportOutput::import_token): <p>The import token to initiate key import into Amazon Web Services Payment Cryptography. The import token expires after 7 days. You can use the same import token to import multiple keys to the same service account.</p>
    ///   - [`parameters_valid_until_timestamp(DateTime)`](crate::operation::get_parameters_for_import::GetParametersForImportOutput::parameters_valid_until_timestamp): <p>The validity period of the import token.</p>
    /// - On failure, responds with [`SdkError<GetParametersForImportError>`](crate::operation::get_parameters_for_import::GetParametersForImportError)
    pub fn get_parameters_for_import(&self) -> crate::operation::get_parameters_for_import::builders::GetParametersForImportFluentBuilder {
        crate::operation::get_parameters_for_import::builders::GetParametersForImportFluentBuilder::new(self.handle.clone())
    }
}
