// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::disable_default_key_replication_regions::_disable_default_key_replication_regions_output::DisableDefaultKeyReplicationRegionsOutputBuilder;

pub use crate::operation::disable_default_key_replication_regions::_disable_default_key_replication_regions_input::DisableDefaultKeyReplicationRegionsInputBuilder;

impl crate::operation::disable_default_key_replication_regions::builders::DisableDefaultKeyReplicationRegionsInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.disable_default_key_replication_regions();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `DisableDefaultKeyReplicationRegions`.
///
/// <p>Disables <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-multi-region-replication.html">Multi-Region key replication</a> settings for the specified Amazon Web Services Regions in your Amazon Web Services account, preventing new keys from being automatically replicated to those regions.</p>
/// <p>After disabling Multi-Region key replication for specific regions, new keys created in your account will not be automatically replicated to those regions. You can still manually add replication to those regions for individual keys using the <a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_AddKeyReplicationRegions.html">AddKeyReplicationRegions</a> operation.</p>
/// <p>This operation does not affect existing keys or their current replication configuration.</p>
/// <p><b>Cross-account use:</b> This operation can't be used across different Amazon Web Services accounts.</p>
/// <p><b>Related operations:</b></p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_EnableDefaultKeyReplicationRegions.html">EnableDefaultKeyReplicationRegions</a></p></li>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetDefaultKeyReplicationRegions.html">GetDefaultKeyReplicationRegions</a></p></li>
/// </ul>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct DisableDefaultKeyReplicationRegionsFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::disable_default_key_replication_regions::builders::DisableDefaultKeyReplicationRegionsInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsOutput,
        crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsError,
    > for DisableDefaultKeyReplicationRegionsFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsOutput,
            crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl DisableDefaultKeyReplicationRegionsFluentBuilder {
    /// Creates a new `DisableDefaultKeyReplicationRegionsFluentBuilder`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the DisableDefaultKeyReplicationRegions as a reference.
    pub fn as_input(&self) -> &crate::operation::disable_default_key_replication_regions::builders::DisableDefaultKeyReplicationRegionsInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins =
            crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegions::operation_runtime_plugins(
                self.handle.runtime_plugins.clone(),
                &self.handle.conf,
                self.config_override,
            );
        crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegions::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsOutput,
        crate::operation::disable_default_key_replication_regions::DisableDefaultKeyReplicationRegionsError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl ::std::convert::Into<crate::config::Builder>) -> Self {
        self.set_config_override(::std::option::Option::Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: ::std::option::Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    ///
    /// Appends an item to `ReplicationRegions`.
    ///
    /// To override the contents of this collection use [`set_replication_regions`](Self::set_replication_regions).
    ///
    /// <p>The list of Amazon Web Services Regions to remove from the account's default replication regions.</p>
    /// <p>New keys created after this operation will not automatically be replicated to these regions, though existing keys with replication to these regions will be unaffected.</p>
    pub fn replication_regions(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.replication_regions(input.into());
        self
    }
    /// <p>The list of Amazon Web Services Regions to remove from the account's default replication regions.</p>
    /// <p>New keys created after this operation will not automatically be replicated to these regions, though existing keys with replication to these regions will be unaffected.</p>
    pub fn set_replication_regions(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.inner = self.inner.set_replication_regions(input);
        self
    }
    /// <p>The list of Amazon Web Services Regions to remove from the account's default replication regions.</p>
    /// <p>New keys created after this operation will not automatically be replicated to these regions, though existing keys with replication to these regions will be unaffected.</p>
    pub fn get_replication_regions(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        self.inner.get_replication_regions()
    }
}
