// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteKeyInput {
    /// <p>The <code>KeyARN</code> of the key that is scheduled for deletion.</p>
    pub key_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The waiting period for key deletion. The default value is seven days.</p>
    pub delete_key_in_days: ::std::option::Option<i32>,
}
impl DeleteKeyInput {
    /// <p>The <code>KeyARN</code> of the key that is scheduled for deletion.</p>
    pub fn key_identifier(&self) -> ::std::option::Option<&str> {
        self.key_identifier.as_deref()
    }
    /// <p>The waiting period for key deletion. The default value is seven days.</p>
    pub fn delete_key_in_days(&self) -> ::std::option::Option<i32> {
        self.delete_key_in_days
    }
}
impl DeleteKeyInput {
    /// Creates a new builder-style object to manufacture [`DeleteKeyInput`](crate::operation::delete_key::DeleteKeyInput).
    pub fn builder() -> crate::operation::delete_key::builders::DeleteKeyInputBuilder {
        crate::operation::delete_key::builders::DeleteKeyInputBuilder::default()
    }
}

/// A builder for [`DeleteKeyInput`](crate::operation::delete_key::DeleteKeyInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteKeyInputBuilder {
    pub(crate) key_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) delete_key_in_days: ::std::option::Option<i32>,
}
impl DeleteKeyInputBuilder {
    /// <p>The <code>KeyARN</code> of the key that is scheduled for deletion.</p>
    /// This field is required.
    pub fn key_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.key_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>KeyARN</code> of the key that is scheduled for deletion.</p>
    pub fn set_key_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.key_identifier = input;
        self
    }
    /// <p>The <code>KeyARN</code> of the key that is scheduled for deletion.</p>
    pub fn get_key_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.key_identifier
    }
    /// <p>The waiting period for key deletion. The default value is seven days.</p>
    pub fn delete_key_in_days(mut self, input: i32) -> Self {
        self.delete_key_in_days = ::std::option::Option::Some(input);
        self
    }
    /// <p>The waiting period for key deletion. The default value is seven days.</p>
    pub fn set_delete_key_in_days(mut self, input: ::std::option::Option<i32>) -> Self {
        self.delete_key_in_days = input;
        self
    }
    /// <p>The waiting period for key deletion. The default value is seven days.</p>
    pub fn get_delete_key_in_days(&self) -> &::std::option::Option<i32> {
        &self.delete_key_in_days
    }
    /// Consumes the builder and constructs a [`DeleteKeyInput`](crate::operation::delete_key::DeleteKeyInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::delete_key::DeleteKeyInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_key::DeleteKeyInput {
            key_identifier: self.key_identifier,
            delete_key_in_days: self.delete_key_in_days,
        })
    }
}
