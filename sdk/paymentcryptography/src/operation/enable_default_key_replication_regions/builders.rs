// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::enable_default_key_replication_regions::_enable_default_key_replication_regions_output::EnableDefaultKeyReplicationRegionsOutputBuilder;

pub use crate::operation::enable_default_key_replication_regions::_enable_default_key_replication_regions_input::EnableDefaultKeyReplicationRegionsInputBuilder;

impl crate::operation::enable_default_key_replication_regions::builders::EnableDefaultKeyReplicationRegionsInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.enable_default_key_replication_regions();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `EnableDefaultKeyReplicationRegions`.
///
/// <p>Enables <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-multi-region-replication.html">Multi-Region key replication</a> settings for your Amazon Web Services account, causing new keys to be automatically replicated to the specified Amazon Web Services Regions when created.</p>
/// <p>When Multi-Region key replication are enabled, any new keys created in your account will automatically be replicated to these regions unless you explicitly override this behavior during key creation. This simplifies key management for applications that operate across multiple regions.</p>
/// <p>Existing keys are not affected by this operation - only keys created after enabling default replication will be automatically replicated.</p>
/// <p><b>Cross-account use:</b> This operation can't be used across different Amazon Web Services accounts.</p>
/// <p><b>Related operations:</b></p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_DisableDefaultKeyReplicationRegions.html">DisableDefaultKeyReplicationRegions</a></p></li>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/API_GetDefaultKeyReplicationRegions.html">GetDefaultKeyReplicationRegions</a></p></li>
/// </ul>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct EnableDefaultKeyReplicationRegionsFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::enable_default_key_replication_regions::builders::EnableDefaultKeyReplicationRegionsInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsOutput,
        crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsError,
    > for EnableDefaultKeyReplicationRegionsFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsOutput,
            crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl EnableDefaultKeyReplicationRegionsFluentBuilder {
    /// Creates a new `EnableDefaultKeyReplicationRegionsFluentBuilder`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the EnableDefaultKeyReplicationRegions as a reference.
    pub fn as_input(&self) -> &crate::operation::enable_default_key_replication_regions::builders::EnableDefaultKeyReplicationRegionsInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegions::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegions::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsOutput,
        crate::operation::enable_default_key_replication_regions::EnableDefaultKeyReplicationRegionsError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl ::std::convert::Into<crate::config::Builder>) -> Self {
        self.set_config_override(::std::option::Option::Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: ::std::option::Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    ///
    /// Appends an item to `ReplicationRegions`.
    ///
    /// To override the contents of this collection use [`set_replication_regions`](Self::set_replication_regions).
    ///
    /// <p>The list of Amazon Web Services Regions to enable as default replication regions for the Amazon Web Services account for <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-multi-region-replication.html">Multi-Region key replication</a>.</p>
    /// <p>New keys created in this account will automatically be replicated to these regions unless explicitly overridden during key creation.</p>
    pub fn replication_regions(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.replication_regions(input.into());
        self
    }
    /// <p>The list of Amazon Web Services Regions to enable as default replication regions for the Amazon Web Services account for <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-multi-region-replication.html">Multi-Region key replication</a>.</p>
    /// <p>New keys created in this account will automatically be replicated to these regions unless explicitly overridden during key creation.</p>
    pub fn set_replication_regions(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.inner = self.inner.set_replication_regions(input);
        self
    }
    /// <p>The list of Amazon Web Services Regions to enable as default replication regions for the Amazon Web Services account for <a href="https://docs.aws.amazon.com/payment-cryptography/latest/userguide/keys-multi-region-replication.html">Multi-Region key replication</a>.</p>
    /// <p>New keys created in this account will automatically be replicated to these regions unless explicitly overridden during key creation.</p>
    pub fn get_replication_regions(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        self.inner.get_replication_regions()
    }
}
