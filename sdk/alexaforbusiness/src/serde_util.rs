// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn room_skill_parameter_correct_errors(
    mut builder: crate::types::builders::RoomSkillParameterBuilder,
) -> crate::types::builders::RoomSkillParameterBuilder {
    if builder.parameter_key.is_none() {
        builder.parameter_key = Some(Default::default())
    }
    if builder.parameter_value.is_none() {
        builder.parameter_value = Some(Default::default())
    }
    builder
}

pub(crate) fn ip_dial_in_correct_errors(mut builder: crate::types::builders::IpDialInBuilder) -> crate::types::builders::IpDialInBuilder {
    if builder.endpoint.is_none() {
        builder.endpoint = Some(Default::default())
    }
    if builder.comms_protocol.is_none() {
        builder.comms_protocol = "no value was set".parse::<crate::types::CommsProtocol>().ok()
    }
    builder
}

pub(crate) fn meeting_setting_correct_errors(
    mut builder: crate::types::builders::MeetingSettingBuilder,
) -> crate::types::builders::MeetingSettingBuilder {
    if builder.require_pin.is_none() {
        builder.require_pin = "no value was set".parse::<crate::types::RequirePin>().ok()
    }
    builder
}

pub(crate) fn pstn_dial_in_correct_errors(mut builder: crate::types::builders::PstnDialInBuilder) -> crate::types::builders::PstnDialInBuilder {
    if builder.country_code.is_none() {
        builder.country_code = Some(Default::default())
    }
    if builder.phone_number.is_none() {
        builder.phone_number = Some(Default::default())
    }
    if builder.one_click_id_delay.is_none() {
        builder.one_click_id_delay = Some(Default::default())
    }
    if builder.one_click_pin_delay.is_none() {
        builder.one_click_pin_delay = Some(Default::default())
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}

pub(crate) fn business_report_content_range_correct_errors(
    mut builder: crate::types::builders::BusinessReportContentRangeBuilder,
) -> crate::types::builders::BusinessReportContentRangeBuilder {
    if builder.interval.is_none() {
        builder.interval = "no value was set".parse::<crate::types::BusinessReportInterval>().ok()
    }
    builder
}

pub(crate) fn phone_number_correct_errors(mut builder: crate::types::builders::PhoneNumberBuilder) -> crate::types::builders::PhoneNumberBuilder {
    if builder.number.is_none() {
        builder.number = Some(Default::default())
    }
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::PhoneNumberType>().ok()
    }
    builder
}

pub(crate) fn sip_address_correct_errors(mut builder: crate::types::builders::SipAddressBuilder) -> crate::types::builders::SipAddressBuilder {
    if builder.uri.is_none() {
        builder.uri = Some(Default::default())
    }
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::SipType>().ok()
    }
    builder
}
