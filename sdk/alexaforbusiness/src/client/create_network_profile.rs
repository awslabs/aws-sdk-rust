// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateNetworkProfile`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_profile_name(impl Into<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::network_profile_name) / [`set_network_profile_name(Option<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_network_profile_name):<br>required: **true**<br><p>The name of the network profile associated with a device.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_description):<br>required: **false**<br><p>Detailed information about a device's network profile.</p><br>
    ///   - [`ssid(impl Into<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::ssid) / [`set_ssid(Option<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_ssid):<br>required: **true**<br><p>The SSID of the Wi-Fi network.</p><br>
    ///   - [`security_type(NetworkSecurityType)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::security_type) / [`set_security_type(Option<NetworkSecurityType>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_security_type):<br>required: **true**<br><p>The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK, WEP, or OPEN.</p><br>
    ///   - [`eap_method(NetworkEapMethod)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::eap_method) / [`set_eap_method(Option<NetworkEapMethod>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_eap_method):<br>required: **false**<br><p>The authentication standard that is used in the EAP framework. Currently, EAP_TLS is supported.</p><br>
    ///   - [`current_password(impl Into<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::current_password) / [`set_current_password(Option<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_current_password):<br>required: **false**<br><p>The current password of the Wi-Fi network.</p><br>
    ///   - [`next_password(impl Into<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::next_password) / [`set_next_password(Option<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_next_password):<br>required: **false**<br><p>The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword. </p><br>
    ///   - [`certificate_authority_arn(impl Into<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::certificate_authority_arn) / [`set_certificate_authority_arn(Option<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_certificate_authority_arn):<br>required: **false**<br><p>The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices. </p><br>
    ///   - [`trust_anchors(impl Into<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::trust_anchors) / [`set_trust_anchors(Option<Vec::<String>>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_trust_anchors):<br>required: **false**<br><p>The root certificates of your authentication server that is installed on your devices and used to trust your authentication server during EAP negotiation. </p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_client_request_token):<br>required: **true**<br><p>A unique, user-specified identifier for the request that ensures idempotency.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be added to the specified resource. Do not provide system tags. </p><br>
    /// - On success, responds with [`CreateNetworkProfileOutput`](crate::operation::create_network_profile::CreateNetworkProfileOutput) with field(s):
    ///   - [`network_profile_arn(Option<String>)`](crate::operation::create_network_profile::CreateNetworkProfileOutput::network_profile_arn): <p>The ARN of the network profile associated with a device.</p>
    /// - On failure, responds with [`SdkError<CreateNetworkProfileError>`](crate::operation::create_network_profile::CreateNetworkProfileError)
    #[deprecated(note = "Alexa For Business is no longer supported")]
    pub fn create_network_profile(&self) -> crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder {
        crate::operation::create_network_profile::builders::CreateNetworkProfileFluentBuilder::new(self.handle.clone())
    }
}
