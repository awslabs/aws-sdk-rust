// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateNetworkProfile`](crate::client::fluent_builders::CreateNetworkProfile) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_profile_name(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkProfile::network_profile_name) / [`set_network_profile_name(Option<String>)`](crate::client::fluent_builders::CreateNetworkProfile::set_network_profile_name): <p>The name of the network profile associated with a device.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkProfile::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateNetworkProfile::set_description): <p>Detailed information about a device's network profile.</p>
    ///   - [`ssid(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkProfile::ssid) / [`set_ssid(Option<String>)`](crate::client::fluent_builders::CreateNetworkProfile::set_ssid): <p>The SSID of the Wi-Fi network.</p>
    ///   - [`security_type(NetworkSecurityType)`](crate::client::fluent_builders::CreateNetworkProfile::security_type) / [`set_security_type(Option<NetworkSecurityType>)`](crate::client::fluent_builders::CreateNetworkProfile::set_security_type): <p>The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK, WEP, or OPEN.</p>
    ///   - [`eap_method(NetworkEapMethod)`](crate::client::fluent_builders::CreateNetworkProfile::eap_method) / [`set_eap_method(Option<NetworkEapMethod>)`](crate::client::fluent_builders::CreateNetworkProfile::set_eap_method): <p>The authentication standard that is used in the EAP framework. Currently, EAP_TLS is supported.</p>
    ///   - [`current_password(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkProfile::current_password) / [`set_current_password(Option<String>)`](crate::client::fluent_builders::CreateNetworkProfile::set_current_password): <p>The current password of the Wi-Fi network.</p>
    ///   - [`next_password(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkProfile::next_password) / [`set_next_password(Option<String>)`](crate::client::fluent_builders::CreateNetworkProfile::set_next_password): <p>The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword. </p>
    ///   - [`certificate_authority_arn(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkProfile::certificate_authority_arn) / [`set_certificate_authority_arn(Option<String>)`](crate::client::fluent_builders::CreateNetworkProfile::set_certificate_authority_arn): <p>The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices. </p>
    ///   - [`trust_anchors(Vec<String>)`](crate::client::fluent_builders::CreateNetworkProfile::trust_anchors) / [`set_trust_anchors(Option<Vec<String>>)`](crate::client::fluent_builders::CreateNetworkProfile::set_trust_anchors): <p>The root certificates of your authentication server that is installed on your devices and used to trust your authentication server during EAP negotiation. </p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkProfile::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::CreateNetworkProfile::set_client_request_token): <p>A unique, user-specified identifier for the request that ensures idempotency.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateNetworkProfile::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateNetworkProfile::set_tags): <p>The tags to be added to the specified resource. Do not provide system tags. </p>
    /// - On success, responds with [`CreateNetworkProfileOutput`](crate::output::CreateNetworkProfileOutput) with field(s):
    ///   - [`network_profile_arn(Option<String>)`](crate::output::CreateNetworkProfileOutput::network_profile_arn): <p>The ARN of the network profile associated with a device.</p>
    /// - On failure, responds with [`SdkError<CreateNetworkProfileError>`](crate::error::CreateNetworkProfileError)
    pub fn create_network_profile(&self) -> crate::client::fluent_builders::CreateNetworkProfile {
        crate::client::fluent_builders::CreateNetworkProfile::new(self.handle.clone())
    }
}
