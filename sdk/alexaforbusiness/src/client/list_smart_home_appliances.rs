// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSmartHomeAppliances`](crate::client::fluent_builders::ListSmartHomeAppliances) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListSmartHomeAppliances::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`room_arn(impl Into<String>)`](crate::client::fluent_builders::ListSmartHomeAppliances::room_arn) / [`set_room_arn(Option<String>)`](crate::client::fluent_builders::ListSmartHomeAppliances::set_room_arn): <p>The room that the appliances are associated with.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListSmartHomeAppliances::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListSmartHomeAppliances::set_max_results): <p>The maximum number of appliances to be returned, per paginated calls.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListSmartHomeAppliances::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListSmartHomeAppliances::set_next_token): <p>The tokens used for pagination.</p>
    /// - On success, responds with [`ListSmartHomeAppliancesOutput`](crate::output::ListSmartHomeAppliancesOutput) with field(s):
    ///   - [`smart_home_appliances(Option<Vec<SmartHomeAppliance>>)`](crate::output::ListSmartHomeAppliancesOutput::smart_home_appliances): <p>The smart home appliances.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListSmartHomeAppliancesOutput::next_token): <p>The tokens used for pagination.</p>
    /// - On failure, responds with [`SdkError<ListSmartHomeAppliancesError>`](crate::error::ListSmartHomeAppliancesError)
    pub fn list_smart_home_appliances(
        &self,
    ) -> crate::client::fluent_builders::ListSmartHomeAppliances {
        crate::client::fluent_builders::ListSmartHomeAppliances::new(self.handle.clone())
    }
}
