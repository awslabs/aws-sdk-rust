// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateConferenceProvider`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`conference_provider_name(impl Into<String>)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::conference_provider_name) / [`set_conference_provider_name(Option<String>)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::set_conference_provider_name):<br>required: **true**<br><p>The name of the conference provider.</p><br>
    ///   - [`conference_provider_type(ConferenceProviderType)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::conference_provider_type) / [`set_conference_provider_type(Option<ConferenceProviderType>)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::set_conference_provider_type):<br>required: **true**<br><p>Represents a type within a list of predefined types.</p><br>
    ///   - [`ip_dial_in(IpDialIn)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::ip_dial_in) / [`set_ip_dial_in(Option<IpDialIn>)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::set_ip_dial_in):<br>required: **false**<br><p>The IP endpoint and protocol for calling.</p><br>
    ///   - [`pstn_dial_in(PstnDialIn)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::pstn_dial_in) / [`set_pstn_dial_in(Option<PstnDialIn>)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::set_pstn_dial_in):<br>required: **false**<br><p>The information for PSTN conferencing.</p><br>
    ///   - [`meeting_setting(MeetingSetting)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::meeting_setting) / [`set_meeting_setting(Option<MeetingSetting>)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::set_meeting_setting):<br>required: **true**<br><p>The meeting settings for the conference provider.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::set_client_request_token):<br>required: **false**<br><p>The request token of the client.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be added to the specified resource. Do not provide system tags.</p><br>
    /// - On success, responds with [`CreateConferenceProviderOutput`](crate::operation::create_conference_provider::CreateConferenceProviderOutput) with field(s):
    ///   - [`conference_provider_arn(Option<String>)`](crate::operation::create_conference_provider::CreateConferenceProviderOutput::conference_provider_arn): <p>The ARN of the newly-created conference provider.</p>
    /// - On failure, responds with [`SdkError<CreateConferenceProviderError>`](crate::operation::create_conference_provider::CreateConferenceProviderError)
    #[deprecated(note = "Alexa For Business is no longer supported")]
    pub fn create_conference_provider(&self) -> crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder {
        crate::operation::create_conference_provider::builders::CreateConferenceProviderFluentBuilder::new(self.handle.clone())
    }
}
