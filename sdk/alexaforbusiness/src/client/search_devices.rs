// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchDevices`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder::set_next_token):<br>required: **false**<br><p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>.</p><br>
    ///   - [`max_results(i32)`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.</p><br>
    ///   - [`filters(Filter)`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder::set_filters):<br>required: **false**<br><p>The filters to use to list a specified set of devices. Supported filter keys are DeviceName, DeviceStatus, DeviceStatusDetailCode, RoomName, DeviceType, DeviceSerialNumber, UnassociatedOnly, ConnectionStatus (ONLINE and OFFLINE), NetworkProfileName, NetworkProfileArn, Feature, and FailureCode.</p><br>
    ///   - [`sort_criteria(Sort)`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder::sort_criteria) / [`set_sort_criteria(Option<Vec::<Sort>>)`](crate::operation::search_devices::builders::SearchDevicesFluentBuilder::set_sort_criteria):<br>required: **false**<br><p>The sort order to use in listing the specified set of devices. Supported sort keys are DeviceName, DeviceStatus, RoomName, DeviceType, DeviceSerialNumber, ConnectionStatus, NetworkProfileName, NetworkProfileArn, Feature, and FailureCode.</p><br>
    /// - On success, responds with [`SearchDevicesOutput`](crate::operation::search_devices::SearchDevicesOutput) with field(s):
    ///   - [`devices(Option<Vec::<DeviceData>>)`](crate::operation::search_devices::SearchDevicesOutput::devices): <p>The devices that meet the specified set of filter criteria, in sort order.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::search_devices::SearchDevicesOutput::next_token): <p>The token returned to indicate that there is more data available.</p>
    ///   - [`total_count(Option<i32>)`](crate::operation::search_devices::SearchDevicesOutput::total_count): <p>The total number of devices returned.</p>
    /// - On failure, responds with [`SdkError<SearchDevicesError>`](crate::operation::search_devices::SearchDevicesError)
    #[deprecated(note = "Alexa For Business is no longer supported")]
    pub fn search_devices(&self) -> crate::operation::search_devices::builders::SearchDevicesFluentBuilder {
        crate::operation::search_devices::builders::SearchDevicesFluentBuilder::new(self.handle.clone())
    }
}
