// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisassociateContactFromAddressBook`](crate::operation::disassociate_contact_from_address_book::builders::DisassociateContactFromAddressBookFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_arn(impl Into<String>)`](crate::operation::disassociate_contact_from_address_book::builders::DisassociateContactFromAddressBookFluentBuilder::contact_arn) / [`set_contact_arn(Option<String>)`](crate::operation::disassociate_contact_from_address_book::builders::DisassociateContactFromAddressBookFluentBuilder::set_contact_arn):<br>required: **true**<br><p>The ARN of the contact to disassociate from an address book.</p><br>
    ///   - [`address_book_arn(impl Into<String>)`](crate::operation::disassociate_contact_from_address_book::builders::DisassociateContactFromAddressBookFluentBuilder::address_book_arn) / [`set_address_book_arn(Option<String>)`](crate::operation::disassociate_contact_from_address_book::builders::DisassociateContactFromAddressBookFluentBuilder::set_address_book_arn):<br>required: **true**<br><p>The ARN of the address from which to disassociate the contact.</p><br>
    /// - On success, responds with [`DisassociateContactFromAddressBookOutput`](crate::operation::disassociate_contact_from_address_book::DisassociateContactFromAddressBookOutput)
    /// - On failure, responds with [`SdkError<DisassociateContactFromAddressBookError>`](crate::operation::disassociate_contact_from_address_book::DisassociateContactFromAddressBookError)
    #[deprecated(note = "Alexa For Business is no longer supported")]
    pub fn disassociate_contact_from_address_book(
        &self,
    ) -> crate::operation::disassociate_contact_from_address_book::builders::DisassociateContactFromAddressBookFluentBuilder {
        crate::operation::disassociate_contact_from_address_book::builders::DisassociateContactFromAddressBookFluentBuilder::new(self.handle.clone())
    }
}
