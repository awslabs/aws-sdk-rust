// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchUsers`](crate::client::fluent_builders::SearchUsers) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::SearchUsers::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::SearchUsers::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::SearchUsers::set_next_token): <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by <code>MaxResults</code>. Required.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::SearchUsers::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::SearchUsers::set_max_results): <p>The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved. Required.</p>
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::SearchUsers::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::SearchUsers::set_filters): <p>The filters to use for listing a specific set of users. Required. Supported filter keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.</p>
    ///   - [`sort_criteria(Vec<Sort>)`](crate::client::fluent_builders::SearchUsers::sort_criteria) / [`set_sort_criteria(Option<Vec<Sort>>)`](crate::client::fluent_builders::SearchUsers::set_sort_criteria): <p>The sort order to use in listing the filtered set of users. Required. Supported sort keys are UserId, FirstName, LastName, Email, and EnrollmentStatus.</p>
    /// - On success, responds with [`SearchUsersOutput`](crate::output::SearchUsersOutput) with field(s):
    ///   - [`users(Option<Vec<UserData>>)`](crate::output::SearchUsersOutput::users): <p>The users that meet the specified set of filter criteria, in sort order.</p>
    ///   - [`next_token(Option<String>)`](crate::output::SearchUsersOutput::next_token): <p>The token returned to indicate that there is more data available.</p>
    ///   - [`total_count(Option<i32>)`](crate::output::SearchUsersOutput::total_count): <p>The total number of users returned.</p>
    /// - On failure, responds with [`SdkError<SearchUsersError>`](crate::error::SearchUsersError)
    pub fn search_users(&self) -> crate::client::fluent_builders::SearchUsers {
        crate::client::fluent_builders::SearchUsers::new(self.handle.clone())
    }
}
