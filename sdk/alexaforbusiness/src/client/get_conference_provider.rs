// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetConferenceProvider`](crate::operation::get_conference_provider::builders::GetConferenceProviderFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`conference_provider_arn(impl Into<String>)`](crate::operation::get_conference_provider::builders::GetConferenceProviderFluentBuilder::conference_provider_arn) / [`set_conference_provider_arn(Option<String>)`](crate::operation::get_conference_provider::builders::GetConferenceProviderFluentBuilder::set_conference_provider_arn):<br>required: **true**<br><p>The ARN of the newly created conference provider.</p><br>
    /// - On success, responds with [`GetConferenceProviderOutput`](crate::operation::get_conference_provider::GetConferenceProviderOutput) with field(s):
    ///   - [`conference_provider(Option<ConferenceProvider>)`](crate::operation::get_conference_provider::GetConferenceProviderOutput::conference_provider): <p>The conference provider.</p>
    /// - On failure, responds with [`SdkError<GetConferenceProviderError>`](crate::operation::get_conference_provider::GetConferenceProviderError)
    #[deprecated(note = "Alexa For Business is no longer supported")]
    pub fn get_conference_provider(&self) -> crate::operation::get_conference_provider::builders::GetConferenceProviderFluentBuilder {
        crate::operation::get_conference_provider::builders::GetConferenceProviderFluentBuilder::new(self.handle.clone())
    }
}
