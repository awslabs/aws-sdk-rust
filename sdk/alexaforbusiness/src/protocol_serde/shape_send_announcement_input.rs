// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_send_announcement_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::send_announcement::SendAnnouncementInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.room_filters {
        let mut array_2 = object.key("RoomFilters").start_array();
        for item_3 in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_4 = array_2.value().start_object();
                crate::protocol_serde::shape_filter::ser_filter(&mut object_4, item_3)?;
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.content {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Content").start_object();
        crate::protocol_serde::shape_content::ser_content(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.time_to_live_in_seconds {
        object.key("TimeToLiveInSeconds").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_8.as_str());
    }
    Ok(())
}
