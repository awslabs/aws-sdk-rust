// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_profile::UpdateProfileInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.profile_arn {
        object.key("ProfileArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.profile_name {
        object.key("ProfileName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.is_default {
        object.key("IsDefault").boolean(*var_3);
    }
    if let Some(var_4) = &input.timezone {
        object.key("Timezone").string(var_4.as_str());
    }
    if let Some(var_5) = &input.address {
        object.key("Address").string(var_5.as_str());
    }
    if let Some(var_6) = &input.distance_unit {
        object.key("DistanceUnit").string(var_6.as_str());
    }
    if let Some(var_7) = &input.temperature_unit {
        object.key("TemperatureUnit").string(var_7.as_str());
    }
    if let Some(var_8) = &input.wake_word {
        object.key("WakeWord").string(var_8.as_str());
    }
    if let Some(var_9) = &input.locale {
        object.key("Locale").string(var_9.as_str());
    }
    if let Some(var_10) = &input.setup_mode_disabled {
        object.key("SetupModeDisabled").boolean(*var_10);
    }
    if let Some(var_11) = &input.max_volume_limit {
        object.key("MaxVolumeLimit").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_11).into()),
        );
    }
    if let Some(var_12) = &input.pstn_enabled {
        object.key("PSTNEnabled").boolean(*var_12);
    }
    if let Some(var_13) = &input.data_retention_opt_in {
        object.key("DataRetentionOptIn").boolean(*var_13);
    }
    if let Some(var_14) = &input.meeting_room_configuration {
        #[allow(unused_mut)]
        let mut object_15 = object.key("MeetingRoomConfiguration").start_object();
        crate::protocol_serde::shape_update_meeting_room_configuration::ser_update_meeting_room_configuration(&mut object_15, var_14)?;
        object_15.finish();
    }
    Ok(())
}
