// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_contact_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_contact::UpdateContactInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.contact_arn {
        object.key("ContactArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.display_name {
        object.key("DisplayName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.first_name {
        object.key("FirstName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.last_name {
        object.key("LastName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.phone_number {
        object.key("PhoneNumber").string(var_5.as_str());
    }
    if let Some(var_6) = &input.phone_numbers {
        let mut array_7 = object.key("PhoneNumbers").start_array();
        for item_8 in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_9 = array_7.value().start_object();
                crate::protocol_serde::shape_phone_number::ser_phone_number(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    if let Some(var_10) = &input.sip_addresses {
        let mut array_11 = object.key("SipAddresses").start_array();
        for item_12 in var_10 {
            {
                #[allow(unused_mut)]
                let mut object_13 = array_11.value().start_object();
                crate::protocol_serde::shape_sip_address::ser_sip_address(&mut object_13, item_12)?;
                object_13.finish();
            }
        }
        array_11.finish();
    }
    Ok(())
}
