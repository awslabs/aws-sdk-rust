// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_register_avs_device_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::register_avs_device::RegisterAvsDeviceInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_id {
        object.key("ClientId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.user_code {
        object.key("UserCode").string(var_2.as_str());
    }
    if let Some(var_3) = &input.product_id {
        object.key("ProductId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.device_serial_number {
        object.key("DeviceSerialNumber").string(var_4.as_str());
    }
    if let Some(var_5) = &input.amazon_id {
        object.key("AmazonId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.room_arn {
        object.key("RoomArn").string(var_6.as_str());
    }
    if let Some(var_7) = &input.tags {
        let mut array_8 = object.key("Tags").start_array();
        for item_9 in var_7 {
            {
                #[allow(unused_mut)]
                let mut object_10 = array_8.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_10, item_9)?;
                object_10.finish();
            }
        }
        array_8.finish();
    }
    Ok(())
}
