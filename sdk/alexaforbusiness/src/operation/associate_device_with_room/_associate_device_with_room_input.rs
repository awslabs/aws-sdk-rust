// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateDeviceWithRoomInput {
    /// <p>The ARN of the device to associate to a room. Required.</p>
    pub device_arn: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of the room with which to associate the device. Required.</p>
    pub room_arn: ::std::option::Option<::std::string::String>,
}
impl AssociateDeviceWithRoomInput {
    /// <p>The ARN of the device to associate to a room. Required.</p>
    pub fn device_arn(&self) -> ::std::option::Option<&str> {
        self.device_arn.as_deref()
    }
    /// <p>The ARN of the room with which to associate the device. Required.</p>
    pub fn room_arn(&self) -> ::std::option::Option<&str> {
        self.room_arn.as_deref()
    }
}
impl AssociateDeviceWithRoomInput {
    /// Creates a new builder-style object to manufacture [`AssociateDeviceWithRoomInput`](crate::operation::associate_device_with_room::AssociateDeviceWithRoomInput).
    pub fn builder() -> crate::operation::associate_device_with_room::builders::AssociateDeviceWithRoomInputBuilder {
        crate::operation::associate_device_with_room::builders::AssociateDeviceWithRoomInputBuilder::default()
    }
}

/// A builder for [`AssociateDeviceWithRoomInput`](crate::operation::associate_device_with_room::AssociateDeviceWithRoomInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssociateDeviceWithRoomInputBuilder {
    pub(crate) device_arn: ::std::option::Option<::std::string::String>,
    pub(crate) room_arn: ::std::option::Option<::std::string::String>,
}
impl AssociateDeviceWithRoomInputBuilder {
    /// <p>The ARN of the device to associate to a room. Required.</p>
    pub fn device_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.device_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the device to associate to a room. Required.</p>
    pub fn set_device_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.device_arn = input;
        self
    }
    /// <p>The ARN of the device to associate to a room. Required.</p>
    pub fn get_device_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.device_arn
    }
    /// <p>The ARN of the room with which to associate the device. Required.</p>
    pub fn room_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.room_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the room with which to associate the device. Required.</p>
    pub fn set_room_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.room_arn = input;
        self
    }
    /// <p>The ARN of the room with which to associate the device. Required.</p>
    pub fn get_room_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.room_arn
    }
    /// Consumes the builder and constructs a [`AssociateDeviceWithRoomInput`](crate::operation::associate_device_with_room::AssociateDeviceWithRoomInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::associate_device_with_room::AssociateDeviceWithRoomInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::associate_device_with_room::AssociateDeviceWithRoomInput {
            device_arn: self.device_arn,
            room_arn: self.room_arn,
        })
    }
}
