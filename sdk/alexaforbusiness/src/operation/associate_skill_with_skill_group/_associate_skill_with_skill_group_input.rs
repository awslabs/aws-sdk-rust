// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateSkillWithSkillGroupInput {
    /// <p>The ARN of the skill group to associate the skill to. Required.</p>
    #[doc(hidden)]
    pub skill_group_arn: std::option::Option<std::string::String>,
    /// <p>The unique identifier of the skill.</p>
    #[doc(hidden)]
    pub skill_id: std::option::Option<std::string::String>,
}
impl AssociateSkillWithSkillGroupInput {
    /// <p>The ARN of the skill group to associate the skill to. Required.</p>
    pub fn skill_group_arn(&self) -> std::option::Option<&str> {
        self.skill_group_arn.as_deref()
    }
    /// <p>The unique identifier of the skill.</p>
    pub fn skill_id(&self) -> std::option::Option<&str> {
        self.skill_id.as_deref()
    }
}
impl AssociateSkillWithSkillGroupInput {
    /// Creates a new builder-style object to manufacture [`AssociateSkillWithSkillGroupInput`](crate::operation::associate_skill_with_skill_group::AssociateSkillWithSkillGroupInput).
    pub fn builder() -> crate::operation::associate_skill_with_skill_group::builders::AssociateSkillWithSkillGroupInputBuilder{
        crate::operation::associate_skill_with_skill_group::builders::AssociateSkillWithSkillGroupInputBuilder::default()
    }
}

/// A builder for [`AssociateSkillWithSkillGroupInput`](crate::operation::associate_skill_with_skill_group::AssociateSkillWithSkillGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociateSkillWithSkillGroupInputBuilder {
    pub(crate) skill_group_arn: std::option::Option<std::string::String>,
    pub(crate) skill_id: std::option::Option<std::string::String>,
}
impl AssociateSkillWithSkillGroupInputBuilder {
    /// <p>The ARN of the skill group to associate the skill to. Required.</p>
    pub fn skill_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.skill_group_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the skill group to associate the skill to. Required.</p>
    pub fn set_skill_group_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.skill_group_arn = input;
        self
    }
    /// <p>The unique identifier of the skill.</p>
    pub fn skill_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.skill_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the skill.</p>
    pub fn set_skill_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.skill_id = input;
        self
    }
    /// Consumes the builder and constructs a [`AssociateSkillWithSkillGroupInput`](crate::operation::associate_skill_with_skill_group::AssociateSkillWithSkillGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::associate_skill_with_skill_group::AssociateSkillWithSkillGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::associate_skill_with_skill_group::AssociateSkillWithSkillGroupInput {
                skill_group_arn: self.skill_group_arn,
                skill_id: self.skill_id,
            },
        )
    }
}
