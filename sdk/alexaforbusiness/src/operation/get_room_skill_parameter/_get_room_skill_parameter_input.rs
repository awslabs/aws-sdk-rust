// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetRoomSkillParameterInput {
    /// <p>The ARN of the room from which to get the room skill parameter details. </p>
    #[doc(hidden)]
    pub room_arn: std::option::Option<std::string::String>,
    /// <p>The ARN of the skill from which to get the room skill parameter details. Required.</p>
    #[doc(hidden)]
    pub skill_id: std::option::Option<std::string::String>,
    /// <p>The room skill parameter key for which to get details. Required.</p>
    #[doc(hidden)]
    pub parameter_key: std::option::Option<std::string::String>,
}
impl GetRoomSkillParameterInput {
    /// <p>The ARN of the room from which to get the room skill parameter details. </p>
    pub fn room_arn(&self) -> std::option::Option<&str> {
        self.room_arn.as_deref()
    }
    /// <p>The ARN of the skill from which to get the room skill parameter details. Required.</p>
    pub fn skill_id(&self) -> std::option::Option<&str> {
        self.skill_id.as_deref()
    }
    /// <p>The room skill parameter key for which to get details. Required.</p>
    pub fn parameter_key(&self) -> std::option::Option<&str> {
        self.parameter_key.as_deref()
    }
}
impl GetRoomSkillParameterInput {
    /// Creates a new builder-style object to manufacture [`GetRoomSkillParameterInput`](crate::operation::get_room_skill_parameter::GetRoomSkillParameterInput).
    pub fn builder(
    ) -> crate::operation::get_room_skill_parameter::builders::GetRoomSkillParameterInputBuilder
    {
        crate::operation::get_room_skill_parameter::builders::GetRoomSkillParameterInputBuilder::default()
    }
}

/// A builder for [`GetRoomSkillParameterInput`](crate::operation::get_room_skill_parameter::GetRoomSkillParameterInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetRoomSkillParameterInputBuilder {
    pub(crate) room_arn: std::option::Option<std::string::String>,
    pub(crate) skill_id: std::option::Option<std::string::String>,
    pub(crate) parameter_key: std::option::Option<std::string::String>,
}
impl GetRoomSkillParameterInputBuilder {
    /// <p>The ARN of the room from which to get the room skill parameter details. </p>
    pub fn room_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.room_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the room from which to get the room skill parameter details. </p>
    pub fn set_room_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.room_arn = input;
        self
    }
    /// <p>The ARN of the skill from which to get the room skill parameter details. Required.</p>
    pub fn skill_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.skill_id = Some(input.into());
        self
    }
    /// <p>The ARN of the skill from which to get the room skill parameter details. Required.</p>
    pub fn set_skill_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.skill_id = input;
        self
    }
    /// <p>The room skill parameter key for which to get details. Required.</p>
    pub fn parameter_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_key = Some(input.into());
        self
    }
    /// <p>The room skill parameter key for which to get details. Required.</p>
    pub fn set_parameter_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.parameter_key = input;
        self
    }
    /// Consumes the builder and constructs a [`GetRoomSkillParameterInput`](crate::operation::get_room_skill_parameter::GetRoomSkillParameterInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_room_skill_parameter::GetRoomSkillParameterInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_room_skill_parameter::GetRoomSkillParameterInput {
                room_arn: self.room_arn,
                skill_id: self.skill_id,
                parameter_key: self.parameter_key,
            },
        )
    }
}
