// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutRoomSkillParameterInput {
    /// <p>The ARN of the room associated with the room skill parameter. Required.</p>
    #[doc(hidden)]
    pub room_arn: std::option::Option<std::string::String>,
    /// <p>The ARN of the skill associated with the room skill parameter. Required.</p>
    #[doc(hidden)]
    pub skill_id: std::option::Option<std::string::String>,
    /// <p>The updated room skill parameter. Required.</p>
    #[doc(hidden)]
    pub room_skill_parameter: std::option::Option<crate::types::RoomSkillParameter>,
}
impl PutRoomSkillParameterInput {
    /// <p>The ARN of the room associated with the room skill parameter. Required.</p>
    pub fn room_arn(&self) -> std::option::Option<&str> {
        self.room_arn.as_deref()
    }
    /// <p>The ARN of the skill associated with the room skill parameter. Required.</p>
    pub fn skill_id(&self) -> std::option::Option<&str> {
        self.skill_id.as_deref()
    }
    /// <p>The updated room skill parameter. Required.</p>
    pub fn room_skill_parameter(&self) -> std::option::Option<&crate::types::RoomSkillParameter> {
        self.room_skill_parameter.as_ref()
    }
}
impl PutRoomSkillParameterInput {
    /// Creates a new builder-style object to manufacture [`PutRoomSkillParameterInput`](crate::operation::put_room_skill_parameter::PutRoomSkillParameterInput).
    pub fn builder(
    ) -> crate::operation::put_room_skill_parameter::builders::PutRoomSkillParameterInputBuilder
    {
        crate::operation::put_room_skill_parameter::builders::PutRoomSkillParameterInputBuilder::default()
    }
}

/// A builder for [`PutRoomSkillParameterInput`](crate::operation::put_room_skill_parameter::PutRoomSkillParameterInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutRoomSkillParameterInputBuilder {
    pub(crate) room_arn: std::option::Option<std::string::String>,
    pub(crate) skill_id: std::option::Option<std::string::String>,
    pub(crate) room_skill_parameter: std::option::Option<crate::types::RoomSkillParameter>,
}
impl PutRoomSkillParameterInputBuilder {
    /// <p>The ARN of the room associated with the room skill parameter. Required.</p>
    pub fn room_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.room_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the room associated with the room skill parameter. Required.</p>
    pub fn set_room_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.room_arn = input;
        self
    }
    /// <p>The ARN of the skill associated with the room skill parameter. Required.</p>
    pub fn skill_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.skill_id = Some(input.into());
        self
    }
    /// <p>The ARN of the skill associated with the room skill parameter. Required.</p>
    pub fn set_skill_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.skill_id = input;
        self
    }
    /// <p>The updated room skill parameter. Required.</p>
    pub fn room_skill_parameter(mut self, input: crate::types::RoomSkillParameter) -> Self {
        self.room_skill_parameter = Some(input);
        self
    }
    /// <p>The updated room skill parameter. Required.</p>
    pub fn set_room_skill_parameter(
        mut self,
        input: std::option::Option<crate::types::RoomSkillParameter>,
    ) -> Self {
        self.room_skill_parameter = input;
        self
    }
    /// Consumes the builder and constructs a [`PutRoomSkillParameterInput`](crate::operation::put_room_skill_parameter::PutRoomSkillParameterInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_room_skill_parameter::PutRoomSkillParameterInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_room_skill_parameter::PutRoomSkillParameterInput {
                room_arn: self.room_arn,
                skill_id: self.skill_id,
                room_skill_parameter: self.room_skill_parameter,
            },
        )
    }
}
