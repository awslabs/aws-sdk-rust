// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateContactWithAddressBookInput {
    /// <p>The ARN of the contact to associate with an address book.</p>
    #[doc(hidden)]
    pub contact_arn: std::option::Option<std::string::String>,
    /// <p>The ARN of the address book with which to associate the contact.</p>
    #[doc(hidden)]
    pub address_book_arn: std::option::Option<std::string::String>,
}
impl AssociateContactWithAddressBookInput {
    /// <p>The ARN of the contact to associate with an address book.</p>
    pub fn contact_arn(&self) -> std::option::Option<&str> {
        self.contact_arn.as_deref()
    }
    /// <p>The ARN of the address book with which to associate the contact.</p>
    pub fn address_book_arn(&self) -> std::option::Option<&str> {
        self.address_book_arn.as_deref()
    }
}
impl AssociateContactWithAddressBookInput {
    /// Creates a new builder-style object to manufacture [`AssociateContactWithAddressBookInput`](crate::operation::associate_contact_with_address_book::AssociateContactWithAddressBookInput).
    pub fn builder() -> crate::operation::associate_contact_with_address_book::builders::AssociateContactWithAddressBookInputBuilder{
        crate::operation::associate_contact_with_address_book::builders::AssociateContactWithAddressBookInputBuilder::default()
    }
}

/// A builder for [`AssociateContactWithAddressBookInput`](crate::operation::associate_contact_with_address_book::AssociateContactWithAddressBookInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociateContactWithAddressBookInputBuilder {
    pub(crate) contact_arn: std::option::Option<std::string::String>,
    pub(crate) address_book_arn: std::option::Option<std::string::String>,
}
impl AssociateContactWithAddressBookInputBuilder {
    /// <p>The ARN of the contact to associate with an address book.</p>
    pub fn contact_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.contact_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the contact to associate with an address book.</p>
    pub fn set_contact_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.contact_arn = input;
        self
    }
    /// <p>The ARN of the address book with which to associate the contact.</p>
    pub fn address_book_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.address_book_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the address book with which to associate the contact.</p>
    pub fn set_address_book_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.address_book_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`AssociateContactWithAddressBookInput`](crate::operation::associate_contact_with_address_book::AssociateContactWithAddressBookInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::associate_contact_with_address_book::AssociateContactWithAddressBookInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::associate_contact_with_address_book::AssociateContactWithAddressBookInput {
                contact_arn: self.contact_arn
                ,
                address_book_arn: self.address_book_arn
                ,
            }
        )
    }
}
