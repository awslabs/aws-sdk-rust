// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutConferencePreferenceInput {
    /// <p>The conference preference of a specific conference provider.</p>
    pub conference_preference: ::std::option::Option<crate::types::ConferencePreference>,
}
impl PutConferencePreferenceInput {
    /// <p>The conference preference of a specific conference provider.</p>
    pub fn conference_preference(&self) -> ::std::option::Option<&crate::types::ConferencePreference> {
        self.conference_preference.as_ref()
    }
}
impl PutConferencePreferenceInput {
    /// Creates a new builder-style object to manufacture [`PutConferencePreferenceInput`](crate::operation::put_conference_preference::PutConferencePreferenceInput).
    pub fn builder() -> crate::operation::put_conference_preference::builders::PutConferencePreferenceInputBuilder {
        crate::operation::put_conference_preference::builders::PutConferencePreferenceInputBuilder::default()
    }
}

/// A builder for [`PutConferencePreferenceInput`](crate::operation::put_conference_preference::PutConferencePreferenceInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutConferencePreferenceInputBuilder {
    pub(crate) conference_preference: ::std::option::Option<crate::types::ConferencePreference>,
}
impl PutConferencePreferenceInputBuilder {
    /// <p>The conference preference of a specific conference provider.</p>
    /// This field is required.
    pub fn conference_preference(mut self, input: crate::types::ConferencePreference) -> Self {
        self.conference_preference = ::std::option::Option::Some(input);
        self
    }
    /// <p>The conference preference of a specific conference provider.</p>
    pub fn set_conference_preference(mut self, input: ::std::option::Option<crate::types::ConferencePreference>) -> Self {
        self.conference_preference = input;
        self
    }
    /// <p>The conference preference of a specific conference provider.</p>
    pub fn get_conference_preference(&self) -> &::std::option::Option<crate::types::ConferencePreference> {
        &self.conference_preference
    }
    /// Consumes the builder and constructs a [`PutConferencePreferenceInput`](crate::operation::put_conference_preference::PutConferencePreferenceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_conference_preference::PutConferencePreferenceInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::put_conference_preference::PutConferencePreferenceInput {
            conference_preference: self.conference_preference,
        })
    }
}
