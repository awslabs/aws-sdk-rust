// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListSkillsStoreSkillsByCategoryOutput {
    /// <p>The skill store skills.</p>
    #[doc(hidden)]
    pub skills_store_skills: std::option::Option<std::vec::Vec<crate::types::SkillsStoreSkill>>,
    /// <p>The tokens used for pagination.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListSkillsStoreSkillsByCategoryOutput {
    /// <p>The skill store skills.</p>
    pub fn skills_store_skills(&self) -> std::option::Option<&[crate::types::SkillsStoreSkill]> {
        self.skills_store_skills.as_deref()
    }
    /// <p>The tokens used for pagination.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListSkillsStoreSkillsByCategoryOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListSkillsStoreSkillsByCategoryOutput {
    /// Creates a new builder-style object to manufacture [`ListSkillsStoreSkillsByCategoryOutput`](crate::operation::list_skills_store_skills_by_category::ListSkillsStoreSkillsByCategoryOutput).
    pub fn builder() -> crate::operation::list_skills_store_skills_by_category::builders::ListSkillsStoreSkillsByCategoryOutputBuilder{
        crate::operation::list_skills_store_skills_by_category::builders::ListSkillsStoreSkillsByCategoryOutputBuilder::default()
    }
}

/// A builder for [`ListSkillsStoreSkillsByCategoryOutput`](crate::operation::list_skills_store_skills_by_category::ListSkillsStoreSkillsByCategoryOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListSkillsStoreSkillsByCategoryOutputBuilder {
    pub(crate) skills_store_skills:
        std::option::Option<std::vec::Vec<crate::types::SkillsStoreSkill>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListSkillsStoreSkillsByCategoryOutputBuilder {
    /// Appends an item to `skills_store_skills`.
    ///
    /// To override the contents of this collection use [`set_skills_store_skills`](Self::set_skills_store_skills).
    ///
    /// <p>The skill store skills.</p>
    pub fn skills_store_skills(mut self, input: crate::types::SkillsStoreSkill) -> Self {
        let mut v = self.skills_store_skills.unwrap_or_default();
        v.push(input);
        self.skills_store_skills = Some(v);
        self
    }
    /// <p>The skill store skills.</p>
    pub fn set_skills_store_skills(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::SkillsStoreSkill>>,
    ) -> Self {
        self.skills_store_skills = input;
        self
    }
    /// <p>The tokens used for pagination.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The tokens used for pagination.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListSkillsStoreSkillsByCategoryOutput`](crate::operation::list_skills_store_skills_by_category::ListSkillsStoreSkillsByCategoryOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_skills_store_skills_by_category::ListSkillsStoreSkillsByCategoryOutput
    {
        crate::operation::list_skills_store_skills_by_category::ListSkillsStoreSkillsByCategoryOutput {
            skills_store_skills: self.skills_store_skills
            ,
            next_token: self.next_token
            ,
            _request_id: self._request_id,
        }
    }
}
