// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteDeviceUsageDataInput {
    /// <p>The ARN of the device.</p>
    #[doc(hidden)]
    pub device_arn: std::option::Option<std::string::String>,
    /// <p>The type of usage data to delete.</p>
    #[doc(hidden)]
    pub device_usage_type: std::option::Option<crate::types::DeviceUsageType>,
}
impl DeleteDeviceUsageDataInput {
    /// <p>The ARN of the device.</p>
    pub fn device_arn(&self) -> std::option::Option<&str> {
        self.device_arn.as_deref()
    }
    /// <p>The type of usage data to delete.</p>
    pub fn device_usage_type(&self) -> std::option::Option<&crate::types::DeviceUsageType> {
        self.device_usage_type.as_ref()
    }
}
impl DeleteDeviceUsageDataInput {
    /// Creates a new builder-style object to manufacture [`DeleteDeviceUsageDataInput`](crate::operation::delete_device_usage_data::DeleteDeviceUsageDataInput).
    pub fn builder(
    ) -> crate::operation::delete_device_usage_data::builders::DeleteDeviceUsageDataInputBuilder
    {
        crate::operation::delete_device_usage_data::builders::DeleteDeviceUsageDataInputBuilder::default()
    }
}

/// A builder for [`DeleteDeviceUsageDataInput`](crate::operation::delete_device_usage_data::DeleteDeviceUsageDataInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteDeviceUsageDataInputBuilder {
    pub(crate) device_arn: std::option::Option<std::string::String>,
    pub(crate) device_usage_type: std::option::Option<crate::types::DeviceUsageType>,
}
impl DeleteDeviceUsageDataInputBuilder {
    /// <p>The ARN of the device.</p>
    pub fn device_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.device_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the device.</p>
    pub fn set_device_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.device_arn = input;
        self
    }
    /// <p>The type of usage data to delete.</p>
    pub fn device_usage_type(mut self, input: crate::types::DeviceUsageType) -> Self {
        self.device_usage_type = Some(input);
        self
    }
    /// <p>The type of usage data to delete.</p>
    pub fn set_device_usage_type(
        mut self,
        input: std::option::Option<crate::types::DeviceUsageType>,
    ) -> Self {
        self.device_usage_type = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteDeviceUsageDataInput`](crate::operation::delete_device_usage_data::DeleteDeviceUsageDataInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_device_usage_data::DeleteDeviceUsageDataInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_device_usage_data::DeleteDeviceUsageDataInput {
                device_arn: self.device_arn,
                device_usage_type: self.device_usage_type,
            },
        )
    }
}
