// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The content range of the report.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BusinessReportContentRange {
    /// <p>The interval of the content range.</p>
    pub interval: crate::types::BusinessReportInterval,
}
impl BusinessReportContentRange {
    /// <p>The interval of the content range.</p>
    pub fn interval(&self) -> &crate::types::BusinessReportInterval {
        &self.interval
    }
}
impl BusinessReportContentRange {
    /// Creates a new builder-style object to manufacture [`BusinessReportContentRange`](crate::types::BusinessReportContentRange).
    pub fn builder() -> crate::types::builders::BusinessReportContentRangeBuilder {
        crate::types::builders::BusinessReportContentRangeBuilder::default()
    }
}

/// A builder for [`BusinessReportContentRange`](crate::types::BusinessReportContentRange).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BusinessReportContentRangeBuilder {
    pub(crate) interval: ::std::option::Option<crate::types::BusinessReportInterval>,
}
impl BusinessReportContentRangeBuilder {
    /// <p>The interval of the content range.</p>
    /// This field is required.
    pub fn interval(mut self, input: crate::types::BusinessReportInterval) -> Self {
        self.interval = ::std::option::Option::Some(input);
        self
    }
    /// <p>The interval of the content range.</p>
    pub fn set_interval(mut self, input: ::std::option::Option<crate::types::BusinessReportInterval>) -> Self {
        self.interval = input;
        self
    }
    /// <p>The interval of the content range.</p>
    pub fn get_interval(&self) -> &::std::option::Option<crate::types::BusinessReportInterval> {
        &self.interval
    }
    /// Consumes the builder and constructs a [`BusinessReportContentRange`](crate::types::BusinessReportContentRange).
    /// This method will fail if any of the following fields are not set:
    /// - [`interval`](crate::types::builders::BusinessReportContentRangeBuilder::interval)
    pub fn build(self) -> ::std::result::Result<crate::types::BusinessReportContentRange, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BusinessReportContentRange {
            interval: self.interval.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "interval",
                    "interval was not specified but it is required when building BusinessReportContentRange",
                )
            })?,
        })
    }
}
