// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Detailed information about a device's network profile.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeviceNetworkProfileInfo {
    /// <p>The ARN of the network profile associated with a device.</p>
    #[doc(hidden)]
    pub network_profile_arn: std::option::Option<std::string::String>,
    /// <p>The ARN of the certificate associated with a device.</p>
    #[doc(hidden)]
    pub certificate_arn: std::option::Option<std::string::String>,
    /// <p>The time (in epoch) when the certificate expires.</p>
    #[doc(hidden)]
    pub certificate_expiration_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl DeviceNetworkProfileInfo {
    /// <p>The ARN of the network profile associated with a device.</p>
    pub fn network_profile_arn(&self) -> std::option::Option<&str> {
        self.network_profile_arn.as_deref()
    }
    /// <p>The ARN of the certificate associated with a device.</p>
    pub fn certificate_arn(&self) -> std::option::Option<&str> {
        self.certificate_arn.as_deref()
    }
    /// <p>The time (in epoch) when the certificate expires.</p>
    pub fn certificate_expiration_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.certificate_expiration_time.as_ref()
    }
}
impl DeviceNetworkProfileInfo {
    /// Creates a new builder-style object to manufacture [`DeviceNetworkProfileInfo`](crate::types::DeviceNetworkProfileInfo).
    pub fn builder() -> crate::types::builders::DeviceNetworkProfileInfoBuilder {
        crate::types::builders::DeviceNetworkProfileInfoBuilder::default()
    }
}

/// A builder for [`DeviceNetworkProfileInfo`](crate::types::DeviceNetworkProfileInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeviceNetworkProfileInfoBuilder {
    pub(crate) network_profile_arn: std::option::Option<std::string::String>,
    pub(crate) certificate_arn: std::option::Option<std::string::String>,
    pub(crate) certificate_expiration_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl DeviceNetworkProfileInfoBuilder {
    /// <p>The ARN of the network profile associated with a device.</p>
    pub fn network_profile_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.network_profile_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the network profile associated with a device.</p>
    pub fn set_network_profile_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.network_profile_arn = input;
        self
    }
    /// <p>The ARN of the certificate associated with a device.</p>
    pub fn certificate_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.certificate_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the certificate associated with a device.</p>
    pub fn set_certificate_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.certificate_arn = input;
        self
    }
    /// <p>The time (in epoch) when the certificate expires.</p>
    pub fn certificate_expiration_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.certificate_expiration_time = Some(input);
        self
    }
    /// <p>The time (in epoch) when the certificate expires.</p>
    pub fn set_certificate_expiration_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.certificate_expiration_time = input;
        self
    }
    /// Consumes the builder and constructs a [`DeviceNetworkProfileInfo`](crate::types::DeviceNetworkProfileInfo).
    pub fn build(self) -> crate::types::DeviceNetworkProfileInfo {
        crate::types::DeviceNetworkProfileInfo {
            network_profile_arn: self.network_profile_arn,
            certificate_arn: self.certificate_arn,
            certificate_expiration_time: self.certificate_expiration_time,
        }
    }
}
