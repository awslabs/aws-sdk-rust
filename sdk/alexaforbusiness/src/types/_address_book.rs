// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An address book with attributes.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AddressBook {
    /// <p>The ARN of the address book.</p>
    #[doc(hidden)]
    pub address_book_arn: std::option::Option<std::string::String>,
    /// <p>The name of the address book.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The description of the address book.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
}
impl AddressBook {
    /// <p>The ARN of the address book.</p>
    pub fn address_book_arn(&self) -> std::option::Option<&str> {
        self.address_book_arn.as_deref()
    }
    /// <p>The name of the address book.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The description of the address book.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl AddressBook {
    /// Creates a new builder-style object to manufacture [`AddressBook`](crate::types::AddressBook).
    pub fn builder() -> crate::types::builders::AddressBookBuilder {
        crate::types::builders::AddressBookBuilder::default()
    }
}

/// A builder for [`AddressBook`](crate::types::AddressBook).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AddressBookBuilder {
    pub(crate) address_book_arn: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
}
impl AddressBookBuilder {
    /// <p>The ARN of the address book.</p>
    pub fn address_book_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.address_book_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the address book.</p>
    pub fn set_address_book_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.address_book_arn = input;
        self
    }
    /// <p>The name of the address book.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the address book.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The description of the address book.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the address book.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Consumes the builder and constructs a [`AddressBook`](crate::types::AddressBook).
    pub fn build(self) -> crate::types::AddressBook {
        crate::types::AddressBook {
            address_book_arn: self.address_book_arn,
            name: self.name,
            description: self.description,
        }
    }
}
