// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_complete_snapshot;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_get_snapshot_block;

pub(crate) mod shape_list_changed_blocks;

pub(crate) mod shape_list_snapshot_blocks;

pub(crate) mod shape_put_snapshot_block;

pub(crate) mod shape_put_snapshot_block_input;

pub(crate) mod shape_start_snapshot;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_concurrent_limit_exceeded_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_get_snapshot_block_output;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_put_snapshot_block_output;

pub(crate) mod shape_request_throttled_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_snapshot_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_blocks;

pub(crate) mod shape_changed_blocks;

pub(crate) mod shape_tag;

pub(crate) mod shape_tags;

pub(crate) mod shape_block;

pub(crate) mod shape_changed_block;
